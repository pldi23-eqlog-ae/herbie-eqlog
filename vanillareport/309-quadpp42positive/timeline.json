[{"compiler":[[21,15]],"method":["search"],"sampling":[[12,0.29058954069728316,0.52852191630177,0.1808885430009468],[11,0.22037998724022145,0.629935715739748,0.1496842970200305],[10,0.15602122990458156,0.7098965960658461,0.13408217402957234],[9,0.10141379943797801,0.8113103955038241,0.08727580505819788],[8,0.062408491961832624,0.8737188874656567,0.06387262057251064],[7,0.0,0.9361273794274894,0.06387262057251064],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":151.06884765625,"type":"analyze"},{"outcomes":[["body",256,"invalid",85.150634765625,1580],["body",4096,"valid",102.957763671875,415],["body",512,"valid",37.781494140625,377],["body",1024,"valid",107.802734375,743],["body",2048,"valid",221.2734375,1155],["body",256,"valid",311.17578125,5566]],"time":876.31201171875,"type":"sample"},{"compiler":[[20,14]],"egraph":[[0,3,3,1.792e-6],[8,7154,88,0.046404376],[7,4449,88,0.035580292],[6,2225,88,0.019478416999999998],[5,1250,88,0.009329292],[4,757,88,0.004776667],[3,446,88,0.002529042],[2,198,88,0.001140625],[1,98,88,0.000458],[0,39,104,0.000157333]],"inputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 4 (*.f64 b c))))) (*.f64 2 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 c a))))) (*.f64 2 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 4 (*.f64 a b))))) (*.f64 2 a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b) (*.f64 a 2))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (/.f64 -1/2 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 4 (*.f64 b c))))) (*.f64 2 b))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (+.f64 (*.f64 a a) (*.f64 -4 (*.f64 b c))))) (*.f64 b 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a a (*.f64 (*.f64 -4 b) c))) a) (*.f64 b 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a a (*.f64 b (*.f64 c -4)))) a) (*.f64 b 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a))) a) (*.f64 b 2))","(*.f64 -1/2 (/.f64 (-.f64 a (sqrt.f64 (fma.f64 a a (*.f64 c (*.f64 b -4))))) b))","(*.f64 (/.f64 (-.f64 a (sqrt.f64 (fma.f64 a a (*.f64 c (*.f64 b -4))))) b) -1/2)","(*.f64 (-.f64 a (sqrt.f64 (fma.f64 a a (*.f64 c (*.f64 b -4))))) (/.f64 -1/2 b))","(*.f64 (-.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))) (/.f64 -1/2 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 c a))))) (*.f64 2 c))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 c 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (*.f64 c 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b) (*.f64 c 2))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (/.f64 -1/2 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 4 (*.f64 a b))))) (*.f64 2 a))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 4 (*.f64 b a))))) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 c c (*.f64 (*.f64 -4 b) a))) c) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 c c (*.f64 b (*.f64 a -4)))) c) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c))) c) (*.f64 a 2))","(*.f64 (-.f64 c (sqrt.f64 (fma.f64 c c (*.f64 b (*.f64 a -4))))) (/.f64 -1/2 a))","(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c))) c))","(*.f64 1/2 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c))) c) a))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":71.693115234375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[13,7847,22,0.069269583],[12,7759,22,0.063368708],[11,6913,22,0.055334417],[10,5784,22,0.04281325],[9,3916,22,0.031818708],[8,2636,22,0.021370874999999998],[7,1322,22,0.012353666999999999],[6,730,22,0.0062773329999999995],[5,415,22,0.0032203329999999997],[4,257,22,0.0016901249999999998],[3,161,22,0.0009324579999999999],[2,69,22,0.000473],[1,34,22,0.000200291],[0,15,26,7.925e-5]],"inputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 -4 (*.f64 a c))))) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))) b) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) b) (*.f64 a 2))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (/.f64 -1/2 a))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))) b) (/.f64 1/2 a))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (/.f64 -1/2 a))"]],"stop":[["node limit",1]],"time":81.406982421875,"type":"simplify"},{"compiler":[[35,23]],"time":0.5048828125,"type":"eval"},{"alts":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","next",36.52266464947487],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (/.f64 -1/2 a))","fresh",36.57000472605632]],"compiler":[[20,14],[18,12],[20,14],[18,12]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[36.48406722605632],"time":1.56005859375,"type":"prune"},{"compiler":[[73,32]],"locations":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))",0.0703125,true],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))",0.4180693557102868,true],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))",0.9960937500000001,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))",23.64914674034015,true]],"time":13.85302734375,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","c","-inf",0.37109375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","c","inf",0.56298828125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","c","0",0.44091796875],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","a","-inf",0.455078125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","a","inf",0.72900390625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","a","0",0.416015625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","b","-inf",0.31005859375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","b","inf",0.927001953125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","b","0",0.534912109375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","c","-inf",0.5419921875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","c","inf",0.406005859375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","c","0",0.36376953125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","a","-inf",0.319091796875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","a","inf",0.299072265625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","a","0",0.383056640625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","b","-inf",0.235107421875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","b","inf",0.408203125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","b","0",0.26904296875],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","c","-inf",0.201904296875],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","c","inf",0.2890625],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","c","0",0.303955078125],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","a","-inf",0.205078125],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","a","inf",0.302978515625],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","a","0",0.3369140625],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","b","-inf",0.1669921875],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","b","inf",0.27587890625],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","b","0",0.330078125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","c","-inf",0.55810546875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","c","inf",0.622802734375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","c","0",0.386962890625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","a","-inf",0.39697265625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","a","inf",0.614990234375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","a","0",0.39111328125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","b","-inf",0.346923828125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","b","inf",0.526123046875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","b","0",1.216064453125]],"time":15.97802734375,"type":"series"},{"count":[[4,334]],"egraph":[[2,4920,59,0.03383025],[1,343,62,0.006601208],[0,15,74,0.000415375]],"inputs":[["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2))) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) 1/2) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64))) (sqrt.f64 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 b b (*.f64 4 (*.f64 a c))) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16))) (hypot.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 (*.f64 a c) -4)) b)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a c) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (exp.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 b b (*.f64 4 (*.f64 a c))) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 b b (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 b b (*.f64 4 (*.f64 a c))) (pow.f64 b 4)) (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (*.f64 4 (*.f64 a c))) (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 b b (*.f64 4 (*.f64 a c))) (pow.f64 b 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (fma.f64 b b (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64))) (neg.f64 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 b b (*.f64 4 (*.f64 a c))) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16))) (neg.f64 (fma.f64 b b (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 a c) -4) 3)) (+.f64 (pow.f64 b 4) (-.f64 (*.f64 (*.f64 (*.f64 a c) -4) (*.f64 (*.f64 a c) -4)) (*.f64 (*.f64 b b) (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3) (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 3)) (+.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2) (-.f64 (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (*.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (*.f64 (*.f64 (*.f64 a c) -4) (*.f64 (*.f64 a c) -4))) (-.f64 (*.f64 b b) (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))) (-.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (pow.f64 (pow.f64 (exp.f64 c) a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 b) b) (+.f64 1 (expm1.f64 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (+.f64 1 (expm1.f64 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (exp.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 b) b) (/.f64 1 (pow.f64 (pow.f64 (exp.f64 c) a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (/.f64 1 (pow.f64 (pow.f64 (exp.f64 c) a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (exp.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (exp.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (*.f64 a c) -4)) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 c) a) 4)) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (*.f64 a c) -4)) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 c) a) 4)) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 (*.f64 a (neg.f64 c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 a c) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (sqrt.f64 (*.f64 a c))) (neg.f64 (*.f64 2 (sqrt.f64 (*.f64 a c)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (neg.f64 c)) 4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 b b (*.f64 4 (*.f64 a c))) (pow.f64 b 4))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 b b (*.f64 4 (*.f64 a c))) (pow.f64 b 4))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 b b (*.f64 4 (*.f64 a c))) (pow.f64 b 4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 b b (*.f64 4 (*.f64 a c))) (pow.f64 b 4))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 b b (*.f64 4 (*.f64 a c))) (pow.f64 b 4))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 b b (*.f64 4 (*.f64 a c))) (pow.f64 b 4))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 4 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 b b (*.f64 4 (*.f64 a c)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 b b (*.f64 4 (*.f64 a c)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 b b (*.f64 4 (*.f64 a c)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 b b (*.f64 4 (*.f64 a c)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 b b (*.f64 4 (*.f64 a c)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 b b (*.f64 4 (*.f64 a c)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 a) (neg.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 a c) -4)) (cbrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (*.f64 (*.f64 a c) -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))) (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (*.f64 a c) -4)) (sqrt.f64 (*.f64 (*.f64 a c) -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 2 (sqrt.f64 (*.f64 a c)))) (*.f64 2 (sqrt.f64 (*.f64 a c))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16))) (cbrt.f64 (*.f64 4 (*.f64 a c))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 4 a)) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 c) a (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (*.f64 a c)) 2)) (cbrt.f64 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (sqrt.f64 (*.f64 a c))) (sqrt.f64 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 b b) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b b (fma.f64 (*.f64 a c) -4 (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))) (/.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 b b (fma.f64 (*.f64 a c) -4 (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (fma.f64 b b (fma.f64 b b (fma.f64 (*.f64 a c) -4 (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (+.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 b b (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 b b (fma.f64 (*.f64 a c) -4 (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c)))) (neg.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (*.f64 b b)) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2))) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) 1/2) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 1/2) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (*.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1/2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) a) (/.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a) (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2) (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) 2) (/.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) 1) (/.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 1) (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (cbrt.f64 (*.f64 4 (*.f64 a a)))) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 a a))) (/.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (sqrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (sqrt.f64 (+.f64 a a))) (/.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 a a) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3) (pow.f64 (+.f64 a a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 1))))))"]],"rules":[["egg-rr",43],["egg-rr",64],["egg-rr",195],["egg-rr",32]],"stop":[["node limit",1]],"time":80.087890625,"type":"rewrite"},{"count":[[418,394]],"egraph":[[2,1614,1713,0.013817415999999999],[1,424,1866,0.003053958],[0,126,1974,0.000649083]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) b))","(+.f64 b (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (neg.f64 b))","(-.f64 (*.f64 (*.f64 (/.f64 c b) a) 2) b)","(-.f64 (*.f64 (/.f64 2 b) (*.f64 c a)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b)))","(-.f64 (*.f64 2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))) b)","(-.f64 (*.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a))) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) 4 (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4 (-.f64 (*.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a))) b))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) b))","(+.f64 b (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) b))","(+.f64 b (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 -2 (/.f64 b (*.f64 c a)))","(*.f64 (/.f64 c b) (*.f64 a -2))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (pow.f64 b 7)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 b -2 (*.f64 (*.f64 (/.f64 c b) a) 2))","(fma.f64 b -2 (*.f64 (/.f64 2 b) (*.f64 c a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) 4))))","(+.f64 (fma.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4 (*.f64 b -2)) (*.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 -2 (/.f64 b (*.f64 c a)))","(*.f64 (/.f64 c b) (*.f64 a -2))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (/.f64 (pow.f64 a 4) (/.f64 b (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -2 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2)))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 a 4) b) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6))))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 c 4) b) (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 20)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 -2 (/.f64 b (*.f64 c a)))","(*.f64 (/.f64 c b) (*.f64 a -2))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (/.f64 (pow.f64 a 4) (/.f64 b (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -2 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2)))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 a 4) b) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6))))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 c 4) b) (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 20)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(/.f64 (neg.f64 c) b)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (neg.f64 (/.f64 c b)))","(-.f64 (/.f64 (neg.f64 c) b) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(neg.f64 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b)) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b))) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(fma.f64 -1/4 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (*.f64 a (pow.f64 b 7))) (-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b))))","(*.f64 -1 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 c b) (/.f64 (neg.f64 b) a))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (+.f64 (/.f64 c b) (/.f64 (neg.f64 b) a)))","(+.f64 (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)) (-.f64 (/.f64 c b) (/.f64 b a)))","(fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (+.f64 (/.f64 c b) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (/.f64 (neg.f64 b) a))))","(+.f64 (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)) (+.f64 (-.f64 (/.f64 c b) (/.f64 b a)) (*.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))))))","(-.f64 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b))) (/.f64 b a))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(/.f64 (neg.f64 c) b)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (neg.f64 (/.f64 c b)))","(-.f64 (/.f64 (neg.f64 c) b) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(neg.f64 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b)) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (fma.f64 -1/4 (/.f64 (pow.f64 a 3) (/.f64 b (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -2 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2)))) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (-.f64 (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 -1/4 (/.f64 b (*.f64 (pow.f64 a 3) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))))))) (/.f64 c b)) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(-.f64 (fma.f64 -2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (*.f64 (/.f64 (*.f64 (pow.f64 a 3) -1/4) b) (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(/.f64 (neg.f64 c) b)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (neg.f64 (/.f64 c b)))","(-.f64 (/.f64 (neg.f64 c) b) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(neg.f64 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b)) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 c 4) a) (/.f64 (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (*.f64 -2 (/.f64 (*.f64 a a) (pow.f64 b 3))) 2)) b)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 c 4) a) (/.f64 (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 a 4) (pow.f64 b 6)))) b)) (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b))) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 c 4) (*.f64 b a)) (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 20)) (-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b))))"]],"stop":[["node limit",1]],"time":45.608154296875,"type":"simplify"},{"compiler":[[11162,6232]],"time":108.329833984375,"type":"eval"},{"alts":[["(/.f64 (+.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) (*.f64 2 a))","fresh",37.964754546632506],["(/.f64 (neg.f64 c) b)","fresh",38.18410318261545],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",44.5361859610908],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (*.f64 a c)) 2)) (cbrt.f64 (*.f64 a c)) (*.f64 b b)))) (*.f64 2 a))","fresh",36.562390919011754],["(/.f64 (/.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","fresh",48.231818725090406],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","next",33.04674983849664],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",51.9783068867363],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","fresh",36.50359847605632],["(*.f64 (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a) (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2))","fresh",47.55403244496707],["(pow.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)","fresh",45.785488501677285]],"compiler":[[20,15],[7,5],[10,6],[27,17],[32,20],[36,25],[14,10],[19,13],[30,20],[20,15],[20,15],[7,5],[10,6],[27,17],[32,20],[36,25],[14,10],[19,13],[30,20],[20,15]],"count":[[396,10]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[394,10],"picked":[1,0]}],"min-error":[4.3901777783548175],"time":105.280029296875,"type":"prune"},{"compiler":[[123,72]],"locations":[["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))",0.1875,true],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)",0.24609375,true],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))",0.2603756883332108,true],["(sqrt.f64 (*.f64 (*.f64 a c) -4))",12.858422897326255,true]],"time":25.119140625,"type":"localize"},{"count":[[4,2]],"series":[["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","c","-inf",4.803955078125],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","c","inf",1.64794921875],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","c","0",1.23681640625],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","a","-inf",1.48583984375],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","a","inf",1.329833984375],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","a","0",1.0458984375],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","b","-inf",0.56396484375],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","b","inf",0.890869140625],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","b","0",0.548095703125],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)","c","-inf",5.9560546875],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)","c","inf",7.35400390625],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)","c","0",19.794921875],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)","a","-inf",21.884033203125],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)","a","inf",24.80517578125],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)","a","0",15.885986328125],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)","b","-inf",1.59619140625],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)","b","inf",1.867919921875],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)","b","0",5.61279296875],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))","c","-inf",2.130126953125],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))","c","inf",1.72607421875],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))","c","0",1.768798828125],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))","a","-inf",3.141845703125],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))","a","inf",1.369140625],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))","a","0",1.48291015625],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))","b","-inf",0.39208984375],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))","b","inf",0.760986328125],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))","b","0",0.43994140625],["(sqrt.f64 (*.f64 (*.f64 a c) -4))","c","-inf",0.3779296875],["(sqrt.f64 (*.f64 (*.f64 a c) -4))","c","inf",0.7509765625],["(sqrt.f64 (*.f64 (*.f64 a c) -4))","c","0",0.52197265625],["(sqrt.f64 (*.f64 (*.f64 a c) -4))","a","-inf",0.39404296875],["(sqrt.f64 (*.f64 (*.f64 a c) -4))","a","inf",0.337890625],["(sqrt.f64 (*.f64 (*.f64 a c) -4))","a","0",0.68798828125]],"time":135.245849609375,"type":"series"},{"count":[[4,454]],"egraph":[[2,4552,71,0.034717167],[1,371,71,0.0066485],[0,17,71,0.000475417]],"inputs":[["(sqrt.f64 (*.f64 (*.f64 a c) -4))","(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))","(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)","(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) (cbrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 -4) (sqrt.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a) (sqrt.f64 (*.f64 c -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a) (pow.f64 (*.f64 c -4) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/4) (pow.f64 (*.f64 a (*.f64 c -4)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a c)) (sqrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 2)) (sqrt.f64 (cbrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 2) 1/2) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (*.f64 c -4)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 a (*.f64 c -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (fma.f64 -1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2)) (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (neg.f64 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 3)) (fma.f64 b b (-.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 b (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (-.f64 b (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (/.f64 1 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (/.f64 1 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1 (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1 (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1 (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (cbrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) b)))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2)) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 4)) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) 1/6) (sqrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2))) (cbrt.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 -2 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 -2 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (/.f64 (*.f64 a -2) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (/.f64 (*.f64 a -2) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2)) (*.f64 (*.f64 a -2) (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 a -2) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (*.f64 -2 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (neg.f64 (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2)) 1) (*.f64 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1) (*.f64 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b (*.f64 a -2)) (*.f64 (*.f64 a -2) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 4 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (*.f64 a -2))) (sqrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 b (/.f64 -1/2 a)) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) 3)) (fma.f64 (*.f64 b (/.f64 -1/2 a)) (*.f64 b (/.f64 -1/2 a)) (fma.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) (*.f64 (*.f64 b (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 b (/.f64 -1/2 a)) (*.f64 b (/.f64 -1/2 a))) (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a)))) (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2)) (/.f64 -1/2 a)) (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (/.f64 -1/2 a)) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2)) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -2 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 3) (pow.f64 (*.f64 a -2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 -1/2 a))))))))"]],"rules":[["egg-rr",318],["egg-rr",21],["egg-rr",88],["egg-rr",27]],"stop":[["node limit",1]],"time":142.326171875,"type":"rewrite"},{"count":[[456,457]],"egraph":[[9,86,10,0.001089582],[8,69,10,0.0009365409999999999],[7,58,10,0.000723416],[6,48,10,0.000561208],[5,40,10,0.000419916],[4,32,10,0.000306374],[3,26,10,0.000217416],[2,20,10,0.00014324900000000002],[1,13,10,8.979100000000001e-5],[0,8,10,4.2458e-5]],"inputs":[["(*.f64 2 b)","(*.f64 -1 (/.f64 b a))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 b)","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(/.f64 (neg.f64 b) a)"]],"stop":[["saturated",1]],"time":22.593017578125,"type":"simplify"},{"compiler":[[34559,23559]],"time":348.117919921875,"type":"eval"},{"alts":[["(/.f64 (+.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) (*.f64 2 a))","fresh",37.964754546632506],["(/.f64 (neg.f64 c) b)","fresh",38.18410318261545],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",44.5361859610908],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (*.f64 a c)) 2)) (cbrt.f64 (*.f64 a c)) (*.f64 b b)))) (*.f64 2 a))","fresh",36.562390919011754],["(/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (/.f64 (*.f64 a -2) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))","fresh",37.929189848250715],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","done",33.04674983849664],["(+.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","next",36.26683536804775],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",51.9783068867363],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","fresh",36.50359847605632],["(/.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 a -2) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))","fresh",49.73067109758472]],"compiler":[[20,15],[7,5],[10,6],[27,17],[32,23],[36,25],[106,80],[14,10],[19,13],[30,18],[20,15],[7,5],[10,6],[27,17],[32,23],[106,80],[14,10],[19,13],[30,18]],"count":[[583,10]],"kept":[{"done":[0,0],"fresh":[9,6],"new":[573,3],"picked":[1,1]}],"min-error":[4.3862713581032615],"time":189.531005859375,"type":"prune"},{"compiler":[[376,276]],"locations":[["(pow.f64 (cbrt.f64 (*.f64 a -2)) 2)",0.48732377930532605,true],["(fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))",8.60901154340946,true],["(sqrt.f64 (*.f64 a (*.f64 c -4)))",12.858422897326255,true],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))",42.1715265909378,true]],"time":89.0478515625,"type":"localize"},{"count":[[4,5]],"series":[["(pow.f64 (cbrt.f64 (*.f64 a -2)) 2)","a","-inf",0.5400390625],["(pow.f64 (cbrt.f64 (*.f64 a -2)) 2)","a","inf",0.4189453125],["(pow.f64 (cbrt.f64 (*.f64 a -2)) 2)","a","0",0.5048828125],["(fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","c","-inf",1.0],["(fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","c","inf",1.1611328125],["(fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","c","0",1.031982421875],["(fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","a","-inf",0.826904296875],["(fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","a","inf",0.885009765625],["(fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","a","0",0.8359375],["(fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","b","-inf",0.38720703125],["(fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","b","inf",0.858154296875],["(fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","b","0",0.403076171875],["(sqrt.f64 (*.f64 a (*.f64 c -4)))","c","-inf",0.200927734375],["(sqrt.f64 (*.f64 a (*.f64 c -4)))","c","inf",0.23779296875],["(sqrt.f64 (*.f64 a (*.f64 c -4)))","c","0",0.220947265625],["(sqrt.f64 (*.f64 a (*.f64 c -4)))","a","-inf",0.23388671875],["(sqrt.f64 (*.f64 a (*.f64 c -4)))","a","inf",0.214111328125],["(sqrt.f64 (*.f64 a (*.f64 c -4)))","a","0",0.257080078125],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))","b","-inf",0.52197265625],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))","b","inf",1.5029296875],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))","b","0",6.010986328125],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))","c","-inf",8.672119140625],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))","c","inf",19.572021484375],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))","c","0",3.614990234375],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))","a","-inf",3.175048828125],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))","a","inf",2.84619140625],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))","a","0",2.010009765625]],"time":58.736083984375,"type":"series"},{"count":[[4,98]],"egraph":[[2,6966,64,0.041849583999999995],[1,551,64,0.01002175],[0,26,126,0.000742375]],"inputs":[["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))","(sqrt.f64 (*.f64 a (*.f64 c -4)))","(fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","(pow.f64 (cbrt.f64 (*.f64 a -2)) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1/4) (cbrt.f64 (/.f64 -1/2 a))) (+.f64 (/.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1/4)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1/4) (pow.f64 (cbrt.f64 (*.f64 a -2)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1/4) (pow.f64 (cbrt.f64 (*.f64 a -2)) -2)) (+.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1/4) (cbrt.f64 (/.f64 -1/2 a))) (*.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1/4) (cbrt.f64 (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)) 2) (cbrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)) (sqrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 3)) (+.f64 (/.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 4 (*.f64 a a))) (-.f64 (/.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 4 (*.f64 a a))) (/.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 4 (*.f64 a a))) (/.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 4 (*.f64 a a)))) (-.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 0)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -4 (*.f64 a c))) (cbrt.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 c -4)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a) (sqrt.f64 (*.f64 c -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 -4 (*.f64 a c)) 1/4) (pow.f64 (*.f64 -4 (*.f64 a c)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 -4 (*.f64 a c))) 2)) (sqrt.f64 (cbrt.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a c)) (sqrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 -4 (*.f64 a c))) 2) 1/2) (pow.f64 (cbrt.f64 (*.f64 -4 (*.f64 a c))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a c) 1/2) (sqrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -4 (*.f64 a c)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -4 (*.f64 a c)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -4 (*.f64 a c)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -4 (*.f64 a c)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -4 (*.f64 a c))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) (*.f64 b (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 b (/.f64 -1/2 a)) 0) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))) (pow.f64 (cbrt.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))) 2) (cbrt.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))) (sqrt.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 b (/.f64 -1/2 a)) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)) 3)) (+.f64 (pow.f64 (*.f64 b (/.f64 -1/2 a)) 2) (-.f64 (/.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 4 (*.f64 a a))) (*.f64 (*.f64 b (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 b (/.f64 -1/2 a)) 2) (/.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 4 (*.f64 a a)))) (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b) (/.f64 -1/2 a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a -2)) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 a -2))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 a -2)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 a -2))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 a -2))) (cbrt.f64 (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 a -2)) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 a -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 -2) (cbrt.f64 (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) 2) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a -2)) (pow.f64 (*.f64 a -2) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a -2) 1/6) (*.f64 (pow.f64 (*.f64 a -2) 1/6) (cbrt.f64 (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 a -2)) (cbrt.f64 a)) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 a -2)) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 a -2))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 a -2)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 4 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (cbrt.f64 (*.f64 a -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (cbrt.f64 (*.f64 a -2)))) 1))))))"]],"rules":[["egg-rr",21],["egg-rr",24],["egg-rr",27],["egg-rr",26]],"stop":[["node limit",1]],"time":71.0380859375,"type":"rewrite"},{"count":[[103,106]],"egraph":[[1882,7998,28,2.115342377],[1881,7994,28,2.114101252],[1880,7990,28,2.1126008350000003],[1879,7986,28,2.111106002],[1878,7982,28,2.109588585],[1877,7978,28,2.108067668],[1876,7974,28,2.1065605009999997],[1875,7970,28,2.1050686679999995],[1874,7966,28,2.1035765009999996],[1873,7962,28,2.1020902099999996],[1872,7958,28,2.1005692509999996],[1871,7954,28,2.0990597509999995],[1870,7950,28,2.0975682089999994],[1869,7946,28,2.0960762089999996],[1868,7942,28,2.0945857509999994],[1867,7938,28,2.0930245429999994],[1866,7934,28,2.0915298339999993],[1865,7930,28,2.0900171259999993],[1864,7926,28,2.088521375999999],[1863,7922,28,2.087036375999999],[1862,7918,28,2.085537875999999],[1861,7914,28,2.0840399179999993],[1860,7910,28,2.0825417929999994],[1859,7906,28,2.0810376679999996],[1858,7902,28,2.0795409599999997],[1857,7898,28,2.0780532099999998],[1856,7894,28,2.0765200019999996],[1855,7890,28,2.0750318349999994],[1854,7886,28,2.0735291679999994],[1853,7882,28,2.0720247929999993],[1852,7878,28,2.0705374599999993],[1851,7874,28,2.0690330019999994],[1850,7870,28,2.0675335439999993],[1849,7866,28,2.066054876999999],[1848,7862,28,2.064576751999999],[1847,7858,28,2.0630966689999988],[1846,7854,28,2.061614918999999],[1845,7850,28,2.0601129599999988],[1844,7846,28,2.058626459999999],[1843,7842,28,2.057134501999999],[1842,7838,28,2.0556400019999987],[1841,7834,28,2.054155251999999],[1840,7830,28,2.0526600439999987],[1839,7826,28,2.051186543999999],[1838,7822,28,2.0497080439999986],[1837,7818,28,2.0482253769999987],[1836,7814,28,2.046739751999999],[1835,7810,28,2.045264126999999],[1834,7806,28,2.043792043999999],[1833,7802,28,2.042321709999999],[1832,7798,28,2.040846501999999],[1831,7794,28,2.039373543999999],[1830,7790,28,2.037894084999999],[1829,7786,28,2.0364237519999993],[1828,7782,28,2.0349499189999993],[1827,7778,28,2.0334783349999994],[1826,7774,28,2.0320069189999996],[1825,7770,28,2.0305359599999995],[1824,7766,28,2.0290431269999996],[1823,7762,28,2.0275754599999996],[1822,7758,28,2.0261078769999994],[1821,7754,28,2.0246419189999996],[1820,7750,28,2.0231729599999997],[1819,7746,28,2.021707002],[1818,7742,28,2.020237586],[1817,7738,28,2.018772044],[1816,7734,28,2.0173040859999998],[1815,7730,28,2.015837461],[1814,7726,28,2.014369461],[1813,7722,28,2.0128799199999996],[1812,7718,28,2.011417628],[1811,7714,28,2.009951503],[1810,7710,28,2.008487587],[1809,7706,28,2.0070227949999997],[1808,7702,28,2.0055588779999995],[1807,7698,28,2.0040922119999998],[1806,7694,28,2.0026239199999996],[1805,7690,28,2.0011569199999997],[1804,7686,28,1.9996922119999998],[1803,7682,28,1.9982241699999999],[1802,7678,28,1.9967567539999997],[1801,7674,28,1.9952888379999998],[1800,7670,28,1.993823754],[1799,7666,28,1.9923643379999998],[1798,7662,28,1.9909042959999999],[1797,7658,28,1.9894471289999998],[1796,7654,28,1.9879872539999996],[1795,7650,28,1.9865262119999996],[1794,7646,28,1.9850638789999995],[1793,7642,28,1.9836070869999995],[1792,7638,28,1.9821445869999996],[1791,7634,28,1.9806706699999996],[1790,7630,28,1.9792116699999995],[1789,7626,28,1.9777516289999995],[1788,7622,28,1.9762919199999995],[1787,7618,28,1.9748364619999996],[1786,7614,28,1.9733766699999997],[1785,7610,28,1.9719197949999998],[1784,7606,28,1.970461503],[1783,7602,28,1.9690062949999998],[1782,7598,28,1.9675490869999999],[1781,7594,28,1.966095545],[1780,7590,28,1.9646432109999998],[1779,7586,28,1.9631890029999999],[1778,7582,28,1.96173242],[1777,7578,28,1.960271337],[1776,7574,28,1.958808795],[1775,7570,28,1.957352753],[1774,7566,28,1.955859753],[1773,7562,28,1.954368003],[1772,7558,28,1.952908044],[1771,7554,28,1.951431586],[1770,7550,28,1.949969878],[1769,7546,28,1.9484805440000001],[1768,7542,28,1.9470193780000002],[1767,7538,28,1.9455728360000002],[1766,7534,28,1.9441111280000003],[1765,7530,28,1.9426598360000003],[1764,7526,28,1.9412046280000002],[1763,7522,28,1.9397318360000002],[1762,7518,28,1.9382500030000003],[1761,7514,28,1.9368117110000003],[1760,7510,28,1.9353514190000003],[1759,7506,28,1.9339158360000004],[1758,7502,28,1.9324287940000004],[1757,7498,28,1.9309851280000006],[1756,7494,28,1.9295325030000006],[1755,7490,28,1.9280881700000005],[1754,7486,28,1.9266260860000006],[1753,7482,28,1.9251850450000005],[1752,7478,28,1.9237075450000005],[1751,7474,28,1.9222541280000005],[1750,7470,28,1.9208177950000005],[1749,7466,28,1.9193445860000005],[1748,7462,28,1.9179017110000005],[1747,7458,28,1.9164287950000005],[1746,7454,28,1.9149789610000005],[1745,7450,28,1.9135238770000005],[1744,7446,28,1.9120837940000004],[1743,7442,28,1.9106416690000003],[1742,7438,28,1.9092053770000004],[1741,7434,28,1.9077377110000004],[1740,7430,28,1.9062907940000005],[1739,7426,28,1.9048427530000005],[1738,7422,28,1.9033892110000006],[1737,7418,28,1.9019296690000005],[1736,7414,28,1.9004702100000004],[1735,7410,28,1.8990255020000004],[1734,7406,28,1.8975817520000005],[1733,7402,28,1.8961372100000005],[1732,7398,28,1.8947032100000005],[1731,7394,28,1.8932700430000005],[1730,7390,28,1.8917850020000004],[1729,7386,28,1.8903519180000004],[1728,7382,28,1.8888865850000003],[1727,7378,28,1.8874310850000002],[1726,7374,28,1.8859900850000002],[1725,7370,28,1.8845370020000003],[1724,7366,28,1.8830811270000003],[1723,7362,28,1.8816404600000003],[1722,7358,28,1.8802092100000003],[1721,7354,28,1.8787792100000003],[1720,7350,28,1.8773474600000002],[1719,7346,28,1.8758967930000001],[1718,7342,28,1.8744645430000002],[1717,7338,28,1.8730433350000002],[1716,7334,28,1.8716158770000002],[1715,7330,28,1.8701862930000002],[1714,7326,28,1.8687380850000002],[1713,7322,28,1.867312502],[1712,7318,28,1.865879085],[1711,7314,28,1.864446293],[1710,7310,28,1.863021502],[1709,7306,28,1.8615955020000001],[1708,7302,28,1.860132335],[1707,7298,28,1.8586864600000002],[1706,7294,28,1.857257002],[1705,7290,28,1.8558317100000001],[1704,7286,28,1.8544093350000002],[1703,7282,28,1.8529896270000001],[1702,7278,28,1.851527085],[1701,7274,28,1.850102377],[1700,7270,28,1.84867271],[1699,7266,28,1.847249543],[1698,7262,28,1.845822877],[1697,7258,28,1.844405918],[1696,7254,28,1.8429788770000002],[1695,7250,28,1.8415639600000002],[1694,7246,28,1.8401347930000003],[1693,7242,28,1.8387129600000003],[1692,7238,28,1.8372921270000002],[1691,7234,28,1.8358103770000003],[1690,7230,28,1.8343570020000002],[1689,7226,28,1.8329260440000001],[1688,7222,28,1.8315089190000002],[1687,7218,28,1.8300805860000002],[1686,7214,28,1.8286640020000002],[1685,7210,28,1.8272058360000003],[1684,7206,28,1.8257851690000002],[1683,7202,28,1.8243492940000001],[1682,7198,28,1.822915877],[1681,7194,28,1.821496794],[1680,7190,28,1.820086586],[1679,7186,28,1.818664211],[1678,7182,28,1.817234211],[1677,7178,28,1.815800503],[1676,7174,28,1.8143780029999999],[1675,7170,28,1.8129588369999998],[1674,7166,28,1.8115107949999998],[1673,7162,28,1.809757795],[1672,7158,28,1.808323545],[1671,7154,28,1.806903378],[1670,7150,28,1.805479962],[1669,7146,28,1.804063712],[1668,7142,28,1.80263492],[1667,7138,28,1.801221753],[1666,7134,28,1.7997695870000001],[1665,7130,28,1.798348045],[1664,7126,28,1.796930087],[1663,7122,28,1.795494295],[1662,7118,28,1.7940523369999999],[1661,7114,28,1.792632587],[1660,7110,28,1.79121567],[1659,7106,28,1.789795587],[1658,7102,28,1.7883796699999999],[1657,7098,28,1.78688342],[1656,7094,28,1.785471836],[1655,7090,28,1.7840857529999998],[1654,7086,28,1.7826596279999998],[1653,7082,28,1.7812787529999998],[1652,7078,28,1.7798689609999998],[1651,7074,28,1.7784882949999998],[1650,7070,28,1.7770911699999998],[1649,7066,28,1.7757150029999997],[1648,7062,28,1.7743379619999997],[1647,7058,28,1.7729635869999998],[1646,7054,28,1.7715470459999998],[1645,7050,28,1.7701431289999998],[1644,7046,28,1.7687201289999999],[1643,7042,28,1.7673147539999998],[1642,7038,28,1.7659282539999999],[1641,7034,28,1.764557671],[1640,7030,28,1.763158588],[1639,7026,28,1.761786088],[1638,7022,28,1.7603722130000001],[1637,7018,28,1.758988838],[1636,7014,28,1.7576036290000001],[1635,7010,28,1.7562205880000001],[1634,7006,28,1.7548156710000002],[1633,7002,28,1.7534495880000003],[1632,6998,28,1.7520746300000003],[1631,6994,28,1.7507054630000003],[1630,6990,28,1.7493334630000004],[1629,6986,28,1.7479412540000003],[1628,6982,28,1.7465370880000004],[1627,6978,28,1.7451696290000005],[1626,6974,28,1.7437612540000005],[1625,6970,28,1.7423656700000005],[1624,6966,28,1.7409901290000005],[1623,6962,28,1.7396051700000006],[1622,6958,28,1.7382292950000007],[1621,6954,28,1.7368501700000007],[1620,6950,28,1.7354560040000007],[1619,6946,28,1.7340746700000007],[1618,6942,28,1.7327097120000008],[1617,6938,28,1.7312885040000008],[1616,6934,28,1.7299238790000009],[1615,6930,28,1.728557004000001],[1614,6926,28,1.727181754000001],[1613,6922,28,1.725808129000001],[1612,6918,28,1.7244420880000009],[1611,6914,28,1.7230511300000009],[1610,6910,28,1.7216896300000009],[1609,6906,28,1.720327463000001],[1608,6902,28,1.7189330880000009],[1607,6898,28,1.717565921000001],[1606,6894,28,1.7162041710000009],[1605,6890,28,1.7148035050000008],[1604,6886,28,1.7134312550000008],[1603,6882,28,1.712073755000001],[1602,6878,28,1.7106834210000008],[1601,6874,28,1.7093244630000008],[1600,6870,28,1.7079632130000009],[1599,6866,28,1.706609880000001],[1598,6862,28,1.7052435460000008],[1597,6858,28,1.7038861300000008],[1596,6854,28,1.7025281720000007],[1595,6850,28,1.7011697550000007],[1594,6846,28,1.6998150470000006],[1593,6842,28,1.6984616300000006],[1592,6838,28,1.6971076300000005],[1591,6834,28,1.6957560050000005],[1590,6830,28,1.6944029220000005],[1589,6826,28,1.6930477970000006],[1588,6822,28,1.6916542130000007],[1587,6818,28,1.6902950460000008],[1586,6814,28,1.6889268800000008],[1585,6810,28,1.687574130000001],[1584,6806,28,1.686161880000001],[1583,6802,28,1.6848070050000008],[1582,6798,28,1.6834001720000007],[1581,6794,28,1.6819857130000007],[1580,6790,28,1.6806204630000006],[1579,6786,28,1.6792699210000006],[1578,6782,28,1.6778670050000006],[1577,6778,28,1.6765185050000007],[1576,6774,28,1.6751317550000007],[1575,6770,28,1.6737706300000006],[1574,6766,28,1.6724196300000005],[1573,6762,28,1.6710666720000005],[1572,6758,28,1.6697099630000005],[1571,6754,28,1.6683609220000004],[1570,6750,28,1.6669922130000003],[1569,6746,28,1.6656516720000003],[1568,6742,28,1.6642952130000004],[1567,6738,28,1.6629535050000004],[1566,6734,28,1.6616038800000004],[1565,6730,28,1.6602585890000003],[1564,6726,28,1.6588533800000003],[1563,6722,28,1.6575021720000003],[1562,6718,28,1.6561420050000002],[1561,6714,28,1.6547931710000001],[1560,6710,28,1.6534407130000002],[1559,6706,28,1.6520966710000002],[1558,6702,28,1.6507019210000002],[1557,6698,28,1.6493444630000003],[1556,6694,28,1.6479994630000003],[1555,6690,28,1.6466414630000004],[1554,6686,28,1.6452985880000004],[1553,6682,28,1.6439387130000005],[1552,6678,28,1.6425675050000006],[1551,6674,28,1.6412200050000005],[1550,6670,28,1.6398759210000005],[1549,6666,28,1.6385282960000005],[1548,6662,28,1.6371779210000006],[1547,6658,28,1.6358397130000006],[1546,6654,28,1.6344383380000007],[1545,6650,28,1.6331015880000006],[1544,6646,28,1.6317339210000006],[1543,6642,28,1.6303908370000006],[1542,6638,28,1.6290498370000006],[1541,6634,28,1.6277152950000007],[1540,6630,28,1.6263402530000006],[1539,6626,28,1.6250046280000006],[1538,6622,28,1.6236456280000005],[1537,6618,28,1.6222770860000004],[1536,6614,28,1.6209375030000004],[1535,6610,28,1.6196032950000003],[1534,6606,28,1.6182604200000004],[1533,6602,28,1.6169104200000004],[1532,6598,28,1.6155759620000003],[1531,6594,28,1.6142461290000003],[1530,6590,28,1.6129043370000002],[1529,6586,28,1.6115759210000002],[1528,6582,28,1.6101827120000003],[1527,6578,28,1.6088442120000004],[1526,6574,28,1.6075117120000004],[1525,6570,28,1.6061594210000005],[1524,6566,28,1.6048168790000006],[1523,6562,28,1.6034867540000006],[1522,6558,28,1.6021000040000006],[1521,6554,28,1.6007725450000005],[1520,6550,28,1.5994363790000006],[1519,6546,28,1.5981005450000005],[1518,6542,28,1.5967663370000005],[1517,6538,28,1.5954376700000006],[1516,6534,28,1.5940530870000005],[1515,6530,28,1.5927175040000006],[1514,6526,28,1.5913833370000006],[1513,6522,28,1.5900415450000005],[1512,6518,28,1.5887024620000005],[1511,6514,28,1.5873808790000006],[1510,6510,28,1.5859767950000005],[1509,6506,28,1.5846567950000006],[1508,6502,28,1.5833042950000005],[1507,6498,28,1.5819588780000005],[1506,6494,28,1.5806277950000005],[1505,6490,28,1.5793039200000005],[1504,6486,28,1.5779794200000006],[1503,6482,28,1.5766345450000006],[1502,6478,28,1.5752962950000005],[1501,6474,28,1.5739673360000004],[1500,6470,28,1.5726415450000004],[1499,6466,28,1.5713227950000004],[1498,6462,28,1.5699600030000005],[1497,6458,28,1.5685902110000005],[1496,6454,28,1.5672603780000005],[1495,6450,28,1.5659323780000005],[1494,6446,28,1.5646091280000005],[1493,6442,28,1.5632908780000005],[1492,6438,28,1.5619323780000005],[1491,6434,28,1.5606057530000006],[1490,6430,28,1.5592562530000007],[1489,6426,28,1.5578755860000006],[1488,6422,28,1.5565555030000007],[1487,6418,28,1.5552207530000006],[1486,6414,28,1.5538450870000007],[1485,6410,28,1.5524907120000007],[1484,6406,28,1.5511133370000008],[1483,6402,28,1.5497710040000008],[1482,6398,28,1.5484299200000007],[1481,6394,28,1.5471127110000007],[1480,6390,28,1.5457327950000006],[1479,6386,28,1.5443851280000005],[1478,6382,28,1.5430663370000004],[1477,6378,28,1.5417416700000004],[1476,6374,28,1.5404051290000005],[1475,6370,28,1.5390889620000006],[1474,6366,28,1.5377107540000006],[1473,6362,28,1.5363915040000005],[1472,6358,28,1.5350347540000004],[1471,6354,28,1.5337161290000005],[1470,6350,28,1.5323957540000006],[1469,6346,28,1.5310752540000006],[1468,6342,28,1.5297064620000005],[1467,6338,28,1.5283887120000006],[1466,6334,28,1.5270073790000005],[1465,6330,28,1.5256475460000005],[1464,6326,28,1.5243195870000006],[1463,6322,28,1.5229923790000006],[1462,6318,28,1.5216313370000005],[1461,6314,28,1.5202822540000005],[1460,6310,28,1.5189065880000006],[1459,6306,28,1.5175541710000005],[1458,6302,28,1.5162447960000005],[1457,6298,28,1.5149079210000005],[1456,6294,28,1.5135545460000004],[1455,6290,28,1.5122049630000003],[1454,6286,28,1.5108286290000004],[1453,6282,28,1.5095192540000004],[1452,6278,28,1.5082009200000004],[1451,6274,28,1.5068841280000005],[1450,6270,28,1.5055363780000004],[1449,6266,28,1.5042240860000005],[1448,6262,28,1.5029136280000004],[1447,6258,28,1.5016102530000004],[1446,6254,28,1.5002862950000004],[1445,6250,28,1.4989788370000003],[1444,6246,28,1.4976123780000004],[1443,6242,28,1.4963099610000004],[1442,6238,28,1.4949705030000005],[1441,6234,28,1.4936437110000005],[1440,6230,28,1.4923420030000005],[1439,6226,28,1.4910257940000005],[1438,6222,28,1.4896897110000005],[1437,6218,28,1.4883802110000004],[1436,6214,28,1.4870727940000004],[1435,6210,28,1.4857581280000003],[1434,6206,28,1.4844568360000003],[1433,6202,28,1.4831557940000004],[1432,6198,28,1.4817997940000005],[1431,6194,28,1.4804821690000005],[1430,6190,28,1.4791499600000004],[1429,6186,28,1.4778210020000004],[1428,6182,28,1.4765189190000005],[1427,6178,28,1.4752078780000006],[1426,6174,28,1.4738798780000006],[1425,6170,28,1.4725750450000006],[1424,6166,28,1.4712745860000005],[1423,6162,28,1.4699627950000005],[1422,6158,28,1.4686535450000004],[1421,6154,28,1.4673406280000005],[1420,6150,28,1.4660022950000005],[1419,6146,28,1.4646987950000006],[1418,6142,28,1.4633950860000005],[1417,6138,28,1.4620977110000004],[1416,6134,28,1.4607745860000003],[1415,6130,28,1.4594658780000003],[1414,6126,28,1.4581255030000002],[1413,6122,28,1.4568087530000002],[1412,6118,28,1.4554989610000002],[1411,6114,28,1.4541795450000001],[1410,6110,28,1.45285017],[1409,6106,28,1.451549378],[1408,6102,28,1.450221753],[1407,6098,28,1.448877961],[1406,6094,28,1.447565086],[1405,6090,28,1.44626067],[1404,6086,28,1.444953336],[1403,6082,28,1.44362042],[1402,6078,28,1.442304336],[1401,6074,28,1.440985753],[1400,6070,28,1.4396745450000001],[1399,6066,28,1.4383537110000002],[1398,6062,28,1.4370649190000002],[1397,6058,28,1.4357176690000002],[1396,6054,28,1.4344005440000003],[1395,6050,28,1.4330891690000003],[1394,6046,28,1.4317752940000004],[1393,6042,28,1.4304870440000004],[1392,6038,28,1.4291865860000004],[1391,6034,28,1.4278907110000003],[1390,6030,28,1.4266022110000003],[1389,6026,28,1.4252556270000003],[1388,6022,28,1.4239512110000003],[1387,6018,28,1.4226627110000003],[1386,6014,28,1.4213395030000002],[1385,6010,28,1.4200538780000003],[1384,6006,28,1.4187660030000002],[1383,6002,28,1.4174342950000003],[1382,5998,28,1.4161431280000003],[1381,5994,28,1.4148525450000002],[1380,5990,28,1.4135648360000002],[1379,5986,28,1.4122727950000002],[1378,5982,28,1.4109838780000004],[1377,5978,28,1.4096675030000003],[1376,5974,28,1.4083665860000003],[1375,5970,28,1.4070763780000004],[1374,5966,28,1.4057910030000005],[1373,5962,28,1.4045110870000004],[1372,5958,28,1.4032225030000003],[1371,5954,28,1.4019175030000004],[1370,5950,28,1.4006292950000003],[1369,5946,28,1.3992760870000003],[1368,5942,28,1.3979528370000003],[1367,5938,28,1.3966562530000002],[1366,5934,28,1.3953563780000002],[1365,5930,28,1.3940093780000002],[1364,5926,28,1.3927140440000003],[1363,5922,28,1.3914177940000003],[1362,5918,28,1.3901207520000003],[1361,5914,28,1.3888348360000002],[1360,5910,28,1.3875468360000003],[1359,5906,28,1.3862580440000003],[1358,5902,28,1.3849435020000003],[1357,5898,28,1.3836571270000002],[1356,5894,28,1.3823618350000002],[1355,5890,28,1.3810665850000001],[1354,5886,28,1.3797333770000002],[1353,5882,28,1.3783488770000003],[1352,5878,28,1.3770014600000002],[1351,5874,28,1.3756905010000002],[1350,5870,28,1.3743992930000002],[1349,5866,28,1.3731175850000001],[1348,5862,28,1.3718209600000002],[1347,5858,28,1.3704795850000002],[1346,5854,28,1.3691310850000002],[1345,5850,28,1.3678440010000001],[1344,5846,28,1.3665508350000002],[1343,5842,28,1.3651839600000002],[1342,5838,28,1.363746668],[1341,5834,28,1.362314209],[1340,5830,28,1.360948709],[1339,5826,28,1.359643876],[1338,5822,28,1.358351209],[1337,5818,28,1.357048376],[1336,5814,28,1.355773543],[1335,5810,28,1.354435918],[1334,5806,28,1.3531371680000002],[1333,5802,28,1.3517975020000002],[1332,5798,28,1.3505244600000001],[1331,5794,28,1.349204668],[1330,5790,28,1.347897168],[1329,5786,28,1.3462655430000001],[1328,5782,28,1.344865959],[1327,5778,28,1.343565334],[1326,5774,28,1.342300417],[1325,5770,28,1.34101875],[1324,5766,28,1.339757667],[1323,5762,28,1.3384327089999999],[1322,5758,28,1.337169959],[1321,5754,28,1.3358755],[1320,5750,28,1.334615584],[1319,5746,28,1.333326834],[1318,5742,28,1.332010126],[1317,5738,28,1.330536126],[1316,5734,28,1.329237751],[1315,5730,28,1.327907209],[1314,5726,28,1.3266258759999998],[1313,5722,28,1.3253602509999998],[1312,5718,28,1.3240792089999998],[1311,5714,28,1.3227662509999998],[1310,5710,28,1.3214893759999997],[1309,5706,28,1.3202273339999997],[1308,5702,28,1.3189621259999997],[1307,5698,28,1.3176794179999998],[1306,5694,28,1.3164188339999998],[1305,5690,28,1.3151234179999998],[1304,5686,28,1.3138432509999998],[1303,5682,28,1.3124976679999998],[1302,5678,28,1.3111737519999997],[1301,5674,28,1.3098288349999998],[1300,5670,28,1.3084845019999998],[1299,5666,28,1.3071697099999997],[1298,5662,28,1.3058193349999998],[1297,5658,28,1.3045429189999997],[1296,5654,28,1.3032376689999998],[1295,5650,28,1.3019287939999997],[1294,5646,28,1.3006341689999996],[1293,5642,28,1.2993406689999996],[1292,5638,28,1.2979946689999995],[1291,5634,28,1.2966824609999994],[1290,5630,28,1.2952482109999994],[1289,5626,28,1.2939272109999995],[1288,5622,28,1.2926370029999996],[1287,5618,28,1.2913608359999995],[1286,5614,28,1.2901101269999995],[1285,5610,28,1.2888559599999996],[1284,5606,28,1.2876062929999996],[1283,5602,28,1.2863523759999995],[1282,5598,28,1.2850982929999994],[1281,5594,28,1.2838454179999994],[1280,5590,28,1.2825977099999994],[1279,5586,28,1.2813472929999994],[1278,5582,28,1.2800994599999993],[1277,5578,28,1.2788486269999992],[1276,5574,28,1.2775848349999992],[1275,5570,28,1.2763208349999993],[1274,5566,28,1.2750648349999993],[1273,5562,28,1.2738185849999994],[1272,5558,28,1.2725310849999993],[1271,5554,28,1.2712402519999992],[1270,5550,28,1.2699767519999992],[1269,5546,28,1.268712084999999],[1268,5542,28,1.2674594179999992],[1267,5538,28,1.2662127929999991],[1266,5534,28,1.2648956679999992],[1265,5530,28,1.2636515429999993],[1264,5526,28,1.2624093349999992],[1263,5522,28,1.2611654599999993],[1262,5518,28,1.2599172939999992],[1261,5514,28,1.2586672519999993],[1260,5510,28,1.2574057099999993],[1259,5506,28,1.2561509179999995],[1258,5502,28,1.2549136679999995],[1257,5498,28,1.2536723769999996],[1256,5494,28,1.2524374179999995],[1255,5490,28,1.2511884179999995],[1254,5486,28,1.2499485019999994],[1253,5482,28,1.2486992099999994],[1252,5478,28,1.2474653769999995],[1251,5474,28,1.2462278349999996],[1250,5470,28,1.2449920849999996],[1249,5466,28,1.2437280439999996],[1248,5462,28,1.2424928349999995],[1247,5458,28,1.2412557099999995],[1246,5454,28,1.2400132519999996],[1245,5450,28,1.2387649599999995],[1244,5446,28,1.2375270019999995],[1243,5442,28,1.2362623769999996],[1242,5438,28,1.2350034609999996],[1241,5434,28,1.2337682939999997],[1240,5430,28,1.2325170019999996],[1239,5426,28,1.2312757099999996],[1238,5422,28,1.2300155019999996],[1237,5418,28,1.2287827939999996],[1236,5414,28,1.2275356689999997],[1235,5410,28,1.2263017519999997],[1234,5406,28,1.2250440019999997],[1233,5402,28,1.2237873769999998],[1232,5398,28,1.2225573349999999],[1231,5394,28,1.2213194179999998],[1230,5390,28,1.2200772929999997],[1229,5386,28,1.2188185429999996],[1228,5382,28,1.2175870849999997],[1227,5378,28,1.2163320009999996],[1226,5374,28,1.2150369599999995],[1225,5370,28,1.2137295849999994],[1224,5366,28,1.2124978759999994],[1223,5362,28,1.2112540849999993],[1222,5358,28,1.2100217929999992],[1221,5354,28,1.2087658349999992],[1220,5350,28,1.2075192519999993],[1219,5346,28,1.2062703349999992],[1218,5342,28,1.2050423349999992],[1217,5338,28,1.2038103349999993],[1216,5334,28,1.2025452099999994],[1215,5330,28,1.2013165849999994],[1214,5326,28,1.2000510019999995],[1213,5322,28,1.1988142099999994],[1212,5318,28,1.1975839599999993],[1211,5314,28,1.1963449599999993],[1210,5310,28,1.1951240849999993],[1209,5306,28,1.1938999179999994],[1208,5302,28,1.1926447929999995],[1207,5298,28,1.1914076259999995],[1206,5294,28,1.1901861259999995],[1205,5290,28,1.1889560009999995],[1204,5286,28,1.1877285429999995],[1203,5282,28,1.1864930429999996],[1202,5278,28,1.1852653349999995],[1201,5274,28,1.1840095429999995],[1200,5270,28,1.1827765009999995],[1199,5266,28,1.1815424179999996],[1198,5262,28,1.1802672099999996],[1197,5258,28,1.1790427519999995],[1196,5254,28,1.1778188769999995],[1195,5250,28,1.1765735849999996],[1194,5246,28,1.1753301269999996],[1193,5242,28,1.1741107939999995],[1192,5238,28,1.1728880439999996],[1191,5234,28,1.1716577939999995],[1190,5230,28,1.1704023349999995],[1189,5226,28,1.1691633759999995],[1188,5222,28,1.1678935849999996],[1187,5218,28,1.1666730849999996],[1186,5214,28,1.1654577509999995],[1185,5210,28,1.1642401679999994],[1184,5206,28,1.1630150429999995],[1183,5202,28,1.1617990429999994],[1182,5198,28,1.1605330429999994],[1181,5194,28,1.1593161259999993],[1180,5190,28,1.1580834599999994],[1179,5186,28,1.1568436259999995],[1178,5182,28,1.1556196259999996],[1177,5178,28,1.1543786259999995],[1176,5174,28,1.1531612509999996],[1175,5170,28,1.1519163339999996],[1174,5166,28,1.1506686259999996],[1173,5162,28,1.1494386259999996],[1172,5158,28,1.1482209589999997],[1171,5154,28,1.1469597919999996],[1170,5150,28,1.1457475419999996],[1169,5146,28,1.1444855419999995],[1168,5142,28,1.1432579999999994],[1167,5138,28,1.1420359579999995],[1166,5134,28,1.1408212909999995],[1165,5130,28,1.1396100829999996],[1164,5126,28,1.1383678329999996],[1163,5122,28,1.1371598329999995],[1162,5118,28,1.1358920409999995],[1161,5114,28,1.1346848329999994],[1160,5110,28,1.1334764159999995],[1159,5106,28,1.1321674579999994],[1158,5102,28,1.1309603749999995],[1157,5098,28,1.1297540409999995],[1156,5094,28,1.1285012069999996],[1155,5090,28,1.1272569569999995],[1154,5086,28,1.1260491659999996],[1153,5082,28,1.1248303319999997],[1152,5078,28,1.1236188739999997],[1151,5074,28,1.1224040409999998],[1150,5070,28,1.1211812489999997],[1149,5066,28,1.1199216659999998],[1148,5062,28,1.1186907909999997],[1147,5058,28,1.1174817489999997],[1146,5054,28,1.1161559989999998],[1145,5050,28,1.1149519989999999],[1144,5046,28,1.1137546239999998],[1143,5042,28,1.1125513319999998],[1142,5038,28,1.1113294569999999],[1141,5034,28,1.1101272899999999],[1140,5030,28,1.108926457],[1139,5026,28,1.1076941649999998],[1138,5022,28,1.1064622069999999],[1137,5018,28,1.105256082],[1136,5014,28,1.1039578319999999],[1135,5010,28,1.1027262489999998],[1134,5006,28,1.1015242899999997],[1133,5002,28,1.1003209149999997],[1132,4998,28,1.0990598309999997],[1131,4994,28,1.0978124969999996],[1130,4990,28,1.0965739559999996],[1129,4986,28,1.0953777059999996],[1128,4982,28,1.0941839559999995],[1127,4978,28,1.0929904559999994],[1126,4974,28,1.0917984969999994],[1125,4970,28,1.0906065379999994],[1124,4966,28,1.0894125379999995],[1123,4962,28,1.0882182039999995],[1122,4958,28,1.0870253289999994],[1121,4954,28,1.0858174539999994],[1120,4950,28,1.0846251199999994],[1119,4946,28,1.0834374109999994],[1118,4942,28,1.0822482859999993],[1117,4938,28,1.0810583699999994],[1116,4934,28,1.0798600359999995],[1115,4930,28,1.0786697859999994],[1114,4926,28,1.0774549529999995],[1113,4922,28,1.0762610779999995],[1112,4918,28,1.0750616199999994],[1111,4914,28,1.0738705359999994],[1110,4910,28,1.0726754529999993],[1109,4906,28,1.0714432859999994],[1108,4902,28,1.0702482029999993],[1107,4898,28,1.0690427859999994],[1106,4894,28,1.0678476199999993],[1105,4890,28,1.0666563699999994],[1104,4886,28,1.0654660779999994],[1103,4882,28,1.0642510779999994],[1102,4878,28,1.0630699529999994],[1101,4874,28,1.0618836189999994],[1100,4870,28,1.0606874939999993],[1099,4866,28,1.0595077849999992],[1098,4862,28,1.0583099099999993],[1097,4858,28,1.0571185769999993],[1096,4854,28,1.0558780349999994],[1095,4850,28,1.0546880769999993],[1094,4846,28,1.0534844519999993],[1093,4842,28,1.0522645769999992],[1092,4838,28,1.0510686179999993],[1091,4834,28,1.0498859929999993],[1090,4830,28,1.0487059089999993],[1089,4826,28,1.0474919499999993],[1088,4822,28,1.0462924499999993],[1087,4818,28,1.0451069089999994],[1086,4814,28,1.0438883249999993],[1085,4810,28,1.0425168669999993],[1084,4806,28,1.0413355749999993],[1083,4802,28,1.0401177419999994],[1082,4798,28,1.0389317419999995],[1081,4794,28,1.0377483249999995],[1080,4790,28,1.0365540749999995],[1079,4786,28,1.0353544089999995],[1078,4782,28,1.0341830749999996],[1077,4778,28,1.0330051169999996],[1076,4774,28,1.0317976589999995],[1075,4770,28,1.0306117839999995],[1074,4766,28,1.0293676169999995],[1073,4762,28,1.0281438669999994],[1072,4758,28,1.0269179499999994],[1071,4754,28,1.0257444499999995],[1070,4750,28,1.0245688249999996],[1069,4746,28,1.0233792419999996],[1068,4742,28,1.0222131999999997],[1067,4738,28,1.0210412419999997],[1066,4734,28,1.0198666589999996],[1065,4730,28,1.0186936999999996],[1064,4726,28,1.0175251589999996],[1063,4722,28,1.0163576169999997],[1062,4718,28,1.0151887839999998],[1061,4714,28,1.0140074089999997],[1060,4710,28,1.0128359089999996],[1059,4706,28,1.0115700339999996],[1058,4702,28,1.0103988669999995],[1057,4698,28,1.0092287419999995],[1056,4694,28,1.0080256169999995],[1055,4690,28,1.0068602419999995],[1054,4686,28,1.0056851579999995],[1053,4682,28,1.0045097829999994],[1052,4678,28,1.0033382829999993],[1051,4674,28,1.0021740329999993],[1050,4670,28,1.0009965749999994],[1049,4666,28,0.9998068249999993],[1048,4662,28,0.9986197829999993],[1047,4658,28,0.9974538249999993],[1046,4654,28,0.9962860749999993],[1045,4650,28,0.9951142409999993],[1044,4646,28,0.9939436159999994],[1043,4642,28,0.9927781579999994],[1042,4638,28,0.9915905329999993],[1041,4634,28,0.9904144909999993],[1040,4630,28,0.9892473659999993],[1039,4626,28,0.9880689499999993],[1038,4622,28,0.9869002409999993],[1037,4618,28,0.9857394079999993],[1036,4614,28,0.9845794499999992],[1035,4610,28,0.9833694909999993],[1034,4606,28,0.9821987829999993],[1033,4602,28,0.9810372829999993],[1032,4598,28,0.9798807829999993],[1031,4594,28,0.9786964079999992],[1030,4590,28,0.9775418669999992],[1029,4586,28,0.9763830749999992],[1028,4582,28,0.9752301169999992],[1027,4578,28,0.9740750749999991],[1026,4574,28,0.9729212419999991],[1025,4570,28,0.9717563249999991],[1024,4566,28,0.9705974919999991],[1023,4562,28,0.9694397419999992],[1022,4558,28,0.9682879919999992],[1021,4554,28,0.9670850749999992],[1020,4550,28,0.9659360749999992],[1019,4546,28,0.9647928669999992],[1018,4542,28,0.9636276999999992],[1017,4538,28,0.9624641589999992],[1016,4534,28,0.9612711999999991],[1015,4530,28,0.9601231169999991],[1014,4526,28,0.9589347419999991],[1013,4522,28,0.9577674499999991],[1012,4518,28,0.9565976999999991],[1011,4514,28,0.9554337839999991],[1010,4510,28,0.9542512009999992],[1009,4506,28,0.9530997839999992],[1008,4502,28,0.9518954089999991],[1007,4498,28,0.9507303259999992],[1006,4494,28,0.9495582839999992],[1005,4490,28,0.9482888679999992],[1004,4486,28,0.9471091179999992],[1003,4482,28,0.9459691179999992],[1002,4478,28,0.9448274929999991],[1001,4474,28,0.9436464089999991],[1000,4470,28,0.9425002429999991],[999,4466,28,0.9413629509999991],[998,4462,28,0.9402243259999992],[997,4458,28,0.9390676179999992],[996,4454,28,0.9379229509999991],[995,4450,28,0.9367824929999992],[994,4446,28,0.9356415339999992],[993,4442,28,0.9344812429999991],[992,4438,28,0.9333416589999991],[991,4434,28,0.9322034089999991],[990,4430,28,0.9310650749999991],[989,4426,28,0.9299264919999991],[988,4422,28,0.9287791169999992],[987,4418,28,0.9276439499999991],[986,4414,28,0.9264824919999991],[985,4410,28,0.9253324919999991],[984,4406,28,0.9241787839999991],[983,4402,28,0.922980116999999],[982,4398,28,0.921826533999999],[981,4394,28,0.9206790339999991],[980,4390,28,0.919526699999999],[979,4386,28,0.918375283999999],[978,4382,28,0.917222949999999],[977,4378,28,0.916069490999999],[976,4374,28,0.914913490999999],[975,4370,28,0.913783032999999],[974,4366,28,0.912646615999999],[973,4362,28,0.9114965749999989],[972,4358,28,0.9103599499999989],[971,4354,28,0.9092155749999989],[970,4350,28,0.908082199999999],[969,4346,28,0.906930365999999],[968,4342,28,0.905800699999999],[967,4338,28,0.904659116999999],[966,4334,28,0.903519782999999],[965,4330,28,0.9023871169999991],[964,4326,28,0.901263074999999],[963,4322,28,0.900138282999999],[962,4318,28,0.899009741999999],[961,4314,28,0.897871741999999],[960,4310,28,0.896748532999999],[959,4306,28,0.895562449999999],[958,4302,28,0.894407324999999],[957,4298,28,0.8932853669999989],[956,4294,28,0.8921644919999989],[955,4290,28,0.891041949999999],[954,4286,28,0.889923033999999],[953,4282,28,0.8887847839999989],[952,4278,28,0.887662741999999],[951,4274,28,0.8865420749999989],[950,4270,28,0.8854204499999989],[949,4266,28,0.8842926579999989],[948,4262,28,0.8831693659999988],[947,4258,28,0.8820472829999988],[946,4254,28,0.8809268249999987],[945,4250,28,0.8798010329999988],[944,4246,28,0.8785780329999988],[943,4242,28,0.8774589079999988],[942,4238,28,0.8763384489999988],[941,4234,28,0.8752112409999988],[940,4230,28,0.8740851579999988],[939,4226,28,0.8729628239999988],[938,4222,28,0.8718312829999988],[937,4218,28,0.8707139489999988],[936,4214,28,0.8695922829999988],[935,4210,28,0.8684716989999988],[934,4206,28,0.8673392409999988],[933,4202,28,0.8662193659999988],[932,4198,28,0.8651025329999988],[931,4194,28,0.8639815749999988],[930,4190,28,0.8628609079999988],[929,4186,28,0.8617479499999988],[928,4182,28,0.8606288249999988],[927,4178,28,0.8595156579999988],[926,4174,28,0.8583855749999989],[925,4170,28,0.8572731579999989],[924,4166,28,0.8561413669999989],[923,4162,28,0.8550200749999989],[922,4158,28,0.8539066579999989],[921,4154,28,0.8527961579999989],[920,4150,28,0.8516824919999989],[919,4146,28,0.8505742419999989],[918,4142,28,0.8494586589999988],[917,4138,28,0.8483459919999988],[916,4134,28,0.8472347419999988],[915,4130,28,0.8461206589999988],[914,4126,28,0.8450024919999988],[913,4122,28,0.8438667839999988],[912,4118,28,0.8427555339999988],[911,4114,28,0.8416428259999988],[910,4110,28,0.8405342009999989],[909,4106,28,0.8394277009999989],[908,4102,28,0.8383079929999988],[907,4098,28,0.8371807009999989],[906,4094,28,0.8360669509999988],[905,4090,28,0.8349471179999989],[904,4086,28,0.8338180339999989],[903,4082,28,0.8327030759999988],[902,4078,28,0.8315849089999988],[901,4074,28,0.8304637839999989],[900,4070,28,0.8293591179999988],[899,4066,28,0.8282369929999989],[898,4062,28,0.8271311589999989],[897,4058,28,0.826028075999999],[896,4054,28,0.824910033999999],[895,4050,28,0.823790700999999],[894,4046,28,0.822685992999999],[893,4042,28,0.821580408999999],[892,4038,28,0.820481408999999],[891,4034,28,0.819373117999999],[890,4030,28,0.818249117999999],[889,4026,28,0.817092659999999],[888,4022,28,0.815984034999999],[887,4018,28,0.8148381599999991],[886,4014,28,0.8137331179999991],[885,4010,28,0.8126249509999991],[884,4006,28,0.8115252839999991],[883,4002,28,0.8103952419999991],[882,3998,28,0.8092915749999992],[881,3994,28,0.8081831589999992],[880,3990,28,0.8070774499999992],[879,3986,28,0.8059727419999992],[878,3982,28,0.8048700339999992],[877,3978,28,0.8037667839999992],[876,3974,28,0.8026656589999992],[875,3970,28,0.8015547839999992],[874,3966,28,0.8004542419999993],[873,3962,28,0.7993534089999993],[872,3958,28,0.7982475749999993],[871,3954,28,0.7971172839999994],[870,3950,28,0.7960079499999994],[869,3946,28,0.7949103669999994],[868,3942,28,0.7938074919999994],[867,3938,28,0.7927099919999995],[866,3934,28,0.7915962839999995],[865,3930,28,0.7905034089999995],[864,3926,28,0.7894042429999995],[863,3922,28,0.7883060339999994],[862,3918,28,0.7872097009999994],[861,3914,28,0.7861122429999994],[860,3910,28,0.7850127839999994],[859,3906,28,0.7839189089999994],[858,3902,28,0.7828275339999994],[857,3898,28,0.7817367839999994],[856,3894,28,0.7806457839999994],[855,3890,28,0.7795588259999994],[854,3886,28,0.7784638259999994],[853,3882,28,0.7773749089999994],[852,3878,28,0.7762799089999994],[851,3874,28,0.7751884089999994],[850,3870,28,0.7740927009999994],[849,3866,28,0.7729984099999994],[848,3862,28,0.7718906179999994],[847,3858,28,0.7708039509999993],[846,3854,28,0.7697060349999993],[845,3850,28,0.7686083259999994],[844,3846,28,0.7675202849999994],[843,3842,28,0.7664272429999993],[842,3838,28,0.7653427849999993],[841,3834,28,0.7642448679999994],[840,3830,28,0.7631610759999994],[839,3826,28,0.7620717009999994],[838,3822,28,0.7609192429999995],[837,3818,28,0.7597715759999994],[836,3814,28,0.7586745759999994],[835,3810,28,0.7575785349999994],[834,3806,28,0.7564739929999994],[833,3802,28,0.7553913679999994],[832,3798,28,0.7542847429999994],[831,3794,28,0.7531468259999994],[830,3790,28,0.7520423259999994],[829,3786,28,0.7509237839999995],[828,3782,28,0.7498365759999995],[827,3778,28,0.7487495349999995],[826,3774,28,0.7476321599999995],[825,3770,28,0.7464890759999996],[824,3766,28,0.7454127849999996],[823,3762,28,0.7443254929999996],[822,3758,28,0.7432473679999996],[821,3754,28,0.7421724519999996],[820,3750,28,0.7410901599999996],[819,3746,28,0.7400119099999997],[818,3742,28,0.7389127439999996],[817,3738,28,0.7377720769999996],[816,3734,28,0.7366947019999995],[815,3730,28,0.7356121609999995],[814,3726,28,0.7345379939999995],[813,3722,28,0.7334478279999995],[812,3718,28,0.7323717859999995],[811,3714,28,0.7312873279999995],[810,3710,28,0.7302094529999995],[809,3706,28,0.7291337859999996],[808,3702,28,0.7280288689999995],[807,3698,28,0.7269132029999995],[806,3694,28,0.7258319109999996],[805,3690,28,0.7247599109999996],[804,3686,28,0.7236824529999996],[803,3682,28,0.7225943279999996],[802,3678,28,0.7215205779999996],[801,3674,28,0.7204479529999995],[800,3670,28,0.7193609949999995],[799,3666,28,0.7182876619999995],[798,3662,28,0.7172191199999995],[797,3658,28,0.7161455779999996],[796,3654,28,0.7150738279999995],[795,3650,28,0.7140037439999996],[794,3646,28,0.7129179099999996],[793,3642,28,0.7117826599999996],[792,3638,28,0.7106995759999996],[791,3634,28,0.7096273259999996],[790,3630,28,0.7085446179999996],[789,3626,28,0.7074712849999996],[788,3622,28,0.7064034929999996],[787,3618,28,0.7053397009999997],[786,3614,28,0.7042700759999997],[785,3610,28,0.7031994509999997],[784,3606,28,0.7021039089999997],[783,3602,28,0.7011112839999998],[782,3598,28,0.7001137419999998],[781,3594,28,0.6991160759999998],[780,3590,28,0.6981164089999998],[779,3586,28,0.6971242009999998],[778,3582,28,0.6961266589999998],[777,3578,28,0.6950047009999998],[776,3574,28,0.6940072009999998],[775,3570,28,0.6930061589999998],[774,3566,28,0.6919908249999999],[773,3562,28,0.6909976579999999],[772,3558,28,0.6899905329999999],[771,3554,28,0.6889874919999999],[770,3550,28,0.6879734499999999],[769,3546,28,0.6869653249999998],[768,3542,28,0.6859583669999999],[767,3538,28,0.6849500749999999],[766,3534,28,0.6839441589999999],[765,3530,28,0.682950242],[764,3526,28,0.681956534],[763,3522,28,0.680959159],[762,3518,28,0.6799687],[761,3514,28,0.678971992],[760,3510,28,0.677951284],[759,3506,28,0.676955492],[758,3502,28,0.675966409],[757,3498,28,0.674955992],[756,3494,28,0.673966784],[755,3490,28,0.672977451],[754,3486,28,0.671986993],[753,3482,28,0.67098266],[752,3478,28,0.669992493],[751,3474,28,0.668996201],[750,3470,28,0.667992826],[749,3466,28,0.666997535],[748,3462,28,0.666003743],[747,3458,28,0.665013202],[746,3454,28,0.6640230770000001],[745,3450,28,0.663030493],[744,3446,28,0.66203341],[743,3442,28,0.6610393680000001],[742,3438,28,0.6600411180000001],[741,3434,28,0.6590396180000001],[740,3430,28,0.6580502850000001],[739,3426,28,0.6570642440000001],[738,3422,28,0.6560794940000001],[737,3418,28,0.6550929940000001],[736,3414,28,0.6541059940000001],[735,3410,28,0.6531177860000001],[734,3406,28,0.6521304110000001],[733,3402,28,0.6511437860000001],[732,3398,28,0.6501539110000001],[731,3394,28,0.6491523280000001],[730,3390,28,0.6481189110000001],[729,3386,28,0.6471324110000001],[728,3382,28,0.6461479950000001],[727,3378,28,0.6451669110000001],[726,3374,28,0.6441667450000002],[725,3370,28,0.6431832030000002],[724,3366,28,0.6421994950000002],[723,3362,28,0.6412170780000002],[722,3358,28,0.6402273280000002],[721,3354,28,0.6392344530000001],[720,3350,28,0.6382406610000001],[719,3346,28,0.6372499950000001],[718,3342,28,0.6362227450000001],[717,3338,28,0.6352444950000001],[716,3334,28,0.6342664120000001],[715,3330,28,0.6332783700000001],[714,3326,28,0.6322976200000001],[713,3322,28,0.6312928700000001],[712,3318,28,0.6303000370000001],[711,3314,28,0.6293188290000001],[710,3310,28,0.6283393700000002],[709,3306,28,0.6273612450000001],[708,3302,28,0.6263825370000001],[707,3298,28,0.6253650370000001],[706,3294,28,0.6243793290000001],[705,3290,28,0.6234002450000001],[704,3286,28,0.6224161200000001],[703,3282,28,0.6214392030000001],[702,3278,28,0.6204564950000001],[701,3274,28,0.6194488280000001],[700,3270,28,0.6184719950000002],[699,3266,28,0.6174959120000002],[698,3262,28,0.6165182870000002],[697,3258,28,0.6155415780000002],[696,3254,28,0.6145638280000002],[695,3250,28,0.6135855780000002],[694,3246,28,0.6126124940000003],[693,3242,28,0.6116312440000002],[692,3238,28,0.6106414530000003],[691,3234,28,0.6096683700000003],[690,3230,28,0.6086948280000003],[689,3226,28,0.6077173700000003],[688,3222,28,0.6067357450000003],[687,3218,28,0.6057317030000002],[686,3214,28,0.6047496620000002],[685,3210,28,0.6037701620000002],[684,3206,28,0.6027947450000002],[683,3202,28,0.6018193290000002],[682,3198,28,0.6008347870000003],[681,3194,28,0.5998607870000002],[680,3190,28,0.5988838700000002],[679,3186,28,0.5978712870000003],[678,3182,28,0.5969016200000002],[677,3178,28,0.5959306620000002],[676,3174,28,0.5949634120000002],[675,3170,28,0.5939763290000002],[674,3166,28,0.5930056620000002],[673,3162,28,0.5920326210000002],[672,3158,28,0.5910428290000002],[671,3154,28,0.5900662870000002],[670,3150,28,0.5890631620000002],[669,3146,28,0.5880888290000001],[668,3142,28,0.5871101210000002],[667,3138,28,0.5861364130000002],[666,3134,28,0.5851677460000002],[665,3130,28,0.5841882460000002],[664,3126,28,0.5832189960000002],[663,3122,28,0.5822504540000002],[662,3118,28,0.5812807460000002],[661,3114,28,0.5803142880000003],[660,3110,28,0.5793510380000003],[659,3106,28,0.5783846630000004],[658,3102,28,0.5774174970000003],[657,3098,28,0.5764457470000003],[656,3094,28,0.5754832890000002],[655,3090,28,0.5745122470000003],[654,3086,28,0.5735263300000003],[653,3082,28,0.5725428720000003],[652,3078,28,0.5715613300000003],[651,3074,28,0.5705717890000003],[650,3070,28,0.5696093310000002],[649,3066,28,0.5686399970000002],[648,3062,28,0.5676750810000002],[647,3058,28,0.5667079140000002],[646,3054,28,0.5657405390000002],[645,3050,28,0.5647547470000002],[644,3046,28,0.5637906220000002],[643,3042,28,0.5628257050000002],[642,3038,28,0.5618623720000002],[641,3034,28,0.5609002890000002],[640,3030,28,0.5599412470000003],[639,3026,28,0.5589714140000003],[638,3022,28,0.5580119550000002],[637,3018,28,0.5570367050000002],[636,3014,28,0.5560671630000003],[635,3010,28,0.5550890380000002],[634,3006,28,0.5541038300000002],[633,3002,28,0.5531344970000002],[632,2998,28,0.5521742050000001],[631,2994,28,0.5512007470000001],[630,2990,28,0.5502400380000001],[629,2986,28,0.5492665380000001],[628,2982,28,0.5482652050000001],[627,2978,28,0.5473049550000001],[626,2974,28,0.5463449130000001],[625,2970,28,0.5453841630000001],[624,2966,28,0.5444041630000002],[623,2962,28,0.5434429960000001],[622,2958,28,0.5424821210000002],[621,2954,28,0.5415233710000001],[620,2950,28,0.5405644130000001],[619,2946,28,0.5396059960000001],[618,2942,28,0.5386302460000001],[617,2938,28,0.5376512050000001],[616,2934,28,0.536694913],[615,2930,28,0.5357353300000001],[614,2926,28,0.534783705],[613,2922,28,0.5338229130000001],[612,2918,28,0.5328697470000001],[611,2914,28,0.5319170380000001],[610,2910,28,0.5309487470000002],[609,2906,28,0.5299967470000002],[608,2902,28,0.5290500800000002],[607,2898,28,0.5281029970000002],[606,2894,28,0.5271245380000001],[605,2890,28,0.5261666630000001],[604,2886,28,0.5251914540000001],[603,2882,28,0.5242354120000001],[602,2878,28,0.5232883700000002],[601,2874,28,0.5223430370000002],[600,2870,28,0.5213941620000002],[599,2866,28,0.5203829120000002],[598,2862,28,0.5194352870000002],[597,2858,28,0.5184890370000002],[596,2854,28,0.5175448710000001],[595,2850,28,0.5165993290000002],[594,2846,28,0.5156522460000001],[593,2842,28,0.5147036210000001],[592,2838,28,0.5137386620000001],[591,2834,28,0.5127895370000001],[590,2830,28,0.5118459120000001],[589,2826,28,0.510886912],[588,2822,28,0.509936287],[587,2818,28,0.508947746],[586,2814,28,0.507970954],[585,2810,28,0.507025538],[584,2806,28,0.5060853710000001],[583,2802,28,0.5051385800000001],[582,2798,28,0.5041963300000001],[581,2794,28,0.5032584550000001],[580,2790,28,0.5023211630000001],[579,2786,28,0.5013560380000001],[578,2782,28,0.5004187050000001],[577,2778,28,0.4994799970000001],[576,2774,28,0.49851899700000013],[575,2770,28,0.49755470500000015],[574,2766,28,0.4966164550000002],[573,2762,28,0.4956784130000002],[572,2758,28,0.4947193300000002],[571,2754,28,0.4937755380000002],[570,2750,28,0.4928179960000002],[569,2746,28,0.4918714550000002],[568,2742,28,0.49093266300000016],[567,2738,28,0.4899920380000002],[566,2734,28,0.4890390800000002],[565,2730,28,0.4880941220000002],[564,2726,28,0.4871554130000002],[563,2722,28,0.4862158720000002],[562,2718,28,0.4852312470000002],[561,2714,28,0.4842677050000002],[560,2710,28,0.4833277470000002],[559,2706,28,0.4823934140000002],[558,2702,28,0.4814450800000002],[557,2698,28,0.4805079550000002],[556,2694,28,0.4795735390000002],[555,2690,28,0.4786405390000002],[554,2686,28,0.4777056220000002],[553,2682,28,0.47674170500000024],[552,2678,28,0.47579399700000025],[551,2674,28,0.47485778900000025],[550,2670,28,0.47392653900000026],[549,2666,28,0.47298895500000027],[548,2662,28,0.47205966300000024],[547,2658,28,0.47111358000000025],[546,2654,28,0.47015987100000023],[545,2650,28,0.4691990800000002],[544,2646,28,0.46825262200000023],[543,2642,28,0.46731391300000025],[542,2638,28,0.46638533000000026],[541,2634,28,0.46545224700000026],[540,2630,28,0.46447574700000027],[539,2626,28,0.4635435800000003],[538,2622,28,0.4626138300000003],[537,2618,28,0.4616841220000003],[536,2614,28,0.4607428300000003],[535,2610,28,0.4598159970000003],[534,2606,28,0.4588857470000003],[533,2602,28,0.45796187200000027],[532,2598,28,0.4570210810000003],[531,2594,28,0.45609520600000025],[530,2590,28,0.45517095600000024],[529,2586,28,0.45424753900000026],[528,2582,28,0.45328828900000023],[527,2578,28,0.45235858000000023],[526,2574,28,0.4514306220000002],[525,2570,28,0.4504816640000002],[524,2566,28,0.44955753900000023],[523,2562,28,0.4485964970000002],[522,2558,28,0.4476251220000002],[521,2554,28,0.4467004560000002],[520,2550,28,0.4457783310000002],[519,2546,28,0.4448538310000002],[518,2542,28,0.4439162060000002],[517,2538,28,0.44298649800000023],[516,2534,28,0.44205383100000023],[515,2530,28,0.4411267900000002],[514,2526,28,0.4401821230000002],[513,2522,28,0.4392518730000002],[512,2518,28,0.4382899980000002],[511,2514,28,0.4373660810000002],[510,2510,28,0.4363992060000002],[509,2506,28,0.4354741230000002],[508,2502,28,0.4345478310000002],[507,2498,28,0.4336261230000002],[506,2494,28,0.4327063730000002],[505,2490,28,0.4317639140000002],[504,2486,28,0.4308334980000002],[503,2482,28,0.4299125810000002],[502,2478,28,0.4289937480000002],[501,2474,28,0.42807533100000017],[500,2470,28,0.42714062300000016],[499,2466,28,0.42619508100000014],[498,2462,28,0.42527941500000016],[497,2458,28,0.42434433200000016],[496,2454,28,0.42342812300000016],[495,2450,28,0.42251154000000013],[494,2446,28,0.42159874800000013],[493,2442,28,0.42066308200000013],[492,2438,28,0.4197442490000001],[491,2434,28,0.4188210820000001],[490,2430,28,0.4179087070000001],[489,2426,28,0.4169990400000001],[488,2422,28,0.4160862070000001],[487,2418,28,0.4151730400000001],[486,2414,28,0.41425920700000013],[485,2410,28,0.41334849900000015],[484,2406,28,0.4124388740000001],[483,2402,28,0.4115274570000001],[482,2398,28,0.4106086650000001],[481,2394,28,0.4096963730000001],[480,2390,28,0.4087864980000001],[479,2386,28,0.4078773730000001],[478,2382,28,0.4069672070000001],[477,2378,28,0.4060591650000001],[476,2374,28,0.4051260820000001],[475,2370,28,0.4042167070000001],[474,2366,28,0.4033107480000001],[473,2362,28,0.4023964150000001],[472,2358,28,0.4014798320000001],[471,2354,28,0.4005350820000001],[470,2350,28,0.3996280410000001],[469,2346,28,0.3987201240000001],[468,2342,28,0.3978117490000001],[467,2338,28,0.39690308200000013],[466,2334,28,0.39600049800000015],[465,2330,28,0.39509833200000016],[464,2326,28,0.39417191500000015],[463,2322,28,0.39327029000000013],[462,2318,28,0.39233229000000014],[461,2314,28,0.39143154000000013],[460,2310,28,0.39052141500000015],[459,2306,28,0.3896214980000002],[458,2302,28,0.3886876650000002],[457,2298,28,0.3877892900000002],[456,2294,28,0.38687054000000015],[455,2290,28,0.38595520700000013],[454,2286,28,0.38504966500000015],[453,2282,28,0.38414374900000015],[452,2278,28,0.38324299900000014],[451,2274,28,0.38234483200000013],[450,2270,28,0.3814327490000001],[449,2266,28,0.3805319990000001],[448,2262,28,0.3796312490000001],[447,2258,28,0.37873208200000014],[446,2254,28,0.37781412400000014],[445,2250,28,0.37688704100000014],[444,2246,28,0.3759875830000001],[443,2242,28,0.3750803330000001],[442,2238,28,0.3741143740000001],[441,2234,28,0.3732186240000001],[440,2230,28,0.3722672900000001],[439,2226,28,0.3713714990000001],[438,2222,28,0.3704597490000001],[437,2218,28,0.3695592910000001],[436,2214,28,0.36865970800000014],[435,2210,28,0.36775633300000016],[434,2206,28,0.36685850000000014],[433,2202,28,0.36596312500000017],[432,2198,28,0.36506645800000015],[431,2194,28,0.36413341600000015],[430,2190,28,0.36320591600000013],[429,2186,28,0.36231166600000014],[428,2182,28,0.3613941250000001],[427,2178,28,0.3604892910000001],[426,2174,28,0.3595825410000001],[425,2170,28,0.3586842080000001],[424,2166,28,0.3577962080000001],[423,2162,28,0.3568677490000001],[422,2158,28,0.3559795830000001],[421,2154,28,0.3550870830000001],[420,2150,28,0.35418650000000007],[419,2146,28,0.3532977910000001],[418,2142,28,0.35240729100000007],[417,2138,28,0.35151137400000004],[416,2134,28,0.35062041600000005],[415,2130,28,0.34973158300000007],[414,2126,28,0.34883108300000004],[413,2122,28,0.34790024900000005],[412,2118,28,0.34700920700000004],[411,2114,28,0.34611874900000006],[410,2110,28,0.34522733200000005],[409,2106,28,0.34431724900000005],[408,2102,28,0.34340316600000004],[407,2098,28,0.34251241600000004],[406,2094,28,0.34160179100000004],[405,2090,28,0.340680291],[404,2086,28,0.339789999],[403,2082,28,0.338902249],[402,2078,28,0.338019707],[401,2074,28,0.337125665],[400,2070,28,0.336243748],[399,2066,28,0.335360373],[398,2062,28,0.334467332],[397,2058,28,0.333581957],[396,2054,28,0.33269878999999997],[395,2050,28,0.331816124],[394,2046,28,0.330889999],[393,2042,28,0.33000578999999997],[392,2038,28,0.32912241499999995],[391,2034,28,0.32823716499999994],[390,2030,28,0.3273215809999999],[389,2026,28,0.32643174699999994],[388,2022,28,0.32553149699999995],[387,2018,28,0.3246145389999999],[386,2014,28,0.3237344139999999],[385,2010,28,0.32283324699999993],[384,2006,28,0.32194520599999993],[383,2002,28,0.3210574969999999],[382,1998,28,0.3201743309999999],[381,1994,28,0.3192911639999999],[380,1990,28,0.3184070809999999],[379,1986,28,0.3175196639999999],[378,1982,28,0.3166357469999999],[377,1978,28,0.3157370799999999],[376,1974,28,0.3148438299999999],[375,1970,28,0.31396303799999986],[374,1966,28,0.31308024699999987],[373,1962,28,0.31220287199999985],[372,1958,28,0.31132232999999987],[371,1954,28,0.3104092879999999],[370,1950,28,0.3095302049999999],[369,1946,28,0.3086302049999999],[368,1942,28,0.30766620499999986],[367,1938,28,0.3067904969999999],[366,1934,28,0.3059015799999999],[365,1930,28,0.3050265379999999],[364,1926,28,0.3041509549999999],[363,1922,28,0.30325941299999987],[362,1918,28,0.30238691299999987],[361,1914,28,0.30150420499999986],[360,1910,28,0.30059599699999984],[359,1906,28,0.29972324699999986],[358,1902,28,0.29884307999999987],[357,1898,28,0.2979688719999999],[356,1894,28,0.29705666399999986],[355,1890,28,0.29618295499999986],[354,1886,28,0.29531241399999986],[353,1882,28,0.2944194139999999],[352,1878,28,0.2935167889999999],[351,1874,28,0.2926418309999999],[350,1870,28,0.29173095599999993],[349,1866,28,0.29086083099999993],[348,1862,28,0.2899641229999999],[347,1858,28,0.2890875399999999],[346,1854,28,0.2882145809999999],[345,1850,28,0.2873489149999999],[344,1846,28,0.2864817899999999],[343,1842,28,0.2856003319999999],[342,1838,28,0.2847142489999999],[341,1834,28,0.2838199149999999],[340,1830,28,0.2829493739999999],[339,1826,28,0.2820630819999999],[338,1822,28,0.2811922069999999],[337,1818,28,0.2803233319999999],[336,1814,28,0.2794564989999999],[335,1810,28,0.2785919989999999],[334,1806,28,0.27771212399999995],[333,1802,28,0.27684783199999996],[332,1798,28,0.27598529099999997],[331,1794,28,0.275120249],[330,1790,28,0.274253749],[329,1786,28,0.273331874],[328,1782,28,0.27246512399999995],[327,1778,28,0.27159612399999994],[326,1774,28,0.2707139149999999],[325,1770,28,0.2698275399999999],[324,1766,28,0.2689383739999999],[323,1762,28,0.26802445699999994],[322,1758,28,0.26713962399999996],[321,1754,28,0.26625549899999995],[320,1750,28,0.26536966599999995],[319,1746,28,0.26443745699999993],[318,1742,28,0.26355162399999993],[317,1738,28,0.2626683739999999],[316,1734,28,0.26178445799999994],[315,1730,28,0.26088079099999995],[314,1726,28,0.2599777079999999],[313,1722,28,0.2590934159999999],[312,1718,28,0.2582060409999999],[311,1714,28,0.2573118749999999],[310,1710,28,0.2564303329999999],[309,1706,28,0.2555482499999999],[308,1702,28,0.25466004099999995],[307,1698,28,0.25376833299999996],[306,1694,28,0.25287849999999995],[305,1690,28,0.25195599999999996],[304,1686,28,0.25107349999999995],[303,1682,28,0.25019024999999995],[302,1678,28,0.24930641699999997],[301,1674,28,0.24841658399999997],[300,1670,28,0.24753037499999997],[299,1666,28,0.24664299999999997],[298,1662,28,0.24576249999999997],[297,1658,28,0.24488541699999997],[296,1654,28,0.24395624999999996],[295,1650,28,0.24307299999999996],[294,1646,28,0.24219662499999994],[293,1642,28,0.24131341699999995],[292,1638,28,0.24043608299999994],[291,1634,28,0.23955874999999993],[290,1630,28,0.23867358299999994],[289,1626,28,0.23779083299999995],[288,1622,28,0.23690916699999995],[287,1618,28,0.23597466699999994],[286,1614,28,0.23509866699999996],[285,1610,28,0.23421466699999996],[284,1606,28,0.23334037499999996],[283,1602,28,0.23246495799999997],[282,1598,28,0.23154074899999996],[281,1594,28,0.23066608199999997],[280,1590,28,0.22979333199999996],[279,1586,28,0.22892099899999996],[278,1582,28,0.22803220699999996],[277,1578,28,0.22716091499999996],[276,1574,28,0.22628883099999997],[275,1570,28,0.22541049799999996],[274,1566,28,0.22454391499999996],[273,1562,28,0.22367153999999995],[272,1558,28,0.22280237299999994],[271,1554,28,0.22192216499999995],[270,1550,28,0.22104687299999995],[269,1546,28,0.22016695599999994],[268,1542,28,0.21929770599999995],[267,1538,28,0.21842324799999996],[266,1534,28,0.21755295599999996],[265,1530,28,0.21668070599999997],[264,1526,28,0.21581295599999997],[263,1522,28,0.21490528999999997],[262,1518,28,0.21402858099999997],[261,1514,28,0.21314053999999996],[260,1510,28,0.21227403999999997],[259,1506,28,0.21138628999999998],[258,1502,28,0.21051970599999997],[257,1498,28,0.209651665],[256,1494,28,0.20878370599999999],[255,1490,28,0.207909831],[254,1486,28,0.20703545599999998],[253,1482,28,0.20616879],[252,1478,28,0.20530237299999998],[251,1474,28,0.20444049799999997],[250,1470,28,0.20353783099999997],[249,1466,28,0.20267320599999997],[248,1462,28,0.20181299799999997],[247,1458,28,0.20094978899999996],[246,1454,28,0.20008953899999996],[245,1450,28,0.19921087299999996],[244,1446,28,0.19833353899999995],[243,1442,28,0.19747166399999994],[242,1438,28,0.19660474799999994],[241,1434,28,0.19573820599999994],[240,1430,28,0.19484783099999994],[239,1426,28,0.19395662299999994],[238,1422,28,0.19309762299999994],[237,1418,28,0.19219424799999993],[236,1414,28,0.19130524799999993],[235,1410,28,0.19044770599999994],[234,1406,28,0.18957424799999995],[233,1402,28,0.18871328899999995],[232,1398,28,0.18784903899999994],[231,1394,28,0.18697695599999994],[230,1390,28,0.18611358099999994],[229,1386,28,0.18524803899999995],[228,1382,28,0.18436474699999994],[227,1378,28,0.18350683099999995],[226,1374,28,0.18265245599999996],[225,1370,28,0.18178283099999995],[224,1366,28,0.18091608099999995],[223,1362,28,0.18006241399999995],[222,1358,28,0.17921153899999995],[221,1354,28,0.17835182999999996],[220,1350,28,0.17746666399999997],[219,1346,28,0.17661732999999996],[218,1342,28,0.17577003899999996],[217,1338,28,0.17492274699999996],[216,1334,28,0.17407312199999997],[215,1330,28,0.17321024699999996],[214,1326,28,0.17236345499999994],[213,1322,28,0.17147803899999994],[212,1318,28,0.17063316399999995],[211,1314,28,0.16978441399999994],[210,1310,28,0.16893120599999994],[209,1306,28,0.16807833099999994],[208,1302,28,0.16723408099999995],[207,1298,28,0.16638874799999995],[206,1294,28,0.16549803999999996],[205,1290,28,0.16461670599999995],[204,1286,28,0.16377116399999994],[203,1282,28,0.16292520599999993],[202,1278,28,0.16207916399999994],[201,1274,28,0.16123670599999995],[200,1270,28,0.16039399699999995],[199,1266,28,0.15955316399999994],[198,1262,28,0.15870612299999995],[197,1258,28,0.15786578899999995],[196,1254,28,0.15702582999999995],[195,1250,28,0.15617987199999994],[194,1246,28,0.15530153899999993],[193,1242,28,0.15445320499999993],[192,1238,28,0.15361220499999992],[191,1234,28,0.15275878799999992],[190,1230,28,0.15190332999999992],[189,1226,28,0.15105632999999993],[188,1222,28,0.15021732999999993],[187,1218,28,0.14937107999999993],[186,1214,28,0.14852987099999992],[185,1210,28,0.14766174599999993],[184,1206,28,0.14682074599999992],[183,1202,28,0.14598287099999993],[182,1198,28,0.14513095499999992],[181,1194,28,0.14428632999999993],[180,1190,28,0.14344245499999994],[179,1186,28,0.14260357999999995],[178,1182,28,0.14176791399999994],[177,1178,28,0.14091953899999993],[176,1174,28,0.14008241399999993],[175,1170,28,0.13921224699999993],[174,1166,28,0.13837378899999994],[173,1162,28,0.13754103899999995],[172,1158,28,0.13670895599999994],[171,1154,28,0.13587616399999994],[170,1150,28,0.13503908099999995],[169,1146,28,0.13419833099999995],[168,1142,28,0.13336520599999996],[167,1138,28,0.13253203899999996],[166,1134,28,0.13167149799999997],[165,1130,28,0.13083749799999997],[164,1126,28,0.12999562299999998],[163,1122,28,0.12916699799999998],[162,1118,28,0.12832545699999998],[161,1114,28,0.12748791499999998],[160,1110,28,0.12665753999999999],[159,1106,28,0.12582870599999998],[158,1102,28,0.12500045599999998],[157,1098,28,0.12417033099999998],[156,1094,28,0.12330074699999997],[155,1090,28,0.12247187199999997],[154,1086,28,0.12166162199999997],[153,1082,28,0.12084970599999997],[152,1078,28,0.12003849699999998],[151,1074,28,0.11922432999999998],[150,1070,28,0.11839132999999998],[149,1066,28,0.11758003799999997],[148,1062,28,0.11676899699999997],[147,1058,28,0.11595941399999997],[146,1054,28,0.11512003899999997],[145,1050,28,0.11429778899999997],[144,1046,28,0.11348699699999996],[143,1042,28,0.11266099699999997],[142,1038,28,0.11185349699999997],[141,1034,28,0.11102437199999997],[140,1030,28,0.11021162199999997],[139,1026,28,0.10940149699999997],[138,1022,28,0.10858828899999998],[137,1018,28,0.10777991399999998],[136,1014,28,0.10696270599999998],[135,1010,28,0.10615853899999998],[134,1006,28,0.10535282999999998],[133,1002,28,0.10454266399999998],[132,998,28,0.10373753899999998],[131,994,28,0.10292978899999998],[130,990,28,0.10209708099999998],[129,986,28,0.10125395599999998],[128,982,28,0.10044887299999998],[127,978,28,0.09964112299999998],[126,974,28,0.09879112299999998],[125,970,28,0.09794133099999998],[124,966,28,0.09713745599999998],[123,962,28,0.09633308099999999],[122,958,28,0.09552991499999999],[121,954,28,0.09464695599999999],[120,950,28,0.09384449799999998],[119,946,28,0.09303141499999998],[118,942,28,0.09221420699999998],[117,938,28,0.09136249899999997],[116,934,28,0.09056299899999998],[115,930,28,0.08975924899999997],[114,926,28,0.08893387399999997],[113,922,28,0.08813562399999997],[112,918,28,0.08732995799999997],[111,914,28,0.08651962399999998],[110,910,28,0.08570254099999998],[109,906,28,0.08488149999999998],[108,902,28,0.08408399999999998],[107,898,28,0.08324054199999997],[106,894,28,0.08243699999999997],[105,890,28,0.08157687499999997],[104,886,28,0.08074149999999997],[103,882,28,0.07993649999999997],[102,878,28,0.07913220799999997],[101,874,28,0.07832645799999997],[100,870,28,0.07752745799999998],[99,866,28,0.07672837499999997],[98,862,28,0.07593129099999997],[97,858,28,0.07509474899999997],[96,854,28,0.07429441599999997],[95,850,28,0.07349374899999997],[94,846,28,0.07269887399999997],[93,842,28,0.07189912399999997],[92,838,28,0.07110454099999997],[91,834,28,0.07029354099999996],[90,830,28,0.06949741599999996],[89,826,28,0.06869674899999996],[88,822,28,0.06790249899999996],[87,818,28,0.06705033199999996],[86,814,28,0.06625470699999997],[85,810,28,0.06546012299999997],[84,806,28,0.06466783199999997],[83,802,28,0.06386878999999997],[82,798,28,0.06307328999999996],[81,794,28,0.06227870699999997],[80,790,28,0.06148587399999997],[79,786,28,0.06069224899999997],[78,782,28,0.05990012399999997],[77,778,28,0.059061040999999974],[76,774,28,0.05824233199999997],[75,770,28,0.057441664999999975],[74,766,28,0.05664508199999998],[73,762,28,0.05585008199999998],[72,758,28,0.05503803999999998],[71,754,28,0.054247497999999984],[70,750,28,0.053460081999999985],[69,746,28,0.05266224799999999],[68,742,28,0.05187353999999999],[67,738,28,0.05103528999999999],[66,734,28,0.05024462299999999],[65,730,28,0.04945278999999999],[64,726,28,0.04865024899999999],[63,722,28,0.047855540999999995],[62,718,28,0.04706854099999999],[61,714,28,0.04626712399999999],[60,710,28,0.045485165999999994],[59,706,28,0.04469704099999999],[58,702,28,0.04390329099999999],[57,698,28,0.04310095699999999],[56,694,28,0.04231399799999999],[55,690,28,0.041533789999999994],[54,686,28,0.04074541499999999],[53,682,28,0.03995316499999999],[52,678,28,0.039165456999999994],[51,674,28,0.038377747999999996],[50,670,28,0.03758737299999999],[49,666,28,0.036807497999999994],[48,662,28,0.036026331999999994],[47,658,28,0.035201539999999996],[46,654,28,0.034419082],[45,650,28,0.033641331999999996],[44,646,28,0.032862331999999994],[43,642,28,0.03208312399999999],[42,638,28,0.03129670699999999],[41,634,28,0.030506748999999996],[40,630,28,0.029728915999999998],[39,626,28,0.028946373999999997],[38,622,28,0.028161415999999998],[37,618,28,0.027383208],[36,614,28,0.026554083],[35,610,28,0.025758582999999998],[34,606,28,0.024953499999999997],[33,602,28,0.024124874999999997],[32,598,28,0.023307416999999997],[31,594,28,0.022521458999999997],[30,590,28,0.021737041999999998],[29,586,28,0.020933917],[28,582,28,0.020151501],[27,578,28,0.019373625999999998],[26,574,28,0.018543750999999997],[25,570,28,0.017746833999999996],[24,566,28,0.016941666999999997],[23,562,28,0.016149500999999997],[22,558,28,0.015368000999999997],[21,554,28,0.014577167999999998],[20,550,28,0.013786917999999999],[19,546,28,0.013011001],[18,542,28,0.012228000999999999],[17,538,28,0.011440250999999999],[16,534,28,0.010626792999999999],[15,530,28,0.009851042999999999],[14,526,28,0.009053583999999998],[13,522,28,0.008274167999999998],[12,518,28,0.007489167999999999],[11,514,28,0.006703583999999999],[10,452,28,0.005880625],[9,432,28,0.004925875],[8,330,28,0.004151083],[7,280,28,0.0032133329999999996],[6,257,28,0.002523625],[5,232,28,0.001949917],[4,184,28,0.001362542],[3,123,28,0.0008415830000000001],[2,74,28,0.0005143330000000001],[1,43,34,0.000263792],[0,16,41,0.000110042]],"inputs":[["(*.f64 -1/2 (/.f64 b a))","(+.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (pow.f64 1 1/3) (/.f64 b a))))","(*.f64 -1/2 (/.f64 b a))","(*.f64 1/2 (/.f64 b a))","(*.f64 -1 (/.f64 b a))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/2 (/.f64 b a))","(/.f64 (*.f64 -1/2 b) a)","(*.f64 b (/.f64 -1/2 a))","(+.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (pow.f64 1 1/3) (/.f64 b a))))","(fma.f64 -1/2 (/.f64 b a) (*.f64 (/.f64 b a) 1/2))","(*.f64 (/.f64 b a) 0)","0","(*.f64 -1/2 (/.f64 b a))","(/.f64 (*.f64 -1/2 b) a)","(*.f64 b (/.f64 -1/2 a))","(*.f64 1/2 (/.f64 b a))","(*.f64 (/.f64 b a) 1/2)","(*.f64 b (/.f64 1/2 a))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(/.f64 (neg.f64 b) a)"]],"stop":[["node limit",1]],"time":2229.6318359375,"type":"simplify"},{"compiler":[[28295,20926]],"time":297.63623046875,"type":"eval"},{"alts":[["(+.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (*.f64 (sqrt.f64 (*.f64 c -4)) (sqrt.f64 a)) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","fresh",50.01967102655949],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","done",33.04674983849664],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",44.5361859610908],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (*.f64 a c)) 2)) (cbrt.f64 (*.f64 a c)) (*.f64 b b)))) (*.f64 2 a))","fresh",36.562390919011754],["(/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (/.f64 (*.f64 a -2) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))","fresh",37.929189848250715],["(+.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (*.f64 b (/.f64 1/2 a)))","fresh",45.725486124996195],["(/.f64 (neg.f64 c) b)","fresh",38.18410318261545],["(+.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (*.f64 b (/.f64 -1/2 a)))","fresh",45.77453124466554],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",51.9783068867363],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","next",36.50359847605632],["(/.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 a -2) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))","fresh",49.73067109758472]],"compiler":[[107,81],[36,25],[10,6],[27,17],[32,23],[48,36],[7,5],[48,36],[14,10],[19,13],[30,18],[107,81],[10,6],[27,17],[32,23],[48,36],[7,5],[48,36],[14,10],[19,13],[30,18]],"count":[[293,11]],"kept":[{"done":[1,1],"fresh":[8,7],"new":[283,3],"picked":[1,0]}],"min-error":[4.382155334635626],"time":62.77880859375,"type":"prune"},{"compiler":[[66,37]],"locations":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))",0.0703125,true],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))))",0.4180693557102868,true],["(fma.f64 b b (*.f64 a (*.f64 c -4)))",1.249986238027801,true],["(sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))",23.64914674034015,true]],"time":15.328125,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","c","-inf",0.287841796875],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","c","inf",0.276123046875],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","c","0",0.240966796875],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","a","-inf",0.2861328125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","a","inf",0.4189453125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","a","0",0.239990234375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","b","-inf",0.2119140625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","b","inf",0.263916015625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","b","0",0.239990234375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))))","c","-inf",0.262939453125],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))))","c","inf",0.24609375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))))","c","0",0.23486328125],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))))","a","-inf",0.2451171875],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))))","a","inf",0.26318359375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))))","a","0",0.244140625],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))))","b","-inf",0.208984375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))))","b","inf",0.232177734375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))))","b","0",0.22509765625],["(fma.f64 b b (*.f64 a (*.f64 c -4)))","c","-inf",0.155029296875],["(fma.f64 b b (*.f64 a (*.f64 c -4)))","c","inf",0.1689453125],["(fma.f64 b b (*.f64 a (*.f64 c -4)))","c","0",0.223876953125],["(fma.f64 b b (*.f64 a (*.f64 c -4)))","a","-inf",0.171875],["(fma.f64 b b (*.f64 a (*.f64 c -4)))","a","inf",0.153076171875],["(fma.f64 b b (*.f64 a (*.f64 c -4)))","a","0",0.253173828125],["(fma.f64 b b (*.f64 a (*.f64 c -4)))","b","-inf",0.274169921875],["(fma.f64 b b (*.f64 a (*.f64 c -4)))","b","inf",0.2509765625],["(fma.f64 b b (*.f64 a (*.f64 c -4)))","b","0",0.278076171875],["(sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))","c","-inf",0.281005859375],["(sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))","c","inf",0.260986328125],["(sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))","c","0",0.410888671875],["(sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))","a","-inf",0.287109375],["(sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))","a","inf",0.26708984375],["(sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))","a","0",0.239990234375],["(sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))","b","-inf",0.23095703125],["(sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))","b","inf",0.27197265625],["(sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))","b","0",0.386962890625]],"time":9.64990234375,"type":"series"},{"count":[[4,172]],"egraph":[[2,4144,59,0.030000335],[1,303,59,0.005821876],[0,14,66,0.000389709]],"inputs":[["(sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1/4) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 2) 1/2) (pow.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (*.f64 c -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 a (*.f64 c -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 b b) 1) (*.f64 a (*.f64 c -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 2) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1/4) (*.f64 (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1/4) 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 b b) 3) (pow.f64 (*.f64 a (*.f64 c -4)) 3)) (+.f64 (pow.f64 (*.f64 b b) 2) (-.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16) (*.f64 (*.f64 b b) (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 b b) 2) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (-.f64 (*.f64 b b) (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 -4) c) a) (exp.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 a (*.f64 c -4)))) (exp.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 b b)) (+.f64 1 (expm1.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 b b) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))) (/.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 2) (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b b (fma.f64 a (*.f64 c -4) (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (/.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 b b (fma.f64 a (*.f64 c -4) (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2)) (fma.f64 b b (fma.f64 b b (fma.f64 a (*.f64 c -4) (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2)) (+.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 b b (fma.f64 a (*.f64 c -4) (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (neg.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) (*.f64 b b)) (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 b b (fma.f64 b b (fma.f64 a (*.f64 c -4) (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (neg.f64 (cbrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1/4) (pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 2) 1/2) (pow.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) 1/2) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (*.f64 b b))) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (cbrt.f64 (*.f64 b b))) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (/.f64 1/2 a))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (/.f64 1/2 a)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 2) (*.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))) (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (*.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (/.f64 1 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) 1/2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 2) a) (/.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) a) (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 2) (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 2) 2) (/.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 2) 1) (/.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 1) (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 a a) 2))) (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 2) (cbrt.f64 (pow.f64 (+.f64 a a) 2))) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (cbrt.f64 (pow.f64 (+.f64 a a) 2))) (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 a a))) (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) (sqrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) 2) (sqrt.f64 (+.f64 a a))) (/.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (sqrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 a -2) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) 3) (pow.f64 (+.f64 a a) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 a -2) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b) 3) (pow.f64 (+.f64 a a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4))))) (*.f64 a -2))) 1))))))"]],"rules":[["egg-rr",45],["egg-rr",65],["egg-rr",34],["egg-rr",28]],"stop":[["node limit",1]],"time":62.89794921875,"type":"rewrite"},{"count":[[256,232]],"egraph":[[2,1614,1713,0.0138145],[1,424,1866,0.003064791],[0,126,1974,0.000680958]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) b))","(+.f64 b (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (neg.f64 b))","(-.f64 (*.f64 (*.f64 (/.f64 c b) a) 2) b)","(-.f64 (*.f64 (/.f64 2 b) (*.f64 c a)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b)))","(-.f64 (*.f64 2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))) b)","(-.f64 (*.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a))) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) 4 (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4 (-.f64 (*.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a))) b))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) b))","(+.f64 b (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) b))","(+.f64 b (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 -2 (/.f64 b (*.f64 c a)))","(*.f64 (/.f64 c b) (*.f64 a -2))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (pow.f64 b 7)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 b -2 (*.f64 (*.f64 (/.f64 c b) a) 2))","(fma.f64 b -2 (*.f64 (/.f64 2 b) (*.f64 c a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) 4))))","(+.f64 (fma.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4 (*.f64 b -2)) (*.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 -2 (/.f64 b (*.f64 c a)))","(*.f64 (/.f64 c b) (*.f64 a -2))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (/.f64 (pow.f64 a 4) (/.f64 b (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -2 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2)))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 a 4) b) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6))))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 c 4) b) (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 20)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 -2 (/.f64 b (*.f64 c a)))","(*.f64 (/.f64 c b) (*.f64 a -2))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (/.f64 (pow.f64 a 4) (/.f64 b (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -2 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2)))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 a 4) b) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6))))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 c 4) b) (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 20)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(/.f64 (neg.f64 c) b)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (neg.f64 (/.f64 c b)))","(-.f64 (/.f64 (neg.f64 c) b) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(neg.f64 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b)) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b))) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(fma.f64 -1/4 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (*.f64 a (pow.f64 b 7))) (-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b))))","(*.f64 -1 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 c b) (/.f64 (neg.f64 b) a))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (+.f64 (/.f64 c b) (/.f64 (neg.f64 b) a)))","(+.f64 (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)) (-.f64 (/.f64 c b) (/.f64 b a)))","(fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (+.f64 (/.f64 c b) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (/.f64 (neg.f64 b) a))))","(+.f64 (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)) (+.f64 (-.f64 (/.f64 c b) (/.f64 b a)) (*.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))))))","(-.f64 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b))) (/.f64 b a))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(/.f64 (neg.f64 c) b)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (neg.f64 (/.f64 c b)))","(-.f64 (/.f64 (neg.f64 c) b) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(neg.f64 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b)) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (fma.f64 -1/4 (/.f64 (pow.f64 a 3) (/.f64 b (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -2 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2)))) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (-.f64 (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 -1/4 (/.f64 b (*.f64 (pow.f64 a 3) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))))))) (/.f64 c b)) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(-.f64 (fma.f64 -2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (*.f64 (/.f64 (*.f64 (pow.f64 a 3) -1/4) b) (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(/.f64 (neg.f64 c) b)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (neg.f64 (/.f64 c b)))","(-.f64 (/.f64 (neg.f64 c) b) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(neg.f64 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b)) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 c 4) a) (/.f64 (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (*.f64 -2 (/.f64 (*.f64 a a) (pow.f64 b 3))) 2)) b)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 c 4) a) (/.f64 (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 a 4) (pow.f64 b 6)))) b)) (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b))) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 c 4) (*.f64 b a)) (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 20)) (-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b))))"]],"stop":[["node limit",1]],"time":40.647216796875,"type":"simplify"},{"compiler":[[5435,3402]],"time":57.811767578125,"type":"eval"},{"alts":[["(+.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (*.f64 (sqrt.f64 (*.f64 c -4)) (sqrt.f64 a)) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","fresh",50.01967102655949],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","done",33.04674983849664],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",44.5361859610908],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",51.9783068867363],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (*.f64 a c)) 2)) (cbrt.f64 (*.f64 a c)) (*.f64 b b)))) (*.f64 2 a))","fresh",36.562390919011754],["(/.f64 (exp.f64 (log.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b))) (*.f64 2 a))","fresh",48.572609695944514],["(/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (/.f64 (*.f64 a -2) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))","fresh",37.929189848250715],["(/.f64 (neg.f64 c) b)","fresh",38.18410318261545],["(+.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (*.f64 b (/.f64 -1/2 a)))","fresh",45.77453124466554],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","done",36.50359847605632],["(/.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 a -2) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))","fresh",49.73067109758472]],"compiler":[[107,81],[36,25],[10,6],[14,10],[27,17],[19,14],[32,23],[7,5],[48,36],[19,13],[30,18]],"count":[[243,11]],"kept":[{"done":[1,1],"fresh":[9,6],"new":[232,3],"picked":[1,1]}],"min-error":[4.382155078688791],"time":45.593994140625,"type":"prune"},{"accuracy":[8.107225346096225],"baseline":[33.04674983849664],"branch":[["a",25.803905678805094,7],["b",8.107225346096225,3],["c",26.564352508362443,8],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))",13.64992965080832,5]],"compiler":[[4,3],[4,3],[4,3],[20,14],[604,395]],"count":[[21,3]],"inputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","(/.f64 (exp.f64 (log.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 c -4)))) b))) (*.f64 2 a))","(/.f64 (neg.f64 c) b)","(+.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (*.f64 (sqrt.f64 (*.f64 c -4)) (sqrt.f64 a)) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","(+.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (*.f64 b (/.f64 1/2 a)))","(+.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (*.f64 b (/.f64 -1/2 a)))","(/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)) (/.f64 (*.f64 a -2) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))","(+.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))","(/.f64 (-.f64 (*.f64 b b) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 a -2) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))","(/.f64 (+.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) (*.f64 2 a))","(/.f64 (neg.f64 c) b)","(-.f64 (/.f64 c b) (/.f64 b a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (*.f64 a c)) 2)) (cbrt.f64 (*.f64 a c)) (*.f64 b b)))) (*.f64 2 a))","(/.f64 (/.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","(*.f64 (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a) (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2))","(pow.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2))) 2)","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (/.f64 -1/2 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))"]],"link":["."],"name":["quadp (p42, positive)"],"oracle":[63.882615761109115],"outputs":[["(-.f64 (/.f64 c b) (/.f64 b a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a))","(/.f64 (neg.f64 c) b)"]],"time":160.71923828125,"times":[["a",47.178955078125],["b",26.991943359375],["c",53.63916015625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))",22.406005859375]],"type":"regimes"},{"bstep":[[2.9845788666958835e-158,3.562433016429675e-154,25.276123046875],[-7.874177670516464e+119,-7.530477332140231e+119,0.10888671875]],"compiler":[[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[22,16],[4,3]],"method":["binary-search","binary-search"],"time":25.7109375,"type":"bsearch"},{"compiler":[[37,23]],"egraph":[[4,58,50,0.00034795800000000005],[3,56,50,0.00027720800000000003],[2,50,50,0.000196875],[1,39,50,0.000126292],[0,26,52,6.3375e-5]],"inputs":[["(if (<=.f64 b -759999999999999979068889404044414119041239708346509121831960244070684225772873732885932780325582234038583434362304331776) (-.f64 (/.f64 c b) (/.f64 b a)) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a)) (/.f64 (neg.f64 c) b)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b -759999999999999979068889404044414119041239708346509121831960244070684225772873732885932780325582234038583434362304331776) (-.f64 (/.f64 c b) (/.f64 b a)) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 2 a)) (/.f64 (neg.f64 c) b)))","(if (<=.f64 b -759999999999999979068889404044414119041239708346509121831960244070684225772873732885932780325582234038583434362304331776) (-.f64 (/.f64 c b) (/.f64 b a)) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 a 2)) (/.f64 (neg.f64 c) b)))","(if (<=.f64 b -759999999999999979068889404044414119041239708346509121831960244070684225772873732885932780325582234038583434362304331776) (-.f64 (/.f64 c b) (/.f64 b a)) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))) b) (*.f64 a 2)) (/.f64 (neg.f64 c) b)))"]],"stop":[["fuel",1],["saturated",1]],"time":9.449951171875,"type":"simplify"},{"time":0.027099609375,"type":"soundness"},{"compiler":[[37,23]],"remove-preprocessing":[[]],"time":13.61083984375,"type":"end"}]