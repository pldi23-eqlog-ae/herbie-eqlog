[{"compiler":[[10,7]],"method":["search"],"sampling":[[12,0.46829234808683395,0.34341438859701157,0.18829326331615448],[11,0.46829234808683395,0.34341438859701157,0.18829326331615448],[10,0.43707285821437836,0.43707285821437836,0.1258542835712433],[9,0.43707285821437836,0.43707285821437836,0.1258542835712433],[8,0.37463387846946716,0.6243897974491119,0.0009763240814208984],[7,0.37463387846946716,0.6243897974491119,0.0009763240814208984],[6,0.0,0.9990236759185791,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":72.73388671875,"type":"analyze"},{"outcomes":[["body",512,"invalid",99.91015625,1017],["body",256,"invalid",104.4833984375,2039],["body",512,"valid",97.000244140625,976],["body",1024,"invalid",313.053466796875,1908],["body",1024,"valid",359.9423828125,2064],["body",2048,"valid",1.83203125,5],["body",256,"valid",252.661376953125,5211]],"time":1242.220947265625,"type":"sample"},{"compiler":[[9,6]],"egraph":[[0,2,2,1.917e-6],[7,6744,22,0.028168082999999997],[6,2566,22,0.017201999],[5,839,22,0.006120374],[4,329,22,0.002294999],[3,144,22,0.000991916],[2,63,22,0.00045854099999999997],[1,28,22,0.000210374],[0,11,22,7.6833e-5]],"inputs":[["0","1"],["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))","(*.f64 (cos.f64 y) (/.f64 (sinh.f64 x) x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))","(/.f64 (*.f64 (cos.f64 x) (sinh.f64 y)) y)","(*.f64 (sinh.f64 y) (/.f64 (cos.f64 x) y))","(/.f64 (sinh.f64 y) (/.f64 y (cos.f64 x)))","(*.f64 (cos.f64 y) (/.f64 (sinh.f64 x) x))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":52.05908203125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[7,5079,11,0.022991583],[6,1295,11,0.010905624999999999],[5,428,11,0.003256917],[4,171,11,0.0012738749999999998],[3,77,11,0.0005719589999999999],[2,35,11,0.000273084],[1,16,11,0.00013324999999999999],[0,7,11,5.2e-5]],"inputs":[["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))","(/.f64 (cos.f64 x) (/.f64 y (sinh.f64 y)))","(*.f64 (sinh.f64 y) (/.f64 (cos.f64 x) y))"]],"stop":[["node limit",1]],"time":33.930908203125,"type":"simplify"},{"compiler":[[16,8]],"time":0.295166015625,"type":"eval"},{"alts":[["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))","next",0.02734375]],"compiler":[[9,6],[9,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[0.02734375],"time":0.796875,"type":"prune"},{"compiler":[[19,6]],"locations":[["(cos.f64 x)",0.02734375,true]],"time":4.7900390625,"type":"localize"},{"count":[[1,4]],"series":[["(cos.f64 x)","x","-inf",0.158935546875],["(cos.f64 x)","x","inf",0.18505859375],["(cos.f64 x)","x","0",0.3369140625]],"time":0.720947265625,"type":"series"},{"count":[[1,49]],"egraph":[[3,7412,3,0.056537541000000004],[2,673,3,0.011943541],[1,58,3,0.000941083],[0,3,3,9.3375e-5]],"inputs":[["(cos.f64 x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cos.f64 x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 x)))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (+.f64 x 1)) (cos.f64 1)) (*.f64 (sin.f64 (+.f64 x 1)) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (cos.f64 x) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 x)) (pow.f64 (cbrt.f64 (cos.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (cbrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 x))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (cos.f64 x))) (pow.f64 (cbrt.f64 (cos.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 4)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 x))) 2) (cbrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 x) 1/6) (*.f64 (pow.f64 (cos.f64 x) 1/6) (pow.f64 (cbrt.f64 (cos.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 x) 1/4) (sqrt.f64 (pow.f64 (cos.f64 x) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 x) 1/4) (*.f64 (pow.f64 (cos.f64 x) 1/4) (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (cos.f64 x)) (pow.f64 (cos.f64 x) 1/4)) (pow.f64 (cos.f64 x) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 4) 2)) (cbrt.f64 (cbrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 5/2)) (pow.f64 (cos.f64 x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 5)) (pow.f64 (cos.f64 x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cos.f64 x) 3/2)) (pow.f64 (cos.f64 x) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 4) 2) 1/3) (cbrt.f64 (cbrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cos.f64 x) 5/2) 1/3) (pow.f64 (cos.f64 x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (cos.f64 x)) (cbrt.f64 (cos.f64 x))) (pow.f64 (cos.f64 x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cos.f64 x)) (cbrt.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 4))) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 x))) 2)) (cbrt.f64 (cbrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (pow.f64 (cos.f64 x) 1/6)) (pow.f64 (cos.f64 x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 3) 1) (+.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) (+.f64 1 (+.f64 (cos.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1) (+.f64 (+.f64 (cos.f64 x) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (cos.f64 x))) 2)) (cbrt.f64 (log.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (cos.f64 x)))) (sqrt.f64 (log.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (cos.f64 x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cos.f64 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (cos.f64 x))) 2))))))"]],"rules":[["egg-rr",49]],"stop":[["node limit",1]],"time":74.386962890625,"type":"rewrite"},{"count":[[53,56]],"egraph":[[16,7836,46,0.101544791],[15,7588,46,0.091754666],[14,7336,46,0.0818705],[13,6731,46,0.071432916],[12,6236,46,0.060033458],[11,5800,46,0.050729291999999995],[10,4492,46,0.042171416999999996],[9,4177,46,0.033613832999999996],[8,3926,46,0.026922915999999998],[7,3731,46,0.021182541],[6,3505,46,0.015729499],[5,2920,46,0.010593749],[4,1163,46,0.0059519989999999995],[3,326,46,0.002304249],[2,107,48,0.000833582],[1,48,50,0.000327541],[0,21,52,0.000104916]],"inputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (*.f64 -1/2 (*.f64 x x)))","(fma.f64 -1/2 (*.f64 x x) 1)","(fma.f64 x (*.f64 -1/2 x) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 1 (fma.f64 -1/2 (*.f64 x x) (*.f64 1/24 (pow.f64 x 4))))","(fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) 1))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6)))))","(+.f64 1 (fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (*.f64 -1/720 (pow.f64 x 6)))))","(fma.f64 -1/720 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) 1)))","(fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (fma.f64 -1/720 (pow.f64 x 6) 1)))"]],"stop":[["node limit",1]],"time":114.26806640625,"type":"simplify"},{"compiler":[[822,360]],"time":8.096923828125,"type":"eval"},{"alts":[["(*.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 x))) 2)) (cbrt.f64 (cbrt.f64 (cos.f64 x)))) (/.f64 (sinh.f64 y) y))","fresh",0.4357377930532607],["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))","done",0.02734375],["(*.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (cos.f64 x))) 2)) (cbrt.f64 (log.f64 (cos.f64 x)))) (/.f64 (sinh.f64 y) y))","fresh",17.596208424297185],["(*.f64 (/.f64 (-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1) (+.f64 (+.f64 (cos.f64 x) 1) 1)) (/.f64 (sinh.f64 y) y))","next",0.40125794961752076]],"compiler":[[24,14],[9,6],[19,12],[25,18],[24,14],[19,12],[25,18]],"count":[[57,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[56,3],"picked":[1,1]}],"min-error":[0.00390625],"time":10.836181640625,"type":"prune"},{"compiler":[[84,49]],"locations":[["(/.f64 (-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1) (+.f64 (+.f64 (cos.f64 x) 1) 1))",0.15625,true],["(-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1)",0.19709009327188848,true],["(*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1))",0.221035009768442,true],["(+.f64 (cos.f64 x) 1)",0.3305101902175703,true]],"time":16.741943359375,"type":"localize"},{"count":[[4,44]],"series":[["(/.f64 (-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1) (+.f64 (+.f64 (cos.f64 x) 1) 1))","x","-inf",0.44677734375],["(/.f64 (-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1) (+.f64 (+.f64 (cos.f64 x) 1) 1))","x","inf",0.65185546875],["(/.f64 (-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1) (+.f64 (+.f64 (cos.f64 x) 1) 1))","x","0",0.317138671875],["(-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1)","x","-inf",0.180908203125],["(-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1)","x","inf",0.18994140625],["(-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1)","x","0",0.180908203125],["(*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1))","x","-inf",0.3359375],["(*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1))","x","inf",0.405029296875],["(*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1))","x","0",0.239013671875],["(+.f64 (cos.f64 x) 1)","x","-inf",0.1728515625],["(+.f64 (cos.f64 x) 1)","x","inf",0.176025390625],["(+.f64 (cos.f64 x) 1)","x","0",0.23486328125]],"time":3.697021484375,"type":"series"},{"count":[[4,384]],"egraph":[[2,3424,28,0.025379457],[1,217,28,0.004296666],[0,9,47,0.000276833]],"inputs":[["(+.f64 (cos.f64 x) 1)","(*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1))","(-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1)","(/.f64 (-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1) (+.f64 (+.f64 (cos.f64 x) 1) 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 2 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (cos.f64 x) 2) (+.f64 (cos.f64 x) -1)) (/.f64 1 (+.f64 (cos.f64 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (cbrt.f64 (+.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (*.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (sqrt.f64 (+.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (*.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (cos.f64 x) 3)) (/.f64 1 (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (cos.f64 x) (cos.f64 x) -1) (/.f64 1 (+.f64 (cos.f64 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x)) (+.f64 1 (pow.f64 (cos.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (cos.f64 x) -1) (fma.f64 (cos.f64 x) (cos.f64 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (cos.f64 x) 3)) (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (cos.f64 x) 3)) (+.f64 1 (-.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (cos.f64 x) (cos.f64 x) -1) (+.f64 (cos.f64 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 x) (sin.f64 x)) (-.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (pow.f64 (cos.f64 x) 3))) (neg.f64 (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (cos.f64 x) (cos.f64 x) -1)) (neg.f64 (+.f64 (cos.f64 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (cos.f64 x) 3)) 1) (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (cos.f64 x) (cos.f64 x) -1) 1) (+.f64 (cos.f64 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x)) (+.f64 1 (pow.f64 (cos.f64 x) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (cos.f64 x) -1) (fma.f64 (cos.f64 x) (cos.f64 x) -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 1 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (hypot.f64 (sqrt.f64 (cos.f64 x)) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (*.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (*.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (+.f64 1 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (hypot.f64 (sqrt.f64 (cos.f64 x)) (cos.f64 x)) (sqrt.f64 (+.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (sqrt.f64 (cos.f64 x))) (sqrt.f64 (+.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (+.f64 1 (cos.f64 x)))) (sqrt.f64 (+.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log.f64 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log.f64 (+.f64 2 (cos.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (cos.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 2 (cos.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (/.f64 1 (cos.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 2 (cos.f64 x)) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 2 (cos.f64 x)) (*.f64 (cos.f64 x) (/.f64 1 (+.f64 2 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2) (cbrt.f64 (+.f64 2 (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 x)) (pow.f64 (cbrt.f64 (cos.f64 x)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (cbrt.f64 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (*.f64 (cbrt.f64 (cos.f64 x)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) (*.f64 (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (/.f64 1 (+.f64 2 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) (sqrt.f64 (+.f64 2 (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 x)) (*.f64 (sqrt.f64 (cos.f64 x)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (/.f64 1 (+.f64 2 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (/.f64 1 (+.f64 (neg.f64 (cos.f64 x)) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 x) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) 1) (/.f64 (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (+.f64 2 (cos.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) 1) (/.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (+.f64 2 (cos.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (cbrt.f64 (+.f64 2 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 2 (cos.f64 x)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (cos.f64 x) (cbrt.f64 (+.f64 2 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (cbrt.f64 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cbrt.f64 (+.f64 2 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (sqrt.f64 (+.f64 2 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 2 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (cos.f64 x) (sqrt.f64 (+.f64 2 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (sqrt.f64 (+.f64 2 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) 1) (expm1.f64 (*.f64 1/2 (log1p.f64 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cos.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) 1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (cos.f64 x)) (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (+.f64 1 (cos.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)) 1) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 1 (cos.f64 x)) (cos.f64 x) 1) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2))) (cbrt.f64 (exp.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (cos.f64 x) 3)) (+.f64 1 (pow.f64 (cos.f64 x) 3))) (*.f64 (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x)) (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (cos.f64 x) (cos.f64 x) -1) (fma.f64 (cos.f64 x) (cos.f64 x) -1)) (*.f64 (+.f64 (cos.f64 x) -1) (+.f64 (cos.f64 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (cos.f64 x) (cos.f64 x) -1) (+.f64 1 (pow.f64 (cos.f64 x) 3))) (*.f64 (+.f64 (cos.f64 x) -1) (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (cos.f64 x) 3)) (fma.f64 (cos.f64 x) (cos.f64 x) -1)) (*.f64 (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x)) (+.f64 (cos.f64 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)) 3) (pow.f64 (+.f64 1 (cos.f64 x)) 3)) (fma.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)) (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)) (-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (*.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)) (+.f64 1 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (cos.f64 x) 3)) (+.f64 1 (cos.f64 x))) (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (cos.f64 x) (cos.f64 x) -1) (+.f64 1 (cos.f64 x))) (+.f64 (cos.f64 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (cos.f64 x)) (+.f64 1 (pow.f64 (cos.f64 x) 3))) (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (cos.f64 x)) (fma.f64 (cos.f64 x) (cos.f64 x) -1)) (+.f64 (cos.f64 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)) (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x))) (pow.f64 (+.f64 1 (cos.f64 x)) 2)) (-.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)) (+.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (cos.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 1 (cos.f64 x))) (exp.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 1 (cos.f64 x)))) (exp.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x))) (+.f64 1 (expm1.f64 (+.f64 1 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (cos.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log1p.f64 (cos.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (cos.f64 x)) (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (cos.f64 x)) 1 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (cos.f64 x)) (cos.f64 x) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2) (*.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (cbrt.f64 (+.f64 1 (cos.f64 x))) (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (*.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 1) (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (*.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) (cos.f64 x)) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (*.f64 (cbrt.f64 (cos.f64 x)) (+.f64 1 (cos.f64 x))) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) (*.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (sqrt.f64 (+.f64 1 (cos.f64 x))) (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (*.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) 1) (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (*.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (cos.f64 x)) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 x)) (*.f64 (sqrt.f64 (cos.f64 x)) (+.f64 1 (cos.f64 x))) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (expm1.f64 (*.f64 6 (log1p.f64 (cos.f64 x)))) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (pow.f64 (cos.f64 x) 3)) (/.f64 1 (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x))) (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (expm1.f64 (*.f64 4 (log1p.f64 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2)) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (cos.f64 x) (cos.f64 x) -1) (/.f64 1 (+.f64 (cos.f64 x) -1)) (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 x) (+.f64 1 (cos.f64 x)) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)) 1 (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2))) (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2)))) (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x))) (cbrt.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))) (cbrt.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x))) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (+.f64 1 (cos.f64 x))) (hypot.f64 1 (+.f64 1 (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (sqrt.f64 (cos.f64 x)) (cos.f64 x)) (hypot.f64 (sqrt.f64 (cos.f64 x)) (cos.f64 x)) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2)) (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (sqrt.f64 (cos.f64 x))) (*.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (sqrt.f64 (cos.f64 x))) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (+.f64 1 (cos.f64 x)))) (*.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (+.f64 1 (cos.f64 x)))) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (cos.f64 x)) (pow.f64 (cbrt.f64 (cos.f64 x)) 2)) (cbrt.f64 (cos.f64 x)) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (cos.f64 x)) (sqrt.f64 (cos.f64 x))) (sqrt.f64 (cos.f64 x)) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 x) (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2)) (cbrt.f64 (+.f64 1 (cos.f64 x))) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 x) (sqrt.f64 (+.f64 1 (cos.f64 x)))) (sqrt.f64 (+.f64 1 (cos.f64 x))) (+.f64 1 (cos.f64 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (pow.f64 (+.f64 1 (cos.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))) (cbrt.f64 (exp.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (log.f64 (cbrt.f64 (exp.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))) (log.f64 (sqrt.f64 (exp.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2) (*.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) (*.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 6 (log1p.f64 (cos.f64 x)))) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 4 (log1p.f64 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2))) (expm1.f64 (*.f64 6 (log1p.f64 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2)) (expm1.f64 (*.f64 4 (log1p.f64 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (*.f64 6 (log1p.f64 (cos.f64 x)))) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (*.f64 6 (log1p.f64 (cos.f64 x)))) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4) (-.f64 1 (*.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (*.f64 4 (log1p.f64 (cos.f64 x)))) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (expm1.f64 (*.f64 6 (log1p.f64 (cos.f64 x))))) (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (expm1.f64 (*.f64 4 (log1p.f64 (cos.f64 x))))) (neg.f64 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (cos.f64 x)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)) (cos.f64 x)) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2))) (expm1.f64 (*.f64 6 (log1p.f64 (cos.f64 x))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2)) (expm1.f64 (*.f64 4 (log1p.f64 (cos.f64 x))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x))) (exp.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x))) (+.f64 1 (expm1.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log1p.f64 (cos.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (*.f64 2 (log1p.f64 (cos.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (cos.f64 x)) (+.f64 1 (cos.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (cos.f64 x)) (cos.f64 x) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (*.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) (cos.f64 x)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (*.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) (+.f64 1 (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) (*.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (*.f64 (cbrt.f64 (cos.f64 x)) (+.f64 1 (cos.f64 x))) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (*.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (cos.f64 x)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (*.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (+.f64 1 (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 x)) (*.f64 (sqrt.f64 (cos.f64 x)) (+.f64 1 (cos.f64 x))) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 x) (+.f64 1 (cos.f64 x)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) 3) (sqrt.f64 (+.f64 1 (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x))) (cbrt.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x)))) (cbrt.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (cos.f64 x))) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (sqrt.f64 (cos.f64 x)) (cos.f64 x)) (hypot.f64 (sqrt.f64 (cos.f64 x)) (cos.f64 x)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (sqrt.f64 (cos.f64 x))) (*.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (sqrt.f64 (cos.f64 x))) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (+.f64 1 (cos.f64 x)))) (*.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (+.f64 1 (cos.f64 x)))) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (cos.f64 x)) (pow.f64 (cbrt.f64 (cos.f64 x)) 2)) (cbrt.f64 (cos.f64 x)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (cos.f64 x)) (sqrt.f64 (cos.f64 x))) (sqrt.f64 (cos.f64 x)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (cos.f64 x)) (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2)) (cbrt.f64 (+.f64 1 (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 x) (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2)) (cbrt.f64 (+.f64 1 (cos.f64 x))) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 x) (sqrt.f64 (+.f64 1 (cos.f64 x)))) (sqrt.f64 (+.f64 1 (cos.f64 x))) (cos.f64 x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 (cos.f64 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (cos.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 x) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (sqrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (/.f64 1 (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (sqrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) 1) (/.f64 (+.f64 1 (cos.f64 x)) (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (+.f64 1 (cos.f64 x)) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (+.f64 1 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cos.f64 x) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (/.f64 1 (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (sqrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) 1) (/.f64 (+.f64 1 (cos.f64 x)) (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (+.f64 1 (cos.f64 x)) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (+.f64 1 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cos.f64 x) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (/.f64 1 (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (sqrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) 1) (/.f64 (+.f64 1 (cos.f64 x)) (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (+.f64 1 (cos.f64 x)) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (+.f64 1 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cos.f64 x) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (neg.f64 (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (fma.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (cos.f64 x) (/.f64 1 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (/.f64 1 (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (sqrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) 1) (/.f64 (+.f64 1 (cos.f64 x)) (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (+.f64 2 (cos.f64 x))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (+.f64 1 (cos.f64 x)) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (+.f64 1 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cos.f64 x) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)))))) (fma.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (*.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 x))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 x))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 x))) (cbrt.f64 (exp.f64 (cos.f64 x))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 x)))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))) (/.f64 1 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (/.f64 1 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 2 (cos.f64 x)) (*.f64 (cos.f64 x) (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 x)) (pow.f64 (cbrt.f64 (cos.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (cbrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (*.f64 (cbrt.f64 (cos.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) (*.f64 (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 x)) (*.f64 (sqrt.f64 (cos.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (/.f64 1 (+.f64 (neg.f64 (cos.f64 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) 1) (/.f64 (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) 1) (/.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (cbrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 2 (cos.f64 x)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (cos.f64 x) (cbrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (cbrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cbrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (sqrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 2 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (cos.f64 x) (sqrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (sqrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) 1) (expm1.f64 (*.f64 1/2 (log1p.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cos.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 1 (cos.f64 x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (+.f64 (neg.f64 (cos.f64 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 3) (pow.f64 (+.f64 2 (cos.f64 x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 x)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log1p.f64 (cos.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (cos.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (cos.f64 x)) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (/.f64 1 (+.f64 2 (cos.f64 x))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (/.f64 1 (+.f64 2 (cos.f64 x))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 2 (cos.f64 x)) (*.f64 (cos.f64 x) (/.f64 1 (+.f64 2 (cos.f64 x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (cbrt.f64 (+.f64 1 (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (*.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 x)) (pow.f64 (cbrt.f64 (cos.f64 x)) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (cbrt.f64 (cos.f64 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (*.f64 (cbrt.f64 (cos.f64 x)) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) (*.f64 (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (/.f64 1 (+.f64 2 (cos.f64 x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (sqrt.f64 (+.f64 1 (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) (*.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (cos.f64 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 x)) (*.f64 (sqrt.f64 (cos.f64 x)) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (*.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (/.f64 1 (+.f64 2 (cos.f64 x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (/.f64 1 (+.f64 (neg.f64 (cos.f64 x)) -2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (pow.f64 (cos.f64 x) 3)) (/.f64 1 (-.f64 (fma.f64 (cos.f64 x) (cos.f64 x) 1) (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (cos.f64 x) (cos.f64 x) -1) (/.f64 1 (+.f64 (cos.f64 x) -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 x) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (sqrt.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x)))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) 1) (/.f64 (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (+.f64 2 (cos.f64 x))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) 1) (/.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (+.f64 2 (cos.f64 x))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (cbrt.f64 (+.f64 2 (cos.f64 x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 2 (cos.f64 x)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (cos.f64 x) (cbrt.f64 (+.f64 2 (cos.f64 x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (cbrt.f64 (cos.f64 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (sqrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cbrt.f64 (+.f64 2 (cos.f64 x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (sqrt.f64 (+.f64 2 (cos.f64 x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 2 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (cos.f64 x) (sqrt.f64 (+.f64 2 (cos.f64 x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) 2)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (cbrt.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (sqrt.f64 (+.f64 2 (cos.f64 x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) 1) (/.f64 (+.f64 1 (cos.f64 x)) (+.f64 2 (cos.f64 x))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (+.f64 2 (cos.f64 x))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (+.f64 1 (cos.f64 x)) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (cbrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 1 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (+.f64 1 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 4)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (cos.f64 x))) 2) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (+.f64 1 (cos.f64 x))) 1) (expm1.f64 (*.f64 1/2 (log1p.f64 (cos.f64 x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cos.f64 x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x))))) (cos.f64 x) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3))) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x)))) (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))))"]],"rules":[["egg-rr",161],["egg-rr",69],["egg-rr",76],["egg-rr",78]],"stop":[["node limit",1]],"time":79.0400390625,"type":"rewrite"},{"count":[[428,418]],"egraph":[[5,5275,392,0.024698499999999998],[4,2765,392,0.013432125],[3,858,520,0.005940625],[2,295,540,0.002094458],[1,130,548,0.0008081669999999999],[0,53,556,0.000269375]],"inputs":[["2","(+.f64 2 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 2 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 2 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6)))))","(+.f64 1 (cos.f64 x))","(+.f64 1 (cos.f64 x))","(+.f64 1 (cos.f64 x))","(+.f64 1 (cos.f64 x))","4","(+.f64 (*.f64 -2 (pow.f64 x 2)) 4)","(+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 4 (*.f64 5/12 (pow.f64 x 4))))","(+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 4 (+.f64 (*.f64 -17/360 (pow.f64 x 6)) (*.f64 5/12 (pow.f64 x 4)))))","(pow.f64 (+.f64 1 (cos.f64 x)) 2)","(pow.f64 (+.f64 1 (cos.f64 x)) 2)","(pow.f64 (+.f64 1 (cos.f64 x)) 2)","(pow.f64 (+.f64 1 (cos.f64 x)) 2)","(pow.f64 (+.f64 (cos.f64 x) 1) 2)","(pow.f64 (+.f64 (cos.f64 x) 1) 2)","(pow.f64 (+.f64 (cos.f64 x) 1) 2)","(pow.f64 (+.f64 (cos.f64 x) 1) 2)","3","(+.f64 (*.f64 -2 (pow.f64 x 2)) 3)","(+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 3 (*.f64 5/12 (pow.f64 x 4))))","(+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 3 (+.f64 (*.f64 -17/360 (pow.f64 x 6)) (*.f64 5/12 (pow.f64 x 4)))))","(-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1)","(-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1)","(-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1)","(-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1)","(-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1)","(-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1)","(-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1)","(-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1)","1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6)))))","(/.f64 (-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1) (+.f64 2 (cos.f64 x)))","(/.f64 (-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1) (+.f64 2 (cos.f64 x)))","(/.f64 (-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1) (+.f64 2 (cos.f64 x)))","(/.f64 (-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1) (+.f64 2 (cos.f64 x)))","(/.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1) (+.f64 (cos.f64 x) 2))","(/.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1) (+.f64 (cos.f64 x) 2))","(/.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1) (+.f64 (cos.f64 x) 2))","(/.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1) (+.f64 (cos.f64 x) 2))"]],"method":["egg-herbie"],"outputs":[["2","(+.f64 2 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 2 (*.f64 -1/2 (*.f64 x x)))","(fma.f64 -1/2 (*.f64 x x) 2)","(+.f64 2 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 2 (fma.f64 -1/2 (*.f64 x x) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 2 (fma.f64 1/24 (pow.f64 x 4) (*.f64 x (*.f64 x -1/2))))","(fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) 2))","(+.f64 2 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6)))))","(+.f64 2 (fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (*.f64 -1/720 (pow.f64 x 6)))))","(+.f64 (fma.f64 -1/2 (*.f64 x x) 2) (fma.f64 -1/720 (pow.f64 x 6) (*.f64 1/24 (pow.f64 x 4))))","(fma.f64 1/24 (pow.f64 x 4) (fma.f64 -1/720 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 x x) 2)))","(fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (fma.f64 -1/720 (pow.f64 x 6) 2)))","(fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x 1/24) -1/2) (fma.f64 -1/720 (pow.f64 x 6) 2))","(+.f64 1 (cos.f64 x))","(+.f64 1 (cos.f64 x))","(+.f64 1 (cos.f64 x))","(+.f64 1 (cos.f64 x))","4","(+.f64 (*.f64 -2 (pow.f64 x 2)) 4)","(fma.f64 -2 (*.f64 x x) 4)","(fma.f64 (*.f64 x x) -2 4)","(fma.f64 x (*.f64 x -2) 4)","(+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 4 (*.f64 5/12 (pow.f64 x 4))))","(+.f64 (fma.f64 -2 (*.f64 x x) 4) (*.f64 (pow.f64 x 4) 5/12))","(fma.f64 (*.f64 x x) -2 (fma.f64 (pow.f64 x 4) 5/12 4))","(fma.f64 x (*.f64 x -2) (fma.f64 (pow.f64 x 4) 5/12 4))","(fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x 5/12) -2) 4)","(+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 4 (+.f64 (*.f64 -17/360 (pow.f64 x 6)) (*.f64 5/12 (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (*.f64 x x) 4) (fma.f64 -17/360 (pow.f64 x 6) (*.f64 (pow.f64 x 4) 5/12)))","(+.f64 (fma.f64 (*.f64 x x) -2 4) (fma.f64 (pow.f64 x 4) 5/12 (*.f64 (pow.f64 x 6) -17/360)))","(fma.f64 x (*.f64 x -2) (fma.f64 (pow.f64 x 4) 5/12 (fma.f64 (pow.f64 x 6) -17/360 4)))","(fma.f64 (pow.f64 x 6) -17/360 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x 5/12) -2) 4))","(fma.f64 (pow.f64 x 4) 5/12 (fma.f64 (pow.f64 x 6) -17/360 (fma.f64 x (*.f64 x -2) 4)))","(pow.f64 (+.f64 1 (cos.f64 x)) 2)","(pow.f64 (+.f64 1 (cos.f64 x)) 2)","(pow.f64 (+.f64 1 (cos.f64 x)) 2)","(pow.f64 (+.f64 1 (cos.f64 x)) 2)","(pow.f64 (+.f64 (cos.f64 x) 1) 2)","(pow.f64 (+.f64 1 (cos.f64 x)) 2)","(pow.f64 (+.f64 (cos.f64 x) 1) 2)","(pow.f64 (+.f64 1 (cos.f64 x)) 2)","(pow.f64 (+.f64 (cos.f64 x) 1) 2)","(pow.f64 (+.f64 1 (cos.f64 x)) 2)","(pow.f64 (+.f64 (cos.f64 x) 1) 2)","(pow.f64 (+.f64 1 (cos.f64 x)) 2)","3","(+.f64 (*.f64 -2 (pow.f64 x 2)) 3)","(fma.f64 -2 (*.f64 x x) 3)","(fma.f64 (*.f64 x x) -2 3)","(fma.f64 x (*.f64 x -2) 3)","(+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 3 (*.f64 5/12 (pow.f64 x 4))))","(+.f64 (fma.f64 -2 (*.f64 x x) 3) (*.f64 (pow.f64 x 4) 5/12))","(fma.f64 (*.f64 x x) -2 (fma.f64 (pow.f64 x 4) 5/12 3))","(fma.f64 x (*.f64 x -2) (fma.f64 (pow.f64 x 4) 5/12 3))","(fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x 5/12) -2) 3)","(+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 3 (+.f64 (*.f64 -17/360 (pow.f64 x 6)) (*.f64 5/12 (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (*.f64 x x) 3) (fma.f64 -17/360 (pow.f64 x 6) (*.f64 (pow.f64 x 4) 5/12)))","(+.f64 (fma.f64 (pow.f64 x 4) 5/12 (*.f64 (pow.f64 x 6) -17/360)) (fma.f64 (*.f64 x x) -2 3))","(fma.f64 x (*.f64 x -2) (fma.f64 (pow.f64 x 4) 5/12 (fma.f64 (pow.f64 x 6) -17/360 3)))","(fma.f64 (pow.f64 x 6) -17/360 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x 5/12) -2) 3))","(-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1)","(+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1)","(*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","(-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1)","(+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1)","(*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","(-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1)","(+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1)","(*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","(-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1)","(+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1)","(*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","(-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1)","(+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1)","(*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","(-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1)","(+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1)","(*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","(-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1)","(+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1)","(*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","(-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1)","(+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1)","(*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 (*.f64 -1/2 (*.f64 x x)) 1)","(fma.f64 -1/2 (*.f64 x x) 1)","(fma.f64 x (*.f64 -1/2 x) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 (fma.f64 -1/2 (*.f64 x x) (*.f64 1/24 (pow.f64 x 4))) 1)","(+.f64 (*.f64 1/24 (pow.f64 x 4)) (fma.f64 -1/2 (*.f64 x x) 1))","(fma.f64 1/24 (pow.f64 x 4) (fma.f64 -1/2 (*.f64 x x) 1))","(fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) 1))","(fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x 1/24) -1/2) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6)))))","(+.f64 (fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (*.f64 -1/720 (pow.f64 x 6)))) 1)","(+.f64 (fma.f64 -1/720 (pow.f64 x 6) (*.f64 1/24 (pow.f64 x 4))) (fma.f64 -1/2 (*.f64 x x) 1))","(+.f64 (*.f64 -1/720 (pow.f64 x 6)) (fma.f64 1/24 (pow.f64 x 4) (fma.f64 -1/2 (*.f64 x x) 1)))","(fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (fma.f64 -1/720 (pow.f64 x 6) 1)))","(/.f64 (-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1) (+.f64 2 (cos.f64 x)))","(/.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1) (+.f64 2 (cos.f64 x)))","(/.f64 (+.f64 2 (cos.f64 x)) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)))","(cos.f64 x)","(/.f64 (-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1) (+.f64 2 (cos.f64 x)))","(/.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1) (+.f64 2 (cos.f64 x)))","(/.f64 (+.f64 2 (cos.f64 x)) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)))","(cos.f64 x)","(/.f64 (-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1) (+.f64 2 (cos.f64 x)))","(/.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1) (+.f64 2 (cos.f64 x)))","(/.f64 (+.f64 2 (cos.f64 x)) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)))","(cos.f64 x)","(/.f64 (-.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) 1) (+.f64 2 (cos.f64 x)))","(/.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1) (+.f64 2 (cos.f64 x)))","(/.f64 (+.f64 2 (cos.f64 x)) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)))","(cos.f64 x)","(/.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1) (+.f64 (cos.f64 x) 2))","(/.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1) (+.f64 2 (cos.f64 x)))","(/.f64 (+.f64 2 (cos.f64 x)) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)))","(cos.f64 x)","(/.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1) (+.f64 (cos.f64 x) 2))","(/.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1) (+.f64 2 (cos.f64 x)))","(/.f64 (+.f64 2 (cos.f64 x)) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)))","(cos.f64 x)","(/.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1) (+.f64 (cos.f64 x) 2))","(/.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1) (+.f64 2 (cos.f64 x)))","(/.f64 (+.f64 2 (cos.f64 x)) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)))","(cos.f64 x)","(/.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 x) 1) 2) 1) (+.f64 (cos.f64 x) 2))","(/.f64 (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) -1) (+.f64 2 (cos.f64 x)))","(/.f64 (+.f64 2 (cos.f64 x)) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)))","(cos.f64 x)"]],"stop":[["node limit",1]],"time":49.428955078125,"type":"simplify"},{"compiler":[[19650,11843]],"time":180.496826171875,"type":"eval"},{"alts":[["(*.f64 (/.f64 (log1p.f64 (expm1.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))) (+.f64 (+.f64 (cos.f64 x) 1) 1)) (/.f64 (sinh.f64 y) y))","fresh",0.24550634768442015],["(*.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)) (cos.f64 x)) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (+.f64 (+.f64 (cos.f64 x) 1) 1)) (/.f64 (sinh.f64 y) y))","fresh",0.2441788086106521],["(*.f64 (pow.f64 (/.f64 1 (cos.f64 x)) -1) (/.f64 (sinh.f64 y) y))","fresh",0.11328125],["(*.f64 (*.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) (/.f64 (sinh.f64 y) y))","next",0.0703125],["(*.f64 (/.f64 (fma.f64 (*.f64 (+.f64 1 (cos.f64 x)) (pow.f64 (cbrt.f64 (cos.f64 x)) 2)) (cbrt.f64 (cos.f64 x)) (cos.f64 x)) (+.f64 (+.f64 (cos.f64 x) 1) 1)) (/.f64 (sinh.f64 y) y))","fresh",0.1927337890737681],["(*.f64 (/.f64 (-.f64 (+.f64 (fma.f64 (+.f64 1 (cos.f64 x)) (cos.f64 x) 1) (cos.f64 x)) 1) (+.f64 (+.f64 (cos.f64 x) 1) 1)) (/.f64 (sinh.f64 y) y))","fresh",0.3044235054853048]],"compiler":[[22,17],[39,28],[13,10],[21,14],[30,18],[27,18],[22,17],[39,28],[13,10],[21,14],[30,18],[27,18]],"count":[[594,6]],"kept":[{"done":[1,0],"fresh":[2,0],"new":[590,6],"picked":[1,0]}],"min-error":[0],"time":408.321044921875,"type":"prune"},{"compiler":[[64,33]],"locations":[["(cos.f64 x)",0.02734375,false],["(+.f64 2 (cos.f64 x))",0.03125,true],["(/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))",0.16015625,true],["(*.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))",0.171875,true]],"time":13.089111328125,"type":"localize"},{"count":[[3,28]],"series":[["(+.f64 2 (cos.f64 x))","x","-inf",0.14111328125],["(+.f64 2 (cos.f64 x))","x","inf",0.14111328125],["(+.f64 2 (cos.f64 x))","x","0",0.177978515625],["(/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","x","-inf",0.403076171875],["(/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","x","inf",0.427978515625],["(/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","x","0",0.23681640625],["(*.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))","x","-inf",0.159912109375],["(*.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))","x","inf",0.179931640625],["(*.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))","x","0",0.216064453125]],"time":2.21484375,"type":"series"},{"count":[[3,235]],"egraph":[[2,2482,20,0.023514333],[1,201,36,0.003376833],[0,9,36,0.000298333]],"inputs":[["(*.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))","(/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","(+.f64 2 (cos.f64 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) (*.f64 (cos.f64 x) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 x) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) (*.f64 2 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) 2) (*.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (cos.f64 x)) (*.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 x))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 x))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 x)))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 2 (cos.f64 x)) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 2 (cos.f64 x)) (*.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 2 (cos.f64 x)) (*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (/.f64 1 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (/.f64 1 (cbrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (cos.f64 x)) (pow.f64 (cos.f64 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (cos.f64 x) -2) (*.f64 -1 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (cos.f64 x) -2) (*.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 x)) (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) (fma.f64 -1 (cos.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (+.f64 2 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 8 (pow.f64 (cos.f64 x) 3)) (*.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 4 (pow.f64 (cos.f64 x) 2)) (*.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) (-.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) (fma.f64 -1 (cos.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 8 (pow.f64 (cos.f64 x) 3)) 1) (*.f64 (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 4 (pow.f64 (cos.f64 x) 2)) 1) (*.f64 (-.f64 2 (cos.f64 x)) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 -1 (cos.f64 x) -2) (cos.f64 x)) (fma.f64 -1 (cos.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 8 (pow.f64 (cos.f64 x) 3)) (cos.f64 x)) (*.f64 (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4) (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 4 (pow.f64 (cos.f64 x) 2)) (cos.f64 x)) (*.f64 (-.f64 2 (cos.f64 x)) (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 2 (cos.f64 x)) (neg.f64 (cos.f64 x))) (fma.f64 -1 (cos.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 -1 (cos.f64 x) -2) (neg.f64 (cos.f64 x))) (*.f64 -1 (fma.f64 -1 (cos.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 8 (pow.f64 (cos.f64 x) 3)) (neg.f64 (cos.f64 x))) (*.f64 (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4) (fma.f64 -1 (cos.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 4 (pow.f64 (cos.f64 x) 2)) (neg.f64 (cos.f64 x))) (*.f64 (-.f64 2 (cos.f64 x)) (fma.f64 -1 (cos.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cos.f64 x)) (+.f64 2 (cos.f64 x))) (fma.f64 -1 (cos.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cos.f64 x)) 1) (*.f64 (fma.f64 -1 (cos.f64 x) -2) (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 x) (fma.f64 -1 (cos.f64 x) -2)) (fma.f64 -1 (cos.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cos.f64 x)) (fma.f64 -1 (cos.f64 x) -2)) (+.f64 2 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 x) (+.f64 8 (pow.f64 (cos.f64 x) 3))) (*.f64 (+.f64 2 (cos.f64 x)) (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cos.f64 x)) (+.f64 8 (pow.f64 (cos.f64 x) 3))) (*.f64 (fma.f64 -1 (cos.f64 x) -2) (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 x) (-.f64 4 (pow.f64 (cos.f64 x) 2))) (*.f64 (+.f64 2 (cos.f64 x)) (-.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cos.f64 x)) (-.f64 4 (pow.f64 (cos.f64 x) 2))) (*.f64 (fma.f64 -1 (cos.f64 x) -2) (-.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (cbrt.f64 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (sqrt.f64 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 -1 (cos.f64 x) -2) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 8 (pow.f64 (cos.f64 x) 3)) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 4 (pow.f64 (cos.f64 x) 2)) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) (-.f64 2 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (fma.f64 -1 (cos.f64 x) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (+.f64 8 (pow.f64 (cos.f64 x) 3))) (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (-.f64 4 (pow.f64 (cos.f64 x) 2))) (-.f64 2 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) (/.f64 1 (+.f64 2 (cos.f64 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cos.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (*.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (cos.f64 x))) 2)) (cbrt.f64 (log.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (cos.f64 x)))) (sqrt.f64 (log.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 x)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cos.f64 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (cos.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (cos.f64 x) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cos.f64 x)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cos.f64 x)) 3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (*.f64 (cos.f64 x) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 x) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (*.f64 2 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) 2 (*.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (cos.f64 x) (*.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 x) (/.f64 1 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) -2)) (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (*.f64 (cbrt.f64 (cos.f64 x)) (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) (sqrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 x)) (/.f64 (sqrt.f64 (cos.f64 x)) (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 x)) (*.f64 (sqrt.f64 (cos.f64 x)) (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 x)) (pow.f64 (/.f64 (sqrt.f64 (cos.f64 x)) (+.f64 2 (cos.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 x)) (/.f64 1 (fma.f64 -1 (cos.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 x)) (pow.f64 (/.f64 1 (fma.f64 -1 (cos.f64 x) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))) (cbrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (cos.f64 x)) (+.f64 2 (cos.f64 x))) (sqrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) 1) (/.f64 (cbrt.f64 (cos.f64 x)) (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) -2) (/.f64 (cos.f64 x) (cbrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (cos.f64 x)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) (/.f64 (sqrt.f64 (cos.f64 x)) (cbrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 2 (cos.f64 x)) -1/2) (/.f64 (cos.f64 x) (sqrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 2 (cos.f64 x)) -1/2) (pow.f64 (/.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) (cos.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (sqrt.f64 (+.f64 2 (cos.f64 x)))) (/.f64 (cbrt.f64 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 x) (fma.f64 -1 (cos.f64 x) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 x) (+.f64 8 (pow.f64 (cos.f64 x) 3))) (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 x) (-.f64 4 (pow.f64 (cos.f64 x) 2))) (-.f64 2 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (+.f64 2 (cos.f64 x))) 1) (cbrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sqrt.f64 (cos.f64 x)) (+.f64 2 (cos.f64 x))) 1) (sqrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) 1) 1) (pow.f64 (/.f64 (cbrt.f64 (cos.f64 x)) (+.f64 2 (cos.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) -2) 1) (pow.f64 (/.f64 (cos.f64 x) (cbrt.f64 (+.f64 2 (cos.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) 1) (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sqrt.f64 (cos.f64 x)) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2)) 1) (pow.f64 (/.f64 (sqrt.f64 (cos.f64 x)) (cbrt.f64 (+.f64 2 (cos.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (+.f64 2 (cos.f64 x)) -1/2) 1) (pow.f64 (/.f64 (cos.f64 x) (sqrt.f64 (+.f64 2 (cos.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (sqrt.f64 (+.f64 2 (cos.f64 x)))) 1) (pow.f64 (/.f64 (cbrt.f64 (cos.f64 x)) (sqrt.f64 (+.f64 2 (cos.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cos.f64 x) (fma.f64 -1 (cos.f64 x) -2)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cos.f64 x) (+.f64 8 (pow.f64 (cos.f64 x) 3))) 1) (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cos.f64 x) (-.f64 4 (pow.f64 (cos.f64 x) 2))) 1) (-.f64 2 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) -3)) 1/3) (pow.f64 (sqrt.f64 (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) -2) (cos.f64 x)) 1/3) (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))) 2) 1/3) (cbrt.f64 (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) 5/2) 1/3) (cbrt.f64 (sqrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))) 2) 3) (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))) 3) (pow.f64 (sqrt.f64 (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x))) 2) -1) (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2) 1) -1) (pow.f64 (/.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) (cos.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (pow.f64 (cbrt.f64 (cos.f64 x)) 2)) -1) (pow.f64 (/.f64 1 (cbrt.f64 (cos.f64 x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) -2) -1) (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cbrt.f64 (cos.f64 x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2) (pow.f64 (cbrt.f64 (cos.f64 x)) 2)) -1) (pow.f64 (/.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) (cbrt.f64 (cos.f64 x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) (pow.f64 (cbrt.f64 (cos.f64 x)) 2)) -1) (pow.f64 (/.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) (cbrt.f64 (cos.f64 x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (sqrt.f64 (cos.f64 x))) -1) (pow.f64 (pow.f64 (cos.f64 x) -1/2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cos.f64 x) -1/2) -1) (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (sqrt.f64 (cos.f64 x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2) (sqrt.f64 (cos.f64 x))) -1) (pow.f64 (/.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) (sqrt.f64 (cos.f64 x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) (sqrt.f64 (cos.f64 x))) -1) (pow.f64 (/.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) (sqrt.f64 (cos.f64 x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 (+.f64 2 (cos.f64 x)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))) 2)) (cbrt.f64 (log.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))) (sqrt.f64 (log.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (cos.f64 x) (fma.f64 -1 (cos.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 (+.f64 2 (cos.f64 x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x)) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 2 (cos.f64 x)) (cos.f64 x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 2 (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 4 (-.f64 2 (cos.f64 x))) (/.f64 (pow.f64 (cos.f64 x) 2) (-.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 2 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 2 (cos.f64 x)) (pow.f64 1 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 2 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2) (cbrt.f64 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) (sqrt.f64 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1 (cos.f64 x) -2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 8 (pow.f64 (cos.f64 x) 3)) (/.f64 1 (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 8 (pow.f64 (cos.f64 x) 3)) (pow.f64 (/.f64 1 (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 4 (pow.f64 (cos.f64 x) 2)) (/.f64 1 (-.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 4 (pow.f64 (cos.f64 x) 2)) (pow.f64 (/.f64 1 (-.f64 2 (cos.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (+.f64 2 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (pow.f64 (+.f64 2 (cos.f64 x)) 3)) 1/3) (pow.f64 (sqrt.f64 (pow.f64 (+.f64 2 (cos.f64 x)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 2 (cos.f64 x)) (cbrt.f64 (+.f64 2 (cos.f64 x)))) 2) 1/3) (cbrt.f64 (cbrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (+.f64 2 (cos.f64 x)) 5/2) 1/3) (cbrt.f64 (sqrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 2 (cos.f64 x)))) 2) 3) (cbrt.f64 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (cbrt.f64 (+.f64 2 (cos.f64 x)))) 3) (pow.f64 (sqrt.f64 (cbrt.f64 (+.f64 2 (cos.f64 x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))) 2) -1) (cbrt.f64 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 (fma.f64 -1 (cos.f64 x) -2)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 (+.f64 8 (pow.f64 (cos.f64 x) 3))) -1) (/.f64 1 (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 (-.f64 4 (pow.f64 (cos.f64 x) 2))) -1) (/.f64 1 (-.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 2 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4) (+.f64 8 (pow.f64 (cos.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 2 (cos.f64 x)) (-.f64 4 (pow.f64 (cos.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 2) (/.f64 1 (cbrt.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) (pow.f64 (+.f64 2 (cos.f64 x)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (cos.f64 x) -2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 1 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 8 (pow.f64 (cos.f64 x) 3)) (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 8 (pow.f64 (cos.f64 x) 3)) (+.f64 (pow.f64 (cos.f64 x) 2) (-.f64 4 (*.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 4 (pow.f64 (cos.f64 x) 2)) (-.f64 2 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 -1 (cos.f64 x) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 8 (pow.f64 (cos.f64 x) 3))) (neg.f64 (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 4 (pow.f64 (cos.f64 x) 2))) (neg.f64 (-.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 8 (pow.f64 (cos.f64 x) 3)) 1) (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 4 (pow.f64 (cos.f64 x) 2)) 1) (-.f64 2 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (cos.f64 x) (cos.f64 x) -4) (-.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 2 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (cos.f64 x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (cos.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 2 (cos.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 2 (cos.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 2 (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (cos.f64 x) (-.f64 (cos.f64 x) 2) 4) (+.f64 8 (pow.f64 (cos.f64 x) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 2 (cos.f64 x)) (-.f64 4 (pow.f64 (cos.f64 x) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (+.f64 2 (cos.f64 x)))) 2)) (cbrt.f64 (log.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (+.f64 2 (cos.f64 x))))) (sqrt.f64 (log.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 2 (cos.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 2 (cos.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 2 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 2 (cos.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 2 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 2 (cos.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (+.f64 2 (cos.f64 x)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (+.f64 2 (cos.f64 x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 2 (cos.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (+.f64 2 (cos.f64 x)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (+.f64 2 (cos.f64 x))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 x) 1 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 x)) (pow.f64 (cbrt.f64 (cos.f64 x)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (cbrt.f64 (cos.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (cos.f64 x)) 2)))))"]],"rules":[["egg-rr",70],["egg-rr",83],["egg-rr",82]],"stop":[["node limit",1]],"time":54.653076171875,"type":"rewrite"},{"count":[[263,260]],"egraph":[[10,7658,230,0.06752016799999999],[9,7129,230,0.055506959999999994],[8,6056,230,0.042959875999999994],[7,5109,230,0.032011793],[6,4651,230,0.023359127],[5,3806,230,0.016026127],[4,2214,230,0.009353793],[3,644,230,0.004313043],[2,211,234,0.0015348340000000001],[1,90,240,0.000577334],[0,41,246,0.00017875]],"inputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6)))))","(cos.f64 x)","(cos.f64 x)","(cos.f64 x)","(cos.f64 x)","(cos.f64 x)","(cos.f64 x)","(cos.f64 x)","(cos.f64 x)","1/3","(+.f64 (*.f64 -1/9 (pow.f64 x 2)) 1/3)","(+.f64 (*.f64 -1/9 (pow.f64 x 2)) (+.f64 1/3 (*.f64 -1/108 (pow.f64 x 4))))","(+.f64 (*.f64 -1/9 (pow.f64 x 2)) (+.f64 1/3 (+.f64 (*.f64 -1/3240 (pow.f64 x 6)) (*.f64 -1/108 (pow.f64 x 4)))))","(/.f64 (cos.f64 x) (+.f64 (cos.f64 x) 2))","(/.f64 (cos.f64 x) (+.f64 (cos.f64 x) 2))","(/.f64 (cos.f64 x) (+.f64 (cos.f64 x) 2))","(/.f64 (cos.f64 x) (+.f64 (cos.f64 x) 2))","3","(+.f64 3 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 3 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 3 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6)))))","(+.f64 (cos.f64 x) 2)","(+.f64 (cos.f64 x) 2)","(+.f64 (cos.f64 x) 2)","(+.f64 (cos.f64 x) 2)"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (*.f64 -1/2 (*.f64 x x)))","(fma.f64 -1/2 (*.f64 x x) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 1 (fma.f64 -1/2 (*.f64 x x) (*.f64 1/24 (pow.f64 x 4))))","(fma.f64 1/24 (pow.f64 x 4) (fma.f64 -1/2 (*.f64 x x) 1))","(fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x 1/24) -1/2) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6)))))","(+.f64 1 (fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (*.f64 -1/720 (pow.f64 x 6)))))","(+.f64 (fma.f64 -1/2 (*.f64 x x) 1) (fma.f64 -1/720 (pow.f64 x 6) (*.f64 1/24 (pow.f64 x 4))))","(fma.f64 -1/720 (pow.f64 x 6) (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x 1/24) -1/2) 1))","(fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (fma.f64 -1/720 (pow.f64 x 6) 1)))","(cos.f64 x)","(cos.f64 x)","(cos.f64 x)","(cos.f64 x)","(cos.f64 x)","(cos.f64 x)","(cos.f64 x)","(cos.f64 x)","1/3","(+.f64 (*.f64 -1/9 (pow.f64 x 2)) 1/3)","(fma.f64 -1/9 (*.f64 x x) 1/3)","(fma.f64 (*.f64 x x) -1/9 1/3)","(fma.f64 x (*.f64 x -1/9) 1/3)","(+.f64 (*.f64 -1/9 (pow.f64 x 2)) (+.f64 1/3 (*.f64 -1/108 (pow.f64 x 4))))","(+.f64 (fma.f64 -1/9 (*.f64 x x) 1/3) (*.f64 (pow.f64 x 4) -1/108))","(fma.f64 (*.f64 x x) -1/9 (fma.f64 (pow.f64 x 4) -1/108 1/3))","(fma.f64 x (*.f64 x -1/9) (fma.f64 (pow.f64 x 4) -1/108 1/3))","(fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/108) -1/9) 1/3)","(+.f64 (*.f64 -1/9 (pow.f64 x 2)) (+.f64 1/3 (+.f64 (*.f64 -1/3240 (pow.f64 x 6)) (*.f64 -1/108 (pow.f64 x 4)))))","(+.f64 (fma.f64 -1/9 (*.f64 x x) 1/3) (fma.f64 -1/3240 (pow.f64 x 6) (*.f64 (pow.f64 x 4) -1/108)))","(+.f64 (fma.f64 (*.f64 x x) -1/9 1/3) (fma.f64 (pow.f64 x 4) -1/108 (*.f64 (pow.f64 x 6) -1/3240)))","(fma.f64 x (*.f64 x -1/9) (fma.f64 (pow.f64 x 4) -1/108 (fma.f64 (pow.f64 x 6) -1/3240 1/3)))","(fma.f64 (pow.f64 x 6) -1/3240 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/108) -1/9) 1/3))","(/.f64 (cos.f64 x) (+.f64 (cos.f64 x) 2))","(/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","(/.f64 (cos.f64 x) (+.f64 (cos.f64 x) 2))","(/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","(/.f64 (cos.f64 x) (+.f64 (cos.f64 x) 2))","(/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","(/.f64 (cos.f64 x) (+.f64 (cos.f64 x) 2))","(/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))","3","(+.f64 3 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 (*.f64 -1/2 (*.f64 x x)) 3)","(fma.f64 -1/2 (*.f64 x x) 3)","(+.f64 3 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 (fma.f64 -1/2 (*.f64 x x) (*.f64 1/24 (pow.f64 x 4))) 3)","(+.f64 (*.f64 1/24 (pow.f64 x 4)) (fma.f64 -1/2 (*.f64 x x) 3))","(fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) 3))","(fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x 1/24) -1/2) 3)","(+.f64 3 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6)))))","(+.f64 (fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (*.f64 -1/720 (pow.f64 x 6)))) 3)","(+.f64 (fma.f64 1/24 (pow.f64 x 4) (*.f64 -1/720 (pow.f64 x 6))) (fma.f64 -1/2 (*.f64 x x) 3))","(+.f64 (fma.f64 -1/2 (*.f64 x x) (*.f64 1/24 (pow.f64 x 4))) (fma.f64 -1/720 (pow.f64 x 6) 3))","(fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x 1/24) -1/2) (fma.f64 -1/720 (pow.f64 x 6) 3))","(fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (fma.f64 -1/720 (pow.f64 x 6) 3)))","(+.f64 (cos.f64 x) 2)","(+.f64 2 (cos.f64 x))","(+.f64 (cos.f64 x) 2)","(+.f64 2 (cos.f64 x))","(+.f64 (cos.f64 x) 2)","(+.f64 2 (cos.f64 x))","(+.f64 (cos.f64 x) 2)","(+.f64 2 (cos.f64 x))"]],"stop":[["node limit",1]],"time":86.8359375,"type":"simplify"},{"compiler":[[12691,6775]],"time":114.05908203125,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (/.f64 1 (cos.f64 x)) -1) (/.f64 (sinh.f64 y) y))","fresh",0.11328125],["(*.f64 (*.f64 (/.f64 (+.f64 2 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 x)))))) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) (/.f64 (sinh.f64 y) y))","fresh",0.2578252195363797],["(*.f64 (*.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (/.f64 1 (/.f64 (-.f64 2 (cos.f64 x)) (-.f64 4 (pow.f64 (cos.f64 x) 2)))))) (/.f64 (sinh.f64 y) y))","fresh",0.20710761722130422],["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))","next",0.02734375],["(*.f64 (/.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (/.f64 1 (+.f64 2 (cos.f64 x)))) (/.f64 (sinh.f64 y) y))","fresh",0.17578125]],"compiler":[[13,10],[32,21],[30,21],[9,6],[21,14],[13,10],[32,21],[30,21],[9,6],[21,14]],"count":[[513,5]],"kept":[{"done":[0,0],"fresh":[5,1],"new":[507,4],"picked":[1,0]}],"min-error":[0],"time":354.0390625,"type":"prune"},{"compiler":[[19,6]],"locations":[["(cos.f64 x)",0.02734375,false]],"time":4.875,"type":"localize"},{"compiler":[[822,360]],"time":7.912841796875,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (/.f64 1 (cos.f64 x)) -1) (/.f64 (sinh.f64 y) y))","fresh",0.11328125],["(*.f64 (*.f64 (/.f64 (+.f64 2 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 x)))))) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) (/.f64 (sinh.f64 y) y))","fresh",0.2578252195363797],["(*.f64 (*.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (/.f64 1 (/.f64 (-.f64 2 (cos.f64 x)) (-.f64 4 (pow.f64 (cos.f64 x) 2)))))) (/.f64 (sinh.f64 y) y))","fresh",0.20710761722130422],["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))","done",0.02734375],["(*.f64 (/.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (/.f64 1 (+.f64 2 (cos.f64 x)))) (/.f64 (sinh.f64 y) y))","fresh",0.17578125]],"compiler":[[13,10],[32,21],[30,21],[9,6],[21,14]],"count":[[61,5]],"kept":[{"done":[0,0],"fresh":[4,4],"new":[56,0],"picked":[1,1]}],"min-error":[0],"time":10.826171875,"type":"prune"},{"accuracy":[0.02734375],"baseline":[0.02734375],"branch":[["x",0.02734375,1],["y",0.02734375,1],["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))",0.02734375,1],["(cos.f64 x)",0.02734375,1],["(/.f64 (sinh.f64 y) y)",0.02734375,1]],"compiler":[[3,2],[3,2],[9,6],[4,3],[6,4],[295,150]],"count":[[14,1]],"inputs":[["(*.f64 (*.f64 (/.f64 (+.f64 2 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 x)))))) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) (/.f64 (sinh.f64 y) y))","(*.f64 (*.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (/.f64 1 (/.f64 (-.f64 2 (cos.f64 x)) (-.f64 4 (pow.f64 (cos.f64 x) 2)))))) (/.f64 (sinh.f64 y) y))","(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))","(*.f64 (/.f64 (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x))) (/.f64 1 (+.f64 2 (cos.f64 x)))) (/.f64 (sinh.f64 y) y))","(*.f64 (/.f64 (log1p.f64 (expm1.f64 (expm1.f64 (*.f64 2 (log1p.f64 (cos.f64 x)))))) (+.f64 (+.f64 (cos.f64 x) 1) 1)) (/.f64 (sinh.f64 y) y))","(*.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (+.f64 1 (cos.f64 x)) 3)) (cos.f64 x)) (+.f64 (pow.f64 (+.f64 1 (cos.f64 x)) 2) (-.f64 1 (+.f64 1 (cos.f64 x))))) (+.f64 (+.f64 (cos.f64 x) 1) 1)) (/.f64 (sinh.f64 y) y))","(*.f64 (pow.f64 (/.f64 1 (cos.f64 x)) -1) (/.f64 (sinh.f64 y) y))","(*.f64 (*.f64 (/.f64 (+.f64 2 (cos.f64 x)) 1) (/.f64 (cos.f64 x) (+.f64 2 (cos.f64 x)))) (/.f64 (sinh.f64 y) y))","(*.f64 (/.f64 (fma.f64 (*.f64 (+.f64 1 (cos.f64 x)) (pow.f64 (cbrt.f64 (cos.f64 x)) 2)) (cbrt.f64 (cos.f64 x)) (cos.f64 x)) (+.f64 (+.f64 (cos.f64 x) 1) 1)) (/.f64 (sinh.f64 y) y))","(*.f64 (/.f64 (-.f64 (+.f64 (fma.f64 (+.f64 1 (cos.f64 x)) (cos.f64 x) 1) (cos.f64 x)) 1) (+.f64 (+.f64 (cos.f64 x) 1) 1)) (/.f64 (sinh.f64 y) y))","(*.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 x))) 2)) (cbrt.f64 (cbrt.f64 (cos.f64 x)))) (/.f64 (sinh.f64 y) y))","(*.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (cos.f64 x))) 2)) (cbrt.f64 (log.f64 (cos.f64 x)))) (/.f64 (sinh.f64 y) y))","(*.f64 (/.f64 (-.f64 (*.f64 (+.f64 (cos.f64 x) 1) (+.f64 (cos.f64 x) 1)) 1) (+.f64 (+.f64 (cos.f64 x) 1) 1)) (/.f64 (sinh.f64 y) y))","(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))"]],"link":["."],"name":["Linear.Quaternion:$csin from linear-1.19.1.3"],"oracle":[17.82866478992842],"outputs":[["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))"]],"time":26.64697265625,"times":[["x",5.591064453125],["y",5.565185546875],["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))",4.655029296875],["(cos.f64 x)",4.476806640625],["(/.f64 (sinh.f64 y) y)",1.81298828125]],"type":"regimes"},{"compiler":[[9,6]],"egraph":[[1,8,11,2.925e-5],[0,7,11,1.7875e-5]],"inputs":[["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cos.f64 x) (/.f64 (sinh.f64 y) y))"]],"stop":[["fuel",1],["saturated",1]],"time":8.251953125,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[9,6]],"remove-preprocessing":[[]],"time":7.897216796875,"type":"end"}]