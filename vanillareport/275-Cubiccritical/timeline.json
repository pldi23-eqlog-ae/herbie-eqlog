[{"compiler":[[21,15]],"method":["search"],"sampling":[[12,0.29058954069728316,0.52852191630177,0.1808885430009468],[11,0.22037998724022145,0.629935715739748,0.1496842970200305],[10,0.15602122990458156,0.7098965960658461,0.13408217402957234],[9,0.10141379943797801,0.8113103955038241,0.08727580505819788],[8,0.062408491961832624,0.8737188874656567,0.06387262057251064],[7,0.0,0.9361273794274894,0.06387262057251064],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":142.6337890625,"type":"analyze"},{"outcomes":[["body",256,"invalid",87.3037109375,1579],["body",4096,"valid",99.652099609375,415],["body",512,"valid",37.470458984375,376],["body",1024,"valid",106.447021484375,743],["body",2048,"valid",219.25927734375,1156],["body",256,"valid",309.7333984375,5566]],"time":870.1640625,"type":"sample"},{"compiler":[[20,14]],"egraph":[[0,3,3,2.208e-6],[8,7283,88,0.046335625],[7,4454,88,0.035783625],[6,2215,88,0.019089041],[5,1245,88,0.0091165],[4,752,88,0.004768875],[3,442,88,0.002631583],[2,213,88,0.00123725],[1,92,88,0.0004875],[0,34,104,0.000135]],"inputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 3 b) c)))) (*.f64 3 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 c) a)))) (*.f64 3 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 3 a) b)))) (*.f64 3 a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -3)))) b) (*.f64 3 a))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a (*.f64 c -3) (*.f64 b b))) b) (*.f64 3 a))","(*.f64 -1/3 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -3))))) a))","(*.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -3))))) a) -1/3)","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -3))))) (/.f64 -1/3 a))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -3)))) (/.f64 -1/3 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 3 b) c)))) (*.f64 3 b))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 3 (*.f64 b c))))) (*.f64 b 3))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a a (*.f64 c (*.f64 b -3)))) a) (*.f64 b 3))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a a (*.f64 b (*.f64 c -3)))) a) (*.f64 b 3))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b (*.f64 c -3) (*.f64 a a))) a) (*.f64 b 3))","(*.f64 (-.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -3) (*.f64 a a)))) (/.f64 -1/3 b))","(*.f64 (-.f64 a (sqrt.f64 (fma.f64 a a (*.f64 (*.f64 b c) -3)))) (/.f64 -1/3 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 c) a)))) (*.f64 3 c))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 3 (*.f64 c a))))) (*.f64 3 c))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -3)))) b) (*.f64 3 c))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a (*.f64 c -3) (*.f64 b b))) b) (*.f64 3 c))","(*.f64 -1/3 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -3))))) c))","(*.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -3))))) c) -1/3)","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -3))))) (/.f64 -1/3 c))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -3)))) (/.f64 -1/3 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 3 a) b)))) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 b (*.f64 3 a))))) (*.f64 3 a))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 c c (*.f64 b (*.f64 a -3)))) c) (*.f64 3 a))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b (*.f64 a -3) (*.f64 c c))) c) (*.f64 3 a))","(*.f64 -1/3 (/.f64 (-.f64 c (sqrt.f64 (fma.f64 a (*.f64 b -3) (*.f64 c c)))) a))","(*.f64 (/.f64 (-.f64 c (sqrt.f64 (fma.f64 a (*.f64 b -3) (*.f64 c c)))) a) -1/3)","(*.f64 (-.f64 c (sqrt.f64 (fma.f64 b (*.f64 a -3) (*.f64 c c)))) (/.f64 -1/3 a))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":70.511962890625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[14,7635,22,0.079057874],[13,7152,22,0.067567541],[12,7045,22,0.058533874],[11,6866,22,0.050754916],[10,6246,22,0.043117583],[9,4741,22,0.033306999000000004],[8,2834,22,0.023429624],[7,1339,22,0.012724041],[6,741,22,0.006387916],[5,431,22,0.003330999],[4,262,22,0.001772999],[3,160,22,0.000969499],[2,69,22,0.000463333],[1,30,22,0.000190791],[0,13,26,6.4416e-5]],"inputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) b) (*.f64 3 a))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 -3 c)))) b) (*.f64 3 a))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -3)))) b) (*.f64 3 a))","(*.f64 -1/3 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -3))))) a))","(*.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -3))))) a) -1/3)","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -3))))) (/.f64 -1/3 a))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) b) (/.f64 1/3 a))"]],"stop":[["node limit",1]],"time":91.715087890625,"type":"simplify"},{"compiler":[[35,23]],"time":0.489013671875,"type":"eval"},{"alts":[["(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) b) (/.f64 1/3 a))","fresh",36.60774338272334],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","next",36.56801711318677]],"compiler":[[18,12],[20,14],[18,12],[20,14]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[36.49379836318646],"time":1.52294921875,"type":"prune"},{"compiler":[[69,35]],"locations":[["(*.f64 (*.f64 3 a) c)",0.19140625,true],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))",0.3931429952546722,true],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))",1.0000000000000002,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))",23.43907569670738,true]],"time":14.072998046875,"type":"localize"},{"count":[[4,92]],"series":[["(*.f64 (*.f64 3 a) c)","c","-inf",0.183837890625],["(*.f64 (*.f64 3 a) c)","c","inf",0.755126953125],["(*.f64 (*.f64 3 a) c)","c","0",0.28515625],["(*.f64 (*.f64 3 a) c)","a","-inf",0.2041015625],["(*.f64 (*.f64 3 a) c)","a","inf",0.256103515625],["(*.f64 (*.f64 3 a) c)","a","0",0.2939453125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","c","-inf",0.537109375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","c","inf",0.406005859375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","c","0",0.367919921875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","a","-inf",0.27294921875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","a","inf",0.31689453125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","a","0",0.385986328125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","b","-inf",0.218017578125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","b","inf",0.429931640625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","b","0",0.26611328125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","c","-inf",0.2021484375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","c","inf",0.284912109375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","c","0",0.309814453125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","a","-inf",0.2021484375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","a","inf",0.298095703125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","a","0",0.31884765625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","b","-inf",0.1650390625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","b","inf",0.27978515625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","b","0",0.315185546875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","c","-inf",1.26611328125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","c","inf",0.637939453125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","c","0",0.373046875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","a","-inf",0.427978515625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","a","inf",0.595947265625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","a","0",0.407958984375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","b","-inf",0.3388671875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","b","inf",0.482177734375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","b","0",0.927001953125]],"time":13.47802734375,"type":"series"},{"count":[[4,310]],"egraph":[[2,3929,45,0.027611166],[1,275,47,0.005263958],[0,12,55,0.000320666]],"inputs":[["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","(*.f64 (*.f64 3 a) c)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) 1/2) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 3 c)) 2))) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (*.f64 3 c)) 3))) (sqrt.f64 (fma.f64 (*.f64 a (*.f64 3 c)) (fma.f64 a (*.f64 3 c) (*.f64 b b)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (sqrt.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -3))) b)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 c (*.f64 a -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 c (*.f64 a -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (fma.f64 c (*.f64 a -3) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 b b (*.f64 c (*.f64 a -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (*.f64 a -3)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 b b (*.f64 c (*.f64 a -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (*.f64 3 c)) 3)) (/.f64 1 (fma.f64 (*.f64 a (*.f64 3 c)) (fma.f64 a (*.f64 3 c) (*.f64 b b)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 3 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 3 c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 a (*.f64 3 c)) (fma.f64 a (*.f64 3 c) (*.f64 b b)) (pow.f64 b 4)) (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (*.f64 3 c)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 a (*.f64 3 c) (*.f64 b b)) (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 3 c)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (*.f64 3 c)) 3)) (fma.f64 (*.f64 a (*.f64 3 c)) (fma.f64 a (*.f64 3 c) (*.f64 b b)) (pow.f64 b 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 3 c)) 2)) (fma.f64 a (*.f64 3 c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (*.f64 3 c)) 3))) (neg.f64 (fma.f64 (*.f64 a (*.f64 3 c)) (fma.f64 a (*.f64 3 c) (*.f64 b b)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 3 c)) 2))) (neg.f64 (fma.f64 a (*.f64 3 c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 6) (pow.f64 (*.f64 c (*.f64 a -3)) 3)) (+.f64 (pow.f64 b 4) (-.f64 (pow.f64 (*.f64 c (*.f64 a -3)) 2) (*.f64 (*.f64 b b) (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 3) (pow.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 3)) (+.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 2) (-.f64 (pow.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 2) (*.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 c (*.f64 a -3)) 2)) (-.f64 (*.f64 b b) (*.f64 c (*.f64 a -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 2) (pow.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 2)) (-.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (*.f64 a (*.f64 3 c)) (fma.f64 a (*.f64 3 c) (*.f64 b b)) (pow.f64 b 4)) (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (*.f64 3 c)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 a (*.f64 3 c) (*.f64 b b)) (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 3 c)) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (pow.f64 (pow.f64 (exp.f64 a) 3) c)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 b) b) (+.f64 1 (expm1.f64 (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (+.f64 1 (expm1.f64 (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (exp.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 b) b) (/.f64 1 (pow.f64 (pow.f64 (exp.f64 a) 3) c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (/.f64 1 (pow.f64 (pow.f64 (exp.f64 a) 3) c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))) (exp.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))) (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))) (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 c (*.f64 a -3))) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 a) 3) c)) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 c (*.f64 a -3))) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 a) 3) c)) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 c (*.f64 a -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 c (*.f64 a -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (fma.f64 c (*.f64 a -3) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (neg.f64 (-.f64 (*.f64 a (*.f64 3 c)) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 c (*.f64 a -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 c (*.f64 a -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (fma.f64 c (*.f64 a -3) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (neg.f64 (-.f64 (*.f64 a (*.f64 3 c)) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3 (neg.f64 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 3 a) (neg.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 a -3) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1 (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1 (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1 (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1 (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 c (*.f64 a -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 c (*.f64 a -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (fma.f64 c (*.f64 a -3) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (neg.f64 (-.f64 (*.f64 a (*.f64 3 c)) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -3))) (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -3))) (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 b b (*.f64 c (*.f64 a -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 c (*.f64 a -3)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 c (*.f64 a -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 c (*.f64 a -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (fma.f64 c (*.f64 a -3) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (neg.f64 (-.f64 (*.f64 a (*.f64 3 c)) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 c (*.f64 a -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 (*.f64 c (*.f64 a -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (fma.f64 c (*.f64 a -3) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (neg.f64 (-.f64 (*.f64 a (*.f64 3 c)) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 c (*.f64 a -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 (*.f64 c (*.f64 a -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (fma.f64 c (*.f64 a -3) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (-.f64 (*.f64 a (*.f64 3 c)) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 c (*.f64 a -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 (*.f64 c (*.f64 a -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (fma.f64 c (*.f64 a -3) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (neg.f64 (-.f64 (*.f64 a (*.f64 3 c)) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 a (*.f64 3 c))) (neg.f64 (sqrt.f64 (*.f64 a (*.f64 3 c)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 c) (*.f64 3 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (*.f64 3 c)) 3)) (/.f64 1 (fma.f64 (*.f64 a (*.f64 3 c)) (fma.f64 a (*.f64 3 c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (*.f64 3 c)) 3)) (/.f64 1 (fma.f64 (*.f64 a (*.f64 3 c)) (fma.f64 a (*.f64 3 c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (*.f64 3 c)) 3)) (/.f64 1 (fma.f64 (*.f64 a (*.f64 3 c)) (fma.f64 a (*.f64 3 c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (*.f64 3 c)) 3)) (/.f64 1 (fma.f64 (*.f64 a (*.f64 3 c)) (fma.f64 a (*.f64 3 c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (*.f64 3 c)) 3)) (/.f64 1 (fma.f64 (*.f64 a (*.f64 3 c)) (fma.f64 a (*.f64 3 c) (*.f64 b b)) (pow.f64 b 4))) (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (*.f64 3 c)) 3)) (/.f64 1 (fma.f64 (*.f64 a (*.f64 3 c)) (fma.f64 a (*.f64 3 c) (*.f64 b b)) (pow.f64 b 4))) (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (*.f64 c (*.f64 a -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (*.f64 (*.f64 c (*.f64 a -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (fma.f64 c (*.f64 a -3) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (neg.f64 (-.f64 (*.f64 a (*.f64 3 c)) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 a (*.f64 3 c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 3 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 3 c) (*.f64 b b))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 3 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 3 c) (*.f64 b b))) (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 3 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 3 c) (*.f64 b b))) (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 3 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 3 c) (*.f64 b b))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 3 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 3 c) (*.f64 b b))) (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 3 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 3 c) (*.f64 b b))) (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a -3) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 c (*.f64 a -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (*.f64 c (*.f64 a -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (fma.f64 c (*.f64 a -3) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (-.f64 (*.f64 a (*.f64 3 c)) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))) 2) (cbrt.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))) (fma.f64 b b (*.f64 c (*.f64 a -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 c (*.f64 a -3))) 2) (cbrt.f64 (*.f64 c (*.f64 a -3))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))) (sqrt.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))) (fma.f64 b b (*.f64 c (*.f64 a -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 c (*.f64 a -3))) (sqrt.f64 (*.f64 c (*.f64 a -3))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 a (*.f64 3 c)))) (sqrt.f64 (*.f64 a (*.f64 3 c))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 3 c)))) (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 3 c))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a -3) 1) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a -3) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a -3) (sqrt.f64 c)) (sqrt.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 c (*.f64 a -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (*.f64 c (*.f64 a -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (fma.f64 c (*.f64 a -3) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (-.f64 (*.f64 a (*.f64 3 c)) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (fma.f64 (neg.f64 (*.f64 a c)) 3 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (fma.f64 (*.f64 c (*.f64 a -3)) 1 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 3 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 2) (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (*.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (+.f64 (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 b b) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))) (/.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))) (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) 2)) (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))) (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -3) (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 3 c))) (/.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -3) (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 3/2)) (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -3) (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 3/2)) (+.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 b b (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 3 c))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -3) (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 3 c)))) (neg.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (*.f64 b b)) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -3) (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 3 c)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2) 1/2) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 1/2) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 a (*.f64 3 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 a) 3) c)) 2)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 a) 3) c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 a) 3) c))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 a) 3) c))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 a (*.f64 3 c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (*.f64 3 c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 a (*.f64 3 c))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (*.f64 3 c)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 a (*.f64 3 c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 a) 3) c))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 a (*.f64 3 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (*.f64 3 c)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 a (*.f64 3 c))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 a (*.f64 3 c))) 1))))))"]],"rules":[["egg-rr",16],["egg-rr",66],["egg-rr",196],["egg-rr",32]],"stop":[["node limit",1]],"time":68.944091796875,"type":"rewrite"},{"count":[[402,351]],"egraph":[[3,6609,1415,0.023176375],[2,1041,1468,0.009749750000000001],[1,293,1507,0.0021533330000000003],[0,96,1572,0.000522375]],"inputs":[["b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(*.f64 -1 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -2 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) b)","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (fma.f64 -9/8 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) b))","(+.f64 b (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b))))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (fma.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) b)))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) b)))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (fma.f64 -9/8 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) (fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) b)))","(+.f64 b (fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b)))))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 3/2 (/.f64 c (/.f64 b a)) (neg.f64 b))","(-.f64 (/.f64 (*.f64 c 3/2) (/.f64 b a)) b)","(-.f64 (*.f64 (/.f64 3/2 b) (*.f64 c a)) b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 3/2 (/.f64 c (/.f64 b a)) (fma.f64 9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b)))","(fma.f64 (*.f64 (/.f64 c b) a) 3/2 (fma.f64 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) 9/8 (neg.f64 b)))","(-.f64 (fma.f64 (*.f64 a (/.f64 c b)) 3/2 (*.f64 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) 9/8)) b)","(-.f64 (*.f64 a (+.f64 (/.f64 (*.f64 c 3/2) b) (/.f64 (*.f64 c (*.f64 c 9/8)) (/.f64 (pow.f64 b 3) a)))) b)","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (fma.f64 3/2 (/.f64 c (/.f64 b a)) (fma.f64 9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) 27/16 (fma.f64 (*.f64 (/.f64 c b) a) 3/2 (fma.f64 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) 9/8 (neg.f64 b))))","(-.f64 (fma.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 27/16 (fma.f64 (*.f64 a (/.f64 c b)) 3/2 (*.f64 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) 9/8))) b)","(-.f64 (*.f64 a (+.f64 (/.f64 (*.f64 c 3/2) b) (/.f64 (*.f64 c (*.f64 c 9/8)) (/.f64 (pow.f64 b 3) a)))) (fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) b))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) b)","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (fma.f64 -9/8 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) b))","(+.f64 b (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b))))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (fma.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) b)))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) b)))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (fma.f64 -9/8 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) (fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) b)))","(+.f64 b (fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b)))))))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) b)","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (fma.f64 -9/8 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) b))","(+.f64 b (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b))))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (fma.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) b)))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) b)))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (fma.f64 -9/8 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) (fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) b)))","(+.f64 b (fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b)))))))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 c a) -3)","(*.f64 c (*.f64 a -3))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 c a) -3)","(*.f64 c (*.f64 a -3))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 c a) -3)","(*.f64 c (*.f64 a -3))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 c a) -3)","(*.f64 c (*.f64 a -3))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 c a) -3)","(*.f64 c (*.f64 a -3))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -3) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(*.f64 -3/2 (/.f64 c (/.f64 b a)))","(*.f64 -3/2 (*.f64 (/.f64 c b) a))","(*.f64 (/.f64 -3/2 b) (*.f64 c a))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 -3/2 (/.f64 c (/.f64 b a))))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (*.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a))))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (*.f64 c (*.f64 c (*.f64 (/.f64 -9/8 (pow.f64 b 3)) (*.f64 a a)))))","(*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (*.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (*.f64 -27/16 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)))))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (fma.f64 -9/8 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) (*.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))))","(fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b))))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (*.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(fma.f64 -1/2 (/.f64 (fma.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 81/64)) (pow.f64 b 7)) (fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (*.f64 -27/16 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 405/64) (pow.f64 b 7)) (fma.f64 -3/2 (*.f64 a (/.f64 c b)) (fma.f64 -9/8 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) (*.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5)))))))","(+.f64 (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b))))) (fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -405/128) (pow.f64 b 7))))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 3/2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 b -2 (/.f64 (*.f64 c 3/2) (/.f64 b a)))","(fma.f64 b -2 (*.f64 (/.f64 3/2 b) (*.f64 c a)))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b)))","(fma.f64 3/2 (/.f64 c (/.f64 b a)) (fma.f64 9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 b -2)))","(fma.f64 (*.f64 (/.f64 c b) a) 3/2 (fma.f64 b -2 (*.f64 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) 9/8)))","(fma.f64 b -2 (fma.f64 (*.f64 a (/.f64 c b)) 3/2 (*.f64 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) 9/8)))","(fma.f64 b -2 (*.f64 a (+.f64 (/.f64 (*.f64 c 3/2) b) (/.f64 (*.f64 c (*.f64 c 9/8)) (/.f64 (pow.f64 b 3) a)))))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b))))","(fma.f64 27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (fma.f64 3/2 (/.f64 c (/.f64 b a)) (fma.f64 9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 b -2))))","(fma.f64 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) 27/16 (fma.f64 (*.f64 (/.f64 c b) a) 3/2 (fma.f64 b -2 (*.f64 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) 9/8))))","(fma.f64 (*.f64 a (/.f64 c b)) 3/2 (fma.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 27/16 (fma.f64 b -2 (*.f64 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) 9/8))))","(fma.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 27/16 (fma.f64 b -2 (*.f64 a (+.f64 (/.f64 (*.f64 c 3/2) b) (/.f64 (*.f64 c (*.f64 c 9/8)) (/.f64 (pow.f64 b 3) a))))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(*.f64 -3/2 (/.f64 c (/.f64 b a)))","(*.f64 -3/2 (*.f64 (/.f64 c b) a))","(*.f64 (/.f64 -3/2 b) (*.f64 c a))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 -3/2 (/.f64 c (/.f64 b a))))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (*.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a))))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (*.f64 c (*.f64 c (*.f64 (/.f64 -9/8 (pow.f64 b 3)) (*.f64 a a)))))","(*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (*.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (*.f64 -27/16 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)))))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (fma.f64 -9/8 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) (*.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))))","(fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b))))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (fma.f64 -1/2 (/.f64 (pow.f64 a 4) (/.f64 b (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -9/8 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2)))) (*.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 a 4) b) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 81/64)))))))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (fma.f64 -9/8 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) (fma.f64 -1/2 (/.f64 (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 405/64) (/.f64 b (pow.f64 c 4))) (*.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5)))))))","(fma.f64 -1/2 (/.f64 (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 405/64) (/.f64 b (pow.f64 c 4))) (fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b)))))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(*.f64 -3/2 (/.f64 c (/.f64 b a)))","(*.f64 -3/2 (*.f64 (/.f64 c b) a))","(*.f64 (/.f64 -3/2 b) (*.f64 c a))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 -3/2 (/.f64 c (/.f64 b a))))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (*.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a))))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (*.f64 c (*.f64 c (*.f64 (/.f64 -9/8 (pow.f64 b 3)) (*.f64 a a)))))","(*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (*.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (*.f64 -27/16 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)))))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (fma.f64 -9/8 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) (*.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))))","(fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b))))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (fma.f64 -1/2 (/.f64 (pow.f64 a 4) (/.f64 b (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -9/8 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2)))) (*.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 a 4) b) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 81/64)))))))","(fma.f64 -3/2 (*.f64 a (/.f64 c b)) (fma.f64 -9/8 (/.f64 (*.f64 c a) (/.f64 (pow.f64 b 3) (*.f64 c a))) (fma.f64 -1/2 (/.f64 (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 405/64) (/.f64 b (pow.f64 c 4))) (*.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5)))))))","(fma.f64 -1/2 (/.f64 (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 405/64) (/.f64 b (pow.f64 c 4))) (fma.f64 -27/16 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b)))))))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))","(*.f64 3 (*.f64 c a))","(*.f64 (*.f64 c a) 3)","(*.f64 c (*.f64 a 3))"]],"stop":[["node limit",1]],"time":52.31494140625,"type":"simplify"},{"compiler":[[10022,6247]],"time":99.486083984375,"type":"eval"},{"alts":[["(/.f64 (+.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))) (*.f64 3 a))","fresh",37.97900783241931],["(/.f64 (exp.f64 (log.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))) (*.f64 3 a))","fresh",48.6004436170898],["(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) b) (/.f64 1/3 a))","fresh",36.60774338272334],["(/.f64 (*.f64 (/.f64 -3/2 b) (*.f64 c a)) (*.f64 3 a))","fresh",45.87044822985395],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (+.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))) (*.f64 3 a))","fresh",36.58983337295521],["(/.f64 (*.f64 -2 b) (*.f64 3 a))","fresh",44.600041585978076],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 3)))) (*.f64 3 a))","fresh",36.61327087295521],["(/.f64 (+.f64 (neg.f64 b) (*.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))))) (*.f64 3 a))","fresh",37.18133658330803],["(/.f64 (+.f64 (neg.f64 b) (fma.f64 -3/2 (*.f64 a (/.f64 c b)) b)) (*.f64 3 a))","fresh",56.797005250467095],["(/.f64 (+.f64 (neg.f64 b) b) (*.f64 3 a))","fresh",56.70852389749193],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","next",36.56567851516368],["(/.f64 (fma.f64 b 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (*.f64 3 a))","fresh",47.542752322347326],["(/.f64 (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b))))) (*.f64 3 a))","fresh",43.56951451965081]],"compiler":[[20,15],[19,14],[18,12],[14,10],[30,20],[10,8],[23,17],[33,23],[18,12],[11,8],[19,13],[18,13],[24,16],[20,15],[19,14],[18,12],[14,10],[30,20],[10,8],[23,17],[33,23],[18,12],[11,8],[19,13],[18,13],[24,16]],"count":[[353,13]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[351,12],"picked":[1,0]}],"min-error":[9.717992836656506],"time":101.52978515625,"type":"prune"},{"compiler":[[64,26]],"locations":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))",0.1796875,true],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))",0.3931429952546722,true],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))",1.0664062500000002,true],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))",23.43907569670738,true]],"time":12.68017578125,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","c","-inf",0.37109375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","c","inf",0.68505859375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","c","0",0.468994140625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","a","-inf",0.56298828125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","a","inf",0.744873046875],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","a","0",0.425048828125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","b","-inf",0.35400390625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","b","inf",0.505126953125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","b","0",0.554931640625],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","c","-inf",0.5],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","c","inf",0.26904296875],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","c","0",0.217041015625],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","a","-inf",0.266845703125],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","a","inf",0.26708984375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","a","0",0.21484375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","b","-inf",0.22509765625],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","b","inf",0.22705078125],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","b","0",0.238037109375],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","b","-inf",0.14697265625],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","b","inf",0.15185546875],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","b","0",0.22412109375],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","c","-inf",0.2509765625],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","c","inf",0.176025390625],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","c","0",0.19482421875],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","a","-inf",0.281005859375],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","a","inf",0.14990234375],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","a","0",0.22705078125],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","b","-inf",0.18408203125],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","b","inf",0.235107421875],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","b","0",0.265869140625],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","c","-inf",0.30810546875],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","c","inf",0.257080078125],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","c","0",0.234130859375],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","a","-inf",0.318115234375],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","a","inf",0.27392578125],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","a","0",0.31396484375]],"time":11.794921875,"type":"series"},{"count":[[4,176]],"egraph":[[2,4085,59,0.029194459],[1,300,62,0.005664084],[0,14,66,0.000379292]],"inputs":[["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","(fma.f64 -3 (*.f64 a c) (*.f64 b b))","(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 1/4) (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -3 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (*.f64 -3 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -3 (*.f64 a c)) 1) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -3 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 -3 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))) 2) (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 1/4) (*.f64 (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 1/4) 3) (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -3 (*.f64 a c)) 3) (pow.f64 (*.f64 b b) 3)) (+.f64 (pow.f64 (*.f64 -3 (*.f64 a c)) 2) (-.f64 (pow.f64 b 4) (*.f64 (*.f64 -3 (*.f64 a c)) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 -3 (*.f64 a c)) 2) (pow.f64 b 4)) (fma.f64 (*.f64 -3 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 -3 (*.f64 a c))) (exp.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 -3 (*.f64 a c))) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 b b)) (exp.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (exp.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -3 (*.f64 a c))) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 b b) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (/.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 2) (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 -3 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 b b) (fma.f64 (*.f64 -3 a) c (*.f64 b b))) (/.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 -3 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (-.f64 (*.f64 b b) (fma.f64 (*.f64 -3 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 3/2)) (fma.f64 b b (fma.f64 -3 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 3/2)) (+.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 (*.f64 -3 a) c (*.f64 b b))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 -3 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 (*.f64 -3 a) c (*.f64 b b)))) (neg.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) (*.f64 b b)) (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 b b (fma.f64 -3 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (-.f64 (*.f64 b b) (fma.f64 (*.f64 -3 a) c (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (neg.f64 (cbrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 1/4) (pow.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (cbrt.f64 (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (*.f64 b b))) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (cbrt.f64 (*.f64 b b))) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (/.f64 1/3 a))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (/.f64 1/3 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (/.f64 1/3 a)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (/.f64 1/3 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) (/.f64 1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 2) (*.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (/.f64 1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))) (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (*.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (/.f64 1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/3 a) (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (/.f64 1 (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) 1/3) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 2) a) (/.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) a) (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 3) (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 2) 3) (/.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 2) 1) (/.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (*.f64 a 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 1) (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (*.f64 a 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a 3)) 2)) (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) (cbrt.f64 (*.f64 a 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 2) (pow.f64 (cbrt.f64 (*.f64 a 3)) 2)) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (pow.f64 (cbrt.f64 (*.f64 a 3)) 2)) (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (cbrt.f64 (*.f64 a 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 a 3))) (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) (sqrt.f64 (*.f64 a 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 2) (sqrt.f64 (*.f64 a 3))) (/.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (sqrt.f64 (*.f64 a 3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) 3) (pow.f64 (*.f64 a 3) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) (/.f64 1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b) 3) (pow.f64 (*.f64 a 3) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a))) 1))))))"]],"rules":[["egg-rr",46],["egg-rr",66],["egg-rr",37],["egg-rr",27]],"stop":[["node limit",1]],"time":62.001953125,"type":"rewrite"},{"count":[[260,235]],"egraph":[[2,1582,1820,0.013800708],[1,420,1898,0.003152083],[0,135,1974,0.000685916]],"inputs":[["b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(*.f64 -1 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -2 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -1/2 (/.f64 c b))","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(*.f64 -2/3 (/.f64 b a))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (*.f64 1/2 (/.f64 c b)))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (+.f64 (*.f64 1/2 (/.f64 c b)) (*.f64 3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (+.f64 (*.f64 9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 c b)) (*.f64 3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(*.f64 -1/2 (/.f64 c b))","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(*.f64 -1/2 (/.f64 c b))","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -9/8 (*.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (fma.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) b)))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) b)))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -9/8 (*.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -9/8 (*.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (fma.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) b)))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) b)))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -9/8 (*.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -9/8 (*.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (fma.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) b)))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) b)))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -9/8 (*.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) b)))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 3/2 (/.f64 c (/.f64 b a)) (neg.f64 b))","(fma.f64 (*.f64 (/.f64 c b) a) 3/2 (neg.f64 b))","(-.f64 (*.f64 (/.f64 3/2 b) (*.f64 c a)) b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 3/2 (/.f64 c (/.f64 b a)) (fma.f64 9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b)))","(-.f64 (fma.f64 (*.f64 (/.f64 c b) a) 3/2 (/.f64 (*.f64 (*.f64 a (*.f64 c (*.f64 c a))) 9/8) (pow.f64 b 3))) b)","(-.f64 (fma.f64 (*.f64 (/.f64 c b) a) 3/2 (*.f64 (*.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) a) 9/8)) b)","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (fma.f64 3/2 (/.f64 c (/.f64 b a)) (fma.f64 9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) 27/16 (-.f64 (fma.f64 (*.f64 (/.f64 c b) a) 3/2 (/.f64 (*.f64 (*.f64 a (*.f64 c (*.f64 c a))) 9/8) (pow.f64 b 3))) b))","(-.f64 (fma.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 27/16 (fma.f64 (*.f64 (/.f64 c b) a) 3/2 (*.f64 (*.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) a) 9/8))) b)","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 c a) -3)","(*.f64 c (*.f64 a -3))","(*.f64 a (*.f64 c -3))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 c a) -3)","(*.f64 c (*.f64 a -3))","(*.f64 a (*.f64 c -3))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 c a) -3)","(*.f64 c (*.f64 a -3))","(*.f64 a (*.f64 c -3))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 c a) -3)","(*.f64 c (*.f64 a -3))","(*.f64 a (*.f64 c -3))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 c a) -3)","(*.f64 c (*.f64 a -3))","(*.f64 a (*.f64 c -3))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -3))","(fma.f64 b b (*.f64 c (*.f64 a -3)))","(fma.f64 b b (*.f64 a (*.f64 c -3)))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(*.f64 -3/2 (/.f64 c (/.f64 b a)))","(*.f64 -3/2 (*.f64 (/.f64 c b) a))","(*.f64 (/.f64 -3/2 b) (*.f64 c a))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 -3/2 (/.f64 c (/.f64 b a))))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 a (*.f64 c (*.f64 c a))) (/.f64 (pow.f64 b 3) -9/8)))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (*.f64 a (*.f64 a (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) -9/8)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (*.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 -27/16 (*.f64 (pow.f64 c 3) (pow.f64 a 3))) (pow.f64 b 5))))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) (*.f64 a (*.f64 a (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) -9/8))))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (*.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(fma.f64 -1/2 (/.f64 (fma.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 81/64)) (pow.f64 b 7)) (fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 -27/16 (*.f64 (pow.f64 c 3) (pow.f64 a 3))) (pow.f64 b 5)))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 405/64) (pow.f64 b 7)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) (*.f64 a (*.f64 a (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) -9/8)))))))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 3/2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 b -2 (*.f64 (*.f64 (/.f64 c b) a) 3/2))","(fma.f64 b -2 (*.f64 (/.f64 3/2 b) (*.f64 c a)))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b)))","(fma.f64 3/2 (/.f64 c (/.f64 b a)) (fma.f64 9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 b -2)))","(fma.f64 (*.f64 (/.f64 c b) a) 3/2 (fma.f64 b -2 (/.f64 (*.f64 (*.f64 a (*.f64 c (*.f64 c a))) 9/8) (pow.f64 b 3))))","(fma.f64 b -2 (fma.f64 (*.f64 (/.f64 c b) a) 3/2 (*.f64 (*.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) a) 9/8)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b))))","(fma.f64 27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (fma.f64 3/2 (/.f64 c (/.f64 b a)) (fma.f64 9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 b -2))))","(fma.f64 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) 27/16 (fma.f64 (*.f64 (/.f64 c b) a) 3/2 (fma.f64 b -2 (/.f64 (*.f64 (*.f64 a (*.f64 c (*.f64 c a))) 9/8) (pow.f64 b 3)))))","(fma.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 27/16 (fma.f64 b -2 (fma.f64 (*.f64 (/.f64 c b) a) 3/2 (*.f64 (*.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) a) 9/8))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(*.f64 -3/2 (/.f64 c (/.f64 b a)))","(*.f64 -3/2 (*.f64 (/.f64 c b) a))","(*.f64 (/.f64 -3/2 b) (*.f64 c a))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 -3/2 (/.f64 c (/.f64 b a))))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 a (*.f64 c (*.f64 c a))) (/.f64 (pow.f64 b 3) -9/8)))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (*.f64 a (*.f64 a (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) -9/8)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (*.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 -27/16 (*.f64 (pow.f64 c 3) (pow.f64 a 3))) (pow.f64 b 5))))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) (*.f64 a (*.f64 a (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) -9/8))))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -9/8 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2))) b) (*.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 a 4) b) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 81/64))) (/.f64 (*.f64 -27/16 (*.f64 (pow.f64 c 3) (pow.f64 a 3))) (pow.f64 b 5)))))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -9/8 (*.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) a) (fma.f64 -1/2 (*.f64 (pow.f64 c 4) (/.f64 (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 405/64) b)) (*.f64 -27/16 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(*.f64 -3/2 (/.f64 c (/.f64 b a)))","(*.f64 -3/2 (*.f64 (/.f64 c b) a))","(*.f64 (/.f64 -3/2 b) (*.f64 c a))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 -3/2 (/.f64 c (/.f64 b a))))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 a (*.f64 c (*.f64 c a))) (/.f64 (pow.f64 b 3) -9/8)))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (*.f64 a (*.f64 a (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) -9/8)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (*.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 -27/16 (*.f64 (pow.f64 c 3) (pow.f64 a 3))) (pow.f64 b 5))))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -27/16 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) (*.f64 a (*.f64 a (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) -9/8))))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -9/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -3/2 (/.f64 c (/.f64 b a)) (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -9/8 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2))) b) (*.f64 -27/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(fma.f64 -9/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 a 4) b) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 81/64))) (/.f64 (*.f64 -27/16 (*.f64 (pow.f64 c 3) (pow.f64 a 3))) (pow.f64 b 5)))))","(fma.f64 -3/2 (*.f64 (/.f64 c b) a) (fma.f64 -9/8 (*.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) a) (fma.f64 -1/2 (*.f64 (pow.f64 c 4) (/.f64 (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 405/64) b)) (*.f64 -27/16 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))))","(*.f64 -1/2 (/.f64 c b))","(/.f64 c (/.f64 b -1/2))","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(fma.f64 -1/2 (/.f64 c b) (*.f64 -3/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a))))","(fma.f64 -3/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a) (*.f64 -1/2 (/.f64 c b)))","(fma.f64 -3/8 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) (/.f64 c (/.f64 b -1/2)))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 -9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 -1/2 (/.f64 c b) (*.f64 -3/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)))))","(fma.f64 -9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 -3/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a) (*.f64 -1/2 (/.f64 c b))))","(fma.f64 -1/2 (/.f64 c b) (fma.f64 -3/8 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) (/.f64 (*.f64 -9/16 (*.f64 a a)) (/.f64 (pow.f64 b 5) (pow.f64 c 3)))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 -1/6 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1/2 (/.f64 c b) (*.f64 -3/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a))))))","(fma.f64 -9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 -1/6 (/.f64 (fma.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 81/64)) (*.f64 a (pow.f64 b 7))) (fma.f64 -3/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a) (*.f64 -1/2 (/.f64 c b)))))","(fma.f64 (/.f64 -1/6 (pow.f64 b 7)) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 405/64) a) (fma.f64 -1/2 (/.f64 c b) (fma.f64 -3/8 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) (/.f64 (*.f64 -9/16 (*.f64 a a)) (/.f64 (pow.f64 b 5) (pow.f64 c 3))))))","(*.f64 -2/3 (/.f64 b a))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (*.f64 1/2 (/.f64 c b)))","(fma.f64 -2/3 (/.f64 b a) (/.f64 (*.f64 1/2 c) b))","(fma.f64 -2/3 (/.f64 b a) (*.f64 (/.f64 c b) 1/2))","(fma.f64 -2/3 (/.f64 b a) (*.f64 (/.f64 1/2 b) c))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (+.f64 (*.f64 1/2 (/.f64 c b)) (*.f64 3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 -2/3 (/.f64 b a) (fma.f64 1/2 (/.f64 c b) (*.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) 3/8)))","(fma.f64 -2/3 (/.f64 b a) (fma.f64 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a) 3/8 (*.f64 (/.f64 c b) 1/2)))","(fma.f64 (/.f64 c b) 1/2 (fma.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) 3/8 (*.f64 -2/3 (/.f64 b a))))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (+.f64 (*.f64 9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 c b)) (*.f64 3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -2/3 (/.f64 b a) (fma.f64 9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 1/2 (/.f64 c b) (*.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) 3/8))))","(fma.f64 -2/3 (/.f64 b a) (fma.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) 9/16 (fma.f64 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a) 3/8 (*.f64 (/.f64 c b) 1/2))))","(fma.f64 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 a a)) 9/16 (fma.f64 (/.f64 c b) 1/2 (fma.f64 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) 3/8 (*.f64 -2/3 (/.f64 b a)))))","(*.f64 -1/2 (/.f64 c b))","(/.f64 c (/.f64 b -1/2))","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(fma.f64 -1/2 (/.f64 c b) (*.f64 -3/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a))))","(fma.f64 -3/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a) (*.f64 -1/2 (/.f64 c b)))","(fma.f64 -3/8 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) (/.f64 c (/.f64 b -1/2)))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 -9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 -1/2 (/.f64 c b) (*.f64 -3/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)))))","(fma.f64 -9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 -3/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a) (*.f64 -1/2 (/.f64 c b))))","(fma.f64 -1/2 (/.f64 c b) (fma.f64 -3/8 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) (/.f64 (*.f64 -9/16 (*.f64 a a)) (/.f64 (pow.f64 b 5) (pow.f64 c 3)))))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -1/6 (/.f64 (pow.f64 a 3) (/.f64 b (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -9/8 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2)))) (fma.f64 -9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 -1/2 (/.f64 c b) (*.f64 -3/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a))))))","(fma.f64 -1/6 (*.f64 (/.f64 (pow.f64 a 3) b) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 81/64))) (fma.f64 -9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 -3/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a) (*.f64 -1/2 (/.f64 c b)))))","(fma.f64 -1/6 (*.f64 (/.f64 (pow.f64 a 3) b) (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 405/64)) (fma.f64 -1/2 (/.f64 c b) (fma.f64 -3/8 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) (/.f64 (*.f64 -9/16 (*.f64 a a)) (/.f64 (pow.f64 b 5) (pow.f64 c 3))))))","(*.f64 -1/2 (/.f64 c b))","(/.f64 c (/.f64 b -1/2))","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(fma.f64 -1/2 (/.f64 c b) (*.f64 -3/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a))))","(fma.f64 -3/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a) (*.f64 -1/2 (/.f64 c b)))","(fma.f64 -3/8 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) (/.f64 c (/.f64 b -1/2)))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 -9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 -1/2 (/.f64 c b) (*.f64 -3/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)))))","(fma.f64 -9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 -3/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a) (*.f64 -1/2 (/.f64 c b))))","(fma.f64 -1/2 (/.f64 c b) (fma.f64 -3/8 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) (/.f64 (*.f64 -9/16 (*.f64 a a)) (/.f64 (pow.f64 b 5) (pow.f64 c 3)))))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -1/6 (*.f64 (/.f64 (pow.f64 c 4) a) (/.f64 (fma.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (*.f64 -9/8 (/.f64 (*.f64 a a) (pow.f64 b 3))) 2)) b)) (fma.f64 -9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 -1/2 (/.f64 c b) (*.f64 -3/8 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a))))))","(fma.f64 -1/6 (*.f64 (/.f64 (pow.f64 c 4) a) (/.f64 (fma.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 81/64)) b)) (fma.f64 -9/16 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (fma.f64 -3/8 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a) (*.f64 -1/2 (/.f64 c b)))))","(fma.f64 -1/6 (*.f64 (/.f64 (pow.f64 c 4) (*.f64 b a)) (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 405/64)) (fma.f64 -1/2 (/.f64 c b) (fma.f64 -3/8 (*.f64 (/.f64 a (pow.f64 b 3)) (*.f64 c c)) (/.f64 (*.f64 -9/16 (*.f64 a a)) (/.f64 (pow.f64 b 5) (pow.f64 c 3))))))"]],"stop":[["node limit",1]],"time":41.026123046875,"type":"simplify"},{"compiler":[[5539,3344]],"time":57.050048828125,"type":"eval"},{"alts":[["(/.f64 (+.f64 (neg.f64 b) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))))) (*.f64 3 a))","fresh",40.57435928039151],["(fma.f64 -2/3 (/.f64 b a) (*.f64 (/.f64 1/2 b) c))","fresh",44.88726103438369],["(*.f64 (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 3) (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) a))","fresh",47.56842131763436],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 3 a))","fresh",51.99652914655621],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","done",36.56567851516368],["(/.f64 (*.f64 b -2) (*.f64 3 a))","fresh",44.600041585978076],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","next",32.893497643748724],["(/.f64 (+.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))) (*.f64 3 a))","fresh",37.97900783241931],["(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) b) (/.f64 1/3 a))","fresh",36.60774338272334],["(log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a)))))","fresh",59.21977831730152],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (+.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))) (*.f64 3 a))","fresh",36.58983337295521],["(/.f64 c (/.f64 b -1/2))","fresh",37.93494537911268],["(/.f64 (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b))))) (*.f64 3 a))","fresh",43.56951451965081]],"compiler":[[29,20],[13,9],[30,20],[14,10],[19,13],[10,8],[19,14],[20,15],[18,12],[21,16],[30,20],[8,6],[24,16],[29,20],[13,9],[30,20],[14,10],[10,8],[19,14],[20,15],[18,12],[21,16],[30,20],[8,6],[24,16]],"count":[[248,13]],"kept":[{"done":[0,0],"fresh":[12,4],"new":[235,8],"picked":[1,1]}],"min-error":[4.3742591123765315],"time":46.8779296875,"type":"prune"},{"compiler":[[73,40]],"locations":[["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)",0.1484375,true],["(*.f64 -3 (*.f64 a c))",0.1953125,true],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))",0.2525599379846535,true],["(sqrt.f64 (*.f64 -3 (*.f64 a c)))",12.645159554221973,true]],"time":15.19189453125,"type":"localize"},{"count":[[4,26]],"series":[["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","c","-inf",6.078857421875],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","c","inf",5.9638671875],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","c","0",6.962158203125],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","b","-inf",1.077880859375],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","b","inf",1.835205078125],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","b","0",1.489990234375],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","a","-inf",7.156005859375],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","a","inf",6.083984375],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","a","0",4.39501953125],["(*.f64 -3 (*.f64 a c))","c","-inf",0.135986328125],["(*.f64 -3 (*.f64 a c))","c","inf",0.140869140625],["(*.f64 -3 (*.f64 a c))","c","0",0.215087890625],["(*.f64 -3 (*.f64 a c))","a","-inf",0.14013671875],["(*.f64 -3 (*.f64 a c))","a","inf",0.1669921875],["(*.f64 -3 (*.f64 a c))","a","0",0.205078125],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))","c","-inf",2.193115234375],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))","c","inf",1.6669921875],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))","c","0",1.73779296875],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))","a","-inf",1.93701171875],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))","a","inf",1.56005859375],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))","a","0",1.506103515625],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))","b","-inf",0.39501953125],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))","b","inf",1.847900390625],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))","b","0",0.4541015625],["(sqrt.f64 (*.f64 -3 (*.f64 a c)))","c","-inf",0.460205078125],["(sqrt.f64 (*.f64 -3 (*.f64 a c)))","c","inf",0.339111328125],["(sqrt.f64 (*.f64 -3 (*.f64 a c)))","c","0",0.5400390625],["(sqrt.f64 (*.f64 -3 (*.f64 a c)))","a","-inf",1.106201171875],["(sqrt.f64 (*.f64 -3 (*.f64 a c)))","a","inf",0.375],["(sqrt.f64 (*.f64 -3 (*.f64 a c)))","a","0",0.699951171875]],"time":59.3759765625,"type":"series"},{"count":[[4,194]],"egraph":[[2,4017,52,0.031167416],[1,303,52,0.005882833],[0,14,55,0.0003795]],"inputs":[["(sqrt.f64 (*.f64 -3 (*.f64 a c)))","(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))","(*.f64 -3 (*.f64 a c))","(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -3 (*.f64 a c))) (cbrt.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c)))) (cbrt.f64 (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 -3 a)) (sqrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a c)) (sqrt.f64 -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 -3) (sqrt.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 -3 (*.f64 a c)) 1/4) (pow.f64 (*.f64 -3 (*.f64 a c)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 -3 (*.f64 a c))) 2)) (sqrt.f64 (cbrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 -3 (*.f64 a c))) 2) 1/2) (pow.f64 (cbrt.f64 (*.f64 -3 (*.f64 a c))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -3 (*.f64 a c)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -3 (*.f64 a c)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -3 (*.f64 a c)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -3 (*.f64 a c)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -3 (*.f64 a c))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (fma.f64 -1 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))) (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 3)) (fma.f64 b b (-.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (*.f64 b (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))) (-.f64 b (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (/.f64 1 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (/.f64 1 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1 (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1 (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1 (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))) (cbrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (sqrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) b)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 -3) a) c)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 -3) a) c)))) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 -3) a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 -3) a) c))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 -3) a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 -3 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -3 (*.f64 a c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 9) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -3 (*.f64 a c)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -3 (*.f64 a c))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 -3) a) c))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -3 (*.f64 a c)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 -3 a) 3) (pow.f64 c 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -3 (*.f64 a c))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a)))) (cbrt.f64 (exp.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a)))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 b (*.f64 -3 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b) (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (/.f64 1 (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))) (pow.f64 (cbrt.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))) 2) (cbrt.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))) (sqrt.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 -3 a) -1) (pow.f64 (/.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))) 2) -1) (pow.f64 (cbrt.f64 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))) -1) (pow.f64 (sqrt.f64 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) 1) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 1) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) a) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) -3) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) -3) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) a) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 9 (*.f64 a a)))) (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (cbrt.f64 (*.f64 -3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) (cbrt.f64 (*.f64 9 (*.f64 a a)))) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (*.f64 -3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (*.f64 9 (*.f64 a a)))) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (cbrt.f64 (*.f64 -3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 -3 a))) (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (sqrt.f64 (*.f64 -3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) (sqrt.f64 (*.f64 -3 a))) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (sqrt.f64 (*.f64 -3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (sqrt.f64 (*.f64 -3 a))) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (sqrt.f64 (*.f64 -3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 -3 a)) (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 a 3)) (neg.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (*.f64 -3 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) 2) (/.f64 (*.f64 -3 a) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (/.f64 (*.f64 -3 a) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))) (*.f64 a 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (*.f64 (*.f64 -3 a) (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 -3 a) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))) (sqrt.f64 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) -3) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (sqrt.f64 (*.f64 -3 a))) (sqrt.f64 (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 1) (*.f64 -3 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (*.f64 -3 a)) (/.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))) 2)) (cbrt.f64 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) (cbrt.f64 (*.f64 9 (*.f64 a a)))) (cbrt.f64 (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) 3) (pow.f64 (*.f64 -3 a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a))) 1))))))"]],"rules":[["egg-rr",56],["egg-rr",18],["egg-rr",91],["egg-rr",29]],"stop":[["node limit",1]],"time":71.484130859375,"type":"rewrite"},{"count":[[220,199]],"egraph":[[4,38,179,0.00039358300000000003],[3,37,179,0.00030862500000000003],[2,31,179,0.00022233300000000001],[1,20,179,0.00013725],[0,12,179,6.2875e-5]],"inputs":[["(*.f64 2 b)","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(*.f64 -2/3 (/.f64 b a))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 b)","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -3 (*.f64 c a))","(*.f64 (*.f64 -3 c) a)","(*.f64 a (*.f64 -3 c))","(*.f64 -2/3 (/.f64 b a))","(/.f64 -2/3 (/.f64 a b))","(/.f64 b (/.f64 a -2/3))"]],"stop":[["saturated",1]],"time":14.4150390625,"type":"simplify"},{"compiler":[[5324,3315]],"time":55.576904296875,"type":"eval"},{"alts":[["(*.f64 (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 3) (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) a))","fresh",47.56842131763436],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (sqrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 9)))))) -1)","fresh",35.48538844444172],["(/.f64 (*.f64 b -2) (*.f64 3 a))","fresh",44.600041585978076],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","done",32.893497643748724],["(*.f64 -2/3 (/.f64 b a))","fresh",44.635197835978076],["(*.f64 (/.f64 1 a) (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) -3))","fresh",32.85996263398017],["(/.f64 1 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))","fresh",32.915313903517166],["(/.f64 c (/.f64 b -1/2))","fresh",37.93494537911268],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (*.f64 (sqrt.f64 (*.f64 -3 a)) (sqrt.f64 c))))) -1)","fresh",47.86923624624843],["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) -3) a)","fresh",32.826427624211725],["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)","next",32.814708874211725],["(/.f64 (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b))))) (*.f64 3 a))","fresh",43.56951451965081]],"compiler":[[30,20],[22,17],[10,8],[19,14],[8,6],[19,14],[19,14],[8,6],[20,15],[17,12],[17,12],[24,16],[30,20],[22,17],[10,8],[8,6],[19,14],[19,14],[8,6],[20,15],[17,12],[17,12],[24,16]],"count":[[212,12]],"kept":[{"done":[1,0],"fresh":[11,4],"new":[199,7],"picked":[1,1]}],"min-error":[1.6688874261250537],"time":41.568115234375,"type":"prune"},{"compiler":[[65,33]],"locations":[["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)",0.08984375,true],["(*.f64 -3 (*.f64 a c))",0.1953125,false],["(-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))",0.2525599379846535,true],["(sqrt.f64 (*.f64 -3 (*.f64 a c)))",12.645159554221973,false]],"time":13.219970703125,"type":"localize"},{"count":[[2,2]],"series":[["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)","c","-inf",1.97314453125],["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)","c","inf",1.496826171875],["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)","c","0",1.008056640625],["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)","a","-inf",1.132080078125],["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)","a","inf",1.333984375],["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)","a","0",0.844970703125],["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)","b","-inf",0.406982421875],["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)","b","inf",0.594970703125],["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)","b","0",0.389892578125],["(-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))","c","-inf",0.64306640625],["(-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))","c","inf",0.60400390625],["(-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))","c","0",0.488037109375],["(-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))","a","-inf",0.593994140625],["(-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))","a","inf",0.56494140625],["(-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))","a","0",0.453857421875],["(-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))","b","-inf",0.254150390625],["(-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))","b","inf",0.360107421875],["(-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))","b","0",0.3359375]],"time":13.73583984375,"type":"series"},{"count":[[2,125]],"egraph":[[2,3793,36,0.029814958000000003],[1,271,36,0.00528825],[0,12,36,0.000332958]],"inputs":[["(-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b))","(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (fma.f64 -1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))) (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 3)) (fma.f64 b b (-.f64 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (*.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))) (-.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1 (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1 (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1 (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 2) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 2) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 2) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (neg.f64 (sqrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))) (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (sqrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (sqrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) b)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3))) (cbrt.f64 (exp.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 b (*.f64 -3 a)) (/.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 b a) -3) (/.f64 (/.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) a) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (/.f64 1 (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 (/.f64 1 a) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a)) 2) (*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)) (pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)) 2) (cbrt.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a)) (*.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)) (sqrt.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) 2) -3) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -3) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) a) -1/3)) 1))))))"]],"rules":[["egg-rr",34],["egg-rr",91]],"stop":[["node limit",1]],"time":59.281982421875,"type":"rewrite"},{"count":[[127,128]],"egraph":[[4,21,11,0.00021004099999999998],[3,20,11,0.00016416599999999999],[2,16,11,0.000118791],[1,12,11,7.675e-5],[0,8,11,3.7417e-5]],"inputs":[["(*.f64 2 b)","(*.f64 -2/3 (/.f64 b a))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 b)","(*.f64 -2/3 (/.f64 b a))","(*.f64 b (/.f64 -2/3 a))"]],"stop":[["saturated",1]],"time":11.47021484375,"type":"simplify"},{"compiler":[[4429,2651]],"time":44.365966796875,"type":"eval"},{"alts":[["(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)","done",32.814708874211725],["(*.f64 b (/.f64 -2/3 a))","fresh",44.631291585978076],["(/.f64 (*.f64 b -2) (*.f64 3 a))","fresh",44.600041585978076],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","done",32.893497643748724],["(/.f64 1 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))","fresh",32.915313903517166],["(/.f64 c (/.f64 b -1/2))","fresh",37.93494537911268],["(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (*.f64 (sqrt.f64 (*.f64 -3 a)) (sqrt.f64 c))))) -1)","fresh",47.86923624624843],["(/.f64 (/.f64 (-.f64 b (hypot.f64 (*.f64 (sqrt.f64 (*.f64 -3 a)) (sqrt.f64 c)) b)) a) -3)","fresh",47.8666575353222],["(*.f64 (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 3) (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) a))","fresh",47.56842131763436],["(/.f64 (/.f64 (*.f64 2 b) a) -3)","fresh",44.592229085978076],["(*.f64 (/.f64 1 a) (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) -3))","fresh",32.85996263398017],["(/.f64 (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b))))) (*.f64 3 a))","fresh",43.56951451965081]],"compiler":[[17,12],[8,6],[10,8],[19,14],[19,14],[8,6],[20,15],[18,13],[30,20],[10,8],[19,14],[24,16]],"count":[[189,12]],"kept":[{"done":[1,1],"fresh":[10,7],"new":[177,3],"picked":[1,1]}],"min-error":[1.6649811761250537],"time":37.140869140625,"type":"prune"},{"accuracy":[8.191581720736277],"baseline":[32.814708874211725],"branch":[["a",23.277580589435683,7],["b",8.191581720736277,3],["c",23.907282498784863,6],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))",13.070080186558227,5],["(*.f64 3 a)",23.277580589435683,7],["(*.f64 3 a)",23.277580589435683,7]],"compiler":[[4,3],[4,3],[4,3],[20,14],[6,5],[6,5],[486,296]],"count":[[32,3]],"inputs":[["(*.f64 b (/.f64 -2/3 a))","(/.f64 (/.f64 (-.f64 b (hypot.f64 (*.f64 (sqrt.f64 (*.f64 -3 a)) (sqrt.f64 c)) b)) a) -3)","(/.f64 (/.f64 (*.f64 2 b) a) -3)","(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (sqrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 9)))))) -1)","(*.f64 -2/3 (/.f64 b a))","(*.f64 (/.f64 1 a) (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) -3))","(/.f64 1 (*.f64 -3 (/.f64 a (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)))))","(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (*.f64 (sqrt.f64 (*.f64 -3 a)) (sqrt.f64 c))))) -1)","(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) -3) a)","(/.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 -3 (*.f64 a c))) b)) a) -3)","(/.f64 (+.f64 (neg.f64 b) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (cbrt.f64 (fma.f64 (*.f64 -3 a) c (*.f64 b b))))) (*.f64 3 a))","(fma.f64 -2/3 (/.f64 b a) (*.f64 (/.f64 1/2 b) c))","(*.f64 (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) 3) (/.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))) b)) a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 3 a))","(/.f64 (*.f64 b -2) (*.f64 3 a))","(pow.f64 (/.f64 (*.f64 -3 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c)))))) -1)","(log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -3 (*.f64 a c))))) (*.f64 -3 a)))))","(/.f64 c (/.f64 b -1/2))","(/.f64 (+.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))) (*.f64 3 a))","(/.f64 (exp.f64 (log.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))))) (*.f64 3 a))","(/.f64 (*.f64 (/.f64 -3/2 b) (*.f64 c a)) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (+.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))) (fma.f64 c (*.f64 a -3) (*.f64 a (*.f64 3 c)))))) (*.f64 3 a))","(/.f64 (*.f64 -2 b) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 3 c))) 3)))) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 b) (*.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3))))))) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 b) (fma.f64 -3/2 (*.f64 a (/.f64 c b)) b)) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 b) b) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","(/.f64 (fma.f64 b 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -3))))) (*.f64 3 a))","(/.f64 (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -3/2 (/.f64 (*.f64 c -9/8) (/.f64 b (/.f64 a b))))) (*.f64 3 a))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -3)))) b) (/.f64 1/3 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))"]],"link":["."],"name":["Cubic critical"],"oracle":[63.92153336895834],"outputs":[["(/.f64 (/.f64 (*.f64 2 b) a) -3)","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","(/.f64 c (/.f64 b -1/2))"]],"time":306.72705078125,"times":[["a",61.969970703125],["b",36.93701171875],["c",50.512939453125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))",25.60986328125],["(*.f64 3 a)",61.087158203125],["(*.f64 3 a)",61.85400390625]],"type":"regimes"},{"bstep":[[2.9845788666958835e-158,3.562433016429675e-154,24.885986328125],[-6.375872448312967e+119,-2.587053104544731e+118,27.8359375]],"compiler":[[9,7],[21,15],[9,7],[21,15],[9,7],[21,15],[9,7],[21,15],[9,7],[21,15],[9,7],[21,15],[9,7],[21,15],[9,7],[21,15],[21,15],[11,9],[21,15],[11,9],[21,15],[11,9],[21,15],[11,9],[21,15],[11,9],[21,15],[11,9],[21,15],[11,9],[22,16],[4,3]],"method":["binary-search","binary-search"],"time":52.972900390625,"type":"bsearch"},{"compiler":[[39,27]],"egraph":[[5,77,53,0.000496709],[4,75,53,0.000406959],[3,69,53,0.00031504199999999997],[2,60,53,0.00022529199999999998],[1,41,53,0.000141209],[0,28,55,5.9667e-5]],"inputs":[["(if (<=.f64 b -26000000000000001594409213648096405489614447871933620019738205497109243725902858171904051702251735873172531603105120256) (/.f64 (/.f64 (*.f64 2 b) a) -3) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a)) (/.f64 c (/.f64 b -1/2))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b -26000000000000001594409213648096405489614447871933620019738205497109243725902858171904051702251735873172531603105120256) (/.f64 (/.f64 (*.f64 2 b) a) -3) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a)) (/.f64 c (/.f64 b -1/2))))","(if (<=.f64 b -26000000000000001594409213648096405489614447871933620019738205497109243725902858171904051702251735873172531603105120256) (/.f64 (/.f64 (*.f64 b 2) a) -3) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 a 3) c)))) (*.f64 a 3)) (/.f64 c (/.f64 b -1/2))))","(if (<=.f64 b -26000000000000001594409213648096405489614447871933620019738205497109243725902858171904051702251735873172531603105120256) (/.f64 (/.f64 (*.f64 b 2) a) -3) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (-.f64 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 c (*.f64 a -3)))) b) (*.f64 a 3)) (/.f64 c (/.f64 b -1/2))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.76904296875,"type":"simplify"},{"time":0.02001953125,"type":"soundness"},{"compiler":[[39,27]],"remove-preprocessing":[[]],"time":14.14794921875,"type":"end"}]