[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.8780481526628137,0.12097552325576544,0.0009763240814208984],[11,0.8468286627903581,0.15219501312822104,0.0009763240814208984],[10,0.7648775018751621,0.23414617404341698,0.0009763240814208984],[9,0.7024385221302509,0.29658515378832817,0.0009763240814208984],[8,0.5619508177042007,0.43707285821437836,0.0009763240814208984],[7,0.43707285821437836,0.5619508177042007,0.0009763240814208984],[6,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":31.739990234375,"type":"analyze"},{"outcomes":[["body",256,"valid",302.72412109375,8256]],"time":310.131103515625,"type":"sample"},{"compiler":[[11,7]],"egraph":[[0,2,2,2.166e-6],[7,4118,22,0.0271395],[6,1561,22,0.0123475],[5,724,26,0.004987083],[4,320,26,0.001928667],[3,168,26,0.0008858749999999999],[2,71,26,0.000408709],[1,27,26,0.00015975],[0,12,26,5.9e-5]],"inputs":[["0","1"],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","(/.f64 (*.f64 (*.f64 y 2) x) (-.f64 y x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","(/.f64 (*.f64 x (*.f64 2 y)) (-.f64 x y))","(*.f64 (/.f64 (*.f64 x 2) (-.f64 x y)) y)","(/.f64 (*.f64 x 2) (+.f64 (/.f64 x y) -1))","(*.f64 x (*.f64 2 (/.f64 y (-.f64 x y))))","(*.f64 (*.f64 x 2) (/.f64 y (-.f64 x y)))","(/.f64 y (fma.f64 (/.f64 y x) -1/2 1/2))","(/.f64 x (fma.f64 (/.f64 x y) 1/2 -1/2))","(/.f64 (*.f64 (*.f64 y 2) x) (-.f64 y x))","(/.f64 (*.f64 x (*.f64 2 y)) (-.f64 y x))","(*.f64 (/.f64 (*.f64 2 y) (-.f64 y x)) x)","(*.f64 x (/.f64 2 (-.f64 1 (/.f64 x y))))","(*.f64 x (*.f64 2 (/.f64 y (-.f64 y x))))","(*.f64 (*.f64 x 2) (/.f64 y (-.f64 y x)))","(/.f64 x (fma.f64 (/.f64 x y) -1/2 1/2))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":50.2490234375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[9,7294,11,0.035233834],[8,5586,11,0.026350291999999997],[7,1409,11,0.013418167],[6,651,11,0.004414625],[5,355,13,0.002158292],[4,180,13,0.00105675],[3,87,13,0.000540708],[2,41,13,0.000259958],[1,16,13,0.00011308300000000001],[0,8,13,4.2583e-5]],"inputs":[["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","(/.f64 (*.f64 x 2) (/.f64 (-.f64 x y) y))","(*.f64 (/.f64 (*.f64 x 2) (-.f64 x y)) y)","(/.f64 x (/.f64 (-.f64 x y) (*.f64 2 y)))","(/.f64 x (+.f64 (/.f64 (/.f64 x 2) y) -1/2))","(*.f64 2 (/.f64 (*.f64 x y) (-.f64 x y)))","(/.f64 y (fma.f64 (/.f64 y x) -1/2 1/2))","(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))"]],"stop":[["node limit",1]],"time":47.27001953125,"type":"simplify"},{"compiler":[[19,12]],"time":0.40283203125,"type":"eval"},{"alts":[["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))","next",6.755042468007526],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","fresh",13.097266994459217]],"compiler":[[10,7],[11,7],[10,7],[11,7]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.03125],"time":1.25,"type":"prune"},{"compiler":[[23,12]],"locations":[["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))",6.755042468007527,true]],"time":5.01611328125,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))","y","-inf",0.323974609375],["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))","y","inf",0.376953125],["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))","y","0",0.2958984375],["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))","x","-inf",0.39697265625],["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))","x","inf",0.465087890625],["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))","x","0",0.531982421875]],"time":2.489013671875,"type":"series"},{"count":[[1,31]],"egraph":[[2,2161,11,0.020310458],[1,171,11,0.003054208],[0,8,11,0.000266416]],"inputs":[["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (fma.f64 1/2 (/.f64 x y) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))) (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))) 2) (cbrt.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))) (sqrt.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 1/2 (/.f64 x y) -1/2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (fma.f64 1/2 (/.f64 x y) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (fma.f64 1/2 (/.f64 x y) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x y) -1/2)) 2)) (/.f64 x (cbrt.f64 (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x y) -1/2)) 2)) (cbrt.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x y) -1/2)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (fma.f64 1/2 (/.f64 x y) -1/2))) (/.f64 x (sqrt.f64 (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (fma.f64 1/2 (/.f64 x y) -1/2))) (/.f64 (cbrt.f64 x) (sqrt.f64 (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 1/2 (/.f64 x y) -1/2) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (fma.f64 1/2 (/.f64 x y) -1/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))))))))"]],"rules":[["egg-rr",31]],"stop":[["node limit",1]],"time":38.7109375,"type":"rewrite"},{"count":[[55,45]],"egraph":[[5,7732,360,0.035765041000000004],[4,6796,360,0.023649583000000002],[3,1285,402,0.011168708],[2,329,438,0.002564375],[1,105,480,0.000764708],[0,34,492,0.000191]],"inputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(*.f64 -2 (+.f64 x (/.f64 (*.f64 x x) y)))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) x)))","(*.f64 -2 (fma.f64 (/.f64 x y) x x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 (+.f64 (+.f64 x (/.f64 (*.f64 x x) y)) (/.f64 (pow.f64 x 3) (*.f64 y y))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))))","(*.f64 -2 (fma.f64 (+.f64 1 (/.f64 x y)) (*.f64 x (/.f64 x y)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (+.f64 x (/.f64 (*.f64 x x) y)) (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))) (/.f64 (pow.f64 x 4) (pow.f64 y 3))))","(*.f64 -2 (+.f64 x (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 (/.f64 x y) (fma.f64 (/.f64 x y) x x)))))","(*.f64 -2 (*.f64 (+.f64 1 (/.f64 x y)) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(*.f64 2 (+.f64 y (/.f64 y (/.f64 x y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y x) y)))","(*.f64 2 (fma.f64 (/.f64 y x) y y))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 (+.f64 y (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y))))","(*.f64 2 (fma.f64 (+.f64 1 (/.f64 y x)) (*.f64 y (/.f64 y x)) y))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))))))","(*.f64 2 (+.f64 (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y)) (+.f64 y (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (/.f64 y x) (fma.f64 (/.f64 y x) y y)))))","(*.f64 2 (*.f64 (+.f64 1 (/.f64 y x)) (+.f64 y (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(*.f64 2 (+.f64 y (/.f64 y (/.f64 x y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y x) y)))","(*.f64 2 (fma.f64 (/.f64 y x) y y))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 (+.f64 y (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y))))","(*.f64 2 (fma.f64 (+.f64 1 (/.f64 y x)) (*.f64 y (/.f64 y x)) y))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))))))","(*.f64 2 (+.f64 (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y)) (+.f64 y (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (/.f64 y x) (fma.f64 (/.f64 y x) y y)))))","(*.f64 2 (*.f64 (+.f64 1 (/.f64 y x)) (+.f64 y (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(*.f64 2 (+.f64 y (/.f64 y (/.f64 x y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y x) y)))","(*.f64 2 (fma.f64 (/.f64 y x) y y))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 (+.f64 y (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y))))","(*.f64 2 (fma.f64 (+.f64 1 (/.f64 y x)) (*.f64 y (/.f64 y x)) y))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))))))","(*.f64 2 (+.f64 (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y)) (+.f64 y (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (/.f64 y x) (fma.f64 (/.f64 y x) y y)))))","(*.f64 2 (*.f64 (+.f64 1 (/.f64 y x)) (+.f64 y (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(*.f64 -2 (+.f64 x (/.f64 (*.f64 x x) y)))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) x)))","(*.f64 -2 (fma.f64 (/.f64 x y) x x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 (+.f64 (+.f64 x (/.f64 (*.f64 x x) y)) (/.f64 (pow.f64 x 3) (*.f64 y y))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))))","(*.f64 -2 (fma.f64 (+.f64 1 (/.f64 x y)) (*.f64 x (/.f64 x y)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (+.f64 x (/.f64 (*.f64 x x) y)) (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))) (/.f64 (pow.f64 x 4) (pow.f64 y 3))))","(*.f64 -2 (+.f64 x (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 (/.f64 x y) (fma.f64 (/.f64 x y) x x)))))","(*.f64 -2 (*.f64 (+.f64 1 (/.f64 x y)) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(*.f64 -2 (+.f64 x (/.f64 (*.f64 x x) y)))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) x)))","(*.f64 -2 (fma.f64 (/.f64 x y) x x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 (+.f64 (+.f64 x (/.f64 (*.f64 x x) y)) (/.f64 (pow.f64 x 3) (*.f64 y y))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))))","(*.f64 -2 (fma.f64 (+.f64 1 (/.f64 x y)) (*.f64 x (/.f64 x y)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (+.f64 x (/.f64 (*.f64 x x) y)) (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))) (/.f64 (pow.f64 x 4) (pow.f64 y 3))))","(*.f64 -2 (+.f64 x (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 (/.f64 x y) (fma.f64 (/.f64 x y) x x)))))","(*.f64 -2 (*.f64 (+.f64 1 (/.f64 x y)) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 y y)))))"]],"stop":[["node limit",1]],"time":52.4150390625,"type":"simplify"},{"compiler":[[646,407]],"time":8.551025390625,"type":"eval"},{"alts":[["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))","done",6.755042468007526],["(*.f64 2 (fma.f64 (+.f64 1 (/.f64 y x)) (*.f64 y (/.f64 y x)) y))","fresh",32.69800664203457],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","next",13.097266994459217]],"compiler":[[10,7],[16,9],[11,7],[16,9],[11,7]],"count":[[47,3]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[45,1],"picked":[1,1]}],"min-error":[0],"time":6.970947265625,"type":"prune"},{"compiler":[[25,13]],"locations":[["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))",12.76653728624451,true]],"time":5.760009765625,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","y","-inf",0.29296875],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","y","inf",0.44287109375],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","y","0",0.2490234375],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","x","-inf",0.296875],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","x","inf",0.406005859375],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","x","0",0.3330078125]],"time":2.114013671875,"type":"series"},{"count":[[1,63]],"egraph":[[2,2674,13,0.025205876],[1,181,13,0.0034221670000000003],[0,8,13,0.000226083]],"inputs":[["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (+.f64 x x) (-.f64 x y))) y)) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (+.f64 x x) (-.f64 x y))) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 (+.f64 x x) (-.f64 x y))) y))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 (+.f64 x x) (-.f64 x y))) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 (*.f64 2 y) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (/.f64 1 (-.f64 (/.f64 x y) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (*.f64 y (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 (+.f64 x x) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 2 y)) (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (*.f64 x (*.f64 2 y))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (*.f64 x (*.f64 2 y))) -2)) (cbrt.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 2 y))) 2) (*.f64 (cbrt.f64 (*.f64 x (*.f64 2 y))) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)) (sqrt.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (*.f64 2 y))) (*.f64 (sqrt.f64 (*.f64 x (*.f64 2 y))) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x x) (neg.f64 y)) (/.f64 1 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x y)) (*.f64 x (*.f64 2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 (*.f64 2 y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) 1) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y 1) (/.f64 (+.f64 x x) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 2 y))) 2) 1) (/.f64 (cbrt.f64 (*.f64 x (*.f64 2 y))) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 x (*.f64 2 y))) 1) (/.f64 (sqrt.f64 (*.f64 x (*.f64 2 y))) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (*.f64 2 y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 y (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) -2) (/.f64 (*.f64 x (*.f64 2 y)) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 2 y))) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 x (*.f64 2 y))) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (sqrt.f64 (*.f64 x (*.f64 2 y))) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (sqrt.f64 (-.f64 x y))) (/.f64 (*.f64 2 y) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (sqrt.f64 (-.f64 x y))) (/.f64 y (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 (+.f64 x x) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/2) (/.f64 (*.f64 x (*.f64 2 y)) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 2 y))) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 x (*.f64 2 y))) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (*.f64 2 y)) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (*.f64 2 y)) (*.f64 (+.f64 x y) (-.f64 x y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (*.f64 x (*.f64 2 y))) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (*.f64 x (*.f64 2 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 x (*.f64 2 y)) 3) (pow.f64 (-.f64 x y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 x y) (*.f64 x (*.f64 2 y))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y))) 2)) (cbrt.f64 (log.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)))) (sqrt.f64 (log.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x (*.f64 2 y)) (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 x y) (*.f64 x (*.f64 2 y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 (+.f64 x x) (-.f64 x y))) y))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 x (*.f64 2 y)) 3) (pow.f64 (-.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 x y) (*.f64 x (*.f64 2 y)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)) 1) 1))))))"]],"rules":[["egg-rr",63]],"stop":[["node limit",1]],"time":44.721923828125,"type":"rewrite"},{"count":[[87,77]],"egraph":[[5,7732,360,0.035499749],[4,6796,360,0.023276708],[3,1285,402,0.0110145],[2,329,438,0.00255375],[1,105,480,0.000755625],[0,34,492,0.000189708]],"inputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(*.f64 -2 (+.f64 x (/.f64 (*.f64 x x) y)))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) x)))","(*.f64 -2 (fma.f64 (/.f64 x y) x x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 (+.f64 (+.f64 x (/.f64 (*.f64 x x) y)) (/.f64 (pow.f64 x 3) (*.f64 y y))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))))","(*.f64 -2 (fma.f64 (+.f64 1 (/.f64 x y)) (*.f64 x (/.f64 x y)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (+.f64 x (/.f64 (*.f64 x x) y)) (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))) (/.f64 (pow.f64 x 4) (pow.f64 y 3))))","(*.f64 -2 (+.f64 x (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 (/.f64 x y) (fma.f64 (/.f64 x y) x x)))))","(*.f64 -2 (*.f64 (+.f64 1 (/.f64 x y)) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(*.f64 2 (+.f64 y (/.f64 y (/.f64 x y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y x) y)))","(*.f64 2 (fma.f64 (/.f64 y x) y y))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 (+.f64 y (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y))))","(*.f64 2 (fma.f64 (+.f64 1 (/.f64 y x)) (*.f64 y (/.f64 y x)) y))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))))))","(*.f64 2 (+.f64 (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y)) (+.f64 y (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (/.f64 y x) (fma.f64 (/.f64 y x) y y)))))","(*.f64 2 (*.f64 (+.f64 1 (/.f64 y x)) (+.f64 y (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(*.f64 2 (+.f64 y (/.f64 y (/.f64 x y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y x) y)))","(*.f64 2 (fma.f64 (/.f64 y x) y y))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 (+.f64 y (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y))))","(*.f64 2 (fma.f64 (+.f64 1 (/.f64 y x)) (*.f64 y (/.f64 y x)) y))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))))))","(*.f64 2 (+.f64 (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y)) (+.f64 y (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (/.f64 y x) (fma.f64 (/.f64 y x) y y)))))","(*.f64 2 (*.f64 (+.f64 1 (/.f64 y x)) (+.f64 y (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(*.f64 2 (+.f64 y (/.f64 y (/.f64 x y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y x) y)))","(*.f64 2 (fma.f64 (/.f64 y x) y y))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 (+.f64 y (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y))))","(*.f64 2 (fma.f64 (+.f64 1 (/.f64 y x)) (*.f64 y (/.f64 y x)) y))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))))))","(*.f64 2 (+.f64 (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y)) (+.f64 y (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (/.f64 y x) (fma.f64 (/.f64 y x) y y)))))","(*.f64 2 (*.f64 (+.f64 1 (/.f64 y x)) (+.f64 y (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(*.f64 -2 (+.f64 x (/.f64 (*.f64 x x) y)))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) x)))","(*.f64 -2 (fma.f64 (/.f64 x y) x x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 (+.f64 (+.f64 x (/.f64 (*.f64 x x) y)) (/.f64 (pow.f64 x 3) (*.f64 y y))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))))","(*.f64 -2 (fma.f64 (+.f64 1 (/.f64 x y)) (*.f64 x (/.f64 x y)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (+.f64 x (/.f64 (*.f64 x x) y)) (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))) (/.f64 (pow.f64 x 4) (pow.f64 y 3))))","(*.f64 -2 (+.f64 x (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 (/.f64 x y) (fma.f64 (/.f64 x y) x x)))))","(*.f64 -2 (*.f64 (+.f64 1 (/.f64 x y)) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(*.f64 -2 (+.f64 x (/.f64 (*.f64 x x) y)))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) x)))","(*.f64 -2 (fma.f64 (/.f64 x y) x x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 (+.f64 (+.f64 x (/.f64 (*.f64 x x) y)) (/.f64 (pow.f64 x 3) (*.f64 y y))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))))","(*.f64 -2 (fma.f64 (+.f64 1 (/.f64 x y)) (*.f64 x (/.f64 x y)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (+.f64 x (/.f64 (*.f64 x x) y)) (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))) (/.f64 (pow.f64 x 4) (pow.f64 y 3))))","(*.f64 -2 (+.f64 x (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 (/.f64 x y) (fma.f64 (/.f64 x y) x x)))))","(*.f64 -2 (*.f64 (+.f64 1 (/.f64 x y)) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 y y)))))"]],"stop":[["node limit",1]],"time":52.795166015625,"type":"simplify"},{"compiler":[[1175,500]],"time":11.02685546875,"type":"eval"},{"alts":[["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))","done",6.755042468007526],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","done",13.097266994459217],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","next",8.404937606765731]],"compiler":[[10,7],[11,7],[11,6],[11,6]],"count":[[80,3]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[77,1],"picked":[1,1]}],"min-error":[0],"time":11.59814453125,"type":"prune"},{"compiler":[[26,6]],"locations":[["(/.f64 (+.f64 x x) (-.f64 x y))",0.01953125,true],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)",8.40884385676573,true]],"time":4.553955078125,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (+.f64 x x) (-.f64 x y))","y","-inf",0.22607421875],["(/.f64 (+.f64 x x) (-.f64 x y))","y","inf",0.25],["(/.f64 (+.f64 x x) (-.f64 x y))","y","0",0.180908203125],["(/.f64 (+.f64 x x) (-.f64 x y))","x","-inf",0.22705078125],["(/.f64 (+.f64 x x) (-.f64 x y))","x","inf",0.2587890625],["(/.f64 (+.f64 x x) (-.f64 x y))","x","0",0.343017578125],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","y","-inf",0.18017578125],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","y","inf",0.2001953125],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","y","0",0.170166015625],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","x","-inf",0.2080078125],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","x","inf",0.194091796875],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","x","0",0.225830078125]],"time":2.846923828125,"type":"series"},{"count":[[2,57]],"egraph":[[2,2748,23,0.021363],[1,165,23,0.003237292],[0,7,23,0.000170625]],"inputs":[["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","(/.f64 (+.f64 x x) (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 y (*.f64 2 (/.f64 x (-.f64 x y)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x x) (/.f64 (-.f64 x y) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 (-.f64 x y) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 x y) (*.f64 (+.f64 x x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) y) (neg.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 x x) y)) (neg.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) 1) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) (sqrt.f64 (-.f64 x y))) (sqrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (*.f64 2 (/.f64 x (-.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (*.f64 2 (/.f64 x (-.f64 x y)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 2 (/.f64 x (-.f64 x y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 y (*.f64 2 (/.f64 x (-.f64 x y))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 y (*.f64 2 (/.f64 x (-.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (*.f64 2 (/.f64 x (-.f64 x y)))) y))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 y (*.f64 2 (/.f64 x (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (*.f64 2 (/.f64 x (-.f64 x y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 2 (/.f64 x (-.f64 x y))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 2 (/.f64 x (-.f64 x y))) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (*.f64 2 (/.f64 x (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (*.f64 2 (/.f64 x (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (*.f64 2 (/.f64 x (-.f64 x y))))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 2 (/.f64 x (-.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (*.f64 2 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (/.f64 1 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (/.f64 x (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 2 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) (pow.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) 2) (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (sqrt.f64 (-.f64 x y))) (/.f64 (+.f64 x x) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x y)) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 x (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 x (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 (+.f64 x x) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (sqrt.f64 (-.f64 x y))) (/.f64 x (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) 1) (*.f64 2 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (/.f64 x (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2 (/.f64 x (-.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x x) (sqrt.f64 (-.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 x y) (+.f64 x x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 2 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (+.f64 x x) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 2 (/.f64 x (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 2 (/.f64 x (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 2 (/.f64 x (-.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (+.f64 x x) (pow.f64 (-.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 2 (/.f64 x (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 2 (/.f64 x (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 2 (/.f64 x (-.f64 x y)))))))))"]],"rules":[["egg-rr",34],["egg-rr",23]],"stop":[["node limit",1]],"time":41.764892578125,"type":"rewrite"},{"count":[[105,86]],"egraph":[[8,6433,738,0.066454625],[7,6230,738,0.052695791000000006],[6,5548,738,0.041839166000000004],[5,4946,738,0.030945166000000003],[4,4345,747,0.021048666],[3,2320,819,0.012121166],[2,594,849,0.004642791],[1,179,969,0.0012906660000000002],[0,59,1005,0.000303875]],"inputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 -2 (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(*.f64 -2 (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(*.f64 -2 (+.f64 x (/.f64 x (/.f64 y x))))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) x)))","(*.f64 -2 (+.f64 x (*.f64 x (/.f64 x y))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (*.f64 y y)) (+.f64 x (/.f64 x (/.f64 y x)))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))))","(*.f64 -2 (+.f64 x (*.f64 x (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1)))))","(*.f64 -2 (*.f64 x (+.f64 1 (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1)))))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) (+.f64 x (*.f64 x (/.f64 x y))))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (*.f64 y y)) (+.f64 x (/.f64 x (/.f64 y x))))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))) (*.f64 (pow.f64 (/.f64 x y) 3) x)))","(*.f64 -2 (+.f64 x (+.f64 (*.f64 x (pow.f64 (/.f64 x y) 3)) (*.f64 x (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1))))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 (*.f64 x (*.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (+.f64 (/.f64 x y) 1))))","(*.f64 -2 (*.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (+.f64 (pow.f64 (/.f64 x y) 2) 1))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(*.f64 2 (+.f64 y (/.f64 y (/.f64 x y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y x) y)))","(*.f64 2 (+.f64 y (*.f64 y (/.f64 y x))))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x))))","(*.f64 2 (+.f64 (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(*.f64 2 (+.f64 y (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y))))","(fma.f64 2 y (*.f64 (/.f64 y (/.f64 x y)) (fma.f64 2 (/.f64 y x) 2)))","(fma.f64 2 y (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 2 (/.f64 y x) 2)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))) y)))","(*.f64 2 (+.f64 (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y)) (+.f64 y (*.f64 (pow.f64 (/.f64 y x) 3) y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y (/.f64 x y)) (+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))))))","(*.f64 2 (*.f64 (+.f64 (/.f64 y x) 1) (+.f64 y (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 (*.f64 y (*.f64 (+.f64 (/.f64 y x) 1) (+.f64 (pow.f64 (/.f64 y x) 2) 1))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(*.f64 2 (+.f64 y (/.f64 y (/.f64 x y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y x) y)))","(*.f64 2 (+.f64 y (*.f64 y (/.f64 y x))))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x))))","(*.f64 2 (+.f64 (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(*.f64 2 (+.f64 y (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y))))","(fma.f64 2 y (*.f64 (/.f64 y (/.f64 x y)) (fma.f64 2 (/.f64 y x) 2)))","(fma.f64 2 y (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 2 (/.f64 y x) 2)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))) y)))","(*.f64 2 (+.f64 (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y)) (+.f64 y (*.f64 (pow.f64 (/.f64 y x) 3) y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y (/.f64 x y)) (+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))))))","(*.f64 2 (*.f64 (+.f64 (/.f64 y x) 1) (+.f64 y (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 (*.f64 y (*.f64 (+.f64 (/.f64 y x) 1) (+.f64 (pow.f64 (/.f64 y x) 2) 1))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(*.f64 2 (+.f64 y (/.f64 y (/.f64 x y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y x) y)))","(*.f64 2 (+.f64 y (*.f64 y (/.f64 y x))))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x))))","(*.f64 2 (+.f64 (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(*.f64 2 (+.f64 y (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y))))","(fma.f64 2 y (*.f64 (/.f64 y (/.f64 x y)) (fma.f64 2 (/.f64 y x) 2)))","(fma.f64 2 y (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 2 (/.f64 y x) 2)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))) y)))","(*.f64 2 (+.f64 (*.f64 (+.f64 (/.f64 y x) 1) (*.f64 (/.f64 y x) y)) (+.f64 y (*.f64 (pow.f64 (/.f64 y x) 3) y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y (/.f64 x y)) (+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))))))","(*.f64 2 (*.f64 (+.f64 (/.f64 y x) 1) (+.f64 y (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 (*.f64 y (*.f64 (+.f64 (/.f64 y x) 1) (+.f64 (pow.f64 (/.f64 y x) 2) 1))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(*.f64 -2 (+.f64 x (/.f64 x (/.f64 y x))))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) x)))","(*.f64 -2 (+.f64 x (*.f64 x (/.f64 x y))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (*.f64 y y)) (+.f64 x (/.f64 x (/.f64 y x)))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))))","(*.f64 -2 (+.f64 x (*.f64 x (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1)))))","(*.f64 -2 (*.f64 x (+.f64 1 (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1)))))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) (+.f64 x (*.f64 x (/.f64 x y))))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (*.f64 y y)) (+.f64 x (/.f64 x (/.f64 y x))))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))) (*.f64 (pow.f64 (/.f64 x y) 3) x)))","(*.f64 -2 (+.f64 x (+.f64 (*.f64 x (pow.f64 (/.f64 x y) 3)) (*.f64 x (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1))))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 (*.f64 x (*.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (+.f64 (/.f64 x y) 1))))","(*.f64 -2 (*.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (+.f64 (pow.f64 (/.f64 x y) 2) 1))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(*.f64 -2 (+.f64 x (/.f64 x (/.f64 y x))))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) x)))","(*.f64 -2 (+.f64 x (*.f64 x (/.f64 x y))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (*.f64 y y)) (+.f64 x (/.f64 x (/.f64 y x)))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))))","(*.f64 -2 (+.f64 x (*.f64 x (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1)))))","(*.f64 -2 (*.f64 x (+.f64 1 (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1)))))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) (+.f64 x (*.f64 x (/.f64 x y))))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (*.f64 y y)) (+.f64 x (/.f64 x (/.f64 y x))))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))) (*.f64 (pow.f64 (/.f64 x y) 3) x)))","(*.f64 -2 (+.f64 x (+.f64 (*.f64 x (pow.f64 (/.f64 x y) 3)) (*.f64 x (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1))))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 (*.f64 x (*.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (+.f64 (/.f64 x y) 1))))","(*.f64 -2 (*.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (+.f64 (pow.f64 (/.f64 x y) 2) 1))))","(*.f64 -2 (/.f64 x y))","(/.f64 (*.f64 -2 x) y)","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y))))","(*.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)))","(*.f64 -2 (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1)))","(*.f64 -2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))))","(*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1))))","(*.f64 (/.f64 x y) (+.f64 -2 (*.f64 -2 (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1)))))","(*.f64 (*.f64 -2 (/.f64 x y)) (+.f64 1 (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(*.f64 -2 (*.f64 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1) (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (*.f64 2 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x)))))","(fma.f64 2 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) 2)","(fma.f64 2 (*.f64 (+.f64 (/.f64 y x) 1) (/.f64 y x)) 2)","(+.f64 2 (*.f64 (/.f64 y x) (fma.f64 2 (/.f64 y x) 2)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 2 (fma.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (*.f64 2 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x))))))","(+.f64 2 (*.f64 2 (+.f64 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (+.f64 (/.f64 y x) 1) (/.f64 y x))) 2)","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))) 2)","(*.f64 (+.f64 (/.f64 y (*.f64 x (/.f64 x y))) 1) (fma.f64 2 (/.f64 y x) 2))","(*.f64 (+.f64 (/.f64 y x) 1) (fma.f64 2 (pow.f64 (/.f64 y x) 2) 2))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (*.f64 2 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x)))))","(fma.f64 2 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) 2)","(fma.f64 2 (*.f64 (+.f64 (/.f64 y x) 1) (/.f64 y x)) 2)","(+.f64 2 (*.f64 (/.f64 y x) (fma.f64 2 (/.f64 y x) 2)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 2 (fma.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (*.f64 2 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x))))))","(+.f64 2 (*.f64 2 (+.f64 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (+.f64 (/.f64 y x) 1) (/.f64 y x))) 2)","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))) 2)","(*.f64 (+.f64 (/.f64 y (*.f64 x (/.f64 x y))) 1) (fma.f64 2 (/.f64 y x) 2))","(*.f64 (+.f64 (/.f64 y x) 1) (fma.f64 2 (pow.f64 (/.f64 y x) 2) 2))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (*.f64 2 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x)))))","(fma.f64 2 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) 2)","(fma.f64 2 (*.f64 (+.f64 (/.f64 y x) 1) (/.f64 y x)) 2)","(+.f64 2 (*.f64 (/.f64 y x) (fma.f64 2 (/.f64 y x) 2)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 2 (fma.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (*.f64 2 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x))))))","(+.f64 2 (*.f64 2 (+.f64 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (+.f64 (/.f64 y x) 1) (/.f64 y x))) 2)","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))) 2)","(*.f64 (+.f64 (/.f64 y (*.f64 x (/.f64 x y))) 1) (fma.f64 2 (/.f64 y x) 2))","(*.f64 (+.f64 (/.f64 y x) 1) (fma.f64 2 (pow.f64 (/.f64 y x) 2) 2))","(*.f64 -2 (/.f64 x y))","(/.f64 (*.f64 -2 x) y)","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y))))","(*.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)))","(*.f64 -2 (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1)))","(*.f64 -2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))))","(*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1))))","(*.f64 (/.f64 x y) (+.f64 -2 (*.f64 -2 (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1)))))","(*.f64 (*.f64 -2 (/.f64 x y)) (+.f64 1 (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(*.f64 -2 (*.f64 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1) (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(*.f64 -2 (/.f64 x y))","(/.f64 (*.f64 -2 x) y)","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y))))","(*.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)))","(*.f64 -2 (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1)))","(*.f64 -2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))))","(*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1))))","(*.f64 (/.f64 x y) (+.f64 -2 (*.f64 -2 (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1)))))","(*.f64 (*.f64 -2 (/.f64 x y)) (+.f64 1 (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(*.f64 -2 (*.f64 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1) (*.f64 (/.f64 x y) (+.f64 (/.f64 x y) 1))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))"]],"stop":[["node limit",1]],"time":92.60009765625,"type":"simplify"},{"compiler":[[1200,576]],"time":12.7490234375,"type":"eval"},{"alts":[["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))","done",6.755042468007526],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","done",13.097266994459217],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","done",8.404937606765731]],"compiler":[[10,7],[11,7],[11,6]],"count":[[89,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[86,0],"picked":[1,1]}],"min-error":[0],"time":12.282958984375,"type":"prune"},{"accuracy":[0.03125],"baseline":[6.755042468007526],"branch":[["x",0.0390625,3],["y",0.03125,3],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))",0.4671682214245243,5]],"compiler":[[3,2],[3,2],[11,7],[42,22]],"count":[[4,3]],"inputs":[["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","(*.f64 2 (fma.f64 (+.f64 1 (/.f64 y x)) (*.f64 y (/.f64 y x)) y))","(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))","(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))"]],"link":["."],"name":["Linear.Projection:perspective from linear-1.19.1.3, B"],"oracle":[44.3741959206235],"outputs":[["(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))","(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","(/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))"]],"time":34.132080078125,"times":[["x",9.31298828125],["y",9.989013671875],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))",13.841064453125]],"type":"regimes"},{"bstep":[[2.5266211310122185e-43,6.037994280361323e-43,8.184814453125],[-2.65046080191604e+106,-3.909855156556514e+104,8.22998046875]],"compiler":[[13,9],[3,2]],"method":["binary-search","binary-search"],"time":16.508056640625,"type":"bsearch"},{"compiler":[[35,21]],"egraph":[[4,30,47,0.00018758299999999998],[3,29,47,0.00015066599999999998],[2,27,47,0.00011391599999999998],[1,22,47,7.1749e-5],[0,19,47,3.4541e-5]],"inputs":[["(if (<=.f64 y -26504608019160399997253019917512761930691125679289656693493994730604893293632146121522010252099213332578304) (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2)) (if (<=.f64 y 3171971577228291/12554203470773361527671578846415332832204710888928069025792) (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y) (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 y -26504608019160399997253019917512761930691125679289656693493994730604893293632146121522010252099213332578304) (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2)) (if (<=.f64 y 3171971577228291/12554203470773361527671578846415332832204710888928069025792) (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y) (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))))","(if (<=.f64 y -26504608019160399997253019917512761930691125679289656693493994730604893293632146121522010252099213332578304) (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2)) (if (<=.f64 y 3171971577228291/12554203470773361527671578846415332832204710888928069025792) (*.f64 y (/.f64 (+.f64 x x) (-.f64 x y))) (/.f64 x (fma.f64 1/2 (/.f64 x y) -1/2))))"]],"stop":[["done",1],["saturated",1]],"time":9.14794921875,"type":"simplify"},{"time":0.013916015625,"type":"soundness"},{"compiler":[[35,21]],"remove-preprocessing":[[]],"time":12.8759765625,"type":"end"}]