[{"compiler":[[51,37]],"method":["search"],"sampling":[[12,1.3338401913477714e-5,1.9054859876396735e-6,0.9999847561120988],[11,1.3338401913477714e-5,1.9054859876396735e-6,0.9999847561120988],[10,1.3338401913477714e-5,1.9054859876396735e-6,0.9999847561120988],[9,1.1432915925838041e-5,3.810971975279347e-6,0.9999847561120988],[8,1.1432915925838041e-5,3.810971975279347e-6,0.9999847561120988],[7,1.1432915925838041e-5,3.810971975279347e-6,0.9999847561120988],[6,7.621943950558694e-6,7.621943950558694e-6,0.9999847561120989],[5,7.621943950558694e-6,7.621943950558694e-6,0.9999847561120989],[4,7.621943950558694e-6,7.621943950558694e-6,0.9999847561120989],[3,0.0,1.5243887901117388e-5,0.9999847561120989],[2,0.0,1.5243887901117388e-5,0.9999847561120989],[1,0.0,1.5243887901117388e-5,0.9999847561120989],[0,0.0,1.5243887901117388e-5,0.9999847561120989]],"time":54.43701171875,"type":"analyze"},{"outcomes":[["body",256,"valid",727.2509765625,8256]],"time":735.239013671875,"type":"sample"},{"compiler":[[28,20]],"egraph":[[0,3,3,2.375e-6],[4,6968,132,0.026711],[3,2106,132,0.013283582999999998],[2,449,140,0.0033743749999999998],[1,127,140,0.0007726250000000001],[0,43,156,0.000190625]],"inputs":[["0","1","2"],["(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","(*.f64 (cos.f64 (*.f64 (*.f64 ux 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 uy) (*.f64 uy maxCos)) (+.f64 (-.f64 1 uy) (*.f64 uy maxCos))))))","(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux)) (+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux))))))","(*.f64 (cos.f64 (*.f64 (*.f64 maxCos 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux uy)) (+.f64 (-.f64 1 ux) (*.f64 ux uy))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (fma.f64 ux maxCos (-.f64 1 ux))))))","(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (fma.f64 (-.f64 (fma.f64 ux maxCos 1) ux) (neg.f64 (-.f64 (fma.f64 ux maxCos 1) ux)) 1)))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (-.f64 (fma.f64 ux maxCos 1) ux) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (cos.f64 (*.f64 (*.f64 ux 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 uy) (*.f64 uy maxCos)) (+.f64 (-.f64 1 uy) (*.f64 uy maxCos))))))","(*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 ux))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 uy) (*.f64 uy maxCos)) (+.f64 (-.f64 1 uy) (*.f64 uy maxCos))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 ux (PI.f64)))) (sqrt.f64 (-.f64 1 (*.f64 (fma.f64 uy maxCos (-.f64 1 uy)) (fma.f64 uy maxCos (-.f64 1 uy))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) ux))) (sqrt.f64 (-.f64 1 (*.f64 (-.f64 (fma.f64 uy maxCos 1) uy) (-.f64 (fma.f64 uy maxCos 1) uy)))))","(*.f64 (cos.f64 (*.f64 ux (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (-.f64 (fma.f64 uy maxCos 1) uy) (-.f64 uy (fma.f64 uy maxCos 1)) 1)))","(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux)) (+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux))))))","(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (*.f64 ux maxCos) (-.f64 1 maxCos)) (+.f64 (*.f64 ux maxCos) (-.f64 1 maxCos))))))","(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (fma.f64 ux maxCos (-.f64 1 maxCos)) (fma.f64 ux maxCos (-.f64 1 maxCos))))))","(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (fma.f64 (-.f64 (fma.f64 ux maxCos 1) maxCos) (+.f64 -1 (*.f64 (-.f64 1 ux) maxCos)) 1)))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (-.f64 (fma.f64 ux maxCos 1) maxCos) (-.f64 maxCos (fma.f64 ux maxCos 1)) 1)))","(*.f64 (cos.f64 (*.f64 (*.f64 maxCos 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux uy)) (+.f64 (-.f64 1 ux) (*.f64 ux uy))))))","(*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 maxCos))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 uy ux)) (+.f64 (-.f64 1 ux) (*.f64 uy ux))))))","(*.f64 (cos.f64 (*.f64 maxCos (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 1 (*.f64 (fma.f64 uy ux (-.f64 1 ux)) (fma.f64 uy ux (-.f64 1 ux))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) maxCos))) (sqrt.f64 (-.f64 1 (*.f64 (-.f64 (fma.f64 uy ux 1) ux) (-.f64 (fma.f64 uy ux 1) ux)))))","(*.f64 (cos.f64 (*.f64 maxCos (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 uy ux (-.f64 1 ux)) (-.f64 ux (fma.f64 uy ux 1)) 1)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":51.445068359375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[4,3167,33,0.021404209],[3,572,33,0.006224543000000001],[2,128,35,0.001243418],[1,41,35,0.000327501],[0,17,39,0.000112709]],"inputs":[["(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (fma.f64 ux maxCos (-.f64 1 ux))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 1 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (fma.f64 ux maxCos (-.f64 1 ux))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (-.f64 (fma.f64 ux maxCos 1) ux) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))"]],"stop":[["node limit",1]],"time":33.3359375,"type":"simplify"},{"compiler":[[50,35]],"time":1.077880859375,"type":"eval"},{"alts":[["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","next",12.105230948585742],["(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","fresh",12.132140884313674]],"compiler":[[25,19],[28,20],[25,19],[28,20]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[11.752214886729389],"time":1.864990234375,"type":"prune"},{"compiler":[[93,60]],"locations":[["(cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))",0.12678200767235193,true],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))",0.24609375,true],["(*.f64 uy (*.f64 2 (PI.f64)))",0.27734375,true],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)",12.92514240433941,true]],"time":23.97705078125,"type":"localize"},{"count":[[4,72]],"series":[["(cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))","uy","-inf",0.14501953125],["(cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))","uy","inf",0.149169921875],["(cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))","uy","0",0.245849609375],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","maxCos","-inf",0.988037109375],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","maxCos","inf",1.14794921875],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","maxCos","0",1.404052734375],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","ux","-inf",1.22509765625],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","ux","inf",1.031005859375],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","ux","0",1.218994140625],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","uy","-inf",0.385009765625],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","uy","inf",1.361083984375],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","uy","0",1.048095703125],["(*.f64 uy (*.f64 2 (PI.f64)))","uy","-inf",0.248046875],["(*.f64 uy (*.f64 2 (PI.f64)))","uy","inf",0.405029296875],["(*.f64 uy (*.f64 2 (PI.f64)))","uy","0",0.463134765625],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","maxCos","-inf",0.48095703125],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","maxCos","inf",0.705078125],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","maxCos","0",0.469970703125],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","ux","-inf",0.76416015625],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","ux","inf",0.52978515625],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","ux","0",0.912109375]],"time":15.821044921875,"type":"series"},{"count":[[4,78]],"egraph":[[2,4582,70,0.033888625],[1,358,70,0.006465292],[0,17,70,0.000438083]],"inputs":[["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","(*.f64 uy (*.f64 2 (PI.f64)))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) (pow.f64 (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) 2) (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 1/4) (*.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 1/4) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 1/4)) (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 3) 1) (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (-.f64 1 (*.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) -1) (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 uy (*.f64 2 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 uy (*.f64 2 (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 uy (*.f64 2 (PI.f64))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 uy (*.f64 2 (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 2 (PI.f64)) 3) (pow.f64 uy 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 uy (*.f64 2 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 uy (*.f64 2 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 3/2) (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) uy)) (cos.f64 (*.f64 (PI.f64) uy))) (*.f64 (sin.f64 (*.f64 (PI.f64) uy)) (sin.f64 (*.f64 (PI.f64) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2) (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) (sqrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 1))))))"]],"rules":[["egg-rr",20],["egg-rr",15],["egg-rr",15],["egg-rr",28]],"stop":[["node limit",1]],"time":61.738037109375,"type":"rewrite"},{"count":[[150,144]],"egraph":[[2,2375,2465,0.016459499],[1,687,2791,0.004503956999999999],[0,206,3073,0.001047541]],"inputs":[["(*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))","(+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))","(+.f64 1 (+.f64 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))) (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))","(+.f64 1 (+.f64 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))) (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (+.f64 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))) (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(+.f64 (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) maxCos) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) maxCos) (+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) maxCos) (+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(+.f64 (*.f64 -1 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 (-.f64 ux 1) ux)) (*.f64 ux (+.f64 (*.f64 -1 ux) 1))))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (+.f64 (*.f64 -1 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 (-.f64 ux 1) ux)) (*.f64 ux (+.f64 (*.f64 -1 ux) 1))))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (+.f64 (*.f64 -1 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 (-.f64 ux 1) ux)) (*.f64 ux (+.f64 (*.f64 -1 ux) 1))))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (+.f64 (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (*.f64 -4/45 (*.f64 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))))))","(+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (-.f64 1 maxCos) 3)))))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos))))))))","(+.f64 (*.f64 1/16 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) 3)) (pow.f64 ux 2)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (-.f64 1 maxCos) 5)))))) (+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (-.f64 1 maxCos) 3)))))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))))))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1)))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1)))) (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) 2)) ux)))))","(+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) 3)) (pow.f64 ux 2)))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1)))) (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) 2)) ux))))))","(*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (pow.f64 maxCos 2) (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))))) 2)))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))))))))","(+.f64 (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)))) 2)) (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 maxCos 3)))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))) 3))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (pow.f64 maxCos 2) (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))))) 2)))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)))))))))","1","(+.f64 1 (*.f64 -2 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 -2 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))) (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))))","(+.f64 (*.f64 -4/45 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))) (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos))","(*.f64 ux (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos)))","(*.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)))","(*.f64 ux (*.f64 2 (-.f64 1 maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos))))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos))))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos))))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","(*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2)))","(*.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)))","(*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)))","(*.f64 (*.f64 ux ux) (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos))))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos))))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos))))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","(*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos))))","(*.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)))","(*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)))","(*.f64 (*.f64 ux ux) (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos))))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos))))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos))))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","(+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))","(+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1)))","(fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)","(+.f64 1 (+.f64 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))) (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))","(+.f64 1 (fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (*.f64 (+.f64 ux -1) (-.f64 1 ux))))","(+.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 2 (*.f64 ux (*.f64 (+.f64 ux -1) maxCos))))","(+.f64 1 (+.f64 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))) (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (fma.f64 (+.f64 ux -1) (fma.f64 -1 ux 1) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))))","(fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 (*.f64 ux maxCos) (*.f64 ux maxCos))))","(-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 maxCos (+.f64 (*.f64 (*.f64 ux ux) maxCos) (*.f64 ux (*.f64 2 (-.f64 1 ux))))))","(+.f64 1 (+.f64 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))) (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (fma.f64 (+.f64 ux -1) (fma.f64 -1 ux 1) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))))","(fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 (*.f64 ux maxCos) (*.f64 ux maxCos))))","(-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 maxCos (+.f64 (*.f64 (*.f64 ux ux) maxCos) (*.f64 ux (*.f64 2 (-.f64 1 ux))))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))","(neg.f64 (*.f64 (*.f64 ux maxCos) (*.f64 ux maxCos)))","(*.f64 (*.f64 maxCos maxCos) (*.f64 ux (neg.f64 ux)))","(+.f64 (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) maxCos) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) maxCos (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))","(-.f64 (*.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux))) (*.f64 (*.f64 ux maxCos) (*.f64 ux maxCos)))","(*.f64 maxCos (-.f64 (*.f64 (+.f64 ux -1) (-.f64 ux (neg.f64 ux))) (*.f64 (*.f64 ux ux) maxCos)))","(+.f64 (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) maxCos) (+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (fma.f64 (+.f64 ux -1) (fma.f64 -1 ux 1) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))))","(fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 (*.f64 ux maxCos) (*.f64 ux maxCos))))","(-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 maxCos (+.f64 (*.f64 (*.f64 ux ux) maxCos) (*.f64 ux (*.f64 2 (-.f64 1 ux))))))","(+.f64 (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) maxCos) (+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (fma.f64 (+.f64 ux -1) (fma.f64 -1 ux 1) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))))","(fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 (*.f64 ux maxCos) (*.f64 ux maxCos))))","(-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 maxCos (+.f64 (*.f64 (*.f64 ux ux) maxCos) (*.f64 ux (*.f64 2 (-.f64 1 ux))))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))","(neg.f64 (*.f64 (*.f64 ux maxCos) (*.f64 ux maxCos)))","(*.f64 (*.f64 maxCos maxCos) (*.f64 ux (neg.f64 ux)))","(+.f64 (*.f64 -1 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 (-.f64 ux 1) ux)) (*.f64 ux (+.f64 (*.f64 -1 ux) 1))))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) maxCos (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))","(-.f64 (*.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux))) (*.f64 (*.f64 ux maxCos) (*.f64 ux maxCos)))","(*.f64 maxCos (-.f64 (*.f64 (+.f64 ux -1) (-.f64 ux (neg.f64 ux))) (*.f64 (*.f64 ux ux) maxCos)))","(+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (+.f64 (*.f64 -1 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 (-.f64 ux 1) ux)) (*.f64 ux (+.f64 (*.f64 -1 ux) 1))))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (fma.f64 (+.f64 ux -1) (fma.f64 -1 ux 1) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))))","(fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 (*.f64 ux maxCos) (*.f64 ux maxCos))))","(-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 maxCos (+.f64 (*.f64 (*.f64 ux ux) maxCos) (*.f64 ux (*.f64 2 (-.f64 1 ux))))))","(+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (+.f64 (*.f64 -1 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 (-.f64 ux 1) ux)) (*.f64 ux (+.f64 (*.f64 -1 ux) 1))))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (fma.f64 (+.f64 ux -1) (fma.f64 -1 ux 1) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))))","(fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 (*.f64 ux maxCos) (*.f64 ux maxCos))))","(-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 maxCos (+.f64 (*.f64 (*.f64 ux ux) maxCos) (*.f64 ux (*.f64 2 (-.f64 1 ux))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 uy))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 uy))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 uy))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 uy))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 uy))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 uy))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 uy))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 uy))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 uy))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 uy))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 uy))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 uy))","(sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1))","(sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1))","(sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))))","(+.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 -2 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2)))))","(*.f64 (fma.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2))) 1) (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1))))))","(+.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (fma.f64 2/3 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))) (*.f64 -2 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2))))))","(+.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (fma.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2))) (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (+.f64 1 (fma.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 2/3 (pow.f64 uy 4))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (+.f64 (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (*.f64 -4/45 (*.f64 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))))))","(+.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (fma.f64 2/3 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))) (fma.f64 -2 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2))) (*.f64 -4/45 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)))))))","(+.f64 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (+.f64 (*.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2)))) (*.f64 -4/45 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6))))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))) 1) (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1))))","(+.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (+.f64 (fma.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 2/3 (pow.f64 uy 4)))) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 -4/45 (pow.f64 uy 6))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux))","(*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))","(*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))))","(*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (+.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 1 maxCos)) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))) 1/2) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (-.f64 1 maxCos) 3)))))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos))))))))","(fma.f64 -1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos)) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))))","(fma.f64 -1/8 (*.f64 (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (pow.f64 (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) 2)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (fma.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))))","(fma.f64 -1/8 (*.f64 (*.f64 (/.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) ux) (pow.f64 (*.f64 2 (-.f64 1 maxCos)) 2)) (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 -1 maxCos) 3)) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (+.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 1 maxCos)) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))) 1/2) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))))","(+.f64 (*.f64 1/16 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) 3)) (pow.f64 ux 2)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (-.f64 1 maxCos) 5)))))) (+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (-.f64 1 maxCos) 3)))))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))))))))","(fma.f64 1/16 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos)) 3)) (*.f64 ux ux)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5))))) (fma.f64 -1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos)) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (-.f64 (neg.f64 (+.f64 maxCos -1)) maxCos)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))))","(fma.f64 1/16 (*.f64 (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (/.f64 (pow.f64 (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) 3) ux)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 5) (pow.f64 (-.f64 1 maxCos) 5))))) (fma.f64 -1/8 (*.f64 (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (pow.f64 (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) 2)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (fma.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))))))","(fma.f64 1/16 (*.f64 (/.f64 (pow.f64 (*.f64 2 (-.f64 1 maxCos)) 3) (/.f64 ux (/.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) ux))) (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 -1 maxCos) 5)) (pow.f64 (-.f64 1 maxCos) 5)))) (fma.f64 -1/8 (*.f64 (*.f64 (/.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) ux) (pow.f64 (*.f64 2 (-.f64 1 maxCos)) 2)) (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 -1 maxCos) 3)) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (+.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 1 maxCos)) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))) 1/2) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)))","(neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(*.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) (neg.f64 (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(*.f64 ux (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (neg.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1)))))","(fma.f64 -1 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 (+.f64 maxCos (neg.f64 (-.f64 1 maxCos))) -1) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(-.f64 (*.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (-.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))) (+.f64 maxCos (-.f64 maxCos 2))) (*.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) ux)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1)))) (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) 2)) ux)))))","(fma.f64 -1 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 (+.f64 maxCos (neg.f64 (-.f64 1 maxCos))) -1) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 ux (pow.f64 (+.f64 (+.f64 maxCos (neg.f64 (-.f64 1 maxCos))) -1) 2)))))))","(-.f64 (fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))) (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (pow.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) 2))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(+.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (-.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))) (+.f64 maxCos (-.f64 maxCos 2))) (*.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) ux))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 -1 maxCos) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (/.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) 1/8) (/.f64 ux (pow.f64 (+.f64 maxCos (-.f64 maxCos 2)) 2)))))","(+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) 3)) (pow.f64 ux 2)))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1)))) (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) 2)) ux))))))","(fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 (*.f64 ux ux) (pow.f64 (+.f64 (+.f64 maxCos (neg.f64 (-.f64 1 maxCos))) -1) 3)))) (fma.f64 -1 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 (+.f64 maxCos (neg.f64 (-.f64 1 maxCos))) -1) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 ux (pow.f64 (+.f64 (+.f64 maxCos (neg.f64 (-.f64 1 maxCos))) -1) 2))))))))","(fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (/.f64 (pow.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) 3) ux))) (-.f64 (fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))) (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (pow.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) 2))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))))","(fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 -1 maxCos) 5)) (pow.f64 (-.f64 1 maxCos) 5))) (*.f64 (/.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) ux) (/.f64 (pow.f64 (+.f64 maxCos (-.f64 maxCos 2)) 3) ux))) (+.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (-.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))) (+.f64 maxCos (-.f64 maxCos 2))) (*.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) ux))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 -1 maxCos) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (/.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) 1/8) (/.f64 ux (pow.f64 (+.f64 maxCos (-.f64 maxCos 2)) 2))))))","(*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1)))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))","(*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)))))))","(fma.f64 (sqrt.f64 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))) (*.f64 (*.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(fma.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)) (*.f64 1/2 (*.f64 (*.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))))))","(*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (+.f64 (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))) (*.f64 2 (*.f64 ux (*.f64 (+.f64 ux -1) maxCos))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (pow.f64 maxCos 2) (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))))) 2)))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 maxCos maxCos) (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))))) 2))))) (fma.f64 (sqrt.f64 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))) (*.f64 (*.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 (*.f64 maxCos maxCos) (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (*.f64 1/2 (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))) 2))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))) (fma.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)) (*.f64 1/2 (*.f64 (*.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))))))","(+.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))) (*.f64 (*.f64 1/2 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))) (+.f64 (*.f64 2 (*.f64 ux (*.f64 (+.f64 ux -1) maxCos))) (*.f64 (*.f64 maxCos maxCos) (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))) (*.f64 (*.f64 (+.f64 ux -1) (-.f64 ux (neg.f64 ux))) 1/2)) 2))))))","(+.f64 (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)))) 2)) (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 maxCos 3)))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))) 3))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (pow.f64 maxCos 2) (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))))) 2)))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)))))))))","(fma.f64 -1/4 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))))) 2)) (*.f64 (*.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 maxCos 3))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))) 3))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 maxCos maxCos) (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))))) 2))))) (fma.f64 (sqrt.f64 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))) (*.f64 (*.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(fma.f64 -1/4 (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (*.f64 1/2 (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))) 2)) (*.f64 (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 maxCos 3)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) 3)))))) (fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 (*.f64 maxCos maxCos) (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (*.f64 1/2 (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))) 2))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))) (fma.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)) (*.f64 1/2 (*.f64 (*.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))))))))","(fma.f64 -1/4 (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))) (*.f64 (*.f64 (+.f64 ux -1) (-.f64 ux (neg.f64 ux))) 1/2)) 2)) (*.f64 (*.f64 (*.f64 (+.f64 ux -1) (-.f64 ux (neg.f64 ux))) (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (pow.f64 maxCos 3))) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) 3))))) (+.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))) (*.f64 (*.f64 1/2 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))) (+.f64 (*.f64 2 (*.f64 ux (*.f64 (+.f64 ux -1) maxCos))) (*.f64 (*.f64 maxCos maxCos) (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))) (*.f64 (*.f64 (+.f64 ux -1) (-.f64 ux (neg.f64 ux))) 1/2)) 2)))))))","1","(+.f64 1 (*.f64 -2 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (*.f64 -2 (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2))))","(fma.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2))) 1)","(+.f64 1 (+.f64 (*.f64 -2 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))) (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))))","(+.f64 1 (fma.f64 -2 (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2)) (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))))","(+.f64 1 (fma.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2))) (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))))","(+.f64 1 (fma.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 2/3 (pow.f64 uy 4)))))","(+.f64 (*.f64 -4/45 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))) (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))))","(fma.f64 -4/45 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)) (+.f64 1 (fma.f64 -2 (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2)) (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))))","(+.f64 (fma.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2))) (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))) (fma.f64 -4/45 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)) 1))","(+.f64 (fma.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 2/3 (pow.f64 uy 4)))) (fma.f64 (*.f64 -4/45 (pow.f64 uy 6)) (pow.f64 (PI.f64) 6) 1))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))","(cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))"]],"stop":[["node limit",1]],"time":49.141845703125,"type":"simplify"},{"compiler":[[5328,3892]],"time":60.80419921875,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 3) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","fresh",12.110191347750183],["(cbrt.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 3/2)))","fresh",12.094991535193477],["(*.f64 (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","fresh",12.124434147106317],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (expm1.f64 (log1p.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))","fresh",12.107804021164826],["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","fresh",12.10005465188415],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","fresh",0.385614748607375],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) -1) (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) -1))))","fresh",12.11641269998649],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","next",0.34264599860737494]],"compiler":[[28,22],[29,23],[29,23],[27,21],[27,21],[28,21],[54,38],[40,33],[28,22],[29,23],[29,23],[27,21],[27,21],[28,21],[54,38],[40,33]],"count":[[146,8]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[144,8],"picked":[1,0]}],"min-error":[0.26232473913776133],"time":24.9599609375,"type":"prune"},{"compiler":[[211,163]],"locations":[["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))",0.0859375,true],["(cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))",0.12678200767235193,false],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))",0.24609375,true],["(*.f64 uy (*.f64 2 (PI.f64)))",0.27734375,false]],"time":46.69091796875,"type":"localize"},{"count":[[2,36]],"series":[["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))","ux","-inf",0.441162109375],["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))","ux","inf",0.4599609375],["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))","ux","0",0.510986328125],["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))","maxCos","-inf",0.45703125],["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))","maxCos","inf",0.453125],["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))","maxCos","0",0.546875],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","-inf",0.908935546875],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","inf",1.02197265625],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","0",1.1640625],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","-inf",1.666015625],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","inf",0.95703125],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","0",2.695068359375],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","-inf",0.406982421875],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","inf",1.259033203125],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","0",1.090087890625]],"time":14.4990234375,"type":"series"},{"count":[[2,42]],"egraph":[[1,557,52,0.010789291999999999],[0,25,90,0.000650917]],"inputs":[["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) 2) (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) 3) (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 3/2) (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) (cbrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) (cbrt.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 1/4) (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) 2) 1/2) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)) 3) (pow.f64 (*.f64 ux (+.f64 maxCos maxCos)) 3))) (sqrt.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 2) (*.f64 (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)) (*.f64 ux (+.f64 maxCos maxCos))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) (sqrt.f64 (*.f64 ux (+.f64 maxCos maxCos))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 ux (+.f64 maxCos maxCos))) (sqrt.f64 (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 1))))))"]],"rules":[["egg-rr",27],["egg-rr",15]],"stop":[["node limit",1]],"time":31.527099609375,"type":"rewrite"},{"count":[[78,100]],"egraph":[[3,7801,2462,0.031046666],[2,2185,2462,0.015209499999999999],[1,577,2862,0.004147458],[0,178,3298,0.000877542]],"inputs":[["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 -4/45 (*.f64 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))","(+.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))))","(*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux)))))","(+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))))))","(*.f64 -1 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))) (*.f64 -1 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))) (+.f64 (*.f64 1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))))) (*.f64 -1 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))) (+.f64 (*.f64 1/16 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))))) (+.f64 (*.f64 1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))))) (*.f64 -1 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))))))","(sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))) (*.f64 1/2 (*.f64 (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 1/2 (*.f64 (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux)","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3) (pow.f64 ux 2)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux)) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3) (pow.f64 ux 2)))))))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))","(sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1)))))","(sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)))))","(sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))","(+.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 -2 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2)))))","(*.f64 (+.f64 (*.f64 (*.f64 -2 (*.f64 uy uy)) (pow.f64 (PI.f64) 2)) 1) (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1))))))","(*.f64 (+.f64 1 (*.f64 (*.f64 -2 (*.f64 uy uy)) (pow.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux)))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))))","(+.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (fma.f64 2/3 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))) (*.f64 -2 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2))))))","(+.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1))))) (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1))))) (+.f64 (*.f64 (*.f64 -2 (*.f64 uy uy)) (pow.f64 (PI.f64) 2)) (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux)))) (+.f64 (*.f64 (*.f64 -2 (*.f64 uy uy)) (pow.f64 (PI.f64) 2)) (+.f64 1 (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 -4/45 (*.f64 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","(+.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (fma.f64 2/3 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))) (fma.f64 -4/45 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6))) (*.f64 -2 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2)))))))","(+.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1))))) (+.f64 (*.f64 (*.f64 -2 (*.f64 uy uy)) (pow.f64 (PI.f64) 2)) (*.f64 -4/45 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6))))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))) 1) (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)))))))","(+.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux)))) (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux)))) (+.f64 (*.f64 (*.f64 -2 (*.f64 uy uy)) (pow.f64 (PI.f64) 2)) (+.f64 (*.f64 (*.f64 -4/45 (pow.f64 uy 6)) (pow.f64 (PI.f64) 6)) (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux)))) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux)))) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux)))) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux)))) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux)))) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux)))) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux)))) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))) (*.f64 ux (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1))))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (neg.f64 ux)))) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 ux 2) (*.f64 ux ux))))","(*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))","(+.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(fma.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2))) (*.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))))))))","(fma.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 ux 2) (*.f64 ux ux))) (*.f64 1/2 (*.f64 (*.f64 maxCos (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux))))))))","(*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (fma.f64 1/2 (*.f64 maxCos (*.f64 (*.f64 ux (+.f64 -2 (*.f64 ux 2))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))) (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))))) 2)) (*.f64 maxCos maxCos)))) (fma.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2))) (*.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2))))))))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))))) 2)) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))) (*.f64 maxCos maxCos)))) (fma.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 ux 2) (*.f64 ux ux))) (*.f64 1/2 (*.f64 (*.f64 maxCos (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))))))))","(+.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 1/2 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 maxCos (+.f64 (*.f64 maxCos (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 ux 2))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 2))) (*.f64 ux (+.f64 -2 (*.f64 ux 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))) (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))))) 2)) (*.f64 maxCos maxCos)))) (fma.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2))) (fma.f64 -1/4 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))))) 2)) (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (pow.f64 maxCos 3)))) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)) 3)))) (*.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))))))))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))))) 2)) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))) (*.f64 maxCos maxCos)))) (fma.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 ux 2) (*.f64 ux ux))) (fma.f64 (*.f64 (*.f64 -1/4 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))))) 2)) (pow.f64 maxCos 3)))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 ux 2) (*.f64 ux ux)) 3))) (*.f64 1/2 (*.f64 (*.f64 maxCos (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux))))))))))","(+.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (+.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 ux 2))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 2)) (*.f64 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 ux 2))) (*.f64 (pow.f64 maxCos 3) (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 ux (-.f64 2 ux)) 3))))) -1/4)))) (*.f64 (*.f64 1/2 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 maxCos (+.f64 (*.f64 maxCos (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 ux 2))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 2))) (*.f64 ux (+.f64 -2 (*.f64 ux 2))))))))","(*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))))","(*.f64 ux (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(*.f64 ux (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))))","(fma.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) (*.f64 -1/2 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1)))))))","(*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) -1/2))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3))))) (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 ux (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2))))))","(fma.f64 -1/2 (*.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (fma.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (pow.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) 2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) -1/2)))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))))))","(+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))))))","(fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 (*.f64 ux ux) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3)))) (fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3))))) (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 ux (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)))))))","(fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) 3) ux))) (fma.f64 -1/2 (*.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (fma.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (pow.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) 2)))))))","(fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (*.f64 ux ux)) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3))) (+.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) -1/2)))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))))))","(*.f64 -1 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))","(neg.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux)))","(*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (neg.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))) (*.f64 -1 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (neg.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))))))","(fma.f64 1/2 (*.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux))))","(*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (-.f64 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (*.f64 1/2 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))) (+.f64 (*.f64 1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))))) (*.f64 -1 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 ux (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)))) (neg.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))))))","(fma.f64 1/2 (*.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (-.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (pow.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) 2)) 1/8)) (*.f64 ux (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(+.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (-.f64 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (*.f64 1/2 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))) 1/8)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))) (+.f64 (*.f64 1/16 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))))) (+.f64 (*.f64 1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))))) (*.f64 -1 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 (*.f64 ux ux) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3)))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 ux (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)))) (neg.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))))))))","(fma.f64 1/2 (*.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (-.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) 3) ux))) 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (pow.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) 2)) 1/8))) (*.f64 ux (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(+.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (-.f64 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (*.f64 1/2 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))) (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy))) (*.f64 ux ux)) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3))) 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux) (cos.f64 (*.f64 (PI.f64) (*.f64 2 uy)))) 1/8))))","(sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))","(sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))","(sqrt.f64 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))","(sqrt.f64 (*.f64 ux (-.f64 2 ux)))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))) (*.f64 1/2 (*.f64 (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(+.f64 (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2))) (*.f64 (*.f64 1/2 (*.f64 maxCos (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2))))))","(fma.f64 (*.f64 1/2 (*.f64 maxCos (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))) (sqrt.f64 (-.f64 (*.f64 ux 2) (*.f64 ux ux))))","(fma.f64 1/2 (*.f64 maxCos (*.f64 (*.f64 ux (+.f64 -2 (*.f64 ux 2))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 1/2 (*.f64 (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))))","(+.f64 (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2))) (*.f64 1/2 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))) (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))))) 2)) (*.f64 maxCos maxCos))) (*.f64 maxCos (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))) (+.f64 (*.f64 maxCos (*.f64 maxCos (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))))) 2)))) (*.f64 maxCos (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))))) (sqrt.f64 (-.f64 (*.f64 ux 2) (*.f64 ux ux))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 maxCos (+.f64 (*.f64 maxCos (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 ux 2))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 2))) (*.f64 ux (+.f64 -2 (*.f64 ux 2)))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))))))","(+.f64 (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))) (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))))) 2)) (*.f64 maxCos maxCos))) (fma.f64 1/2 (*.f64 maxCos (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))))) (*.f64 -1/4 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)))))) 2)) (*.f64 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (pow.f64 maxCos 3)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 ux 2)) 3)))))))))","(+.f64 (sqrt.f64 (-.f64 (*.f64 ux 2) (*.f64 ux ux))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))) (+.f64 (*.f64 maxCos (*.f64 maxCos (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))))) 2)))) (*.f64 maxCos (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 ux 2) (*.f64 ux ux)))))) 2)) (*.f64 (*.f64 (pow.f64 maxCos 3) (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 ux 2) (*.f64 ux ux)) 3))))) -1/4))))","(+.f64 (fma.f64 1/2 (*.f64 maxCos (*.f64 (*.f64 ux (+.f64 -2 (*.f64 ux 2))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 ux 2))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 2)) (+.f64 (*.f64 (*.f64 maxCos (*.f64 maxCos (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 1/2) (*.f64 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 ux 2))) (*.f64 (pow.f64 maxCos 3) (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 ux (-.f64 2 ux)) 3))))) -1/4))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux)","(*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))","(*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) ux (*.f64 -1/2 (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))))))","(fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) (*.f64 -1/2 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))))","(fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) -1/2)))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2) ux)) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) ux (*.f64 -1/2 (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) 2) ux)) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) (*.f64 -1/2 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1)))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux)) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) -1/2))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3) (pow.f64 ux 2)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2) ux)) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) ux (fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3) (*.f64 ux ux))) (*.f64 -1/2 (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) 2) ux)) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (fma.f64 -1/2 (*.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1)))) (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) 3) (*.f64 ux ux)))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux)) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (fma.f64 -1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3) (*.f64 ux ux)) -1/16)))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux))","(neg.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))))","(*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux))","(*.f64 ux (neg.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux)))","(fma.f64 1/2 (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))) (neg.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))))","(-.f64 (*.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) (*.f64 1/2 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(-.f64 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (*.f64 1/2 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux))))","(fma.f64 1/2 (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2) ux)) (neg.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))))))","(-.f64 (fma.f64 1/2 (*.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1)))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) 2) ux) 1/8))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(-.f64 (fma.f64 1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux) 1/8))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux)) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3) (pow.f64 ux 2)))))))","(fma.f64 1/2 (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2) ux)) (fma.f64 -1 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3) (*.f64 ux ux)))))))","(fma.f64 1/2 (*.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1)))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) 2) ux)) (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) 1/16) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 (+.f64 maxCos -1) -1)) 3) (*.f64 ux ux)) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux)))))","(fma.f64 1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 (/.f64 1 (-.f64 1 maxCos)) (+.f64 maxCos -1))))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux)) (-.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3) (*.f64 ux ux)) 1/16)) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))"]],"stop":[["node limit",1]],"time":69.554931640625,"type":"simplify"},{"compiler":[[6784,5006]],"time":70.77587890625,"type":"eval"},{"alts":[["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","next",0.3702647069194508],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","fresh",0.385614748607375],["(*.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sin.f64 1))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5604672477420618],["(*.f64 (expm1.f64 (log1p.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5227223098321833],["(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) uy)) (cos.f64 (*.f64 (PI.f64) uy))) (*.f64 (sin.f64 (*.f64 (PI.f64) uy)) (sin.f64 (*.f64 (PI.f64) uy)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5563173353308286],["(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 -4/45 (*.f64 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","fresh",8.310832989195267],["(*.f64 (pow.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) 1/3) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",3.0660723337378384],["(*.f64 (pow.f64 (sqrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",3.245659379327838],["(*.f64 (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5084695689805648],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) -1) (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) -1))))","fresh",12.11641269998649],["(*.f64 (-.f64 (exp.f64 (log1p.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) 1) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5636563246201021],["(*.f64 (*.f64 (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.6425397853658155]],"compiler":[[42,35],[28,21],[57,48],[42,35],[53,35],[156,127],[44,37],[43,36],[44,37],[54,38],[44,37],[51,42],[42,35],[28,21],[57,48],[42,35],[53,35],[156,127],[44,37],[43,36],[44,37],[54,38],[44,37],[51,42]],"count":[[154,12]],"kept":[{"done":[0,0],"fresh":[7,2],"new":[146,10],"picked":[1,0]}],"min-error":[0.08278600516679323],"time":35.68798828125,"type":"prune"},{"compiler":[[226,170]],"locations":[["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))",0.24609375,true],["(exp.f64 (PI.f64))",1.0,true],["(pow.f64 (exp.f64 (PI.f64)) 2)",1.0,true],["(log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))",11.250549340396244,true]],"time":61.1669921875,"type":"localize"},{"count":[[4,36]],"series":[["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","-inf",0.703857421875],["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","inf",0.769775390625],["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","0",0.8837890625],["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","-inf",0.739990234375],["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","inf",0.713134765625],["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","0",1.031005859375],["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","-inf",0.742919921875],["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","inf",0.77685546875],["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","0",1.220947265625],["(log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))","uy","-inf",9.843017578125],["(log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))","uy","inf",19.4599609375],["(log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))","uy","0",1.206787109375]],"time":38.510986328125,"type":"series"},{"count":[[4,82]],"egraph":[[1,597,51,0.011723292],[0,27,78,0.000686958]],"inputs":[["(log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))","(pow.f64 (exp.f64 (PI.f64)) 2)","(exp.f64 (PI.f64))","(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 uy (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 4) uy))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (PI.f64)) (*.f64 2 uy)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (PI.f64)) (*.f64 2 uy)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (PI.f64)) (*.f64 2 uy)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 uy (*.f64 (PI.f64) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 uy (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 2) uy)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 uy) 2) (*.f64 (cbrt.f64 uy) (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (pow.f64 (cbrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 2) (cbrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 uy) (*.f64 (sqrt.f64 uy) (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 uy) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) 2) 1) uy)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (cbrt.f64 uy) 2)) (cbrt.f64 uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) 2) (sqrt.f64 uy)) (sqrt.f64 uy))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 (PI.f64)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (PI.f64)) (exp.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (PI.f64)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (exp.f64 (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 (PI.f64))) 2) (cbrt.f64 (pow.f64 (exp.f64 (PI.f64)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 (PI.f64))) 2) (*.f64 (cbrt.f64 (exp.f64 (PI.f64))) (exp.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 (PI.f64)) 4)) (pow.f64 (cbrt.f64 (exp.f64 (PI.f64))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (PI.f64))) (*.f64 (sqrt.f64 (exp.f64 (PI.f64))) (exp.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (PI.f64)) (sqrt.f64 (exp.f64 (PI.f64)))) (sqrt.f64 (exp.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (PI.f64)) (pow.f64 (cbrt.f64 (exp.f64 (PI.f64))) 2)) (cbrt.f64 (exp.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 (PI.f64)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (exp.f64 (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (PI.f64) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (PI.f64) 2) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (exp.f64 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (PI.f64))) (pow.f64 (cbrt.f64 (exp.f64 (PI.f64))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 (PI.f64))) 2) (cbrt.f64 (exp.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (PI.f64))) (sqrt.f64 (exp.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (exp.f64 (PI.f64)) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (exp.f64 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (PI.f64)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 (PI.f64))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (PI.f64))) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (exp.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (exp.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (PI.f64))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 2) (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 3) (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 3/2) (pow.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 1))))))"]],"rules":[["egg-rr",15],["egg-rr",22],["egg-rr",18],["egg-rr",27]],"stop":[["node limit",1]],"time":36.628173828125,"type":"rewrite"},{"count":[[118,122]],"egraph":[[2,2561,1746,0.016496875],[1,605,2091,0.004497291],[0,182,2770,0.000919875]],"inputs":[["(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(+.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2))) (*.f64 1/2 (*.f64 (pow.f64 uy 2) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 uy 3) (+.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3) (+.f64 (*.f64 -3 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3)) (*.f64 2 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3)))))) (+.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2))) (*.f64 1/2 (*.f64 (pow.f64 uy 2) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2))))))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 uy 4) (+.f64 (*.f64 -4 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 4)) (+.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 4) (+.f64 (*.f64 12 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 4)) (+.f64 (*.f64 -6 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 4)) (*.f64 -3 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 4)))))))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 uy 3) (+.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3) (+.f64 (*.f64 -3 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3)) (*.f64 2 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3)))))) (+.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2))) (*.f64 1/2 (*.f64 (pow.f64 uy 2) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)))))))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (*.f64 -1/2 (*.f64 (*.f64 (pow.f64 uy 3) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (pow.f64 uy 3) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 (*.f64 (pow.f64 uy 4) (+.f64 (*.f64 -1/6 (*.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) (+.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3) (+.f64 (*.f64 -3 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3)) (*.f64 2 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3)))))) (+.f64 (*.f64 1/24 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 4)) (*.f64 -1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) 2))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))","(+.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))))","(*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))","(+.f64 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)))) (+.f64 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))","(*.f64 -1 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))) (*.f64 1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3))))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))) (+.f64 (*.f64 1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))))) (*.f64 1/16 (*.f64 (/.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))","(*.f64 uy (*.f64 2 (PI.f64)))","(+.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2))) (*.f64 1/2 (*.f64 (pow.f64 uy 2) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)))))","(fma.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) (*.f64 1/2 (*.f64 (*.f64 uy uy) (*.f64 0 (pow.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) 2)))))","(fma.f64 uy (*.f64 2 (PI.f64)) (*.f64 (*.f64 0 uy) uy))","(fma.f64 uy (*.f64 2 (PI.f64)) 0)","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 uy 3) (+.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3) (+.f64 (*.f64 -3 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3)) (*.f64 2 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3)))))) (+.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2))) (*.f64 1/2 (*.f64 (pow.f64 uy 2) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2))))))","(fma.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) (*.f64 1/2 (*.f64 (*.f64 uy uy) (*.f64 0 (pow.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) 2)))))","(fma.f64 uy (*.f64 2 (PI.f64)) (*.f64 (*.f64 0 uy) uy))","(fma.f64 uy (*.f64 2 (PI.f64)) 0)","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 uy 4) (+.f64 (*.f64 -4 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 4)) (+.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 4) (+.f64 (*.f64 12 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 4)) (+.f64 (*.f64 -6 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 4)) (*.f64 -3 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 4)))))))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 uy 3) (+.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3) (+.f64 (*.f64 -3 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3)) (*.f64 2 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3)))))) (+.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2))) (*.f64 1/2 (*.f64 (pow.f64 uy 2) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)))))))","(fma.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) (*.f64 1/2 (*.f64 (*.f64 uy uy) (*.f64 0 (pow.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) 2)))))","(fma.f64 uy (*.f64 2 (PI.f64)) (*.f64 (*.f64 0 uy) uy))","(fma.f64 uy (*.f64 2 (PI.f64)) 0)","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))","(*.f64 uy (*.f64 2 (PI.f64)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))","(*.f64 uy (*.f64 2 (PI.f64)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))","(*.f64 uy (*.f64 2 (PI.f64)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))","(*.f64 uy (*.f64 2 (PI.f64)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))","(*.f64 uy (*.f64 2 (PI.f64)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))","(*.f64 uy (*.f64 2 (PI.f64)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))","(*.f64 uy (*.f64 2 (PI.f64)))","(*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))","(*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))","(*.f64 uy (*.f64 2 (PI.f64)))","(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))","(sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1)))))","(sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))))))","(sqrt.f64 (fma.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 -1 maxCos)))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(fma.f64 -1/2 (*.f64 (*.f64 uy uy) (*.f64 (pow.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) 2) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))))","(*.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 uy uy) (pow.f64 (*.f64 2 (PI.f64)) 2))) 1) (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))))))","(*.f64 (+.f64 (*.f64 (*.f64 -1/2 (*.f64 uy uy)) (pow.f64 (*.f64 2 (PI.f64)) 2)) 1) (sqrt.f64 (fma.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 -1 maxCos))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (*.f64 -1/2 (*.f64 (*.f64 (pow.f64 uy 3) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))))","(fma.f64 -1/2 (*.f64 (*.f64 uy uy) (*.f64 (pow.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) 2) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))))) (+.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 -1/2 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) (*.f64 0 (pow.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))))))))","(fma.f64 (*.f64 -1/2 (*.f64 (*.f64 uy uy) (pow.f64 (*.f64 2 (PI.f64)) 2))) (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))))) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 uy 3) (*.f64 0 (PI.f64))) -1/2) 1) (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 -1 maxCos))))) (+.f64 (*.f64 (*.f64 -1/2 (*.f64 uy uy)) (pow.f64 (*.f64 2 (PI.f64)) 2)) 1))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (pow.f64 uy 3) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 (*.f64 (pow.f64 uy 4) (+.f64 (*.f64 -1/6 (*.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) (+.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3) (+.f64 (*.f64 -3 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3)) (*.f64 2 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 3)))))) (+.f64 (*.f64 1/24 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 4)) (*.f64 -1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)) 2)) 2))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))))","(+.f64 (fma.f64 -1/2 (*.f64 (*.f64 uy uy) (*.f64 (pow.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) 2) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1)))))) (fma.f64 -1/2 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) (*.f64 0 (pow.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))))) (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 4) (fma.f64 -1/6 (*.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) (+.f64 (pow.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) 3) (*.f64 (pow.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) 3) -1))) (fma.f64 1/24 (pow.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) 4) (*.f64 -1/8 (pow.f64 (*.f64 0 (pow.f64 (*.f64 2 (log.f64 (exp.f64 (PI.f64)))) 2)) 2))))))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 uy uy) (pow.f64 (*.f64 2 (PI.f64)) 2))) 1) (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))))))) (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))))) (+.f64 (*.f64 (*.f64 (pow.f64 uy 3) (*.f64 0 (PI.f64))) -1/2) (*.f64 (pow.f64 uy 4) (fma.f64 1/24 (pow.f64 (*.f64 2 (PI.f64)) 4) 0)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 -1 maxCos))))) (+.f64 (+.f64 (*.f64 (*.f64 -1/2 (*.f64 uy uy)) (pow.f64 (*.f64 2 (PI.f64)) 2)) 1) (*.f64 (pow.f64 uy 4) (*.f64 1/24 (pow.f64 (*.f64 2 (PI.f64)) 4)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 -1 maxCos))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 -1 maxCos))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 -1 maxCos))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 -1 maxCos))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 -1 maxCos))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 -1 maxCos))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 -1 maxCos))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (cos.f64 (*.f64 uy (log.f64 (pow.f64 (exp.f64 (PI.f64)) 2)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 -1 maxCos) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 -1 maxCos))))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))","(+.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(fma.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))) (*.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 (*.f64 maxCos (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))))))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 (*.f64 maxCos (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 (*.f64 maxCos (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 1/2)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 maxCos maxCos)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (fma.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))) (*.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 (*.f64 maxCos (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) 2)) (*.f64 maxCos maxCos)))) (fma.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 (*.f64 maxCos (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux))))))","(+.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))) (+.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 2)) (*.f64 maxCos maxCos))) (*.f64 maxCos (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 maxCos maxCos)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (fma.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))) (fma.f64 -1/4 (*.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (pow.f64 maxCos 3)))) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)) 3)))) (*.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 (*.f64 maxCos (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))))))))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) 2)) (*.f64 maxCos maxCos)))) (fma.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux))) (fma.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 (*.f64 maxCos (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) 2)) (*.f64 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (pow.f64 maxCos 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux)) 3))))) -1/4)))))","(+.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 2)) (*.f64 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (pow.f64 maxCos 3)) (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 ux (-.f64 2 ux)) 3))))) -1/4))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))) (+.f64 (*.f64 maxCos (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 2)) (*.f64 maxCos maxCos))))))","(*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))","(+.f64 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))","(fma.f64 (*.f64 ux (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64))))))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 maxCos -1)) (+.f64 1 (neg.f64 maxCos))))))))","(fma.f64 -1/2 (*.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 -1 maxCos)) (-.f64 1 maxCos))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))) (*.f64 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 -1 maxCos)) (-.f64 1 maxCos)))) -1/2)))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)) ux)) (fma.f64 (*.f64 ux (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64))))))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 maxCos -1)) (+.f64 1 (neg.f64 maxCos)))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) ux) (pow.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) 2))) (fma.f64 -1/2 (*.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 -1 maxCos)) (-.f64 1 maxCos))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) ux) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))) (*.f64 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 -1 maxCos)) (-.f64 1 maxCos)))) -1/2))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)))) (+.f64 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)) ux)) (fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (/.f64 (*.f64 ux ux) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3)))) (fma.f64 (*.f64 ux (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64))))))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 maxCos -1)) (+.f64 1 (neg.f64 maxCos))))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) ux) (pow.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) 2))) (fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) ux) (/.f64 (pow.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) 3) ux))) (fma.f64 -1/2 (*.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 -1 maxCos)) (-.f64 1 maxCos))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) ux) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2))) (fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) ux) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3) ux))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))) (*.f64 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 -1 maxCos)) (-.f64 1 maxCos)))) -1/2)))))","(*.f64 -1 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))","(neg.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (neg.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) (neg.f64 ux)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))))","(fma.f64 -1 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))) (*.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 maxCos -1)) (+.f64 1 (neg.f64 maxCos))))))))","(-.f64 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (+.f64 -1 maxCos)) (-.f64 1 maxCos))) (*.f64 (*.f64 1/2 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (-.f64 (*.f64 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 -1 maxCos)) (-.f64 1 maxCos)))) 1/2) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))) (*.f64 1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3))))))))","(fma.f64 -1 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))) (fma.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 maxCos -1)) (+.f64 1 (neg.f64 maxCos)))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)) ux)) 1/8)))","(-.f64 (fma.f64 (/.f64 (*.f64 1/8 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) (/.f64 ux (pow.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) 2))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (+.f64 -1 maxCos)) (-.f64 1 maxCos))) (*.f64 (*.f64 1/2 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos)))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(+.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (-.f64 (*.f64 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 -1 maxCos)) (-.f64 1 maxCos)))) 1/2) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 1/8 (/.f64 ux (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) ux) (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))))) (+.f64 (*.f64 1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))))) (*.f64 1/16 (*.f64 (/.f64 (*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))))))))","(fma.f64 -1 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))) (fma.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 maxCos -1)) (+.f64 1 (neg.f64 maxCos)))))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)) ux)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (log.f64 (exp.f64 (PI.f64)))))) (/.f64 (*.f64 ux ux) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3)))) 1/16))))","(-.f64 (fma.f64 1/2 (*.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 -1 maxCos)) (-.f64 1 maxCos))))) (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) ux) (pow.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) 2))) 1/8 (*.f64 (*.f64 (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) ux) (/.f64 (pow.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) 3) ux)) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 5) (pow.f64 (-.f64 1 maxCos) 5)))) 1/16)))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(+.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (-.f64 (*.f64 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (sqrt.f64 (/.f64 (/.f64 1 (+.f64 -1 maxCos)) (-.f64 1 maxCos)))) 1/2) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))) (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) ux) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2))) 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (*.f64 1/16 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) (*.f64 ux ux)) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3)))))"]],"stop":[["node limit",1]],"time":45.8818359375,"type":"simplify"},{"compiler":[[6036,4575]],"time":69.7900390625,"type":"eval"},{"alts":[["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","done",0.3702647069194508],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","next",0.385614748607375],["(*.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sin.f64 1))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5604672477420618],["(*.f64 (expm1.f64 (log1p.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5227223098321833],["(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) uy)) (cos.f64 (*.f64 (PI.f64) uy))) (*.f64 (sin.f64 (*.f64 (PI.f64) uy)) (sin.f64 (*.f64 (PI.f64) uy)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5563173353308286],["(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 -4/45 (*.f64 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","fresh",8.310832989195267],["(*.f64 (pow.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) 1/3) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",3.0660723337378384],["(*.f64 (pow.f64 (sqrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",3.245659379327838],["(*.f64 (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5084695689805648],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) -1) (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) -1))))","fresh",12.11641269998649],["(*.f64 (-.f64 (exp.f64 (log1p.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) 1) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5636563246201021],["(*.f64 (*.f64 (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.6425397853658155],["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)) (cbrt.f64 (PI.f64))) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.594140854442338]],"compiler":[[42,35],[28,21],[57,48],[42,35],[53,35],[156,127],[44,37],[43,36],[44,37],[54,38],[44,37],[51,42],[48,39],[28,21],[57,48],[42,35],[53,35],[156,127],[44,37],[43,36],[44,37],[54,38],[44,37],[51,42],[48,39]],"count":[[134,13]],"kept":[{"done":[0,0],"fresh":[11,11],"new":[122,1],"picked":[1,1]}],"min-error":[0.07887975516679323],"time":39.572998046875,"type":"prune"},{"compiler":[[129,86]],"locations":[["(cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))",0.12678200767235193,false],["(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))",0.18359375,true],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))",0.24609375,true],["(*.f64 uy (*.f64 2 (PI.f64)))",0.27734375,false]],"time":30.129150390625,"type":"localize"},{"count":[[2,44]],"series":[["(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","maxCos","-inf",0.30810546875],["(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","maxCos","inf",0.27490234375],["(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","maxCos","0",0.319091796875],["(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","ux","-inf",0.58203125],["(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","ux","inf",0.4130859375],["(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))","ux","0",0.447021484375],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","maxCos","-inf",0.845947265625],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","maxCos","inf",0.836181640625],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","maxCos","0",1.0859375],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","ux","-inf",2.69189453125],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","ux","inf",0.93017578125],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","ux","0",1.133056640625],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","uy","-inf",0.39501953125],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","uy","inf",0.905029296875],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","uy","0",0.97314453125]],"time":12.496826171875,"type":"series"},{"count":[[2,37]],"egraph":[[2,6470,60,0.042691124999999996],[1,464,64,0.009019625],[0,21,64,0.000571]],"inputs":[["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))) (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) (pow.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))) 3/2) (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) ux) (*.f64 (neg.f64 (fma.f64 2 maxCos -2)) ux))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 ux (*.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))) (*.f64 ux (neg.f64 (fma.f64 2 maxCos -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (*.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) 3) (pow.f64 (fma.f64 2 maxCos -2) 3)) ux) (+.f64 (pow.f64 (*.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) 2) (*.f64 (fma.f64 2 maxCos -2) (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (fma.f64 2 maxCos -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (*.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) 2) (pow.f64 (fma.f64 2 maxCos -2) 2)) ux) (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (fma.f64 2 maxCos -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 ux (-.f64 (pow.f64 (*.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) 3) (pow.f64 (fma.f64 2 maxCos -2) 3))) (+.f64 (pow.f64 (*.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) 2) (*.f64 (fma.f64 2 maxCos -2) (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (fma.f64 2 maxCos -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 ux (-.f64 (pow.f64 (*.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) 2) (pow.f64 (fma.f64 2 maxCos -2) 2))) (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (fma.f64 2 maxCos -2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))) ux))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 ux 3) (pow.f64 (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))) 3) (pow.f64 ux 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))) 1))))))"]],"rules":[["egg-rr",22],["egg-rr",15]],"stop":[["node limit",1]],"time":64.755126953125,"type":"rewrite"},{"count":[[81,85]],"egraph":[[3,5611,1659,0.024374333],[2,1430,1663,0.011098750000000001],[1,428,1964,0.002982292],[0,147,2041,0.000693417]],"inputs":[["(sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux))","(+.f64 (*.f64 -2 (*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)))) (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)))","(+.f64 (*.f64 -2 (*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)))) (+.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 2/3 (*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))))","(+.f64 (*.f64 -4/45 (*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)))) (+.f64 (*.f64 -2 (*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)))) (+.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 2/3 (*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 2 (*.f64 2 maxCos))) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))))))","(+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 2 (*.f64 2 maxCos)) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (-.f64 1 maxCos) 3)))))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 2 (*.f64 2 maxCos))) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos))))))))","(+.f64 (*.f64 1/16 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 2 (*.f64 2 maxCos)) 3)) (pow.f64 ux 2)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (-.f64 1 maxCos) 5)))))) (+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 2 (*.f64 2 maxCos)) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (-.f64 1 maxCos) 3)))))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 2 (*.f64 2 maxCos))) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (-.f64 (*.f64 2 ux) 2))) (sqrt.f64 (/.f64 ux (+.f64 (*.f64 -1 ux) 2))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (pow.f64 maxCos 2) (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 ux (+.f64 (*.f64 -1 ux) 2))) (-.f64 (*.f64 2 ux) 2))) 2)))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (-.f64 (*.f64 2 ux) 2))) (sqrt.f64 (/.f64 ux (+.f64 (*.f64 -1 ux) 2))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (pow.f64 maxCos 2) (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 ux (+.f64 (*.f64 -1 ux) 2))) (-.f64 (*.f64 2 ux) 2))) 2)))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux))))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (pow.f64 maxCos 3) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 ux (+.f64 (*.f64 -1 ux) 2))) (-.f64 (*.f64 2 ux) 2))) 2)) (-.f64 (*.f64 2 ux) 2)))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 ux) 2) 3) ux))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (-.f64 (*.f64 2 ux) 2))) (sqrt.f64 (/.f64 ux (+.f64 (*.f64 -1 ux) 2))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux))))))","(*.f64 (-.f64 2 (*.f64 2 maxCos)) ux)","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2))))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2))))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2))))","(*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))))","(*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2))))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2))))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2))))","(*.f64 (+.f64 (*.f64 -1 ux) 2) ux)","(+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) 2) ux)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (+.f64 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) 2) ux)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (+.f64 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) 2) ux)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(+.f64 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) 2) ux)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (+.f64 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) 2) ux)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (+.f64 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) 2) ux)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(+.f64 (*.f64 -1 (*.f64 maxCos (*.f64 (+.f64 2 (*.f64 -2 ux)) ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (*.f64 -1 (*.f64 maxCos (*.f64 (+.f64 2 (*.f64 -2 ux)) ux))) (+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))","(+.f64 (*.f64 -1 (*.f64 maxCos (*.f64 (+.f64 2 (*.f64 -2 ux)) ux))) (+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux))","(sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos))))","(sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2))))","(sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2))))","(+.f64 (*.f64 -2 (*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)))) (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)))","(fma.f64 -2 (*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))))","(fma.f64 -2 (*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))))","(*.f64 (+.f64 (*.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2)))) 1) (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))))","(+.f64 (*.f64 -2 (*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)))) (+.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 2/3 (*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))))","(+.f64 (fma.f64 -2 (*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos))))) (*.f64 2/3 (*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))))","(fma.f64 -2 (*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2))) (fma.f64 2/3 (*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))) (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2))))))","(+.f64 (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))) (*.f64 (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))) (+.f64 (*.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2)))) (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))))","(+.f64 (*.f64 -4/45 (*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)))) (+.f64 (*.f64 -2 (*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)))) (+.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 2/3 (*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))))))","(fma.f64 -4/45 (*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6))) (+.f64 (fma.f64 -2 (*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos))))) (*.f64 2/3 (*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))))","(fma.f64 -4/45 (*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6))) (fma.f64 -2 (*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (*.f64 (*.f64 uy uy) (pow.f64 (PI.f64) 2))) (fma.f64 2/3 (*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))) (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))))))","(+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 uy (*.f64 uy (pow.f64 (PI.f64) 2)))) 1) (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2))))) (*.f64 (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))) (*.f64 -4/45 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6))))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 2 maxCos)) ux)) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (+.f64 2 (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux))) (*.f64 -2 maxCos)))) (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (+.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) ux) 2) (*.f64 maxCos -2)))) (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))) (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux))","(*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(*.f64 ux (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1)))))","(*.f64 ux (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1)))))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 2 (*.f64 2 maxCos))) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))))))","(fma.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 2 (*.f64 2 maxCos))) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1)))))))","(fma.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1))) (*.f64 ux (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (+.f64 2 (*.f64 maxCos -2))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1)))) 1/2)))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1)))) (*.f64 1/2 (*.f64 (fma.f64 maxCos -2 2) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1))))))))","(+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 2 (*.f64 2 maxCos)) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (-.f64 1 maxCos) 3)))))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 2 (*.f64 2 maxCos))) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos))))))))","(fma.f64 -1/8 (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 ux (pow.f64 (-.f64 2 (*.f64 2 maxCos)) 2))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (fma.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 2 (*.f64 2 maxCos))) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1))))))))","(fma.f64 -1/8 (*.f64 (*.f64 (/.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) ux) (pow.f64 (+.f64 2 (*.f64 maxCos -2)) 2)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (fma.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1))) (*.f64 ux (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (+.f64 2 (*.f64 maxCos -2))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1)))) 1/2))))","(fma.f64 -1/8 (*.f64 (*.f64 (pow.f64 (fma.f64 maxCos -2 2) 2) (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) ux)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1)))) (*.f64 1/2 (*.f64 (fma.f64 maxCos -2 2) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1)))))))))","(+.f64 (*.f64 1/16 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 2 (*.f64 2 maxCos)) 3)) (pow.f64 ux 2)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (-.f64 1 maxCos) 5)))))) (+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 2 (*.f64 2 maxCos)) 2)) ux) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (-.f64 1 maxCos) 3)))))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux)) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 2 (*.f64 2 maxCos))) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))))))))","(fma.f64 1/16 (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 (*.f64 ux ux) (pow.f64 (-.f64 2 (*.f64 2 maxCos)) 3))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5))))) (fma.f64 -1/8 (*.f64 (/.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 ux (pow.f64 (-.f64 2 (*.f64 2 maxCos)) 2))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (fma.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1))) (*.f64 ux (cos.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 2 (*.f64 2 maxCos))) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1)))))))))","(fma.f64 1/16 (*.f64 (/.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (/.f64 (*.f64 ux ux) (pow.f64 (+.f64 2 (*.f64 maxCos -2)) 3))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5))))) (fma.f64 -1/8 (*.f64 (*.f64 (/.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) ux) (pow.f64 (+.f64 2 (*.f64 maxCos -2)) 2)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (fma.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1))) (*.f64 ux (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (+.f64 2 (*.f64 maxCos -2))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1)))) 1/2)))))","(fma.f64 -1/8 (*.f64 (*.f64 (pow.f64 (fma.f64 maxCos -2 2) 2) (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) ux)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (fma.f64 1/16 (*.f64 (*.f64 (pow.f64 (fma.f64 maxCos -2 2) 3) (/.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1)))) (*.f64 1/2 (*.f64 (fma.f64 maxCos -2 2) (sqrt.f64 (/.f64 1 (*.f64 (-.f64 1 maxCos) (+.f64 maxCos -1))))))))))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux)))","(*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 -1 ux 2))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (-.f64 (*.f64 2 ux) 2))) (sqrt.f64 (/.f64 ux (+.f64 (*.f64 -1 ux) 2))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 maxCos (fma.f64 2 ux -2)) (sqrt.f64 (/.f64 ux (fma.f64 -1 ux 2))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 -1 ux 2)))))","(fma.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (*.f64 (*.f64 (fma.f64 2 ux -2) (*.f64 maxCos (sqrt.f64 (/.f64 ux (-.f64 2 ux))))) 1/2)))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (*.f64 1/2 (*.f64 (fma.f64 2 ux -2) (*.f64 maxCos (sqrt.f64 (/.f64 ux (-.f64 2 ux)))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (pow.f64 maxCos 2) (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 ux (+.f64 (*.f64 -1 ux) 2))) (-.f64 (*.f64 2 ux) 2))) 2)))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (-.f64 (*.f64 2 ux) 2))) (sqrt.f64 (/.f64 ux (+.f64 (*.f64 -1 ux) 2))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux)))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 (*.f64 maxCos maxCos) (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 ux -2) (sqrt.f64 (/.f64 ux (fma.f64 -1 ux 2))))) 2))) (sqrt.f64 (/.f64 1 (*.f64 ux (fma.f64 -1 ux 2)))))) (fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 maxCos (fma.f64 2 ux -2)) (sqrt.f64 (/.f64 ux (fma.f64 -1 ux 2))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 -1 ux 2))))))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 2 ux)) ux)) (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (*.f64 maxCos maxCos))) (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 (fma.f64 2 ux -2) (*.f64 1/2 (sqrt.f64 (/.f64 ux (-.f64 2 ux))))) 2))) (fma.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (*.f64 (*.f64 (fma.f64 2 ux -2) (*.f64 maxCos (sqrt.f64 (/.f64 ux (-.f64 2 ux))))) 1/2))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (*.f64 (neg.f64 (fma.f64 ux ux (pow.f64 (*.f64 (sqrt.f64 (/.f64 ux (-.f64 2 ux))) (*.f64 1/2 (fma.f64 2 ux -2))) 2))) (*.f64 (*.f64 maxCos maxCos) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) (*.f64 (fma.f64 2 ux -2) (*.f64 maxCos (sqrt.f64 (/.f64 ux (-.f64 2 ux))))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))))","(fma.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 1/2) (-.f64 (*.f64 (fma.f64 2 ux -2) (*.f64 maxCos (sqrt.f64 (/.f64 ux (-.f64 2 ux))))) (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 (sqrt.f64 (/.f64 ux (-.f64 2 ux))) (*.f64 1/2 (fma.f64 2 ux -2))) 2)) (*.f64 (*.f64 maxCos maxCos) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (pow.f64 maxCos 2) (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 ux (+.f64 (*.f64 -1 ux) 2))) (-.f64 (*.f64 2 ux) 2))) 2)))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux))))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (pow.f64 maxCos 3) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 ux (+.f64 (*.f64 -1 ux) 2))) (-.f64 (*.f64 2 ux) 2))) 2)) (-.f64 (*.f64 2 ux) 2)))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 ux) 2) 3) ux))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (-.f64 (*.f64 2 ux) 2))) (sqrt.f64 (/.f64 ux (+.f64 (*.f64 -1 ux) 2))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux))))))","(fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 (*.f64 maxCos maxCos) (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 ux -2) (sqrt.f64 (/.f64 ux (fma.f64 -1 ux 2))))) 2))) (sqrt.f64 (/.f64 1 (*.f64 ux (fma.f64 -1 ux 2)))))) (fma.f64 -1/4 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 (pow.f64 maxCos 3) (*.f64 (fma.f64 2 ux -2) (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 ux -2) (sqrt.f64 (/.f64 ux (fma.f64 -1 ux 2))))) 2)))) (sqrt.f64 (/.f64 1 (*.f64 ux (pow.f64 (fma.f64 -1 ux 2) 3)))))) (fma.f64 1/2 (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 maxCos (fma.f64 2 ux -2)) (sqrt.f64 (/.f64 ux (fma.f64 -1 ux 2))))) (*.f64 (cos.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 -1 ux 2)))))))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (-.f64 2 ux)) ux)) (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (*.f64 maxCos maxCos))) (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 (fma.f64 2 ux -2) (*.f64 1/2 (sqrt.f64 (/.f64 ux (-.f64 2 ux))))) 2))) (fma.f64 -1/4 (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (*.f64 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 (fma.f64 2 ux -2) (*.f64 1/2 (sqrt.f64 (/.f64 ux (-.f64 2 ux))))) 2)) (*.f64 (fma.f64 2 ux -2) (pow.f64 maxCos 3))) (sqrt.f64 (/.f64 (/.f64 1 ux) (pow.f64 (-.f64 2 ux) 3))))) (fma.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 (cos.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (*.f64 (*.f64 (fma.f64 2 ux -2) (*.f64 maxCos (sqrt.f64 (/.f64 ux (-.f64 2 ux))))) 1/2)))))","(+.f64 (*.f64 1/2 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (*.f64 (neg.f64 (fma.f64 ux ux (pow.f64 (*.f64 (sqrt.f64 (/.f64 ux (-.f64 2 ux))) (*.f64 1/2 (fma.f64 2 ux -2))) 2))) (*.f64 (*.f64 maxCos maxCos) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) (*.f64 (fma.f64 2 ux -2) (*.f64 maxCos (sqrt.f64 (/.f64 ux (-.f64 2 ux)))))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 -1/4 (*.f64 (neg.f64 (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 (sqrt.f64 (/.f64 ux (-.f64 2 ux))) (*.f64 1/2 (fma.f64 2 ux -2))) 2)) (fma.f64 2 ux -2))) (*.f64 (pow.f64 maxCos 3) (sqrt.f64 (/.f64 (/.f64 1 ux) (pow.f64 (-.f64 2 ux) 3)))))))))","(+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 1/2) (-.f64 (*.f64 (fma.f64 2 ux -2) (*.f64 maxCos (sqrt.f64 (/.f64 ux (-.f64 2 ux))))) (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 (sqrt.f64 (/.f64 ux (-.f64 2 ux))) (*.f64 1/2 (fma.f64 2 ux -2))) 2)) (*.f64 (*.f64 maxCos maxCos) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))))) (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (+.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 -1/4 (*.f64 (neg.f64 (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 (sqrt.f64 (/.f64 ux (-.f64 2 ux))) (*.f64 1/2 (fma.f64 2 ux -2))) 2)) (fma.f64 2 ux -2))) (*.f64 (pow.f64 maxCos 3) (sqrt.f64 (/.f64 (/.f64 1 ux) (pow.f64 (-.f64 2 ux) 3)))))))))","(*.f64 (-.f64 2 (*.f64 2 maxCos)) ux)","(*.f64 ux (-.f64 2 (*.f64 2 maxCos)))","(*.f64 ux (+.f64 2 (*.f64 maxCos -2)))","(*.f64 ux (fma.f64 maxCos -2 2))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2))))","(fma.f64 (-.f64 2 (*.f64 2 maxCos)) ux (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux))))","(fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 ux (+.f64 2 (*.f64 maxCos -2))))","(*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2))))","(fma.f64 (-.f64 2 (*.f64 2 maxCos)) ux (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux))))","(fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 ux (+.f64 2 (*.f64 maxCos -2))))","(*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2))))","(fma.f64 (-.f64 2 (*.f64 2 maxCos)) ux (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux))))","(fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 ux (+.f64 2 (*.f64 maxCos -2))))","(*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))","(*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2)))","(*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))))","(fma.f64 (-.f64 2 (*.f64 2 maxCos)) ux (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux))))","(fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 ux (+.f64 2 (*.f64 maxCos -2))))","(*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))))","(fma.f64 (-.f64 2 (*.f64 2 maxCos)) ux (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux))))","(fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 ux (+.f64 2 (*.f64 maxCos -2))))","(*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))))","(fma.f64 (-.f64 2 (*.f64 2 maxCos)) ux (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux))))","(fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 ux (+.f64 2 (*.f64 maxCos -2))))","(*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))","(*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2)))","(*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2))))","(fma.f64 (-.f64 2 (*.f64 2 maxCos)) ux (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux))))","(fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 ux (+.f64 2 (*.f64 maxCos -2))))","(*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2))))","(fma.f64 (-.f64 2 (*.f64 2 maxCos)) ux (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux))))","(fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 ux (+.f64 2 (*.f64 maxCos -2))))","(*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 (-.f64 1 maxCos) (*.f64 (-.f64 maxCos 1) (pow.f64 ux 2))))","(fma.f64 (-.f64 2 (*.f64 2 maxCos)) ux (*.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux))))","(fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 ux (+.f64 2 (*.f64 maxCos -2))))","(*.f64 ux (fma.f64 maxCos -2 (fma.f64 (-.f64 1 maxCos) (-.f64 (*.f64 maxCos ux) ux) 2)))","(*.f64 (+.f64 (*.f64 -1 ux) 2) ux)","(*.f64 ux (fma.f64 -1 ux 2))","(*.f64 ux (-.f64 2 ux))","(+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) 2) ux)))","(fma.f64 (fma.f64 -1 ux 2) ux (*.f64 maxCos (*.f64 ux (fma.f64 2 ux -2))))","(*.f64 ux (+.f64 (-.f64 2 ux) (*.f64 maxCos (fma.f64 2 ux -2))))","(*.f64 ux (fma.f64 maxCos (fma.f64 2 ux -2) (-.f64 2 ux)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (+.f64 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) 2) ux)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))","(fma.f64 (fma.f64 -1 ux 2) ux (fma.f64 maxCos (*.f64 ux (fma.f64 2 ux -2)) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))))","(-.f64 (*.f64 ux (+.f64 (-.f64 2 ux) (*.f64 maxCos (fma.f64 2 ux -2)))) (*.f64 (*.f64 maxCos ux) (*.f64 maxCos ux)))","(fma.f64 ux (-.f64 2 ux) (*.f64 (*.f64 maxCos ux) (-.f64 (fma.f64 2 ux -2) (*.f64 maxCos ux))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (+.f64 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) 2) ux)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))","(fma.f64 (fma.f64 -1 ux 2) ux (fma.f64 maxCos (*.f64 ux (fma.f64 2 ux -2)) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))))","(-.f64 (*.f64 ux (+.f64 (-.f64 2 ux) (*.f64 maxCos (fma.f64 2 ux -2)))) (*.f64 (*.f64 maxCos ux) (*.f64 maxCos ux)))","(fma.f64 ux (-.f64 2 ux) (*.f64 (*.f64 maxCos ux) (-.f64 (fma.f64 2 ux -2) (*.f64 maxCos ux))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))","(neg.f64 (*.f64 (*.f64 maxCos ux) (*.f64 maxCos ux)))","(*.f64 maxCos (*.f64 (*.f64 ux ux) (neg.f64 maxCos)))","(+.f64 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) 2) ux)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 maxCos (*.f64 ux (fma.f64 2 ux -2)) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))","(-.f64 (*.f64 (fma.f64 2 ux -2) (*.f64 ux maxCos)) (*.f64 (*.f64 maxCos ux) (*.f64 maxCos ux)))","(*.f64 (*.f64 maxCos ux) (-.f64 (fma.f64 2 ux -2) (*.f64 maxCos ux)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (+.f64 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) 2) ux)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))","(fma.f64 (fma.f64 -1 ux 2) ux (fma.f64 maxCos (*.f64 ux (fma.f64 2 ux -2)) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))))","(-.f64 (*.f64 ux (+.f64 (-.f64 2 ux) (*.f64 maxCos (fma.f64 2 ux -2)))) (*.f64 (*.f64 maxCos ux) (*.f64 maxCos ux)))","(fma.f64 ux (-.f64 2 ux) (*.f64 (*.f64 maxCos ux) (-.f64 (fma.f64 2 ux -2) (*.f64 maxCos ux))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (+.f64 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) 2) ux)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))","(fma.f64 (fma.f64 -1 ux 2) ux (fma.f64 maxCos (*.f64 ux (fma.f64 2 ux -2)) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))))","(-.f64 (*.f64 ux (+.f64 (-.f64 2 ux) (*.f64 maxCos (fma.f64 2 ux -2)))) (*.f64 (*.f64 maxCos ux) (*.f64 maxCos ux)))","(fma.f64 ux (-.f64 2 ux) (*.f64 (*.f64 maxCos ux) (-.f64 (fma.f64 2 ux -2) (*.f64 maxCos ux))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))","(neg.f64 (*.f64 (*.f64 maxCos ux) (*.f64 maxCos ux)))","(*.f64 maxCos (*.f64 (*.f64 ux ux) (neg.f64 maxCos)))","(+.f64 (*.f64 -1 (*.f64 maxCos (*.f64 (+.f64 2 (*.f64 -2 ux)) ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 -1 (*.f64 maxCos (*.f64 ux (+.f64 2 (*.f64 ux -2)))) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))","(neg.f64 (fma.f64 maxCos (*.f64 ux (fma.f64 ux -2 2)) (*.f64 (*.f64 maxCos ux) (*.f64 maxCos ux))))","(neg.f64 (*.f64 (*.f64 maxCos ux) (+.f64 (*.f64 maxCos ux) (fma.f64 ux -2 2))))","(+.f64 (*.f64 -1 (*.f64 maxCos (*.f64 (+.f64 2 (*.f64 -2 ux)) ux))) (+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))","(fma.f64 -1 (*.f64 maxCos (*.f64 ux (+.f64 2 (*.f64 ux -2)))) (fma.f64 (fma.f64 -1 ux 2) ux (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))))","(-.f64 (fma.f64 (neg.f64 maxCos) (*.f64 ux (fma.f64 ux -2 2)) (*.f64 ux (-.f64 2 ux))) (*.f64 (*.f64 maxCos ux) (*.f64 maxCos ux)))","(-.f64 (*.f64 ux (-.f64 2 ux)) (*.f64 (*.f64 maxCos ux) (+.f64 (*.f64 maxCos ux) (fma.f64 ux -2 2))))","(fma.f64 ux (-.f64 2 ux) (neg.f64 (*.f64 (*.f64 maxCos ux) (+.f64 (*.f64 maxCos ux) (fma.f64 ux -2 2)))))","(+.f64 (*.f64 -1 (*.f64 maxCos (*.f64 (+.f64 2 (*.f64 -2 ux)) ux))) (+.f64 (*.f64 (+.f64 (*.f64 -1 ux) 2) ux) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))","(fma.f64 -1 (*.f64 maxCos (*.f64 ux (+.f64 2 (*.f64 ux -2)))) (fma.f64 (fma.f64 -1 ux 2) ux (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))))","(-.f64 (fma.f64 (neg.f64 maxCos) (*.f64 ux (fma.f64 ux -2 2)) (*.f64 ux (-.f64 2 ux))) (*.f64 (*.f64 maxCos ux) (*.f64 maxCos ux)))","(-.f64 (*.f64 ux (-.f64 2 ux)) (*.f64 (*.f64 maxCos ux) (+.f64 (*.f64 maxCos ux) (fma.f64 ux -2 2))))","(fma.f64 ux (-.f64 2 ux) (neg.f64 (*.f64 (*.f64 maxCos ux) (+.f64 (*.f64 maxCos ux) (fma.f64 ux -2 2)))))"]],"stop":[["node limit",1]],"time":51.85107421875,"type":"simplify"},{"compiler":[[4408,3186]],"time":48.626953125,"type":"eval"},{"alts":[["(cbrt.f64 (*.f64 (pow.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))) 3/2) (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3)))","fresh",0.39379095721827917],["(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","done",0.3702647069194508],["(*.f64 (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5084695689805648],["(*.f64 (-.f64 (exp.f64 (log1p.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) 1) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","fresh",0.5597500746201021],["(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) uy)) (cos.f64 (*.f64 (PI.f64) uy))) (*.f64 (sin.f64 (*.f64 (PI.f64) uy)) (sin.f64 (*.f64 (PI.f64) uy)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5563173353308286],["(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 -4/45 (*.f64 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","fresh",8.310832989195267],["(*.f64 (pow.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) 1/3) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",3.0660723337378384],["(log1p.f64 (expm1.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))))","fresh",0.40580976814425906],["(*.f64 (pow.f64 (sqrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",3.245659379327838],["(log.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))))))))","fresh",5.955151599598948],["(*.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sin.f64 1))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5604672477420618],["(pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))) 3)","fresh",0.8641034591395397],["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (*.f64 (-.f64 (pow.f64 (*.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) 3) (pow.f64 (fma.f64 2 maxCos -2) 3)) ux) (+.f64 (pow.f64 (*.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) 2) (*.f64 (fma.f64 2 maxCos -2) (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (fma.f64 2 maxCos -2)))))))","fresh",0.4924110376811431]],"compiler":[[31,25],[42,35],[44,37],[32,25],[53,35],[156,127],[44,37],[29,23],[43,36],[31,25],[57,48],[30,24],[62,48]],"count":[[144,13]],"kept":[{"done":[1,1],"fresh":[11,6],"new":[131,6],"picked":[1,0]}],"min-error":[0.06325475516679323],"time":34.703857421875,"type":"prune"},{"accuracy":[0.3426459986073749],"baseline":[0.34264599860737494],"branch":[["ux",0.34264599860737494,1],["uy",0.34264599860737494,1],["maxCos",0.3426459986073749,1],["(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))",0.3426459986073749,1],["(cos.f64 (*.f64 (*.f64 uy 2) (PI.f64)))",0.3426459986073749,1],["(*.f64 (*.f64 uy 2) (PI.f64))",0.34264599860737494,1],["(*.f64 uy 2)",0.34264599860737494,1],["(sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)))))",0.34264599860737494,1],["(-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))",0.34264599860737494,1],["(*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)))",0.3426459986073749,1],["(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))",0.3426459986073749,1]],"compiler":[[4,3],[4,3],[4,3],[28,20],[9,8],[8,7],[6,5],[21,14],[20,13],[18,11],[10,7],[1076,814]],"count":[[27,1]],"inputs":[["(cbrt.f64 (*.f64 (pow.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))) 3/2) (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3)))","(*.f64 (-.f64 (exp.f64 (log1p.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) 1) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","(log1p.f64 (expm1.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))))","(log.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2)))))))))","(pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (neg.f64 (fma.f64 2 maxCos -2))))))) 3)","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (*.f64 (-.f64 (pow.f64 (*.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) 3) (pow.f64 (fma.f64 2 maxCos -2) 3)) ux) (+.f64 (pow.f64 (*.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) 2) (*.f64 (fma.f64 2 maxCos -2) (fma.f64 ux (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) (fma.f64 2 maxCos -2)))))))","(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)) (cbrt.f64 (PI.f64))) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sin.f64 1))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (expm1.f64 (log1p.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) uy)) (cos.f64 (*.f64 (PI.f64) uy))) (*.f64 (sin.f64 (*.f64 (PI.f64) uy)) (sin.f64 (*.f64 (PI.f64) uy)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 -4/45 (*.f64 (*.f64 (pow.f64 uy 6) (pow.f64 (PI.f64) 6)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -2 (*.f64 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","(*.f64 (pow.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) 1/3) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (pow.f64 (sqrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (-.f64 (exp.f64 (log1p.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) 1) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (*.f64 (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 3) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(cbrt.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 3/2)))","(*.f64 (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64))))))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (expm1.f64 (log1p.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))","(*.f64 (cos.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (-.f64 maxCos 2))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) -1) (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) -1))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))"]],"link":["."],"name":["UniformSampleCone, x"],"oracle":[18.944200460190658],"outputs":[["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))"]],"time":117.787109375,"times":[["ux",8.48095703125],["uy",8.330078125],["maxCos",8.3818359375],["(*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))",8.754150390625],["(cos.f64 (*.f64 (*.f64 uy 2) (PI.f64)))",8.257080078125],["(*.f64 (*.f64 uy 2) (PI.f64))",8.35986328125],["(*.f64 uy 2)",8.344970703125],["(sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)))))",8.700927734375],["(-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))",8.804931640625],["(*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)))",8.663818359375],["(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))",8.695068359375]],"type":"regimes"},{"compiler":[[32,25]],"egraph":[[10,273,45,0.0028386239999999997],[9,269,45,0.0024418739999999997],[8,256,45,0.002029582],[7,232,45,0.001630749],[6,196,45,0.001217999],[5,154,45,0.000879999],[4,113,45,0.000608541],[3,81,45,0.000382707],[2,62,45,0.000223874],[1,45,45,0.000126541],[0,25,53,5.9541e-5]],"inputs":[["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (+.f64 maxCos -1) (*.f64 (pow.f64 ux 2) (+.f64 1 (neg.f64 maxCos)))) (neg.f64 (*.f64 ux (+.f64 (+.f64 maxCos (neg.f64 (+.f64 1 (neg.f64 maxCos)))) -1))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 (pow.f64 ux 2) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (-.f64 maxCos (-.f64 1 maxCos)))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 (*.f64 (pow.f64 ux 2) (-.f64 1 maxCos)) (+.f64 maxCos -1)) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 maxCos -1)))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (*.f64 (pow.f64 ux 2) (-.f64 1 maxCos)) (+.f64 maxCos -1)) (*.f64 ux (-.f64 1 (+.f64 maxCos (+.f64 maxCos -1)))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (*.f64 (pow.f64 ux 2) (-.f64 1 maxCos)) (+.f64 maxCos -1)) (*.f64 ux (+.f64 1 (-.f64 (-.f64 1 maxCos) maxCos))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 1 maxCos) (*.f64 (pow.f64 ux 2) (+.f64 maxCos -1))) (*.f64 ux (+.f64 1 (-.f64 (-.f64 1 maxCos) maxCos))))))","(*.f64 (cos.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (*.f64 (pow.f64 ux 2) (-.f64 1 maxCos)) (-.f64 maxCos 1)) (*.f64 ux (+.f64 1 (-.f64 (-.f64 1 maxCos) maxCos))))))"]],"stop":[["fuel",1],["saturated",1]],"time":12.346923828125,"type":"simplify"},{"time":0.01513671875,"type":"soundness"},{"compiler":[[32,25]],"remove-preprocessing":[[]],"time":13.712890625,"type":"end"}]