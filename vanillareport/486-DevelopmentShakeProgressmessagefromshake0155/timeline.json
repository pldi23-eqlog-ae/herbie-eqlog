[{"compiler":[[10,7]],"method":["search"],"sampling":[[12,0.9224383648252115,0.07658531109336764,0.0009763240814208984],[11,0.8780481526628137,0.12097552325576544,0.0009763240814208984],[10,0.8487798809073865,0.15024379501119256,0.0009763240814208984],[9,0.7648775018751621,0.23414617404341698,0.0009763240814208984],[8,0.7102433945983648,0.28878028132021427,0.0009763240814208984],[7,0.5619508177042007,0.43707285821437836,0.0009763240814208984],[6,0.46829234808683395,0.5307313278317451,0.0009763240814208984],[5,0.18731693923473358,0.8117067366838455,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":21.22607421875,"type":"analyze"},{"outcomes":[["body",256,"valid",280.119140625,8256]],"time":287.291015625,"type":"sample"},{"compiler":[[9,6]],"egraph":[[0,2,2,1.25e-6],[4,33,20,0.0002815],[3,31,20,0.000218],[2,26,20,0.000155209],[1,18,20,9.6042e-5],[0,10,20,4.9792e-5]],"inputs":[["0","1"],["(/.f64 (*.f64 x 100) (+.f64 x y))","(/.f64 (*.f64 y 100) (+.f64 y x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (*.f64 x 100) (+.f64 x y))","(/.f64 x (/.f64 (+.f64 x y) 100))","(*.f64 (/.f64 x (+.f64 x y)) 100)","(*.f64 100 (/.f64 x (+.f64 x y)))","(*.f64 x (/.f64 100 (+.f64 x y)))","(/.f64 (*.f64 y 100) (+.f64 y x))","(/.f64 y (/.f64 (+.f64 x y) 100))","(*.f64 (/.f64 y (+.f64 x y)) 100)","(*.f64 100 (/.f64 y (+.f64 x y)))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":22.841064453125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[4,19,10,0.000196959],[3,18,10,0.000154167],[2,15,10,0.000111167],[1,11,10,7.0833e-5],[0,7,10,3.6375e-5]],"inputs":[["(/.f64 (*.f64 x 100) (+.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 x 100) (+.f64 x y))","(/.f64 x (/.f64 (+.f64 x y) 100))","(*.f64 (/.f64 x (+.f64 x y)) 100)","(*.f64 100 (/.f64 x (+.f64 x y)))","(*.f64 x (/.f64 100 (+.f64 x y)))"]],"stop":[["saturated",1]],"time":10.375,"type":"simplify"},{"compiler":[[16,9]],"time":0.302001953125,"type":"eval"},{"alts":[["(/.f64 (*.f64 x 100) (+.f64 x y))","fresh",0.41796875],["(*.f64 x (/.f64 100 (+.f64 x y)))","next",0.16015625]],"compiler":[[9,6],[9,6],[9,6],[9,6]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.05859375],"time":1.113037109375,"type":"prune"},{"compiler":[[20,9]],"locations":[["(/.f64 100 (+.f64 x y))",0.01953125,true],["(*.f64 x (/.f64 100 (+.f64 x y)))",0.1484375,true]],"time":4.055908203125,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 100 (+.f64 x y))","y","-inf",0.23486328125],["(/.f64 100 (+.f64 x y))","y","inf",0.22509765625],["(/.f64 100 (+.f64 x y))","y","0",0.26611328125],["(/.f64 100 (+.f64 x y))","x","-inf",0.238037109375],["(/.f64 100 (+.f64 x y))","x","inf",0.55712890625],["(/.f64 100 (+.f64 x y))","x","0",0.30078125],["(*.f64 x (/.f64 100 (+.f64 x y)))","y","-inf",0.30908203125],["(*.f64 x (/.f64 100 (+.f64 x y)))","y","inf",0.39697265625],["(*.f64 x (/.f64 100 (+.f64 x y)))","y","0",0.317138671875],["(*.f64 x (/.f64 100 (+.f64 x y)))","x","-inf",0.278076171875],["(*.f64 x (/.f64 100 (+.f64 x y)))","x","inf",0.39892578125],["(*.f64 x (/.f64 100 (+.f64 x y)))","x","0",0.56005859375]],"time":4.256103515625,"type":"series"},{"count":[[2,44]],"egraph":[[2,2204,17,0.020680917],[1,160,17,0.003144167],[0,7,17,0.000224042]],"inputs":[["(*.f64 x (/.f64 100 (+.f64 x y)))","(/.f64 100 (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (/.f64 100 (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (+.f64 x y) 1/100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 x y) (*.f64 x 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x 100) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x 100)) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) 1) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) (sqrt.f64 (+.f64 x y))) (sqrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -100 x) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x -100) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (/.f64 100 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (/.f64 100 (+.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (/.f64 100 (+.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (/.f64 100 (+.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (/.f64 100 (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 100 (+.f64 x y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (/.f64 100 (+.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (/.f64 100 (+.f64 x y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (/.f64 100 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (/.f64 100 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (/.f64 100 (+.f64 x y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 100 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 100 (+.f64 x y))) (cbrt.f64 (/.f64 10000 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 10000 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (/.f64 100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 10 (sqrt.f64 (+.f64 x y))) (/.f64 10 (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -100 (/.f64 1 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 100 (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 100 (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 10 (sqrt.f64 (+.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 x y) 1/100) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 10000 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 100 (+.f64 x y))))))))"]],"rules":[["egg-rr",22],["egg-rr",22]],"stop":[["node limit",1]],"time":40.0,"type":"rewrite"},{"count":[[92,73]],"egraph":[[8,7936,783,0.066762458],[7,7775,783,0.055410083],[6,7561,783,0.04489475],[5,5948,783,0.033341125],[4,4524,810,0.020985458],[3,2157,912,0.011718208],[2,576,981,0.004425583],[1,191,1050,0.001342458],[0,68,1068,0.000336833]],"inputs":[["(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(/.f64 100 y)","(+.f64 (*.f64 100 (/.f64 1 y)) (*.f64 -100 (/.f64 x (pow.f64 y 2))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3)))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3))))))","(/.f64 100 x)","(+.f64 (*.f64 100 (/.f64 1 x)) (*.f64 -100 (/.f64 y (pow.f64 x 2))))","(+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2))))))","(/.f64 100 x)","(+.f64 (*.f64 100 (/.f64 1 x)) (*.f64 -100 (/.f64 y (pow.f64 x 2))))","(+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2))))))","(/.f64 100 x)","(+.f64 (*.f64 100 (/.f64 1 x)) (*.f64 -100 (/.f64 y (pow.f64 x 2))))","(+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2))))))","(/.f64 100 y)","(+.f64 (*.f64 100 (/.f64 1 y)) (*.f64 -100 (/.f64 x (pow.f64 y 2))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3)))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3))))))","(/.f64 100 y)","(+.f64 (*.f64 100 (/.f64 1 y)) (*.f64 -100 (/.f64 x (pow.f64 y 2))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3)))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 x y))","(/.f64 100 (/.f64 y x))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (/.f64 x y)))","(fma.f64 100 (/.f64 x y) (/.f64 -100 (/.f64 y (/.f64 (*.f64 x x) y))))","(fma.f64 -100 (/.f64 (/.f64 x (/.f64 y x)) y) (/.f64 100 (/.f64 y x)))","(*.f64 (/.f64 x y) (+.f64 100 (/.f64 -100 (/.f64 y x))))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 x (/.f64 -100 y))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 -100 (/.f64 y (/.f64 (*.f64 x x) y))))","(fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 100 (/.f64 -100 (/.f64 y x)))))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) (+.f64 (*.f64 100 (/.f64 x y)) -100))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 100 (/.f64 x y) (fma.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (/.f64 (*.f64 100 (pow.f64 x 3)) (pow.f64 y 3)))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (/.f64 x y) (fma.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -100 (/.f64 (/.f64 x (/.f64 y x)) y) (fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 (/.f64 x y) (+.f64 100 (/.f64 -100 (/.f64 y x)))) (fma.f64 -100 (pow.f64 (/.f64 x y) 4) (/.f64 100 (pow.f64 (/.f64 y x) 3))))","(*.f64 (+.f64 (/.f64 (/.f64 x (/.f64 y x)) y) 1) (*.f64 (/.f64 x y) (+.f64 100 (/.f64 -100 (/.f64 y x)))))","(*.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 x (/.f64 -100 y)))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (/.f64 y x))))","(+.f64 (fma.f64 -100 (/.f64 y x) 100) (*.f64 100 (/.f64 y (/.f64 (*.f64 x x) y))))","(fma.f64 (/.f64 100 x) (/.f64 y (/.f64 x y)) (fma.f64 -100 (/.f64 y x) 100))","(+.f64 100 (*.f64 (/.f64 y x) (+.f64 -100 (/.f64 (*.f64 100 y) x))))","(fma.f64 100 (pow.f64 (/.f64 y x) 2) (fma.f64 -100 (/.f64 y x) 100))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 100 (/.f64 y (/.f64 (*.f64 x x) y)))))","(fma.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)) (*.f64 100 (fma.f64 (/.f64 y x) (/.f64 y x) 1)))","(+.f64 100 (fma.f64 -100 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 -100 (/.f64 (*.f64 100 y) x)))))","(*.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) (fma.f64 -100 (/.f64 y x) 100))","(*.f64 (+.f64 (pow.f64 (/.f64 y x) 2) 1) (fma.f64 -100 (/.f64 y x) 100))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (/.f64 y x))))","(+.f64 (fma.f64 -100 (/.f64 y x) 100) (*.f64 100 (/.f64 y (/.f64 (*.f64 x x) y))))","(fma.f64 (/.f64 100 x) (/.f64 y (/.f64 x y)) (fma.f64 -100 (/.f64 y x) 100))","(+.f64 100 (*.f64 (/.f64 y x) (+.f64 -100 (/.f64 (*.f64 100 y) x))))","(fma.f64 100 (pow.f64 (/.f64 y x) 2) (fma.f64 -100 (/.f64 y x) 100))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 100 (/.f64 y (/.f64 (*.f64 x x) y)))))","(fma.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)) (*.f64 100 (fma.f64 (/.f64 y x) (/.f64 y x) 1)))","(+.f64 100 (fma.f64 -100 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 -100 (/.f64 (*.f64 100 y) x)))))","(*.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) (fma.f64 -100 (/.f64 y x) 100))","(*.f64 (+.f64 (pow.f64 (/.f64 y x) 2) 1) (fma.f64 -100 (/.f64 y x) 100))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (/.f64 y x))))","(+.f64 (fma.f64 -100 (/.f64 y x) 100) (*.f64 100 (/.f64 y (/.f64 (*.f64 x x) y))))","(fma.f64 (/.f64 100 x) (/.f64 y (/.f64 x y)) (fma.f64 -100 (/.f64 y x) 100))","(+.f64 100 (*.f64 (/.f64 y x) (+.f64 -100 (/.f64 (*.f64 100 y) x))))","(fma.f64 100 (pow.f64 (/.f64 y x) 2) (fma.f64 -100 (/.f64 y x) 100))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 100 (/.f64 y (/.f64 (*.f64 x x) y)))))","(fma.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)) (*.f64 100 (fma.f64 (/.f64 y x) (/.f64 y x) 1)))","(+.f64 100 (fma.f64 -100 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 -100 (/.f64 (*.f64 100 y) x)))))","(*.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) (fma.f64 -100 (/.f64 y x) 100))","(*.f64 (+.f64 (pow.f64 (/.f64 y x) 2) 1) (fma.f64 -100 (/.f64 y x) 100))","(*.f64 100 (/.f64 x y))","(/.f64 100 (/.f64 y x))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (/.f64 x y)))","(fma.f64 100 (/.f64 x y) (/.f64 -100 (/.f64 y (/.f64 (*.f64 x x) y))))","(fma.f64 -100 (/.f64 (/.f64 x (/.f64 y x)) y) (/.f64 100 (/.f64 y x)))","(*.f64 (/.f64 x y) (+.f64 100 (/.f64 -100 (/.f64 y x))))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 x (/.f64 -100 y))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 -100 (/.f64 y (/.f64 (*.f64 x x) y))))","(fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 100 (/.f64 -100 (/.f64 y x)))))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) (+.f64 (*.f64 100 (/.f64 x y)) -100))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 100 (/.f64 x y) (fma.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (/.f64 (*.f64 100 (pow.f64 x 3)) (pow.f64 y 3)))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (/.f64 x y) (fma.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -100 (/.f64 (/.f64 x (/.f64 y x)) y) (fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 (/.f64 x y) (+.f64 100 (/.f64 -100 (/.f64 y x)))) (fma.f64 -100 (pow.f64 (/.f64 x y) 4) (/.f64 100 (pow.f64 (/.f64 y x) 3))))","(*.f64 (+.f64 (/.f64 (/.f64 x (/.f64 y x)) y) 1) (*.f64 (/.f64 x y) (+.f64 100 (/.f64 -100 (/.f64 y x)))))","(*.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 x (/.f64 -100 y)))))","(*.f64 100 (/.f64 x y))","(/.f64 100 (/.f64 y x))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (/.f64 x y)))","(fma.f64 100 (/.f64 x y) (/.f64 -100 (/.f64 y (/.f64 (*.f64 x x) y))))","(fma.f64 -100 (/.f64 (/.f64 x (/.f64 y x)) y) (/.f64 100 (/.f64 y x)))","(*.f64 (/.f64 x y) (+.f64 100 (/.f64 -100 (/.f64 y x))))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 x (/.f64 -100 y))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 -100 (/.f64 y (/.f64 (*.f64 x x) y))))","(fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 100 (/.f64 -100 (/.f64 y x)))))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) (+.f64 (*.f64 100 (/.f64 x y)) -100))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 100 (/.f64 x y) (fma.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (/.f64 (*.f64 100 (pow.f64 x 3)) (pow.f64 y 3)))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (/.f64 x y) (fma.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -100 (/.f64 (/.f64 x (/.f64 y x)) y) (fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 (/.f64 x y) (+.f64 100 (/.f64 -100 (/.f64 y x)))) (fma.f64 -100 (pow.f64 (/.f64 x y) 4) (/.f64 100 (pow.f64 (/.f64 y x) 3))))","(*.f64 (+.f64 (/.f64 (/.f64 x (/.f64 y x)) y) 1) (*.f64 (/.f64 x y) (+.f64 100 (/.f64 -100 (/.f64 y x)))))","(*.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 x (/.f64 -100 y)))))","(/.f64 100 y)","(+.f64 (*.f64 100 (/.f64 1 y)) (*.f64 -100 (/.f64 x (pow.f64 y 2))))","(+.f64 (/.f64 100 y) (*.f64 -100 (/.f64 x (*.f64 y y))))","(fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3)))))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 (*.f64 100 (*.f64 x x)) (pow.f64 y 3))))","(+.f64 (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y)) (/.f64 100 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(fma.f64 100 (*.f64 (/.f64 x (pow.f64 y 3)) x) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y)))","(+.f64 (/.f64 100 y) (*.f64 (/.f64 x (*.f64 y y)) (+.f64 -100 (*.f64 100 (/.f64 x y)))))","(+.f64 (/.f64 100 y) (*.f64 (/.f64 x (*.f64 y y)) (+.f64 (*.f64 100 (/.f64 x y)) -100)))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3))))))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4)) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 (*.f64 100 (*.f64 x x)) (pow.f64 y 3)))))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4)) (fma.f64 100 (/.f64 x (/.f64 (pow.f64 y 3) x)) (*.f64 -100 (/.f64 x (*.f64 y y))))))","(fma.f64 -100 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (fma.f64 100 (*.f64 (/.f64 x (pow.f64 y 3)) x) (/.f64 100 y)))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 x (*.f64 y y)) (*.f64 (/.f64 x (/.f64 (pow.f64 y 3) x)) (+.f64 100 (/.f64 -100 (/.f64 y x))))))","(*.f64 (+.f64 (/.f64 (/.f64 x (/.f64 y x)) y) 1) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y)))","(*.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y)))","(/.f64 100 x)","(+.f64 (*.f64 100 (/.f64 1 x)) (*.f64 -100 (/.f64 y (pow.f64 x 2))))","(+.f64 (/.f64 100 x) (*.f64 -100 (/.f64 y (*.f64 x x))))","(fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x))","(+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2)))))","(+.f64 (/.f64 100 x) (fma.f64 100 (/.f64 (*.f64 y y) (pow.f64 x 3)) (*.f64 -100 (/.f64 y (*.f64 x x)))))","(+.f64 (/.f64 100 x) (fma.f64 100 (/.f64 y (/.f64 (pow.f64 x 3) y)) (*.f64 -100 (/.f64 y (*.f64 x x)))))","(fma.f64 100 (*.f64 (/.f64 y (pow.f64 x 3)) y) (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x)))","(+.f64 (/.f64 100 x) (*.f64 (/.f64 y (*.f64 x x)) (+.f64 -100 (/.f64 (*.f64 100 y) x))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2))))))","(fma.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 100 x) (fma.f64 100 (/.f64 (*.f64 y y) (pow.f64 x 3)) (*.f64 -100 (/.f64 y (*.f64 x x))))))","(+.f64 (fma.f64 100 (/.f64 y (/.f64 (pow.f64 x 3) y)) (*.f64 -100 (/.f64 y (*.f64 x x)))) (fma.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (/.f64 100 x)))","(fma.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (fma.f64 100 (*.f64 (/.f64 y (pow.f64 x 3)) y) (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x))))","(+.f64 (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x)) (*.f64 (*.f64 y (/.f64 y (pow.f64 x 3))) (fma.f64 -100 (/.f64 y x) 100)))","(*.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x)))","(*.f64 (+.f64 (pow.f64 (/.f64 y x) 2) 1) (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x)))","(/.f64 100 x)","(+.f64 (*.f64 100 (/.f64 1 x)) (*.f64 -100 (/.f64 y (pow.f64 x 2))))","(+.f64 (/.f64 100 x) (*.f64 -100 (/.f64 y (*.f64 x x))))","(fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x))","(+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2)))))","(+.f64 (/.f64 100 x) (fma.f64 100 (/.f64 (*.f64 y y) (pow.f64 x 3)) (*.f64 -100 (/.f64 y (*.f64 x x)))))","(+.f64 (/.f64 100 x) (fma.f64 100 (/.f64 y (/.f64 (pow.f64 x 3) y)) (*.f64 -100 (/.f64 y (*.f64 x x)))))","(fma.f64 100 (*.f64 (/.f64 y (pow.f64 x 3)) y) (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x)))","(+.f64 (/.f64 100 x) (*.f64 (/.f64 y (*.f64 x x)) (+.f64 -100 (/.f64 (*.f64 100 y) x))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2))))))","(fma.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 100 x) (fma.f64 100 (/.f64 (*.f64 y y) (pow.f64 x 3)) (*.f64 -100 (/.f64 y (*.f64 x x))))))","(+.f64 (fma.f64 100 (/.f64 y (/.f64 (pow.f64 x 3) y)) (*.f64 -100 (/.f64 y (*.f64 x x)))) (fma.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (/.f64 100 x)))","(fma.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (fma.f64 100 (*.f64 (/.f64 y (pow.f64 x 3)) y) (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x))))","(+.f64 (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x)) (*.f64 (*.f64 y (/.f64 y (pow.f64 x 3))) (fma.f64 -100 (/.f64 y x) 100)))","(*.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x)))","(*.f64 (+.f64 (pow.f64 (/.f64 y x) 2) 1) (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x)))","(/.f64 100 x)","(+.f64 (*.f64 100 (/.f64 1 x)) (*.f64 -100 (/.f64 y (pow.f64 x 2))))","(+.f64 (/.f64 100 x) (*.f64 -100 (/.f64 y (*.f64 x x))))","(fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x))","(+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2)))))","(+.f64 (/.f64 100 x) (fma.f64 100 (/.f64 (*.f64 y y) (pow.f64 x 3)) (*.f64 -100 (/.f64 y (*.f64 x x)))))","(+.f64 (/.f64 100 x) (fma.f64 100 (/.f64 y (/.f64 (pow.f64 x 3) y)) (*.f64 -100 (/.f64 y (*.f64 x x)))))","(fma.f64 100 (*.f64 (/.f64 y (pow.f64 x 3)) y) (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x)))","(+.f64 (/.f64 100 x) (*.f64 (/.f64 y (*.f64 x x)) (+.f64 -100 (/.f64 (*.f64 100 y) x))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2))))))","(fma.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 100 x) (fma.f64 100 (/.f64 (*.f64 y y) (pow.f64 x 3)) (*.f64 -100 (/.f64 y (*.f64 x x))))))","(+.f64 (fma.f64 100 (/.f64 y (/.f64 (pow.f64 x 3) y)) (*.f64 -100 (/.f64 y (*.f64 x x)))) (fma.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (/.f64 100 x)))","(fma.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (fma.f64 100 (*.f64 (/.f64 y (pow.f64 x 3)) y) (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x))))","(+.f64 (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x)) (*.f64 (*.f64 y (/.f64 y (pow.f64 x 3))) (fma.f64 -100 (/.f64 y x) 100)))","(*.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x)))","(*.f64 (+.f64 (pow.f64 (/.f64 y x) 2) 1) (fma.f64 -100 (/.f64 y (*.f64 x x)) (/.f64 100 x)))","(/.f64 100 y)","(+.f64 (*.f64 100 (/.f64 1 y)) (*.f64 -100 (/.f64 x (pow.f64 y 2))))","(+.f64 (/.f64 100 y) (*.f64 -100 (/.f64 x (*.f64 y y))))","(fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3)))))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 (*.f64 100 (*.f64 x x)) (pow.f64 y 3))))","(+.f64 (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y)) (/.f64 100 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(fma.f64 100 (*.f64 (/.f64 x (pow.f64 y 3)) x) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y)))","(+.f64 (/.f64 100 y) (*.f64 (/.f64 x (*.f64 y y)) (+.f64 -100 (*.f64 100 (/.f64 x y)))))","(+.f64 (/.f64 100 y) (*.f64 (/.f64 x (*.f64 y y)) (+.f64 (*.f64 100 (/.f64 x y)) -100)))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3))))))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4)) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 (*.f64 100 (*.f64 x x)) (pow.f64 y 3)))))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4)) (fma.f64 100 (/.f64 x (/.f64 (pow.f64 y 3) x)) (*.f64 -100 (/.f64 x (*.f64 y y))))))","(fma.f64 -100 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (fma.f64 100 (*.f64 (/.f64 x (pow.f64 y 3)) x) (/.f64 100 y)))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 x (*.f64 y y)) (*.f64 (/.f64 x (/.f64 (pow.f64 y 3) x)) (+.f64 100 (/.f64 -100 (/.f64 y x))))))","(*.f64 (+.f64 (/.f64 (/.f64 x (/.f64 y x)) y) 1) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y)))","(*.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y)))","(/.f64 100 y)","(+.f64 (*.f64 100 (/.f64 1 y)) (*.f64 -100 (/.f64 x (pow.f64 y 2))))","(+.f64 (/.f64 100 y) (*.f64 -100 (/.f64 x (*.f64 y y))))","(fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3)))))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 (*.f64 100 (*.f64 x x)) (pow.f64 y 3))))","(+.f64 (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y)) (/.f64 100 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(fma.f64 100 (*.f64 (/.f64 x (pow.f64 y 3)) x) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y)))","(+.f64 (/.f64 100 y) (*.f64 (/.f64 x (*.f64 y y)) (+.f64 -100 (*.f64 100 (/.f64 x y)))))","(+.f64 (/.f64 100 y) (*.f64 (/.f64 x (*.f64 y y)) (+.f64 (*.f64 100 (/.f64 x y)) -100)))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3))))))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4)) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 (*.f64 100 (*.f64 x x)) (pow.f64 y 3)))))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4)) (fma.f64 100 (/.f64 x (/.f64 (pow.f64 y 3) x)) (*.f64 -100 (/.f64 x (*.f64 y y))))))","(fma.f64 -100 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (fma.f64 100 (*.f64 (/.f64 x (pow.f64 y 3)) x) (/.f64 100 y)))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 x (*.f64 y y)) (*.f64 (/.f64 x (/.f64 (pow.f64 y 3) x)) (+.f64 100 (/.f64 -100 (/.f64 y x))))))","(*.f64 (+.f64 (/.f64 (/.f64 x (/.f64 y x)) y) 1) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y)))","(*.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (fma.f64 -100 (/.f64 x (*.f64 y y)) (/.f64 100 y)))"]],"stop":[["node limit",1]],"time":93.0888671875,"type":"simplify"},{"compiler":[[943,570]],"time":11.450927734375,"type":"eval"},{"alts":[["(/.f64 (*.f64 x 100) (+.f64 x y))","fresh",0.41796875],["(*.f64 x (/.f64 100 (+.f64 x y)))","done",0.16015625],["(*.f64 x (pow.f64 (cbrt.f64 (/.f64 100 (+.f64 x y))) 3))","fresh",0.7375528809692391],["(/.f64 (/.f64 (*.f64 x 100) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (+.f64 x y)))","fresh",0.9670641602745652],["(/.f64 1 (/.f64 (+.f64 x y) (*.f64 x 100)))","fresh",0.5773808655519749],["(/.f64 x (*.f64 (+.f64 x y) 1/100))","next",0.19140625]],"compiler":[[9,6],[9,6],[12,9],[17,10],[11,8],[9,6],[9,6],[12,9],[17,10],[11,8],[9,6]],"count":[[75,6]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[73,5],"picked":[1,1]}],"min-error":[0],"time":14.2822265625,"type":"prune"},{"compiler":[[20,9]],"locations":[["(*.f64 (+.f64 x y) 1/100)",0.12890625,true],["(/.f64 x (*.f64 (+.f64 x y) 1/100))",0.1796875,true]],"time":4.143798828125,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (+.f64 x y) 1/100)","y","-inf",0.2421875],["(*.f64 (+.f64 x y) 1/100)","y","inf",0.255126953125],["(*.f64 (+.f64 x y) 1/100)","y","0",0.22998046875],["(*.f64 (+.f64 x y) 1/100)","x","-inf",0.37890625],["(*.f64 (+.f64 x y) 1/100)","x","inf",0.281982421875],["(*.f64 (+.f64 x y) 1/100)","x","0",0.255126953125],["(/.f64 x (*.f64 (+.f64 x y) 1/100))","y","-inf",0.18603515625],["(/.f64 x (*.f64 (+.f64 x y) 1/100))","y","inf",0.2158203125],["(/.f64 x (*.f64 (+.f64 x y) 1/100))","y","0",0.162109375],["(/.f64 x (*.f64 (+.f64 x y) 1/100))","x","-inf",0.214111328125],["(/.f64 x (*.f64 (+.f64 x y) 1/100))","x","inf",0.31298828125],["(/.f64 x (*.f64 (+.f64 x y) 1/100))","x","0",0.258056640625]],"time":3.149169921875,"type":"series"},{"count":[[2,59]],"egraph":[[2,2321,17,0.020620042],[1,159,17,0.003173542],[0,7,17,0.000230292]],"inputs":[["(/.f64 x (*.f64 (+.f64 x y) 1/100))","(*.f64 (+.f64 x y) 1/100)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (/.f64 100 (+.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (/.f64 100 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (/.f64 100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (/.f64 100 (+.f64 x y)))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 100 (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 100 (+.f64 x y)))) 2) (cbrt.f64 (*.f64 x (/.f64 100 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) 1/10) (/.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) 1/10))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (*.f64 (+.f64 x y) -1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (*.f64 (+.f64 x y) 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (*.f64 (+.f64 x y) 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (+.f64 x y)) (/.f64 (sqrt.f64 x) 1/100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (/.f64 x 1/100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (+.f64 x y)) (/.f64 (cbrt.f64 x) 1/100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1/100) (/.f64 (sqrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1/100) (/.f64 (cbrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 1/10000 (pow.f64 (+.f64 x y) 2)))) (/.f64 x (cbrt.f64 (*.f64 (+.f64 x y) 1/100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (*.f64 1/10000 (pow.f64 (+.f64 x y) 2)))) (cbrt.f64 (*.f64 x (/.f64 100 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (*.f64 1/10000 (pow.f64 (+.f64 x y) 2)))) (/.f64 (sqrt.f64 x) (cbrt.f64 (*.f64 (+.f64 x y) 1/100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 1/10 (sqrt.f64 (+.f64 x y)))) (/.f64 x (*.f64 1/10 (sqrt.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 1/10 (sqrt.f64 (+.f64 x y)))) (/.f64 (cbrt.f64 x) (*.f64 1/10 (sqrt.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (/.f64 100 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (/.f64 100 (+.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (/.f64 100 (+.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) 1/10) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (/.f64 x 1/100)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (*.f64 (+.f64 x y) -1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (/.f64 100 (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (/.f64 100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (/.f64 100 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (/.f64 100 (+.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (*.f64 (+.f64 x y) 1/100) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (/.f64 100 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (/.f64 100 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (/.f64 100 (+.f64 x y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x 1/100) (*.f64 y 1/100))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y 1/100) (*.f64 x 1/100))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/100 x) (*.f64 1/100 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/100 y) (*.f64 1/100 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 x y) 1/100))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) 1/100) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 y y)) 1/100) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/100 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/100 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 x y) 1/100) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 x y) 1/100) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 x y) 1/100)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/10 (sqrt.f64 (+.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 1/10000 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 1/100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 x y) 1/100))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 x y) 1/100) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 x y) 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (+.f64 x y) 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 x y) 1/100)))))))"]],"rules":[["egg-rr",20],["egg-rr",39]],"stop":[["node limit",1]],"time":41.121826171875,"type":"rewrite"},{"count":[[107,79]],"egraph":[[4,7900,576,0.024499292],[3,1419,576,0.012436],[2,368,624,0.002849292],[1,130,666,0.000928042],[0,45,672,0.000247]],"inputs":[["(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(*.f64 1/100 y)","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(*.f64 1/100 x)","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(*.f64 1/100 x)","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(*.f64 1/100 x)","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(*.f64 1/100 y)","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(*.f64 1/100 y)","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(/.f64 100 (/.f64 y x))","(*.f64 x (/.f64 100 y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (/.f64 x y)))","(fma.f64 100 (/.f64 x y) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (/.f64 x y) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 100 (/.f64 x y) (fma.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (/.f64 x y) (fma.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (fma.f64 -100 (pow.f64 (/.f64 x y) 4) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (/.f64 y x))))","(+.f64 (fma.f64 -100 (/.f64 y x) 100) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x)))","(fma.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x)))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(fma.f64 100 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)) 100))","(+.f64 100 (fma.f64 -100 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (/.f64 y x))))","(+.f64 (fma.f64 -100 (/.f64 y x) 100) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x)))","(fma.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x)))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(fma.f64 100 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)) 100))","(+.f64 100 (fma.f64 -100 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (/.f64 y x))))","(+.f64 (fma.f64 -100 (/.f64 y x) 100) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x)))","(fma.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x)))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(fma.f64 100 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)) 100))","(+.f64 100 (fma.f64 -100 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x))))))","(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(/.f64 100 (/.f64 y x))","(*.f64 x (/.f64 100 y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (/.f64 x y)))","(fma.f64 100 (/.f64 x y) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (/.f64 x y) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 100 (/.f64 x y) (fma.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (/.f64 x y) (fma.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (fma.f64 -100 (pow.f64 (/.f64 x y) 4) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))))","(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(/.f64 100 (/.f64 y x))","(*.f64 x (/.f64 100 y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (/.f64 x y)))","(fma.f64 100 (/.f64 x y) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (/.f64 x y) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 100 (/.f64 x y) (fma.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (/.f64 x y) (fma.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (fma.f64 -100 (pow.f64 (/.f64 x y) 4) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))))","(*.f64 1/100 y)","(*.f64 y 1/100)","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(*.f64 1/100 (+.f64 x y))","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(*.f64 1/100 (+.f64 x y))","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(*.f64 1/100 (+.f64 x y))","(*.f64 1/100 x)","(*.f64 x 1/100)","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(*.f64 1/100 (+.f64 x y))","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(*.f64 1/100 (+.f64 x y))","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(*.f64 1/100 (+.f64 x y))","(*.f64 1/100 x)","(*.f64 x 1/100)","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(*.f64 1/100 (+.f64 x y))","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(*.f64 1/100 (+.f64 x y))","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(*.f64 1/100 (+.f64 x y))","(*.f64 1/100 x)","(*.f64 x 1/100)","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(*.f64 1/100 (+.f64 x y))","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(*.f64 1/100 (+.f64 x y))","(+.f64 (*.f64 1/100 y) (*.f64 1/100 x))","(*.f64 1/100 (+.f64 x y))","(*.f64 1/100 y)","(*.f64 y 1/100)","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(*.f64 1/100 (+.f64 x y))","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(*.f64 1/100 (+.f64 x y))","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(*.f64 1/100 (+.f64 x y))","(*.f64 1/100 y)","(*.f64 y 1/100)","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(*.f64 1/100 (+.f64 x y))","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(*.f64 1/100 (+.f64 x y))","(+.f64 (*.f64 1/100 x) (*.f64 1/100 y))","(*.f64 1/100 (+.f64 x y))"]],"stop":[["node limit",1]],"time":43.191162109375,"type":"simplify"},{"compiler":[[950,534]],"time":11.64990234375,"type":"eval"},{"alts":[["(/.f64 (*.f64 x 100) (+.f64 x y))","next",0.41796875],["(*.f64 x (/.f64 100 (+.f64 x y)))","done",0.16015625],["(*.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 100 (+.f64 x y))))","fresh",0.7323954591167754],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (+.f64 x y)) (/.f64 (cbrt.f64 x) 1/100))","fresh",0.7004053223585869],["(pow.f64 (/.f64 (+.f64 x y) (/.f64 x 1/100)) -1)","fresh",0.5773808655519749],["(/.f64 x (*.f64 (+.f64 x y) 1/100))","done",0.19140625]],"compiler":[[9,6],[9,6],[15,10],[15,10],[11,8],[9,6],[9,6],[15,10],[15,10],[11,8]],"count":[[85,6]],"kept":[{"done":[1,1],"fresh":[4,1],"new":[79,3],"picked":[1,1]}],"min-error":[0],"time":15.85498046875,"type":"prune"},{"compiler":[[18,9]],"locations":[["(/.f64 (*.f64 x 100) (+.f64 x y))",0.41012001741718873,true]],"time":3.9990234375,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (*.f64 x 100) (+.f64 x y))","y","-inf",0.180908203125],["(/.f64 (*.f64 x 100) (+.f64 x y))","y","inf",0.199951171875],["(/.f64 (*.f64 x 100) (+.f64 x y))","y","0",0.1611328125],["(/.f64 (*.f64 x 100) (+.f64 x y))","x","-inf",0.1728515625],["(/.f64 (*.f64 x 100) (+.f64 x y))","x","inf",0.194091796875],["(/.f64 (*.f64 x 100) (+.f64 x y))","x","0",0.222900390625]],"time":1.218017578125,"type":"series"},{"count":[[1,43]],"egraph":[[2,2299,10,0.021364916],[1,159,10,0.0030794579999999998],[0,7,10,0.000215375]],"inputs":[["(/.f64 (*.f64 x 100) (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 x (*.f64 (+.f64 x y) 1/100))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (*.f64 (+.f64 x y) 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 100 (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (*.f64 x (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x 100) (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (*.f64 (+.f64 x y) 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))) (pow.f64 (cbrt.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))) 2) (cbrt.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x 100)) 2) (*.f64 (cbrt.f64 (*.f64 x 100)) (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))) (sqrt.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 10 (sqrt.f64 x)) (*.f64 (*.f64 10 (sqrt.f64 x)) (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x -100) (/.f64 1 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (*.f64 x 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x 100)) 2) 1) (/.f64 (cbrt.f64 (*.f64 x 100)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 10 (sqrt.f64 x)) 1) (/.f64 (*.f64 10 (sqrt.f64 x)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 100 (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x 100)) 2) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 10 (sqrt.f64 x)) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 (*.f64 10 (sqrt.f64 x)) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (sqrt.f64 (+.f64 x y))) (/.f64 100 (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (sqrt.f64 (+.f64 x y))) (/.f64 x (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 x y))) (/.f64 (*.f64 x 100) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x 100)) 2) (sqrt.f64 (+.f64 x y))) (/.f64 (cbrt.f64 (*.f64 x 100)) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x 100) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x 100) (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/100 (/.f64 (+.f64 x y) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x 100) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 x 100) 3) (pow.f64 (+.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (*.f64 (+.f64 x y) 1/100))))))))"]],"rules":[["egg-rr",43]],"stop":[["node limit",1]],"time":40.114990234375,"type":"rewrite"},{"count":[[67,58]],"egraph":[[4,7821,378,0.024705708],[3,1390,426,0.012071916],[2,351,474,0.002665083],[1,117,516,0.000833833],[0,40,522,0.000217541]],"inputs":[["(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 x y))","(/.f64 100 (/.f64 y x))","(/.f64 x (/.f64 y 100))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (/.f64 x y)))","(fma.f64 100 (/.f64 x y) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (/.f64 x y) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100))))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) (+.f64 (/.f64 x (/.f64 y 100)) -100))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 100 (/.f64 x y) (fma.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (/.f64 x y) (fma.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (fma.f64 -100 (pow.f64 (/.f64 x y) 4) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))))","(*.f64 (fma.f64 (/.f64 x y) (/.f64 x y) 1) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (/.f64 y x))))","(+.f64 (fma.f64 -100 (/.f64 y x) 100) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x)))","(fma.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x)))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x))))","(fma.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)) (*.f64 100 (fma.f64 (/.f64 y x) (/.f64 y x) 1)))","(+.f64 100 (fma.f64 -100 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x))))))","(*.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) (fma.f64 -100 (/.f64 y x) 100))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (/.f64 y x))))","(+.f64 (fma.f64 -100 (/.f64 y x) 100) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x)))","(fma.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x)))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x))))","(fma.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)) (*.f64 100 (fma.f64 (/.f64 y x) (/.f64 y x) 1)))","(+.f64 100 (fma.f64 -100 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x))))))","(*.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) (fma.f64 -100 (/.f64 y x) 100))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (/.f64 y x))))","(+.f64 (fma.f64 -100 (/.f64 y x) 100) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x)))","(fma.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x)))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x))))","(fma.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)) (*.f64 100 (fma.f64 (/.f64 y x) (/.f64 y x) 1)))","(+.f64 100 (fma.f64 -100 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x))))))","(*.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) (fma.f64 -100 (/.f64 y x) 100))","(*.f64 100 (/.f64 x y))","(/.f64 100 (/.f64 y x))","(/.f64 x (/.f64 y 100))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (/.f64 x y)))","(fma.f64 100 (/.f64 x y) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (/.f64 x y) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100))))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) (+.f64 (/.f64 x (/.f64 y 100)) -100))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 100 (/.f64 x y) (fma.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (/.f64 x y) (fma.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (fma.f64 -100 (pow.f64 (/.f64 x y) 4) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))))","(*.f64 (fma.f64 (/.f64 x y) (/.f64 x y) 1) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100))))","(*.f64 100 (/.f64 x y))","(/.f64 100 (/.f64 y x))","(/.f64 x (/.f64 y 100))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (/.f64 x y)))","(fma.f64 100 (/.f64 x y) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (/.f64 x y) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (*.f64 (/.f64 x y) -100)))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100))))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) (+.f64 (/.f64 x (/.f64 y 100)) -100))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 100 (/.f64 x y) (fma.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (/.f64 x y) (fma.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (fma.f64 -100 (pow.f64 (/.f64 x y) 4) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))))","(*.f64 (fma.f64 (/.f64 x y) (/.f64 x y) 1) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100))))"]],"stop":[["node limit",1]],"time":40.98388671875,"type":"simplify"},{"compiler":[[760,430]],"time":8.80712890625,"type":"eval"},{"alts":[["(/.f64 (*.f64 x 100) (+.f64 x y))","done",0.41796875],["(*.f64 x (/.f64 100 (+.f64 x y)))","done",0.16015625],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x 100)) 2) 1) (/.f64 (cbrt.f64 (*.f64 x 100)) (+.f64 x y)))","fresh",0.9350803832845669],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (+.f64 x y)) (/.f64 (cbrt.f64 x) 1/100))","fresh",0.7004053223585869],["(pow.f64 (*.f64 1/100 (/.f64 (+.f64 x y) x)) -1)","next",0.3000371155519749]],"compiler":[[9,6],[9,6],[19,15],[15,10],[11,8],[19,15],[15,10],[11,8]],"count":[[64,5]],"kept":[{"done":[2,1],"fresh":[3,1],"new":[58,2],"picked":[1,1]}],"min-error":[0],"time":10.992919921875,"type":"prune"},{"compiler":[[30,12]],"locations":[["(/.f64 (+.f64 x y) x)",0.0078125,true],["(*.f64 1/100 (/.f64 (+.f64 x y) x))",0.09375,true],["(pow.f64 (*.f64 1/100 (/.f64 (+.f64 x y) x)) -1)",0.2687871155519749,true]],"time":5.494140625,"type":"localize"},{"count":[[3,72]],"series":[["(/.f64 (+.f64 x y) x)","y","-inf",0.157958984375],["(/.f64 (+.f64 x y) x)","y","inf",0.137939453125],["(/.f64 (+.f64 x y) x)","y","0",0.141845703125],["(/.f64 (+.f64 x y) x)","x","-inf",0.635009765625],["(/.f64 (+.f64 x y) x)","x","inf",0.138916015625],["(/.f64 (+.f64 x y) x)","x","0",0.14697265625],["(*.f64 1/100 (/.f64 (+.f64 x y) x))","y","-inf",0.29296875],["(*.f64 1/100 (/.f64 (+.f64 x y) x))","y","inf",0.29296875],["(*.f64 1/100 (/.f64 (+.f64 x y) x))","y","0",0.278076171875],["(*.f64 1/100 (/.f64 (+.f64 x y) x))","x","-inf",0.27099609375],["(*.f64 1/100 (/.f64 (+.f64 x y) x))","x","inf",0.303955078125],["(*.f64 1/100 (/.f64 (+.f64 x y) x))","x","0",0.260986328125],["(pow.f64 (*.f64 1/100 (/.f64 (+.f64 x y) x)) -1)","y","-inf",0.306884765625],["(pow.f64 (*.f64 1/100 (/.f64 (+.f64 x y) x)) -1)","y","inf",0.31005859375],["(pow.f64 (*.f64 1/100 (/.f64 (+.f64 x y) x)) -1)","y","0",0.245849609375],["(pow.f64 (*.f64 1/100 (/.f64 (+.f64 x y) x)) -1)","x","-inf",0.25],["(pow.f64 (*.f64 1/100 (/.f64 (+.f64 x y) x)) -1)","x","inf",0.231201171875],["(pow.f64 (*.f64 1/100 (/.f64 (+.f64 x y) x)) -1)","x","0",0.3408203125]],"time":4.958984375,"type":"series"},{"count":[[3,111]],"egraph":[[2,2787,27,0.024903543],[1,205,27,0.003985334],[0,9,30,0.000316709]],"inputs":[["(pow.f64 (*.f64 1/100 (/.f64 (+.f64 x y) x)) -1)","(*.f64 1/100 (/.f64 (+.f64 x y) x))","(/.f64 (+.f64 x y) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 100 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 100) (/.f64 x (+.f64 x y)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 100) (/.f64 x (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 100) (/.f64 x (+.f64 x y))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 100) (/.f64 x (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 100 (/.f64 x (+.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 (/.f64 x (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 100 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 100 (/.f64 x (+.f64 x y)))) (pow.f64 (cbrt.f64 (*.f64 100 (/.f64 x (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 100 (/.f64 x (+.f64 x y)))) 2) (cbrt.f64 (*.f64 100 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 10 (sqrt.f64 (/.f64 x (+.f64 x y)))) (*.f64 10 (sqrt.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 1/100 (+.f64 x y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)) -2) (cbrt.f64 (*.f64 100 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 1/100 (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 100 (/.f64 (+.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 x y)) 1/100)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 10 (sqrt.f64 (/.f64 x (+.f64 x y)))) (sqrt.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)) -2) (cbrt.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 10000 (pow.f64 (/.f64 x (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 100) (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 100 (/.f64 x (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 100 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 100 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 100 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 100 (/.f64 x (+.f64 x y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 100 (/.f64 x (+.f64 x y))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 100 (/.f64 x (+.f64 x y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 10 (sqrt.f64 (/.f64 x (+.f64 x y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)) 1) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 100 (/.f64 x (+.f64 x y)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)) -1/2) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 1/100 (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 1/100) (/.f64 (+.f64 x y) x))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 1/100) (/.f64 (+.f64 x y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 1/100) (/.f64 (+.f64 x y) x)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 1/100) (/.f64 (+.f64 x y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1/100 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x (*.f64 1/100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/100 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 1/100 (+.f64 x y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 x y)) 1/100) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/100 (neg.f64 (+.f64 x y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 1/100 (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 1/100) (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (*.f64 1/100 (+.f64 x y)) x)) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (+.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 x y) x)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 x y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (+.f64 x y) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (*.f64 (cbrt.f64 (+.f64 x y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) x)) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) x)) 2) (cbrt.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 x y) x)) (sqrt.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) 1) (/.f64 (sqrt.f64 (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (+.f64 x y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) (/.f64 (+.f64 x y) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 x y) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (+.f64 x y) 3) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 x (+.f64 x y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 x y) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 x y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 x y) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 x y) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (+.f64 x y) x) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (+.f64 x y) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (+.f64 x y) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (+.f64 x y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (+.f64 x y) x)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (+.f64 x y) x)) -1) -1))))))"]],"rules":[["egg-rr",45],["egg-rr",31],["egg-rr",35]],"stop":[["node limit",1]],"time":48.77197265625,"type":"rewrite"},{"count":[[183,135]],"egraph":[[4,7930,735,0.024393876000000002],[3,1418,735,0.012398751],[2,366,783,0.002936834],[1,128,825,0.0009277929999999999],[0,46,867,0.000259209]],"inputs":[["(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(*.f64 1/100 (/.f64 y x))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","1/100","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","1/100","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","1/100","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(*.f64 1/100 (/.f64 y x))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(*.f64 1/100 (/.f64 y x))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(/.f64 y x)","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","(/.f64 y x)","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","(/.f64 y x)","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 x y))","(/.f64 100 (/.f64 y x))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (/.f64 x y)))","(fma.f64 100 (/.f64 x y) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 (/.f64 -100 y) (/.f64 x (/.f64 y x)) (/.f64 100 (/.f64 y x)))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 -100 y) (/.f64 x (/.f64 y x))))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 100 (/.f64 x y) (fma.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (/.f64 x y) (fma.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (fma.f64 -100 (pow.f64 (/.f64 x y) 4) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (/.f64 y x))))","(+.f64 (fma.f64 -100 (/.f64 y x) 100) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x)))","(fma.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x)))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x))))","(fma.f64 100 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)) 100))","(+.f64 100 (fma.f64 -100 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (/.f64 y x))))","(+.f64 (fma.f64 -100 (/.f64 y x) 100) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x)))","(fma.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x)))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x))))","(fma.f64 100 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)) 100))","(+.f64 100 (fma.f64 -100 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (/.f64 y x))))","(+.f64 (fma.f64 -100 (/.f64 y x) 100) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x)))","(fma.f64 (fma.f64 (/.f64 y x) (/.f64 y x) 1) 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x)))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 -100 (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (/.f64 100 x) (/.f64 (*.f64 y y) x))))","(fma.f64 100 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)) 100))","(+.f64 100 (fma.f64 -100 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 -100 (*.f64 100 (/.f64 y x))))))","(*.f64 100 (/.f64 x y))","(/.f64 100 (/.f64 y x))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (/.f64 x y)))","(fma.f64 100 (/.f64 x y) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 (/.f64 -100 y) (/.f64 x (/.f64 y x)) (/.f64 100 (/.f64 y x)))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 -100 y) (/.f64 x (/.f64 y x))))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 100 (/.f64 x y) (fma.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (/.f64 x y) (fma.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (fma.f64 -100 (pow.f64 (/.f64 x y) 4) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))))","(*.f64 100 (/.f64 x y))","(/.f64 100 (/.f64 y x))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (/.f64 x y)))","(fma.f64 100 (/.f64 x y) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 (/.f64 -100 y) (/.f64 x (/.f64 y x)) (/.f64 100 (/.f64 y x)))","(*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 100 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (*.f64 -100 (*.f64 x x)) (*.f64 y y)))","(fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 -100 y) (/.f64 x (/.f64 y x))))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 100 (/.f64 x y) (fma.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (/.f64 x y) (fma.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -100 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 100 (pow.f64 (/.f64 x y) 3) (fma.f64 -100 (pow.f64 (/.f64 x y) 4) (*.f64 (/.f64 x y) (+.f64 100 (*.f64 (/.f64 x y) -100)))))","(*.f64 1/100 (/.f64 y x))","(*.f64 (/.f64 y x) 1/100)","(*.f64 y (/.f64 1/100 x))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","1/100","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","1/100","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","1/100","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(*.f64 1/100 (/.f64 y x))","(*.f64 (/.f64 y x) 1/100)","(*.f64 y (/.f64 1/100 x))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(*.f64 1/100 (/.f64 y x))","(*.f64 (/.f64 y x) 1/100)","(*.f64 y (/.f64 1/100 x))","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(+.f64 1/100 (*.f64 1/100 (/.f64 y x)))","(+.f64 1/100 (*.f64 (/.f64 y x) 1/100))","(fma.f64 (/.f64 y x) 1/100 1/100)","(/.f64 y x)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","(/.f64 y x)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(/.f64 y x)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)"]],"stop":[["node limit",1]],"time":44.9150390625,"type":"simplify"},{"compiler":[[1769,1012]],"time":21.117919921875,"type":"eval"},{"alts":[["(/.f64 (*.f64 x 100) (+.f64 x y))","done",0.41796875],["(*.f64 x (/.f64 100 (+.f64 x y)))","done",0.16015625],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (+.f64 x y)) (/.f64 (cbrt.f64 x) 1/100))","fresh",0.7004053223585869],["(pow.f64 (*.f64 1/100 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (+.f64 x y) x)))) -1)","fresh",0.5134123597630255],["(pow.f64 (*.f64 1/100 (/.f64 (+.f64 x y) x)) -1)","done",0.3000371155519749]],"compiler":[[9,6],[9,6],[15,10],[24,17],[11,8]],"count":[[140,5]],"kept":[{"done":[2,2],"fresh":[2,1],"new":[135,1],"picked":[1,1]}],"min-error":[0],"time":31.505126953125,"type":"prune"},{"accuracy":[0.16015625],"baseline":[0.16015625],"branch":[["x",0.16015625,1],["y",0.16015625,1],["(/.f64 (*.f64 x 100) (+.f64 x y))",0.16015625,1],["(/.f64 (*.f64 x 100) (+.f64 x y))",0.16015625,1]],"compiler":[[3,2],[3,2],[9,6],[9,6],[147,79]],"count":[[13,1]],"inputs":[["(pow.f64 (*.f64 1/100 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (+.f64 x y) x)))) -1)","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x 100)) 2) 1) (/.f64 (cbrt.f64 (*.f64 x 100)) (+.f64 x y)))","(pow.f64 (*.f64 1/100 (/.f64 (+.f64 x y) x)) -1)","(*.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 100 (+.f64 x y))))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (+.f64 x y)) (/.f64 (cbrt.f64 x) 1/100))","(pow.f64 (/.f64 (+.f64 x y) (/.f64 x 1/100)) -1)","(/.f64 (*.f64 x 100) (+.f64 x y))","(*.f64 x (pow.f64 (cbrt.f64 (/.f64 100 (+.f64 x y))) 3))","(/.f64 (/.f64 (*.f64 x 100) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (+.f64 x y)))","(/.f64 1 (/.f64 (+.f64 x y) (*.f64 x 100)))","(/.f64 x (*.f64 (+.f64 x y) 1/100))","(*.f64 x (/.f64 100 (+.f64 x y)))","(/.f64 (*.f64 x 100) (+.f64 x y))"]],"link":["."],"name":["Development.Shake.Progress:message from shake-0.15.5"],"oracle":[1.639246991238133],"outputs":[["(*.f64 x (/.f64 100 (+.f64 x y)))"]],"time":21.73779296875,"times":[["x",5.412109375],["y",5.4931640625],["(/.f64 (*.f64 x 100) (+.f64 x y))",3.994140625],["(/.f64 (*.f64 x 100) (+.f64 x y))",4.287109375]],"type":"regimes"},{"compiler":[[9,6]],"egraph":[[1,9,10,2.6375e-5],[0,7,10,1.6209e-5]],"inputs":[["(*.f64 x (/.f64 100 (+.f64 x y)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 x (/.f64 100 (+.f64 x y)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.216064453125,"type":"simplify"},{"time":0.011962890625,"type":"soundness"},{"compiler":[[9,6]],"remove-preprocessing":[[]],"time":7.6220703125,"type":"end"}]