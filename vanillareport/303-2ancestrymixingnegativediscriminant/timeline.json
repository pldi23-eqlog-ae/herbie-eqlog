[{"compiler":[[19,17]],"method":["search"],"sampling":[[12,0.46829234808683395,0.0990243194391951,0.43268333247397095],[11,0.46829234808683395,0.10634138737805188,0.42536626453511417],[10,0.43707285821437836,0.193170593585819,0.36975654819980264],[9,0.43707285821437836,0.20682912040501833,0.3560980213806033],[8,0.37463387846946716,0.36682900600135326,0.2585371155291796],[7,0.37463387846946716,0.39024362340569496,0.23512249812483788],[6,0.24975591897964478,0.6556092873215675,0.09463479369878769],[5,0.24975591897964478,0.6868287771940231,0.06341530382633209],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":47.1220703125,"type":"analyze"},{"outcomes":[["body",256,"invalid",73.849609375,1175],["body",256,"valid",568.821533203125,8256]],"time":651.4599609375,"type":"sample"},{"compiler":[[18,16]],"egraph":[[0,2,2,1.291e-6],[8,176,42,0.002368042],[7,174,42,0.002024625],[6,140,42,0.001663],[5,116,42,0.001225792],[4,93,42,0.0009085830000000001],[3,79,42,0.0006492500000000001],[2,59,42,0.00042500000000000003],[1,39,46,0.000250292],[0,22,52,0.000104]],"inputs":[["0","1"],["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 h) g)) 3))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (+.f64 (/.f64 2 (/.f64 3 (PI.f64))) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (+.f64 (*.f64 2/3 (PI.f64)) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (fma.f64 2/3 (PI.f64) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 h) g)) 3))))","(*.f64 2 (cos.f64 (+.f64 (/.f64 2 (/.f64 3 (PI.f64))) (/.f64 (acos.f64 (/.f64 (neg.f64 h) g)) 3))))","(*.f64 2 (cos.f64 (+.f64 (*.f64 2/3 (PI.f64)) (/.f64 (acos.f64 (/.f64 (neg.f64 h) g)) 3))))","(*.f64 2 (cos.f64 (fma.f64 2/3 (PI.f64) (/.f64 (acos.f64 (/.f64 (neg.f64 h) g)) 3))))","(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 h) g)) 3))))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":25.73095703125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[7,98,21,0.001224958],[6,82,21,0.001023875],[5,70,21,0.000781375],[4,58,21,0.000594458],[3,51,21,0.00043962499999999997],[2,40,21,0.00030037499999999997],[1,26,23,0.000183667],[0,15,26,7.4708e-5]],"inputs":[["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (+.f64 (/.f64 2 (/.f64 3 (PI.f64))) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (+.f64 (*.f64 2/3 (PI.f64)) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (fma.f64 2/3 (PI.f64) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))"]],"stop":[["saturated",1]],"time":11.7041015625,"type":"simplify"},{"compiler":[[31,23]],"time":0.528076171875,"type":"eval"},{"alts":[["(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","next",0.9889450195368841]],"compiler":[[15,13],[15,13]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.9889450195368841],"time":0.989990234375,"type":"prune"},{"compiler":[[60,27]],"locations":[["(fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))",0.0234375,true],["(acos.f64 (/.f64 (neg.f64 g) h))",0.0234375,true],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)",0.97265625,true],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))",0.9765625,true]],"time":13.18896484375,"type":"localize"},{"count":[[4,96]],"series":[["(fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","h","-inf",0.18310546875],["(fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","h","inf",0.156982421875],["(fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","h","0",0.18408203125],["(fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","g","-inf",0.156982421875],["(fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","g","inf",0.157958984375],["(fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","g","0",0.197021484375],["(acos.f64 (/.f64 (neg.f64 g) h))","h","-inf",0.13916015625],["(acos.f64 (/.f64 (neg.f64 g) h))","h","inf",0.14208984375],["(acos.f64 (/.f64 (neg.f64 g) h))","h","0",0.159912109375],["(acos.f64 (/.f64 (neg.f64 g) h))","g","-inf",0.140869140625],["(acos.f64 (/.f64 (neg.f64 g) h))","g","inf",0.16796875],["(acos.f64 (/.f64 (neg.f64 g) h))","g","0",0.14404296875],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","h","-inf",0.14501953125],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","h","inf",0.1728515625],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","h","0",0.14404296875],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","g","-inf",0.14794921875],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","g","inf",0.176025390625],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","g","0",0.156005859375],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","h","-inf",0.970947265625],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","h","inf",0.966064453125],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","h","0",0.48193359375],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","g","-inf",0.655029296875],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","g","inf",0.839111328125],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","g","0",0.969970703125]],"time":8.06298828125,"type":"series"},{"count":[[4,156]],"egraph":[[2,3357,45,0.026249876000000002],[1,261,45,0.004900542],[0,12,53,0.000402292]],"inputs":[["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","(acos.f64 (/.f64 (neg.f64 g) h))","(fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) (neg.f64 (*.f64 (sin.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) (sin.f64 (*.f64 (PI.f64) 2/3))))) (fma.f64 (neg.f64 (sin.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) (sin.f64 (*.f64 (PI.f64) 2/3)) (*.f64 (sin.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) (sin.f64 (*.f64 (PI.f64) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) (*.f64 (sin.f64 (*.f64 (PI.f64) 2/3)) (sin.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) (cos.f64 (*.f64 (PI.f64) 2/3))) (*.f64 (sin.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) (sin.f64 (*.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) 2/3) 1)) (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) 2/3) 1)) (sin.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))) (pow.f64 (cbrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))) 2) (cbrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))) (sqrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) (neg.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) 2/3)) (sin.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (acos.f64 (/.f64 g h))))) 2)) (log.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (acos.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (cbrt.f64 (exp.f64 (acos.f64 (/.f64 g h)))))) (log.f64 (sqrt.f64 (cbrt.f64 (exp.f64 (acos.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (PI.f64) 1/2) 3) (/.f64 (asin.f64 (/.f64 g h)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (acos.f64 (/.f64 g h)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) (pow.f64 (cbrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) 2) (cbrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) (sqrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (acos.f64 (/.f64 g h))) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2) 1/9) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 3 (acos.f64 (/.f64 g h))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 3 (acos.f64 (/.f64 g h))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (acos.f64 (/.f64 g h)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2) 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (cbrt.f64 (exp.f64 (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 3 (acos.f64 (/.f64 g h)))) -1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 g h)) (fma.f64 -1 (acos.f64 (/.f64 g h)) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 g h)) (fma.f64 (neg.f64 (acos.f64 (/.f64 g h))) 1 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 g h)) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (cbrt.f64 (acos.f64 (/.f64 g h))) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 g h)) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 g h)) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (sqrt.f64 (acos.f64 (/.f64 g h))) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 g h)) (fma.f64 (neg.f64 (sqrt.f64 (asin.f64 (/.f64 g h)))) (sqrt.f64 (asin.f64 (/.f64 g h))) (asin.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (PI.f64) 1/2 (neg.f64 (*.f64 (asin.f64 (/.f64 g h)) 1))) (fma.f64 (asin.f64 (/.f64 g h)) 1 (*.f64 (asin.f64 (/.f64 g h)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (PI.f64) 1/2) (neg.f64 (*.f64 (asin.f64 (/.f64 g h)) 1))) (fma.f64 (asin.f64 (/.f64 g h)) 1 (*.f64 (asin.f64 (/.f64 g h)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2) (cbrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (*.f64 (asin.f64 (/.f64 g h)) 1))) (fma.f64 (asin.f64 (/.f64 g h)) 1 (*.f64 (asin.f64 (/.f64 g h)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (*.f64 (asin.f64 (/.f64 g h)) 1))) (fma.f64 (asin.f64 (/.f64 g h)) 1 (*.f64 (asin.f64 (/.f64 g h)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (PI.f64) 1/2 (neg.f64 (*.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (PI.f64) 1/2) (neg.f64 (*.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2) (cbrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (*.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (*.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 g h))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (acos.f64 (/.f64 g h)))) 2)) (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (acos.f64 (/.f64 g h))))) (log.f64 (sqrt.f64 (exp.f64 (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (PI.f64) (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (acos.f64 (/.f64 g h)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (acos.f64 (/.f64 g h)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2) (cbrt.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (sqrt.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 g h)) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 g h)) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (pow.f64 (asin.f64 (/.f64 g h)) 2)) (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (acos.f64 (/.f64 g h)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (acos.f64 (/.f64 g h)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (PI.f64))) (exp.f64 (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (PI.f64)) (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (PI.f64))) (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (PI.f64) 1/2)) (exp.f64 (asin.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (acos.f64 (/.f64 g h)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (acos.f64 (/.f64 g h))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (acos.f64 (/.f64 g h)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 1 (neg.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 1/2 (asin.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (PI.f64) (neg.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (PI.f64)) (sqrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2) (cbrt.f64 (*.f64 (PI.f64) 1/2)) (asin.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (*.f64 (PI.f64) 1/2)) (asin.f64 (/.f64 g h)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 2/3) (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) 2/3) 1) (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) (pow.f64 (cbrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 2) (cbrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) (sqrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (PI.f64) 2/3) 3) (pow.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 2/3) 2) (-.f64 (*.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2) 1/9) (*.f64 (*.f64 (PI.f64) 2/3) (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 2/3) 2) (*.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2) 1/9)) (-.f64 (*.f64 (PI.f64) 2/3) (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (cbrt.f64 (exp.f64 (acos.f64 (/.f64 g h)))) (exp.f64 (*.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) (exp.f64 (*.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (PI.f64) 2/3)) (+.f64 1 (expm1.f64 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (/.f64 g h)) 1/3)))) 2))))))"]],"rules":[["egg-rr",33],["egg-rr",57],["egg-rr",35],["egg-rr",31]],"stop":[["node limit",1]],"time":57.138916015625,"type":"rewrite"},{"count":[[252,164]],"egraph":[[9,92,1272,0.0025132500000000003],[8,78,1272,0.002229125],[7,70,1272,0.001873125],[6,60,1272,0.001577625],[5,52,1272,0.001297833],[4,44,1272,0.00103425],[3,38,1272,0.000799583],[2,32,1272,0.000578375],[1,22,1272,0.00037549999999999997],[0,14,1272,0.000176042]],"inputs":[["(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (/.f64 (neg.f64 g) h))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (acos.f64 (/.f64 (neg.f64 g) h)) (*.f64 2/3 (PI.f64)))"]],"stop":[["saturated",1]],"time":41.66796875,"type":"simplify"},{"compiler":[[3230,1955]],"time":37.77001953125,"type":"eval"},{"alts":[["(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3))))","next",0.9765625]],"compiler":[[22,17],[22,17]],"count":[[165,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[164,1],"picked":[1,0]}],"min-error":[0.9765625],"time":53.4150390625,"type":"prune"},{"compiler":[[107,45]],"locations":[["(fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h))))",0.96875,true],["(/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)",0.97265625,true],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)))",0.9765625,true],["(pow.f64 (cbrt.f64 (PI.f64)) 2)",1.0,true]],"time":23.93115234375,"type":"localize"},{"count":[[4,72]],"series":[["(fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h))))","h","-inf",0.15478515625],["(fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h))))","h","inf",0.172119140625],["(fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h))))","h","0",0.15380859375],["(fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h))))","g","-inf",0.156005859375],["(fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h))))","g","inf",0.172119140625],["(fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h))))","g","0",0.1611328125],["(/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)","h","-inf",0.177978515625],["(/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)","h","inf",0.161865234375],["(/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)","h","0",0.16015625],["(/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)","g","-inf",0.17919921875],["(/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)","g","inf",0.16796875],["(/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)","g","0",0.18701171875],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)))","h","-inf",0.7080078125],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)))","h","inf",1.509033203125],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)))","h","0",1.2529296875],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)))","g","-inf",0.7548828125],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)))","g","inf",0.73681640625],["(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)))","g","0",2.135986328125]],"time":9.388916015625,"type":"series"},{"count":[[4,156]],"egraph":[[2,4005,50,0.030118457999999997],[1,340,50,0.006223917],[0,16,56,0.000511]],"inputs":[["(pow.f64 (cbrt.f64 (PI.f64)) 2)","(cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)))","(/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3)","(fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)) (*.f64 (cbrt.f64 (cbrt.f64 (PI.f64))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 4)) (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 1/6) (*.f64 (pow.f64 (PI.f64) 1/6) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (PI.f64)) (pow.f64 (PI.f64) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2))) (cbrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (PI.f64) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (PI.f64))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) (neg.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) (sin.f64 (*.f64 (PI.f64) 2/3))))) (fma.f64 (neg.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))) (sin.f64 (*.f64 (PI.f64) 2/3)) (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) (sin.f64 (*.f64 (PI.f64) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))) (*.f64 (sin.f64 (*.f64 (PI.f64) 2/3)) (sin.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) (cos.f64 (*.f64 (PI.f64) 2/3))) (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) (sin.f64 (*.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) 2/3) 1)) (cos.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) 2/3) 1)) (sin.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))) (pow.f64 (cbrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))) 2) (cbrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))) (sqrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) (neg.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) 2/3)) (sin.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))))) 2)) (log.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (cbrt.f64 (exp.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))))))) (log.f64 (sqrt.f64 (cbrt.f64 (exp.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) (pow.f64 (cbrt.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) 2) (cbrt.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) (sqrt.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (PI.f64)) (acos.f64 (/.f64 g h))) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 3 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 3 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) -3))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 2) 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (cbrt.f64 (exp.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (PI.f64) (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 g h)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) (fma.f64 -1 (acos.f64 (/.f64 g h)) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) (fma.f64 1 (acos.f64 (/.f64 g h)) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) (fma.f64 (acos.f64 (/.f64 g h)) 1 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (cbrt.f64 (acos.f64 (/.f64 g h))) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (sqrt.f64 (acos.f64 (/.f64 g h))) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h))))) (sqrt.f64 (acos.f64 (/.f64 g h))) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) (fma.f64 (acos.f64 (/.f64 g h)) -1 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (PI.f64) 1 (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h))))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2) (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h))))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2) (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h))))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2) (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (PI.f64) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h))))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2) (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)) (cbrt.f64 (PI.f64))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h))))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2) (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (PI.f64)) (sqrt.f64 (PI.f64)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h))))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2) (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2))) (cbrt.f64 (cbrt.f64 (PI.f64))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h))))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2) (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (pow.f64 (PI.f64) 1/6)) (pow.f64 (PI.f64) 1/6) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h))))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2) (*.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (PI.f64) 1 (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (PI.f64) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)) (cbrt.f64 (PI.f64))) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (PI.f64)) (sqrt.f64 (PI.f64)) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2))) (cbrt.f64 (cbrt.f64 (PI.f64))) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (pow.f64 (PI.f64) 1/6)) (pow.f64 (PI.f64) 1/6) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (PI.f64) 1 (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (PI.f64) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)) (cbrt.f64 (PI.f64))) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (PI.f64)) (sqrt.f64 (PI.f64)) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2))) (cbrt.f64 (cbrt.f64 (PI.f64))) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (pow.f64 (PI.f64) 1/6)) (pow.f64 (PI.f64) 1/6) (neg.f64 (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)) (*.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (PI.f64) 1 (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (PI.f64) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)) (cbrt.f64 (PI.f64))) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (PI.f64)) (sqrt.f64 (PI.f64)) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2))) (cbrt.f64 (cbrt.f64 (PI.f64))) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (pow.f64 (PI.f64) 1/6)) (pow.f64 (PI.f64) 1/6) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))))) 2)) (*.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (PI.f64) (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (PI.f64) 0) (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))) (cbrt.f64 (pow.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 2)) (cbrt.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))) (sqrt.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (PI.f64) 3) (pow.f64 (acos.f64 (/.f64 g h)) 3)) (fma.f64 (PI.f64) (PI.f64) (-.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2) (*.f64 (PI.f64) (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (PI.f64) (PI.f64) (pow.f64 (acos.f64 (/.f64 g h)) 2)) (+.f64 (PI.f64) (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (PI.f64)) (exp.f64 (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (PI.f64))) (exp.f64 (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (PI.f64)) (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (PI.f64))) (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (PI.f64))) (exp.f64 (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (PI.f64)) (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (PI.f64))) (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (acos.f64 (/.f64 g h))) (exp.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h)))) (exp.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (acos.f64 (/.f64 g h))) (+.f64 1 (expm1.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h)))) (+.f64 1 (expm1.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (PI.f64) (acos.f64 (/.f64 g h)))) 1))))))"]],"rules":[["egg-rr",79],["egg-rr",29],["egg-rr",27],["egg-rr",21]],"stop":[["node limit",1]],"time":66.97705078125,"type":"rewrite"},{"count":[[228,161]],"egraph":[[7,3999,864,0.024521833],[6,954,864,0.009867917],[5,280,864,0.003328333],[4,163,864,0.001771291],[3,98,912,0.001145957],[2,56,1032,0.0007536660000000001],[1,34,1032,0.000454166],[0,16,1248,0.000228583]],"inputs":[["(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(cos.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (fma.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3)))","(cos.f64 (+.f64 (PI.f64) (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(neg.f64 (cos.f64 (*.f64 (acos.f64 (/.f64 g h)) -1/3)))","(cos.f64 (fma.f64 (acos.f64 (/.f64 g h)) -1/3 (PI.f64)))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h))))","(*.f64 1/3 (-.f64 (PI.f64) (acos.f64 (/.f64 g h))))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 (pow.f64 1 1/3) (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (*.f64 1 (PI.f64)) (acos.f64 (/.f64 g h)))","(-.f64 (PI.f64) (acos.f64 (/.f64 g h)))"]],"stop":[["node limit",1]],"time":55.091796875,"type":"simplify"},{"compiler":[[4725,2267]],"time":43.133056640625,"type":"eval"},{"alts":[["(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))))","next",0.01953125],["(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3))))","done",0.9765625]],"compiler":[[59,29],[22,17],[59,29]],"count":[[162,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[161,1],"picked":[1,1]}],"min-error":[0],"time":23.30517578125,"type":"prune"},{"compiler":[[381,124]],"locations":[["(fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))",0.96875,true],["(*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))",0.9765625,true],["(pow.f64 (cbrt.f64 (PI.f64)) 2)",1.0,false],["(fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))",61.923679002965976,true]],"time":54.89892578125,"type":"localize"},{"count":[[3,72]],"series":[["(fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))","h","-inf",0.451171875],["(fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))","h","inf",2.058837890625],["(fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))","h","0",0.369873046875],["(fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))","g","-inf",0.449951171875],["(fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))","g","inf",0.468017578125],["(fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))","g","0",0.60791015625],["(*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))","h","-inf",0.14599609375],["(*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))","h","inf",0.162109375],["(*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))","h","0",0.14404296875],["(*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))","g","-inf",0.148193359375],["(*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))","g","inf",0.1650390625],["(*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))","g","0",0.153076171875],["(fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))","h","-inf",0.735107421875],["(fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))","h","inf",0.762939453125],["(fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))","h","0",0.43994140625],["(fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))","g","-inf",0.985107421875],["(fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))","g","inf",0.719970703125],["(fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))","g","0",0.795166015625]],"time":10.119873046875,"type":"series"},{"count":[[3,89]],"egraph":[[2,5674,42,0.035515415999999994],[1,474,44,0.008075790999999999],[0,22,149,0.000635208]],"inputs":[["(fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))","(*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))))","(fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 g h)) (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (acos.f64 (/.f64 g h)) (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (acos.f64 (/.f64 g h)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (acos.f64 (/.f64 g h)) 0))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (+.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (sqrt.f64 (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (acos.f64 (/.f64 g h)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (acos.f64 (/.f64 g h)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (acos.f64 (/.f64 g h)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)) (pow.f64 (cbrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)) 2) (cbrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)) (sqrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 0 (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (acos.f64 (/.f64 g h)) 3) (pow.f64 (acos.f64 (/.f64 g h)) 3)) (+.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2) (-.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2) (pow.f64 (acos.f64 (/.f64 g h)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2) (pow.f64 (acos.f64 (/.f64 g h)) 2)) (*.f64 (acos.f64 (/.f64 g h)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (acos.f64 (/.f64 g h)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (acos.f64 (/.f64 g h)) 0) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (acos.f64 (/.f64 g h)) 0) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (acos.f64 (/.f64 g h)) 0))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (acos.f64 (/.f64 g h))) (exp.f64 (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h)))) (exp.f64 (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (acos.f64 (/.f64 g h))) (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h)))) (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h)))) (exp.f64 (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (acos.f64 (/.f64 g h))) (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h)))) (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (acos.f64 (/.f64 g h)) 0) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (acos.f64 (/.f64 g h)) 0)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 1/2) (neg.f64 (asin.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (PI.f64) (acos.f64 (/.f64 g (neg.f64 h))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (acos.f64 (/.f64 g h)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (acos.f64 (/.f64 g h)) 3)) (+.f64 0 (+.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2) (*.f64 (acos.f64 (/.f64 g h)) 0))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 g h)) 3)) (fma.f64 (*.f64 (PI.f64) 1/2) (*.f64 (PI.f64) 1/2) (fma.f64 (asin.f64 (/.f64 g h)) (asin.f64 (/.f64 g h)) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (acos.f64 (/.f64 g h)) 2)) (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (PI.f64) 1/2) (*.f64 (PI.f64) 1/2)) (*.f64 (asin.f64 (/.f64 g h)) (asin.f64 (/.f64 g h)))) (fma.f64 (PI.f64) 1/2 (asin.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (acos.f64 (/.f64 g h)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (acos.f64 (/.f64 g h)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (acos.f64 (/.f64 g h))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (acos.f64 (/.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (acos.f64 (/.f64 g h)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (acos.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (acos.f64 (/.f64 g h)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x acos.f64 (/.f64 g h))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (acos.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (acos.f64 (/.f64 g h))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 1/2 (neg.f64 (asin.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (PI.f64) 1/2) (neg.f64 (asin.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) (cbrt.f64 (*.f64 (PI.f64) 1/2))) (cbrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (asin.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (asin.f64 (/.f64 g h))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 2/3) (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) 2/3) 1) (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))) (pow.f64 (cbrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))) 2) (cbrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))) (sqrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (PI.f64) 2/3) 3) (pow.f64 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3) 3)) (fma.f64 (*.f64 (PI.f64) 2/3) (*.f64 (PI.f64) 2/3) (fma.f64 (pow.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 2) 1/9 (neg.f64 (*.f64 (*.f64 (PI.f64) 2/3) (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (PI.f64) 2/3) (*.f64 (PI.f64) 2/3)) (*.f64 (pow.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 2) 1/9)) (-.f64 (*.f64 (PI.f64) 2/3) (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))))) (exp.f64 (*.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))) (exp.f64 (*.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (PI.f64) 2/3)) (+.f64 1 (expm1.f64 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (PI.f64) 2/3 (*.f64 (+.f64 (fma.f64 (acos.f64 (/.f64 g h)) 0 (PI.f64)) (acos.f64 (/.f64 g h))) 1/3))) 1))))))"]],"rules":[["egg-rr",26],["egg-rr",30],["egg-rr",33]],"stop":[["node limit",1]],"time":60.585205078125,"type":"rewrite"},{"count":[[161,94]],"egraph":[[9,6676,480,0.039678541],[8,4341,480,0.027657915999999998],[7,2746,480,0.017871999],[6,2118,480,0.009505833],[5,503,480,0.004235041],[4,171,480,0.001579083],[3,124,480,0.000954333],[2,93,480,0.000656958],[1,44,648,0.000411333],[0,18,912,0.00018525]],"inputs":[["(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(+.f64 (acos.f64 (/.f64 g h)) (*.f64 -1 (acos.f64 (/.f64 g h))))","(*.f64 0 (acos.f64 (/.f64 g h)))","0","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(*.f64 -1 (acos.f64 (/.f64 g h)))","(neg.f64 (acos.f64 (/.f64 g h)))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))","(+.f64 (*.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 (pow.f64 1 1/3) (PI.f64)))) (*.f64 2/3 (PI.f64)))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (*.f64 1 (PI.f64))) (*.f64 (PI.f64) 2/3))","(fma.f64 1/3 (+.f64 (acos.f64 (/.f64 g h)) (PI.f64)) (*.f64 (PI.f64) 2/3))","(fma.f64 (acos.f64 (/.f64 g h)) 1/3 (PI.f64))"]],"stop":[["node limit",1]],"time":64.35498046875,"type":"simplify"},{"compiler":[[6834,2981]],"time":52.2119140625,"type":"eval"},{"alts":[["(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))))","done",0.01953125],["(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3))))","done",0.9765625]],"compiler":[[59,29],[22,17]],"count":[[148,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[146,0],"picked":[1,1]}],"min-error":[0],"time":25.55908203125,"type":"prune"},{"accuracy":[0.01953125],"baseline":[0.01953125],"branch":[["g",0.01953125,1],["h",0.01953125,1],["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))",0.01953125,1],["(cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))",0.01953125,1],["(+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))",0.01953125,1],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)",0.01953125,1],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)",0.01953125,1],["(acos.f64 (/.f64 (neg.f64 g) h))",0.01953125,1],["(acos.f64 (/.f64 (neg.f64 g) h))",0.01953125,1],["(/.f64 (neg.f64 g) h)",0.01953125,1],["(/.f64 (neg.f64 g) h)",0.01953125,1],["(neg.f64 g)",0.01953125,1],["(neg.f64 g)",0.01953125,1]],"compiler":[[3,2],[3,2],[18,16],[16,14],[15,13],[9,7],[9,7],[7,5],[7,5],[6,4],[6,4],[4,3],[4,3],[108,60]],"count":[[4,1]],"inputs":[["(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))))","(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (cbrt.f64 (PI.f64)) (neg.f64 (acos.f64 (/.f64 g h)))) 3))))","(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))"]],"link":["."],"name":["2-ancestry mixing, negative discriminant"],"oracle":[1.0052337890737681],"outputs":[["(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))))"]],"time":33.98681640625,"times":[["g",3.174072265625],["h",3.22412109375],["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))",1.9921875],["(cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))",2.06884765625],["(+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))",1.8779296875],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)",1.758056640625],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)",1.7568359375],["(acos.f64 (/.f64 (neg.f64 g) h))",1.725830078125],["(acos.f64 (/.f64 (neg.f64 g) h))",1.735107421875],["(/.f64 (neg.f64 g) h)",2.9580078125],["(/.f64 (neg.f64 g) h)",2.862060546875],["(neg.f64 g)",3.19091796875],["(neg.f64 g)",3.239990234375]],"type":"regimes"},{"compiler":[[54,22]],"egraph":[[4,75,88,0.000502375],[3,67,88,0.00037437500000000003],[2,48,88,0.000247167],[1,36,88,0.000127833],[0,24,92,5.325e-5]],"inputs":[["(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (neg.f64 (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (*.f64 -1 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))))","(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h))))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))))","(*.f64 2 (cos.f64 (fma.f64 (PI.f64) 2/3 (/.f64 (+.f64 (fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (PI.f64)) 2) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (sqrt.f64 (acos.f64 (/.f64 g h))))) (fma.f64 (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h)))) (*.f64 (sqrt.f64 (acos.f64 (/.f64 g h))) (neg.f64 (sqrt.f64 (acos.f64 (/.f64 g h))))))) 3))))"]],"stop":[["done",1],["saturated",1]],"time":9.9169921875,"type":"simplify"},{"time":0.01416015625,"type":"soundness"},{"compiler":[[54,22]],"remove-preprocessing":[[]],"time":14.612060546875,"type":"end"}]