[{"compiler":[[10,7]],"method":["search"],"sampling":[[12,0.6731702503748238,0.09170725150033832,0.23512249812483788],[11,0.6595117235556245,0.12097552325576544,0.21951275318861008],[10,0.6009751800447702,0.17951206676661968,0.21951275318861008],[9,0.5775605626404285,0.23414617404341698,0.18829326331615448],[8,0.46829234808683395,0.34341438859701157,0.18829326331615448],[7,0.43707285821437836,0.43707285821437836,0.1258542835712433],[6,0.24975591897964478,0.6243897974491119,0.1258542835712433],[5,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":22.844970703125,"type":"analyze"},{"outcomes":[["body",256,"invalid",6.02734375,186],["body",256,"valid",268.078857421875,8256]],"time":281.678955078125,"type":"sample"},{"compiler":[[9,6]],"egraph":[[0,2,2,1.333e-6],[4,71,20,0.000599751],[3,70,20,0.00044145900000000006],[2,50,20,0.00028041700000000004],[1,22,20,0.000131917],[0,10,20,5.2959e-5]],"inputs":[["0","1"],["(*.f64 (*.f64 (*.f64 x 3) x) y)","(*.f64 (*.f64 (*.f64 y 3) y) x)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (*.f64 (*.f64 x 3) x) y)","(*.f64 (*.f64 x 3) (*.f64 x y))","(*.f64 x (*.f64 3 (*.f64 x y)))","(*.f64 3 (*.f64 (*.f64 x x) y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 (*.f64 (*.f64 y 3) y) x)","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 x (*.f64 3 (*.f64 y y)))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":23.257080078125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[4,48,10,0.00037575],[3,45,10,0.000279833],[2,27,10,0.00017525],[1,13,10,8.7666e-5],[0,7,10,3.7958e-5]],"inputs":[["(*.f64 (*.f64 (*.f64 x 3) x) y)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 (*.f64 x 3) x) y)","(*.f64 (*.f64 x 3) (*.f64 x y))","(*.f64 x (*.f64 3 (*.f64 x y)))","(*.f64 x (*.f64 x (*.f64 3 y)))"]],"stop":[["saturated",1]],"time":10.698974609375,"type":"simplify"},{"compiler":[[16,10]],"time":0.318115234375,"type":"eval"},{"alts":[["(*.f64 x (*.f64 x (*.f64 3 y)))","next",0.2265625],["(*.f64 (*.f64 (*.f64 x 3) x) y)","fresh",8.48386268605504]],"compiler":[[9,6],[9,6],[9,6],[9,6]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.1171875],"time":1.160888671875,"type":"prune"},{"compiler":[[20,12]],"locations":[["(*.f64 x (*.f64 3 y))",0.1875,true],["(*.f64 x (*.f64 x (*.f64 3 y)))",0.1875,true]],"time":4.986083984375,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 x (*.f64 3 y))","y","-inf",0.23291015625],["(*.f64 x (*.f64 3 y))","y","inf",0.40087890625],["(*.f64 x (*.f64 3 y))","y","0",0.756103515625],["(*.f64 x (*.f64 3 y))","x","-inf",0.239013671875],["(*.f64 x (*.f64 3 y))","x","inf",0.322021484375],["(*.f64 x (*.f64 3 y))","x","0",0.43994140625],["(*.f64 x (*.f64 x (*.f64 3 y)))","y","-inf",0.2919921875],["(*.f64 x (*.f64 x (*.f64 3 y)))","y","inf",0.43701171875],["(*.f64 x (*.f64 x (*.f64 3 y)))","y","0",0.745849609375],["(*.f64 x (*.f64 x (*.f64 3 y)))","x","-inf",0.2109375],["(*.f64 x (*.f64 x (*.f64 3 y)))","x","inf",0.494140625],["(*.f64 x (*.f64 x (*.f64 3 y)))","x","0",0.6318359375]],"time":5.344970703125,"type":"series"},{"count":[[2,26]],"egraph":[[2,1673,17,0.016875542],[1,142,17,0.002285583],[0,7,17,0.000189875]],"inputs":[["(*.f64 x (*.f64 x (*.f64 3 y)))","(*.f64 x (*.f64 3 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 x (*.f64 3 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (sqrt.f64 (*.f64 3 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (*.f64 x x)) (*.f64 3 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (*.f64 x (*.f64 3 y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 x (*.f64 3 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 x (*.f64 3 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 x (*.f64 3 y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 3 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 3 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (*.f64 3 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 y) 3) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (*.f64 3 y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 3 y) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 3 y))))))))"]],"rules":[["egg-rr",13],["egg-rr",13]],"stop":[["node limit",1]],"time":35.927001953125,"type":"rewrite"},{"count":[[74,30]],"egraph":[[22,6586,408,0.108128585],[21,6552,408,0.09163721],[20,6476,408,0.083452585],[19,6166,408,0.07477771],[18,5852,408,0.066587418],[17,5424,408,0.059158542999999994],[16,4562,408,0.051331459999999995],[15,3854,408,0.042762877],[14,3267,408,0.035789459999999995],[13,2810,408,0.029839459999999998],[12,2440,408,0.024900834999999996],[11,2127,408,0.020532251999999997],[10,1886,408,0.016808668],[9,1714,408,0.013383668],[8,1579,408,0.010557584],[7,1479,408,0.008148625],[6,1065,408,0.005645959],[5,823,408,0.0036905419999999998],[4,232,408,0.001989626],[3,87,408,0.000794792],[2,45,408,0.000411584],[1,22,408,0.000215876],[0,10,408,8.7167e-5]],"inputs":[["(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 (*.f64 3 y) (*.f64 x x))","(*.f64 (*.f64 x x) (*.f64 3 y))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 y (*.f64 3 x))"]],"stop":[["node limit",1]],"time":137.098876953125,"type":"simplify"},{"compiler":[[290,202]],"time":4.2919921875,"type":"eval"},{"alts":[["(*.f64 3 (*.f64 y (pow.f64 x 2)))","fresh",8.56772871134753],["(*.f64 x (*.f64 x (*.f64 3 y)))","done",0.2265625],["(*.f64 x (*.f64 3 (*.f64 y x)))","next",0.23275375976844204],["(*.f64 y (*.f64 x (*.f64 3 x)))","fresh",8.48386268605504],["(pow.f64 (*.f64 x (sqrt.f64 (*.f64 3 y))) 2)","fresh",33.00494008791598],["(pow.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))) 3)","fresh",0.5743778442107986]],"compiler":[[9,7],[9,6],[9,6],[9,6],[10,8],[12,9],[9,7],[9,6],[9,6],[10,8],[12,9]],"count":[[32,6]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[30,5],"picked":[1,1]}],"min-error":[0.02734375],"time":6.26611328125,"type":"prune"},{"compiler":[[20,9]],"locations":[["(*.f64 x (*.f64 3 (*.f64 y x)))",0.1875,true],["(*.f64 3 (*.f64 y x))",0.25390625,true]],"time":3.986083984375,"type":"localize"},{"count":[[2,24]],"series":[["(*.f64 x (*.f64 3 (*.f64 y x)))","y","-inf",0.14306640625],["(*.f64 x (*.f64 3 (*.f64 y x)))","y","inf",0.14208984375],["(*.f64 x (*.f64 3 (*.f64 y x)))","y","0",0.156982421875],["(*.f64 x (*.f64 3 (*.f64 y x)))","x","-inf",0.14208984375],["(*.f64 x (*.f64 3 (*.f64 y x)))","x","inf",0.143798828125],["(*.f64 x (*.f64 3 (*.f64 y x)))","x","0",0.1611328125],["(*.f64 3 (*.f64 y x))","x","-inf",0.14892578125],["(*.f64 3 (*.f64 y x))","x","inf",0.2060546875],["(*.f64 3 (*.f64 y x))","x","0",0.136962890625],["(*.f64 3 (*.f64 y x))","y","-inf",0.153076171875],["(*.f64 3 (*.f64 y x))","y","inf",0.18701171875],["(*.f64 3 (*.f64 y x))","y","0",0.167236328125]],"time":2.005859375,"type":"series"},{"count":[[2,24]],"egraph":[[2,1701,17,0.0167475],[1,143,17,0.002366583],[0,7,17,0.000191583]],"inputs":[["(*.f64 3 (*.f64 y x))","(*.f64 x (*.f64 3 (*.f64 y x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 3 (*.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 3 (*.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 3 (*.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (*.f64 y x) 2) 9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 x) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 3 (*.f64 y x))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 3 (*.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 3 (*.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 3 (*.f64 y x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 3 (*.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 x) y) 3) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 3 (*.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (*.f64 3 (*.f64 y x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 3 (*.f64 y x)))))))))"]],"rules":[["egg-rr",13],["egg-rr",11]],"stop":[["node limit",1]],"time":35.125,"type":"rewrite"},{"count":[[48,26]],"egraph":[[22,6525,240,0.10523654000000002],[21,6491,240,0.08893724900000001],[20,6413,240,0.080815832],[19,6107,240,0.07221941500000001],[18,5789,240,0.06413054000000001],[17,5361,240,0.05681674900000001],[16,4499,240,0.04910358200000001],[15,3791,240,0.040731999000000005],[14,3210,240,0.033982874],[13,2753,240,0.028221332000000002],[12,2383,240,0.023432957],[11,2068,240,0.019171124],[10,1825,240,0.015554374000000001],[9,1656,240,0.012290582000000001],[8,1521,240,0.009621832],[7,1421,240,0.007385414999999999],[6,1007,240,0.005051457],[5,739,240,0.003200999],[4,221,240,0.001701874],[3,79,240,0.000670833],[2,37,240,0.000326874],[1,17,240,0.000168458],[0,8,240,6.7208e-5]],"inputs":[["(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))"]],"stop":[["node limit",1]],"time":126.705078125,"type":"simplify"},{"compiler":[[254,154]],"time":3.614990234375,"type":"eval"},{"alts":[["(*.f64 x (*.f64 3 (*.f64 y x)))","done",0.23275375976844204],["(pow.f64 (sqrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 2)","fresh",22.246463818379098],["(*.f64 y (*.f64 x (*.f64 3 x)))","fresh",8.48386268605504],["(pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)","next",0.5734203735161247],["(*.f64 3 (*.f64 y (pow.f64 x 2)))","fresh",8.56772871134753],["(*.f64 x (*.f64 x (*.f64 3 y)))","done",0.2265625]],"compiler":[[9,6],[12,9],[9,6],[12,9],[9,7],[9,6],[12,9],[9,6],[12,9],[9,7]],"count":[[32,6]],"kept":[{"done":[1,1],"fresh":[4,1],"new":[26,3],"picked":[1,1]}],"min-error":[0.02734375],"time":5.467041015625,"type":"prune"},{"compiler":[[38,19]],"locations":[["(*.f64 x (*.f64 3 (*.f64 y x)))",0.1875,false],["(*.f64 3 (*.f64 y x))",0.25390625,false],["(pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)",0.5258752442110507,true],["(cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x))))",20.34351871463768,true]],"time":7.953857421875,"type":"localize"},{"count":[[2,0]],"series":[["(pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)","y","-inf",1.445068359375],["(pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)","y","inf",0.536865234375],["(pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)","y","0",0.462890625],["(pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)","x","-inf",0.4560546875],["(pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)","x","inf",0.549072265625],["(pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)","x","0",0.871826171875],["(cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x))))","y","-inf",0.43505859375],["(cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x))))","y","inf",0.34814453125],["(cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x))))","y","0",0.552001953125],["(cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x))))","x","-inf",0.302978515625],["(cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x))))","x","inf",0.383056640625],["(cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x))))","x","0",0.635986328125]],"time":7.127197265625,"type":"series"},{"count":[[2,65]],"egraph":[[2,2048,22,0.020036918],[1,191,22,0.003061709],[0,9,22,0.000244834]],"inputs":[["(cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x))))","(pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y))))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y))))) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2))) (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (*.f64 3 y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 1/6) (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x 3)) (cbrt.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2)) 1/3) (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))) 1/3) (pow.f64 (sqrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x 3) 1/3) (cbrt.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y))))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 x (*.f64 3 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 x (*.f64 3 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 (*.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) (*.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 3 y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))) (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2)) (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2))) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y))))) (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x (*.f64 3 y))) (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 y))) 2) (*.f64 (cbrt.f64 (*.f64 x (*.f64 3 y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 1/6) (*.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 1/6) (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (*.f64 3 y))) (*.f64 (sqrt.f64 (*.f64 x (*.f64 3 y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))) (sqrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x 3) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2))) 3) (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 1/6) 3) (pow.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 x y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 y))) 2)) (cbrt.f64 (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (sqrt.f64 (*.f64 x (*.f64 3 y)))) (sqrt.f64 (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x (*.f64 3 y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x (*.f64 3 y)) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2)) 1) (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2)))) (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2)) (cbrt.f64 x)) (cbrt.f64 (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2)) (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 1/6)) (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x 3) x) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x 3) 1) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x 3) (pow.f64 (cbrt.f64 (*.f64 x y)) 2)) (cbrt.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x 3) (sqrt.f64 (*.f64 x y))) (sqrt.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (*.f64 3 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (*.f64 x (*.f64 3 y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 x (*.f64 3 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 x (*.f64 3 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 x (*.f64 3 y)))))))))"]],"rules":[["egg-rr",42],["egg-rr",23]],"stop":[["node limit",1]],"time":41.849853515625,"type":"rewrite"},{"count":[[65,65]],"egraph":[[0,0,0,2.0583e-5]],"inputs":[[]],"method":["egg-herbie"],"outputs":[[]],"stop":[["saturated",1]],"time":10.802001953125,"type":"simplify"},{"compiler":[[1276,873]],"time":16.48291015625,"type":"eval"},{"alts":[["(*.f64 y (*.f64 x (*.f64 3 x)))","fresh",8.48386268605504],["(pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)","done",0.5734203735161247],["(*.f64 3 (*.f64 (*.f64 x y) x))","next",0.24837875976844204],["(*.f64 x (*.f64 x (*.f64 3 y)))","done",0.2265625],["(*.f64 (*.f64 (*.f64 x (*.f64 3 y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))","fresh",0.5581590821270289]],"compiler":[[9,6],[12,9],[9,6],[9,6],[15,10],[9,6],[9,6],[15,10]],"count":[[97,5]],"kept":[{"done":[2,1],"fresh":[3,1],"new":[91,2],"picked":[1,1]}],"min-error":[0.00390625],"time":17.3701171875,"type":"prune"},{"compiler":[[20,7]],"locations":[["(*.f64 (*.f64 x y) x)",0.18359375,true],["(*.f64 3 (*.f64 (*.f64 x y) x))",0.24609375,true]],"time":3.742919921875,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (*.f64 x y) x)","y","-inf",0.283935546875],["(*.f64 (*.f64 x y) x)","y","inf",0.138916015625],["(*.f64 (*.f64 x y) x)","y","0",0.169189453125],["(*.f64 (*.f64 x y) x)","x","-inf",0.14208984375],["(*.f64 (*.f64 x y) x)","x","inf",0.14306640625],["(*.f64 (*.f64 x y) x)","x","0",0.1650390625],["(*.f64 3 (*.f64 (*.f64 x y) x))","y","-inf",0.157958984375],["(*.f64 3 (*.f64 (*.f64 x y) x))","y","inf",0.156982421875],["(*.f64 3 (*.f64 (*.f64 x y) x))","y","0",0.171142578125],["(*.f64 3 (*.f64 (*.f64 x y) x))","x","-inf",0.156005859375],["(*.f64 3 (*.f64 (*.f64 x y) x))","x","inf",0.197998046875],["(*.f64 3 (*.f64 (*.f64 x y) x))","x","0",0.18408203125]],"time":2.191162109375,"type":"series"},{"count":[[2,24]],"egraph":[[2,1656,17,0.016449875],[1,142,17,0.0022516660000000003],[0,7,17,0.00018875]],"inputs":[["(*.f64 3 (*.f64 (*.f64 x y) x))","(*.f64 (*.f64 x y) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 3 (*.f64 x (*.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 3 (*.f64 x (*.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 3 (*.f64 x (*.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 3 (*.f64 x (*.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 3 (*.f64 x (*.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 3 (*.f64 x (*.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 x) (*.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 3 (*.f64 x (*.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 3 (*.f64 x (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 3 (*.f64 x (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 3 (*.f64 x (*.f64 x y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (*.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (*.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 x y) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 x y))))))))"]],"rules":[["egg-rr",13],["egg-rr",11]],"stop":[["node limit",1]],"time":35.39501953125,"type":"rewrite"},{"count":[[72,28]],"egraph":[[22,6525,408,0.105396998],[21,6491,408,0.08917541500000001],[20,6413,408,0.08106724800000001],[19,6107,408,0.072450707],[18,5789,408,0.064381498],[17,5361,408,0.057084415],[16,4499,408,0.049395665],[15,3791,408,0.040991499],[14,3210,408,0.034181332],[13,2753,408,0.028365332000000004],[12,2383,408,0.023594832000000003],[11,2068,408,0.019327915],[10,1825,408,0.015719624],[9,1656,408,0.012401416000000002],[8,1521,408,0.009744791000000001],[7,1421,408,0.00751275],[6,1007,408,0.005159333],[5,739,408,0.003290542],[4,221,408,0.001774125],[3,79,408,0.000723833],[2,37,408,0.000362833],[1,17,408,0.00019304199999999999],[0,8,408,7.7792e-5]],"inputs":[["(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))","(*.f64 y (pow.f64 x 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 y (*.f64 (*.f64 x x) 3))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 (*.f64 y x) (*.f64 3 x))","(*.f64 y (*.f64 3 (*.f64 x x)))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))","(*.f64 y (pow.f64 x 2))","(*.f64 y (*.f64 x x))"]],"stop":[["node limit",1]],"time":133.495849609375,"type":"simplify"},{"compiler":[[268,141]],"time":3.508056640625,"type":"eval"},{"alts":[["(*.f64 y (*.f64 x (*.f64 3 x)))","fresh",8.48386268605504],["(pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)","done",0.5734203735161247],["(*.f64 3 (*.f64 (*.f64 x y) x))","done",0.24837875976844204],["(*.f64 x (*.f64 x (*.f64 3 y)))","done",0.2265625],["(*.f64 (*.f64 (*.f64 x (*.f64 3 y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))","fresh",0.5581590821270289]],"compiler":[[9,6],[12,9],[9,6],[9,6],[15,10]],"count":[[33,5]],"kept":[{"done":[2,2],"fresh":[2,2],"new":[28,0],"picked":[1,1]}],"min-error":[0.00390625],"time":6.140869140625,"type":"prune"},{"accuracy":[0.2265625],"baseline":[0.2265625],"branch":[["x",0.2265625,1],["y",0.2265625,1],["(*.f64 (*.f64 (*.f64 x 3) x) y)",0.2265625,1],["(*.f64 (*.f64 x 3) x)",0.2265625,1]],"compiler":[[3,2],[3,2],[9,6],[7,5],[102,65]],"count":[[12,1]],"inputs":[["(*.f64 3 (*.f64 (*.f64 x y) x))","(*.f64 (*.f64 (*.f64 x (*.f64 3 y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))","(pow.f64 (sqrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 2)","(pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y x)))) 3)","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 3 (*.f64 y (pow.f64 x 2)))","(*.f64 x (*.f64 3 (*.f64 y x)))","(*.f64 y (*.f64 x (*.f64 3 x)))","(pow.f64 (*.f64 x (sqrt.f64 (*.f64 3 y))) 2)","(pow.f64 (cbrt.f64 (*.f64 x (*.f64 x (*.f64 3 y)))) 3)","(*.f64 x (*.f64 x (*.f64 3 y)))","(*.f64 (*.f64 (*.f64 x 3) x) y)"]],"link":["."],"name":["Diagrams.Segment:$catParam from diagrams-lib-1.3.0.3, A"],"oracle":[37.50568185018964],"outputs":[["(*.f64 x (*.f64 x (*.f64 3 y)))"]],"time":19.8701171875,"times":[["x",5.168212890625],["y",5.072021484375],["(*.f64 (*.f64 (*.f64 x 3) x) y)",3.943115234375],["(*.f64 (*.f64 x 3) x)",3.489013671875]],"type":"regimes"},{"compiler":[[9,6]],"egraph":[[1,10,10,2.8250000000000002e-5],[0,7,10,1.65e-5]],"inputs":[["(*.f64 x (*.f64 x (*.f64 3 y)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 x (*.f64 x (*.f64 3 y)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.113037109375,"type":"simplify"},{"time":0.011962890625,"type":"soundness"},{"compiler":[[9,6]],"remove-preprocessing":[[]],"time":7.43896484375,"type":"end"}]