[{"compiler":[[14,11]],"method":["search"],"sampling":[[12,0.850731099024415,0.14829257689416409,0.0009763240814208984],[11,0.8234140453860164,0.17560963053256273,0.0009763240814208984],[10,0.7180482670664787,0.2809754088521004,0.0009763240814208984],[9,0.6712190322577953,0.32780464366078377,0.0009763240814208984],[8,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[7,0.43707285821437836,0.5619508177042007,0.0009763240814208984],[6,0.18731693923473358,0.8117067366838455,0.0009763240814208984],[5,0.12487795948982239,0.8741457164287567,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":42.3828125,"type":"analyze"},{"outcomes":[["body",512,"valid",58.74072265625,722],["body",1024,"valid",69.906494140625,640],["body",2048,"valid",1.294921875,9],["body",256,"valid",287.02587890625,6885]],"time":426.610107421875,"type":"sample"},{"compiler":[[13,10]],"egraph":[[0,2,2,2.708e-6],[8,7660,28,0.062384626],[7,6313,28,0.054048584],[6,4769,28,0.037539042],[5,2034,28,0.022537542],[4,684,28,0.006748542],[3,209,28,0.001942917],[2,79,32,0.0005730830000000001],[1,32,32,0.00020737499999999999],[0,14,32,8.7917e-5]],"inputs":[["0","1"],["(-.f64 1 (/.f64 (*.f64 (-.f64 1 x) y) (+.f64 y 1)))","(-.f64 1 (/.f64 (*.f64 (-.f64 1 y) x) (+.f64 x 1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(-.f64 1 (/.f64 (*.f64 (-.f64 1 x) y) (+.f64 y 1)))","(-.f64 1 (/.f64 (-.f64 1 x) (/.f64 (+.f64 1 y) y)))","(-.f64 1 (/.f64 y (/.f64 (+.f64 1 y) (-.f64 1 x))))","(-.f64 1 (/.f64 (*.f64 (-.f64 1 x) y) (+.f64 1 y)))","(fma.f64 (/.f64 (+.f64 x -1) (+.f64 1 y)) y 1)","(fma.f64 y (/.f64 (+.f64 x -1) (+.f64 1 y)) 1)","(fma.f64 y (/.f64 (-.f64 1 x) (-.f64 -1 y)) 1)","(-.f64 1 (/.f64 (*.f64 (-.f64 1 y) x) (+.f64 x 1)))","(-.f64 1 (/.f64 (-.f64 1 y) (/.f64 (+.f64 1 x) x)))","(-.f64 1 (/.f64 x (/.f64 (+.f64 1 x) (-.f64 1 y))))","(-.f64 1 (*.f64 (/.f64 x (+.f64 1 x)) (-.f64 1 y)))","(fma.f64 (/.f64 (+.f64 y -1) (+.f64 1 x)) x 1)","(fma.f64 x (/.f64 (+.f64 y -1) (+.f64 1 x)) 1)","(fma.f64 x (/.f64 (-.f64 1 y) (-.f64 -1 x)) 1)"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":91.73388671875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[9,7423,14,0.055613457000000005],[8,5502,14,0.044336749],[7,3701,14,0.030595583],[6,2432,14,0.020144249],[5,925,14,0.009426499],[4,344,14,0.002970791],[3,113,14,0.000936083],[2,43,16,0.000350542],[1,19,16,0.00015045800000000002],[0,9,16,7.4708e-5]],"inputs":[["(-.f64 1 (/.f64 (*.f64 (-.f64 1 x) y) (+.f64 y 1)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 1 (/.f64 (*.f64 (-.f64 1 x) y) (+.f64 y 1)))","(-.f64 1 (/.f64 (*.f64 (-.f64 1 x) y) (+.f64 1 y)))","(-.f64 1 (/.f64 y (/.f64 (+.f64 1 y) (-.f64 1 x))))","(-.f64 1 (*.f64 y (/.f64 (-.f64 1 x) (+.f64 1 y))))","(fma.f64 (/.f64 (-.f64 x 1) (+.f64 1 y)) y 1)","(fma.f64 y (/.f64 (+.f64 x -1) (+.f64 1 y)) 1)","(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)"]],"stop":[["node limit",1]],"time":68.635986328125,"type":"simplify"},{"compiler":[[23,17]],"time":0.551025390625,"type":"eval"},{"alts":[["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","next",14.045455178836026],["(-.f64 1 (/.f64 (*.f64 (-.f64 1 x) y) (+.f64 y 1)))","fresh",22.05326767883602]],"compiler":[[12,9],[13,10],[12,9],[13,10]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[14.041548928836026],"time":1.43115234375,"type":"prune"},{"compiler":[[27,18]],"locations":[["(/.f64 y (-.f64 -1 y))",0.00390625,true],["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)",3.3281766378583133,true]],"time":6.830810546875,"type":"localize"},{"count":[[2,36]],"series":[["(/.f64 y (-.f64 -1 y))","y","-inf",0.18798828125],["(/.f64 y (-.f64 -1 y))","y","inf",0.190185546875],["(/.f64 y (-.f64 -1 y))","y","0",0.233154296875],["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","y","-inf",0.278076171875],["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","y","inf",0.5078125],["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","y","0",0.343017578125],["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","x","-inf",0.27001953125],["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","x","inf",0.4521484375],["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","x","0",0.6708984375]],"time":3.276123046875,"type":"series"},{"count":[[2,108]],"egraph":[[2,2615,21,0.023800542],[1,194,21,0.00332175],[0,9,21,0.000262667]],"inputs":[["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","(/.f64 y (-.f64 -1 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)) (pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)) 2) (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)) (sqrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 3)) 1/3) (pow.f64 (sqrt.f64 (pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))) 2) 1/3) (cbrt.f64 (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 5/2) 1/3) (cbrt.f64 (sqrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))) 2) 3) (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))) 3) (pow.f64 (sqrt.f64 (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))) 3) 1) (+.f64 (pow.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))) 2) (-.f64 1 (*.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))) 2) 1) (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 y (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 y (-.f64 -1 y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 y (-.f64 -1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (-.f64 -1 y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (-.f64 -1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 y (-.f64 -1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 -1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 -1 y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 -1 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 -1 y))) 2) (cbrt.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y (-.f64 -1 y))) (sqrt.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (neg.f64 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (pow.f64 (/.f64 1 (neg.f64 (-.f64 -1 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 y)) (pow.f64 (/.f64 1 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 -1 y)) -2) (/.f64 y (cbrt.f64 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 -1 y)) 2)) (cbrt.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 -1 y)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 -1 y) -1/2) (/.f64 y (sqrt.f64 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 -1 y))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 -1 (pow.f64 y 3))) (fma.f64 y (+.f64 y -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 1 (*.f64 y y))) (+.f64 y -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) 1) (pow.f64 (/.f64 (cbrt.f64 y) (-.f64 -1 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sqrt.f64 y) 1) 1) (pow.f64 (/.f64 (sqrt.f64 y) (-.f64 -1 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (-.f64 -1 y)) -2) 1) (pow.f64 (/.f64 y (cbrt.f64 (-.f64 -1 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 -1 y)) 2)) 1) (cbrt.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 -1 y)) 2)) 1) (pow.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 -1 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (-.f64 -1 y) -1/2) 1) (pow.f64 (/.f64 y (sqrt.f64 (-.f64 -1 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 -1 y))) 1) (pow.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 -1 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 -1 (pow.f64 y 3))) 1) (fma.f64 y (+.f64 y -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 1 (*.f64 y y))) 1) (+.f64 y -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (pow.f64 (/.f64 y (-.f64 -1 y)) 3)) 1/3) (pow.f64 (sqrt.f64 (pow.f64 (/.f64 y (-.f64 -1 y)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 -1 y)) 2) y) 1/3) (cbrt.f64 (/.f64 1 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (/.f64 y (-.f64 -1 y)) (cbrt.f64 (/.f64 y (-.f64 -1 y)))) 2) 1/3) (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (/.f64 y (-.f64 -1 y)) 5/2) 1/3) (cbrt.f64 (sqrt.f64 (/.f64 y (-.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 -1 y)))) 2) 3) (cbrt.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (cbrt.f64 (/.f64 y (-.f64 -1 y)))) 3) (pow.f64 (sqrt.f64 (cbrt.f64 (/.f64 y (-.f64 -1 y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 y) y)) 2) -1) (cbrt.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -1 y)) 2) 1) -1) (pow.f64 (/.f64 (cbrt.f64 (-.f64 -1 y)) y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sqrt.f64 (-.f64 -1 y)) 1) -1) (pow.f64 (/.f64 (sqrt.f64 (-.f64 -1 y)) y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -2) -1) (pow.f64 (/.f64 (-.f64 -1 y) (cbrt.f64 y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -1 y)) 2) (pow.f64 (cbrt.f64 y) 2)) -1) (pow.f64 (/.f64 (cbrt.f64 (-.f64 -1 y)) (cbrt.f64 y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sqrt.f64 (-.f64 -1 y)) (pow.f64 (cbrt.f64 y) 2)) -1) (pow.f64 (/.f64 (sqrt.f64 (-.f64 -1 y)) (cbrt.f64 y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 y -1/2) -1) (pow.f64 (/.f64 (-.f64 -1 y) (sqrt.f64 y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -1 y)) 2) (sqrt.f64 y)) -1) (pow.f64 (/.f64 (cbrt.f64 (-.f64 -1 y)) (sqrt.f64 y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sqrt.f64 (-.f64 -1 y)) (sqrt.f64 y)) -1) (pow.f64 (/.f64 (sqrt.f64 (-.f64 -1 y)) (sqrt.f64 y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 -1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 -1 y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 -1 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 -1 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y (-.f64 -1 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 y) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 -1 y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 -1 y) y) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (neg.f64 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y (-.f64 -1 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 -1 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 -1 y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y (-.f64 -1 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 y (-.f64 -1 y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 y (-.f64 -1 y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 y (-.f64 -1 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 -1 y) y)) -1))))))"]],"rules":[["egg-rr",72],["egg-rr",36]],"stop":[["node limit",1]],"time":47.159912109375,"type":"rewrite"},{"count":[[144,144]],"egraph":[[3,2801,489,0.018358127000000002],[2,600,503,0.0050733770000000004],[1,188,633,0.0012335430000000001],[0,64,698,0.000309709]],"inputs":[["(+.f64 1 (*.f64 -1 (/.f64 y (+.f64 1 y))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(/.f64 (*.f64 y x) (+.f64 1 y))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(/.f64 (*.f64 y x) (+.f64 1 y))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","1","(+.f64 1 (*.f64 -1 (*.f64 y (-.f64 1 x))))","(+.f64 1 (+.f64 (*.f64 (pow.f64 y 2) (-.f64 1 x)) (*.f64 -1 (*.f64 y (-.f64 1 x)))))","(+.f64 1 (+.f64 (*.f64 (pow.f64 y 2) (-.f64 1 x)) (+.f64 (*.f64 -1 (*.f64 y (-.f64 1 x))) (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 1 x))))))","(+.f64 1 (*.f64 -1 (-.f64 1 x)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (*.f64 -1 (-.f64 1 x)))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))))))) (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 x y)))","(+.f64 1 (*.f64 -1 (-.f64 1 x)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (*.f64 -1 (-.f64 1 x)))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))))))) (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 x y)))","(*.f64 -1 y)","(+.f64 (pow.f64 y 2) (*.f64 -1 y))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (+.f64 (pow.f64 y 2) (*.f64 -1 y)))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (+.f64 (pow.f64 y 2) (+.f64 (pow.f64 y 4) (*.f64 -1 y))))","-1","(-.f64 (/.f64 1 y) 1)","(-.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","(-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","-1","(-.f64 (/.f64 1 y) 1)","(-.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","(-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))"]],"method":["egg-herbie"],"outputs":[["(+.f64 1 (*.f64 -1 (/.f64 y (+.f64 1 y))))","(+.f64 1 (/.f64 (neg.f64 y) (+.f64 1 y)))","(-.f64 1 (/.f64 y (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (/.f64 y (/.f64 (+.f64 1 y) x)) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (/.f64 y (/.f64 (+.f64 1 y) x)) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (/.f64 y (/.f64 (+.f64 1 y) x)) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(/.f64 (*.f64 y x) (+.f64 1 y))","(/.f64 y (/.f64 (+.f64 1 y) x))","(*.f64 (/.f64 y (+.f64 1 y)) x)","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (/.f64 y (/.f64 (+.f64 1 y) x)) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (/.f64 y (/.f64 (+.f64 1 y) x)) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (/.f64 y (/.f64 (+.f64 1 y) x)) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(/.f64 (*.f64 y x) (+.f64 1 y))","(/.f64 y (/.f64 (+.f64 1 y) x))","(*.f64 (/.f64 y (+.f64 1 y)) x)","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (/.f64 y (/.f64 (+.f64 1 y) x)) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (/.f64 y (/.f64 (+.f64 1 y) x)) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (/.f64 y (/.f64 (+.f64 1 y) x)) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","1","(+.f64 1 (*.f64 -1 (*.f64 y (-.f64 1 x))))","(+.f64 1 (*.f64 (neg.f64 y) (-.f64 1 x)))","(-.f64 1 (*.f64 y (-.f64 1 x)))","(fma.f64 y (+.f64 -1 x) 1)","(+.f64 1 (+.f64 (*.f64 (pow.f64 y 2) (-.f64 1 x)) (*.f64 -1 (*.f64 y (-.f64 1 x)))))","(+.f64 1 (fma.f64 (*.f64 y y) (-.f64 1 x) (*.f64 (neg.f64 y) (-.f64 1 x))))","(+.f64 1 (*.f64 (-.f64 1 x) (*.f64 y (+.f64 -1 y))))","(fma.f64 (-.f64 1 x) (*.f64 y (+.f64 -1 y)) 1)","(fma.f64 (-.f64 1 x) (-.f64 (*.f64 y y) y) 1)","(+.f64 1 (+.f64 (*.f64 (pow.f64 y 2) (-.f64 1 x)) (+.f64 (*.f64 -1 (*.f64 y (-.f64 1 x))) (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 1 x))))))","(+.f64 1 (fma.f64 (*.f64 y y) (-.f64 1 x) (*.f64 -1 (+.f64 (*.f64 y (-.f64 1 x)) (*.f64 (-.f64 1 x) (pow.f64 y 3))))))","(+.f64 1 (-.f64 (*.f64 (-.f64 1 x) (*.f64 y (+.f64 -1 y))) (*.f64 (-.f64 1 x) (pow.f64 y 3))))","(+.f64 1 (*.f64 (-.f64 1 x) (-.f64 (*.f64 y (+.f64 -1 y)) (pow.f64 y 3))))","(+.f64 1 (*.f64 (-.f64 1 x) (*.f64 y (-.f64 y (fma.f64 y y 1)))))","(+.f64 1 (*.f64 -1 (-.f64 1 x)))","(+.f64 1 (neg.f64 (-.f64 1 x)))","(-.f64 1 (-.f64 1 x))","x","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (*.f64 -1 (-.f64 1 x)))) (/.f64 x y))","(-.f64 (+.f64 (+.f64 1 (neg.f64 (-.f64 1 x))) (/.f64 1 y)) (/.f64 x y))","(-.f64 (-.f64 (+.f64 1 (/.f64 1 y)) (-.f64 1 x)) (/.f64 x y))","(+.f64 x (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))))) (/.f64 x y))","(-.f64 (+.f64 (+.f64 (/.f64 1 y) 1) (*.f64 -1 (+.f64 (-.f64 1 x) (/.f64 (-.f64 1 x) (*.f64 y y))))) (/.f64 x y))","(+.f64 (-.f64 (-.f64 1 (-.f64 1 x)) (/.f64 (-.f64 1 x) (*.f64 y y))) (-.f64 (/.f64 1 y) (/.f64 x y)))","(+.f64 (+.f64 x (/.f64 (/.f64 (+.f64 -1 x) y) y)) (/.f64 (-.f64 1 x) y))","(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))))))) (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 x y)))","(-.f64 (+.f64 (+.f64 (/.f64 1 y) 1) (fma.f64 -1 (-.f64 1 x) (+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (+.f64 (/.f64 x y) (/.f64 x (pow.f64 y 3))))","(+.f64 (/.f64 1 y) (+.f64 (-.f64 1 (-.f64 1 x)) (-.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (-.f64 1 x) (*.f64 y y))) (+.f64 (/.f64 x y) (/.f64 x (pow.f64 y 3))))))","(+.f64 (+.f64 x (/.f64 (/.f64 (+.f64 -1 x) y) y)) (+.f64 (/.f64 1 (pow.f64 y 3)) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3)))))","(+.f64 x (+.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (-.f64 1 x) (*.f64 y y))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3)))))","(+.f64 1 (*.f64 -1 (-.f64 1 x)))","(+.f64 1 (neg.f64 (-.f64 1 x)))","(-.f64 1 (-.f64 1 x))","x","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (*.f64 -1 (-.f64 1 x)))) (/.f64 x y))","(-.f64 (+.f64 (+.f64 1 (neg.f64 (-.f64 1 x))) (/.f64 1 y)) (/.f64 x y))","(-.f64 (-.f64 (+.f64 1 (/.f64 1 y)) (-.f64 1 x)) (/.f64 x y))","(+.f64 x (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))))) (/.f64 x y))","(-.f64 (+.f64 (+.f64 (/.f64 1 y) 1) (*.f64 -1 (+.f64 (-.f64 1 x) (/.f64 (-.f64 1 x) (*.f64 y y))))) (/.f64 x y))","(+.f64 (-.f64 (-.f64 1 (-.f64 1 x)) (/.f64 (-.f64 1 x) (*.f64 y y))) (-.f64 (/.f64 1 y) (/.f64 x y)))","(+.f64 (+.f64 x (/.f64 (/.f64 (+.f64 -1 x) y) y)) (/.f64 (-.f64 1 x) y))","(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))))))) (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 x y)))","(-.f64 (+.f64 (+.f64 (/.f64 1 y) 1) (fma.f64 -1 (-.f64 1 x) (+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (+.f64 (/.f64 x y) (/.f64 x (pow.f64 y 3))))","(+.f64 (/.f64 1 y) (+.f64 (-.f64 1 (-.f64 1 x)) (-.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (-.f64 1 x) (*.f64 y y))) (+.f64 (/.f64 x y) (/.f64 x (pow.f64 y 3))))))","(+.f64 (+.f64 x (/.f64 (/.f64 (+.f64 -1 x) y) y)) (+.f64 (/.f64 1 (pow.f64 y 3)) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3)))))","(+.f64 x (+.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (-.f64 1 x) (*.f64 y y))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3)))))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (pow.f64 y 2) (*.f64 -1 y))","(+.f64 (*.f64 y y) (neg.f64 y))","(*.f64 y (+.f64 -1 y))","(-.f64 (*.f64 y y) y)","(+.f64 (*.f64 -1 (pow.f64 y 3)) (+.f64 (pow.f64 y 2) (*.f64 -1 y)))","(fma.f64 -1 (pow.f64 y 3) (+.f64 (*.f64 y y) (neg.f64 y)))","(-.f64 (*.f64 y (+.f64 -1 y)) (pow.f64 y 3))","(*.f64 y (-.f64 y (fma.f64 y y 1)))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (+.f64 (pow.f64 y 2) (+.f64 (pow.f64 y 4) (*.f64 -1 y))))","(fma.f64 -1 (pow.f64 y 3) (+.f64 (*.f64 y y) (+.f64 (neg.f64 y) (pow.f64 y 4))))","(-.f64 (-.f64 (fma.f64 y y (pow.f64 y 4)) y) (pow.f64 y 3))","(-.f64 (fma.f64 y (+.f64 -1 y) (pow.f64 y 4)) (pow.f64 y 3))","(*.f64 (+.f64 y (pow.f64 y 3)) (+.f64 -1 y))","-1","(-.f64 (/.f64 1 y) 1)","(+.f64 (/.f64 1 y) -1)","(+.f64 -1 (/.f64 1 y))","(-.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","(-.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (*.f64 y y))))","(+.f64 (-.f64 (/.f64 1 y) (/.f64 (/.f64 1 y) y)) -1)","(+.f64 -1 (-.f64 (/.f64 1 y) (/.f64 (/.f64 1 y) y)))","(+.f64 (/.f64 1 y) (+.f64 -1 (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","(+.f64 (/.f64 1 y) (-.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 1 (/.f64 1 (*.f64 y y)))))","(+.f64 (/.f64 1 y) (-.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 1 (/.f64 (/.f64 1 y) y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 -1 (-.f64 (/.f64 1 y) (/.f64 (/.f64 1 y) y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (/.f64 1 y) (+.f64 -1 (/.f64 (/.f64 -1 y) y))))","-1","(-.f64 (/.f64 1 y) 1)","(+.f64 (/.f64 1 y) -1)","(+.f64 -1 (/.f64 1 y))","(-.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","(-.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (*.f64 y y))))","(+.f64 (-.f64 (/.f64 1 y) (/.f64 (/.f64 1 y) y)) -1)","(+.f64 -1 (-.f64 (/.f64 1 y) (/.f64 (/.f64 1 y) y)))","(+.f64 (/.f64 1 y) (+.f64 -1 (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","(+.f64 (/.f64 1 y) (-.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 1 (/.f64 1 (*.f64 y y)))))","(+.f64 (/.f64 1 y) (-.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 1 (/.f64 (/.f64 1 y) y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 -1 (-.f64 (/.f64 1 y) (/.f64 (/.f64 1 y) y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (/.f64 1 y) (+.f64 -1 (/.f64 (/.f64 -1 y) y))))"]],"stop":[["node limit",1]],"time":36.39697265625,"type":"simplify"},{"compiler":[[2437,1832]],"time":33.10498046875,"type":"eval"},{"alts":[["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","done",14.045455178836026],["(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","next",14.137537328545019],["(+.f64 x (+.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (-.f64 1 x) (*.f64 y y))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3)))))","fresh",32.67567256137252],["(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","fresh",32.867408839710215]],"compiler":[[12,9],[14,11],[29,20],[15,11],[14,11],[29,20],[15,11]],"count":[[146,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[144,3],"picked":[1,1]}],"min-error":[0.00390625],"time":30.527099609375,"type":"prune"},{"compiler":[[36,26]],"locations":[["(/.f64 1 (-.f64 -1 y))",0.0078125,true],["(*.f64 (/.f64 1 (-.f64 -1 y)) y)",0.0703125,true],["(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)",5.018177471229305,true]],"time":8.5390625,"type":"localize"},{"count":[[3,48]],"series":[["(/.f64 1 (-.f64 -1 y))","y","-inf",0.2138671875],["(/.f64 1 (-.f64 -1 y))","y","inf",0.24609375],["(/.f64 1 (-.f64 -1 y))","y","0",0.22802734375],["(*.f64 (/.f64 1 (-.f64 -1 y)) y)","y","-inf",0.14501953125],["(*.f64 (/.f64 1 (-.f64 -1 y)) y)","y","inf",0.14599609375],["(*.f64 (/.f64 1 (-.f64 -1 y)) y)","y","0",0.171142578125],["(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","y","-inf",0.56201171875],["(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","y","inf",0.2109375],["(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","y","0",0.18798828125],["(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","x","-inf",0.18701171875],["(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","x","inf",0.174072265625],["(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","x","0",0.22998046875]],"time":2.863037109375,"type":"series"},{"count":[[3,112]],"egraph":[[2,2803,28,0.025497958],[1,215,28,0.003722],[0,10,28,0.000296333]],"inputs":[["(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","(*.f64 (/.f64 1 (-.f64 -1 y)) y)","(/.f64 1 (-.f64 -1 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)) (pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)) 2) (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)) (sqrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))) 3) 1) (+.f64 (pow.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))) 2) (-.f64 1 (*.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))) 2) 1) (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))))) 2)) (cbrt.f64 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)))))) (sqrt.f64 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (*.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 y (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 y (-.f64 -1 y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 y (-.f64 -1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (-.f64 -1 y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (-.f64 -1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 y (-.f64 -1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 -1 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 y) 2) (/.f64 (-.f64 -1 y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 y) (/.f64 (-.f64 -1 y) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (neg.f64 (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (sqrt.f64 (-.f64 -1 y))) (sqrt.f64 (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y 1) (-.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (pow.f64 (cbrt.f64 (-.f64 -1 y)) 2)) (cbrt.f64 (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 -1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 -1 y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 -1 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 -1 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y (-.f64 -1 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 -1 y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 y) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 y (-.f64 -1 y)))) 2)) (cbrt.f64 (log.f64 (/.f64 y (-.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 y (-.f64 -1 y))))) (sqrt.f64 (log.f64 (/.f64 y (-.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y (-.f64 -1 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 -1 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 -1 y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y (-.f64 -1 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 y (-.f64 -1 y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 y (-.f64 -1 y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 y (-.f64 -1 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 y (-.f64 -1 y))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 -1 y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 -1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (-.f64 -1 y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (-.f64 -1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (-.f64 -1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (neg.f64 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 -1 y))) (cbrt.f64 (pow.f64 (-.f64 -1 y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 -1 y) -2)) (/.f64 1 (cbrt.f64 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 -1 y) -1/2) (pow.f64 (-.f64 -1 y) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 -1 y)) -2) (/.f64 1 (cbrt.f64 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (pow.f64 y 3))) (fma.f64 y (+.f64 -1 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 (*.f64 y y))) (+.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 -1 y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (-.f64 -1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (log.f64 (-.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (neg.f64 (log.f64 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 -1 y) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 -1 y) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 -1 y) 2) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 -1 y) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (-.f64 -1 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 -1 y)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 -1 y) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 -1 y)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (neg.f64 (-.f64 -1 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (neg.f64 (log.f64 (-.f64 -1 y)))) 2)) (cbrt.f64 (neg.f64 (log.f64 (-.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (neg.f64 (log.f64 (-.f64 -1 y))))) (sqrt.f64 (neg.f64 (log.f64 (-.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 -1 y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (-.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 -1 y) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (-.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 -1 y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (-.f64 -1 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 -1 y) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (cbrt.f64 (-.f64 -1 y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -1/2 (log.f64 (-.f64 -1 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (-.f64 -1 y)) 1) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (-.f64 -1 y)) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (-.f64 -1 y))) 1) 1))))))"]],"rules":[["egg-rr",43],["egg-rr",35],["egg-rr",34]],"stop":[["node limit",1]],"time":49.47802734375,"type":"rewrite"},{"count":[[160,161]],"egraph":[[3,3021,653,0.020314],[2,701,663,0.005868084],[1,227,804,0.001462],[0,77,871,0.000362792]],"inputs":[["(+.f64 1 (*.f64 -1 (/.f64 y (+.f64 1 y))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(/.f64 (*.f64 y x) (+.f64 1 y))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(/.f64 (*.f64 y x) (+.f64 1 y))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","1","(+.f64 1 (*.f64 -1 (*.f64 y (-.f64 1 x))))","(+.f64 1 (+.f64 (*.f64 (pow.f64 y 2) (-.f64 1 x)) (*.f64 -1 (*.f64 y (-.f64 1 x)))))","(+.f64 1 (+.f64 (*.f64 (pow.f64 y 2) (-.f64 1 x)) (+.f64 (*.f64 -1 (*.f64 y (-.f64 1 x))) (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 1 x))))))","(+.f64 1 (*.f64 -1 (-.f64 1 x)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (*.f64 -1 (-.f64 1 x)))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))))))) (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 x y)))","(+.f64 1 (*.f64 -1 (-.f64 1 x)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (*.f64 -1 (-.f64 1 x)))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))))))) (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 x y)))","(*.f64 -1 y)","(+.f64 (pow.f64 y 2) (*.f64 -1 y))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (+.f64 (pow.f64 y 2) (*.f64 -1 y)))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (+.f64 (pow.f64 y 2) (+.f64 (pow.f64 y 4) (*.f64 -1 y))))","-1","(-.f64 (/.f64 1 y) 1)","(-.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","(-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","-1","(-.f64 (/.f64 1 y) 1)","(-.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","(-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","-1","(-.f64 y 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) y) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (+.f64 (pow.f64 y 3) y)) 1)","(/.f64 -1 y)","(-.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 y))","(-.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 4))) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))","(/.f64 -1 y)","(-.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 y))","(-.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 4))) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 1 (*.f64 -1 (/.f64 y (+.f64 1 y))))","(+.f64 1 (/.f64 (neg.f64 y) (+.f64 1 y)))","(-.f64 1 (/.f64 y (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y (+.f64 1 y)) x) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y (+.f64 1 y)) x) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y (+.f64 1 y)) x) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(/.f64 (*.f64 y x) (+.f64 1 y))","(/.f64 y (/.f64 (+.f64 1 y) x))","(*.f64 (/.f64 y (+.f64 1 y)) x)","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y (+.f64 1 y)) x) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y (+.f64 1 y)) x) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y (+.f64 1 y)) x) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(/.f64 (*.f64 y x) (+.f64 1 y))","(/.f64 y (/.f64 (+.f64 1 y) x))","(*.f64 (/.f64 y (+.f64 1 y)) x)","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y (+.f64 1 y)) x) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y (+.f64 1 y)) x) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 y (+.f64 1 y)))))","(+.f64 (+.f64 1 (/.f64 y (/.f64 (+.f64 1 y) x))) (/.f64 (neg.f64 y) (+.f64 1 y)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y (+.f64 1 y)) x) (/.f64 y (+.f64 1 y))))","(+.f64 1 (*.f64 (/.f64 y (+.f64 1 y)) (+.f64 -1 x)))","(+.f64 1 (/.f64 (-.f64 (*.f64 y x) y) (+.f64 1 y)))","1","(+.f64 1 (*.f64 -1 (*.f64 y (-.f64 1 x))))","(+.f64 1 (*.f64 (neg.f64 y) (-.f64 1 x)))","(-.f64 1 (*.f64 y (-.f64 1 x)))","(fma.f64 y (+.f64 -1 x) 1)","(+.f64 1 (+.f64 (*.f64 (pow.f64 y 2) (-.f64 1 x)) (*.f64 -1 (*.f64 y (-.f64 1 x)))))","(+.f64 1 (fma.f64 (*.f64 y y) (-.f64 1 x) (*.f64 (neg.f64 y) (-.f64 1 x))))","(+.f64 1 (*.f64 (-.f64 1 x) (-.f64 (*.f64 y y) y)))","(fma.f64 (-.f64 1 x) (-.f64 (*.f64 y y) y) 1)","(+.f64 1 (+.f64 (*.f64 (pow.f64 y 2) (-.f64 1 x)) (+.f64 (*.f64 -1 (*.f64 y (-.f64 1 x))) (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 1 x))))))","(+.f64 1 (fma.f64 (*.f64 y y) (-.f64 1 x) (*.f64 -1 (+.f64 (*.f64 y (-.f64 1 x)) (*.f64 (-.f64 1 x) (pow.f64 y 3))))))","(+.f64 1 (-.f64 (*.f64 (-.f64 1 x) (-.f64 (*.f64 y y) y)) (*.f64 (-.f64 1 x) (pow.f64 y 3))))","(+.f64 1 (*.f64 (-.f64 1 x) (*.f64 y (-.f64 y (fma.f64 y y 1)))))","(+.f64 1 (*.f64 -1 (-.f64 1 x)))","(+.f64 1 (neg.f64 (-.f64 1 x)))","(-.f64 1 (-.f64 1 x))","x","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (*.f64 -1 (-.f64 1 x)))) (/.f64 x y))","(-.f64 (+.f64 (+.f64 1 (neg.f64 (-.f64 1 x))) (/.f64 1 y)) (/.f64 x y))","(+.f64 (-.f64 1 (-.f64 1 x)) (-.f64 (/.f64 1 y) (/.f64 x y)))","(+.f64 x (/.f64 (-.f64 1 x) y))","(-.f64 x (/.f64 (+.f64 -1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))))) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (+.f64 1 (fma.f64 -1 (-.f64 1 x) (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)))) (/.f64 x y)))","(+.f64 (/.f64 1 y) (-.f64 (-.f64 (-.f64 1 (-.f64 1 x)) (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 x (+.f64 (/.f64 (+.f64 -1 x) (*.f64 y y)) (/.f64 (-.f64 1 x) y)))","(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))))))) (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 x y)))","(-.f64 (+.f64 (+.f64 (/.f64 1 y) 1) (fma.f64 -1 (-.f64 1 x) (+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (+.f64 (/.f64 x y) (/.f64 x (pow.f64 y 3))))","(+.f64 (/.f64 1 y) (-.f64 (+.f64 1 (-.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (-.f64 1 x) (*.f64 y y))) (-.f64 1 x))) (+.f64 (/.f64 x y) (/.f64 x (pow.f64 y 3)))))","(+.f64 (+.f64 x (/.f64 (+.f64 -1 x) (*.f64 y y))) (+.f64 (/.f64 1 (pow.f64 y 3)) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3)))))","(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))","(+.f64 1 (*.f64 -1 (-.f64 1 x)))","(+.f64 1 (neg.f64 (-.f64 1 x)))","(-.f64 1 (-.f64 1 x))","x","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (*.f64 -1 (-.f64 1 x)))) (/.f64 x y))","(-.f64 (+.f64 (+.f64 1 (neg.f64 (-.f64 1 x))) (/.f64 1 y)) (/.f64 x y))","(+.f64 (-.f64 1 (-.f64 1 x)) (-.f64 (/.f64 1 y) (/.f64 x y)))","(+.f64 x (/.f64 (-.f64 1 x) y))","(-.f64 x (/.f64 (+.f64 -1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))))) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (+.f64 1 (fma.f64 -1 (-.f64 1 x) (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)))) (/.f64 x y)))","(+.f64 (/.f64 1 y) (-.f64 (-.f64 (-.f64 1 (-.f64 1 x)) (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 x (+.f64 (/.f64 (+.f64 -1 x) (*.f64 y y)) (/.f64 (-.f64 1 x) y)))","(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 1 (+.f64 (*.f64 -1 (-.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))))))) (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 x y)))","(-.f64 (+.f64 (+.f64 (/.f64 1 y) 1) (fma.f64 -1 (-.f64 1 x) (+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (+.f64 (/.f64 x y) (/.f64 x (pow.f64 y 3))))","(+.f64 (/.f64 1 y) (-.f64 (+.f64 1 (-.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (-.f64 1 x) (*.f64 y y))) (-.f64 1 x))) (+.f64 (/.f64 x y) (/.f64 x (pow.f64 y 3)))))","(+.f64 (+.f64 x (/.f64 (+.f64 -1 x) (*.f64 y y))) (+.f64 (/.f64 1 (pow.f64 y 3)) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3)))))","(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (pow.f64 y 2) (*.f64 -1 y))","(+.f64 (*.f64 y y) (neg.f64 y))","(-.f64 (*.f64 y y) y)","(+.f64 (*.f64 -1 (pow.f64 y 3)) (+.f64 (pow.f64 y 2) (*.f64 -1 y)))","(fma.f64 -1 (pow.f64 y 3) (+.f64 (*.f64 y y) (neg.f64 y)))","(-.f64 (-.f64 (*.f64 y y) y) (pow.f64 y 3))","(*.f64 y (-.f64 y (fma.f64 y y 1)))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (+.f64 (pow.f64 y 2) (+.f64 (pow.f64 y 4) (*.f64 -1 y))))","(fma.f64 -1 (pow.f64 y 3) (+.f64 (*.f64 y y) (+.f64 (neg.f64 y) (pow.f64 y 4))))","(-.f64 (-.f64 (fma.f64 y y (pow.f64 y 4)) y) (pow.f64 y 3))","(+.f64 (*.f64 y (-.f64 y (fma.f64 y y 1))) (pow.f64 y 4))","(*.f64 (+.f64 y (pow.f64 y 3)) (+.f64 -1 y))","-1","(-.f64 (/.f64 1 y) 1)","(+.f64 (/.f64 1 y) -1)","(+.f64 -1 (/.f64 1 y))","(-.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","(-.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (*.f64 y y))))","(-.f64 (/.f64 1 y) (+.f64 1 (/.f64 (/.f64 1 y) y)))","(+.f64 (/.f64 1 y) (-.f64 -1 (/.f64 (/.f64 1 y) y)))","(+.f64 -1 (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","(+.f64 (/.f64 1 y) (-.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 1 (/.f64 1 (*.f64 y y)))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (-.f64 (/.f64 1 y) (+.f64 1 (/.f64 (/.f64 1 y) y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (/.f64 1 y) (-.f64 -1 (/.f64 (/.f64 1 y) y))))","(+.f64 -1 (+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y))))","-1","(-.f64 (/.f64 1 y) 1)","(+.f64 (/.f64 1 y) -1)","(+.f64 -1 (/.f64 1 y))","(-.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","(-.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (*.f64 y y))))","(-.f64 (/.f64 1 y) (+.f64 1 (/.f64 (/.f64 1 y) y)))","(+.f64 (/.f64 1 y) (-.f64 -1 (/.f64 (/.f64 1 y) y)))","(+.f64 -1 (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 (pow.f64 y 2)) 1))","(+.f64 (/.f64 1 y) (-.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 1 (/.f64 1 (*.f64 y y)))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (-.f64 (/.f64 1 y) (+.f64 1 (/.f64 (/.f64 1 y) y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (/.f64 1 y) (-.f64 -1 (/.f64 (/.f64 1 y) y))))","(+.f64 -1 (+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y))))","-1","(-.f64 y 1)","(+.f64 y -1)","(+.f64 -1 y)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) y) 1)","(+.f64 (fma.f64 -1 (*.f64 y y) y) -1)","(+.f64 -1 (-.f64 y (*.f64 y y)))","(-.f64 y (fma.f64 y y 1))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (+.f64 (pow.f64 y 3) y)) 1)","(+.f64 (fma.f64 -1 (*.f64 y y) (+.f64 y (pow.f64 y 3))) -1)","(+.f64 -1 (+.f64 y (*.f64 (*.f64 y y) (+.f64 -1 y))))","(*.f64 (fma.f64 y y 1) (+.f64 -1 y))","(/.f64 -1 y)","(-.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 y))","(-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))","(+.f64 (/.f64 (/.f64 1 y) y) (/.f64 -1 y))","(-.f64 (/.f64 (/.f64 1 y) y) (/.f64 1 y))","(+.f64 (/.f64 1 (*.f64 y y)) (/.f64 -1 y))","(-.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))","(-.f64 (/.f64 1 (*.f64 y y)) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))","(-.f64 (/.f64 (/.f64 1 y) y) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))","(+.f64 (-.f64 (/.f64 (/.f64 1 y) y) (/.f64 1 y)) (/.f64 -1 (pow.f64 y 3)))","(+.f64 (/.f64 -1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 -1 (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 4))) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))","(+.f64 (/.f64 1 (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 4)) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))))","(+.f64 (/.f64 1 (pow.f64 y 4)) (-.f64 (/.f64 (/.f64 1 y) y) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))))","(+.f64 (/.f64 -1 y) (+.f64 (/.f64 -1 (pow.f64 y 3)) (+.f64 (/.f64 (/.f64 1 y) y) (/.f64 1 (pow.f64 y 4)))))","(+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (/.f64 1 (pow.f64 y 4)) (+.f64 (/.f64 -1 y) (/.f64 -1 (pow.f64 y 3)))))","(/.f64 -1 y)","(-.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 y))","(-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))","(+.f64 (/.f64 (/.f64 1 y) y) (/.f64 -1 y))","(-.f64 (/.f64 (/.f64 1 y) y) (/.f64 1 y))","(+.f64 (/.f64 1 (*.f64 y y)) (/.f64 -1 y))","(-.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))","(-.f64 (/.f64 1 (*.f64 y y)) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))","(-.f64 (/.f64 (/.f64 1 y) y) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))","(+.f64 (-.f64 (/.f64 (/.f64 1 y) y) (/.f64 1 y)) (/.f64 -1 (pow.f64 y 3)))","(+.f64 (/.f64 -1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 -1 (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 4))) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))","(+.f64 (/.f64 1 (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 4)) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))))","(+.f64 (/.f64 1 (pow.f64 y 4)) (-.f64 (/.f64 (/.f64 1 y) y) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))))","(+.f64 (/.f64 -1 y) (+.f64 (/.f64 -1 (pow.f64 y 3)) (+.f64 (/.f64 (/.f64 1 y) y) (/.f64 1 (pow.f64 y 4)))))","(+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (/.f64 1 (pow.f64 y 4)) (+.f64 (/.f64 -1 y) (/.f64 -1 (pow.f64 y 3)))))"]],"stop":[["node limit",1]],"time":41.5458984375,"type":"simplify"},{"compiler":[[2471,1876]],"time":37.02197265625,"type":"eval"},{"alts":[["(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))","next",32.67176631137252],["(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","fresh",32.867408839710215],["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","done",14.045455178836026],["(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","done",14.137537328545019]],"compiler":[[29,20],[15,11],[12,9],[14,11],[29,20],[15,11]],"count":[[165,4]],"kept":[{"done":[1,1],"fresh":[2,0],"new":[161,2],"picked":[1,1]}],"min-error":[0.00390625],"time":37.458984375,"type":"prune"},{"compiler":[[109,72]],"locations":[["(/.f64 (/.f64 (+.f64 -1 x) y) y)",0.13671875,true],["(/.f64 x (pow.f64 y 3))",4.489505873657671,true],["(+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))",8.183577236641648,true],["(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))",10.550725517415563,true]],"time":28.696044921875,"type":"localize"},{"count":[[4,72]],"series":[["(/.f64 (/.f64 (+.f64 -1 x) y) y)","y","-inf",0.14404296875],["(/.f64 (/.f64 (+.f64 -1 x) y) y)","y","inf",0.22900390625],["(/.f64 (/.f64 (+.f64 -1 x) y) y)","y","0",0.343017578125],["(/.f64 (/.f64 (+.f64 -1 x) y) y)","x","-inf",0.18798828125],["(/.f64 (/.f64 (+.f64 -1 x) y) y)","x","inf",0.319091796875],["(/.f64 (/.f64 (+.f64 -1 x) y) y)","x","0",0.376953125],["(/.f64 x (pow.f64 y 3))","y","-inf",0.294921875],["(/.f64 x (pow.f64 y 3))","y","inf",0.333984375],["(/.f64 x (pow.f64 y 3))","y","0",1.18115234375],["(/.f64 x (pow.f64 y 3))","x","-inf",0.411865234375],["(/.f64 x (pow.f64 y 3))","x","inf",0.3740234375],["(/.f64 x (pow.f64 y 3))","x","0",0.431884765625],["(+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))","y","-inf",0.239013671875],["(+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))","y","inf",0.31005859375],["(+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))","y","0",0.550048828125],["(+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))","x","-inf",0.18896484375],["(+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))","x","inf",0.22412109375],["(+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))","x","0",0.241943359375],["(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))","y","-inf",0.363037109375],["(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))","y","inf",0.420166015625],["(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))","y","0",0.85498046875],["(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))","x","-inf",0.64697265625],["(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))","x","inf",0.786865234375],["(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))","x","0",1.36279296875]],"time":11.343994140625,"type":"series"},{"count":[[4,186]],"egraph":[[2,7899,70,0.052910376],[1,456,70,0.010466333999999999],[0,18,70,0.000599292]],"inputs":[["(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))","(+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))","(/.f64 x (pow.f64 y 3))","(/.f64 (/.f64 (+.f64 -1 x) y) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (-.f64 1 x) y) (-.f64 (*.f64 x (pow.f64 y -3)) (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y))) (*.f64 x (pow.f64 y -3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2) (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (-.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))) (/.f64 (pow.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) 2) (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (-.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))) (pow.f64 (cbrt.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))) 2) (cbrt.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))) (sqrt.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 3) (pow.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) 3)) (/.f64 1 (+.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2) (*.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (-.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2) (pow.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) 2)) (/.f64 1 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (-.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2) (*.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (-.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)))))) (+.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 3) (pow.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (-.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))) (-.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2) (pow.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 3) (pow.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) 3)) (+.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2) (*.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (-.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 3) (pow.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) 3)) (+.f64 (pow.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) 2) (-.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2) (*.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2) (pow.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) 2)) (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (-.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 3) (pow.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) 3))) (neg.f64 (+.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2) (*.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (-.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2) (pow.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) 2))) (neg.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (-.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 3)) (pow.f64 y 4)) (*.f64 (fma.f64 x x (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) x))) (fma.f64 (-.f64 1 x) (pow.f64 y 3) (neg.f64 (*.f64 x y))))) (*.f64 (fma.f64 x x (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) x))) (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (*.f64 x x) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 2)) (pow.f64 y 4)) (*.f64 (-.f64 (-.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3)) (fma.f64 (-.f64 1 x) (pow.f64 y 3) (neg.f64 (*.f64 x y))))) (*.f64 (-.f64 (-.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3)) (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 3)) (+.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) (+.f64 (*.f64 (*.f64 x x) (pow.f64 y -6)) (/.f64 (*.f64 (-.f64 1 x) x) (pow.f64 y 4))))) (*.f64 (fma.f64 x x (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) x))) (-.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 3) (*.f64 (pow.f64 x 3) (pow.f64 y -9))))) (*.f64 (fma.f64 x x (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) x))) (+.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) (+.f64 (*.f64 (*.f64 x x) (pow.f64 y -6)) (/.f64 (*.f64 (-.f64 1 x) x) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (*.f64 x x) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 2)) (+.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) (+.f64 (*.f64 (*.f64 x x) (pow.f64 y -6)) (/.f64 (*.f64 (-.f64 1 x) x) (pow.f64 y 4))))) (*.f64 (-.f64 (-.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3)) (-.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 3) (*.f64 (pow.f64 x 3) (pow.f64 y -9))))) (*.f64 (-.f64 (-.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3)) (+.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) (+.f64 (*.f64 (*.f64 x x) (pow.f64 y -6)) (/.f64 (*.f64 (-.f64 1 x) x) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 3)) (+.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))) (*.f64 (fma.f64 x x (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) x))) (-.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) (*.f64 (*.f64 x x) (pow.f64 y -6))))) (*.f64 (fma.f64 x x (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) x))) (+.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (*.f64 x x) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 2)) (+.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))) (*.f64 (-.f64 (-.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3)) (-.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) (*.f64 (*.f64 x x) (pow.f64 y -6))))) (*.f64 (-.f64 (-.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3)) (+.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (fma.f64 (-.f64 1 x) (pow.f64 y 3) (neg.f64 (*.f64 x y))) (fma.f64 x x (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) x)))) (*.f64 (pow.f64 y 4) (+.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 3)))) (*.f64 (pow.f64 y 4) (fma.f64 x x (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 3) (*.f64 (pow.f64 x 3) (pow.f64 y -9))) (fma.f64 x x (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) x)))) (*.f64 (+.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) (+.f64 (*.f64 (*.f64 x x) (pow.f64 y -6)) (/.f64 (*.f64 (-.f64 1 x) x) (pow.f64 y 4)))) (+.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 3)))) (*.f64 (+.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) (+.f64 (*.f64 (*.f64 x x) (pow.f64 y -6)) (/.f64 (*.f64 (-.f64 1 x) x) (pow.f64 y 4)))) (fma.f64 x x (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) (*.f64 (*.f64 x x) (pow.f64 y -6))) (fma.f64 x x (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) x)))) (*.f64 (+.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (+.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 3)))) (*.f64 (+.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (fma.f64 x x (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (fma.f64 (-.f64 1 x) (pow.f64 y 3) (neg.f64 (*.f64 x y))) (-.f64 (-.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3))) (*.f64 (pow.f64 y 4) (-.f64 (*.f64 x x) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 2)))) (*.f64 (pow.f64 y 4) (-.f64 (-.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 3) (*.f64 (pow.f64 x 3) (pow.f64 y -9))) (-.f64 (-.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3))) (*.f64 (+.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) (+.f64 (*.f64 (*.f64 x x) (pow.f64 y -6)) (/.f64 (*.f64 (-.f64 1 x) x) (pow.f64 y 4)))) (-.f64 (*.f64 x x) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 2)))) (*.f64 (+.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) (+.f64 (*.f64 (*.f64 x x) (pow.f64 y -6)) (/.f64 (*.f64 (-.f64 1 x) x) (pow.f64 y 4)))) (-.f64 (-.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) (*.f64 (*.f64 x x) (pow.f64 y -6))) (-.f64 (-.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3))) (*.f64 (+.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (-.f64 (*.f64 x x) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 2)))) (*.f64 (+.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (-.f64 (-.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y))) 3) (*.f64 (pow.f64 x 3) (pow.f64 y -9))) (+.f64 (*.f64 (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y))) (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y)))) (+.f64 (*.f64 (*.f64 x x) (pow.f64 y -6)) (*.f64 (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y))) (*.f64 x (pow.f64 y -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))) 3)) (+.f64 (*.f64 x x) (-.f64 (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))) (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))) (*.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y))) (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y)))) (*.f64 (*.f64 x x) (pow.f64 y -6))) (+.f64 (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y))) (*.f64 x (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))) (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))))) (-.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) 2) (pow.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2)) (-.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))) (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))) 2) (cbrt.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))) (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)))) 2) (cbrt.f64 (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)))) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))) (sqrt.f64 (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3)))) (+.f64 x (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 (pow.f64 y -3) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (hypot.f64 (pow.f64 y -3/2) (/.f64 (sqrt.f64 (+.f64 x -1)) y)) (sqrt.f64 x)) (hypot.f64 (hypot.f64 (pow.f64 y -3/2) (/.f64 (sqrt.f64 (+.f64 x -1)) y)) (sqrt.f64 x)) (-.f64 (/.f64 (-.f64 1 x) y) (*.f64 x (pow.f64 y -3))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4)) (-.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) (/.f64 (pow.f64 y -6) (-.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 2) (cbrt.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (pow.f64 y -3/2) (/.f64 (sqrt.f64 (+.f64 x -1)) y)) (hypot.f64 (pow.f64 y -3/2) (/.f64 (sqrt.f64 (+.f64 x -1)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (+.f64 x -1) y) (pow.f64 y 3) y) (/.f64 1 (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (pow.f64 (+.f64 x -1) 3) (pow.f64 y 6)) (pow.f64 y -9)) (/.f64 1 (+.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4)) (-.f64 (pow.f64 y -6) (/.f64 (/.f64 (+.f64 x -1) y) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4)) (pow.f64 y -6)) (/.f64 1 (-.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 y 4) (fma.f64 (/.f64 (+.f64 x -1) y) (pow.f64 y 3) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4)) (-.f64 (pow.f64 y -6) (/.f64 (/.f64 (+.f64 x -1) y) (pow.f64 y 4)))) (+.f64 (/.f64 (pow.f64 (+.f64 x -1) 3) (pow.f64 y 6)) (pow.f64 y -9))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (-.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4)) (pow.f64 y -6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (+.f64 x -1) y) (pow.f64 y 3) y) (pow.f64 y 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (pow.f64 (+.f64 x -1) 3) (pow.f64 y 6)) (pow.f64 y -9)) (+.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4)) (-.f64 (pow.f64 y -6) (/.f64 (/.f64 (+.f64 x -1) y) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (pow.f64 (+.f64 x -1) 3) (pow.f64 y 6)) (pow.f64 y -9)) (+.f64 (pow.f64 y -6) (-.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4)) (/.f64 (/.f64 (+.f64 x -1) y) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4)) (pow.f64 y -6)) (-.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (/.f64 (+.f64 x -1) y) (pow.f64 y 3) y)) (neg.f64 (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (/.f64 (pow.f64 (+.f64 x -1) 3) (pow.f64 y 6)) (pow.f64 y -9))) (neg.f64 (+.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4)) (-.f64 (pow.f64 y -6) (/.f64 (/.f64 (+.f64 x -1) y) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4)) (pow.f64 y -6))) (neg.f64 (-.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 x -1) (neg.f64 (pow.f64 y 3))) (*.f64 (*.f64 y y) -1)) (*.f64 (*.f64 y y) (neg.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 x -1) y) (neg.f64 (pow.f64 y 3))) (*.f64 y -1)) (*.f64 y (neg.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (pow.f64 y 3)) (*.f64 (*.f64 y (/.f64 y (+.f64 x -1))) -1)) (*.f64 (*.f64 y (/.f64 y (+.f64 x -1))) (neg.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 1 x) y) (neg.f64 (pow.f64 y 3))) (*.f64 (neg.f64 y) -1)) (*.f64 (neg.f64 y) (neg.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 x -1) (pow.f64 y 3)) (*.f64 (*.f64 y y) 1)) (*.f64 (*.f64 y y) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 y (/.f64 y (+.f64 x -1))) 1)) (*.f64 (*.f64 y (/.f64 y (+.f64 x -1))) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 1 x) y) (pow.f64 y 3)) (*.f64 (neg.f64 y) 1)) (*.f64 (neg.f64 y) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -1 (*.f64 y y)) (*.f64 (neg.f64 (pow.f64 y 3)) (+.f64 x -1))) (*.f64 (neg.f64 (pow.f64 y 3)) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y y) (*.f64 (pow.f64 y 3) (+.f64 x -1))) (*.f64 (pow.f64 y 3) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 y) (*.f64 (neg.f64 (pow.f64 y 3)) (/.f64 (+.f64 x -1) y))) (*.f64 (neg.f64 (pow.f64 y 3)) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -1 (*.f64 y (/.f64 y (+.f64 x -1)))) (*.f64 (neg.f64 (pow.f64 y 3)) 1)) (*.f64 (neg.f64 (pow.f64 y 3)) (*.f64 y (/.f64 y (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (/.f64 y (+.f64 x -1))) (pow.f64 y 3)) (*.f64 (pow.f64 y 3) (*.f64 y (/.f64 y (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -1 (neg.f64 y)) (*.f64 (neg.f64 (pow.f64 y 3)) (/.f64 (-.f64 1 x) y))) (*.f64 (neg.f64 (pow.f64 y 3)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 y) (*.f64 (pow.f64 y 3) (/.f64 (-.f64 1 x) y))) (*.f64 (pow.f64 y 3) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 y -6) (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4))) (-.f64 (pow.f64 y -3) (/.f64 (+.f64 x -1) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (/.f64 (+.f64 x -1) y) (pow.f64 y 3) y) y) (pow.f64 y 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (pow.f64 y -3/2) (/.f64 (sqrt.f64 (+.f64 x -1)) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x -1) y) (/.f64 1 y) (pow.f64 y -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 y -3) (/.f64 (+.f64 x -1) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 y -6)) (/.f64 1 y) (/.f64 (+.f64 x -1) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4))) (cbrt.f64 (/.f64 (+.f64 x -1) (*.f64 y y))) (pow.f64 y -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y -3/2) (pow.f64 y -3/2) (/.f64 (+.f64 x -1) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (+.f64 x -1)) y) (/.f64 (sqrt.f64 (+.f64 x -1)) y) (pow.f64 y -3))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (pow.f64 y -3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 y -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (pow.f64 y -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -3) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 y -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (pow.f64 y -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) y) (pow.f64 (/.f64 (cbrt.f64 x) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 x) y) 2) (/.f64 (cbrt.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -3/2) (/.f64 x (pow.f64 y 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (pow.f64 y -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 x) (pow.f64 y -3/2)) (*.f64 (sqrt.f64 x) (pow.f64 y -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) y) (/.f64 (sqrt.f64 x) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) y) (/.f64 (cbrt.f64 x) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (*.f64 y y)) (/.f64 (sqrt.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 y y)) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 y y)) (/.f64 (cbrt.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 y 3/2)) (/.f64 (cbrt.f64 x) (pow.f64 y 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 y -6))) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 y -3/2)) (pow.f64 y -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (pow.f64 y -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 x) y) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 x) (pow.f64 y -3/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3) (pow.f64 y -9)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 y 3) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 x x) (pow.f64 y -6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (pow.f64 y -3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 y -9)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (pow.f64 y -3))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (+.f64 x -1) (*.f64 y y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x -1) (cbrt.f64 (pow.f64 y -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x -1) (/.f64 1 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x -1) y) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x -1) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 x) y) (/.f64 1 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x -1) y)) 2) (*.f64 (cbrt.f64 (/.f64 (+.f64 x -1) y)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x -1) (*.f64 y y))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4))) (cbrt.f64 (/.f64 (+.f64 x -1) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 x -1) y)) (*.f64 (sqrt.f64 (/.f64 (+.f64 x -1) y)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x -1)) y) (/.f64 (sqrt.f64 (+.f64 x -1)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (/.f64 (+.f64 x -1) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (/.f64 (+.f64 x -1) y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 y)) (/.f64 (/.f64 (+.f64 x -1) y) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x -1) (sqrt.f64 y)) (/.f64 (/.f64 1 y) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x -1)) 2) y) (/.f64 (cbrt.f64 (+.f64 x -1)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x -1) 1) (/.f64 (/.f64 1 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x -1) y)) 2) 1) (/.f64 (cbrt.f64 (/.f64 (+.f64 x -1) y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 (+.f64 x -1) y)) 1) (/.f64 (sqrt.f64 (/.f64 (+.f64 x -1) y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x -1) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (/.f64 1 y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x -1) y)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (+.f64 x -1) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 (+.f64 x -1) y)) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 (/.f64 (+.f64 x -1) y)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x -1) y)) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 (/.f64 (+.f64 x -1) y)) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x -1) (*.f64 y y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (+.f64 x -1)) y) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (+.f64 x -1) 3) (pow.f64 y 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (/.f64 y (+.f64 x -1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (+.f64 x -1) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (+.f64 x -1) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 x -1) (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 x -1) 3) (pow.f64 y 6)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 x -1) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 x -1) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (+.f64 x -1) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 x -1) (*.f64 y y))) 1))))))"]],"rules":[["egg-rr",38],["egg-rr",37],["egg-rr",55],["egg-rr",56]],"stop":[["node limit",1]],"time":97.10595703125,"type":"rewrite"},{"count":[[258,218]],"egraph":[[4,6083,1235,0.027781249],[3,2335,1235,0.014665833],[2,571,1437,0.006063249999999999],[1,179,1476,0.001391917],[0,58,1596,0.000375917]],"inputs":[["(-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x) (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x) (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x) (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 2)))","(*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x)","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x) (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x) (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x) (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 2)))","(*.f64 -1 (*.f64 (-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (*.f64 (-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (*.f64 (-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (*.f64 (-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x)))) (/.f64 1 (pow.f64 y 2)))","(/.f64 (-.f64 1 x) (pow.f64 y 3))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 x y))))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) x))) (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 x y))))","x","(-.f64 (+.f64 (/.f64 1 y) x) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (pow.f64 y 2)) x)) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) x))) (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 x y))))","x","(-.f64 (+.f64 (/.f64 1 y) x) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (pow.f64 y 2)) x)) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) x)))) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 x y)))","(-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(/.f64 x (pow.f64 y 2))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(/.f64 x (pow.f64 y 2))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(/.f64 1 (pow.f64 y 3))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(/.f64 -1 (pow.f64 y 2))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 x (pow.f64 y 2))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 x (pow.f64 y 2))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (/.f64 1 y) (/.f64 -1 (*.f64 y y))))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x) (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (*.f64 y y)))","(+.f64 (fma.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x (/.f64 1 (pow.f64 y 3))) (-.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x) (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (*.f64 y y)))","(+.f64 (fma.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x (/.f64 1 (pow.f64 y 3))) (-.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x) (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (*.f64 y y)))","(+.f64 (fma.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x (/.f64 1 (pow.f64 y 3))) (-.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x)","(*.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x)","(*.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x)","(*.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))))","(-.f64 (fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 x (*.f64 y y)) x) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x) (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (*.f64 y y)))","(+.f64 (fma.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x (/.f64 1 (pow.f64 y 3))) (-.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x) (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (*.f64 y y)))","(+.f64 (fma.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x (/.f64 1 (pow.f64 y 3))) (-.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) 1) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3)))) x) (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (*.f64 y y)))","(+.f64 (fma.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x (/.f64 1 (pow.f64 y 3))) (-.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) y))","(*.f64 -1 (*.f64 (-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x))","(*.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x)","(*.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x)","(*.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))))","(-.f64 (fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 x (*.f64 y y)) x) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (*.f64 (-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (*.f64 y y)))","(+.f64 (fma.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x (/.f64 1 (pow.f64 y 3))) (-.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (*.f64 (-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (*.f64 y y)))","(+.f64 (fma.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x (/.f64 1 (pow.f64 y 3))) (-.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (*.f64 (-.f64 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (*.f64 y y)))","(+.f64 (fma.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x (/.f64 1 (pow.f64 y 3))) (-.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) y))","(/.f64 (-.f64 1 x) (pow.f64 y 3))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3)))))","(+.f64 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (-.f64 1 x) (pow.f64 y 3))) (/.f64 -1 (*.f64 y y)))","(-.f64 (/.f64 (-.f64 1 x) (pow.f64 y 3)) (/.f64 (-.f64 1 x) (*.f64 y y)))","(+.f64 (/.f64 (-.f64 1 x) (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 x y))))","(-.f64 (+.f64 (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x y))))","(+.f64 (/.f64 1 y) (-.f64 (+.f64 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (-.f64 1 x) (pow.f64 y 3))) (/.f64 -1 (*.f64 y y))) (/.f64 x y)))","(-.f64 (-.f64 (/.f64 (-.f64 1 x) (pow.f64 y 3)) (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 (+.f64 x -1) y))","(-.f64 (/.f64 (-.f64 1 x) (pow.f64 y 3)) (+.f64 (/.f64 (-.f64 1 x) (*.f64 y y)) (/.f64 (+.f64 x -1) y)))","(+.f64 (+.f64 (/.f64 (-.f64 1 x) (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y))) (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) x))) (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 x y))))","(-.f64 (+.f64 (/.f64 1 y) (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (*.f64 y y)))","(+.f64 (fma.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x (/.f64 1 (pow.f64 y 3))) (-.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) y))","x","(-.f64 (+.f64 (/.f64 1 y) x) (/.f64 x y))","(+.f64 x (-.f64 (/.f64 1 y) (/.f64 x y)))","(+.f64 x (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (pow.f64 y 2)) x)) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 x (/.f64 x (*.f64 y y)))) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x y)))","(+.f64 (/.f64 1 y) (+.f64 x (-.f64 (/.f64 x (*.f64 y y)) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x y)))))","(-.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) x))) (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 x y))))","(-.f64 (+.f64 (/.f64 1 y) (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (*.f64 y y)))","(+.f64 (fma.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x (/.f64 1 (pow.f64 y 3))) (-.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) y))","x","(-.f64 (+.f64 (/.f64 1 y) x) (/.f64 x y))","(+.f64 x (-.f64 (/.f64 1 y) (/.f64 x y)))","(+.f64 x (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (pow.f64 y 2)) x)) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 x (/.f64 x (*.f64 y y)))) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x y)))","(+.f64 (/.f64 1 y) (+.f64 x (-.f64 (/.f64 x (*.f64 y y)) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x y)))))","(-.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 x (/.f64 (+.f64 x -1) (*.f64 y y))) (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) x)))) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 1 y) (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))) x (/.f64 1 (pow.f64 y 3)))) (/.f64 1 (*.f64 y y)))","(+.f64 (fma.f64 (-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 y))) (/.f64 1 (pow.f64 y 3))) x (/.f64 1 (pow.f64 y 3))) (-.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 -1 (pow.f64 y 3)))) (/.f64 1 (pow.f64 y 3))) (+.f64 (/.f64 1 y) (/.f64 (/.f64 -1 y) y)))","(-.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (+.f64 x -1) y))","(+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (+.f64 x (/.f64 (-.f64 1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) y))","(-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y)))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y y)))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (/.f64 -1 y) y))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 (/.f64 x y) y)","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 (/.f64 x y) y)","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(/.f64 1 (pow.f64 y 3))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (+.f64 x -1) (*.f64 y y)))","(/.f64 -1 (pow.f64 y 2))","(/.f64 -1 (*.f64 y y))","(/.f64 (/.f64 -1 y) y)","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 (/.f64 x y) y)","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 (/.f64 x y) y)","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))"]],"stop":[["node limit",1]],"time":58.4189453125,"type":"simplify"},{"compiler":[[8284,5368]],"time":89.201171875,"type":"eval"},{"alts":[["(/.f64 (-.f64 (*.f64 (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y))) (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y)))) (*.f64 (*.f64 x x) (pow.f64 y -6))) (+.f64 (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y))) (*.f64 x (pow.f64 y -3))))","fresh",44.56374487182161],["(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","next",32.867408839710215],["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","done",14.045455178836026],["(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","done",14.137537328545019]],"compiler":[[75,47],[15,11],[12,9],[14,11],[75,47],[15,11]],"count":[[222,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[218,1],"picked":[1,0]}],"min-error":[0],"time":49.90087890625,"type":"prune"},{"compiler":[[46,32]],"locations":[["(/.f64 (-.f64 1 x) y)",0.00390625,true],["(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))",0.00390625,true],["(*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y))",0.07421875,true]],"time":10.573974609375,"type":"localize"},{"count":[[3,60]],"series":[["(/.f64 (-.f64 1 x) y)","y","-inf",0.25],["(/.f64 (-.f64 1 x) y)","y","inf",0.220947265625],["(/.f64 (-.f64 1 x) y)","y","0",0.2939453125],["(/.f64 (-.f64 1 x) y)","x","-inf",0.23486328125],["(/.f64 (-.f64 1 x) y)","x","inf",0.260009765625],["(/.f64 (-.f64 1 x) y)","x","0",0.27587890625],["(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","y","-inf",0.1669921875],["(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","y","inf",0.193115234375],["(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","y","0",0.177978515625],["(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","x","-inf",0.2421875],["(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","x","inf",0.203125],["(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","x","0",0.2080078125],["(*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y))","x","-inf",0.38916015625],["(*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y))","x","inf",0.412109375],["(*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y))","x","0",0.458984375],["(*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y))","y","-inf",0.64990234375],["(*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y))","y","inf",0.4140625],["(*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y))","y","0",0.51611328125]],"time":5.80517578125,"type":"series"},{"count":[[3,190]],"egraph":[[2,3703,40,0.029082916],[1,249,40,0.004809166],[0,11,42,0.000328]],"inputs":[["(*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y))","(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","(/.f64 (-.f64 1 x) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 1 x) y) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 1 x) y) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)) (/.f64 (-.f64 1 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 y (*.f64 (+.f64 (/.f64 -1 y) 1) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (/.f64 -1 (pow.f64 y 3))) (*.f64 (/.f64 y (-.f64 1 x)) (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (/.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 1 (*.f64 y y)) -1) (*.f64 (/.f64 y (-.f64 1 x)) (+.f64 (/.f64 -1 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (/.f64 -1 y) 1) (-.f64 1 x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (/.f64 -1 y) 1) (-.f64 1 x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (/.f64 -1 (pow.f64 y 3))) 1) (*.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (/.f64 -1 y))) (/.f64 y (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 y y)) -1) 1) (*.f64 (+.f64 (/.f64 -1 y) -1) (/.f64 y (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (/.f64 -1 (pow.f64 y 3))) (-.f64 1 x)) (*.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (/.f64 -1 y))) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 y y)) -1) (-.f64 1 x)) (*.f64 (+.f64 (/.f64 -1 y) -1) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (/.f64 -1 (pow.f64 y 3))) (neg.f64 (-.f64 1 x))) (*.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (/.f64 -1 y))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 y y)) -1) (neg.f64 (-.f64 1 x))) (*.f64 (+.f64 (/.f64 -1 y) -1) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 x) (+.f64 1 (/.f64 -1 (pow.f64 y 3)))) (*.f64 y (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (/.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 1 x)) (+.f64 1 (/.f64 -1 (pow.f64 y 3)))) (*.f64 (neg.f64 y) (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (/.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 x) (+.f64 (/.f64 1 (*.f64 y y)) -1)) (*.f64 y (+.f64 (/.f64 -1 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 1 x)) (+.f64 (/.f64 1 (*.f64 y y)) -1)) (*.f64 (neg.f64 y) (+.f64 (/.f64 -1 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (/.f64 -1 y) 1) (-.f64 1 x)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (/.f64 -1 y) 1) (-.f64 1 x)) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (/.f64 -1 y) 1) (-.f64 1 x)) (sqrt.f64 y)) (sqrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (/.f64 -1 (pow.f64 y 3))) (/.f64 (-.f64 1 x) y)) (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (/.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 y y)) -1) (/.f64 (-.f64 1 x) y)) (+.f64 (/.f64 -1 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 1 x)) (+.f64 (/.f64 -1 y) 1)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (/.f64 -1 y) 1) (neg.f64 (-.f64 1 x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 1 x) y) (+.f64 1 (/.f64 -1 (pow.f64 y 3)))) (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (/.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 1 x) y) (+.f64 (/.f64 1 (*.f64 y y)) -1)) (+.f64 (/.f64 -1 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (*.f64 (+.f64 (/.f64 -1 y) 1) (-.f64 1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log1p.f64 (/.f64 -1 y)) (log.f64 (/.f64 y (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log1p.f64 (/.f64 -1 y)) (log.f64 (/.f64 y (-.f64 1 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y) (/.f64 (-.f64 1 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 1 x) y) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 1 x) y) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 x) (/.f64 1 y) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 x) (/.f64 1 y) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y) (/.f64 (-.f64 1 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 x) y) 1 (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 x) y) 1 (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) 2) (*.f64 (cbrt.f64 (-.f64 1 x)) (/.f64 1 y)) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) 2) (*.f64 (cbrt.f64 (-.f64 1 x)) (/.f64 1 y)) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) 2) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) 2) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) 2) (cbrt.f64 (/.f64 (-.f64 1 x) y)) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) 2) (cbrt.f64 (/.f64 (-.f64 1 x) y)) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 1 x)) (*.f64 (sqrt.f64 (-.f64 1 x)) (/.f64 1 y)) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 1 x)) (*.f64 (sqrt.f64 (-.f64 1 x)) (/.f64 1 y)) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 1 x) y)) (sqrt.f64 (/.f64 (-.f64 1 x) y)) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 1 x) y)) (sqrt.f64 (/.f64 (-.f64 1 x) y)) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (-.f64 1 x)) (/.f64 -1 y) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (-.f64 1 x)) (/.f64 -1 y) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 y) (-.f64 1 x) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 y) (-.f64 1 x) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) 2) 1) (/.f64 (cbrt.f64 (-.f64 1 x)) y) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) 2) 1) (/.f64 (cbrt.f64 (-.f64 1 x)) y) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 1 x)) 1) (/.f64 (sqrt.f64 (-.f64 1 x)) y) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 1 x)) 1) (/.f64 (sqrt.f64 (-.f64 1 x)) y) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (-.f64 1 x) (cbrt.f64 y)) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (-.f64 1 x) (cbrt.f64 y)) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (-.f64 1 x) y)) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (-.f64 1 x) y)) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 1 x)) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 (-.f64 1 x)) (cbrt.f64 y)) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 1 x)) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 (-.f64 1 x)) (cbrt.f64 y)) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 y)) (/.f64 (-.f64 1 x) (sqrt.f64 y)) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 y)) (/.f64 (-.f64 1 x) (sqrt.f64 y)) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 (-.f64 1 x)) (sqrt.f64 y)) (*.f64 (/.f64 -1 y) (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 (-.f64 1 x)) (sqrt.f64 y)) (*.f64 (/.f64 (-.f64 1 x) y) (/.f64 -1 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x x) (-.f64 x (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))) (/.f64 (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 2) (-.f64 x (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)) 2) (cbrt.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)) (sqrt.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 3)) (/.f64 1 (fma.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) (-.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x x) (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 2)) (/.f64 1 (-.f64 x (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) (-.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) x) (*.f64 x x)) (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 x (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))) (-.f64 (*.f64 x x) (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 3)) (fma.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) (-.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 3)) (+.f64 (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 2) (-.f64 (*.f64 x x) (*.f64 x (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 2)) (-.f64 x (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 3))) (neg.f64 (fma.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) (-.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 x x) (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 2))) (neg.f64 (-.f64 x (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 2) (*.f64 x x)) (-.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) (-.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) x) (*.f64 x x)) (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))) (-.f64 (*.f64 x x) (pow.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 y) (+.f64 (/.f64 -1 y) 1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 x) y) (+.f64 (/.f64 -1 y) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) 2) (*.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) (+.f64 (/.f64 -1 y) 1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 y) 1)) 2) (*.f64 (cbrt.f64 (+.f64 (/.f64 -1 y) 1)) (/.f64 (-.f64 1 x) y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))) 2) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))) 2) (cbrt.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 1 x) y)) (*.f64 (sqrt.f64 (/.f64 (-.f64 1 x) y)) (+.f64 (/.f64 -1 y) 1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 -1 y) 1)) (*.f64 (sqrt.f64 (+.f64 (/.f64 -1 y) 1)) (/.f64 (-.f64 1 x) y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))) (sqrt.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (/.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 y (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 (/.f64 -1 y) 1) (-.f64 1 x)) (/.f64 1 y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) 1) (/.f64 (-.f64 1 x) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (-.f64 1 x) (cbrt.f64 y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (/.f64 -1 y) 1) (sqrt.f64 y)) (/.f64 (-.f64 1 x) (sqrt.f64 y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 (/.f64 -1 y) 1) (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) 2)) (cbrt.f64 (/.f64 (-.f64 1 x) y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 (/.f64 -1 y) 1) (sqrt.f64 (/.f64 (-.f64 1 x) y))) (sqrt.f64 (/.f64 (-.f64 1 x) y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 1 x) y) (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 y) 1)) 2)) (cbrt.f64 (+.f64 (/.f64 -1 y) 1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 1 x) y) (sqrt.f64 (+.f64 (/.f64 -1 y) 1))) (sqrt.f64 (+.f64 (/.f64 -1 y) 1)) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 1 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 y) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 1 x) y))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 1 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 1 x) y)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 1 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 y) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 1 x) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 1 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 x) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 x) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) 2) (*.f64 (cbrt.f64 (-.f64 1 x)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) 2) (cbrt.f64 (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 x)) (*.f64 (sqrt.f64 (-.f64 1 x)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 1 x) y)) (sqrt.f64 (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 1 x)) (/.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) 2) 1) (/.f64 (cbrt.f64 (-.f64 1 x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 1 x)) 1) (/.f64 (sqrt.f64 (-.f64 1 x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (-.f64 1 x) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 1 x)) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 (-.f64 1 x)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 y)) (/.f64 (-.f64 1 x) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 (-.f64 1 x)) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 x) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 1 x) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 1 x) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 y 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 y (-.f64 1 x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 1 x) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 1 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 1 x) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 1 x) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 y) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 1 y)) 2) (cbrt.f64 (/.f64 1 y)) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 1 y)) (sqrt.f64 (/.f64 1 y)) (neg.f64 (/.f64 x y)))))))"]],"rules":[["egg-rr",44],["egg-rr",63],["egg-rr",83]],"stop":[["node limit",1]],"time":60.65380859375,"type":"rewrite"},{"count":[[250,215]],"egraph":[[5,7623,760,0.035301292000000005],[4,3314,760,0.023834709000000003],[3,853,760,0.007662667],[2,288,886,0.002141876],[1,120,1040,0.000760959],[0,42,1165,0.000243417]],"inputs":[["(*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(/.f64 (-.f64 1 x) y)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(/.f64 (-.f64 1 x) y)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(/.f64 (-.f64 1 (/.f64 1 y)) y)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)) (/.f64 1 (pow.f64 y 2)))","(*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)) (/.f64 1 (pow.f64 y 2)))","(*.f64 -1 (*.f64 (-.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x))) (/.f64 1 (pow.f64 y 2)))","(*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))) x)) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))) x)) (/.f64 x y))","x","(-.f64 (+.f64 (/.f64 1 y) x) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))) x)) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))) x)) (/.f64 x y))","x","(-.f64 (+.f64 (/.f64 1 y) x) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))) x)) (/.f64 x y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))) x)) (/.f64 x y))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (/.f64 x y))","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (/.f64 x y))","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))","(neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y)))","(/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(/.f64 (-.f64 1 x) y)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(/.f64 (-.f64 1 x) y)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(/.f64 (-.f64 1 (/.f64 1 y)) y)","(/.f64 (+.f64 1 (/.f64 -1 y)) y)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))","(neg.f64 (/.f64 (-.f64 1 (/.f64 1 y)) (/.f64 y x)))","(/.f64 (neg.f64 (+.f64 1 (/.f64 -1 y))) (/.f64 y x))","(/.f64 (neg.f64 (-.f64 x (/.f64 x y))) y)","(/.f64 (-.f64 (/.f64 x y) x) y)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))","(neg.f64 (/.f64 (-.f64 1 (/.f64 1 y)) (/.f64 y x)))","(/.f64 (neg.f64 (+.f64 1 (/.f64 -1 y))) (/.f64 y x))","(/.f64 (neg.f64 (-.f64 x (/.f64 x y))) y)","(/.f64 (-.f64 (/.f64 x y) x) y)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 1 y)) x) y))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 2)))","(/.f64 (-.f64 1 (/.f64 1 y)) y)","(/.f64 (+.f64 1 (/.f64 -1 y)) y)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)","(*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1))","(*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y)))","(fma.f64 x (/.f64 (+.f64 -1 (/.f64 1 y)) y) x)","(+.f64 x (/.f64 (-.f64 (/.f64 x y) x) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y)) 1) x)) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(*.f64 -1 (*.f64 (-.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x))","(*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1))","(*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y)))","(fma.f64 x (/.f64 (+.f64 -1 (/.f64 1 y)) y) x)","(+.f64 x (/.f64 (-.f64 (/.f64 x y) x) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (pow.f64 y 2)))) x))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))","(neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y)))","(/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 x y)))","(+.f64 (/.f64 (neg.f64 (-.f64 1 x)) (*.f64 y y)) (/.f64 (-.f64 1 x) y))","(*.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y))","(*.f64 (-.f64 1 x) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))) x)) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))) x)) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","x","(-.f64 (+.f64 (/.f64 1 y) x) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 x (/.f64 x y)))","(+.f64 x (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))) x)) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))) x)) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","x","(-.f64 (+.f64 (/.f64 1 y) x) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 x (/.f64 x y)))","(+.f64 x (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))) x)) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))) x)) (/.f64 x y))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (fma.f64 -1 (/.f64 (-.f64 1 (/.f64 1 y)) y) 1)) (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 x (-.f64 1 (/.f64 (+.f64 1 (/.f64 -1 y)) y))) (/.f64 (+.f64 1 (/.f64 -1 y)) y))","(+.f64 x (-.f64 (/.f64 (+.f64 1 (/.f64 -1 y)) y) (/.f64 (-.f64 x (/.f64 x y)) y)))","(fma.f64 (+.f64 1 (/.f64 -1 y)) (/.f64 (-.f64 1 x) y) x)","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(/.f64 (-.f64 1 x) y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(/.f64 (-.f64 1 x) y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(/.f64 (-.f64 1 x) y)","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(/.f64 (-.f64 1 x) y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(/.f64 (-.f64 1 x) y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(/.f64 (-.f64 1 x) y)","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(/.f64 (-.f64 1 x) y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(/.f64 (-.f64 1 x) y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x y)))","(/.f64 (-.f64 1 x) y)"]],"stop":[["node limit",1]],"time":60.3349609375,"type":"simplify"},{"compiler":[[4297,3022]],"time":48.921142578125,"type":"eval"},{"alts":[["(/.f64 (-.f64 (*.f64 (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y))) (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y)))) (*.f64 (*.f64 x x) (pow.f64 y -6))) (+.f64 (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y))) (*.f64 x (pow.f64 y -3))))","fresh",44.56374487182161],["(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","done",32.867408839710215],["(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","done",14.045455178836026],["(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","done",14.137537328545019]],"compiler":[[75,47],[15,11],[12,9],[14,11]],"count":[[219,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[215,0],"picked":[1,1]}],"min-error":[0],"time":46.9208984375,"type":"prune"},{"accuracy":[0.0078125],"baseline":[14.045455178836026],"branch":[["x",9.153184957051463,7],["y",0.0078125,3],["(-.f64 1 (/.f64 (*.f64 (-.f64 1 x) y) (+.f64 y 1)))",0.015625,3],["(/.f64 (*.f64 (-.f64 1 x) y) (+.f64 y 1))",0.015625,3],["(-.f64 1 x)",14.045455178836026,1]],"compiler":[[3,2],[3,2],[13,10],[11,8],[5,4],[188,124]],"count":[[8,3]],"inputs":[["(/.f64 (-.f64 (*.f64 (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y))) (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y)))) (*.f64 (*.f64 x x) (pow.f64 y -6))) (+.f64 (+.f64 x (+.f64 (+.f64 (/.f64 (+.f64 x -1) (*.f64 y y)) (pow.f64 y -3)) (/.f64 (-.f64 1 x) y))) (*.f64 x (pow.f64 y -3))))","(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))","(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","(+.f64 x (+.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (-.f64 1 x) (*.f64 y y))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3)))))","(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","(fma.f64 (-.f64 1 x) (/.f64 y (-.f64 -1 y)) 1)","(-.f64 1 (/.f64 (*.f64 (-.f64 1 x) y) (+.f64 y 1)))"]],"link":["."],"name":["Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, D"],"oracle":[57.08049720603761],"outputs":[["(+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y)))","(fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1)","(+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))"]],"time":67.0341796875,"times":[["x",27.760986328125],["y",12.15087890625],["(-.f64 1 (/.f64 (*.f64 (-.f64 1 x) y) (+.f64 y 1)))",7.1298828125],["(/.f64 (*.f64 (-.f64 1 x) y) (+.f64 y 1))",10.399169921875],["(-.f64 1 x)",6.31396484375]],"type":"regimes"},{"bstep":[[3441.068712305571,13630.642759286447,8.64013671875],[-17044193038341.664,-1.5957169926086505,8.8701171875]],"compiler":[[15,12],[3,2]],"method":["binary-search","binary-search"],"time":17.656982421875,"type":"bsearch"},{"compiler":[[62,44]],"egraph":[[4,68,88,0.00033916700000000003],[3,65,88,0.000266584],[2,59,88,0.000194709],[1,49,88,0.00012625],[0,33,88,5.8333e-5]],"inputs":[["(if (<=.f64 y -2181656708907733/128) (+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y))) (if (<=.f64 y 7566990122312325/2199023255552) (fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1) (+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 y -2181656708907733/128) (+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y))) (if (<=.f64 y 7566990122312325/2199023255552) (fma.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 -1 y)) y) 1) (+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 -1 x) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))))","(if (<=.f64 y -2181656708907733/128) (+.f64 x (*.f64 (+.f64 (/.f64 -1 y) 1) (/.f64 (-.f64 1 x) y))) (if (<=.f64 y 7566990122312325/2199023255552) (fma.f64 (-.f64 1 x) (*.f64 y (/.f64 1 (-.f64 -1 y))) 1) (+.f64 (+.f64 x (+.f64 (/.f64 (/.f64 (+.f64 x -1) y) y) (/.f64 1 (pow.f64 y 3)))) (-.f64 (/.f64 (-.f64 1 x) y) (/.f64 x (pow.f64 y 3))))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.993896484375,"type":"simplify"},{"time":0.027099609375,"type":"soundness"},{"compiler":[[62,44]],"remove-preprocessing":[[]],"time":20.848876953125,"type":"end"}]