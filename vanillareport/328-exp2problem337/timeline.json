[{"compiler":[[10,8]],"method":["search"],"sampling":[[12,0.5036602020263672,0.0009760856628417969,0.495363712310791],[11,0.5036602020263672,0.0019521713256835938,0.4943876266479492],[10,0.5036602020263672,0.0039043426513671875,0.4924354553222656],[9,0.499755859375,0.007808685302734375,0.4924354553222656],[8,0.499755859375,0.01561737060546875,0.48462677001953125],[7,0.499755859375,0.0312347412109375,0.4690093994140625],[6,0.499755859375,0.062469482421875,0.437774658203125],[5,0.499755859375,0.12493896484375,0.37530517578125],[4,0.499755859375,0.2498779296875,0.2503662109375],[3,0.499755859375,0.499755859375,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":1.68310546875,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.358154296875,8],["body",512,"valid",96.616943359375,1053],["body",1024,"valid",358.298583984375,2078],["body",2048,"valid",1658.61474609375,4274],["body",256,"valid",36.545654296875,851]],"time":2158.697998046875,"type":"sample"},{"compiler":[[9,7]],"egraph":[[0,1,1,1.667e-6],[9,7605,13,0.036063626],[8,3148,13,0.025231917],[7,1730,13,0.012084167],[6,709,13,0.006128083],[5,273,13,0.0025336250000000003],[4,122,13,0.00115025],[3,60,13,0.0005429160000000001],[2,36,13,0.000272125],[1,20,13,0.00014791700000000001],[0,8,13,6.9209e-5]],"inputs":[["0"],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","(+.f64 (+.f64 (exp.f64 x) -2) (exp.f64 (neg.f64 x)))","(+.f64 (exp.f64 x) (+.f64 -2 (exp.f64 (neg.f64 x))))","(+.f64 (exp.f64 x) (+.f64 (exp.f64 (neg.f64 x)) -2))","(+.f64 -2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":60.1708984375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[9,7605,13,0.035176917],[8,3148,13,0.024520417],[7,1730,13,0.011822125],[6,709,13,0.005996417],[5,273,13,0.002499292],[4,122,13,0.001133625],[3,60,13,0.000531625],[2,36,13,0.00026566700000000003],[1,20,13,0.000142625],[0,8,13,6.475e-5]],"inputs":[["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","(+.f64 (+.f64 (exp.f64 x) -2) (exp.f64 (neg.f64 x)))","(+.f64 (exp.f64 x) (+.f64 -2 (exp.f64 (neg.f64 x))))","(+.f64 (exp.f64 x) (+.f64 (exp.f64 (neg.f64 x)) -2))","(+.f64 -2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))"]],"stop":[["node limit",1]],"time":46.51416015625,"type":"simplify"},{"compiler":[[17,10]],"time":0.3408203125,"type":"eval"},{"alts":[["(+.f64 -2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))","fresh",28.97791042244496],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","next",28.929898395059208]],"compiler":[[9,7],[9,7],[9,7],[9,7]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[28.92178631442153],"time":1.237060546875,"type":"prune"},{"compiler":[[22,10]],"locations":[["(exp.f64 (neg.f64 x))",0.00390625,true],["(-.f64 (exp.f64 x) 2)",0.03515625,true],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))",3.7021616879806554,true]],"time":5.60302734375,"type":"localize"},{"count":[[3,24]],"series":[["(exp.f64 (neg.f64 x))","x","-inf",0.1669921875],["(exp.f64 (neg.f64 x))","x","inf",0.138916015625],["(exp.f64 (neg.f64 x))","x","0",0.178955078125],["(-.f64 (exp.f64 x) 2)","x","-inf",0.179931640625],["(-.f64 (exp.f64 x) 2)","x","inf",0.155029296875],["(-.f64 (exp.f64 x) 2)","x","0",0.197021484375],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","x","-inf",0.2509765625],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","x","inf",0.264892578125],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","x","0",0.452880859375]],"time":2.094970703125,"type":"series"},{"count":[[3,100]],"egraph":[[2,2653,20,0.019871167999999998],[1,181,20,0.003448376],[0,8,24,0.000250959]],"inputs":[["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","(-.f64 (exp.f64 x) 2)","(exp.f64 (neg.f64 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 x) (-.f64 2 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2) (+.f64 (exp.f64 x) (-.f64 -2 (exp.f64 x)))) (/.f64 (pow.f64 (exp.f64 x) 2) (+.f64 (exp.f64 x) (-.f64 -2 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 x) (exp.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)) (pow.f64 (cbrt.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)) 2) (cbrt.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)) (sqrt.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (+.f64 (exp.f64 x) -2) 3)) (/.f64 1 (+.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2) (*.f64 (exp.f64 x) (-.f64 (exp.f64 x) (+.f64 (exp.f64 x) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2) (pow.f64 (exp.f64 x) 2)) (/.f64 1 (+.f64 (exp.f64 x) (-.f64 -2 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2) (*.f64 (exp.f64 x) (-.f64 (exp.f64 x) (+.f64 (exp.f64 x) -2)))) (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (+.f64 (exp.f64 x) -2) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (exp.f64 x) (-.f64 -2 (exp.f64 x))) (-.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2) (pow.f64 (exp.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (+.f64 (exp.f64 x) -2) 3)) (+.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2) (*.f64 (exp.f64 x) (-.f64 (exp.f64 x) (+.f64 (exp.f64 x) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (+.f64 (exp.f64 x) -2) 3)) (+.f64 (pow.f64 (exp.f64 x) 2) (-.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2) (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2) (pow.f64 (exp.f64 x) 2)) (+.f64 (exp.f64 x) (-.f64 -2 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (+.f64 (exp.f64 x) -2) 3))) (neg.f64 (+.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2) (*.f64 (exp.f64 x) (-.f64 (exp.f64 x) (+.f64 (exp.f64 x) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2) (pow.f64 (exp.f64 x) 2))) (neg.f64 (+.f64 (exp.f64 x) (-.f64 -2 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (exp.f64 x) 3) -8) (exp.f64 x)) (*.f64 (+.f64 (pow.f64 (exp.f64 x) 2) (+.f64 4 (*.f64 (exp.f64 x) 2))) 1)) (*.f64 (+.f64 (pow.f64 (exp.f64 x) 2) (+.f64 4 (*.f64 (exp.f64 x) 2))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) -4) (exp.f64 x)) (*.f64 (+.f64 (exp.f64 x) 2) 1)) (*.f64 (+.f64 (exp.f64 x) 2) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (pow.f64 (exp.f64 x) 2) (+.f64 4 (*.f64 (exp.f64 x) 2))) (*.f64 (exp.f64 x) (+.f64 (pow.f64 (exp.f64 x) 3) -8))) (*.f64 (exp.f64 x) (+.f64 (pow.f64 (exp.f64 x) 2) (+.f64 4 (*.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (exp.f64 x) 2) (*.f64 (exp.f64 x) (fma.f64 (exp.f64 x) (exp.f64 x) -4))) (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (-.f64 2 (exp.f64 x)) 3)) (+.f64 (pow.f64 (exp.f64 x) 2) (+.f64 (*.f64 (-.f64 2 (exp.f64 x)) (-.f64 2 (exp.f64 x))) (*.f64 (exp.f64 x) (-.f64 2 (exp.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 x) 2) (*.f64 (-.f64 2 (exp.f64 x)) (-.f64 2 (exp.f64 x)))) (+.f64 (exp.f64 x) (-.f64 2 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 x) 2) (pow.f64 (+.f64 (exp.f64 x) -2) 2)) (-.f64 (exp.f64 x) (+.f64 (exp.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (+.f64 (exp.f64 x) (exp.f64 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 x) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 x) (neg.f64 (-.f64 2 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (exp.f64 x) -2) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) 2) (cbrt.f64 (+.f64 (exp.f64 x) -2)) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) (cbrt.f64 (exp.f64 x)) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) (cbrt.f64 (exp.f64 x)) (neg.f64 (-.f64 2 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (exp.f64 x) -2)) (sqrt.f64 (+.f64 (exp.f64 x) -2)) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (exp.f64 x)) (sqrt.f64 (exp.f64 x)) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (exp.f64 x)) (sqrt.f64 (exp.f64 x)) (neg.f64 (-.f64 2 (exp.f64 x))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 x) -2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -2 (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (exp.f64 x) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) (pow.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) 2) (cbrt.f64 (+.f64 (exp.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (exp.f64 x) -2)) (sqrt.f64 (+.f64 (exp.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (exp.f64 x) 3) -8) (/.f64 1 (+.f64 (pow.f64 (exp.f64 x) 2) (+.f64 4 (*.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (exp.f64 x) (exp.f64 x) -4) (/.f64 1 (+.f64 (exp.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (exp.f64 x) 2) (+.f64 4 (*.f64 (exp.f64 x) 2))) (+.f64 (pow.f64 (exp.f64 x) 3) -8)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (exp.f64 x) 2) (fma.f64 (exp.f64 x) (exp.f64 x) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (exp.f64 x) 3) -8) (+.f64 (pow.f64 (exp.f64 x) 2) (+.f64 4 (*.f64 (exp.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (exp.f64 x) 3) -8) (+.f64 (pow.f64 (exp.f64 x) 2) (-.f64 4 (*.f64 (exp.f64 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (exp.f64 x) (exp.f64 x) -4) (+.f64 (exp.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (exp.f64 x) (exp.f64 x) -4) (-.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (exp.f64 x) 3) -8)) (neg.f64 (+.f64 (pow.f64 (exp.f64 x) 2) (+.f64 4 (*.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (exp.f64 x) (exp.f64 x) -4)) (neg.f64 (+.f64 (exp.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (exp.f64 x) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (exp.f64 x) -2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (exp.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (exp.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (exp.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (exp.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 x) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) (cbrt.f64 (exp.f64 x)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (exp.f64 x)) (sqrt.f64 (exp.f64 x)) -2)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (expm1.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 x)) (pow.f64 (cbrt.f64 (exp.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 x)) (sqrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (exp.f64 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (exp.f64 x)) (sqrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (exp.f64 x)) 2)) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 x)))))))"]],"rules":[["egg-rr",26],["egg-rr",30],["egg-rr",44]],"stop":[["node limit",1]],"time":44.8291015625,"type":"rewrite"},{"count":[[124,127]],"egraph":[[4,4465,241,0.019560043],[3,1015,241,0.008200418000000001],[2,308,250,0.002307585],[1,124,254,0.000788001],[0,49,262,0.000243792]],"inputs":[["(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","-1","(-.f64 x 1)","(-.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) x) 1)","(-.f64 (+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (pow.f64 x 2)) x)) 1)","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x)))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x))))","(exp.f64 (*.f64 -1 x))","(exp.f64 (*.f64 -1 x))","(exp.f64 (*.f64 -1 x))","(exp.f64 (*.f64 -1 x))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(+.f64 (*.f64 x x) (*.f64 1/12 (pow.f64 x 4)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 x x))","(fma.f64 x x (*.f64 1/12 (pow.f64 x 4)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4))))","(fma.f64 1/360 (pow.f64 x 6) (+.f64 (*.f64 x x) (*.f64 1/12 (pow.f64 x 4))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/12 (pow.f64 x 4) (*.f64 x x)))","(fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/360 (pow.f64 x 6))))","(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (+.f64 (*.f64 x x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) 1/20160 1/12) (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)))","(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(+.f64 (exp.f64 x) (-.f64 (exp.f64 (neg.f64 x)) 2))","(+.f64 (exp.f64 x) (+.f64 (exp.f64 (neg.f64 x)) -2))","(+.f64 (exp.f64 (neg.f64 x)) (+.f64 (exp.f64 x) -2))","(-.f64 (exp.f64 (neg.f64 x)) (-.f64 2 (exp.f64 x)))","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(+.f64 (exp.f64 x) (-.f64 (exp.f64 (neg.f64 x)) 2))","(+.f64 (exp.f64 x) (+.f64 (exp.f64 (neg.f64 x)) -2))","(+.f64 (exp.f64 (neg.f64 x)) (+.f64 (exp.f64 x) -2))","(-.f64 (exp.f64 (neg.f64 x)) (-.f64 2 (exp.f64 x)))","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(+.f64 (exp.f64 x) (-.f64 (exp.f64 (neg.f64 x)) 2))","(+.f64 (exp.f64 x) (+.f64 (exp.f64 (neg.f64 x)) -2))","(+.f64 (exp.f64 (neg.f64 x)) (+.f64 (exp.f64 x) -2))","(-.f64 (exp.f64 (neg.f64 x)) (-.f64 2 (exp.f64 x)))","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(+.f64 (exp.f64 x) (-.f64 (exp.f64 (neg.f64 x)) 2))","(+.f64 (exp.f64 x) (+.f64 (exp.f64 (neg.f64 x)) -2))","(+.f64 (exp.f64 (neg.f64 x)) (+.f64 (exp.f64 x) -2))","(-.f64 (exp.f64 (neg.f64 x)) (-.f64 2 (exp.f64 x)))","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(+.f64 (exp.f64 x) (-.f64 (exp.f64 (neg.f64 x)) 2))","(+.f64 (exp.f64 x) (+.f64 (exp.f64 (neg.f64 x)) -2))","(+.f64 (exp.f64 (neg.f64 x)) (+.f64 (exp.f64 x) -2))","(-.f64 (exp.f64 (neg.f64 x)) (-.f64 2 (exp.f64 x)))","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(+.f64 (exp.f64 x) (-.f64 (exp.f64 (neg.f64 x)) 2))","(+.f64 (exp.f64 x) (+.f64 (exp.f64 (neg.f64 x)) -2))","(+.f64 (exp.f64 (neg.f64 x)) (+.f64 (exp.f64 x) -2))","(-.f64 (exp.f64 (neg.f64 x)) (-.f64 2 (exp.f64 x)))","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(+.f64 (exp.f64 x) (-.f64 (exp.f64 (neg.f64 x)) 2))","(+.f64 (exp.f64 x) (+.f64 (exp.f64 (neg.f64 x)) -2))","(+.f64 (exp.f64 (neg.f64 x)) (+.f64 (exp.f64 x) -2))","(-.f64 (exp.f64 (neg.f64 x)) (-.f64 2 (exp.f64 x)))","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(+.f64 (exp.f64 x) (-.f64 (exp.f64 (neg.f64 x)) 2))","(+.f64 (exp.f64 x) (+.f64 (exp.f64 (neg.f64 x)) -2))","(+.f64 (exp.f64 (neg.f64 x)) (+.f64 (exp.f64 x) -2))","(-.f64 (exp.f64 (neg.f64 x)) (-.f64 2 (exp.f64 x)))","-1","(-.f64 x 1)","(+.f64 x -1)","(-.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) x) 1)","(+.f64 (fma.f64 1/2 (*.f64 x x) x) -1)","(fma.f64 (*.f64 x x) 1/2 (+.f64 x -1))","(+.f64 x (fma.f64 (*.f64 x x) 1/2 -1))","(fma.f64 (fma.f64 x 1/2 1) x -1)","(fma.f64 x (fma.f64 x 1/2 1) -1)","(-.f64 (+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (pow.f64 x 2)) x)) 1)","(+.f64 (fma.f64 1/6 (pow.f64 x 3) (fma.f64 1/2 (*.f64 x x) x)) -1)","(fma.f64 1/6 (pow.f64 x 3) (fma.f64 (*.f64 x x) 1/2 (+.f64 x -1)))","(+.f64 -1 (fma.f64 x (*.f64 x 1/2) (fma.f64 1/6 (pow.f64 x 3) x)))","(fma.f64 (*.f64 x x) (fma.f64 x 1/6 1/2) (-.f64 x 1))","(+.f64 x (fma.f64 (*.f64 x x) (fma.f64 x 1/6 1/2) -1))","1","(+.f64 1 (*.f64 -1 x))","(+.f64 (neg.f64 x) 1)","(-.f64 1 x)","(+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x)))","(+.f64 1 (fma.f64 1/2 (*.f64 x x) (neg.f64 x)))","(+.f64 (*.f64 (*.f64 x x) 1/2) (-.f64 1 x))","(fma.f64 (*.f64 x x) 1/2 (-.f64 1 x))","(fma.f64 x (fma.f64 x 1/2 -1) 1)","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x))))","(fma.f64 -1/6 (pow.f64 x 3) (+.f64 1 (fma.f64 1/2 (*.f64 x x) (neg.f64 x))))","(+.f64 (-.f64 (*.f64 (*.f64 x x) 1/2) x) (fma.f64 (pow.f64 x 3) -1/6 1))","(fma.f64 (pow.f64 x 3) -1/6 (fma.f64 (*.f64 x x) 1/2 (-.f64 1 x)))","(fma.f64 x (fma.f64 x 1/2 -1) (fma.f64 (pow.f64 x 3) -1/6 1))","(exp.f64 (*.f64 -1 x))","(exp.f64 (neg.f64 x))","(exp.f64 (*.f64 -1 x))","(exp.f64 (neg.f64 x))","(exp.f64 (*.f64 -1 x))","(exp.f64 (neg.f64 x))","(exp.f64 (*.f64 -1 x))","(exp.f64 (neg.f64 x))"]],"stop":[["node limit",1]],"time":34.766845703125,"type":"simplify"},{"compiler":[[1752,972]],"time":20.195068359375,"type":"eval"},{"alts":[["(fma.f64 x x (*.f64 1/12 (pow.f64 x 4)))","fresh",1.055096614109707],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","done",28.929898395059208],["(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))","next",0.8088369932954694]],"compiler":[[9,6],[9,7],[19,14],[9,6],[19,14]],"count":[[129,3]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[127,2],"picked":[1,1]}],"min-error":[0.015625],"time":25.5859375,"type":"prune"},{"compiler":[[59,38]],"locations":[["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))",0.0078125,true],["(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))",0.0078125,true],["(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))",0.0234375,true]],"time":13.28515625,"type":"localize"},{"count":[[3,36]],"series":[["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))","x","-inf",0.276123046875],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))","x","inf",0.262939453125],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))","x","0",0.218017578125],["(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","x","-inf",0.822021484375],["(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","x","inf",0.585205078125],["(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","x","0",0.390869140625],["(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))","x","-inf",0.401123046875],["(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))","x","inf",0.466064453125],["(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))","x","0",0.31396484375]],"time":3.8818359375,"type":"series"},{"count":[[3,104]],"egraph":[[2,3267,54,0.026408168],[1,318,54,0.005203209],[0,15,54,0.000567042]],"inputs":[["(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))","(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/12 (pow.f64 x 4)) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/12 (pow.f64 x 4)) 1) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/360 (pow.f64 x 6))) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (cbrt.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2)) (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 1/12 (pow.f64 x 4)) 3) (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 3)) (+.f64 (pow.f64 (*.f64 1/12 (pow.f64 x 4)) 2) (-.f64 (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 2) (*.f64 (*.f64 1/12 (pow.f64 x 4)) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 1/12 (pow.f64 x 4)) 2) (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 2)) (-.f64 (*.f64 1/12 (pow.f64 x 4)) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) (exp.f64 (*.f64 1/12 (pow.f64 x 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (exp.f64 (*.f64 1/12 (pow.f64 x 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 1/12 (pow.f64 x 4))) (+.f64 1 (expm1.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/20160 (pow.f64 x 8)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/20160 (pow.f64 x 8)) 1) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) (pow.f64 (cbrt.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 2) (cbrt.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 x (sqrt.f64 (*.f64 1/20160 (pow.f64 x 8)))) (hypot.f64 x (sqrt.f64 (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 1/20160 (pow.f64 x 8)) 3) (pow.f64 x 6)) (+.f64 (pow.f64 (*.f64 1/20160 (pow.f64 x 8)) 2) (-.f64 (pow.f64 x 4) (*.f64 (*.f64 1/20160 (pow.f64 x 8)) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 1/20160 (pow.f64 x 8)) 2) (pow.f64 x 4)) (fma.f64 1/20160 (pow.f64 x 8) (neg.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 x (sqrt.f64 (*.f64 1/20160 (pow.f64 x 8)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 x) x) (exp.f64 (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 x x))) (exp.f64 (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 1/20160 (pow.f64 x 8))) (+.f64 1 (expm1.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 x (sqrt.f64 (*.f64 1/20160 (pow.f64 x 8))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)) (*.f64 1/360 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/360 (pow.f64 x 6)) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/360 (pow.f64 x 6)) 1) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) (pow.f64 (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2) (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) (sqrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 1/360 (pow.f64 x 6)) 3) (pow.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)) 3)) (+.f64 (pow.f64 (*.f64 1/360 (pow.f64 x 6)) 2) (-.f64 (pow.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)) 2) (*.f64 (*.f64 1/360 (pow.f64 x 6)) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 1/360 (pow.f64 x 6)) 2) (pow.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)) 2)) (-.f64 (*.f64 1/360 (pow.f64 x 6)) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) (pow.f64 (exp.f64 (pow.f64 x 6)) 1/360)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) (pow.f64 (exp.f64 (pow.f64 x 6)) 1/360)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (pow.f64 x 6)) 1/360) (+.f64 1 (expm1.f64 (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1) 1))))))"]],"rules":[["egg-rr",35],["egg-rr",34],["egg-rr",35]],"stop":[["node limit",1]],"time":52.5380859375,"type":"rewrite"},{"count":[[140,123]],"egraph":[[11,7908,474,0.076254249],[10,7383,474,0.067134624],[9,6942,474,0.055204957],[8,5800,474,0.043315207],[7,5015,474,0.031769415],[6,4519,474,0.022909457],[5,4177,474,0.015724123],[4,1834,474,0.008726707],[3,379,474,0.003490374],[2,145,474,0.001175874],[1,65,474,0.0005209990000000001],[0,26,514,0.000168291]],"inputs":[["(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(pow.f64 x 2)","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (pow.f64 x 2))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(+.f64 (*.f64 x x) (*.f64 1/12 (pow.f64 x 4)))","(fma.f64 x x (*.f64 1/12 (pow.f64 x 4)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 x x))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4))))","(+.f64 (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)) (*.f64 1/12 (pow.f64 x 4)))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (*.f64 1/12 (pow.f64 x 4))))","(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/12 (pow.f64 x 4) (*.f64 x x)))","(fma.f64 x x (fma.f64 1/360 (pow.f64 x 6) (*.f64 1/12 (pow.f64 x 4))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(+.f64 (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) 1/20160 1/12) (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) 1/20160 1/12) (*.f64 x x)))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) 1/20160 1/12) (*.f64 1/360 (pow.f64 x 6)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(+.f64 (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) 1/20160 1/12) (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) 1/20160 1/12) (*.f64 x x)))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) 1/20160 1/12) (*.f64 1/360 (pow.f64 x 6)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(+.f64 (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) 1/20160 1/12) (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) 1/20160 1/12) (*.f64 x x)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (pow.f64 x 2))","(fma.f64 1/360 (pow.f64 x 6) (*.f64 x x))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))","(fma.f64 x x (fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))","(fma.f64 x x (fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))","(fma.f64 x x (fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))","(fma.f64 x x (fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))","(fma.f64 x x (fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (fma.f64 1/360 (pow.f64 x 6) (*.f64 x x)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))","(fma.f64 x x (fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8))))"]],"stop":[["node limit",1]],"time":99.509033203125,"type":"simplify"},{"compiler":[[2847,2053]],"time":40.574951171875,"type":"eval"},{"alts":[["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","done",28.929898395059208],["(*.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))","next",0.8127432432954694],["(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))","done",0.8088369932954694]],"compiler":[[9,7],[40,29],[19,14],[40,29]],"count":[[126,3]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[123,1],"picked":[1,1]}],"min-error":[0.01171875],"time":31.966064453125,"type":"prune"},{"compiler":[[117,78]],"locations":[["(fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))",0.0078125,false],["(*.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))",0.01953125,true],["(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))",0.0234375,false],["(sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))",29.004879330149844,true]],"time":26.173828125,"type":"localize"},{"count":[[2,24]],"series":[["(*.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))","x","-inf",0.18212890625],["(*.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))","x","inf",0.18603515625],["(*.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))","x","0",0.177978515625],["(sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))","x","-inf",0.26513671875],["(sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))","x","inf",0.467041015625],["(sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))","x","0",0.60595703125]],"time":2.072998046875,"type":"series"},{"count":[[2,74]],"egraph":[[2,3512,52,0.027287958],[1,357,52,0.005742416],[0,17,52,0.000611708]],"inputs":[["(sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))","(*.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1/6) (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1/4) (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 3) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) (sqrt.f64 (*.f64 1/12 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 1/12 (pow.f64 x 4))) (sqrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/12 (pow.f64 x 4)) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/12 (pow.f64 x 4)) 1) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/360 (pow.f64 x 6))) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 1/12 (pow.f64 x 4)) 3) (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 3)) (+.f64 (pow.f64 (*.f64 1/12 (pow.f64 x 4)) 2) (-.f64 (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 2) (*.f64 (*.f64 1/12 (pow.f64 x 4)) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 1/12 (pow.f64 x 4)) 2) (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 2)) (-.f64 (*.f64 1/12 (pow.f64 x 4)) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 3/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 1/4) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 4) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) (exp.f64 (*.f64 1/12 (pow.f64 x 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (exp.f64 (*.f64 1/12 (pow.f64 x 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 1/12 (pow.f64 x 4))) (+.f64 1 (expm1.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 4) 1/12 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) 1 (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 1/12 (pow.f64 x 4)) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) (pow.f64 (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) 2) (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) (sqrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x)))) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/12 (pow.f64 x 4)) 1 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 1/12 (pow.f64 x 4))) 2) (cbrt.f64 (*.f64 1/12 (pow.f64 x 4))) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 1/12 (pow.f64 x 4))) (sqrt.f64 (*.f64 1/12 (pow.f64 x 4))) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/12 (*.f64 x x)) (*.f64 x x) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/12 (pow.f64 (cbrt.f64 x) 8)) (*.f64 (cbrt.f64 x) x) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))))"]],"rules":[["egg-rr",45],["egg-rr",29]],"stop":[["node limit",1]],"time":51.025146484375,"type":"rewrite"},{"count":[[98,101]],"egraph":[[4,6304,430,0.023550167],[3,1739,430,0.012788875],[2,511,486,0.0041522090000000005],[1,184,530,0.001298417],[0,64,550,0.000328125]],"inputs":[["x","(+.f64 (*.f64 1/24 (pow.f64 x 3)) x)","(+.f64 (*.f64 1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/1920 (pow.f64 x 5)) x))","(+.f64 (*.f64 1/322560 (pow.f64 x 7)) (+.f64 (*.f64 1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/1920 (pow.f64 x 5)) x)))","(*.f64 (sqrt.f64 1/20160) (pow.f64 x 4))","(+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 2) (sqrt.f64 1/20160))) (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)))","(+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 2) (sqrt.f64 1/20160))) (+.f64 (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)) (*.f64 1/2 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160)))))","(+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 2) (sqrt.f64 1/20160))) (+.f64 (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)) (+.f64 (*.f64 1/2 (/.f64 (-.f64 1 (*.f64 1/720 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (pow.f64 (sqrt.f64 1/20160) 2)))) (*.f64 (sqrt.f64 1/20160) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160))))))","(*.f64 (sqrt.f64 1/20160) (pow.f64 x 4))","(+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 2) (sqrt.f64 1/20160))) (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)))","(+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 2) (sqrt.f64 1/20160))) (+.f64 (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)) (*.f64 1/2 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160)))))","(+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 2) (sqrt.f64 1/20160))) (+.f64 (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)) (+.f64 (*.f64 1/2 (/.f64 (-.f64 1 (*.f64 1/720 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (pow.f64 (sqrt.f64 1/20160) 2)))) (*.f64 (sqrt.f64 1/20160) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160))))))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 1/24 (pow.f64 x 3)) x)","(fma.f64 1/24 (pow.f64 x 3) x)","(+.f64 (*.f64 1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/1920 (pow.f64 x 5)) x))","(fma.f64 1/24 (pow.f64 x 3) (fma.f64 1/1920 (pow.f64 x 5) x))","(+.f64 (*.f64 1/322560 (pow.f64 x 7)) (+.f64 (*.f64 1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/1920 (pow.f64 x 5)) x)))","(fma.f64 1/322560 (pow.f64 x 7) (fma.f64 1/24 (pow.f64 x 3) (fma.f64 1/1920 (pow.f64 x 5) x)))","(fma.f64 1/24 (pow.f64 x 3) (fma.f64 1/322560 (pow.f64 x 7) (fma.f64 1/1920 (pow.f64 x 5) x)))","(fma.f64 1/24 (pow.f64 x 3) (fma.f64 1/1920 (pow.f64 x 5) (fma.f64 1/322560 (pow.f64 x 7) x)))","(*.f64 (sqrt.f64 1/20160) (pow.f64 x 4))","(+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 2) (sqrt.f64 1/20160))) (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)))","(fma.f64 1/720 (/.f64 (*.f64 x x) (sqrt.f64 1/20160)) (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)))","(fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (*.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x))))","(fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (/.f64 1/720 (/.f64 (sqrt.f64 1/20160) (*.f64 x x))))","(fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (/.f64 x (/.f64 (sqrt.f64 1/20160) (*.f64 x 1/720))))","(+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 2) (sqrt.f64 1/20160))) (+.f64 (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)) (*.f64 1/2 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160)))))","(fma.f64 1/720 (/.f64 (*.f64 x x) (sqrt.f64 1/20160)) (fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (*.f64 1/2 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160)))))","(fma.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x)) (fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (*.f64 1/2 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160)))))","(fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (fma.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x)) (*.f64 1/2 (-.f64 (/.f64 1/12 (sqrt.f64 1/20160)) (*.f64 28 (/.f64 1/720 (sqrt.f64 1/20160)))))))","(fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (fma.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x)) (/.f64 1/45 (sqrt.f64 1/20160))))","(+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 2) (sqrt.f64 1/20160))) (+.f64 (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)) (+.f64 (*.f64 1/2 (/.f64 (-.f64 1 (*.f64 1/720 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (pow.f64 (sqrt.f64 1/20160) 2)))) (*.f64 (sqrt.f64 1/20160) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160))))))","(fma.f64 1/720 (/.f64 (*.f64 x x) (sqrt.f64 1/20160)) (fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (*.f64 1/2 (+.f64 (/.f64 (-.f64 1 (*.f64 1/720 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (pow.f64 (sqrt.f64 1/20160) 2)))) (*.f64 (sqrt.f64 1/20160) (*.f64 x x))) (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160))))))","(fma.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x)) (fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (*.f64 1/2 (+.f64 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160)) (/.f64 (-.f64 1 (*.f64 1/720 (-.f64 1680 (/.f64 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2) 1/20160)))) (*.f64 x (*.f64 x (sqrt.f64 1/20160))))))))","(fma.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x)) (fma.f64 1/2 (-.f64 (/.f64 1/12 (sqrt.f64 1/20160)) (*.f64 28 (/.f64 1/720 (sqrt.f64 1/20160)))) (fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (/.f64 -11/90 (*.f64 (sqrt.f64 1/20160) (*.f64 x x))))))","(fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (fma.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x)) (*.f64 (/.f64 1/2 (sqrt.f64 1/20160)) (+.f64 (/.f64 (/.f64 -11/45 x) x) 2/45))))","(*.f64 (sqrt.f64 1/20160) (pow.f64 x 4))","(+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 2) (sqrt.f64 1/20160))) (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)))","(fma.f64 1/720 (/.f64 (*.f64 x x) (sqrt.f64 1/20160)) (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)))","(fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (*.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x))))","(fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (/.f64 1/720 (/.f64 (sqrt.f64 1/20160) (*.f64 x x))))","(fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (/.f64 x (/.f64 (sqrt.f64 1/20160) (*.f64 x 1/720))))","(+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 2) (sqrt.f64 1/20160))) (+.f64 (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)) (*.f64 1/2 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160)))))","(fma.f64 1/720 (/.f64 (*.f64 x x) (sqrt.f64 1/20160)) (fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (*.f64 1/2 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160)))))","(fma.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x)) (fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (*.f64 1/2 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160)))))","(fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (fma.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x)) (*.f64 1/2 (-.f64 (/.f64 1/12 (sqrt.f64 1/20160)) (*.f64 28 (/.f64 1/720 (sqrt.f64 1/20160)))))))","(fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (fma.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x)) (/.f64 1/45 (sqrt.f64 1/20160))))","(+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 2) (sqrt.f64 1/20160))) (+.f64 (*.f64 (sqrt.f64 1/20160) (pow.f64 x 4)) (+.f64 (*.f64 1/2 (/.f64 (-.f64 1 (*.f64 1/720 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (pow.f64 (sqrt.f64 1/20160) 2)))) (*.f64 (sqrt.f64 1/20160) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160))))))","(fma.f64 1/720 (/.f64 (*.f64 x x) (sqrt.f64 1/20160)) (fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (*.f64 1/2 (+.f64 (/.f64 (-.f64 1 (*.f64 1/720 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (pow.f64 (sqrt.f64 1/20160) 2)))) (*.f64 (sqrt.f64 1/20160) (*.f64 x x))) (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160))))))","(fma.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x)) (fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (*.f64 1/2 (+.f64 (/.f64 (-.f64 1/12 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2)) (sqrt.f64 1/20160)) (/.f64 (-.f64 1 (*.f64 1/720 (-.f64 1680 (/.f64 (pow.f64 (/.f64 1/720 (sqrt.f64 1/20160)) 2) 1/20160)))) (*.f64 x (*.f64 x (sqrt.f64 1/20160))))))))","(fma.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x)) (fma.f64 1/2 (-.f64 (/.f64 1/12 (sqrt.f64 1/20160)) (*.f64 28 (/.f64 1/720 (sqrt.f64 1/20160)))) (fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (/.f64 -11/90 (*.f64 (sqrt.f64 1/20160) (*.f64 x x))))))","(fma.f64 (sqrt.f64 1/20160) (pow.f64 x 4) (fma.f64 1/720 (/.f64 x (/.f64 (sqrt.f64 1/20160) x)) (*.f64 (/.f64 1/2 (sqrt.f64 1/20160)) (+.f64 (/.f64 (/.f64 -11/45 x) x) 2/45))))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(+.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 1/12))","(fma.f64 x x (*.f64 (pow.f64 x 4) 1/12))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4))))","(fma.f64 1/360 (pow.f64 x 6) (+.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 1/12)))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (*.f64 (pow.f64 x 4) 1/12)))","(fma.f64 x x (fma.f64 (pow.f64 x 4) 1/12 (*.f64 1/360 (pow.f64 x 6))))","(fma.f64 x x (fma.f64 1/360 (pow.f64 x 6) (*.f64 (pow.f64 x 4) 1/12)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (+.f64 (*.f64 x x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 (pow.f64 x 4) 1/12 (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 x x (fma.f64 1/20160 (pow.f64 x 8) (fma.f64 (pow.f64 x 4) 1/12 (*.f64 1/360 (pow.f64 x 6)))))","(fma.f64 x x (fma.f64 1/20160 (pow.f64 x 8) (fma.f64 1/360 (pow.f64 x 6) (*.f64 (pow.f64 x 4) 1/12))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/20160 (pow.f64 x 8) (*.f64 1/360 (pow.f64 x 6)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 (pow.f64 x 4) 1/12 (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/20160 (pow.f64 x 8) (fma.f64 (pow.f64 x 4) 1/12 (*.f64 1/360 (pow.f64 x 6))))","(fma.f64 1/20160 (pow.f64 x 8) (fma.f64 1/360 (pow.f64 x 6) (*.f64 (pow.f64 x 4) 1/12)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (+.f64 (*.f64 x x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 (pow.f64 x 4) 1/12 (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 x x (fma.f64 1/20160 (pow.f64 x 8) (fma.f64 (pow.f64 x 4) 1/12 (*.f64 1/360 (pow.f64 x 6)))))","(fma.f64 x x (fma.f64 1/20160 (pow.f64 x 8) (fma.f64 1/360 (pow.f64 x 6) (*.f64 (pow.f64 x 4) 1/12))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/20160 (pow.f64 x 8) (*.f64 1/360 (pow.f64 x 6)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 (pow.f64 x 4) 1/12 (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/20160 (pow.f64 x 8) (fma.f64 (pow.f64 x 4) 1/12 (*.f64 1/360 (pow.f64 x 6))))","(fma.f64 1/20160 (pow.f64 x 8) (fma.f64 1/360 (pow.f64 x 6) (*.f64 (pow.f64 x 4) 1/12)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (+.f64 (*.f64 x x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 (pow.f64 x 4) 1/12 (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 x x (fma.f64 1/20160 (pow.f64 x 8) (fma.f64 (pow.f64 x 4) 1/12 (*.f64 1/360 (pow.f64 x 6)))))","(fma.f64 x x (fma.f64 1/20160 (pow.f64 x 8) (fma.f64 1/360 (pow.f64 x 6) (*.f64 (pow.f64 x 4) 1/12))))"]],"stop":[["node limit",1]],"time":41.365966796875,"type":"simplify"},{"compiler":[[12253,8824]],"time":158.617919921875,"type":"eval"},{"alts":[["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","done",28.929898395059208],["(*.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))","done",0.8127432432954694],["(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))","done",0.8088369932954694]],"compiler":[[9,7],[40,29],[19,14]],"count":[[315,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[312,0],"picked":[1,1]}],"min-error":[0.01171875],"time":139.778076171875,"type":"prune"},{"accuracy":[0.8088369932954693],"baseline":[0.8088369932954694],"branch":[["x",0.8088369932954693,1],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))",0.8088369932954693,1]],"compiler":[[2,1],[9,7],[82,55]],"count":[[5,1]],"inputs":[["(*.f64 (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))) (sqrt.f64 (fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))))","(fma.f64 x x (*.f64 1/12 (pow.f64 x 4)))","(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))","(+.f64 -2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))","(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))"]],"link":["."],"name":["exp2 (problem 3.3.7)"],"oracle":[29.96652096553693],"outputs":[["(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))"]],"time":6.948974609375,"times":[["x",3.60302734375],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))",1.76904296875]],"type":"regimes"},{"compiler":[[19,14]],"egraph":[[0,15,25,2.1875e-5]],"inputs":[["(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 1/12 (pow.f64 x 4) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/20160 (pow.f64 x 8) (*.f64 x x))))"]],"stop":[["done",1],["saturated",1]],"time":8.571044921875,"type":"simplify"},{"time":0.014892578125,"type":"soundness"},{"compiler":[[19,14]],"remove-preprocessing":[[]],"time":12.232177734375,"type":"end"}]