[{"compiler":[[23,16]],"method":["search"],"sampling":[[12,0.0,0.6528691805327651,0.3471308194672349],[11,0.0,0.671856427393897,0.32814357260610305],[10,0.0,0.8451759115621776,0.15482408843782236],[9,0.0,0.8958085698585293,0.1041914301414707],[8,0.0,0.9035982095964296,0.09640179040357044],[7,0.0,0.9035982095964296,0.09640179040357044],[6,0.0,0.9970738864512326,0.002926113548767373],[5,0.0,0.9970738864512326,0.002926113548767373],[4,0.0,0.9970738864512326,0.002926113548767373],[3,0.0,0.9970738864512326,0.002926113548767373],[2,0.0,0.9970738864512326,0.002926113548767373],[1,0.0,0.9970738864512326,0.002926113548767373],[0,0.0,0.9970738864512326,0.002926113548767373]],"time":169.136962890625,"type":"analyze"},{"outcomes":[["body",256,"invalid",270.97119140625,4199],["body",512,"valid",0.27685546875,2],["body",256,"valid",587.726806640625,8254]],"time":870.176025390625,"type":"sample"},{"compiler":[[22,15]],"egraph":[[1,6,6,8.541e-6],[0,6,6,6.666e-6],[4,7110,352,0.028599667],[3,3814,352,0.016705959],[2,1178,352,0.007083042],[1,297,352,0.0016688750000000002],[0,94,384,0.000360458]],"inputs":[["0","1","2","3","4","5"],["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 y x) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 z y) x) (*.f64 x (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 t y) z) (*.f64 z (log.f64 x))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 a y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 x 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 b y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) x))","(+.f64 (-.f64 (+.f64 (+.f64 x z) y) (*.f64 y (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x t) z) (*.f64 z (log.f64 y))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x a) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 y 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x b) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) y))","(+.f64 (-.f64 (+.f64 (+.f64 x y) t) (*.f64 t (log.f64 z))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x y) a) (*.f64 a (log.f64 t))) (*.f64 (-.f64 z 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x y) b) (*.f64 b (log.f64 t))) (*.f64 (-.f64 a 1/2) z))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 a))) (*.f64 (-.f64 t 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 b))) (*.f64 (-.f64 a 1/2) t))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 b 1/2) a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0","2","3","4","5"],["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (+.f64 (+.f64 x y) (-.f64 z (*.f64 z (log.f64 t)))) (*.f64 (+.f64 a -1/2) b))","(fma.f64 (+.f64 a -1/2) b (+.f64 y (-.f64 (+.f64 x z) (*.f64 z (log.f64 t)))))","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) b (+.f64 x y)) z) (*.f64 z (log.f64 t)))","(+.f64 (-.f64 (+.f64 (+.f64 y x) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (+.f64 (+.f64 x y) (-.f64 z (*.f64 z (log.f64 t)))) (*.f64 (+.f64 a -1/2) b))","(fma.f64 (+.f64 a -1/2) b (+.f64 y (-.f64 (+.f64 x z) (*.f64 z (log.f64 t)))))","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) b (+.f64 x y)) z) (*.f64 z (log.f64 t)))","(+.f64 (-.f64 (+.f64 (+.f64 z y) x) (*.f64 x (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (*.f64 (+.f64 a -1/2) b) (+.f64 (+.f64 y z) (-.f64 x (*.f64 x (log.f64 t)))))","(fma.f64 (+.f64 a -1/2) b (+.f64 x (-.f64 (+.f64 y z) (*.f64 x (log.f64 t)))))","(+.f64 (-.f64 x (*.f64 x (log.f64 t))) (fma.f64 (+.f64 a -1/2) b (+.f64 y z)))","(+.f64 x (+.f64 y (-.f64 z (fma.f64 x (log.f64 t) (*.f64 b (-.f64 1/2 a))))))","(+.f64 (-.f64 (+.f64 (+.f64 t y) z) (*.f64 z (log.f64 x))) (*.f64 (-.f64 a 1/2) b))","(-.f64 (+.f64 z (+.f64 y t)) (-.f64 (*.f64 z (log.f64 x)) (*.f64 (+.f64 a -1/2) b)))","(fma.f64 (+.f64 a -1/2) b (+.f64 y (+.f64 t (-.f64 z (*.f64 z (log.f64 x))))))","(+.f64 (-.f64 z (*.f64 z (log.f64 x))) (fma.f64 (+.f64 a -1/2) b (+.f64 y t)))","(+.f64 (-.f64 (+.f64 (+.f64 a y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 x 1/2) b))","(+.f64 (+.f64 (+.f64 y a) (-.f64 z (*.f64 z (log.f64 t)))) (*.f64 b (+.f64 x -1/2)))","(fma.f64 b (+.f64 x -1/2) (-.f64 (+.f64 y (+.f64 z a)) (*.f64 z (log.f64 t))))","(+.f64 (-.f64 z (*.f64 z (log.f64 t))) (fma.f64 b (+.f64 x -1/2) (+.f64 y a)))","(-.f64 (+.f64 y (+.f64 z a)) (fma.f64 z (log.f64 t) (*.f64 b (-.f64 1/2 x))))","(+.f64 (-.f64 (+.f64 (+.f64 b y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) x))","(+.f64 (+.f64 (+.f64 y b) (-.f64 z (*.f64 z (log.f64 t)))) (*.f64 x (+.f64 a -1/2)))","(fma.f64 x (+.f64 a -1/2) (-.f64 (+.f64 z (+.f64 y b)) (*.f64 z (log.f64 t))))","(+.f64 (-.f64 z (*.f64 z (log.f64 t))) (fma.f64 x (+.f64 a -1/2) (+.f64 y b)))","(+.f64 (-.f64 (+.f64 (+.f64 x z) y) (*.f64 y (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (*.f64 (+.f64 a -1/2) b) (-.f64 (+.f64 (+.f64 x y) z) (*.f64 y (log.f64 t))))","(fma.f64 (+.f64 a -1/2) b (+.f64 x (-.f64 (+.f64 y z) (*.f64 y (log.f64 t)))))","(+.f64 (fma.f64 (+.f64 a -1/2) b (+.f64 x y)) (-.f64 z (*.f64 y (log.f64 t))))","(+.f64 (+.f64 x y) (-.f64 z (fma.f64 y (log.f64 t) (*.f64 b (-.f64 1/2 a)))))","(+.f64 (-.f64 (+.f64 (+.f64 x t) z) (*.f64 z (log.f64 y))) (*.f64 (-.f64 a 1/2) b))","(-.f64 (+.f64 x (+.f64 t z)) (-.f64 (*.f64 z (log.f64 y)) (*.f64 (+.f64 a -1/2) b)))","(fma.f64 (+.f64 a -1/2) b (+.f64 x (+.f64 t (-.f64 z (*.f64 z (log.f64 y))))))","(+.f64 (-.f64 z (*.f64 z (log.f64 y))) (fma.f64 (+.f64 a -1/2) b (+.f64 x t)))","(+.f64 (-.f64 (+.f64 (+.f64 x a) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 y 1/2) b))","(+.f64 (+.f64 (+.f64 x a) (-.f64 z (*.f64 z (log.f64 t)))) (*.f64 b (-.f64 y 1/2)))","(fma.f64 b (+.f64 y -1/2) (-.f64 (+.f64 x (+.f64 z a)) (*.f64 z (log.f64 t))))","(+.f64 (-.f64 z (*.f64 z (log.f64 t))) (fma.f64 b (+.f64 y -1/2) (+.f64 x a)))","(+.f64 a (-.f64 (+.f64 x z) (fma.f64 z (log.f64 t) (*.f64 b (-.f64 1/2 y)))))","(+.f64 (-.f64 (+.f64 (+.f64 x b) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) y))","(+.f64 (+.f64 (+.f64 x b) (-.f64 z (*.f64 z (log.f64 t)))) (*.f64 y (+.f64 a -1/2)))","(fma.f64 y (+.f64 a -1/2) (+.f64 x (-.f64 (+.f64 z b) (*.f64 z (log.f64 t)))))","(+.f64 (-.f64 z (*.f64 z (log.f64 t))) (fma.f64 y (+.f64 a -1/2) (+.f64 x b)))","(+.f64 (+.f64 x b) (-.f64 z (fma.f64 z (log.f64 t) (*.f64 y (-.f64 1/2 a)))))","(+.f64 (-.f64 (+.f64 (+.f64 x y) t) (*.f64 t (log.f64 z))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (*.f64 (+.f64 a -1/2) b) (-.f64 (+.f64 x (+.f64 y t)) (*.f64 t (log.f64 z))))","(fma.f64 (+.f64 a -1/2) b (+.f64 (+.f64 x y) (-.f64 t (*.f64 t (log.f64 z)))))","(+.f64 (-.f64 t (*.f64 t (log.f64 z))) (fma.f64 (+.f64 a -1/2) b (+.f64 x y)))","(+.f64 (-.f64 (+.f64 (+.f64 x y) a) (*.f64 a (log.f64 t))) (*.f64 (-.f64 z 1/2) b))","(+.f64 (+.f64 (+.f64 x y) (-.f64 a (*.f64 (log.f64 t) a))) (*.f64 b (+.f64 z -1/2)))","(fma.f64 b (+.f64 z -1/2) (+.f64 x (-.f64 (+.f64 y a) (*.f64 (log.f64 t) a))))","(-.f64 (+.f64 (fma.f64 b (+.f64 z -1/2) (+.f64 x y)) a) (*.f64 (log.f64 t) a))","(+.f64 x (-.f64 (+.f64 y a) (fma.f64 (log.f64 t) a (*.f64 b (-.f64 1/2 z)))))","(+.f64 (-.f64 (+.f64 (+.f64 x y) b) (*.f64 b (log.f64 t))) (*.f64 (-.f64 a 1/2) z))","(+.f64 (+.f64 (+.f64 x y) (-.f64 b (*.f64 (log.f64 t) b))) (*.f64 z (+.f64 a -1/2)))","(fma.f64 z (+.f64 a -1/2) (+.f64 x (+.f64 y (-.f64 b (*.f64 (log.f64 t) b)))))","(+.f64 (-.f64 b (*.f64 (log.f64 t) b)) (fma.f64 z (+.f64 a -1/2) (+.f64 x y)))","(+.f64 b (-.f64 (fma.f64 z (+.f64 a -1/2) (+.f64 x y)) (*.f64 (log.f64 t) b)))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 a))) (*.f64 (-.f64 t 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 a))) (*.f64 b (+.f64 t -1/2)))","(fma.f64 b (+.f64 t -1/2) (+.f64 x (-.f64 (+.f64 y z) (*.f64 z (log.f64 a)))))","(+.f64 (-.f64 z (*.f64 z (log.f64 a))) (fma.f64 b (+.f64 t -1/2) (+.f64 x y)))","(+.f64 x (+.f64 y (-.f64 z (fma.f64 z (log.f64 a) (*.f64 b (-.f64 1/2 t))))))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 b))) (*.f64 (-.f64 a 1/2) t))","(+.f64 (+.f64 (+.f64 x y) (-.f64 z (*.f64 z (log.f64 b)))) (*.f64 t (+.f64 a -1/2)))","(fma.f64 t (+.f64 a -1/2) (-.f64 (+.f64 x (+.f64 y z)) (*.f64 z (log.f64 b))))","(+.f64 (-.f64 z (*.f64 z (log.f64 b))) (fma.f64 t (+.f64 a -1/2) (+.f64 x y)))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 b 1/2) a))","(-.f64 (+.f64 (+.f64 x y) z) (-.f64 (*.f64 z (log.f64 t)) (*.f64 a (+.f64 b -1/2))))","(fma.f64 a (+.f64 b -1/2) (+.f64 y (-.f64 (+.f64 x z) (*.f64 z (log.f64 t)))))","(+.f64 (-.f64 z (*.f64 z (log.f64 t))) (fma.f64 a (+.f64 b -1/2) (+.f64 x y)))","(+.f64 x (+.f64 y (-.f64 z (fma.f64 z (log.f64 t) (*.f64 a (-.f64 1/2 b))))))"]],"stop":[["unsound",1],["node limit",1]],"symmetry":[["(sort x y)"]],"time":56.174072265625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[12,7760,20,0.078191833],[11,7645,20,0.068046625],[10,7635,20,0.060526666],[9,7525,20,0.052599875],[8,7193,20,0.044492458],[7,6318,20,0.034996666999999995],[6,4344,20,0.023468499999999996],[5,2887,20,0.013675541999999999],[4,1045,20,0.006549042],[3,327,21,0.002202083],[2,106,22,0.000682375],[1,35,22,0.00021475],[0,16,24,6.8375e-5]],"inputs":[["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (+.f64 (+.f64 x y) (-.f64 z (*.f64 z (log.f64 t)))) (*.f64 (+.f64 a -1/2) b))","(fma.f64 (+.f64 a -1/2) b (+.f64 z (-.f64 (+.f64 x y) (*.f64 z (log.f64 t)))))","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) b (+.f64 x y)) z) (*.f64 z (log.f64 t)))","(+.f64 (fma.f64 (fma.f64 -1 (log.f64 t) 1) z x) (fma.f64 (+.f64 a -1/2) b y))","(+.f64 y (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)))"]],"stop":[["node limit",1]],"time":89.7080078125,"type":"simplify"},{"compiler":[[36,22]],"time":0.487060546875,"type":"eval"},{"alts":[["(+.f64 y (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)))","next",0.08984375],["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","fresh",0.10546875]],"compiler":[[20,14],[22,15],[20,14],[22,15]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.0703125],"time":1.799072265625,"type":"prune"},{"compiler":[[55,29]],"locations":[["(fma.f64 (+.f64 a -1/2) b x)",0.0078125,true],["(-.f64 1 (log.f64 t))",0.01953125,true],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))",0.0859375,true]],"time":13.197998046875,"type":"localize"},{"count":[[3,104]],"series":[["(fma.f64 (+.f64 a -1/2) b x)","x","-inf",0.13916015625],["(fma.f64 (+.f64 a -1/2) b x)","x","inf",0.14111328125],["(fma.f64 (+.f64 a -1/2) b x)","x","0",0.174072265625],["(fma.f64 (+.f64 a -1/2) b x)","b","-inf",0.14599609375],["(fma.f64 (+.f64 a -1/2) b x)","b","inf",0.149169921875],["(fma.f64 (+.f64 a -1/2) b x)","b","0",0.1669921875],["(fma.f64 (+.f64 a -1/2) b x)","a","-inf",0.14892578125],["(fma.f64 (+.f64 a -1/2) b x)","a","inf",0.179931640625],["(fma.f64 (+.f64 a -1/2) b x)","a","0",0.157958984375],["(-.f64 1 (log.f64 t))","t","-inf",0.157958984375],["(-.f64 1 (log.f64 t))","t","inf",0.178955078125],["(-.f64 1 (log.f64 t))","t","0",0.14599609375],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","x","-inf",0.282958984375],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","x","inf",0.276123046875],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","x","0",4.553955078125],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","b","-inf",0.341064453125],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","b","inf",0.323974609375],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","b","0",1.135986328125],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","a","-inf",0.282958984375],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","a","inf",0.39013671875],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","a","0",1.178955078125],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","t","-inf",9.72412109375],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","t","inf",4.574951171875],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","t","0",13.2451171875],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","z","-inf",0.333984375],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","z","inf",0.3369140625],["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","z","0",3.5498046875]],"time":42.81689453125,"type":"series"},{"count":[[3,105]],"egraph":[[2,3304,31,0.027608166],[1,269,31,0.00446425],[0,13,31,0.000349416]],"inputs":[["(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))","(-.f64 1 (log.f64 t))","(fma.f64 (+.f64 a -1/2) b x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) b x) (*.f64 z (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 1 (log.f64 t))) (fma.f64 (+.f64 a -1/2) b x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (-.f64 1 (log.f64 t))) 1) (fma.f64 (+.f64 a -1/2) b x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (*.f64 (+.f64 a -1/2) b)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) (pow.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) 2) (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) (sqrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 3) (pow.f64 (fma.f64 (+.f64 a -1/2) b x) 3)) (+.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 2) (-.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) b x) 2) (*.f64 (*.f64 z (-.f64 1 (log.f64 t))) (fma.f64 (+.f64 a -1/2) b x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 2) (pow.f64 (fma.f64 (+.f64 a -1/2) b x) 2)) (-.f64 (*.f64 z (-.f64 1 (log.f64 t))) (fma.f64 (+.f64 a -1/2) b x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (+.f64 a -1/2) b x)) (exp.f64 (*.f64 z (-.f64 1 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 (+.f64 a -1/2) b x))) (exp.f64 (*.f64 z (-.f64 1 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 z (-.f64 1 (log.f64 t)))) (+.f64 1 (expm1.f64 (fma.f64 (+.f64 a -1/2) b x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 (E.f64) t)) 2)) (log.f64 (cbrt.f64 (/.f64 (E.f64) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (/.f64 (E.f64) t))) (log.f64 (sqrt.f64 (/.f64 (E.f64) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) 2) (cbrt.f64 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (log.f64 t))) (sqrt.f64 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (/.f64 1 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 1 (+.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) (-.f64 1 (pow.f64 (log.f64 t) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) (neg.f64 (+.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 3)) (+.f64 1 (-.f64 (pow.f64 (neg.f64 (log.f64 t)) 2) (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) (-.f64 1 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log.f64 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 1 (log.f64 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) (-.f64 1 (pow.f64 (log.f64 t) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (E.f64) t))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (/.f64 (E.f64) t) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (/.f64 (E.f64) t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (neg.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) (neg.f64 (cbrt.f64 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 t)) (neg.f64 (sqrt.f64 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (log.f64 t))) 2) (cbrt.f64 (neg.f64 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (log.f64 t))) (sqrt.f64 (neg.f64 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (log.f64 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (log.f64 t))) (sqrt.f64 (log.f64 t)) 1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (+.f64 a -1/2) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (+.f64 a -1/2) b x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) b) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 a -1/2) b) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (+.f64 a -1/2) b x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (+.f64 a -1/2) b x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (+.f64 a -1/2) b x)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (+.f64 a -1/2) b x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (+.f64 a -1/2) b x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (+.f64 a -1/2) b x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 a -1/2) b x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) b x)) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) b x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) b x)) 2) (cbrt.f64 (fma.f64 (+.f64 a -1/2) b x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (+.f64 a -1/2) b x)) (sqrt.f64 (fma.f64 (+.f64 a -1/2) b x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (+.f64 a -1/2) b) 3) (pow.f64 x 3)) (+.f64 (pow.f64 (*.f64 (+.f64 a -1/2) b) 2) (-.f64 (*.f64 x x) (*.f64 (*.f64 (+.f64 a -1/2) b) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (+.f64 a -1/2) b) 2) (*.f64 x x)) (-.f64 (*.f64 (+.f64 a -1/2) b) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 a -1/2) b x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) b x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) b x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) b x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (+.f64 a -1/2) b x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) b x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (+.f64 a -1/2) b x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (+.f64 a -1/2) b x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (exp.f64 (*.f64 (+.f64 a -1/2) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (*.f64 (+.f64 a -1/2) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a -1/2) b)) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) b x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (+.f64 a -1/2) b x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (+.f64 a -1/2) b x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (+.f64 a -1/2) b x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (+.f64 a -1/2) b x)) 1))))))"]],"rules":[["egg-rr",30],["egg-rr",44],["egg-rr",31]],"stop":[["node limit",1]],"time":52.60009765625,"type":"rewrite"},{"count":[[209,132]],"egraph":[[7,7359,1207,0.041358915999999996],[6,5545,1207,0.030830958],[5,3235,1207,0.018810625],[4,1341,1207,0.009369458],[3,477,1207,0.003964708],[2,238,1207,0.001803791],[1,126,1207,0.000862125],[0,46,1239,0.000301625]],"inputs":[["(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(*.f64 (-.f64 1 (log.f64 t)) z)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(*.f64 (-.f64 1 (log.f64 t)) z)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1/2 b) x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","(*.f64 a b)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) x)))","(*.f64 a b)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(*.f64 (-.f64 a 1/2) b)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(*.f64 (-.f64 a 1/2) b)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (*.f64 (-.f64 a 1/2) b))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","x","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","x","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(+.f64 (*.f64 -1/2 b) x)","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) x))","(*.f64 a b)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(*.f64 a b)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","x","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(*.f64 (-.f64 a 1/2) b)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(*.f64 (-.f64 a 1/2) b)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(*.f64 (-.f64 a 1/2) b)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","x","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","x","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(*.f64 (-.f64 1 (log.f64 t)) z)","(-.f64 z (*.f64 (log.f64 t) z))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(*.f64 (-.f64 1 (log.f64 t)) z)","(-.f64 z (*.f64 (log.f64 t) z))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1/2 b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 -1/2 b x))","(fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(*.f64 a b)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(*.f64 a b)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)","(fma.f64 (-.f64 1 (log.f64 t)) z x)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(*.f64 (-.f64 a 1/2) b)","(*.f64 (+.f64 a -1/2) b)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(*.f64 (-.f64 a 1/2) b)","(*.f64 (+.f64 a -1/2) b)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (*.f64 (-.f64 a 1/2) b))","(fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 (+.f64 a -1/2) b))","(fma.f64 (+.f64 a -1/2) b (*.f64 (-.f64 1 (log.f64 t)) z))","(-.f64 (fma.f64 (+.f64 a -1/2) b z) (*.f64 (log.f64 t) z))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","x","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","x","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 (+.f64 a -1/2) b x))","(fma.f64 (+.f64 a -1/2) b (fma.f64 (-.f64 1 (log.f64 t)) z x))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (neg.f64 (neg.f64 (log.f64 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (neg.f64 (neg.f64 (log.f64 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (neg.f64 (neg.f64 (log.f64 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (neg.f64 (neg.f64 (log.f64 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (neg.f64 (neg.f64 (log.f64 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (neg.f64 (neg.f64 (log.f64 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (neg.f64 (neg.f64 (log.f64 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (neg.f64 (neg.f64 (log.f64 t))))","(-.f64 1 (log.f64 t))","(+.f64 (*.f64 -1/2 b) x)","(fma.f64 -1/2 b x)","(fma.f64 b -1/2 x)","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) x))","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) x))","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) x))","(fma.f64 (+.f64 a -1/2) b x)","(*.f64 a b)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(fma.f64 (+.f64 a -1/2) b x)","(*.f64 a b)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(fma.f64 (+.f64 a -1/2) b x)","x","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(*.f64 (-.f64 a 1/2) b)","(*.f64 (+.f64 a -1/2) b)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(*.f64 (-.f64 a 1/2) b)","(*.f64 (+.f64 a -1/2) b)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(*.f64 (-.f64 a 1/2) b)","(*.f64 (+.f64 a -1/2) b)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","x","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","x","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)","(+.f64 (*.f64 (-.f64 a 1/2) b) x)","(fma.f64 (+.f64 a -1/2) b x)"]],"stop":[["node limit",1]],"time":73.15380859375,"type":"simplify"},{"compiler":[[2462,1404]],"time":29.279052734375,"type":"eval"},{"alts":[["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","fresh",0.10546875],["(+.f64 y (*.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) (pow.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) 2)))","fresh",0.5825540528217029],["(+.f64 y (fma.f64 z (+.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 (E.f64) t)) 2)) (log.f64 (cbrt.f64 (/.f64 (E.f64) t)))) (fma.f64 (+.f64 a -1/2) b x)))","fresh",0.10546875],["(+.f64 y (pow.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) 3))","fresh",0.6007577637479348],["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x))))","next",0.078125],["(+.f64 y (fma.f64 z (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)) 1) (fma.f64 (+.f64 a -1/2) b x)))","fresh",0.18138510745286215]],"compiler":[[22,15],[37,25],[29,19],[23,17],[24,17],[27,18],[22,15],[37,25],[29,19],[23,17],[24,17],[27,18]],"count":[[134,6]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[132,5],"picked":[1,0]}],"min-error":[0.0078125],"time":37.47900390625,"type":"prune"},{"compiler":[[86,45]],"locations":[["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))",0.0078125,true],["(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)",0.01171875,true],["(-.f64 1 (log.f64 t))",0.01953125,false],["(*.f64 (-.f64 1 (log.f64 t)) z)",0.28125,true]],"time":18.239990234375,"type":"localize"},{"count":[[3,85]],"series":[["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","x","-inf",0.240966796875],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","x","inf",0.195068359375],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","x","0",0.296875],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","z","-inf",0.18701171875],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","z","inf",0.22412109375],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","z","0",0.27001953125],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","t","-inf",0.251953125],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","t","inf",0.260009765625],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","t","0",0.403076171875],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","b","-inf",0.3388671875],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","b","inf",0.363037109375],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","b","0",0.31494140625],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","a","-inf",0.2509765625],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","a","inf",0.302001953125],["(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))","a","0",0.31396484375],["(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)","x","-inf",0.157958984375],["(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)","x","inf",0.18603515625],["(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)","x","0",0.162109375],["(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)","z","-inf",0.161865234375],["(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)","z","inf",0.283935546875],["(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)","z","0",0.154052734375],["(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)","t","-inf",0.197998046875],["(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)","t","inf",0.178955078125],["(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)","t","0",0.177001953125],["(*.f64 (-.f64 1 (log.f64 t)) z)","z","-inf",0.240966796875],["(*.f64 (-.f64 1 (log.f64 t)) z)","z","inf",0.328857421875],["(*.f64 (-.f64 1 (log.f64 t)) z)","z","0",9.260009765625],["(*.f64 (-.f64 1 (log.f64 t)) z)","t","-inf",0.18994140625],["(*.f64 (-.f64 1 (log.f64 t)) z)","t","inf",0.1708984375],["(*.f64 (-.f64 1 (log.f64 t)) z)","t","0",0.205078125]],"time":16.655029296875,"type":"series"},{"count":[[3,117]],"egraph":[[2,5054,37,0.037307584],[1,354,37,0.0068295000000000005],[0,16,37,0.000407959]],"inputs":[["(*.f64 (-.f64 1 (log.f64 t)) z)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)","(+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 z (*.f64 (neg.f64 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 z (*.f64 z (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (-.f64 1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (E.f64) t) z)) (cbrt.f64 (pow.f64 (/.f64 (E.f64) t) z)))) (log.f64 (cbrt.f64 (pow.f64 (/.f64 (E.f64) t) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (/.f64 (E.f64) t) z))) (log.f64 (sqrt.f64 (pow.f64 (/.f64 (E.f64) t) z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 1 (log.f64 t)) z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) z) (+.f64 1 (*.f64 (log.f64 t) (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3))) (+.f64 1 (*.f64 (log.f64 t) (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (/.f64 (E.f64) t) z))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (/.f64 (E.f64) t) z) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (/.f64 (E.f64) t) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x))) (/.f64 (*.f64 x x) (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 1 (log.f64 t)) z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2) (cbrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (sqrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) (pow.f64 x 3)) (/.f64 1 (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x (-.f64 x (*.f64 (-.f64 1 (log.f64 t)) z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x x)) (/.f64 1 (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x (-.f64 x (*.f64 (-.f64 1 (log.f64 t)) z)))) (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x)) (-.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) (pow.f64 x 3)) (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x (-.f64 x (*.f64 (-.f64 1 (log.f64 t)) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) (pow.f64 x 3)) (+.f64 (*.f64 x x) (-.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 (-.f64 1 (log.f64 t)) (*.f64 z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x x)) (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) (pow.f64 x 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x (-.f64 x (*.f64 (-.f64 1 (log.f64 t)) z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x x))) (neg.f64 (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2)) (-.f64 x (*.f64 (-.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (-.f64 (pow.f64 (/.f64 (E.f64) t) z) 1)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (/.f64 (E.f64) t) z) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (-.f64 (pow.f64 (/.f64 (E.f64) t) z) 1)) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (pow.f64 (/.f64 (E.f64) t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (+.f64 1 (-.f64 (pow.f64 (/.f64 (E.f64) t) z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (-.f64 (pow.f64 (/.f64 (E.f64) t) z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 1 (log.f64 t)) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (-.f64 1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (log.f64 t)) z x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (-.f64 1 (log.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (-.f64 1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 2) (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (-.f64 1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) (sqrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) x)))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 a b) 2) (-.f64 (*.f64 a b) (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))) (/.f64 (pow.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2) (-.f64 (*.f64 a b) (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))) (pow.f64 (cbrt.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))) 2) (cbrt.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))) (sqrt.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 a b) 3) (pow.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 3)) (/.f64 1 (+.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (-.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (*.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2)) (/.f64 1 (-.f64 (*.f64 a b) (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (-.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (*.f64 a b)))) (+.f64 (pow.f64 (*.f64 a b) 3) (pow.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (*.f64 a b) (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))) (-.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 a b) 3) (pow.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 3)) (+.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (-.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 a b) 3) (pow.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 3)) (+.f64 (pow.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2) (-.f64 (pow.f64 (*.f64 a b) 2) (*.f64 a (*.f64 b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2)) (-.f64 (*.f64 a b) (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 a b) 3) (pow.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (-.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (*.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2))) (neg.f64 (-.f64 (*.f64 a b) (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 b (+.f64 a -1/2)) 3) (pow.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 3)) (+.f64 (*.f64 (*.f64 b (+.f64 a -1/2)) (*.f64 b (+.f64 a -1/2))) (-.f64 (pow.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 2) (*.f64 (*.f64 b (+.f64 a -1/2)) (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2) (pow.f64 (*.f64 a b) 2)) (-.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 b (+.f64 a -1/2)) (*.f64 b (+.f64 a -1/2))) (pow.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 2)) (-.f64 (*.f64 b (+.f64 a -1/2)) (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (exp.f64 (*.f64 b (+.f64 a -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x))) (exp.f64 (*.f64 b (+.f64 a -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (*.f64 (pow.f64 (exp.f64 b) a) (pow.f64 (exp.f64 b) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x))) (*.f64 (pow.f64 (exp.f64 b) a) (pow.f64 (exp.f64 b) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 a b))) (exp.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 b) a) (+.f64 1 (expm1.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 a b))) (+.f64 1 (expm1.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))) (pow.f64 (exp.f64 b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))) (+.f64 1 (expm1.f64 (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))) (+.f64 1 (expm1.f64 (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 b) a) (pow.f64 (exp.f64 b) -1/2)) (exp.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 b (+.f64 a -1/2))) (+.f64 1 (expm1.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 b) a) (pow.f64 (exp.f64 b) -1/2)) (+.f64 1 (expm1.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a b) (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a b (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b a (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))) 2) (cbrt.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 a b)) 2) (cbrt.f64 (*.f64 a b)) (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))) (sqrt.f64 (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 a b)) (sqrt.f64 (*.f64 a b)) (fma.f64 b -1/2 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))))"]],"rules":[["egg-rr",52],["egg-rr",43],["egg-rr",22]],"stop":[["node limit",1]],"time":67.368896484375,"type":"rewrite"},{"count":[[202,147]],"egraph":[[8,7935,1076,0.055398710000000004],[7,7394,1076,0.047878585],[6,6379,1076,0.036839585],[5,4376,1076,0.024713752],[4,2212,1076,0.01376646],[3,754,1076,0.0062115009999999995],[2,391,1076,0.002592043],[1,181,1076,0.001133626],[0,59,1244,0.000354417]],"inputs":[["(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)","(+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)","(+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)","(+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)","(+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)","x","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","x","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","x","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(*.f64 a b)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(*.f64 a b)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(*.f64 (-.f64 a 1/2) b)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a))))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a)))) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a)))) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a)))) x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) x)))","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (*.f64 -1/2 b)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)))","x","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)))","x","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 z (*.f64 z (log.f64 t)))","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 z (*.f64 z (log.f64 t)))","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 z (*.f64 z (log.f64 t)))","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 z (*.f64 z (log.f64 t)))","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 z (*.f64 z (log.f64 t)))","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 z (*.f64 z (log.f64 t)))","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 z (*.f64 z (log.f64 t)))","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 z (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","x","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 z (*.f64 z (log.f64 t)))","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 z (*.f64 z (log.f64 t)))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(-.f64 z (*.f64 z (log.f64 t)))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","x","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","x","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(*.f64 a b)","(*.f64 b a)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(*.f64 a b)","(*.f64 b a)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(fma.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(*.f64 (-.f64 a 1/2) b)","(*.f64 b (+.f64 a -1/2))","(*.f64 b (+.f64 -1/2 a))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) x))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a))))","(*.f64 b (+.f64 a -1/2))","(*.f64 b (+.f64 -1/2 a))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a)))) x))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a)))) x))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a)))) x))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 -1/2 b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x))","(fma.f64 -1/2 b (fma.f64 a b x))","(fma.f64 b (+.f64 -1/2 a) x)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 z (*.f64 z (log.f64 t)))","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 z (*.f64 z (log.f64 t)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (*.f64 -1/2 b)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (*.f64 -1/2 b)))","(fma.f64 z (-.f64 1 (log.f64 t)) (*.f64 b (+.f64 -1/2 a)))","(-.f64 (fma.f64 b (+.f64 -1/2 a) z) (*.f64 z (log.f64 t)))","(-.f64 z (fma.f64 b (-.f64 1/2 a) (*.f64 z (log.f64 t))))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","x","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","x","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 a b) x)))","(fma.f64 a b (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 -1/2 b x)))","(fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 b (+.f64 -1/2 a) x))"]],"stop":[["node limit",1]],"time":87.43798828125,"type":"simplify"},{"compiler":[[4594,2475]],"time":44.55322265625,"type":"eval"},{"alts":[["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 (E.f64) t)) 2)) (log.f64 (cbrt.f64 (/.f64 (E.f64) t)))) z) x))))","fresh",0.09375],["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 3) x))))","fresh",0.15824130861065208],["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (fma.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) (neg.f64 (cbrt.f64 (log.f64 t))) 1) z) x))))","fresh",0.17747885745286218],["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3))) (+.f64 1 (*.f64 (log.f64 t) (+.f64 1 (log.f64 t))))) x))))","fresh",0.12404252930532605],["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x))))","next",0.07259750976844201],["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","fresh",0.10546875]],"compiler":[[33,22],[27,20],[31,21],[36,25],[31,22],[22,15],[33,22],[27,20],[31,21],[36,25],[31,22],[22,15]],"count":[[200,6]],"kept":[{"done":[0,0],"fresh":[5,1],"new":[194,5],"picked":[1,0]}],"min-error":[0.00390625],"time":68.4580078125,"type":"prune"},{"compiler":[[140,82]],"locations":[["(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)",0.01171875,true],["(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)",0.23828125,true],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))",0.30078125,true],["(pow.f64 (log.f64 t) 2)",0.5316200683790943,true]],"time":31.3349609375,"type":"localize"},{"count":[[4,54]],"series":[["(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","x","-inf",0.19921875],["(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","x","inf",0.175048828125],["(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","x","0",0.343994140625],["(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","z","-inf",0.18408203125],["(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","z","inf",0.509033203125],["(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","z","0",0.23095703125],["(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","t","-inf",0.777099609375],["(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","t","inf",0.212890625],["(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","t","0",0.213134765625],["(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)","z","-inf",0.283935546875],["(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)","z","inf",0.324951171875],["(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)","z","0",0.14892578125],["(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)","t","-inf",0.3271484375],["(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)","t","inf",0.172119140625],["(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)","t","0",0.155029296875],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","z","-inf",0.344970703125],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","z","inf",0.43603515625],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","z","0",0.675048828125],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","t","-inf",0.698974609375],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","t","inf",0.576904296875],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","t","0",0.597900390625],["(pow.f64 (log.f64 t) 2)","t","-inf",0.404052734375],["(pow.f64 (log.f64 t) 2)","t","inf",0.358154296875],["(pow.f64 (log.f64 t) 2)","t","0",0.40283203125]],"time":9.072021484375,"type":"series"},{"count":[[4,180]],"egraph":[[2,4032,37,0.030498375],[1,287,39,0.005380958],[0,13,61,0.00034475]],"inputs":[["(pow.f64 (log.f64 t) 2)","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (log.f64 t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 t (log.f64 t))) (cbrt.f64 (pow.f64 t (log.f64 t))))) (log.f64 (cbrt.f64 (pow.f64 t (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 t (log.f64 t)))) (log.f64 (sqrt.f64 (pow.f64 t (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (log.f64 t) 2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 t) (log.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 t) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log.f64 t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4)) (pow.f64 (cbrt.f64 (log.f64 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) (cbrt.f64 (pow.f64 (log.f64 t) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) (*.f64 (cbrt.f64 (log.f64 t)) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 t)) (*.f64 (sqrt.f64 (log.f64 t)) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (log.f64 t)) 3) (sqrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 t) (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 t) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 t (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 t) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (log.f64 t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (log.f64 t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (pow.f64 (log.f64 t) 2) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (log.f64 t) 2) 1)) (cbrt.f64 (+.f64 (pow.f64 (log.f64 t) 2) 1))) (cbrt.f64 (+.f64 (pow.f64 (log.f64 t) 2) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (log.f64 t)) (hypot.f64 1 (log.f64 t)) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (-.f64 1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (-.f64 1 (log.f64 t)) z))) (cbrt.f64 (exp.f64 (*.f64 (-.f64 1 (log.f64 t)) z))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 1 (log.f64 t)) z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (/.f64 (+.f64 (log.f64 t) 1) z)) (/.f64 (pow.f64 (log.f64 t) 2) (/.f64 (+.f64 (log.f64 t) 1) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 1 (/.f64 (+.f64 (log.f64 t) 1) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (*.f64 z (/.f64 1 (+.f64 (log.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 1 (+.f64 (log.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (/.f64 1 (+.f64 (log.f64 t) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 2) (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 2) (*.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (/.f64 1 (+.f64 (log.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) (sqrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (*.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (/.f64 1 (+.f64 (log.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (neg.f64 z)) (/.f64 1 (+.f64 (neg.f64 (log.f64 t)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (log.f64 t) 1)) (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (log.f64 t)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z 1) (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 2) 1) (/.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (+.f64 (log.f64 t) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 1) (/.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (+.f64 (log.f64 t) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 (log.f64 t) 1)) 2)) (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (cbrt.f64 (+.f64 (log.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (pow.f64 (cbrt.f64 (+.f64 (log.f64 t) 1)) 2)) (/.f64 z (cbrt.f64 (+.f64 (log.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (pow.f64 (cbrt.f64 (+.f64 (log.f64 t) 1)) 2)) (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (+.f64 (log.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 2) (pow.f64 (cbrt.f64 (+.f64 (log.f64 t) 1)) 2)) (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (pow.f64 (cbrt.f64 (+.f64 (log.f64 t) 1)) 2)) (/.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (cbrt.f64 (+.f64 (log.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 (log.f64 t) 1))) (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (sqrt.f64 (+.f64 (log.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (sqrt.f64 (+.f64 (log.f64 t) 1))) (/.f64 z (sqrt.f64 (+.f64 (log.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (sqrt.f64 (+.f64 (log.f64 t) 1))) (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (sqrt.f64 (+.f64 (log.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 2) (sqrt.f64 (+.f64 (log.f64 t) 1))) (/.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (sqrt.f64 (+.f64 (log.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (-.f64 1 (pow.f64 (log.f64 t) 2))) (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (pow.f64 (log.f64 t) 3))) (fma.f64 (log.f64 t) (-.f64 (log.f64 t) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (*.f64 (-.f64 1 (log.f64 t)) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 1 (*.f64 (-.f64 1 (log.f64 t)) z)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 (neg.f64 (log.f64 t)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 1 (log.f64 t)) z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 z (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 z (*.f64 z (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) z)) (cbrt.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) z)))) (log.f64 (cbrt.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) z))) (log.f64 (sqrt.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 6)) z) (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 2) (pow.f64 (log.f64 t) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 4)) z) (+.f64 (pow.f64 (log.f64 t) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 6))) (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 2) (pow.f64 (log.f64 t) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 4))) (+.f64 (pow.f64 (log.f64 t) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 3) (pow.f64 z 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 z 3) (pow.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) z))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 3) (pow.f64 z 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 z 3) (pow.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 z (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 z (*.f64 z (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z 1 (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z 1 (*.f64 z (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (pow.f64 (cbrt.f64 z) 2) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (pow.f64 (cbrt.f64 z) 2) (*.f64 z (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 z) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 z) (*.f64 z (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (sqrt.f64 z) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (sqrt.f64 z) (*.f64 z (neg.f64 (pow.f64 (log.f64 t) 2))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x))) (/.f64 (*.f64 x x) (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 1 (log.f64 t)) z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2) (cbrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) (sqrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) (pow.f64 x 3)) (/.f64 1 (fma.f64 x (-.f64 x (*.f64 (-.f64 1 (log.f64 t)) z)) (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x x)) (/.f64 1 (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x (-.f64 x (*.f64 (-.f64 1 (log.f64 t)) z)) (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2)) (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x)) (-.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) (pow.f64 x 3)) (fma.f64 x (-.f64 x (*.f64 (-.f64 1 (log.f64 t)) z)) (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) (pow.f64 x 3)) (fma.f64 x x (-.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x x)) (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) (pow.f64 x 3))) (neg.f64 (fma.f64 x (-.f64 x (*.f64 (-.f64 1 (log.f64 t)) z)) (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x x))) (neg.f64 (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2)) (-.f64 x (*.f64 (-.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x (-.f64 x (*.f64 (-.f64 1 (log.f64 t)) z)) (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2)) (+.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 3) (pow.f64 x 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (-.f64 1 (log.f64 t)) z (neg.f64 x)) (-.f64 (pow.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 2) (*.f64 x x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 1 (log.f64 t)) z))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 1 (log.f64 t)) z))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (*.f64 (-.f64 1 (log.f64 t)) z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (*.f64 (-.f64 1 (log.f64 t)) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (-.f64 1 (log.f64 t)) z x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 1 (log.f64 t)) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (-.f64 1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 1 (/.f64 (+.f64 (log.f64 t) 1) z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (*.f64 z (/.f64 1 (+.f64 (log.f64 t) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 1 (+.f64 (log.f64 t) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (/.f64 1 (+.f64 (log.f64 t) 1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 1 (log.f64 t)) z) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (-.f64 1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 2) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 2) (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (-.f64 1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (-.f64 1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 2) (*.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (/.f64 1 (+.f64 (log.f64 t) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) (sqrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (-.f64 1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (*.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (/.f64 1 (+.f64 (log.f64 t) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (neg.f64 z)) (/.f64 1 (+.f64 (neg.f64 (log.f64 t)) -1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 (log.f64 t) 1)) (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (log.f64 t)) z x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z 1) (-.f64 1 (log.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 2) 1) (/.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (+.f64 (log.f64 t) 1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 1) (/.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (+.f64 (log.f64 t) 1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 (log.f64 t) 1)) 2)) (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (cbrt.f64 (+.f64 (log.f64 t) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (pow.f64 (cbrt.f64 (+.f64 (log.f64 t) 1)) 2)) (/.f64 z (cbrt.f64 (+.f64 (log.f64 t) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (pow.f64 (cbrt.f64 (+.f64 (log.f64 t) 1)) 2)) (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (+.f64 (log.f64 t) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 2) (pow.f64 (cbrt.f64 (+.f64 (log.f64 t) 1)) 2)) (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (pow.f64 (cbrt.f64 (+.f64 (log.f64 t) 1)) 2)) (/.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (cbrt.f64 (+.f64 (log.f64 t) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 (log.f64 t) 1))) (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (sqrt.f64 (+.f64 (log.f64 t) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (sqrt.f64 (+.f64 (log.f64 t) 1))) (/.f64 z (sqrt.f64 (+.f64 (log.f64 t) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (sqrt.f64 (+.f64 (log.f64 t) 1))) (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (sqrt.f64 (+.f64 (log.f64 t) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) 2) (sqrt.f64 (+.f64 (log.f64 t) 1))) (/.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (sqrt.f64 (+.f64 (log.f64 t) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (-.f64 1 (pow.f64 (log.f64 t) 2))) (-.f64 1 (log.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (pow.f64 (log.f64 t) 3))) (fma.f64 (log.f64 t) (-.f64 (log.f64 t) 1) 1) x)))))"]],"rules":[["egg-rr",71],["egg-rr",36],["egg-rr",49],["egg-rr",24]],"stop":[["node limit",1]],"time":62.0859375,"type":"rewrite"},{"count":[[234,197]],"egraph":[[4,3325,871,0.018359124],[3,597,871,0.005859249],[2,197,871,0.001527624],[1,88,919,0.0005900829999999999],[0,39,1017,0.000214875]],"inputs":[["(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","x","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t)))))","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","x","x"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (neg.f64 (log.f64 t)) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (neg.f64 (log.f64 t)) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (neg.f64 (log.f64 t)) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (neg.f64 (log.f64 t)) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (neg.f64 (log.f64 t)) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (neg.f64 (log.f64 t)) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (neg.f64 (log.f64 t)) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (neg.f64 (log.f64 t)) 2)","(pow.f64 (log.f64 t) 2)","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) (/.f64 (+.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z))","(/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) (/.f64 (+.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z))","(/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) (/.f64 (+.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z))","(/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) (/.f64 (+.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z))","(/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) (/.f64 (+.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z))","(/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) (/.f64 (+.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z))","(/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) (/.f64 (+.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z))","(/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) (/.f64 (+.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z))","(/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) z)","(*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2)))","(fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) z)","(*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2)))","(fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) z)","(*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2)))","(fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) z)","(*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2)))","(fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) z)","(*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2)))","(fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) z)","(*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2)))","(fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) z)","(*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2)))","(fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z)","(*.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) z)","(*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2)))","(fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","x","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t)))))","(/.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) (/.f64 (+.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z))","(/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) (/.f64 (+.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z))","(/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (-.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 2)) (/.f64 (+.f64 1 (neg.f64 (neg.f64 (log.f64 t)))) z))","(/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (fma.f64 z (neg.f64 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z)))","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)","x","x"]],"stop":[["node limit",1]],"time":42.89990234375,"type":"simplify"},{"compiler":[[5657,3275]],"time":52.260009765625,"type":"eval"},{"alts":[["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3))) (+.f64 1 (*.f64 (log.f64 t) (+.f64 1 (log.f64 t))))) x))))","fresh",0.12404252930532605],["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (/.f64 (+.f64 z (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) z)) (+.f64 1 (log.f64 t))) x))))","fresh",0.09441376953688403],["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x))))","next",0.05859375],["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (fma.f64 (/.f64 1 (+.f64 (log.f64 t) 1)) (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) x))))","fresh",0.09441376953688403],["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","fresh",0.10546875]],"compiler":[[36,25],[32,22],[33,24],[32,23],[22,15],[36,25],[32,22],[33,24],[32,23],[22,15]],"count":[[203,5]],"kept":[{"done":[0,0],"fresh":[5,2],"new":[197,3],"picked":[1,0]}],"min-error":[0.00390625],"time":72.35498046875,"type":"prune"},{"compiler":[[156,96]],"locations":[["(+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x)",0.01171875,true],["(/.f64 z (+.f64 (log.f64 t) 1))",0.34765625,true],["(*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1)))",0.4059562988422101,true],["(pow.f64 (log.f64 t) 2)",0.5316200683790943,false]],"time":35.276123046875,"type":"localize"},{"count":[[3,84]],"series":[["(+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x)","x","-inf",0.161865234375],["(+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x)","x","inf",0.19189453125],["(+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x)","x","0",0.166015625],["(+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x)","z","-inf",0.169189453125],["(+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x)","z","inf",0.20703125],["(+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x)","z","0",0.1689453125],["(+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x)","t","-inf",0.239990234375],["(+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x)","t","inf",0.18212890625],["(+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x)","t","0",0.19921875],["(/.f64 z (+.f64 (log.f64 t) 1))","t","-inf",0.448974609375],["(/.f64 z (+.f64 (log.f64 t) 1))","t","inf",0.422119140625],["(/.f64 z (+.f64 (log.f64 t) 1))","t","0",0.3681640625],["(/.f64 z (+.f64 (log.f64 t) 1))","z","-inf",0.39501953125],["(/.f64 z (+.f64 (log.f64 t) 1))","z","inf",0.27001953125],["(/.f64 z (+.f64 (log.f64 t) 1))","z","0",0.383056640625],["(*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1)))","z","-inf",0.177001953125],["(*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1)))","z","inf",0.206787109375],["(*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1)))","z","0",0.1669921875],["(*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1)))","t","-inf",0.22802734375],["(*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1)))","t","inf",0.2041015625],["(*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1)))","t","0",0.23095703125]],"time":5.5478515625,"type":"series"},{"count":[[3,208]],"egraph":[[2,4290,50,0.031948125],[1,325,50,0.005926542],[0,14,50,0.0003905]],"inputs":[["(*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1)))","(/.f64 z (+.f64 (log.f64 t) 1))","(+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (+.f64 1 (log.f64 t))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (+.f64 1 (log.f64 t))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) (/.f64 z (+.f64 1 (log.f64 t))))) (cbrt.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) (/.f64 z (+.f64 1 (log.f64 t))))))) (log.f64 (cbrt.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) (/.f64 z (+.f64 1 (log.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) (/.f64 z (+.f64 1 (log.f64 t)))))) (log.f64 (sqrt.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) (/.f64 z (+.f64 1 (log.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 1 (-.f64 1 (pow.f64 (log.f64 t) 2))) (/.f64 (+.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (+.f64 1 (log.f64 t)) z) (/.f64 1 (-.f64 1 (pow.f64 (log.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (log.f64 t)) (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 (+.f64 1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (*.f64 (/.f64 (+.f64 1 (log.f64 t)) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 z (*.f64 (/.f64 1 (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 z (*.f64 (+.f64 1 (log.f64 t)) (/.f64 1 (-.f64 1 (pow.f64 (log.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 z (+.f64 1 (log.f64 t))) (/.f64 1 (-.f64 1 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) 2) (/.f64 1 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) (/.f64 1 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 z) (*.f64 (/.f64 1 (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 -1 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) (*.f64 -1 (/.f64 (+.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) (*.f64 (/.f64 (+.f64 1 (log.f64 t)) z) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log.f64 t) 6)) (*.f64 (/.f64 (+.f64 1 (log.f64 t)) z) (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 2) (pow.f64 (log.f64 t) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log.f64 t) 4)) (*.f64 (/.f64 (+.f64 1 (log.f64 t)) z) (fma.f64 (log.f64 t) (log.f64 t) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (+.f64 -1 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) 1) (*.f64 (+.f64 -1 (neg.f64 (log.f64 t))) (/.f64 1 (-.f64 1 (pow.f64 (log.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 6)) 1) (*.f64 (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 2) (pow.f64 (log.f64 t) 4))) (/.f64 (+.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 4)) 1) (*.f64 (fma.f64 (log.f64 t) (log.f64 t) 1) (/.f64 (+.f64 1 (log.f64 t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) z) (+.f64 -1 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 6)) z) (*.f64 (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 2) (pow.f64 (log.f64 t) 4))) (+.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 4)) z) (*.f64 (fma.f64 (log.f64 t) (log.f64 t) 1) (+.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (neg.f64 z)) (+.f64 -1 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) (neg.f64 z)) (*.f64 -1 (+.f64 -1 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 6)) (neg.f64 z)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 2) (pow.f64 (log.f64 t) 4))) (+.f64 -1 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 4)) (neg.f64 z)) (*.f64 (fma.f64 (log.f64 t) (log.f64 t) 1) (+.f64 -1 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (-.f64 1 (pow.f64 (log.f64 t) 2))) (+.f64 -1 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (-.f64 1 (pow.f64 (log.f64 t) 2))) (*.f64 (+.f64 -1 (neg.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (neg.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)))) (*.f64 (+.f64 1 (log.f64 t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (neg.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)))) (*.f64 (+.f64 -1 (neg.f64 (log.f64 t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 6))) (*.f64 (+.f64 1 (log.f64 t)) (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 2) (pow.f64 (log.f64 t) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (-.f64 1 (pow.f64 (log.f64 t) 6))) (*.f64 (+.f64 -1 (neg.f64 (log.f64 t))) (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 2) (pow.f64 (log.f64 t) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 4))) (*.f64 (+.f64 1 (log.f64 t)) (fma.f64 (log.f64 t) (log.f64 t) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (-.f64 1 (pow.f64 (log.f64 t) 4))) (*.f64 (+.f64 -1 (neg.f64 (log.f64 t))) (fma.f64 (log.f64 t) (log.f64 t) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (pow.f64 (cbrt.f64 (+.f64 1 (log.f64 t))) 2)) (cbrt.f64 (+.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (sqrt.f64 (+.f64 1 (log.f64 t)))) (sqrt.f64 (+.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) (/.f64 z (+.f64 1 (log.f64 t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 6)) (/.f64 z (+.f64 1 (log.f64 t)))) (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 2) (pow.f64 (log.f64 t) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 4)) (/.f64 z (+.f64 1 (log.f64 t)))) (fma.f64 (log.f64 t) (log.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 6))) (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 2) (pow.f64 (log.f64 t) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 4))) (fma.f64 (log.f64 t) (log.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 1 (-.f64 1 (pow.f64 (log.f64 t) 2))) (/.f64 (+.f64 1 (log.f64 t)) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (+.f64 1 (log.f64 t)) z) (/.f64 1 (-.f64 1 (pow.f64 (log.f64 t) 2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (log.f64 t)) (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (log1p.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z)) (log1p.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 z (+.f64 1 (log.f64 t))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 z (+.f64 1 (log.f64 t))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 1 (+.f64 1 (log.f64 t))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 1 (+.f64 1 (log.f64 t))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) 1 (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) 1 (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (/.f64 z (+.f64 1 (log.f64 t))) 2)) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (/.f64 z (+.f64 1 (log.f64 t))) 2)) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 z (+.f64 1 (log.f64 t))) 2)) (cbrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 z (+.f64 1 (log.f64 t))) 2)) (cbrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (+.f64 1 (log.f64 t)))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (+.f64 1 (log.f64 t)))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (sqrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (sqrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (+.f64 1 (log.f64 t)))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (+.f64 1 (log.f64 t)))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (/.f64 1 (+.f64 -1 (neg.f64 (log.f64 t)))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (/.f64 1 (+.f64 -1 (neg.f64 (log.f64 t)))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (log.f64 t))) z (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (log.f64 t))) z (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (+.f64 1 (log.f64 t))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (+.f64 1 (log.f64 t))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (+.f64 1 (log.f64 t))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (+.f64 1 (log.f64 t))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 1 (log.f64 t))) 2)) (/.f64 z (cbrt.f64 (+.f64 1 (log.f64 t)))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 1 (log.f64 t))) 2)) (/.f64 z (cbrt.f64 (+.f64 1 (log.f64 t)))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (+.f64 1 (log.f64 t))) 2)) (cbrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (+.f64 1 (log.f64 t))) 2)) (cbrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (+.f64 1 (log.f64 t))) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (+.f64 1 (log.f64 t)))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (+.f64 1 (log.f64 t))) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (+.f64 1 (log.f64 t)))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 1 (log.f64 t)))) (/.f64 z (sqrt.f64 (+.f64 1 (log.f64 t)))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 1 (log.f64 t)))) (/.f64 z (sqrt.f64 (+.f64 1 (log.f64 t)))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (+.f64 1 (log.f64 t)))) (/.f64 (cbrt.f64 z) (sqrt.f64 (+.f64 1 (log.f64 t)))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (+.f64 1 (log.f64 t)))) (/.f64 (cbrt.f64 z) (sqrt.f64 (+.f64 1 (log.f64 t)))) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (+.f64 1 (pow.f64 (log.f64 t) 3))) (-.f64 (fma.f64 (log.f64 t) (log.f64 t) 1) (log.f64 t)) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (+.f64 1 (pow.f64 (log.f64 t) 3))) (-.f64 (fma.f64 (log.f64 t) (log.f64 t) 1) (log.f64 t)) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (+.f64 (pow.f64 (log.f64 t) 2) -1)) (+.f64 (log.f64 t) -1) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (+.f64 (pow.f64 (log.f64 t) 2) -1)) (+.f64 (log.f64 t) -1) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 (pow.f64 (log.f64 t) 2))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 z (+.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 z (+.f64 1 (log.f64 t))))) (cbrt.f64 (exp.f64 (/.f64 z (+.f64 1 (log.f64 t))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 z (+.f64 1 (log.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 z (+.f64 1 (log.f64 t)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 z (+.f64 1 (log.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 z (+.f64 1 (log.f64 t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 z (+.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 1 (+.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (+.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (/.f64 z (+.f64 1 (log.f64 t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 z (+.f64 1 (log.f64 t))) 2)) (cbrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (sqrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (/.f64 1 (+.f64 -1 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (log.f64 t))) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (+.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (+.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 1 (log.f64 t))) 2)) (/.f64 z (cbrt.f64 (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (+.f64 1 (log.f64 t))) 2)) (cbrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (+.f64 1 (log.f64 t))) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 1 (log.f64 t)))) (/.f64 z (sqrt.f64 (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (+.f64 1 (log.f64 t)))) (/.f64 (cbrt.f64 z) (sqrt.f64 (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (+.f64 1 (pow.f64 (log.f64 t) 3))) (-.f64 (fma.f64 (log.f64 t) (log.f64 t) 1) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (+.f64 (pow.f64 (log.f64 t) 2) -1)) (+.f64 (log.f64 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z (+.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z (+.f64 1 (log.f64 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (log.f64 t)) z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 1 (log.f64 t)) z) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 z (+.f64 -1 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 z (+.f64 1 (log.f64 t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 z (+.f64 1 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 z (+.f64 1 (log.f64 t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 z 3) (pow.f64 (+.f64 1 (log.f64 t)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 z) (log1p.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 z) (log1p.f64 (log.f64 t))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2) (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 x))) (/.f64 (*.f64 x x) (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x) 2)) (cbrt.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x)) (sqrt.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 3) (pow.f64 x 3)) (/.f64 1 (fma.f64 x (-.f64 x (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2) (*.f64 x x)) (/.f64 1 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x (-.f64 x (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2)) (+.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 3) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 x)) (-.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 3) (pow.f64 x 3)) (fma.f64 x (-.f64 x (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 3) (pow.f64 x 3)) (fma.f64 x x (-.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2) (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2) (*.f64 x x)) (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 3) (pow.f64 x 3))) (neg.f64 (fma.f64 x (-.f64 x (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2) (*.f64 x x))) (neg.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2)) (-.f64 x (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x (-.f64 x (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2)) (+.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 3) (pow.f64 x 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) (neg.f64 x)) (-.f64 (pow.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 2) (*.f64 x x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) (/.f64 z (+.f64 1 (log.f64 t)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (pow.f64 (/.f64 (E.f64) (pow.f64 t (log.f64 t))) (/.f64 z (+.f64 1 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (+.f64 1 (log.f64 t))) (-.f64 1 (pow.f64 (log.f64 t) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 z (+.f64 1 (log.f64 t))) 2)) (*.f64 (cbrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (-.f64 1 (pow.f64 (log.f64 t) 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) 2) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) 2) (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) 2) (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) (/.f64 z (+.f64 1 (log.f64 t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (*.f64 (sqrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) (-.f64 1 (pow.f64 (log.f64 t) 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) (sqrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) (/.f64 z (+.f64 1 (log.f64 t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (/.f64 1 (+.f64 1 (log.f64 t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (pow.f64 (cbrt.f64 (+.f64 1 (log.f64 t))) 2)) (/.f64 z (cbrt.f64 (+.f64 1 (log.f64 t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (sqrt.f64 (+.f64 1 (log.f64 t)))) (/.f64 z (sqrt.f64 (+.f64 1 (log.f64 t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (pow.f64 (log.f64 t) 3))) (-.f64 (fma.f64 (log.f64 t) (log.f64 t) 1) (log.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 (pow.f64 (log.f64 t) 2) -1)) (+.f64 (log.f64 t) -1) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (pow.f64 (/.f64 z (+.f64 1 (log.f64 t))) 2))) (cbrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (sqrt.f64 (/.f64 z (+.f64 1 (log.f64 t))))) (sqrt.f64 (/.f64 z (+.f64 1 (log.f64 t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) 2)) (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 z (+.f64 1 (log.f64 t))) (sqrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)))) (sqrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 2))) x)))))"]],"rules":[["egg-rr",63],["egg-rr",39],["egg-rr",106]],"stop":[["node limit",1]],"time":68.17822265625,"type":"rewrite"},{"count":[[292,222]],"egraph":[[4,3322,1389,0.018532207000000002],[3,602,1389,0.006047499],[2,200,1389,0.00166154],[1,91,1449,0.000666499],[0,43,1449,0.000252416]],"inputs":[["(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 z (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 z (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 z (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 z (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 z (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 z (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 z (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","x","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t)))))","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","x","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 z (+.f64 1 (log.f64 t)))","(/.f64 z (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(/.f64 z (+.f64 1 (log.f64 t)))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) z) (+.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) z) (+.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","x","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 z (-.f64 (/.f64 1 (+.f64 1 (log.f64 t))) (/.f64 (pow.f64 (log.f64 t) 2) (+.f64 1 (log.f64 t))))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t)))","(/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2))))","(*.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))","(/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t)))","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 x (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x)","(+.f64 (/.f64 z (/.f64 (+.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2)))) x)","(fma.f64 z (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (+.f64 1 (log.f64 t))) x)"]],"stop":[["node limit",1]],"time":47.8349609375,"type":"simplify"},{"compiler":[[8354,4933]],"time":77.1328125,"type":"eval"},{"alts":[["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x))))","done",0.05859375],["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t))) x))))","fresh",0.09441376953688403],["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (+.f64 (/.f64 z (+.f64 1 (log.f64 t))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) x))))","fresh",0.078125],["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (fma.f64 (/.f64 1 (+.f64 (log.f64 t) 1)) (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) x))))","fresh",0.09441376953688403],["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","fresh",0.10546875]],"compiler":[[33,24],[31,21],[37,25],[32,23],[22,15]],"count":[[254,5]],"kept":[{"done":[0,0],"fresh":[4,2],"new":[249,2],"picked":[1,1]}],"min-error":[0.00390625],"time":104.796142578125,"type":"prune"},{"accuracy":[0.05859375],"baseline":[0.05859375],"branch":[["x",0.05859375,1],["y",0.05859375,1],["z",0.05859375,1],["t",0.05859375,1],["a",0.05859375,1],["b",0.05859375,1],["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))",0.05859375,1],["(-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t)))",0.05859375,1],["(+.f64 x y)",0.05859375,1],["(log.f64 t)",0.05859375,1],["(*.f64 (-.f64 a 1/2) b)",0.05859375,1],["(-.f64 a 1/2)",0.05859375,1]],"compiler":[[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[22,15],[16,11],[9,7],[8,7],[11,9],[9,8],[409,225]],"count":[[17,1]],"inputs":[["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (/.f64 (-.f64 z (*.f64 (pow.f64 (log.f64 t) 2) z)) (+.f64 1 (log.f64 t))) x))))","(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (+.f64 (/.f64 z (+.f64 1 (log.f64 t))) (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t))))) x))))","(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (/.f64 (+.f64 z (*.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) z)) (+.f64 1 (log.f64 t))) x))))","(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x))))","(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (fma.f64 (/.f64 1 (+.f64 (log.f64 t) 1)) (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) x))))","(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 (E.f64) t)) 2)) (log.f64 (cbrt.f64 (/.f64 (E.f64) t)))) z) x))))","(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (log.f64 t)) z)) 3) x))))","(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (fma.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) (neg.f64 (cbrt.f64 (log.f64 t))) 1) z) x))))","(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3))) (+.f64 1 (*.f64 (log.f64 t) (+.f64 1 (log.f64 t))))) x))))","(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) z) (+.f64 1 (log.f64 t))) x))))","(+.f64 y (*.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) (pow.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) 2)))","(+.f64 y (fma.f64 z (+.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 (E.f64) t)) 2)) (log.f64 (cbrt.f64 (/.f64 (E.f64) t)))) (fma.f64 (+.f64 a -1/2) b x)))","(+.f64 y (pow.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x))) 3))","(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) x))))","(+.f64 y (fma.f64 z (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)) 1) (fma.f64 (+.f64 a -1/2) b x)))","(+.f64 y (fma.f64 z (-.f64 1 (log.f64 t)) (fma.f64 (+.f64 a -1/2) b x)))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))"]],"link":["."],"name":["Numeric.SpecFunctions:logBeta from math-functions-0.1.5.2, A"],"oracle":[0.7815554688852174],"outputs":[["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x))))"]],"time":83.10498046875,"times":[["x",6.537109375],["y",6.442138671875],["z",6.10009765625],["t",6.958984375],["a",6.27001953125],["b",6.27490234375],["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))",6.39892578125],["(-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t)))",6.305908203125],["(+.f64 x y)",6.68701171875],["(log.f64 t)",6.473876953125],["(*.f64 (-.f64 a 1/2) b)",6.598876953125],["(-.f64 a 1/2)",3.966064453125]],"type":"regimes"},{"compiler":[[31,22]],"egraph":[[4,43,38,0.00018937499999999998],[3,42,38,0.00015341699999999998],[2,40,38,0.00011708299999999999],[1,36,38,8.083299999999999e-5],[0,23,38,4.2791e-5]],"inputs":[["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 -1/2 b) (+.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) 1) (/.f64 z (+.f64 (log.f64 t) 1))) x))))","(+.f64 y (+.f64 (*.f64 a b) (+.f64 (*.f64 b -1/2) (+.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 2)) (/.f64 z (+.f64 1 (log.f64 t)))) x))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.097900390625,"type":"simplify"},{"time":0.01513671875,"type":"soundness"},{"compiler":[[31,22],[31,22],[31,22]],"remove-preprocessing":[["(sort x y)"]],"time":13.347900390625,"type":"end"}]