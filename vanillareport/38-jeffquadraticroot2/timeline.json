[{"compiler":[[42,27]],"method":["search"],"sampling":[[12,0.39200334013526117,0.4266205505203402,0.18137610934439863],[11,0.336420776981754,0.5138949259982155,0.1496842970200305],[10,0.29058954069728316,0.5753282852731445,0.13408217402957234],[9,0.16772282214742518,0.745001372794377,0.08727580505819788],[8,0.10141379943797801,0.8347135799895113,0.06387262057251064],[7,0.07801061495229078,0.8581167644751986,0.06387262057251064],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":173.669921875,"type":"analyze"},{"outcomes":[["body",256,"invalid",116.7041015625,1571],["body",256,"valid",649.89404296875,8256]],"time":775.22998046875,"type":"sample"},{"compiler":[[41,26]],"egraph":[[0,3,3,2.084e-6],[6,6277,200,0.038330834],[5,2422,200,0.022075001],[4,1305,200,0.009040834000000001],[3,699,200,0.004310042],[2,321,208,0.0018845420000000001],[1,131,208,0.000724667],[0,55,232,0.000214167]],"inputs":[["0","1","2"],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 a 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c))))) (/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c)))) (*.f64 2 b)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 a) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a)))) (*.f64 2 c)))","(if (>=.f64 c 0) (/.f64 (*.f64 2 b) (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b))))) (/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b)))) (*.f64 2 a)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 c (*.f64 4 a)))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 c (*.f64 4 a))))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 c (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) 2)) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b) (*.f64 2 a)))","(if (>=.f64 b 0) (*.f64 (/.f64 c (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))) 2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b) (*.f64 2 a)))","(if (>=.f64 b 0) (*.f64 c (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 c (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (*.f64 -1/2 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) a)))","(if (>=.f64 b 0) (*.f64 -2 (/.f64 c (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))))) (*.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) a) -1/2))","(if (>=.f64 a 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c))))) (/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c)))) (*.f64 2 b)))","(if (>=.f64 a 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 c (*.f64 b 4)))))) (/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 c (*.f64 b 4))))) (*.f64 b 2)))","(if (>=.f64 a 0) (*.f64 (/.f64 2 (-.f64 (neg.f64 a) (sqrt.f64 (fma.f64 a a (*.f64 c (*.f64 b -4)))))) c) (/.f64 (-.f64 (sqrt.f64 (fma.f64 a a (*.f64 c (*.f64 b -4)))) a) (*.f64 b 2)))","(if (>=.f64 a 0) (*.f64 (/.f64 c (-.f64 (neg.f64 a) (sqrt.f64 (fma.f64 c (*.f64 b -4) (*.f64 a a))))) 2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 b -4) (*.f64 a a))) a) (*.f64 b 2)))","(if (>=.f64 a 0) (*.f64 c (/.f64 -2 (+.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))))) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a))) a) (*.f64 b 2)))","(if (>=.f64 a 0) (*.f64 c (/.f64 -2 (+.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))))) (*.f64 -1/2 (/.f64 (-.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))) b)))","(if (>=.f64 a 0) (/.f64 (*.f64 c -2) (+.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a))))) (*.f64 (/.f64 (-.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))) b) -1/2))","(if (>=.f64 b 0) (/.f64 (*.f64 2 a) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a)))) (*.f64 2 c)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 a) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 c a)))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 c a))))) (*.f64 2 c)))","(if (>=.f64 b 0) (*.f64 (/.f64 2 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))) a) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b) (*.f64 2 c)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 a) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b) (*.f64 2 c)))","(if (>=.f64 b 0) (*.f64 a (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b) (*.f64 2 c)))","(if (>=.f64 b 0) (*.f64 a (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (*.f64 -1/2 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) c)))","(if (>=.f64 b 0) (*.f64 a (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))))) (*.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) c) -1/2))","(if (>=.f64 c 0) (/.f64 (*.f64 2 b) (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b))))) (/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b)))) (*.f64 2 a)))","(if (>=.f64 c 0) (/.f64 2 (/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 b (*.f64 4 a))))) b)) (/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 b (*.f64 4 a))))) (*.f64 2 a)))","(if (>=.f64 c 0) (*.f64 (/.f64 2 (-.f64 (neg.f64 c) (sqrt.f64 (fma.f64 c c (*.f64 b (*.f64 a -4)))))) b) (/.f64 (-.f64 (sqrt.f64 (fma.f64 c c (*.f64 b (*.f64 a -4)))) c) (*.f64 2 a)))","(if (>=.f64 c 0) (*.f64 b (/.f64 2 (-.f64 (neg.f64 c) (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c)))))) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c))) c) (*.f64 2 a)))","(if (>=.f64 c 0) (*.f64 b (/.f64 -2 (+.f64 c (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c)))))) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c))) c) (*.f64 2 a)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":64.916015625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[14,7959,50,0.104053084],[13,7903,50,0.092650542],[12,7106,50,0.081410417],[11,6993,50,0.069058125],[10,6560,50,0.058938500000000005],[9,5629,50,0.048339959],[8,4346,50,0.036340292],[7,2871,50,0.0249265],[6,1488,50,0.013334833],[5,775,50,0.0063205],[4,435,50,0.0030816669999999997],[3,240,50,0.001490792],[2,99,52,0.000661292],[1,44,52,0.000263292],[0,22,58,8.9292e-5]],"inputs":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))"]],"method":["egg-herbie"],"outputs":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 c (*.f64 4 a)))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 c (*.f64 4 a))))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b) (*.f64 2 a)))","(if (>=.f64 b 0) (*.f64 c (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (/.f64 c -1/2) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b) (*.f64 2 a)))","(if (>=.f64 b 0) (*.f64 c (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (*.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) a) -1/2))","(if (>=.f64 b 0) (*.f64 c (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (/.f64 -1/2 a)))","(if (>=.f64 b 0) (*.f64 c (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4)))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4))) b) (/.f64 1/2 a)))"]],"stop":[["node limit",1]],"time":116.903076171875,"type":"simplify"},{"compiler":[[75,46]],"time":0.7978515625,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (*.f64 c (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4)))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4))) b) (/.f64 1/2 a)))","fresh",20.094582924868384],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","next",19.99730401355955]],"compiler":[[37,23],[41,26],[37,23],[41,26]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[19.951364840767802],"time":2.1162109375,"type":"prune"},{"compiler":[[148,79]],"locations":[["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))",1.2205830145978995,true],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))",1.40625,true],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))",2.2813384479613337,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))",21.247553254343114,true]],"time":27.915771484375,"type":"localize"},{"count":[[4,84]],"series":[["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","-inf",0.333984375],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","inf",0.865966796875],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","0",0.22900390625],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","-inf",0.3330078125],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","inf",0.402099609375],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","0",0.23583984375],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","-inf",0.28515625],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","inf",0.23388671875],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","0",0.302978515625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","c","-inf",0.44287109375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","c","inf",0.287109375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","c","0",0.300048828125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","a","-inf",0.201904296875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","a","inf",0.300048828125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","a","0",0.3271484375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","b","-inf",0.16796875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","b","inf",0.26220703125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","b","0",0.302001953125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","-inf",0.35791015625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","inf",0.405029296875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","0",0.3720703125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","-inf",0.27392578125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","inf",0.321044921875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","0",0.390869140625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","-inf",0.216064453125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","inf",0.447021484375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","0",0.268798828125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","c","-inf",0.56494140625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","c","inf",0.89208984375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","c","0",0.386962890625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","a","-inf",0.4208984375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","a","inf",0.595947265625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","a","0",0.405029296875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","b","-inf",0.320068359375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","b","inf",0.48095703125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","b","0",0.948974609375]],"time":14.403076171875,"type":"series"},{"count":[[4,416]],"egraph":[[2,4360,53,0.030178917],[1,301,56,0.0060465],[0,13,68,0.000349041]],"inputs":[["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) 1/2) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 4 c)) 2))) (hypot.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 b 6) (*.f64 64 (pow.f64 (*.f64 a c) 3)))) (sqrt.f64 (fma.f64 (*.f64 a (*.f64 4 c)) (fma.f64 a (*.f64 4 c) (*.f64 b b)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (sqrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 b b) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (/.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (pow.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2) (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (/.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c)))) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))) (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4))))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2)) (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2)) (+.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) (fma.f64 b b (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c)))) (neg.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) (*.f64 b b)) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) 1) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2)) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) 1/2) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 1/2) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (*.f64 a -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (cbrt.f64 (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 6) (*.f64 64 (pow.f64 (*.f64 a c) 3))) (/.f64 1 (fma.f64 (*.f64 a (*.f64 4 c)) (fma.f64 a (*.f64 4 c) (*.f64 b b)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 4 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 4 c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 a (*.f64 4 c)) (fma.f64 a (*.f64 4 c) (*.f64 b b)) (pow.f64 b 4)) (-.f64 (pow.f64 b 6) (*.f64 64 (pow.f64 (*.f64 a c) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 4 c)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 6) (*.f64 64 (pow.f64 (*.f64 a c) 3))) (fma.f64 (*.f64 a (*.f64 4 c)) (fma.f64 a (*.f64 4 c) (*.f64 b b)) (pow.f64 b 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 4 c)) 2)) (fma.f64 a (*.f64 4 c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 6) (*.f64 64 (pow.f64 (*.f64 a c) 3)))) (neg.f64 (fma.f64 (*.f64 a (*.f64 4 c)) (fma.f64 a (*.f64 4 c) (*.f64 b b)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 4 c)) 2))) (neg.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 6) (pow.f64 (*.f64 c (*.f64 a -4)) 3)) (+.f64 (pow.f64 b 4) (-.f64 (*.f64 (*.f64 c (*.f64 a -4)) (*.f64 c (*.f64 a -4))) (*.f64 (*.f64 b b) (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 3)) (+.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 2) (-.f64 (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))) (*.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (*.f64 (*.f64 c (*.f64 a -4)) (*.f64 c (*.f64 a -4)))) (-.f64 (*.f64 b b) (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 2) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))) (-.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (pow.f64 (pow.f64 (exp.f64 a) 4) c)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 b) b) (+.f64 1 (expm1.f64 (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (+.f64 1 (expm1.f64 (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (exp.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 b) b) (/.f64 1 (pow.f64 (pow.f64 (exp.f64 a) 4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (/.f64 1 (pow.f64 (pow.f64 (exp.f64 a) 4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))) (exp.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))) (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 c (*.f64 a -4))) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 a) 4) c)) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 c (*.f64 a -4))) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 a) 4) c)) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (neg.f64 (-.f64 (*.f64 a (*.f64 4 c)) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (neg.f64 (-.f64 (*.f64 a (*.f64 4 c)) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 (neg.f64 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 a) (neg.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 a -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1 (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1 (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1 (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1 (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (neg.f64 (-.f64 (*.f64 a (*.f64 4 c)) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -4))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -4))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -4))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -4))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 c (*.f64 a -4))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 c (*.f64 a -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (neg.f64 (-.f64 (*.f64 a (*.f64 4 c)) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (neg.f64 (-.f64 (*.f64 a (*.f64 4 c)) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (-.f64 (*.f64 a (*.f64 4 c)) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (neg.f64 (-.f64 (*.f64 a (*.f64 4 c)) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 a (*.f64 4 c))) (neg.f64 (sqrt.f64 (*.f64 a (*.f64 4 c)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 64 (pow.f64 (*.f64 a c) 3))) (/.f64 1 (fma.f64 (*.f64 a (*.f64 4 c)) (fma.f64 a (*.f64 4 c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 64 (pow.f64 (*.f64 a c) 3))) (/.f64 1 (fma.f64 (*.f64 a (*.f64 4 c)) (fma.f64 a (*.f64 4 c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 64 (pow.f64 (*.f64 a c) 3))) (/.f64 1 (fma.f64 (*.f64 a (*.f64 4 c)) (fma.f64 a (*.f64 4 c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 64 (pow.f64 (*.f64 a c) 3))) (/.f64 1 (fma.f64 (*.f64 a (*.f64 4 c)) (fma.f64 a (*.f64 4 c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 64 (pow.f64 (*.f64 a c) 3))) (/.f64 1 (fma.f64 (*.f64 a (*.f64 4 c)) (fma.f64 a (*.f64 4 c) (*.f64 b b)) (pow.f64 b 4))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 64 (pow.f64 (*.f64 a c) 3))) (/.f64 1 (fma.f64 (*.f64 a (*.f64 4 c)) (fma.f64 a (*.f64 4 c) (*.f64 b b)) (pow.f64 b 4))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (neg.f64 (-.f64 (*.f64 a (*.f64 4 c)) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 a (*.f64 4 c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 4 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 4 c) (*.f64 b b))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 4 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 4 c) (*.f64 b b))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 4 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 4 c) (*.f64 b b))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 4 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 4 c) (*.f64 b b))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 4 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 4 c) (*.f64 b b))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 a (*.f64 4 c)) 2)) (/.f64 1 (fma.f64 a (*.f64 4 c) (*.f64 b b))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a -4) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (-.f64 (*.f64 a (*.f64 4 c)) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 c (*.f64 a -4))) (cbrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (*.f64 c (*.f64 a -4))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))) (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) (sqrt.f64 (*.f64 c (*.f64 a -4))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))) (sqrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))) (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 a (*.f64 4 c)))) (sqrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (-.f64 b (sqrt.f64 (*.f64 a (*.f64 4 c)))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a -4) 1) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a -4) (sqrt.f64 c)) (sqrt.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (-.f64 (*.f64 a (*.f64 4 c)) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a (*.f64 4 c)))) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2) (*.f64 a (*.f64 4 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))) (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4))))) (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2)) (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 3)) (fma.f64 b b (-.f64 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (*.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (-.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) 1) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (pow.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2)) (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (exp.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) (neg.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4)))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4)))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (sqrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4)) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))) (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))) (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))) (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 b b (*.f64 c (*.f64 a -4))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 a (*.f64 4 c)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))))"]],"rules":[["egg-rr",121],["egg-rr",194],["egg-rr",69],["egg-rr",32]],"stop":[["node limit",1]],"time":83.173095703125,"type":"rewrite"},{"count":[[500,455]],"egraph":[[3,6589,1666,0.023488125999999998],[2,1058,1696,0.010016417],[1,294,1819,0.002199292],[0,90,1902,0.000514333]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) b)","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3))))))","(+.f64 b (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))))","(+.f64 (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -2 (/.f64 (*.f64 -2 c) (/.f64 b (/.f64 a b))))) (fma.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) b))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (neg.f64 b))","(-.f64 (*.f64 (/.f64 c (/.f64 b a)) 2) b)","(-.f64 (/.f64 (*.f64 c 2) (/.f64 b a)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b)))","(-.f64 (*.f64 2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)))) b)","(fma.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (neg.f64 b))","(neg.f64 (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (-.f64 (fma.f64 2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (/.f64 (*.f64 (pow.f64 c 3) 4) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))) b))","(fma.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4 (fma.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (neg.f64 b)))","(fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (fma.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4 (neg.f64 b)))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) b)","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3))))))","(+.f64 b (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))))","(+.f64 (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -2 (/.f64 (*.f64 -2 c) (/.f64 b (/.f64 a b))))) (fma.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) b))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) b)","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3))))))","(+.f64 b (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))))","(+.f64 (*.f64 (*.f64 a (/.f64 c b)) (+.f64 -2 (/.f64 (*.f64 -2 c) (/.f64 b (/.f64 a b))))) (fma.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) b))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 (*.f64 c -2) (/.f64 b a))","(*.f64 (/.f64 -2 b) (*.f64 c a))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))))","(*.f64 (*.f64 a (/.f64 c b)) (+.f64 -2 (/.f64 (*.f64 -2 c) (/.f64 b (/.f64 a b)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5)))))","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (pow.f64 b 7)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))))","(+.f64 (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -10) (pow.f64 b 7)))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 b -2 (*.f64 (/.f64 c (/.f64 b a)) 2))","(fma.f64 b -2 (/.f64 (*.f64 c 2) (/.f64 b a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (*.f64 2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)))))","(fma.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 b -2))","(fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 b -2))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (fma.f64 2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (/.f64 (*.f64 (pow.f64 c 3) 4) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4) (fma.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 b -2)))","(+.f64 (*.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4) (fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 b -2)))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 (*.f64 c -2) (/.f64 b a))","(*.f64 (/.f64 -2 b) (*.f64 c a))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))))","(*.f64 (*.f64 a (/.f64 c b)) (+.f64 -2 (/.f64 (*.f64 -2 c) (/.f64 b (/.f64 a b)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5)))))","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (/.f64 (pow.f64 a 4) (/.f64 b (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 c c)) (pow.f64 b 3)) 2)))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 a 4) b) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6))))) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3))))))","(fma.f64 -1/2 (*.f64 (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20) (/.f64 (pow.f64 a 4) b)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))))","(fma.f64 -1/2 (*.f64 (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20) (/.f64 (pow.f64 a 4) b)) (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 (*.f64 c -2) (/.f64 b a))","(*.f64 (/.f64 -2 b) (*.f64 c a))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))))","(*.f64 (*.f64 a (/.f64 c b)) (+.f64 -2 (/.f64 (*.f64 -2 c) (/.f64 b (/.f64 a b)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5)))))","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (/.f64 (pow.f64 a 4) (/.f64 b (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 c c)) (pow.f64 b 3)) 2)))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 a 4) b) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6))))) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3))))))","(fma.f64 -1/2 (*.f64 (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20) (/.f64 (pow.f64 a 4) b)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))))","(fma.f64 -1/2 (*.f64 (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20) (/.f64 (pow.f64 a 4) b)) (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 b -2 (*.f64 (/.f64 c (/.f64 b a)) 2))","(fma.f64 b -2 (/.f64 (*.f64 c 2) (/.f64 b a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (*.f64 2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)))))","(fma.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 b -2))","(fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 b -2))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (fma.f64 2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (/.f64 (*.f64 (pow.f64 c 3) 4) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4) (fma.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 b -2)))","(+.f64 (*.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4) (fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 b -2)))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 (*.f64 c -2) (/.f64 b a))","(*.f64 (/.f64 -2 b) (*.f64 c a))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))))","(*.f64 (*.f64 a (/.f64 c b)) (+.f64 -2 (/.f64 (*.f64 -2 c) (/.f64 b (/.f64 a b)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5)))))","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (pow.f64 b 7)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))))","(+.f64 (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))))) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -10) (pow.f64 b 7)))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 b -2 (*.f64 (/.f64 c (/.f64 b a)) 2))","(fma.f64 b -2 (/.f64 (*.f64 c 2) (/.f64 b a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (*.f64 2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)))))","(fma.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 b -2))","(fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 b -2))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (fma.f64 2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (/.f64 (*.f64 (pow.f64 c 3) 4) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4) (fma.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 b -2)))","(+.f64 (*.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4) (fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 b -2)))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 b -2 (*.f64 (/.f64 c (/.f64 b a)) 2))","(fma.f64 b -2 (/.f64 (*.f64 c 2) (/.f64 b a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (*.f64 2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)))))","(fma.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 b -2))","(fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 b -2))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (fma.f64 2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (/.f64 (*.f64 (pow.f64 c 3) 4) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4) (fma.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 a (/.f64 c b))) (*.f64 b -2)))","(+.f64 (*.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4) (fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 b -2)))"]],"stop":[["node limit",1]],"time":58.212890625,"type":"simplify"},{"compiler":[[35896,21564]],"time":312.696044921875,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) 2))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",20.01832287534753],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (*.f64 2 a)))","next",20.00121026355955],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 2 a)))","fresh",20.804906056038796],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (*.f64 -1 b)) (*.f64 2 a)))","fresh",21.90994754937521],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))) (*.f64 2 a)))","fresh",26.027101605529126],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",20.01292901355955],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",23.26018213631582],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (fma.f64 -2 (*.f64 a (/.f64 c b)) b))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.692422364460107],["(if (>=.f64 b 0) (*.f64 c (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4)))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4))) b) (/.f64 1/2 a)))","fresh",20.094582924868384],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.822226627346318],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (*.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (*.f64 2 a)))","fresh",20.079041070559597],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))) (*.f64 2 a)))","fresh",20.01292901355955],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",24.422721554810963]],"compiler":[[43,29],[50,32],[44,30],[34,23],[42,28],[51,34],[43,29],[39,25],[37,23],[32,21],[54,36],[46,29],[41,28],[43,29],[50,32],[44,30],[34,23],[42,28],[51,34],[43,29],[39,25],[37,23],[32,21],[54,36],[46,29],[41,28]],"count":[[703,13]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[701,12],"picked":[1,0]}],"min-error":[4.827854492088913],"time":481.007080078125,"type":"prune"},{"compiler":[[249,141]],"locations":[["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))",2.2813384479613337,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))",21.247553254343114,false],["(sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))",21.247553254343114,true],["(fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))",56.82665001864325,true]],"time":51.27587890625,"type":"localize"},{"count":[[3,64]],"series":[["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))","a","-inf",0.531005859375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))","a","inf",0.44287109375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))","a","0",0.468994140625],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))","c","-inf",0.527099609375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))","c","inf",1.64111328125],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))","c","0",0.489013671875],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))","b","-inf",0.266845703125],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))","b","inf",0.995849609375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))","b","0",0.276123046875],["(sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))","a","-inf",1.227783203125],["(sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))","a","inf",0.6708984375],["(sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))","a","0",0.447998046875],["(sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))","c","-inf",0.81396484375],["(sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))","c","inf",0.699951171875],["(sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))","c","0",0.451904296875],["(sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))","b","-inf",0.348876953125],["(sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))","b","inf",0.4609375],["(sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))","b","0",0.7119140625],["(fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))","a","-inf",0.492919921875],["(fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))","a","inf",0.546875],["(fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))","a","0",0.552001953125],["(fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))","c","-inf",0.470947265625],["(fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))","c","inf",0.489990234375],["(fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))","c","0",0.64599609375]],"time":15.078125,"type":"series"},{"count":[[3,122]],"egraph":[[2,4036,69,0.030104918],[1,316,69,0.005793459000000001],[0,15,73,0.000408]],"inputs":[["(fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))","(sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))","(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c)))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (*.f64 a 4)) (*.f64 (*.f64 c a) -4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c a) -4) (*.f64 c (*.f64 a 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 c a) -4) 1) (*.f64 c (*.f64 a 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))) (pow.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))) 2) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))) (sqrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (*.f64 c a) -4) 3) (pow.f64 (*.f64 c (*.f64 a 4)) 3)) (+.f64 (pow.f64 (*.f64 (*.f64 c a) -4) 2) (-.f64 (pow.f64 (*.f64 c (*.f64 a 4)) 2) (*.f64 (*.f64 (*.f64 c a) -4) (*.f64 c (*.f64 a 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (*.f64 c a) -4) 2) (pow.f64 (*.f64 c (*.f64 a 4)) 2)) (-.f64 (*.f64 (*.f64 c a) -4) (*.f64 c (*.f64 a 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 a) (*.f64 c 4)) (exp.f64 (*.f64 (*.f64 c a) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 c (*.f64 a 4)))) (exp.f64 (*.f64 (*.f64 c a) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (*.f64 c a) -4)) (+.f64 1 (expm1.f64 (*.f64 c (*.f64 a 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) (cbrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 1/4) (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 b b) (-.f64 b (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) (/.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) (-.f64 b (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)) (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)) 2) (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)) (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 3/2)) (/.f64 1 (-.f64 (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) (*.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 b b) (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) (/.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) (*.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) (-.f64 (*.f64 b b) (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 3/2)) (-.f64 (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) (*.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 3/2)) (+.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) (-.f64 b (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 3/2))) (neg.f64 (-.f64 (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) (*.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) (neg.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) (*.f64 b b)) (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) (*.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) (-.f64 (*.f64 b b) (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) (cbrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 1/4) (pow.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4))))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 c (*.f64 a 4)))))))))))"]],"rules":[["egg-rr",65],["egg-rr",27],["egg-rr",30]],"stop":[["node limit",1]],"time":60.6259765625,"type":"rewrite"},{"count":[[186,187]],"egraph":[[2,2084,1267,0.013969249999999999],[1,567,1404,0.003969625],[0,174,1575,0.000834542]],"inputs":[["(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a))))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a))))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a))))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a))))","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c))))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c))))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c))))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c))))","(sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))) (pow.f64 b 2))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3))) (pow.f64 b 4))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))) (pow.f64 b 2)))))","(+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 5))) (pow.f64 b 6))) (+.f64 (sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3))) (pow.f64 b 4))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))) (pow.f64 b 2))))))","b","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) b)","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3))) b))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3) (pow.f64 b 5))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3))) b)))","(*.f64 -1 b)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (*.f64 -1 b))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 -1 b) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3) (pow.f64 b 5))) (+.f64 (*.f64 -1 b) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3))))))","b","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b)) b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b)) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 2) (pow.f64 c 2)) (pow.f64 b 3))) b))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b)) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 3) (pow.f64 c 3)) (pow.f64 b 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 2) (pow.f64 c 2)) (pow.f64 b 3))) b)))","b","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b)) b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b)) (+.f64 b (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 3)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b)) (+.f64 b (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 2)) (pow.f64 b 3))))))","(sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a)))) (*.f64 -1 b))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a)))) (+.f64 (*.f64 -1 b) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))) (pow.f64 b 2)))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3))) (pow.f64 b 4))) (+.f64 (*.f64 -1 b) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))) (pow.f64 b 2))))))","(*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3) (pow.f64 b 5))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 4)) (pow.f64 (*.f64 -1/8 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2)) 2)) (pow.f64 b 7))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3) (pow.f64 b 5))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3))))))","(*.f64 -2 b)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (*.f64 -2 b))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 -2 b) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3) (pow.f64 b 5))) (+.f64 (*.f64 -2 b) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3))))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 2) (pow.f64 c 2)) (pow.f64 b 3))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 3) (pow.f64 c 3)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 2) (pow.f64 c 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 3) (pow.f64 c 3)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b)) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 2) (pow.f64 c 2)) (pow.f64 b 3))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 2) (pow.f64 b 3))) 2) (*.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 4) (pow.f64 b 6))))) b)))))","(*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 2)) (pow.f64 b 3))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 3)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 3)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b)) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 2)) (pow.f64 b 3))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 4) (pow.f64 b 6))) (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 2) (pow.f64 b 3))) 2))) b)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (*.f64 a 0))","0","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (*.f64 a 0))","0","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (*.f64 a 0))","0","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (*.f64 a 0))","0","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (*.f64 a 0))","0","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (*.f64 a 0))","0","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (*.f64 a 0))","0","(*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a)))","(*.f64 c (*.f64 a 0))","0","(*.f64 -1 (*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a))))","(*.f64 c (*.f64 a 0))","0","(*.f64 -1 (*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a))))","(*.f64 c (*.f64 a 0))","0","(*.f64 -1 (*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a))))","(*.f64 c (*.f64 a 0))","0","(*.f64 -1 (*.f64 c (+.f64 (*.f64 4 a) (*.f64 -4 a))))","(*.f64 c (*.f64 a 0))","0","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 c (*.f64 a 0))","0","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 c (*.f64 a 0))","0","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 c (*.f64 a 0))","0","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 c (*.f64 a 0))","0","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 c (*.f64 a 0))","0","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 c (*.f64 a 0))","0","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 c (*.f64 a 0))","0","(*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c)))","(*.f64 c (*.f64 a 0))","0","(*.f64 -1 (*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c))))","(*.f64 c (*.f64 a 0))","0","(*.f64 -1 (*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c))))","(*.f64 c (*.f64 a 0))","0","(*.f64 -1 (*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c))))","(*.f64 c (*.f64 a 0))","0","(*.f64 -1 (*.f64 a (+.f64 (*.f64 4 c) (*.f64 -4 c))))","(*.f64 c (*.f64 a 0))","0","(sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))","(sqrt.f64 (*.f64 a (*.f64 c -4)))","(sqrt.f64 (*.f64 c (*.f64 a -4)))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))) (pow.f64 b 2))))","(+.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 a (*.f64 c -4)))) (*.f64 b b))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a -4)))) (*.f64 b b)) (sqrt.f64 (*.f64 c (*.f64 a -4))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (/.f64 -1/4 c) a)) (*.f64 b b)) (sqrt.f64 (*.f64 c (*.f64 a -4))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3))) (pow.f64 b 4))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))) (pow.f64 b 2)))))","(+.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 a (*.f64 c -4)) 3))) (pow.f64 b 4)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 a (*.f64 c -4)))) (*.f64 b b)))))","(+.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (*.f64 c a) 3) -64))) (pow.f64 b 4)) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a -4)))) (*.f64 (*.f64 b b) 1/2))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (/.f64 -1/4 c) a)) (*.f64 b b)) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (*.f64 c a) 3)) -64)) (pow.f64 b 4)) (sqrt.f64 (*.f64 c (*.f64 a -4)))))","(+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 5))) (pow.f64 b 6))) (+.f64 (sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3))) (pow.f64 b 4))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))) (pow.f64 b 2))))))","(fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 a (*.f64 c -4)) 5))) (pow.f64 b 6)) (+.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 a (*.f64 c -4)) 3))) (pow.f64 b 4)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 a (*.f64 c -4)))) (*.f64 b b))))))","(+.f64 (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (*.f64 c a) 3) -64))) (pow.f64 b 4)) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a -4)))) (*.f64 (*.f64 b b) 1/2))) (fma.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 c (*.f64 a -4)) 5)))) (pow.f64 b 6) (sqrt.f64 (*.f64 c (*.f64 a -4)))))","(fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 c (*.f64 a -4)) 5))) (*.f64 (pow.f64 b 6) 1/16) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (/.f64 -1/4 c) a)) (*.f64 b b)) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (*.f64 c a) 3)) -64)) (pow.f64 b 4)) (sqrt.f64 (*.f64 c (*.f64 a -4))))))","b","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) b)","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) b)","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) b)","(+.f64 b (/.f64 -2 (/.f64 b (*.f64 c a))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3))) b))","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)) b))","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) b))","(+.f64 b (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3) (pow.f64 b 5))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3))) b)))","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 1/16 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)) b)))","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) b)))","(+.f64 b (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (*.f64 -1 b))","(fma.f64 -1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (neg.f64 b))","(-.f64 (*.f64 (/.f64 c (/.f64 b (*.f64 a -4))) -1/2) b)","(-.f64 (/.f64 2 (/.f64 b (*.f64 c a))) b)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 -1 b) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3)))))","(fma.f64 -1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 -1 b (*.f64 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)) 1/8)))","(fma.f64 (/.f64 c (/.f64 b (*.f64 a -4))) -1/2 (-.f64 (*.f64 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) 1/8) b))","(fma.f64 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) 1/8 (-.f64 (/.f64 2 (/.f64 b (*.f64 c a))) b))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3) (pow.f64 b 5))) (+.f64 (*.f64 -1 b) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3))))))","(fma.f64 -1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 -1/16 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3) (pow.f64 b 5)) (fma.f64 -1 b (*.f64 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)) 1/8))))","(fma.f64 (/.f64 c (/.f64 b (*.f64 a -4))) -1/2 (fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) -1/16 (-.f64 (*.f64 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) 1/8) b)))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) -1/16 (fma.f64 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) 1/8 (-.f64 (/.f64 2 (/.f64 b (*.f64 c a))) b)))","b","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b)) b)","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) b)","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) b)","(+.f64 b (/.f64 -2 (/.f64 b (*.f64 c a))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b)) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 2) (pow.f64 c 2)) (pow.f64 b 3))) b))","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)) b))","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) b))","(+.f64 b (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b)) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 3) (pow.f64 c 3)) (pow.f64 b 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 2) (pow.f64 c 2)) (pow.f64 b 3))) b)))","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 1/16 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)) b)))","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) b)))","(+.f64 b (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a))))))","b","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b)) b)","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) b)","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) b)","(+.f64 b (/.f64 -2 (/.f64 b (*.f64 c a))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b)) (+.f64 b (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 2)) (pow.f64 b 3)))))","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)) b))","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) b))","(+.f64 b (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 3)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b)) (+.f64 b (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 2)) (pow.f64 b 3))))))","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 1/16 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)) b)))","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) b)))","(+.f64 b (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))","(sqrt.f64 (*.f64 a (*.f64 c -4)))","(sqrt.f64 (*.f64 c (*.f64 a -4)))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a)))) (*.f64 -1 b))","(+.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) (neg.f64 b))","(-.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)","(+.f64 (sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a)))) (+.f64 (*.f64 -1 b) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))) (pow.f64 b 2)))))","(+.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) (fma.f64 -1 b (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 a (*.f64 c -4)))) (*.f64 b b)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a -4)))) (*.f64 (*.f64 b b) 1/2)) (-.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))","(-.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (/.f64 -1/4 c) a)) (*.f64 b b)) (sqrt.f64 (*.f64 c (*.f64 a -4)))) b)","(+.f64 (sqrt.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3))) (pow.f64 b 4))) (+.f64 (*.f64 -1 b) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))))) (pow.f64 b 2))))))","(+.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 a (*.f64 c -4)) 3))) (pow.f64 b 4)) (fma.f64 -1 b (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 a (*.f64 c -4)))) (*.f64 b b))))))","(+.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (*.f64 c a) 3) -64))) (pow.f64 b 4)) (-.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a -4)))) (*.f64 (*.f64 b b) 1/2)) b)))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (*.f64 c a) 3)) -64)) (pow.f64 b 4)) (-.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (/.f64 -1/4 c) a)) (*.f64 b b)) (sqrt.f64 (*.f64 c (*.f64 a -4)))) b))","(*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b))","(*.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))))","(*.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))))","(/.f64 -2 (/.f64 b (*.f64 c a)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3))))","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3))))","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3))))","(fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3) (pow.f64 b 5))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3)))))","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 1/16 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3) (pow.f64 b 5)) (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)))))","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)))))","(fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 4)) (pow.f64 (*.f64 -1/8 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2)) 2)) (pow.f64 b 7))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3) (pow.f64 b 5))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3))))))","(fma.f64 -1/2 (/.f64 (fma.f64 1/16 (pow.f64 (*.f64 a (*.f64 c -4)) 4) (pow.f64 (*.f64 -1/8 (pow.f64 (*.f64 a (*.f64 c -4)) 2)) 2)) (pow.f64 b 7)) (fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 1/16 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3) (pow.f64 b 5)) (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3))))))","(fma.f64 -1/2 (/.f64 (fma.f64 1/16 (pow.f64 (*.f64 c (*.f64 a -4)) 4) (*.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 4) 1/64)) (pow.f64 b 7)) (fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5))))))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 4) 5/64) (pow.f64 b 7)) (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (*.f64 -2 b))","(fma.f64 -1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (*.f64 b -2))","(fma.f64 b -2 (*.f64 (/.f64 c (/.f64 b (*.f64 a -4))) -1/2))","(fma.f64 b -2 (/.f64 2 (/.f64 b (*.f64 c a))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 -2 b) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3)))))","(fma.f64 -1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 -2 b (*.f64 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)) 1/8)))","(fma.f64 (/.f64 c (/.f64 b (*.f64 a -4))) -1/2 (fma.f64 b -2 (*.f64 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) 1/8)))","(fma.f64 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) 1/8 (fma.f64 b -2 (/.f64 2 (/.f64 b (*.f64 c a)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) b)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 3) (pow.f64 b 5))) (+.f64 (*.f64 -2 b) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 (*.f64 c a)) (*.f64 4 (*.f64 c a))) 2) (pow.f64 b 3))))))","(fma.f64 -1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 -1/16 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3) (pow.f64 b 5)) (fma.f64 -2 b (*.f64 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)) 1/8))))","(fma.f64 (/.f64 c (/.f64 b (*.f64 a -4))) -1/2 (fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) -1/16 (fma.f64 b -2 (*.f64 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) 1/8))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) -1/16 (fma.f64 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) 1/8 (fma.f64 b -2 (/.f64 2 (/.f64 b (*.f64 c a))))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b))","(*.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))))","(*.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))))","(/.f64 -2 (/.f64 b (*.f64 c a)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 2) (pow.f64 c 2)) (pow.f64 b 3))))","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3))))","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3))))","(fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 3) (pow.f64 c 3)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 2) (pow.f64 c 2)) (pow.f64 b 3)))))","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 1/16 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3) (pow.f64 b 5)) (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)))))","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)))))","(fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 3) (pow.f64 c 3)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) c) b)) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 2) (pow.f64 c 2)) (pow.f64 b 3))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 2) (pow.f64 b 3))) 2) (*.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 4 a) (*.f64 -8 a)) 4) (pow.f64 b 6))))) b)))))","(fma.f64 1/16 (/.f64 (pow.f64 (*.f64 a -4) 3) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (fma.f64 1/2 (/.f64 (*.f64 a -4) (/.f64 b c)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 a -4) 2) (/.f64 (pow.f64 b 3) (*.f64 c c))) (*.f64 -1/2 (/.f64 (pow.f64 c 4) (/.f64 b (+.f64 (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 a -4) 2) (pow.f64 b 3))) 2) (*.f64 1/16 (/.f64 (pow.f64 (*.f64 a -4) 4) (pow.f64 b 6))))))))))","(fma.f64 1/16 (*.f64 (/.f64 (*.f64 (pow.f64 a 3) -64) (pow.f64 b 5)) (pow.f64 c 3)) (fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 c 4) b) (fma.f64 1/16 (/.f64 (pow.f64 (*.f64 a -4) 4) (pow.f64 b 6)) (*.f64 (/.f64 (pow.f64 (*.f64 a -4) 4) (pow.f64 b 6)) 1/64))) (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3))))))","(fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 c 4) b) (*.f64 (/.f64 (*.f64 (pow.f64 a 4) 256) (pow.f64 b 6)) 5/64)) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b))","(*.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))))","(*.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))))","(/.f64 -2 (/.f64 b (*.f64 c a)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 2)) (pow.f64 b 3))))","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3))))","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3))))","(fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 3)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 2)) (pow.f64 b 3)))))","(fma.f64 1/2 (/.f64 a (/.f64 b (*.f64 c -4))) (fma.f64 1/16 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3) (pow.f64 b 5)) (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 2) (pow.f64 b 3)))))","(fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)))))","(fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 3)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -8 c) (*.f64 4 c))) b)) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 2)) (pow.f64 b 3))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 4) (pow.f64 b 6))) (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -8 c) (*.f64 4 c)) 2) (pow.f64 b 3))) 2))) b)))))","(fma.f64 1/16 (/.f64 (pow.f64 (*.f64 a -4) 3) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (fma.f64 1/2 (/.f64 (*.f64 a -4) (/.f64 b c)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 a -4) 2) (/.f64 (pow.f64 b 3) (*.f64 c c))) (*.f64 -1/2 (/.f64 (pow.f64 c 4) (/.f64 b (+.f64 (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 a -4) 2) (pow.f64 b 3))) 2) (*.f64 1/16 (/.f64 (pow.f64 (*.f64 a -4) 4) (pow.f64 b 6))))))))))","(fma.f64 1/16 (*.f64 (/.f64 (*.f64 (pow.f64 a 3) -64) (pow.f64 b 5)) (pow.f64 c 3)) (fma.f64 1/2 (/.f64 c (/.f64 b (*.f64 a -4))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 c 4) b) (fma.f64 1/16 (/.f64 (pow.f64 (*.f64 a -4) 4) (pow.f64 b 6)) (*.f64 (/.f64 (pow.f64 (*.f64 a -4) 4) (pow.f64 b 6)) 1/64))) (*.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3))))))","(fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -64) (pow.f64 b 5)) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 2) (pow.f64 b 3)) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 c 4) b) (*.f64 (/.f64 (*.f64 (pow.f64 a 4) 256) (pow.f64 b 6)) 5/64)) (/.f64 -2 (/.f64 b (*.f64 c a))))))"]],"stop":[["node limit",1]],"time":38.177978515625,"type":"simplify"},{"compiler":[[13048,8000]],"time":115.0009765625,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) 2))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",20.01832287534753],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (*.f64 2 a)))","done",20.00121026355955],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (*.f64 -1 b)) (*.f64 2 a)))","fresh",21.90994754937521],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))) (*.f64 2 a)))","fresh",20.01292901355955],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))) (*.f64 2 a)))","fresh",26.027101605529126],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","next",20.01292901355955],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",23.26018213631582],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (fma.f64 -2 (*.f64 a (/.f64 c b)) b))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.692422364460107],["(if (>=.f64 b 0) (*.f64 c (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4)))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4))) b) (/.f64 1/2 a)))","fresh",20.094582924868384],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.822226627346318],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (*.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (*.f64 2 a)))","fresh",20.079041070559597],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 2 a)))","fresh",20.804906056038796],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",24.422721554810963]],"compiler":[[43,29],[50,32],[34,23],[46,29],[42,28],[51,34],[43,29],[39,25],[37,23],[32,21],[54,36],[44,30],[41,28],[43,29],[34,23],[46,29],[42,28],[51,34],[43,29],[39,25],[37,23],[32,21],[54,36],[44,30],[41,28]],"count":[[247,13]],"kept":[{"done":[0,0],"fresh":[12,11],"new":[234,1],"picked":[1,1]}],"min-error":[4.827854492088913],"time":82.66796875,"type":"prune"},{"compiler":[[248,150]],"locations":[["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))",2.2813384479613337,false],["(cbrt.f64 (*.f64 a (*.f64 4 c)))",11.611287519658568,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))",21.247553254343114,false],["(sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b)))",21.247553254343114,true]],"time":53.0390625,"type":"localize"},{"count":[[2,14]],"series":[["(cbrt.f64 (*.f64 a (*.f64 4 c)))","c","-inf",0.2900390625],["(cbrt.f64 (*.f64 a (*.f64 4 c)))","c","inf",0.266845703125],["(cbrt.f64 (*.f64 a (*.f64 4 c)))","c","0",0.27587890625],["(cbrt.f64 (*.f64 a (*.f64 4 c)))","a","-inf",0.291015625],["(cbrt.f64 (*.f64 a (*.f64 4 c)))","a","inf",0.263916015625],["(cbrt.f64 (*.f64 a (*.f64 4 c)))","a","0",0.283935546875],["(sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b)))","b","-inf",0.608154296875],["(sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b)))","b","inf",0.458984375],["(sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b)))","b","0",1.068115234375],["(sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b)))","c","-inf",0.451904296875],["(sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b)))","c","inf",0.47607421875],["(sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b)))","c","0",0.47998046875],["(sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b)))","a","-inf",0.926025390625],["(sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b)))","a","inf",0.513916015625],["(sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b)))","a","0",1.219970703125]],"time":8.123046875,"type":"series"},{"count":[[2,66]],"egraph":[[2,3211,21,0.025375999000000003],[1,284,24,0.004727416],[0,14,40,0.000367791]],"inputs":[["(sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b)))","(cbrt.f64 (*.f64 a (*.f64 4 c)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4))))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) 1/6) (cbrt.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b))) (pow.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) 1/4) (pow.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) 3) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) 1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b))) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a 4))) b)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a 4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3/2 (log.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)) 1/6)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/4 (log.f64 (fma.f64 a (*.f64 4 c) (*.f64 b b)))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (*.f64 c (*.f64 a 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 c (*.f64 a 4))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (*.f64 c (*.f64 a 4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c (*.f64 a 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 c (*.f64 a 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 4 c)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 4 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))) 2) (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c (*.f64 a 4)) 1/6) (pow.f64 (*.f64 c (*.f64 a 4)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a 4)) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 c (*.f64 a 4)) 4)))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 -1) (cbrt.f64 (*.f64 c (*.f64 a 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c (*.f64 a 4)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c (*.f64 a 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 c (*.f64 a 4))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (*.f64 a 4)) 2) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (*.f64 a 4)) 3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 c (*.f64 a 4))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (*.f64 a 4)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 c (*.f64 a 4))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (*.f64 c (*.f64 a 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (*.f64 c (*.f64 a 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 c (*.f64 a 4))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 c (*.f64 a 4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (*.f64 c (*.f64 a 4)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 a 4))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/6 (log.f64 (*.f64 c (*.f64 a 4)))) 2))))))"]],"rules":[["egg-rr",35],["egg-rr",31]],"stop":[["node limit",1]],"time":45.32080078125,"type":"rewrite"},{"count":[[80,81]],"egraph":[[5,6108,184,0.033981624],[4,4237,184,0.020346291000000002],[3,2473,184,0.010630916],[2,510,188,0.004076958],[1,151,197,0.001046333],[0,47,238,0.000246791]],"inputs":[["b","b","b","b","b","b","b","(+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -1 b))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -1 b))))"]],"method":["egg-herbie"],"outputs":[["b","b","b","b","b","b","b","(+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) 1)))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(fma.f64 -2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(fma.f64 -2 (*.f64 1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) 1))))","(fma.f64 -2 (/.f64 (*.f64 (*.f64 c a) (*.f64 c a)) (pow.f64 b 3)) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(+.f64 b (*.f64 -2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 (*.f64 c a) (*.f64 c a)) (pow.f64 b 3)))))","(+.f64 b (*.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","(fma.f64 -2 (*.f64 1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))) (+.f64 b (fma.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) 1) (*.f64 -4 (*.f64 1 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))))","(+.f64 (fma.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) (*.f64 -2 (*.f64 (/.f64 c b) a))) (fma.f64 -2 (/.f64 (*.f64 (*.f64 c a) (*.f64 c a)) (pow.f64 b 3)) b))","(+.f64 (fma.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) b) (*.f64 -2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 (*.f64 c a) (*.f64 c a)) (pow.f64 b 3)))))","(+.f64 (fma.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) b) (*.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(-.f64 b (fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (/.f64 (*.f64 (pow.f64 a 3) 4) (/.f64 (pow.f64 b 5) (pow.f64 c 3)))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -1 b))","(fma.f64 2 (*.f64 (/.f64 (*.f64 c a) b) 1) (neg.f64 b))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (neg.f64 b))","(fma.f64 (*.f64 a (/.f64 c b)) 2 (neg.f64 b))","(fma.f64 (/.f64 c b) (*.f64 a 2) (neg.f64 b))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -1 b)))","(fma.f64 2 (*.f64 (/.f64 (*.f64 c a) b) 1) (fma.f64 2 (*.f64 1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))) (neg.f64 b)))","(-.f64 (*.f64 2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 (*.f64 c a) (*.f64 c a)) (pow.f64 b 3)))) b)","(fma.f64 2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 (*.f64 c a) (*.f64 c a)) (pow.f64 b 3))) (neg.f64 b))","(fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (neg.f64 b))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -1 b))))","(fma.f64 2 (*.f64 (/.f64 (*.f64 c a) b) 1) (fma.f64 2 (*.f64 1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))) (fma.f64 4 (*.f64 1 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (neg.f64 b))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 2 (/.f64 (*.f64 (*.f64 c a) (*.f64 c a)) (pow.f64 b 3)) (fma.f64 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) 4 (neg.f64 b))))","(-.f64 (fma.f64 2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 (*.f64 c a) (*.f64 c a)) (pow.f64 b 3))) (*.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4)) b)","(-.f64 (fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (/.f64 (*.f64 (pow.f64 a 3) 4) (/.f64 (pow.f64 b 5) (pow.f64 c 3)))) b)","(-.f64 (fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (/.f64 (pow.f64 b 5) 4))) b)"]],"stop":[["node limit",1]],"time":48.711181640625,"type":"simplify"},{"compiler":[[13153,8301]],"time":119.031982421875,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",23.26018213631582],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.822226627346318],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) 2))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",20.01832287534753],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (*.f64 2 a)))","done",20.00121026355955],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (*.f64 -1 b)) (*.f64 2 a)))","fresh",21.90994754937521],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))) (*.f64 2 a)))","next",20.01292901355955],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (fma.f64 -2 (*.f64 a (/.f64 c b)) b))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.692422364460107],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))) (*.f64 2 a)))","fresh",26.027101605529126],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","done",20.01292901355955],["(if (>=.f64 b 0) (*.f64 c (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4)))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4))) b) (/.f64 1/2 a)))","fresh",20.094582924868384],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (*.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (*.f64 2 a)))","fresh",20.079041070559597],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 2 a)))","fresh",20.804906056038796],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",24.422721554810963]],"compiler":[[43,29],[32,21],[43,29],[50,32],[34,23],[46,29],[39,25],[42,28],[51,34],[37,23],[54,36],[44,30],[41,28],[43,29],[32,21],[43,29],[34,23],[46,29],[39,25],[42,28],[37,23],[54,36],[44,30],[41,28]],"count":[[264,13]],"kept":[{"done":[1,1],"fresh":[11,9],"new":[251,2],"picked":[1,1]}],"min-error":[4.827854492088913],"time":89.8359375,"type":"prune"},{"compiler":[[210,109]],"locations":[["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))",1.40625,false],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))",2.2813384479613337,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))",21.247553254343114,false],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))",21.247553254343114,true]],"time":40.989013671875,"type":"localize"},{"count":[[2,27]],"series":[["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","c","-inf",0.68017578125],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","c","inf",1.02197265625],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","c","0",0.60888671875],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","a","-inf",0.369140625],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","a","inf",0.41796875],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","a","0",0.452880859375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","b","-inf",0.255126953125],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","b","inf",0.430908203125],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","b","0",0.276123046875],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","b","-inf",0.215087890625],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","b","inf",0.222900390625],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","b","0",0.531005859375],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","c","-inf",1.864990234375],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","c","inf",0.544189453125],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","c","0",0.622802734375],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","a","-inf",0.47998046875],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","a","inf",0.744873046875],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","a","0",0.720947265625]],"time":10.7548828125,"type":"series"},{"count":[[2,95]],"egraph":[[2,3947,27,0.028320418],[1,316,33,0.0056113759999999995],[0,15,51,0.000393167]],"inputs":[["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (*.f64 (*.f64 (cbrt.f64 c) (sqrt.f64 (*.f64 a -4))) (pow.f64 c 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 (*.f64 a -4) c)) b)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 (*.f64 (cbrt.f64 c) (sqrt.f64 (*.f64 a -4))) (pow.f64 c 1/6)) b)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 b b) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) (/.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) 2) (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 (*.f64 a -4) c (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 b b) (fma.f64 (*.f64 a -4) c (*.f64 b b))) (/.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 (*.f64 a -4) c (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (-.f64 (*.f64 b b) (fma.f64 (*.f64 a -4) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2)) (fma.f64 b b (fma.f64 (*.f64 a -4) c (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2)) (+.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 (*.f64 a -4) c (*.f64 b b))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 (*.f64 a -4) c (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 (*.f64 a -4) c (*.f64 b b)))) (neg.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) (*.f64 b b)) (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 b b (fma.f64 (*.f64 a -4) c (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (-.f64 (*.f64 b b) (fma.f64 (*.f64 a -4) c (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))))"]],"rules":[["egg-rr",66],["egg-rr",29]],"stop":[["node limit",1]],"time":51.49609375,"type":"rewrite"},{"count":[[122,128]],"egraph":[[4,6881,627,0.032885875],[3,4777,651,0.0195105],[2,971,666,0.008403917],[1,286,728,0.002105375],[0,89,885,0.000464625]],"inputs":[["b","(+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","b","b","b","b","(+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -1 b))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -1 b))))","(*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 16 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (pow.f64 1 1/3))) (pow.f64 (*.f64 -2 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 1 1/3))) 2)) (pow.f64 b 7))) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))))","(*.f64 -2 b)","(+.f64 (*.f64 -2 b) (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 (*.f64 -2 b) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -2 b) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","(*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (/.f64 (pow.f64 c 2) (pow.f64 b 3)) (pow.f64 1 1/3))) 2) (*.f64 16 (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 1 1/3)))) (pow.f64 a 4)) b)) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 b (*.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1)))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 (/.f64 a b) c) b)","(fma.f64 -2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(fma.f64 -2 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1))))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))) b)","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b)","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","(fma.f64 -2 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (+.f64 b (fma.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))) 1))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) -4))))","(+.f64 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) -4)) (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b))","(-.f64 (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) 4)))","b","b","b","b","(+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 b (*.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1)))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 (/.f64 a b) c) b)","(fma.f64 -2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(fma.f64 -2 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1))))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))) b)","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b)","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","(fma.f64 -2 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (+.f64 b (fma.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))) 1))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) -4))))","(+.f64 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) -4)) (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b))","(-.f64 (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) 4)))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -1 b))","(fma.f64 2 (*.f64 (/.f64 c (/.f64 b a)) 1) (neg.f64 b))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (neg.f64 b))","(fma.f64 (*.f64 (/.f64 a b) c) 2 (neg.f64 b))","(-.f64 (*.f64 (/.f64 c b) (*.f64 a 2)) b)","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -1 b)))","(fma.f64 2 (*.f64 (/.f64 c (/.f64 b a)) 1) (fma.f64 2 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (neg.f64 b)))","(fma.f64 2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a))) (neg.f64 b))","(fma.f64 2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))) (neg.f64 b))","(neg.f64 (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -1 b))))","(fma.f64 2 (*.f64 (/.f64 c (/.f64 b a)) 1) (fma.f64 2 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (fma.f64 4 (*.f64 1 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))) (neg.f64 b))))","(fma.f64 2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a))) (-.f64 (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) b))","(-.f64 (fma.f64 2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) 4))) b)","(-.f64 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) 4)) (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b))","(-.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) 4)) (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) b))","(*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))","(*.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(*.f64 -2 (*.f64 (/.f64 a b) c))","(*.f64 (/.f64 c b) (*.f64 a -2))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(*.f64 -2 (+.f64 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (*.f64 (/.f64 c (/.f64 b a)) 1)))","(*.f64 -2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a))))","(*.f64 -2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))))","(*.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(fma.f64 -2 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (fma.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))) 1)))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) -4)))","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) -4)))","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) -4)))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 16 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (pow.f64 1 1/3))) (pow.f64 (*.f64 -2 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 1 1/3))) 2)) (pow.f64 b 7))) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))))","(fma.f64 -2 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 1 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (pow.f64 (*.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 1) 2)) (pow.f64 b 7)) (fma.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))) 1))))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (pow.f64 b 7)) (fma.f64 -2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) -4))))","(+.f64 (*.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a)))))) (fma.f64 -4 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -10) (pow.f64 b 7))))","(+.f64 (*.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a)))))) (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -10) (pow.f64 b 7))))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 -2 b) (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(fma.f64 -2 b (*.f64 (*.f64 (/.f64 c (/.f64 b a)) 1) 2))","(fma.f64 b -2 (*.f64 (/.f64 c (/.f64 b a)) 2))","(fma.f64 b -2 (*.f64 (*.f64 (/.f64 a b) c) 2))","(fma.f64 b -2 (*.f64 (/.f64 c b) (*.f64 a 2)))","(+.f64 (*.f64 -2 b) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3)))))","(fma.f64 -2 b (*.f64 2 (+.f64 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))))))","(fma.f64 2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a))) (*.f64 b -2))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c)))))","(fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 b -2))","(+.f64 (*.f64 -2 b) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","(fma.f64 -2 b (fma.f64 2 (*.f64 (/.f64 c (/.f64 b a)) 1) (fma.f64 2 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (*.f64 (*.f64 1 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))) 4))))","(fma.f64 b -2 (fma.f64 2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a))) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))","(fma.f64 b -2 (fma.f64 2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) 4))))","(fma.f64 b -2 (fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) 4))))","(fma.f64 b -2 (fma.f64 2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) 4))))","(*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))","(*.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(*.f64 -2 (*.f64 (/.f64 a b) c))","(*.f64 (/.f64 c b) (*.f64 a -2))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(*.f64 -2 (+.f64 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (*.f64 (/.f64 c (/.f64 b a)) 1)))","(*.f64 -2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a))))","(*.f64 -2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))))","(*.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(fma.f64 -2 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (fma.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))) 1)))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) -4)))","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) -4)))","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) -4)))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (/.f64 (pow.f64 c 2) (pow.f64 b 3)) (pow.f64 1 1/3))) 2) (*.f64 16 (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 1 1/3)))) (pow.f64 a 4)) b)) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))))","(fma.f64 -2 (*.f64 1 (/.f64 (*.f64 (*.f64 c c) (*.f64 a a)) (pow.f64 b 3))) (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (/.f64 (*.f64 (*.f64 c c) 1) (pow.f64 b 3))) 2) (*.f64 16 (*.f64 1 (/.f64 (pow.f64 c 4) (pow.f64 b 6))))) (/.f64 b (pow.f64 a 4))) (fma.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))) 1))))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))) b) (pow.f64 a 4)) (fma.f64 -4 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (pow.f64 a 3)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -1/2 (*.f64 (pow.f64 a 4) (/.f64 (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20) b)) (fma.f64 -2 (fma.f64 (/.f64 c b) a (/.f64 (*.f64 a a) (/.f64 (/.f64 (pow.f64 b 3) c) c))) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) -4))))","(fma.f64 -1/2 (*.f64 (pow.f64 a 4) (/.f64 (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20) b)) (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 5)) (*.f64 (pow.f64 a 3) -4))))","(fma.f64 -1/2 (*.f64 (pow.f64 a 4) (/.f64 (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20) b)) (fma.f64 -2 (*.f64 c (+.f64 (/.f64 a b) (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))))) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) -4))))"]],"stop":[["node limit",1]],"time":53.882080078125,"type":"simplify"},{"compiler":[[19760,11629]],"time":172.98388671875,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (*.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)))))) (*.f64 2 a)))","fresh",20.079041070559597],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",23.26018213631582],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.822226627346318],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (hypot.f64 b (*.f64 (*.f64 (cbrt.f64 c) (sqrt.f64 (*.f64 a -4))) (pow.f64 c 1/6)))) (*.f64 2 a)))","fresh",31.077222178926302],["(if (>=.f64 b 0) (*.f64 c (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4)))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4))) b) (/.f64 1/2 a)))","fresh",20.094582924868384],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) 2))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",20.01832287534753],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (*.f64 2 a)))","done",20.00121026355955],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (fma.f64 -2 (*.f64 a (/.f64 c b)) b))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.692422364460107],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","done",20.01292901355955],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a)))","fresh",21.90994754937521],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2))) (*.f64 2 a)))","fresh",26.027101605529126],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 2 a)))","fresh",20.804906056038796],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))) (*.f64 2 a)))","done",20.01292901355955],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",24.422721554810963]],"compiler":[[54,34],[43,29],[32,21],[44,30],[37,23],[43,29],[50,32],[39,25],[51,34],[33,21],[42,27],[44,30],[46,29],[41,28]],"count":[[387,14]],"kept":[{"done":[2,2],"fresh":[10,7],"new":[374,4],"picked":[1,1]}],"min-error":[4.171110547772418],"time":165.76806640625,"type":"prune"},{"accuracy":[4.961082096017046],"baseline":[19.99730401355955],"branch":[["a",14.771959839154343,5],["b",4.961082096017046,3],["c",18.6343943566379,3],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))",5.6691902709306605,5]],"compiler":[[4,3],[4,3],[4,3],[41,26],[815,472]],"count":[[21,3]],"inputs":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (*.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)))))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (hypot.f64 b (*.f64 (*.f64 (cbrt.f64 c) (sqrt.f64 (*.f64 a -4))) (pow.f64 c 1/6)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (fma.f64 -2 (*.f64 a (/.f64 c b)) b))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (*.f64 -1 b)) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 1/4) 2))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 a (*.f64 4 c))))))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (*.f64 -1 b)) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))) 3/2))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 4 c))) 2)) (cbrt.f64 (*.f64 a (*.f64 4 c))) (*.f64 b b))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (fma.f64 -2 (*.f64 a (/.f64 c b)) b))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (*.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (*.f64 c (/.f64 -2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4)))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c a) -4))) b) (/.f64 1/2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))"]],"link":["."],"name":["jeff quadratic root 2"],"oracle":[54.02720274999111],"outputs":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))"]],"time":109.844970703125,"times":[["a",32.33203125],["b",19.81982421875],["c",19.72314453125],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))",25.080078125]],"type":"regimes"},{"bstep":[[5.90599088767833e+105,3.6920366301231343e+109,139.8271484375],[-7.142240343968105e+108,-1.2931160815051085e+107,43.73486328125]],"compiler":[[33,22],[42,27],[33,22],[42,27],[33,22],[42,27],[33,22],[42,27],[33,22],[42,27],[33,22],[42,27],[33,22],[42,27],[33,22],[42,27],[42,27],[34,22],[42,27],[34,22],[42,27],[34,22],[42,27],[34,22],[42,27],[34,22],[42,27],[34,22],[42,27],[34,22],[43,28],[4,3]],"method":["binary-search","binary-search"],"time":183.9169921875,"type":"bsearch"},{"compiler":[[105,63]],"egraph":[[5,117,154,0.0007111239999999999],[4,113,154,0.000572416],[3,101,154,0.000430499],[2,81,154,0.000290416],[1,52,154,0.000168083],[0,34,158,6.5958e-5]],"inputs":[["(if (<=.f64 b -130000000000000005723571947544438292554521954144678769275685764875122985731145995914860441978030839927144448) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a))) (if (<=.f64 b 6000000000000000138808799035313392809073586289177287132633595691717291609982710620416248105857626077659136) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b -130000000000000005723571947544438292554521954144678769275685764875122985731145995914860441978030839927144448) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a))) (if (<=.f64 b 6000000000000000138808799035313392809073586289177287132633595691717291609982710620416248105857626077659136) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))))","(if (<=.f64 b -130000000000000005723571947544438292554521954144678769275685764875122985731145995914860441978030839927144448) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 c (*.f64 4 a)))))) (/.f64 (-.f64 (neg.f64 b) b) (*.f64 2 a))) (if (<=.f64 b 6000000000000000138808799035313392809073586289177287132633595691717291609982710620416248105857626077659136) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 c (*.f64 4 a)))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 c (*.f64 4 a))))) (*.f64 2 a))) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 c (*.f64 4 a))))) (*.f64 2 a)))))","(if (<=.f64 b -130000000000000005723571947544438292554521954144678769275685764875122985731145995914860441978030839927144448) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 c (*.f64 a -4)))))) (/.f64 (-.f64 (neg.f64 b) b) (*.f64 2 a))) (if (<=.f64 b 6000000000000000138808799035313392809073586289177287132633595691717291609982710620416248105857626077659136) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 c (*.f64 a -4)))))) (/.f64 (-.f64 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 c (*.f64 a -4)))) b) (*.f64 2 a))) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (-.f64 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 c (*.f64 a -4)))) b) (*.f64 2 a)))))"]],"stop":[["fuel",1],["saturated",1]],"time":11.323974609375,"type":"simplify"},{"time":0.02001953125,"type":"soundness"},{"compiler":[[105,63]],"remove-preprocessing":[[]],"time":25.39892578125,"type":"end"}]