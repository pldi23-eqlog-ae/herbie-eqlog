[{"compiler":[[15,9]],"method":["search"],"sampling":[[12,0.5733780198993372,0.42515785148998475,0.0014641286106780171],[11,0.4914668741994319,0.5070689971898901,0.0014641286106780171],[10,0.4212573207423702,0.5772785506469518,0.0014641286106780171],[9,0.2808382138282468,0.7176976575610752,0.0014641286106780171],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":84.748046875,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.52197265625,13],["body",512,"valid",10.84033203125,151],["body",1024,"valid",22.134521484375,218],["body",2048,"valid",11.99462890625,88],["body",256,"valid",314.26953125,7799]],"time":369.161865234375,"type":"sample"},{"compiler":[[14,8]],"egraph":[[0,3,3,2e-6],[7,806,36,0.006958501000000001],[6,806,36,0.005298126],[5,789,36,0.004439168],[4,755,36,0.003572626],[3,542,44,0.002662251],[2,204,44,0.001116626],[1,73,52,0.000324126],[0,24,64,9.1542e-5]],"inputs":[["0","1","2"],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 x y) y) x) z) x)","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 y x) x) y) z) y)","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 z y) y) z) x) z)","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 x z) z) x) y) x)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 x y) y) x) z) x)","(+.f64 x (+.f64 (+.f64 x (+.f64 y y)) (+.f64 x z)))","(+.f64 x (+.f64 (*.f64 2 (+.f64 x y)) z))","(+.f64 z (fma.f64 2 (+.f64 x y) x))","(+.f64 (fma.f64 y 2 z) (*.f64 3 x))","(fma.f64 3 x (fma.f64 y 2 z))","(fma.f64 x 3 (fma.f64 y 2 z))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 y x) x) y) z) y)","(+.f64 (+.f64 x (+.f64 x (+.f64 y y))) (+.f64 y z))","(+.f64 y (+.f64 (*.f64 2 (+.f64 x y)) z))","(+.f64 z (fma.f64 2 (+.f64 x y) y))","(+.f64 (fma.f64 x 2 z) (*.f64 3 y))","(fma.f64 x 2 (fma.f64 3 y z))","(fma.f64 x 2 (fma.f64 y 3 z))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 z y) y) z) x) z)","(+.f64 z (+.f64 x (+.f64 z (+.f64 y (+.f64 y z)))))","(+.f64 z (+.f64 x (*.f64 2 (+.f64 y z))))","(+.f64 x (fma.f64 2 (+.f64 y z) z))","(+.f64 x (fma.f64 (+.f64 y z) 2 z))","(fma.f64 y 2 (fma.f64 3 z x))","(fma.f64 y 2 (fma.f64 z 3 x))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 x z) z) x) y) x)","(+.f64 x (+.f64 y (+.f64 x (+.f64 x (+.f64 z z)))))","(+.f64 x (+.f64 y (*.f64 2 (+.f64 x z))))","(fma.f64 2 (+.f64 x z) (+.f64 x y))","(+.f64 (fma.f64 z 2 y) (*.f64 3 x))","(fma.f64 3 x (fma.f64 z 2 y))","(fma.f64 x 3 (fma.f64 z 2 y))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":29.282958984375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[6,330,9,0.002662375],[5,324,9,0.0020703329999999997],[4,298,9,0.0014754159999999998],[3,179,11,0.0009018749999999999],[2,67,11,0.0003695],[1,22,13,0.000129375],[0,9,16,4.2875e-5]],"inputs":[["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 x y) y) x) z) x)"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 x y) y) x) z) x)","(+.f64 x (+.f64 (+.f64 (+.f64 x y) (+.f64 x y)) z))","(+.f64 x (+.f64 (*.f64 2 (+.f64 x y)) z))","(+.f64 x (fma.f64 2 (+.f64 x y) z))","(+.f64 x (fma.f64 (+.f64 x y) 2 z))","(fma.f64 y 2 (fma.f64 3 x z))","(fma.f64 x 3 (fma.f64 y 2 z))"]],"stop":[["saturated",1]],"time":12.76416015625,"type":"simplify"},{"compiler":[[21,12]],"time":0.367919921875,"type":"eval"},{"alts":[["(fma.f64 x 3 (fma.f64 y 2 z))","next",0]],"compiler":[[10,7],[10,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0],"time":1.2109375,"type":"prune"},{"compiler":[[19,11]],"locations":[["(fma.f64 x 3 (fma.f64 y 2 z))",0.015625,true]],"time":4.757080078125,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 x 3 (fma.f64 y 2 z))","z","-inf",0.248046875],["(fma.f64 x 3 (fma.f64 y 2 z))","z","inf",0.33203125],["(fma.f64 x 3 (fma.f64 y 2 z))","z","0",0.25390625],["(fma.f64 x 3 (fma.f64 y 2 z))","y","-inf",0.3330078125],["(fma.f64 x 3 (fma.f64 y 2 z))","y","inf",0.26611328125],["(fma.f64 x 3 (fma.f64 y 2 z))","y","0",0.302001953125],["(fma.f64 x 3 (fma.f64 y 2 z))","x","-inf",0.3779296875],["(fma.f64 x 3 (fma.f64 y 2 z))","x","inf",0.296875],["(fma.f64 x 3 (fma.f64 y 2 z))","x","0",0.406005859375]],"time":2.927978515625,"type":"series"},{"count":[[1,22]],"egraph":[[2,1761,9,0.017407958],[1,161,9,0.002495458],[0,8,9,0.000239375]],"inputs":[["(fma.f64 x 3 (fma.f64 y 2 z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y 2 z) (*.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x 3) (fma.f64 y 2 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x 3) 1) (fma.f64 y 2 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 x 3) (*.f64 y 2)) z)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 x 3 (fma.f64 y 2 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x 3 (fma.f64 y 2 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x 3 (fma.f64 y 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x 3 (fma.f64 y 2 z))) (pow.f64 (cbrt.f64 (fma.f64 x 3 (fma.f64 y 2 z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x 3 (fma.f64 y 2 z))) 2) (cbrt.f64 (fma.f64 x 3 (fma.f64 y 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x 3 (fma.f64 y 2 z))) (sqrt.f64 (fma.f64 x 3 (fma.f64 y 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x 3) 3) (pow.f64 (fma.f64 y 2 z) 3)) (+.f64 (*.f64 (*.f64 x 3) (*.f64 x 3)) (-.f64 (pow.f64 (fma.f64 y 2 z) 2) (*.f64 (*.f64 x 3) (fma.f64 y 2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x 3) (*.f64 x 3)) (pow.f64 (fma.f64 y 2 z) 2)) (-.f64 (*.f64 x 3) (fma.f64 y 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x 3 (fma.f64 y 2 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x 3 (fma.f64 y 2 z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x 3 (fma.f64 y 2 z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x 3 (fma.f64 y 2 z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x 3 (fma.f64 y 2 z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x 3 (fma.f64 y 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x 3 (fma.f64 y 2 z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x 3 (fma.f64 y 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x 3 (fma.f64 y 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x 3 (fma.f64 y 2 z))))))))"]],"rules":[["egg-rr",22]],"stop":[["node limit",1]],"time":34.447998046875,"type":"rewrite"},{"count":[[58,33]],"egraph":[[3,34,279,0.00040895899999999997],[2,32,279,0.000301209],[1,23,279,0.000189542],[0,12,279,7.6417e-5]],"inputs":[["(+.f64 (*.f64 2 y) z)","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(*.f64 3 x)","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(*.f64 3 x)","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) z)","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(*.f64 2 y)","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(*.f64 2 y)","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (*.f64 2 y))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","z","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","z","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 2 y) z)","(fma.f64 2 y z)","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(*.f64 3 x)","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(*.f64 3 x)","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) z)","(fma.f64 3 x z)","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(*.f64 2 y)","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(*.f64 2 y)","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (*.f64 2 y))","(fma.f64 3 x (*.f64 2 y))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","z","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","z","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 2 y) z))","(fma.f64 3 x (fma.f64 2 y z))","(fma.f64 2 y (fma.f64 3 x z))"]],"stop":[["saturated",1]],"time":13.364990234375,"type":"simplify"},{"compiler":[[331,224]],"time":5.22509765625,"type":"eval"},{"alts":[["(fma.f64 x 3 (fma.f64 y 2 z))","done",0]],"compiler":[[10,7]],"count":[[34,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[33,0],"picked":[1,1]}],"min-error":[0],"time":4.556884765625,"type":"prune"},{"accuracy":[0],"baseline":[0.0],"branch":[["x",0,1],["y",0,1],["z",0,1],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 x y) y) x) z) x)",0,1]],"compiler":[[4,3],[4,3],[4,3],[14,8],[21,12]],"count":[[2,1]],"inputs":[["(fma.f64 x 3 (fma.f64 y 2 z))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 x y) y) x) z) x)"]],"link":["."],"name":["Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendInside from plot-0.2.3.4"],"oracle":[0.0234375],"outputs":[["(fma.f64 x 3 (fma.f64 y 2 z))"]],"time":14.080078125,"times":[["x",2.7509765625],["y",2.7470703125],["z",2.744140625],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 x y) y) x) z) x)",5.212890625]],"type":"regimes"},{"compiler":[[10,7]],"egraph":[[0,8,9,1.3333e-5]],"inputs":[["(fma.f64 x 3 (fma.f64 y 2 z))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 x 3 (fma.f64 y 2 z))"]],"stop":[["done",1],["saturated",1]],"time":8.01806640625,"type":"simplify"},{"time":0.012939453125,"type":"soundness"},{"compiler":[[10,7]],"remove-preprocessing":[[]],"time":8.447021484375,"type":"end"}]