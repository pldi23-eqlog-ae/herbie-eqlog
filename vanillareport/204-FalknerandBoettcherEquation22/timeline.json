[{"compiler":[[22,17]],"method":["search"],"sampling":[[12,0.4987797737121582,0.0009760856628417969,0.500244140625],[11,0.4978036880493164,0.0019521713256835938,0.500244140625],[10,0.4958515167236328,0.0039043426513671875,0.500244140625],[9,0.4919471740722656,0.007808685302734375,0.500244140625],[8,0.48413848876953125,0.01561737060546875,0.500244140625],[7,0.4685211181640625,0.0312347412109375,0.500244140625],[6,0.437286376953125,0.062469482421875,0.500244140625],[5,0.37481689453125,0.12493896484375,0.500244140625],[4,0.2498779296875,0.2498779296875,0.500244140625],[3,0.0,0.499755859375,0.500244140625],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":2.23193359375,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.36767578125,8],["body",256,"valid",416.08837890625,8256]],"time":424.406005859375,"type":"sample"},{"compiler":[[21,16]],"egraph":[[0,1,1,2.916e-6],[7,6455,24,0.039814376],[6,3710,24,0.023461792000000002],[5,1750,24,0.012501542000000001],[4,974,26,0.006168833],[3,321,26,0.002674333],[2,109,26,0.000903458],[1,42,28,0.00033608300000000004],[0,17,31,0.000128791]],"inputs":[["0"],["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))","(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (+.f64 2 (*.f64 -6 (*.f64 v v))))))","(/.f64 (/.f64 4/3 (*.f64 (PI.f64) (-.f64 1 (*.f64 v v)))) (sqrt.f64 (+.f64 2 (*.f64 (*.f64 v v) -6))))","(/.f64 (/.f64 (/.f64 4/3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (fma.f64 (*.f64 v v) -6 2)))","(/.f64 (/.f64 (/.f64 4/3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))","(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":66.81005859375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[7,6455,24,0.036806249],[6,3710,24,0.023302748999999998],[5,1750,24,0.013558166],[4,974,26,0.005627208],[3,321,26,0.002202375],[2,109,26,0.000769958],[1,42,28,0.000272833],[0,17,31,9.4916e-5]],"inputs":[["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))","(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (+.f64 2 (*.f64 -6 (*.f64 v v))))))","(/.f64 (/.f64 4/3 (*.f64 (PI.f64) (-.f64 1 (*.f64 v v)))) (sqrt.f64 (+.f64 2 (*.f64 (*.f64 v v) -6))))","(/.f64 (/.f64 (/.f64 4/3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (fma.f64 (*.f64 v v) -6 2)))","(/.f64 (/.f64 (/.f64 4/3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))","(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))"]],"stop":[["node limit",1]],"time":50.218017578125,"type":"simplify"},{"compiler":[[37,27]],"time":0.751953125,"type":"eval"},{"alts":[["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))","fresh",0.9921875],["(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))","next",0.01171875]],"compiler":[[21,16],[17,13],[21,16],[17,13]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.0078125],"time":1.97802734375,"type":"prune"},{"compiler":[[57,39]],"locations":[["(sqrt.f64 (fma.f64 v (*.f64 v -6) 2))",0.00390625,true],["(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))",0.00390625,true],["(/.f64 -4/3 (fma.f64 v v -1))",0.01953125,true],["(/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64))",0.99609375,true]],"time":16.5859375,"type":"localize"},{"count":[[4,32]],"series":[["(sqrt.f64 (fma.f64 v (*.f64 v -6) 2))","v","-inf",0.26904296875],["(sqrt.f64 (fma.f64 v (*.f64 v -6) 2))","v","inf",0.4140625],["(sqrt.f64 (fma.f64 v (*.f64 v -6) 2))","v","0",0.387939453125],["(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))","v","-inf",0.661865234375],["(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))","v","inf",1.455078125],["(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))","v","0",1.135009765625],["(/.f64 -4/3 (fma.f64 v v -1))","v","-inf",0.205078125],["(/.f64 -4/3 (fma.f64 v v -1))","v","inf",0.298095703125],["(/.f64 -4/3 (fma.f64 v v -1))","v","0",0.3271484375],["(/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64))","v","-inf",0.449951171875],["(/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64))","v","inf",0.626953125],["(/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64))","v","0",0.7412109375]],"time":7.2509765625,"type":"series"},{"count":[[4,148]],"egraph":[[2,3860,54,0.033493207000000004],[1,300,54,0.005689416],[0,14,54,0.000480333]],"inputs":[["(/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64))","(/.f64 -4/3 (fma.f64 v v -1))","(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))","(sqrt.f64 (fma.f64 v (*.f64 v -6) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4/3 (/.f64 (/.f64 1 (fma.f64 v v -1)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4/3 (/.f64 1 (*.f64 (fma.f64 v v -1) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4/3 (*.f64 (/.f64 1 (fma.f64 v v -1)) (/.f64 1 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (fma.f64 v v -1)) (/.f64 1 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2))) (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) 2) (*.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (/.f64 1 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (*.f64 (sqrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (/.f64 1 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4/3 (fma.f64 v v -1)) (/.f64 1 (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (PI.f64)) (/.f64 -4/3 (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) 2) 1) (/.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) 1) (/.f64 (sqrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (cbrt.f64 (pow.f64 (PI.f64) 2))) (/.f64 (/.f64 1 (fma.f64 v v -1)) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (PI.f64) 2))) (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) 2) (cbrt.f64 (pow.f64 (PI.f64) 2))) (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (cbrt.f64 (pow.f64 (PI.f64) 2))) (/.f64 (sqrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (sqrt.f64 (PI.f64))) (/.f64 (/.f64 1 (fma.f64 v v -1)) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) 2) (sqrt.f64 (PI.f64))) (/.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (PI.f64) -4/3) (fma.f64 v v -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 -4/3 (fma.f64 v v -1)) 3) (pow.f64 (PI.f64) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (fma.f64 v v -1) -3/4) (PI.f64)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -4/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (/.f64 (PI.f64) -4/3) (fma.f64 v v -1)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 -4/3 (fma.f64 v v -1)) 3) (pow.f64 (PI.f64) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -4/3 (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 -4/3 (fma.f64 v v -1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 -4/3 (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 -4/3 (fma.f64 v v -1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 -4/3 (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 -4/3 (fma.f64 v v -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4/3 (/.f64 1 (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (fma.f64 v v -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -4/3 (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (pow.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) 2) (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (sqrt.f64 (/.f64 -4/3 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 4/3 (/.f64 1 (neg.f64 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 v v -1)) -4/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -4/3 (fma.f64 v v -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 16/9 (pow.f64 (fma.f64 v v -1) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -4/3 (fma.f64 v v -1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 v v -1) -3/4) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (fma.f64 v v -1) -3/4) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 16/9 (pow.f64 (fma.f64 v v -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 -4/3 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 -4/3 (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 -4/3 (fma.f64 v v -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 -4/3 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 -4/3 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 -4/3 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 -4/3 (fma.f64 v v -1))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (fma.f64 v v -1)) (/.f64 1 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (fma.f64 v v -1)) (*.f64 (/.f64 1 (PI.f64)) (pow.f64 (fma.f64 v (*.f64 v -6) 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) (pow.f64 (fma.f64 v (*.f64 v -6) 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))) (cbrt.f64 (/.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2)) (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2)) (fma.f64 v (*.f64 v -6) 2))) (cbrt.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2))) (*.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (pow.f64 (fma.f64 v (*.f64 v -6) 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))) (sqrt.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (*.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (pow.f64 (fma.f64 v (*.f64 v -6) 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) (/.f64 1 (neg.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 v (*.f64 v -6) 2) -1/2) (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 (/.f64 1 (fma.f64 v v -1)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) 2) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 (cbrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 (sqrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) 1) (/.f64 (/.f64 1 (PI.f64)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2))) 1) (/.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) 1) (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 (/.f64 1 (PI.f64)) (cbrt.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) (cbrt.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) (cbrt.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/4)) (/.f64 (/.f64 1 (PI.f64)) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/4)) (/.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2))) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/4)) (/.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2)) (fma.f64 v (*.f64 v -6) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)) (*.f64 (/.f64 (PI.f64) -4/3) (fma.f64 v v -1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 3) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 3/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (/.f64 (PI.f64) -4/3) (fma.f64 v v -1)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 -4/3 (fma.f64 v v -1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)) (*.f64 (/.f64 (PI.f64) -4/3) (fma.f64 v v -1))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (*.f64 (fma.f64 v v -1) -3/4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) (neg.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2)) (fma.f64 v (*.f64 v -6) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 3) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 -4/3 (*.f64 (*.f64 (PI.f64) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (fma.f64 v v -1)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)) (cbrt.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/4) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 v (*.f64 v -6) 2) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 v (*.f64 v -6) 2) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 v (*.f64 v -6) 2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2))) 1))))))"]],"rules":[["egg-rr",25],["egg-rr",50],["egg-rr",27],["egg-rr",46]],"stop":[["node limit",1]],"time":66.695068359375,"type":"rewrite"},{"count":[[180,193]],"egraph":[[3,5418,899,0.028079373999999997],[2,1333,901,0.012819833],[1,408,948,0.003129458],[0,132,999,0.000646458]],"inputs":[["(/.f64 4/3 (PI.f64))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64))))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64))))))","(/.f64 -4/3 (*.f64 (pow.f64 v 2) (PI.f64)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64)))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 8) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64))))))))","(/.f64 -4/3 (*.f64 (pow.f64 v 2) (PI.f64)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64)))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 8) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64))))))))","4/3","(+.f64 4/3 (*.f64 4/3 (pow.f64 v 2)))","(+.f64 4/3 (+.f64 (*.f64 4/3 (pow.f64 v 4)) (*.f64 4/3 (pow.f64 v 2))))","(+.f64 4/3 (+.f64 (*.f64 4/3 (pow.f64 v 4)) (+.f64 (*.f64 4/3 (pow.f64 v 6)) (*.f64 4/3 (pow.f64 v 2)))))","(/.f64 -4/3 (pow.f64 v 2))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 4))) (*.f64 4/3 (/.f64 1 (pow.f64 v 2)))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 2))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 4))) (*.f64 4/3 (/.f64 1 (pow.f64 v 6))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 8))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 2))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 6))) (*.f64 4/3 (/.f64 1 (pow.f64 v 4)))))))","(/.f64 -4/3 (pow.f64 v 2))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 4))) (*.f64 4/3 (/.f64 1 (pow.f64 v 2)))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 2))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 4))) (*.f64 4/3 (/.f64 1 (pow.f64 v 6))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 8))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 2))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 6))) (*.f64 4/3 (/.f64 1 (pow.f64 v 4)))))))","(*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 2) (-.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 2) (-.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64))))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)))))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 6) (-.f64 (+.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 27/2 (*.f64 3/4 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2)))) (*.f64 (sqrt.f64 1/2) (PI.f64)))) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64)))))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 2) (-.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64))))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))))))","(sqrt.f64 2)","(+.f64 (sqrt.f64 2) (*.f64 -3 (/.f64 (pow.f64 v 2) (sqrt.f64 2))))","(+.f64 (sqrt.f64 2) (+.f64 (*.f64 -9/2 (/.f64 (pow.f64 v 4) (pow.f64 (sqrt.f64 2) 3))) (*.f64 -3 (/.f64 (pow.f64 v 2) (sqrt.f64 2)))))","(+.f64 (*.f64 -27/2 (/.f64 (pow.f64 v 6) (pow.f64 (sqrt.f64 2) 5))) (+.f64 (sqrt.f64 2) (+.f64 (*.f64 -9/2 (/.f64 (pow.f64 v 4) (pow.f64 (sqrt.f64 2) 3))) (*.f64 -3 (/.f64 (pow.f64 v 2) (sqrt.f64 2))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 4/3 (PI.f64))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64))))","(fma.f64 4/3 (/.f64 (*.f64 v v) (PI.f64)) (/.f64 4/3 (PI.f64)))","(fma.f64 4/3 (/.f64 v (/.f64 (PI.f64) v)) (/.f64 4/3 (PI.f64)))","(fma.f64 4/3 (*.f64 (/.f64 v (PI.f64)) v) (/.f64 4/3 (PI.f64)))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64)))))","(fma.f64 4/3 (/.f64 (*.f64 v v) (PI.f64)) (fma.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64)) (/.f64 4/3 (PI.f64))))","(fma.f64 4/3 (/.f64 v (/.f64 (PI.f64) v)) (fma.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64)) (/.f64 4/3 (PI.f64))))","(fma.f64 4/3 (+.f64 (/.f64 (*.f64 v v) (PI.f64)) (/.f64 (pow.f64 v 4) (PI.f64))) (/.f64 4/3 (PI.f64)))","(fma.f64 4/3 (+.f64 (*.f64 (/.f64 v (PI.f64)) v) (/.f64 (pow.f64 v 4) (PI.f64))) (/.f64 4/3 (PI.f64)))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64))))))","(fma.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64)) (fma.f64 4/3 (/.f64 (*.f64 v v) (PI.f64)) (fma.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64)) (/.f64 4/3 (PI.f64)))))","(fma.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64)) (fma.f64 4/3 (/.f64 v (/.f64 (PI.f64) v)) (fma.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64)) (/.f64 4/3 (PI.f64)))))","(fma.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64)) (fma.f64 4/3 (+.f64 (/.f64 (*.f64 v v) (PI.f64)) (/.f64 (pow.f64 v 4) (PI.f64))) (/.f64 4/3 (PI.f64))))","(fma.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64)) (fma.f64 4/3 (+.f64 (*.f64 (/.f64 v (PI.f64)) v) (/.f64 (pow.f64 v 4) (PI.f64))) (/.f64 4/3 (PI.f64))))","(/.f64 -4/3 (*.f64 (pow.f64 v 2) (PI.f64)))","(/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64))))))","(neg.f64 (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (*.f64 v v)))))","(+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4))))","(+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 (/.f64 -4/3 (PI.f64)) (pow.f64 v 4)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64)))))))","(neg.f64 (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6))))))","(-.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6)))))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4)))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6))))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 (/.f64 -4/3 (PI.f64)) (pow.f64 v 4))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 8) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64))))))))","(neg.f64 (+.f64 (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6))))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 8)))))","(-.f64 (-.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6))))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 8))))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4)))) (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 8)))))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 (/.f64 -4/3 (PI.f64)) (pow.f64 v 4))) (+.f64 (/.f64 (/.f64 -4/3 (pow.f64 v 8)) (PI.f64)) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6)))))","(/.f64 -4/3 (*.f64 (pow.f64 v 2) (PI.f64)))","(/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64))))))","(neg.f64 (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (*.f64 v v)))))","(+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4))))","(+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 (/.f64 -4/3 (PI.f64)) (pow.f64 v 4)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64)))))))","(neg.f64 (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6))))))","(-.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6)))))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4)))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6))))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 (/.f64 -4/3 (PI.f64)) (pow.f64 v 4))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 8) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64))))))))","(neg.f64 (+.f64 (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6))))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 8)))))","(-.f64 (-.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6))))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 8))))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4)))) (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 8)))))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 (/.f64 -4/3 (PI.f64)) (pow.f64 v 4))) (+.f64 (/.f64 (/.f64 -4/3 (pow.f64 v 8)) (PI.f64)) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6)))))","4/3","(+.f64 4/3 (*.f64 4/3 (pow.f64 v 2)))","(+.f64 4/3 (*.f64 4/3 (*.f64 v v)))","(fma.f64 4/3 (*.f64 v v) 4/3)","(*.f64 4/3 (fma.f64 v v 1))","(+.f64 4/3 (+.f64 (*.f64 4/3 (pow.f64 v 4)) (*.f64 4/3 (pow.f64 v 2))))","(+.f64 4/3 (*.f64 4/3 (+.f64 (pow.f64 v 4) (*.f64 v v))))","(fma.f64 4/3 (+.f64 (*.f64 v v) (pow.f64 v 4)) 4/3)","(fma.f64 4/3 (fma.f64 v v (pow.f64 v 4)) 4/3)","(+.f64 4/3 (+.f64 (*.f64 4/3 (pow.f64 v 4)) (+.f64 (*.f64 4/3 (pow.f64 v 6)) (*.f64 4/3 (pow.f64 v 2)))))","(+.f64 4/3 (fma.f64 4/3 (pow.f64 v 4) (*.f64 4/3 (+.f64 (pow.f64 v 6) (*.f64 v v)))))","(+.f64 4/3 (*.f64 4/3 (+.f64 (pow.f64 v 4) (+.f64 (*.f64 v v) (pow.f64 v 6)))))","(fma.f64 4/3 (+.f64 (pow.f64 v 4) (fma.f64 v v (pow.f64 v 6))) 4/3)","(/.f64 -4/3 (pow.f64 v 2))","(/.f64 -4/3 (*.f64 v v))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 4))) (*.f64 4/3 (/.f64 1 (pow.f64 v 2)))))","(neg.f64 (+.f64 (/.f64 4/3 (pow.f64 v 4)) (/.f64 4/3 (*.f64 v v))))","(+.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 -4/3 (pow.f64 v 4)))","(-.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 4/3 (pow.f64 v 4)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 2))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 4))) (*.f64 4/3 (/.f64 1 (pow.f64 v 6))))))","(neg.f64 (+.f64 (/.f64 4/3 (*.f64 v v)) (+.f64 (/.f64 4/3 (pow.f64 v 4)) (/.f64 4/3 (pow.f64 v 6)))))","(-.f64 (+.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 -4/3 (pow.f64 v 4))) (/.f64 4/3 (pow.f64 v 6)))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 -4/3 (pow.f64 v 4))) (/.f64 -4/3 (pow.f64 v 6)))","(+.f64 (-.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 4/3 (pow.f64 v 4))) (/.f64 -4/3 (pow.f64 v 6)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 8))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 2))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 6))) (*.f64 4/3 (/.f64 1 (pow.f64 v 4)))))))","(neg.f64 (+.f64 (/.f64 4/3 (pow.f64 v 8)) (+.f64 (/.f64 4/3 (*.f64 v v)) (+.f64 (/.f64 4/3 (pow.f64 v 4)) (/.f64 4/3 (pow.f64 v 6))))))","(+.f64 (/.f64 -4/3 (pow.f64 v 8)) (-.f64 (+.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 -4/3 (pow.f64 v 4))) (/.f64 4/3 (pow.f64 v 6))))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 -4/3 (pow.f64 v 4))) (-.f64 (/.f64 -4/3 (pow.f64 v 6)) (/.f64 4/3 (pow.f64 v 8))))","(+.f64 (-.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 4/3 (pow.f64 v 4))) (+.f64 (/.f64 -4/3 (pow.f64 v 8)) (/.f64 -4/3 (pow.f64 v 6))))","(/.f64 -4/3 (pow.f64 v 2))","(/.f64 -4/3 (*.f64 v v))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 4))) (*.f64 4/3 (/.f64 1 (pow.f64 v 2)))))","(neg.f64 (+.f64 (/.f64 4/3 (pow.f64 v 4)) (/.f64 4/3 (*.f64 v v))))","(+.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 -4/3 (pow.f64 v 4)))","(-.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 4/3 (pow.f64 v 4)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 2))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 4))) (*.f64 4/3 (/.f64 1 (pow.f64 v 6))))))","(neg.f64 (+.f64 (/.f64 4/3 (*.f64 v v)) (+.f64 (/.f64 4/3 (pow.f64 v 4)) (/.f64 4/3 (pow.f64 v 6)))))","(-.f64 (+.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 -4/3 (pow.f64 v 4))) (/.f64 4/3 (pow.f64 v 6)))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 -4/3 (pow.f64 v 4))) (/.f64 -4/3 (pow.f64 v 6)))","(+.f64 (-.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 4/3 (pow.f64 v 4))) (/.f64 -4/3 (pow.f64 v 6)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 8))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 2))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 6))) (*.f64 4/3 (/.f64 1 (pow.f64 v 4)))))))","(neg.f64 (+.f64 (/.f64 4/3 (pow.f64 v 8)) (+.f64 (/.f64 4/3 (*.f64 v v)) (+.f64 (/.f64 4/3 (pow.f64 v 4)) (/.f64 4/3 (pow.f64 v 6))))))","(+.f64 (/.f64 -4/3 (pow.f64 v 8)) (-.f64 (+.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 -4/3 (pow.f64 v 4))) (/.f64 4/3 (pow.f64 v 6))))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 -4/3 (pow.f64 v 4))) (-.f64 (/.f64 -4/3 (pow.f64 v 6)) (/.f64 4/3 (pow.f64 v 8))))","(+.f64 (-.f64 (/.f64 -4/3 (*.f64 v v)) (/.f64 4/3 (pow.f64 v 4))) (+.f64 (/.f64 -4/3 (pow.f64 v 8)) (/.f64 -4/3 (pow.f64 v 6))))","(*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)))","(/.f64 4/3 (/.f64 (PI.f64) (sqrt.f64 1/2)))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 2) (-.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))))","(fma.f64 -4/3 (*.f64 (*.f64 v v) (-.f64 (neg.f64 (/.f64 (sqrt.f64 1/2) (PI.f64))) (/.f64 3/4 (*.f64 (PI.f64) (sqrt.f64 1/2))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))))","(fma.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 (fma.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) -1 (/.f64 -3/4 (*.f64 (PI.f64) (sqrt.f64 1/2)))) (*.f64 (*.f64 v v) -4/3)))","(fma.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 -4/3 (*.f64 (*.f64 v v) (-.f64 (/.f64 (/.f64 -3/4 (sqrt.f64 1/2)) (PI.f64)) (/.f64 (sqrt.f64 1/2) (PI.f64))))))","(fma.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 (-.f64 (/.f64 (/.f64 -3/4 (sqrt.f64 1/2)) (PI.f64)) (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 v (*.f64 v -4/3))))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 2) (-.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64))))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)))))","(fma.f64 -4/3 (*.f64 (*.f64 v v) (-.f64 (neg.f64 (/.f64 (sqrt.f64 1/2) (PI.f64))) (/.f64 3/4 (*.f64 (PI.f64) (sqrt.f64 1/2))))) (fma.f64 -4/3 (*.f64 (pow.f64 v 4) (-.f64 (fma.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (PI.f64) (sqrt.f64 1/2))))) (/.f64 3/4 (*.f64 (PI.f64) (sqrt.f64 1/2))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)))))","(fma.f64 -4/3 (*.f64 (*.f64 v v) (fma.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) -1 (/.f64 -3/4 (*.f64 (PI.f64) (sqrt.f64 1/2))))) (fma.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 (fma.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) -1 (fma.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (PI.f64) (sqrt.f64 1/2))) (/.f64 -3/4 (*.f64 (PI.f64) (sqrt.f64 1/2))))) (*.f64 (pow.f64 v 4) -4/3))))","(fma.f64 -4/3 (fma.f64 v (*.f64 v (-.f64 (/.f64 (/.f64 -3/4 (sqrt.f64 1/2)) (PI.f64)) (/.f64 (sqrt.f64 1/2) (PI.f64)))) (*.f64 (pow.f64 v 4) (-.f64 (fma.f64 (/.f64 -1/2 (PI.f64)) (-.f64 (/.f64 9/2 (sqrt.f64 1/2)) (/.f64 (/.f64 9/16 (sqrt.f64 1/2)) 1/2)) (/.f64 (/.f64 -3/4 (sqrt.f64 1/2)) (PI.f64))) (/.f64 (sqrt.f64 1/2) (PI.f64))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))))","(fma.f64 -4/3 (fma.f64 v (*.f64 v (-.f64 (/.f64 (/.f64 -3/4 (sqrt.f64 1/2)) (PI.f64)) (/.f64 (sqrt.f64 1/2) (PI.f64)))) (*.f64 (pow.f64 v 4) (-.f64 (fma.f64 (+.f64 (/.f64 9/2 (sqrt.f64 1/2)) (/.f64 (/.f64 -9/16 (sqrt.f64 1/2)) 1/2)) (/.f64 -1/2 (PI.f64)) (/.f64 (/.f64 -3/4 (sqrt.f64 1/2)) (PI.f64))) (/.f64 (sqrt.f64 1/2) (PI.f64))))) (/.f64 4/3 (/.f64 (PI.f64) (sqrt.f64 1/2))))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 6) (-.f64 (+.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 27/2 (*.f64 3/4 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2)))) (*.f64 (sqrt.f64 1/2) (PI.f64)))) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64)))))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 2) (-.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64))))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))))))","(fma.f64 -4/3 (*.f64 (pow.f64 v 6) (-.f64 (fma.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 -1/2 (+.f64 (/.f64 (+.f64 27/2 (*.f64 -3/4 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2)))) (*.f64 (PI.f64) (sqrt.f64 1/2))) (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (PI.f64) (sqrt.f64 1/2)))))) (/.f64 3/4 (*.f64 (PI.f64) (sqrt.f64 1/2))))) (fma.f64 -4/3 (*.f64 (*.f64 v v) (-.f64 (neg.f64 (/.f64 (sqrt.f64 1/2) (PI.f64))) (/.f64 3/4 (*.f64 (PI.f64) (sqrt.f64 1/2))))) (fma.f64 -4/3 (*.f64 (pow.f64 v 4) (-.f64 (fma.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (PI.f64) (sqrt.f64 1/2))))) (/.f64 3/4 (*.f64 (PI.f64) (sqrt.f64 1/2))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))))))","(fma.f64 -4/3 (*.f64 (pow.f64 v 6) (fma.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) -1 (fma.f64 -1/2 (+.f64 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (PI.f64) (sqrt.f64 1/2))) (/.f64 (+.f64 27/2 (*.f64 (-.f64 9 (/.f64 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2) 1/2)) -3/4)) (*.f64 (PI.f64) (sqrt.f64 1/2)))) (/.f64 -3/4 (*.f64 (PI.f64) (sqrt.f64 1/2)))))) (fma.f64 -4/3 (*.f64 (*.f64 v v) (fma.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) -1 (/.f64 -3/4 (*.f64 (PI.f64) (sqrt.f64 1/2))))) (fma.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 (fma.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) -1 (fma.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (PI.f64) (sqrt.f64 1/2))) (/.f64 -3/4 (*.f64 (PI.f64) (sqrt.f64 1/2))))) (*.f64 (pow.f64 v 4) -4/3)))))","(fma.f64 (pow.f64 v 6) (*.f64 -4/3 (+.f64 (-.f64 (/.f64 (/.f64 -3/4 (sqrt.f64 1/2)) (PI.f64)) (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 (/.f64 -1/2 (sqrt.f64 1/2)) (+.f64 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (PI.f64)) (/.f64 135/16 (PI.f64)))))) (fma.f64 -4/3 (fma.f64 v (*.f64 v (-.f64 (/.f64 (/.f64 -3/4 (sqrt.f64 1/2)) (PI.f64)) (/.f64 (sqrt.f64 1/2) (PI.f64)))) (*.f64 (pow.f64 v 4) (-.f64 (fma.f64 (/.f64 -1/2 (PI.f64)) (-.f64 (/.f64 9/2 (sqrt.f64 1/2)) (/.f64 (/.f64 9/16 (sqrt.f64 1/2)) 1/2)) (/.f64 (/.f64 -3/4 (sqrt.f64 1/2)) (PI.f64))) (/.f64 (sqrt.f64 1/2) (PI.f64))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)))))","(fma.f64 -4/3 (fma.f64 (pow.f64 v 6) (-.f64 (fma.f64 (/.f64 -1/2 (sqrt.f64 1/2)) (+.f64 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (PI.f64)) (/.f64 135/16 (PI.f64))) (/.f64 (/.f64 -3/4 (sqrt.f64 1/2)) (PI.f64))) (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 v (*.f64 v (-.f64 (/.f64 (/.f64 -3/4 (sqrt.f64 1/2)) (PI.f64)) (/.f64 (sqrt.f64 1/2) (PI.f64)))))) (fma.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 (pow.f64 v 4) (*.f64 -4/3 (-.f64 (fma.f64 (+.f64 (/.f64 9/2 (sqrt.f64 1/2)) (/.f64 (/.f64 -9/16 (sqrt.f64 1/2)) 1/2)) (/.f64 -1/2 (PI.f64)) (/.f64 (/.f64 -3/4 (sqrt.f64 1/2)) (PI.f64))) (/.f64 (sqrt.f64 1/2) (PI.f64)))))))","(sqrt.f64 2)","(+.f64 (sqrt.f64 2) (*.f64 -3 (/.f64 (pow.f64 v 2) (sqrt.f64 2))))","(+.f64 (sqrt.f64 2) (*.f64 -3 (/.f64 (*.f64 v v) (sqrt.f64 2))))","(fma.f64 -3 (/.f64 (*.f64 v v) (sqrt.f64 2)) (sqrt.f64 2))","(fma.f64 -3 (*.f64 (/.f64 v (sqrt.f64 2)) v) (sqrt.f64 2))","(+.f64 (sqrt.f64 2) (+.f64 (*.f64 -9/2 (/.f64 (pow.f64 v 4) (pow.f64 (sqrt.f64 2) 3))) (*.f64 -3 (/.f64 (pow.f64 v 2) (sqrt.f64 2)))))","(+.f64 (sqrt.f64 2) (fma.f64 -9/2 (/.f64 (pow.f64 v 4) (pow.f64 (sqrt.f64 2) 3)) (*.f64 -3 (/.f64 (*.f64 v v) (sqrt.f64 2)))))","(+.f64 (fma.f64 -3 (/.f64 (*.f64 v v) (sqrt.f64 2)) (sqrt.f64 2)) (*.f64 -9/4 (/.f64 (pow.f64 v 4) (sqrt.f64 2))))","(fma.f64 -3 (*.f64 (/.f64 v (sqrt.f64 2)) v) (fma.f64 -9/4 (/.f64 (pow.f64 v 4) (sqrt.f64 2)) (sqrt.f64 2)))","(fma.f64 -9/4 (/.f64 (pow.f64 v 4) (sqrt.f64 2)) (fma.f64 -3 (*.f64 (/.f64 v (sqrt.f64 2)) v) (sqrt.f64 2)))","(+.f64 (*.f64 -27/2 (/.f64 (pow.f64 v 6) (pow.f64 (sqrt.f64 2) 5))) (+.f64 (sqrt.f64 2) (+.f64 (*.f64 -9/2 (/.f64 (pow.f64 v 4) (pow.f64 (sqrt.f64 2) 3))) (*.f64 -3 (/.f64 (pow.f64 v 2) (sqrt.f64 2))))))","(fma.f64 -27/2 (/.f64 (pow.f64 v 6) (pow.f64 (sqrt.f64 2) 5)) (+.f64 (sqrt.f64 2) (fma.f64 -9/2 (/.f64 (pow.f64 v 4) (pow.f64 (sqrt.f64 2) 3)) (*.f64 -3 (/.f64 (*.f64 v v) (sqrt.f64 2))))))","(+.f64 (fma.f64 -3 (/.f64 (*.f64 v v) (sqrt.f64 2)) (*.f64 -9/4 (/.f64 (pow.f64 v 4) (sqrt.f64 2)))) (fma.f64 -27/2 (/.f64 (pow.f64 v 6) (pow.f64 (sqrt.f64 2) 5)) (sqrt.f64 2)))","(fma.f64 -27/2 (/.f64 (pow.f64 v 6) (pow.f64 (sqrt.f64 2) 5)) (fma.f64 -3 (*.f64 (/.f64 v (sqrt.f64 2)) v) (fma.f64 -9/4 (/.f64 (pow.f64 v 4) (sqrt.f64 2)) (sqrt.f64 2))))","(fma.f64 -27/2 (/.f64 (pow.f64 v 6) (pow.f64 (sqrt.f64 2) 5)) (fma.f64 -9/4 (/.f64 (pow.f64 v 4) (sqrt.f64 2)) (fma.f64 -3 (*.f64 (/.f64 v (sqrt.f64 2)) v) (sqrt.f64 2))))"]],"stop":[["node limit",1]],"time":51.89892578125,"type":"simplify"},{"compiler":[[4606,3440]],"time":60.2021484375,"type":"eval"},{"alts":[["(*.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))","next",0.00390625],["(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))","done",0.01171875]],"compiler":[[37,28],[17,13],[37,28]],"count":[[195,2]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[193,1],"picked":[1,1]}],"min-error":[0],"time":61.43701171875,"type":"prune"},{"compiler":[[136,95]],"locations":[["(/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))",0.01171875,true],["(*.f64 (fma.f64 v v -1) (PI.f64))",0.015625,true],["(sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))",0.9765625,true],["(/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))",0.99609375,true]],"time":34.197998046875,"type":"localize"},{"count":[[4,24]],"series":[["(/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))","v","-inf",0.471923828125],["(/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))","v","inf",0.759033203125],["(/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))","v","0",1.89599609375],["(*.f64 (fma.f64 v v -1) (PI.f64))","v","-inf",0.330810546875],["(*.f64 (fma.f64 v v -1) (PI.f64))","v","inf",0.37890625],["(*.f64 (fma.f64 v v -1) (PI.f64))","v","0",0.318115234375],["(sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))","v","-inf",0.424072265625],["(sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))","v","inf",1.159912109375],["(sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))","v","0",1.234130859375],["(/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))","v","-inf",0.237060546875],["(/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))","v","inf",0.22216796875],["(/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))","v","0",0.285888671875]],"time":7.935791015625,"type":"series"},{"count":[[4,136]],"egraph":[[2,3720,61,0.030452832],[1,311,61,0.005614332],[0,15,61,0.000480166]],"inputs":[["(/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))","(sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))","(*.f64 (fma.f64 v v -1) (PI.f64))","(/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4/3 (/.f64 (/.f64 1 (PI.f64)) (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (*.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/6) (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2))) (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) (*.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 4/3 (/.f64 1 (*.f64 (fma.f64 v v -1) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (PI.f64)) (fma.f64 v v -1)) -4/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (fma.f64 v v -1)) (/.f64 1 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) 3) (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))) (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4) -3/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/6) (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 -4/3) (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (sqrt.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sqrt.f64 (*.f64 (fma.f64 v v -1) (PI.f64))) (sqrt.f64 -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 -4/3) (sqrt.f64 (*.f64 (fma.f64 v v -1) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 -4/3 (fma.f64 v v -1))) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 4/3) (sqrt.f64 (*.f64 (fma.f64 v v -1) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 -4/3)) (neg.f64 (sqrt.f64 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4) -3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 16/9 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2)) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4) -3) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (*.f64 (fma.f64 v v -1) (PI.f64))) (sqrt.f64 -4/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (fma.f64 v v -1) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 v v) (PI.f64)) (*.f64 -1 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (*.f64 v v)) (*.f64 (PI.f64) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (PI.f64)) (fma.f64 v v -1))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (PI.f64)) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (PI.f64)) (fma.f64 v v -1)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (PI.f64)) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (fma.f64 v v -1) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 v v -1) (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (fma.f64 v v -1) (PI.f64))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 v v -1) 3) (pow.f64 (PI.f64) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 (fma.f64 v v -1) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (PI.f64)) (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 v v -1) 3) (pow.f64 (PI.f64) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 (fma.f64 v v -1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (fma.f64 v v -1) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (fma.f64 v v -1) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (fma.f64 v v -1) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (fma.f64 v v -1) (PI.f64))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) (*.f64 v v) (*.f64 (PI.f64) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 v v) (PI.f64) (*.f64 -1 (PI.f64)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (/.f64 1 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))) (cbrt.f64 (/.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) (pow.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) (pow.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)) 2))) (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (*.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/6) (/.f64 1 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/6)) (/.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) (*.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) (/.f64 1 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))) (/.f64 1 (neg.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) 1) (/.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/6) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) 1) (/.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) -2) (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)) 2))) (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)) 2))) (/.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) (cbrt.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 v (*.f64 v -6) 2) -1/6) (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/6)) (/.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/6) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) (pow.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) 1/4) (pow.f64 (fma.f64 v (*.f64 v -6) 2) 1/6)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)) (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4) -3/2) (fma.f64 v (*.f64 v -6) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)) (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (neg.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64))) (pow.f64 (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 (fma.f64 v v -1) (PI.f64)) -3/4) -3/2) (fma.f64 v (*.f64 v -6) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2)))) 1))))))"]],"rules":[["egg-rr",39],["egg-rr",25],["egg-rr",37],["egg-rr",35]],"stop":[["node limit",1]],"time":61.0009765625,"type":"rewrite"},{"count":[[160,157]],"egraph":[[4,7293,415,0.027382249999999997],[3,1461,415,0.013456458],[2,430,429,0.003389042],[1,148,449,0.0010226669999999999],[0,50,461,0.000257625]],"inputs":[["(/.f64 4/3 (PI.f64))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64))))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64))))))","(/.f64 -4/3 (*.f64 (pow.f64 v 2) (PI.f64)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64)))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 8) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64))))))))","(/.f64 -4/3 (*.f64 (pow.f64 v 2) (PI.f64)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64)))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 8) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64))))))))","(*.f64 -1 (PI.f64))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (pow.f64 v 2) (PI.f64))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (pow.f64 v 2) (PI.f64))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 4/3 (PI.f64))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64))))","(fma.f64 4/3 (/.f64 (*.f64 v v) (PI.f64)) (/.f64 4/3 (PI.f64)))","(fma.f64 4/3 (*.f64 (/.f64 v (PI.f64)) v) (/.f64 4/3 (PI.f64)))","(fma.f64 4/3 (*.f64 v (/.f64 v (PI.f64))) (/.f64 4/3 (PI.f64)))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64)))))","(fma.f64 4/3 (/.f64 (*.f64 v v) (PI.f64)) (fma.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64)) (/.f64 4/3 (PI.f64))))","(fma.f64 4/3 (+.f64 (*.f64 (/.f64 v (PI.f64)) v) (/.f64 (pow.f64 v 4) (PI.f64))) (/.f64 4/3 (PI.f64)))","(+.f64 (/.f64 4/3 (PI.f64)) (*.f64 (/.f64 4/3 (PI.f64)) (+.f64 (pow.f64 v 4) (*.f64 v v))))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64))))))","(fma.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64)) (fma.f64 4/3 (/.f64 (*.f64 v v) (PI.f64)) (fma.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64)) (/.f64 4/3 (PI.f64)))))","(fma.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64)) (fma.f64 4/3 (+.f64 (*.f64 (/.f64 v (PI.f64)) v) (/.f64 (pow.f64 v 4) (PI.f64))) (/.f64 4/3 (PI.f64))))","(fma.f64 4/3 (fma.f64 (/.f64 v (PI.f64)) v (/.f64 1 (PI.f64))) (*.f64 (/.f64 4/3 (PI.f64)) (+.f64 (pow.f64 v 6) (pow.f64 v 4))))","(/.f64 -4/3 (*.f64 (pow.f64 v 2) (PI.f64)))","(/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64))))))","(neg.f64 (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (*.f64 v v)))))","(+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))))","(*.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 v v))) (-.f64 -4/3 (/.f64 4/3 (*.f64 v v))))","(*.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 -4/3 (/.f64 -4/3 (*.f64 v v))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64)))))))","(neg.f64 (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6))))))","(-.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v)))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6))))","(+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (-.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6)))))","(-.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6))) (*.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 v v))) (-.f64 (/.f64 4/3 (*.f64 v v)) -4/3)))","(-.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6))) (*.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 4/3 (/.f64 4/3 (*.f64 v v)))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 8) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64))))))))","(neg.f64 (+.f64 (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6))))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 8)))))","(+.f64 (-.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v)))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6)))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 8))))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v)))) (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6))) (/.f64 (/.f64 -4/3 (PI.f64)) (pow.f64 v 8))))","(+.f64 (*.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 v v))) (-.f64 -4/3 (/.f64 4/3 (*.f64 v v)))) (*.f64 (/.f64 1 (*.f64 (PI.f64) (pow.f64 v 6))) (-.f64 -4/3 (/.f64 4/3 (*.f64 v v)))))","(+.f64 (*.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 -4/3 (/.f64 -4/3 (*.f64 v v)))) (*.f64 (/.f64 1 (*.f64 (PI.f64) (pow.f64 v 6))) (+.f64 -4/3 (/.f64 -4/3 (*.f64 v v)))))","(/.f64 -4/3 (*.f64 (pow.f64 v 2) (PI.f64)))","(/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64))))))","(neg.f64 (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (*.f64 v v)))))","(+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))))","(*.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 v v))) (-.f64 -4/3 (/.f64 4/3 (*.f64 v v))))","(*.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 -4/3 (/.f64 -4/3 (*.f64 v v))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64)))))))","(neg.f64 (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6))))))","(-.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v)))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6))))","(+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (-.f64 (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6)))))","(-.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6))) (*.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 v v))) (-.f64 (/.f64 4/3 (*.f64 v v)) -4/3)))","(-.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6))) (*.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 4/3 (/.f64 4/3 (*.f64 v v)))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 8) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64))))))))","(neg.f64 (+.f64 (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6))))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 8)))))","(+.f64 (-.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v)))) (/.f64 4/3 (*.f64 (PI.f64) (pow.f64 v 6)))) (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 8))))","(+.f64 (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 4))) (/.f64 -4/3 (*.f64 (PI.f64) (*.f64 v v)))) (+.f64 (/.f64 -4/3 (*.f64 (PI.f64) (pow.f64 v 6))) (/.f64 (/.f64 -4/3 (PI.f64)) (pow.f64 v 8))))","(+.f64 (*.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 v v))) (-.f64 -4/3 (/.f64 4/3 (*.f64 v v)))) (*.f64 (/.f64 1 (*.f64 (PI.f64) (pow.f64 v 6))) (-.f64 -4/3 (/.f64 4/3 (*.f64 v v)))))","(+.f64 (*.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 v v))) (+.f64 -4/3 (/.f64 -4/3 (*.f64 v v)))) (*.f64 (/.f64 1 (*.f64 (PI.f64) (pow.f64 v 6))) (+.f64 -4/3 (/.f64 -4/3 (*.f64 v v)))))","(*.f64 -1 (PI.f64))","(neg.f64 (PI.f64))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (PI.f64) (+.f64 -1 (*.f64 v v)))","(*.f64 (PI.f64) (+.f64 (*.f64 v v) -1))","(*.f64 (PI.f64) (fma.f64 v v -1))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (PI.f64) (+.f64 -1 (*.f64 v v)))","(*.f64 (PI.f64) (+.f64 (*.f64 v v) -1))","(*.f64 (PI.f64) (fma.f64 v v -1))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (PI.f64) (+.f64 -1 (*.f64 v v)))","(*.f64 (PI.f64) (+.f64 (*.f64 v v) -1))","(*.f64 (PI.f64) (fma.f64 v v -1))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (PI.f64) (*.f64 v v))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (PI.f64) (+.f64 -1 (*.f64 v v)))","(*.f64 (PI.f64) (+.f64 (*.f64 v v) -1))","(*.f64 (PI.f64) (fma.f64 v v -1))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (PI.f64) (+.f64 -1 (*.f64 v v)))","(*.f64 (PI.f64) (+.f64 (*.f64 v v) -1))","(*.f64 (PI.f64) (fma.f64 v v -1))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (PI.f64) (+.f64 -1 (*.f64 v v)))","(*.f64 (PI.f64) (+.f64 (*.f64 v v) -1))","(*.f64 (PI.f64) (fma.f64 v v -1))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (PI.f64) (*.f64 v v))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (PI.f64) (+.f64 -1 (*.f64 v v)))","(*.f64 (PI.f64) (+.f64 (*.f64 v v) -1))","(*.f64 (PI.f64) (fma.f64 v v -1))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (PI.f64) (+.f64 -1 (*.f64 v v)))","(*.f64 (PI.f64) (+.f64 (*.f64 v v) -1))","(*.f64 (PI.f64) (fma.f64 v v -1))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (PI.f64) (+.f64 -1 (*.f64 v v)))","(*.f64 (PI.f64) (+.f64 (*.f64 v v) -1))","(*.f64 (PI.f64) (fma.f64 v v -1))"]],"stop":[["node limit",1]],"time":45.628173828125,"type":"simplify"},{"compiler":[[11490,8453]],"time":132.487060546875,"type":"eval"},{"alts":[["(*.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))","done",0.00390625],["(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))","done",0.01171875]],"compiler":[[37,28],[17,13]],"count":[[277,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[275,0],"picked":[1,1]}],"min-error":[0],"time":102.47998046875,"type":"prune"},{"accuracy":[0.00390625],"baseline":[0.00390625],"branch":[["v",0.00390625,1],["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))",0.00390625,1],["(*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v)))))",0.00390625,1],["(*.f64 v v)",0.00390625,1]],"compiler":[[2,1],[21,16],[19,14],[4,2],[73,53]],"count":[[3,1]],"inputs":[["(*.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))","(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 v v -1)) (PI.f64)) (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))","(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))"]],"link":["."],"name":["Falkner and Boettcher, Equation (22+)"],"oracle":[1.0],"outputs":[["(*.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))"]],"time":11.136962890625,"times":[["v",3.08203125],["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))",2.123046875],["(*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v)))))",2.119873046875],["(*.f64 v v)",2.318115234375]],"type":"regimes"},{"compiler":[[37,28]],"egraph":[[1,22,56,5.1875e-5],[0,19,56,3e-5]],"inputs":[["(*.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (fma.f64 v (*.f64 v -6) 2))) (/.f64 (sqrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 v v -1) (PI.f64)))) (cbrt.f64 (sqrt.f64 (fma.f64 v (*.f64 v -6) 2)))))"]],"stop":[["done",1],["saturated",1]],"time":8.786865234375,"type":"simplify"},{"time":0.01708984375,"type":"soundness"},{"compiler":[[37,28]],"remove-preprocessing":[[]],"time":16.87109375,"type":"end"}]