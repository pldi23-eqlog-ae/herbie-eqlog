[{"compiler":[[11,7]],"method":["search"],"sampling":[[12,0.6396870426087844,0.35494829803292305,0.005364659358292556],[11,0.5304721816755773,0.46416315896613014,0.005364659358292556],[10,0.4602626282185156,0.5382732431708064,0.0014641286106780171],[9,0.3900530747614539,0.6084827966278681,0.0014641286106780171],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":68.748046875,"type":"analyze"},{"outcomes":[["body",256,"invalid",12.696044921875,345],["body",256,"valid",309.708984375,8256]],"time":330.259033203125,"type":"sample"},{"compiler":[[10,6]],"egraph":[[0,3,3,2.083e-6],[13,7322,40,0.08837166599999999],[12,7015,40,0.076796833],[11,6834,40,0.059514291],[10,6495,40,0.050845416],[9,6201,40,0.042302624],[8,5287,40,0.034212458],[7,3053,40,0.022239415999999998],[6,1114,40,0.0103175],[5,498,40,0.003737625],[4,221,40,0.001617083],[3,100,40,0.000722291],[2,57,40,0.000328458],[1,35,40,0.00016129099999999998],[0,14,40,6.1166e-5]],"inputs":[["0","1","2"],["(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 (-.f64 y x) (-.f64 z x))","(/.f64 (-.f64 z y) (-.f64 x y))","(/.f64 (-.f64 x z) (-.f64 y z))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 (-.f64 y x) (-.f64 z x))","(/.f64 (-.f64 x y) (-.f64 x z))","(/.f64 (-.f64 z y) (-.f64 x y))","(/.f64 (-.f64 x z) (-.f64 y z))","(/.f64 (-.f64 z x) (-.f64 z y))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":113.636962890625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[16,4275,10,0.080928751],[15,4275,10,0.06972300099999999],[14,4267,10,0.05877925099999999],[13,4257,10,0.04855270899999999],[12,4230,10,0.042261417999999995],[11,4105,10,0.036021083999999995],[10,3743,10,0.029148709],[9,2834,10,0.021953417],[8,1389,10,0.012706292],[7,549,10,0.0052609169999999995],[6,266,10,0.0022751259999999997],[5,128,10,0.0010680009999999998],[4,72,10,0.000540418],[3,37,10,0.000294293],[2,21,10,0.000154293],[1,13,10,8.3668e-5],[0,7,10,3.5209e-5]],"inputs":[["(/.f64 (-.f64 x y) (-.f64 z y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 (-.f64 y x) (-.f64 y z))"]],"stop":[["saturated",1]],"time":92.454833984375,"type":"simplify"},{"compiler":[[17,9]],"time":0.34814453125,"type":"eval"},{"alts":[["(/.f64 (-.f64 x y) (-.f64 z y))","next",0.015625]],"compiler":[[10,6],[10,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[0.015625],"time":0.81884765625,"type":"prune"},{"compiler":[[19,6]],"locations":[["(/.f64 (-.f64 x y) (-.f64 z y))",0.015625,true]],"time":3.994140625,"type":"localize"},{"count":[[1,36]],"series":[["(/.f64 (-.f64 x y) (-.f64 z y))","z","-inf",0.419921875],["(/.f64 (-.f64 x y) (-.f64 z y))","z","inf",0.41796875],["(/.f64 (-.f64 x y) (-.f64 z y))","z","0",0.419921875],["(/.f64 (-.f64 x y) (-.f64 z y))","y","-inf",0.3720703125],["(/.f64 (-.f64 x y) (-.f64 z y))","y","inf",0.93408203125],["(/.f64 (-.f64 x y) (-.f64 z y))","y","0",0.552978515625],["(/.f64 (-.f64 x y) (-.f64 z y))","x","-inf",0.510009765625],["(/.f64 (-.f64 x y) (-.f64 z y))","x","inf",0.4521484375],["(/.f64 (-.f64 x y) (-.f64 z y))","x","0",0.455078125]],"time":4.681884765625,"type":"series"},{"count":[[1,227]],"egraph":[[2,2692,10,0.023955541],[1,167,10,0.003209666],[0,7,10,0.000162958]],"inputs":[["(/.f64 (-.f64 x y) (-.f64 z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (-.f64 z y)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 z y)))) (sqrt.f64 (/.f64 y (-.f64 z y))) (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (-.f64 z y)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 x y) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2)))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (pow.f64 (-.f64 z y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 z y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 z y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 x y) (-.f64 z y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) (-.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) (-.f64 x y)) -2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (*.f64 (cbrt.f64 (-.f64 x y)) (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))) (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x y)) (*.f64 (sqrt.f64 (-.f64 x y)) (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 x y)) (/.f64 1 (neg.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 (-.f64 x y) (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (-.f64 x y)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) 1) (/.f64 (sqrt.f64 (-.f64 x y)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 (-.f64 x y)) (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 z y) (-.f64 x y)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 x y) 3) (pow.f64 (-.f64 z y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 z y) (-.f64 x y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) (neg.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 z y) (-.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 x y) (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 3) (pow.f64 (-.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 x y) (-.f64 z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (/.f64 y (-.f64 z y))))))))"]],"rules":[["egg-rr",227]],"stop":[["node limit",1]],"time":74.78515625,"type":"rewrite"},{"count":[[263,263]],"egraph":[[3,6700,755,0.027216250999999997],[2,1225,757,0.010995876],[1,326,876,0.002171292],[0,106,976,0.000467875]],"inputs":[["(*.f64 -1 (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 x z)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (/.f64 x z))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 4))) (/.f64 1 (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 z y)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (*.f64 -1 (/.f64 z y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))))) (*.f64 -1 (/.f64 z y)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 x z) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) (pow.f64 z 2)) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 (-.f64 x y) y))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (*.f64 -1 (/.f64 (-.f64 x y) y)))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y)))","(+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (pow.f64 y 2)) (+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y))))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 y (-.f64 z y)))","(neg.f64 (/.f64 y (-.f64 z y)))","(/.f64 (neg.f64 y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(/.f64 x z)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (/.f64 x z))","(fma.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (/.f64 (neg.f64 x) (*.f64 z z)))) (/.f64 x z))","(-.f64 (/.f64 x z) (*.f64 y (-.f64 (/.f64 1 z) (/.f64 x (*.f64 z z)))))","(+.f64 (/.f64 (-.f64 x y) z) (/.f64 (*.f64 y x) (*.f64 z z)))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z)))","(fma.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (/.f64 (neg.f64 x) (*.f64 z z)))) (fma.f64 -1 (*.f64 (*.f64 y y) (+.f64 (/.f64 1 (*.f64 z z)) (/.f64 (neg.f64 x) (pow.f64 z 3)))) (/.f64 x z)))","(-.f64 (-.f64 (/.f64 x z) (*.f64 (*.f64 y y) (-.f64 (/.f64 1 (*.f64 z z)) (/.f64 x (pow.f64 z 3))))) (*.f64 y (-.f64 (/.f64 1 z) (/.f64 x (*.f64 z z)))))","(fma.f64 (*.f64 y y) (neg.f64 (-.f64 (/.f64 1 (*.f64 z z)) (/.f64 x (pow.f64 z 3)))) (+.f64 (/.f64 (-.f64 x y) z) (/.f64 (*.f64 y x) (*.f64 z z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 4))) (/.f64 1 (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z))))","(fma.f64 -1 (*.f64 (pow.f64 y 3) (fma.f64 -1 (/.f64 x (pow.f64 z 4)) (/.f64 1 (pow.f64 z 3)))) (fma.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (/.f64 (neg.f64 x) (*.f64 z z)))) (fma.f64 -1 (*.f64 (*.f64 y y) (+.f64 (/.f64 1 (*.f64 z z)) (/.f64 (neg.f64 x) (pow.f64 z 3)))) (/.f64 x z))))","(-.f64 (-.f64 (-.f64 (/.f64 x z) (*.f64 (*.f64 y y) (-.f64 (/.f64 1 (*.f64 z z)) (/.f64 x (pow.f64 z 3))))) (*.f64 y (-.f64 (/.f64 1 z) (/.f64 x (*.f64 z z))))) (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1 (pow.f64 z 3)) (/.f64 x (pow.f64 z 4)))))","(-.f64 (fma.f64 (*.f64 y y) (neg.f64 (-.f64 (/.f64 1 (*.f64 z z)) (/.f64 x (pow.f64 z 3)))) (+.f64 (/.f64 (-.f64 x y) z) (/.f64 (*.f64 y x) (*.f64 z z)))) (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1 (pow.f64 z 3)) (/.f64 x (pow.f64 z 4)))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 z y)))","(-.f64 (+.f64 1 (/.f64 (neg.f64 x) y)) (/.f64 (neg.f64 z) y))","(-.f64 1 (/.f64 (-.f64 x z) y))","(+.f64 1 (/.f64 (-.f64 z x) y))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (*.f64 -1 (/.f64 z y)))","(-.f64 (+.f64 (+.f64 1 (/.f64 (*.f64 -1 (-.f64 x z)) (/.f64 (*.f64 y y) z))) (/.f64 (neg.f64 x) y)) (/.f64 (neg.f64 z) y))","(-.f64 (-.f64 1 (/.f64 (-.f64 x z) y)) (/.f64 (-.f64 x z) (/.f64 y (/.f64 z y))))","(+.f64 1 (*.f64 (+.f64 1 (/.f64 z y)) (/.f64 (-.f64 z x) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))))) (*.f64 -1 (/.f64 z y)))","(+.f64 (/.f64 (*.f64 -1 (-.f64 x z)) (/.f64 (pow.f64 y 3) (*.f64 z z))) (-.f64 (+.f64 (+.f64 1 (/.f64 (*.f64 -1 (-.f64 x z)) (/.f64 (*.f64 y y) z))) (/.f64 (neg.f64 x) y)) (/.f64 (neg.f64 z) y)))","(-.f64 (-.f64 (-.f64 1 (/.f64 (-.f64 x z) y)) (*.f64 (/.f64 (-.f64 x z) (pow.f64 y 3)) (*.f64 z z))) (/.f64 (-.f64 x z) (/.f64 y (/.f64 z y))))","(+.f64 1 (+.f64 (/.f64 (-.f64 z x) y) (*.f64 (/.f64 (-.f64 z x) (*.f64 y y)) (+.f64 (*.f64 z (/.f64 z y)) z))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y)))","(-.f64 (+.f64 1 (/.f64 (neg.f64 x) y)) (/.f64 (neg.f64 z) y))","(-.f64 1 (/.f64 (-.f64 x z) y))","(+.f64 1 (/.f64 (-.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y))))","(-.f64 (+.f64 (+.f64 1 (/.f64 (*.f64 -1 (-.f64 x z)) (/.f64 (*.f64 y y) z))) (/.f64 (neg.f64 x) y)) (/.f64 (neg.f64 z) y))","(-.f64 (-.f64 1 (/.f64 (-.f64 x z) y)) (/.f64 (-.f64 x z) (/.f64 y (/.f64 z y))))","(+.f64 1 (*.f64 (+.f64 1 (/.f64 z y)) (/.f64 (-.f64 z x) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 x z) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) (pow.f64 z 2)) (pow.f64 y 3))))))","(+.f64 (/.f64 (*.f64 -1 (-.f64 x z)) (/.f64 (pow.f64 y 3) (*.f64 z z))) (-.f64 (+.f64 (+.f64 1 (/.f64 (*.f64 -1 (-.f64 x z)) (/.f64 (*.f64 y y) z))) (/.f64 (neg.f64 x) y)) (/.f64 (neg.f64 z) y)))","(-.f64 (-.f64 (-.f64 1 (/.f64 (-.f64 x z) y)) (*.f64 (/.f64 (-.f64 x z) (pow.f64 y 3)) (*.f64 z z))) (/.f64 (-.f64 x z) (/.f64 y (/.f64 z y))))","(+.f64 1 (+.f64 (/.f64 (-.f64 z x) y) (*.f64 (/.f64 (-.f64 z x) (*.f64 y y)) (+.f64 (*.f64 z (/.f64 z y)) z))))","(*.f64 -1 (/.f64 (-.f64 x y) y))","(neg.f64 (/.f64 (-.f64 x y) y))","(/.f64 (neg.f64 (-.f64 x y)) y)","(-.f64 1 (/.f64 x y))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (*.f64 -1 (/.f64 (-.f64 x y) y)))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (neg.f64 (/.f64 (-.f64 x y) y)))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (/.f64 (neg.f64 (-.f64 x y)) y))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (-.f64 1 (/.f64 x y)))","(-.f64 (+.f64 1 (/.f64 (-.f64 z x) y)) (*.f64 (/.f64 x y) (/.f64 z y)))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y)))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (fma.f64 -1 (/.f64 (-.f64 x y) y) (/.f64 (*.f64 z z) (/.f64 y (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))))))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (-.f64 (*.f64 (/.f64 (*.f64 z z) y) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (+.f64 (/.f64 x y) -1)))","(+.f64 (-.f64 1 (/.f64 x y)) (*.f64 (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (+.f64 (*.f64 z (/.f64 z y)) z)))","(+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (pow.f64 y 2)) (+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y))))","(+.f64 (fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (fma.f64 -1 (/.f64 (-.f64 x y) y) (/.f64 (*.f64 z z) (/.f64 y (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))))) (/.f64 (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (*.f64 y y)))","(+.f64 (fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (-.f64 (*.f64 (/.f64 (*.f64 z z) y) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (+.f64 (/.f64 x y) -1))) (*.f64 (/.f64 (pow.f64 z 3) (*.f64 y y)) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))))","(+.f64 (fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (-.f64 1 (/.f64 x y))) (*.f64 (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (+.f64 (*.f64 z (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 y y)))))","(+.f64 (-.f64 (+.f64 1 (/.f64 (-.f64 z x) y)) (*.f64 (/.f64 x y) (/.f64 z y))) (*.f64 (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (+.f64 (*.f64 z (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 y y)))))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) (-.f64 x y))) (/.f64 (-.f64 x y) z))","(+.f64 (/.f64 (-.f64 x y) z) (*.f64 (/.f64 (-.f64 x y) z) (/.f64 y z)))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) (-.f64 x y))) (-.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (-.f64 x y)))) (/.f64 y z)))","(+.f64 (*.f64 (/.f64 (-.f64 x y) z) (/.f64 y z)) (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (-.f64 x y))) (/.f64 (-.f64 x y) z)))","(+.f64 (/.f64 (-.f64 x y) z) (*.f64 (/.f64 (-.f64 x y) z) (+.f64 (/.f64 y z) (*.f64 y (/.f64 y (*.f64 z z))))))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) (-.f64 x y))) (-.f64 (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (-.f64 x y))) (+.f64 (/.f64 x z) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) (-.f64 x y))))) (/.f64 y z)))","(+.f64 (*.f64 (/.f64 (-.f64 x y) z) (/.f64 y z)) (+.f64 (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (-.f64 x y))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (-.f64 x y))) (/.f64 (-.f64 x y) z)))","(+.f64 (*.f64 (-.f64 x y) (+.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 x y) z)))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) (-.f64 x y))) (/.f64 (-.f64 x y) z))","(+.f64 (/.f64 (-.f64 x y) z) (*.f64 (/.f64 (-.f64 x y) z) (/.f64 y z)))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) (-.f64 x y))) (-.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (-.f64 x y)))) (/.f64 y z)))","(+.f64 (*.f64 (/.f64 (-.f64 x y) z) (/.f64 y z)) (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (-.f64 x y))) (/.f64 (-.f64 x y) z)))","(+.f64 (/.f64 (-.f64 x y) z) (*.f64 (/.f64 (-.f64 x y) z) (+.f64 (/.f64 y z) (*.f64 y (/.f64 y (*.f64 z z))))))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) (-.f64 x y))) (-.f64 (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (-.f64 x y))) (+.f64 (/.f64 x z) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) (-.f64 x y))))) (/.f64 y z)))","(+.f64 (*.f64 (/.f64 (-.f64 x y) z) (/.f64 y z)) (+.f64 (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (-.f64 x y))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (-.f64 x y))) (/.f64 (-.f64 x y) z)))","(+.f64 (*.f64 (-.f64 x y) (+.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 x y) z)))"]],"stop":[["node limit",1]],"time":48.89501953125,"type":"simplify"},{"compiler":[[11268,3341]],"time":64.669921875,"type":"eval"},{"alts":[["(+.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))","fresh",0.13960388162040166],["(+.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))","next",0.0859375],["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","fresh",38.97350952402978],["(/.f64 (-.f64 x y) (-.f64 z y))","done",0.015625]],"compiler":[[70,31],[34,19],[27,16],[10,6],[70,31],[34,19],[27,16]],"count":[[264,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[263,3],"picked":[1,1]}],"min-error":[0],"time":81.386962890625,"type":"prune"},{"compiler":[[102,45]],"locations":[["(/.f64 x (-.f64 z y))",0.01171875,true],["(/.f64 1 (-.f64 z y))",0.01953125,true],["(*.f64 (/.f64 1 (-.f64 z y)) y)",0.17578125,true],["(fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y))",51.5191962074264,true]],"time":18.531982421875,"type":"localize"},{"count":[[4,96]],"series":[["(/.f64 x (-.f64 z y))","y","-inf",0.260986328125],["(/.f64 x (-.f64 z y))","y","inf",0.24609375],["(/.f64 x (-.f64 z y))","y","0",0.258056640625],["(/.f64 x (-.f64 z y))","z","-inf",0.265869140625],["(/.f64 x (-.f64 z y))","z","inf",0.3310546875],["(/.f64 x (-.f64 z y))","z","0",0.357177734375],["(/.f64 x (-.f64 z y))","x","-inf",0.364990234375],["(/.f64 x (-.f64 z y))","x","inf",0.47509765625],["(/.f64 x (-.f64 z y))","x","0",0.337158203125],["(/.f64 1 (-.f64 z y))","y","-inf",0.197021484375],["(/.f64 1 (-.f64 z y))","y","inf",0.198974609375],["(/.f64 1 (-.f64 z y))","y","0",0.202880859375],["(/.f64 1 (-.f64 z y))","z","-inf",0.198974609375],["(/.f64 1 (-.f64 z y))","z","inf",0.242919921875],["(/.f64 1 (-.f64 z y))","z","0",0.23095703125],["(*.f64 (/.f64 1 (-.f64 z y)) y)","y","-inf",0.199951171875],["(*.f64 (/.f64 1 (-.f64 z y)) y)","y","inf",0.171875],["(*.f64 (/.f64 1 (-.f64 z y)) y)","y","0",0.2119140625],["(*.f64 (/.f64 1 (-.f64 z y)) y)","z","-inf",0.18798828125],["(*.f64 (/.f64 1 (-.f64 z y)) y)","z","inf",0.255859375],["(*.f64 (/.f64 1 (-.f64 z y)) y)","z","0",0.22802734375],["(fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y))","y","-inf",2.8818359375],["(fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y))","y","inf",3.919189453125],["(fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y))","y","0",4.10888671875],["(fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y))","z","-inf",0.8251953125],["(fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y))","z","inf",1.79296875],["(fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y))","z","0",4.528076171875]],"time":23.840087890625,"type":"series"},{"count":[[4,172]],"egraph":[[2,3270,35,0.026329709],[1,236,37,0.00430275],[0,11,38,0.000285208]],"inputs":[["(fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y))","(*.f64 (/.f64 1 (-.f64 z y)) y)","(/.f64 1 (-.f64 z y))","(/.f64 x (-.f64 z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 z y)) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (-.f64 z y)) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (log.f64 (pow.f64 (exp.f64 (/.f64 1 (-.f64 z y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))) (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))) 2) (cbrt.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))) (sqrt.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 y (-.f64 z y)) 3) (pow.f64 (/.f64 y (-.f64 z y)) 3)) (+.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) (-.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) (pow.f64 (/.f64 y (-.f64 z y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) (pow.f64 (/.f64 y (-.f64 z y)) 2)) (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 y (-.f64 z y))) (exp.f64 (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y)))) (exp.f64 (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 y (-.f64 z y))) (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y)))) (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y)))) (exp.f64 (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 y (-.f64 z y))) (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y)))) (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (log.f64 (pow.f64 (exp.f64 (/.f64 y (-.f64 z y))) 2)))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 y (-.f64 z y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 y (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (-.f64 z y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 y (-.f64 z y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 z y) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 y) 2) (/.f64 (-.f64 z y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 y) (/.f64 (-.f64 z y) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (sqrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y 1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y -1) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y (-.f64 z y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 z y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y (-.f64 z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 y (-.f64 z y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 y (-.f64 z y)))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 z y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (-.f64 z y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (-.f64 z y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (/.f64 1 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (neg.f64 (/.f64 1 (cbrt.f64 (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 z y) -1/2) (pow.f64 (-.f64 z y) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 z y) -1/2) (neg.f64 (pow.f64 (-.f64 z y) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 1 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (/.f64 1 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 z y) -1/2)) (pow.f64 (-.f64 z y) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 z y) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 z y) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (/.f64 1 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (pow.f64 (-.f64 z y) -1/2)) (pow.f64 (-.f64 z y) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 z y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 z y) 2) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 z y) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 z y) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 z y) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 z y)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 z y)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 z y) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (-.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (neg.f64 (-.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 z y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (/.f64 1 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 z y) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 z y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (-.f64 z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 z y) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (cbrt.f64 (-.f64 z y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 z y) -1/2)) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (-.f64 z y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (-.f64 z y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (-.f64 z y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 z y) -1/2) (/.f64 x (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 x (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 z y) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (/.f64 1 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (-.f64 z y) -1/2)) (pow.f64 (-.f64 z y) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 z y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 z y) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (-.f64 z y) -3) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 z y))) (cbrt.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (-.f64 z y) -1/2) (sqrt.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (-.f64 z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 x (-.f64 z y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 x (-.f64 z y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 z y) x)) -1))))))"]],"rules":[["egg-rr",50],["egg-rr",50],["egg-rr",35],["egg-rr",37]],"stop":[["node limit",1]],"time":56.6708984375,"type":"rewrite"},{"count":[[268,221]],"egraph":[[3,5484,1272,0.022847542000000002],[2,1195,1329,0.009778667000000001],[1,322,1566,0.002221667],[0,106,1611,0.000516417]],"inputs":[["0","0","0","0","(/.f64 (+.f64 y (*.f64 -1 y)) z)","(/.f64 (+.f64 y (*.f64 -1 y)) z)","(/.f64 (+.f64 y (*.f64 -1 y)) z)","(/.f64 (+.f64 y (*.f64 -1 y)) z)","(*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 y)) z))","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 y)) z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 y)) z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 -1 (pow.f64 y 3))) (pow.f64 z 3))))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 y)) z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 -1 (pow.f64 y 3))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))))","0","0","0","0","0","0","0","0","0","0","0","0","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))"]],"method":["egg-herbie"],"outputs":[["0","0","0","0","(/.f64 (+.f64 y (*.f64 -1 y)) z)","0","(/.f64 (+.f64 y (*.f64 -1 y)) z)","0","(/.f64 (+.f64 y (*.f64 -1 y)) z)","0","(/.f64 (+.f64 y (*.f64 -1 y)) z)","0","(*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 y)) z))","0","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 y)) z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2)))))","0","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 y)) z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 -1 (pow.f64 y 3))) (pow.f64 z 3))))))","0","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 y)) z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 -1 (pow.f64 y 3))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))))","0","0","0","0","0","0","0","0","0","0","0","0","0","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(fma.f64 -1 (/.f64 z y) -1)","(-.f64 -1 (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 z z) (*.f64 y y))) (fma.f64 -1 (/.f64 z y) -1))","(fma.f64 -1 (+.f64 (/.f64 z y) (*.f64 (/.f64 z y) (/.f64 z y))) -1)","(-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y y)) (*.f64 -1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) -1)","(+.f64 -1 (-.f64 (-.f64 (/.f64 (neg.f64 z) y) (*.f64 (/.f64 z y) (/.f64 z y))) (/.f64 (pow.f64 z 3) (pow.f64 y 3))))","(-.f64 (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y))) (pow.f64 (/.f64 z y) 3))","(+.f64 -1 (*.f64 (/.f64 z y) (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y)))))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z))","(+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z)) (/.f64 (pow.f64 y 3) (pow.f64 z 3)))","(+.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z)) (/.f64 (pow.f64 y 3) (pow.f64 z 3)))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (pow.f64 (/.f64 y z) 3))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z)) (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z)) (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (pow.f64 (/.f64 y z) 3)))","(*.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) 1) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z))","(+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z)) (/.f64 (pow.f64 y 3) (pow.f64 z 3)))","(+.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z)) (/.f64 (pow.f64 y 3) (pow.f64 z 3)))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (pow.f64 (/.f64 y z) 3))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z)) (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z)) (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (pow.f64 (/.f64 y z) 3)))","(*.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) 1) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z))","(+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z)) (/.f64 (pow.f64 y 3) (pow.f64 z 3)))","(+.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z)) (/.f64 (pow.f64 y 3) (pow.f64 z 3)))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (pow.f64 (/.f64 y z) 3))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z)) (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z)) (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (pow.f64 (/.f64 y z) 3)))","(*.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) 1) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)))","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(fma.f64 -1 (/.f64 z y) -1)","(-.f64 -1 (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 z z) (*.f64 y y))) (fma.f64 -1 (/.f64 z y) -1))","(fma.f64 -1 (+.f64 (/.f64 z y) (*.f64 (/.f64 z y) (/.f64 z y))) -1)","(-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y y)) (*.f64 -1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) -1)","(+.f64 -1 (-.f64 (-.f64 (/.f64 (neg.f64 z) y) (*.f64 (/.f64 z y) (/.f64 z y))) (/.f64 (pow.f64 z 3) (pow.f64 y 3))))","(-.f64 (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y))) (pow.f64 (/.f64 z y) 3))","(+.f64 -1 (*.f64 (/.f64 z y) (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y)))))","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(fma.f64 -1 (/.f64 z y) -1)","(-.f64 -1 (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 z z) (*.f64 y y))) (fma.f64 -1 (/.f64 z y) -1))","(fma.f64 -1 (+.f64 (/.f64 z y) (*.f64 (/.f64 z y) (/.f64 z y))) -1)","(-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y y)) (*.f64 -1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) -1)","(+.f64 -1 (-.f64 (-.f64 (/.f64 (neg.f64 z) y) (*.f64 (/.f64 z y) (/.f64 z y))) (/.f64 (pow.f64 z 3) (pow.f64 y 3))))","(-.f64 (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y))) (pow.f64 (/.f64 z y) 3))","(+.f64 -1 (*.f64 (/.f64 z y) (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y)))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (neg.f64 (/.f64 z (*.f64 y y))) (/.f64 1 y))","(fma.f64 -1 (/.f64 z (*.f64 y y)) (/.f64 -1 y))","(-.f64 (/.f64 -1 y) (/.f64 z (*.f64 y y)))","(*.f64 (+.f64 (/.f64 z y) 1) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 z z) (pow.f64 y 3)) (neg.f64 (/.f64 z (*.f64 y y)))) (/.f64 1 y))","(fma.f64 -1 (+.f64 (/.f64 z (*.f64 y y)) (/.f64 z (/.f64 (pow.f64 y 3) z))) (/.f64 -1 y))","(+.f64 (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (/.f64 z y))) (/.f64 -1 y))","(+.f64 (*.f64 (-.f64 -1 (/.f64 z y)) (/.f64 z (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(-.f64 (fma.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (fma.f64 -1 (/.f64 (*.f64 z z) (pow.f64 y 3)) (neg.f64 (/.f64 z (*.f64 y y))))) (/.f64 1 y))","(+.f64 (-.f64 (-.f64 (/.f64 (neg.f64 z) (*.f64 y y)) (/.f64 z (/.f64 (pow.f64 y 3) z))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (/.f64 -1 y))","(+.f64 (-.f64 (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (/.f64 z y))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (/.f64 -1 y))","(+.f64 (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y)))) (/.f64 -1 y))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 1 z) (/.f64 y (*.f64 z z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 (*.f64 y y) (pow.f64 z 3))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 y (/.f64 (pow.f64 z 3) y))))","(+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z))))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3))) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 y (/.f64 (pow.f64 z 3) y)))))","(+.f64 (+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z)))) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))","(+.f64 (+.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (*.f64 y y) (pow.f64 z 3))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 1 z) (/.f64 y (*.f64 z z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 (*.f64 y y) (pow.f64 z 3))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 y (/.f64 (pow.f64 z 3) y))))","(+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z))))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3))) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 y (/.f64 (pow.f64 z 3) y)))))","(+.f64 (+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z)))) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))","(+.f64 (+.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (*.f64 y y) (pow.f64 z 3))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 1 z) (/.f64 y (*.f64 z z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 (*.f64 y y) (pow.f64 z 3))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 y (/.f64 (pow.f64 z 3) y))))","(+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z))))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3))) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 y (/.f64 (pow.f64 z 3) y)))))","(+.f64 (+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z)))) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))","(+.f64 (+.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (*.f64 y y) (pow.f64 z 3))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (neg.f64 (/.f64 z (*.f64 y y))) (/.f64 1 y))","(fma.f64 -1 (/.f64 z (*.f64 y y)) (/.f64 -1 y))","(-.f64 (/.f64 -1 y) (/.f64 z (*.f64 y y)))","(*.f64 (+.f64 (/.f64 z y) 1) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 z z) (pow.f64 y 3)) (neg.f64 (/.f64 z (*.f64 y y)))) (/.f64 1 y))","(fma.f64 -1 (+.f64 (/.f64 z (*.f64 y y)) (/.f64 z (/.f64 (pow.f64 y 3) z))) (/.f64 -1 y))","(+.f64 (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (/.f64 z y))) (/.f64 -1 y))","(+.f64 (*.f64 (-.f64 -1 (/.f64 z y)) (/.f64 z (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(-.f64 (fma.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (fma.f64 -1 (/.f64 (*.f64 z z) (pow.f64 y 3)) (neg.f64 (/.f64 z (*.f64 y y))))) (/.f64 1 y))","(+.f64 (-.f64 (-.f64 (/.f64 (neg.f64 z) (*.f64 y y)) (/.f64 z (/.f64 (pow.f64 y 3) z))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (/.f64 -1 y))","(+.f64 (-.f64 (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (/.f64 z y))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (/.f64 -1 y))","(+.f64 (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y)))) (/.f64 -1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (neg.f64 (/.f64 z (*.f64 y y))) (/.f64 1 y))","(fma.f64 -1 (/.f64 z (*.f64 y y)) (/.f64 -1 y))","(-.f64 (/.f64 -1 y) (/.f64 z (*.f64 y y)))","(*.f64 (+.f64 (/.f64 z y) 1) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 z z) (pow.f64 y 3)) (neg.f64 (/.f64 z (*.f64 y y)))) (/.f64 1 y))","(fma.f64 -1 (+.f64 (/.f64 z (*.f64 y y)) (/.f64 z (/.f64 (pow.f64 y 3) z))) (/.f64 -1 y))","(+.f64 (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (/.f64 z y))) (/.f64 -1 y))","(+.f64 (*.f64 (-.f64 -1 (/.f64 z y)) (/.f64 z (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(-.f64 (fma.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (fma.f64 -1 (/.f64 (*.f64 z z) (pow.f64 y 3)) (neg.f64 (/.f64 z (*.f64 y y))))) (/.f64 1 y))","(+.f64 (-.f64 (-.f64 (/.f64 (neg.f64 z) (*.f64 y y)) (/.f64 z (/.f64 (pow.f64 y 3) z))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (/.f64 -1 y))","(+.f64 (-.f64 (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (/.f64 z y))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (/.f64 -1 y))","(+.f64 (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y)))) (/.f64 -1 y))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (+.f64 (/.f64 z (/.f64 (*.f64 y y) x)) (/.f64 x y)))","(-.f64 (neg.f64 (/.f64 x y)) (*.f64 (/.f64 z y) (/.f64 x y)))","(*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y)))","(*.f64 (-.f64 -1 (/.f64 z y)) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y))))","(-.f64 (-.f64 (neg.f64 (/.f64 x y)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x))) (*.f64 (/.f64 z y) (/.f64 x y)))","(-.f64 (/.f64 (neg.f64 x) y) (*.f64 x (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z (*.f64 y y)))))","(*.f64 (/.f64 x y) (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 4) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 x y)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x))) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 4) x))) (*.f64 (/.f64 z y) (/.f64 x y)))","(fma.f64 -1 (*.f64 x (+.f64 (*.f64 (/.f64 z (pow.f64 y 3)) z) (/.f64 (pow.f64 z 3) (pow.f64 y 4)))) (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))))","(+.f64 (*.f64 (-.f64 -1 (/.f64 z y)) (/.f64 x y)) (*.f64 x (*.f64 (*.f64 (/.f64 z (pow.f64 y 3)) z) (-.f64 -1 (/.f64 z y)))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 (*.f64 z z) x)))","(+.f64 (/.f64 x z) (*.f64 (/.f64 y z) (/.f64 x z)))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))))","(+.f64 (*.f64 (/.f64 y z) (/.f64 x z)) (+.f64 (/.f64 x z) (*.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) x)))","(+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4))))","(+.f64 (*.f64 (/.f64 y z) (/.f64 x z)) (+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) x) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x))))","(+.f64 (*.f64 (/.f64 x z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))) (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x (/.f64 x z)))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z)) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (+.f64 (/.f64 x (/.f64 z y)) x)))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 (*.f64 z z) x)))","(+.f64 (/.f64 x z) (*.f64 (/.f64 y z) (/.f64 x z)))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))))","(+.f64 (*.f64 (/.f64 y z) (/.f64 x z)) (+.f64 (/.f64 x z) (*.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) x)))","(+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4))))","(+.f64 (*.f64 (/.f64 y z) (/.f64 x z)) (+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) x) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x))))","(+.f64 (*.f64 (/.f64 x z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))) (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x (/.f64 x z)))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z)) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (+.f64 (/.f64 x (/.f64 z y)) x)))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 (*.f64 z z) x)))","(+.f64 (/.f64 x z) (*.f64 (/.f64 y z) (/.f64 x z)))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))))","(+.f64 (*.f64 (/.f64 y z) (/.f64 x z)) (+.f64 (/.f64 x z) (*.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) x)))","(+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4))))","(+.f64 (*.f64 (/.f64 y z) (/.f64 x z)) (+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) x) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x))))","(+.f64 (*.f64 (/.f64 x z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))) (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x (/.f64 x z)))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z)) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (+.f64 (/.f64 x (/.f64 z y)) x)))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (+.f64 (/.f64 z (/.f64 (*.f64 y y) x)) (/.f64 x y)))","(-.f64 (neg.f64 (/.f64 x y)) (*.f64 (/.f64 z y) (/.f64 x y)))","(*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y)))","(*.f64 (-.f64 -1 (/.f64 z y)) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y))))","(-.f64 (-.f64 (neg.f64 (/.f64 x y)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x))) (*.f64 (/.f64 z y) (/.f64 x y)))","(-.f64 (/.f64 (neg.f64 x) y) (*.f64 x (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z (*.f64 y y)))))","(*.f64 (/.f64 x y) (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 4) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 x y)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x))) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 4) x))) (*.f64 (/.f64 z y) (/.f64 x y)))","(fma.f64 -1 (*.f64 x (+.f64 (*.f64 (/.f64 z (pow.f64 y 3)) z) (/.f64 (pow.f64 z 3) (pow.f64 y 4)))) (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))))","(+.f64 (*.f64 (-.f64 -1 (/.f64 z y)) (/.f64 x y)) (*.f64 x (*.f64 (*.f64 (/.f64 z (pow.f64 y 3)) z) (-.f64 -1 (/.f64 z y)))))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (+.f64 (/.f64 z (/.f64 (*.f64 y y) x)) (/.f64 x y)))","(-.f64 (neg.f64 (/.f64 x y)) (*.f64 (/.f64 z y) (/.f64 x y)))","(*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y)))","(*.f64 (-.f64 -1 (/.f64 z y)) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y))))","(-.f64 (-.f64 (neg.f64 (/.f64 x y)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x))) (*.f64 (/.f64 z y) (/.f64 x y)))","(-.f64 (/.f64 (neg.f64 x) y) (*.f64 x (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z (*.f64 y y)))))","(*.f64 (/.f64 x y) (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 4) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 x y)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x))) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 4) x))) (*.f64 (/.f64 z y) (/.f64 x y)))","(fma.f64 -1 (*.f64 x (+.f64 (*.f64 (/.f64 z (pow.f64 y 3)) z) (/.f64 (pow.f64 z 3) (pow.f64 y 4)))) (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))))","(+.f64 (*.f64 (-.f64 -1 (/.f64 z y)) (/.f64 x y)) (*.f64 x (*.f64 (*.f64 (/.f64 z (pow.f64 y 3)) z) (-.f64 -1 (/.f64 z y)))))"]],"stop":[["node limit",1]],"time":50.405029296875,"type":"simplify"},{"compiler":[[14288,6776]],"time":112.463134765625,"type":"eval"},{"alts":[["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","fresh",38.97350952402978],["(+.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (pow.f64 (/.f64 (-.f64 z y) y) -1))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))","next",0.0846785923501602],["(/.f64 (-.f64 x y) (-.f64 z y))","done",0.015625]],"compiler":[[27,16],[34,19],[10,6],[27,16],[34,19]],"count":[[402,3]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[398,1],"picked":[1,0]}],"min-error":[0],"time":195.2958984375,"type":"prune"},{"compiler":[[115,46]],"locations":[["(/.f64 1 (-.f64 z y))",0.01953125,false],["(*.f64 (/.f64 1 (-.f64 z y)) y)",0.17578125,false],["(pow.f64 (/.f64 (-.f64 z y) y) -1)",0.22139543331341616,true],["(fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y))",51.5191962074264,false]],"time":20.14501953125,"type":"localize"},{"count":[[1,24]],"series":[["(pow.f64 (/.f64 (-.f64 z y) y) -1)","y","-inf",0.220947265625],["(pow.f64 (/.f64 (-.f64 z y) y) -1)","y","inf",0.208984375],["(pow.f64 (/.f64 (-.f64 z y) y) -1)","y","0",0.196044921875],["(pow.f64 (/.f64 (-.f64 z y) y) -1)","z","-inf",0.291015625],["(pow.f64 (/.f64 (-.f64 z y) y) -1)","z","inf",0.255126953125],["(pow.f64 (/.f64 (-.f64 z y) y) -1)","z","0",0.3369140625]],"time":1.594970703125,"type":"series"},{"count":[[1,42]],"egraph":[[2,2336,7,0.020944501],[1,160,7,0.003120167],[0,7,10,0.000209209]],"inputs":[["(pow.f64 (/.f64 (-.f64 z y) y) -1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 y (-.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 z y) -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 z y) -1) -2)) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y (-.f64 z y))) (sqrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 z y) -1) (pow.f64 (/.f64 1 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 z y) -1)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 (/.f64 z y) -1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 (/.f64 z y) -1)) -1) (pow.f64 (sqrt.f64 (+.f64 (/.f64 z y) -1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 y (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 y (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (-.f64 z y))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 z z (*.f64 y (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (+.f64 (/.f64 z y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (+.f64 (/.f64 z y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 z y) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 y) 2) (/.f64 (-.f64 z y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 y) (/.f64 (-.f64 z y) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 y (-.f64 z y))) (sqrt.f64 (+.f64 (/.f64 z y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (sqrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y 1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 z y)) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 (/.f64 z y) -1)) 2)) (cbrt.f64 (+.f64 (/.f64 z y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 z y) -1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y (-.f64 z y))))))))"]],"rules":[["egg-rr",42]],"stop":[["node limit",1]],"time":39.445068359375,"type":"rewrite"},{"count":[[66,56]],"egraph":[[4,7580,324,0.025400249],[3,1247,324,0.012902916],[2,297,366,0.002745624],[1,95,450,0.000693833],[0,33,462,0.000182291]],"inputs":[["-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(fma.f64 -1 (/.f64 z y) -1)","(-.f64 -1 (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 z z) (*.f64 y y))) (fma.f64 -1 (/.f64 z y) -1))","(fma.f64 -1 (+.f64 (/.f64 z y) (*.f64 (/.f64 z y) (/.f64 z y))) -1)","(-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y)))","(fma.f64 (/.f64 z y) (-.f64 -1 (/.f64 z y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 -1 (/.f64 z y) (neg.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) -1)","(fma.f64 -1 (*.f64 (/.f64 z y) (/.f64 z y)) (fma.f64 -1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 3) (pow.f64 y 3))) -1))","(-.f64 (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y))) (pow.f64 (/.f64 z y) 3))","(-.f64 -1 (fma.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y) (pow.f64 (/.f64 z y) 3)))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 (*.f64 y y) (*.f64 z z)))","(+.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 y z)))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))","(*.f64 (/.f64 y z) (+.f64 1 (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (+.f64 (/.f64 y z) (/.f64 (*.f64 y y) (*.f64 z z))) (/.f64 (pow.f64 y 3) (pow.f64 z 3)))","(+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (+.f64 (/.f64 y z) (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (pow.f64 (/.f64 y z) 3))","(fma.f64 (+.f64 1 (/.f64 y z)) (/.f64 y z) (pow.f64 (/.f64 y z) 3))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (+.f64 (+.f64 (/.f64 y z) (/.f64 (*.f64 y y) (*.f64 z z))) (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (/.f64 (pow.f64 y 4) (pow.f64 z 4)))","(+.f64 (+.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 y z))) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (+.f64 (pow.f64 (/.f64 y z) 3) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))","(*.f64 (fma.f64 (/.f64 y z) (/.f64 y z) 1) (*.f64 (/.f64 y z) (+.f64 1 (/.f64 y z))))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 (*.f64 y y) (*.f64 z z)))","(+.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 y z)))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))","(*.f64 (/.f64 y z) (+.f64 1 (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (+.f64 (/.f64 y z) (/.f64 (*.f64 y y) (*.f64 z z))) (/.f64 (pow.f64 y 3) (pow.f64 z 3)))","(+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (+.f64 (/.f64 y z) (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (pow.f64 (/.f64 y z) 3))","(fma.f64 (+.f64 1 (/.f64 y z)) (/.f64 y z) (pow.f64 (/.f64 y z) 3))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (+.f64 (+.f64 (/.f64 y z) (/.f64 (*.f64 y y) (*.f64 z z))) (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (/.f64 (pow.f64 y 4) (pow.f64 z 4)))","(+.f64 (+.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 y z))) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (+.f64 (pow.f64 (/.f64 y z) 3) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))","(*.f64 (fma.f64 (/.f64 y z) (/.f64 y z) 1) (*.f64 (/.f64 y z) (+.f64 1 (/.f64 y z))))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 (*.f64 y y) (*.f64 z z)))","(+.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 y z)))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))","(*.f64 (/.f64 y z) (+.f64 1 (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (+.f64 (/.f64 y z) (/.f64 (*.f64 y y) (*.f64 z z))) (/.f64 (pow.f64 y 3) (pow.f64 z 3)))","(+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (+.f64 (/.f64 y z) (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (pow.f64 (/.f64 y z) 3))","(fma.f64 (+.f64 1 (/.f64 y z)) (/.f64 y z) (pow.f64 (/.f64 y z) 3))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (+.f64 (+.f64 (/.f64 y z) (/.f64 (*.f64 y y) (*.f64 z z))) (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (/.f64 (pow.f64 y 4) (pow.f64 z 4)))","(+.f64 (+.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 y z))) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (+.f64 (pow.f64 (/.f64 y z) 3) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))","(*.f64 (fma.f64 (/.f64 y z) (/.f64 y z) 1) (*.f64 (/.f64 y z) (+.f64 1 (/.f64 y z))))","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(fma.f64 -1 (/.f64 z y) -1)","(-.f64 -1 (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 z z) (*.f64 y y))) (fma.f64 -1 (/.f64 z y) -1))","(fma.f64 -1 (+.f64 (/.f64 z y) (*.f64 (/.f64 z y) (/.f64 z y))) -1)","(-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y)))","(fma.f64 (/.f64 z y) (-.f64 -1 (/.f64 z y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 -1 (/.f64 z y) (neg.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) -1)","(fma.f64 -1 (*.f64 (/.f64 z y) (/.f64 z y)) (fma.f64 -1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 3) (pow.f64 y 3))) -1))","(-.f64 (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y))) (pow.f64 (/.f64 z y) 3))","(-.f64 -1 (fma.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y) (pow.f64 (/.f64 z y) 3)))","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(fma.f64 -1 (/.f64 z y) -1)","(-.f64 -1 (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 z z) (*.f64 y y))) (fma.f64 -1 (/.f64 z y) -1))","(fma.f64 -1 (+.f64 (/.f64 z y) (*.f64 (/.f64 z y) (/.f64 z y))) -1)","(-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y)))","(fma.f64 (/.f64 z y) (-.f64 -1 (/.f64 z y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 -1 (/.f64 z y) (neg.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) -1)","(fma.f64 -1 (*.f64 (/.f64 z y) (/.f64 z y)) (fma.f64 -1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 3) (pow.f64 y 3))) -1))","(-.f64 (-.f64 -1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y))) (pow.f64 (/.f64 z y) 3))","(-.f64 -1 (fma.f64 (+.f64 (/.f64 z y) 1) (/.f64 z y) (pow.f64 (/.f64 z y) 3)))"]],"stop":[["node limit",1]],"time":41.93994140625,"type":"simplify"},{"compiler":[[9775,4352]],"time":80.212890625,"type":"eval"},{"alts":[["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","next",38.97350952402978],["(+.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (pow.f64 (/.f64 (-.f64 z y) y) -1))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))","done",0.0846785923501602],["(/.f64 (-.f64 x y) (-.f64 z y))","done",0.015625]],"compiler":[[27,16],[34,19],[10,6],[27,16]],"count":[[279,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[276,0],"picked":[1,1]}],"min-error":[0],"time":105.9931640625,"type":"prune"},{"compiler":[[81,32]],"locations":[["(/.f64 y (-.f64 z y))",0.0078125,true],["(-.f64 (pow.f64 z 3) (pow.f64 y 3))",2.746079300811441,true],["(/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))",7.855048516210708,true],["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))",31.652879188112486,true]],"time":18.096923828125,"type":"localize"},{"count":[[4,108]],"series":[["(/.f64 y (-.f64 z y))","z","-inf",0.1640625],["(/.f64 y (-.f64 z y))","z","inf",0.163818359375],["(/.f64 y (-.f64 z y))","z","0",0.171875],["(/.f64 y (-.f64 z y))","y","-inf",0.159912109375],["(/.f64 y (-.f64 z y))","y","inf",0.178955078125],["(/.f64 y (-.f64 z y))","y","0",0.175048828125],["(-.f64 (pow.f64 z 3) (pow.f64 y 3))","y","-inf",0.863037109375],["(-.f64 (pow.f64 z 3) (pow.f64 y 3))","y","inf",0.22900390625],["(-.f64 (pow.f64 z 3) (pow.f64 y 3))","y","0",0.263916015625],["(-.f64 (pow.f64 z 3) (pow.f64 y 3))","z","-inf",0.31005859375],["(-.f64 (pow.f64 z 3) (pow.f64 y 3))","z","inf",0.265869140625],["(-.f64 (pow.f64 z 3) (pow.f64 y 3))","z","0",0.29296875],["(/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))","y","-inf",0.3759765625],["(/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))","y","inf",0.364990234375],["(/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))","y","0",0.360107421875],["(/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))","z","-inf",0.40185546875],["(/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))","z","inf",0.4521484375],["(/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))","z","0",0.43310546875],["(/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))","x","-inf",0.2529296875],["(/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))","x","inf",0.35986328125],["(/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))","x","0",0.47705078125],["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","y","-inf",0.35986328125],["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","y","inf",0.385009765625],["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","y","0",0.83203125],["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","z","-inf",0.493896484375],["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","z","inf",0.456787109375],["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","z","0",0.445068359375],["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","x","-inf",3.802001953125],["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","x","inf",0.612060546875],["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","x","0",1.126220703125]],"time":15.698974609375,"type":"series"},{"count":[[4,230]],"egraph":[[2,5461,47,0.036069666],[1,375,49,0.007275791],[0,16,65,0.000406333]],"inputs":[["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","(/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(/.f64 y (-.f64 z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 z y)) (*.f64 x (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (/.f64 1 (-.f64 z y))) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (/.f64 1 (-.f64 z y))) 1) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (/.f64 1 (-.f64 z y))) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) 0) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))) (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))) 2) (cbrt.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))) (sqrt.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (/.f64 1 (-.f64 z y))) 3) (pow.f64 (/.f64 y (-.f64 z y)) 3)) (fma.f64 (*.f64 x (/.f64 1 (-.f64 z y))) (*.f64 x (/.f64 1 (-.f64 z y))) (-.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) (*.f64 (*.f64 x (/.f64 1 (-.f64 z y))) (/.f64 y (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 x (/.f64 1 (-.f64 z y))) (*.f64 x (/.f64 1 (-.f64 z y))) (pow.f64 (/.f64 y (-.f64 z y)) 2)) (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 x (/.f64 1 (-.f64 z y)))) (exp.f64 (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 x (/.f64 1 (-.f64 z y)))) (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 y (-.f64 z y))) (exp.f64 (*.f64 x (/.f64 1 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y)))) (exp.f64 (*.f64 x (/.f64 1 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 x (/.f64 1 (-.f64 z y)))) (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (/.f64 y (-.f64 z y)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) 2) (cbrt.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (/.f64 1 (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) (sqrt.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) 1) (/.f64 (cbrt.f64 x) (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 2))) (/.f64 x (cbrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 2))) (cbrt.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 2))) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) (/.f64 x (sqrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 y (+.f64 z y) (*.f64 z z))) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (fma.f64 y (+.f64 z y) (*.f64 z z))) (/.f64 (cbrt.f64 x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (fma.f64 y (+.f64 z y) (*.f64 z z))) (/.f64 (sqrt.f64 x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (pow.f64 z 9) (pow.f64 y 9))) (+.f64 (pow.f64 z 6) (+.f64 (pow.f64 y 6) (pow.f64 (*.f64 z y) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (pow.f64 z 6) (pow.f64 y 6))) (+.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 z 3) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 z 3) (*.f64 (neg.f64 (pow.f64 y 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (fma.f64 y (+.f64 z y) (*.f64 z z))) (*.f64 (neg.f64 y) (fma.f64 y (+.f64 z y) (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) z) (*.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z y) (fma.f64 y (+.f64 z y) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 2)) (cbrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (sqrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 z 9) (pow.f64 y 9)) (/.f64 1 (+.f64 (pow.f64 z 6) (+.f64 (pow.f64 y 6) (pow.f64 (*.f64 z y) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 z 6) (pow.f64 y 6)) (/.f64 1 (+.f64 (pow.f64 z 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 z 3/2) (pow.f64 y 3/2)) (-.f64 (pow.f64 z 3/2) (pow.f64 y 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (sqrt.f64 (-.f64 z y))) (sqrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 z 6) (+.f64 (pow.f64 y 6) (pow.f64 (*.f64 z y) 3))) (-.f64 (pow.f64 z 9) (pow.f64 y 9))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 z 3) (pow.f64 y 3)) (-.f64 (pow.f64 z 6) (pow.f64 y 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 z 9) (pow.f64 y 9)) (+.f64 (pow.f64 z 6) (+.f64 (pow.f64 y 6) (pow.f64 (*.f64 z y) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 z 6) (pow.f64 y 6)) (+.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 z 9) (pow.f64 y 9))) (neg.f64 (+.f64 (pow.f64 z 6) (+.f64 (pow.f64 y 6) (pow.f64 (*.f64 z y) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 z 6) (pow.f64 y 6))) (neg.f64 (+.f64 (pow.f64 z 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 z 9) (pow.f64 (neg.f64 (pow.f64 y 3)) 3)) (+.f64 (pow.f64 z 6) (-.f64 (*.f64 (neg.f64 (pow.f64 y 3)) (neg.f64 (pow.f64 y 3))) (*.f64 (pow.f64 z 3) (neg.f64 (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 z 6) (*.f64 (neg.f64 (pow.f64 y 3)) (neg.f64 (pow.f64 y 3)))) (-.f64 (pow.f64 z 3) (neg.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 z y) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (pow.f64 z 3))) (exp.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (pow.f64 z 3)) (+.f64 1 (expm1.f64 (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (pow.f64 z 3))) (+.f64 1 (expm1.f64 (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (pow.f64 z 3))) (exp.f64 (neg.f64 (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (pow.f64 z 3)) (/.f64 1 (exp.f64 (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (pow.f64 z 3))) (/.f64 1 (exp.f64 (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 y 3))) (exp.f64 (pow.f64 z 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (pow.f64 y 3))) (exp.f64 (pow.f64 z 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 y 3))) (+.f64 1 (expm1.f64 (pow.f64 z 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (pow.f64 y 3))) (+.f64 1 (expm1.f64 (pow.f64 z 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 z z) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 z z) (*.f64 (neg.f64 (pow.f64 y 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (fma.f64 y (+.f64 z y) (*.f64 z z)) (*.f64 (neg.f64 y) (fma.f64 y (+.f64 z y) (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 z 3) 1 (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 z 3) 1 (*.f64 (neg.f64 (pow.f64 y 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (neg.f64 (*.f64 y y)) (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 1 (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 1 (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z z) z (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z z) z (*.f64 (neg.f64 (pow.f64 y 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z y) (fma.f64 y (+.f64 z y) (*.f64 z z)) (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z y) (fma.f64 y (+.f64 z y) (*.f64 z z)) (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 z 3) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 z 3) (*.f64 (neg.f64 (pow.f64 y 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (pow.f64 y 3)) (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y y) (neg.f64 y) (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (*.f64 z z)) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (*.f64 z z)) (*.f64 (neg.f64 (pow.f64 y 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 z 4)) (*.f64 (pow.f64 (cbrt.f64 z) 2) z) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 z 4)) (*.f64 (pow.f64 (cbrt.f64 z) 2) z) (*.f64 (neg.f64 (pow.f64 y 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 2)) (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 2)) (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 2)) (cbrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) 2)) (cbrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (*.f64 z z)) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (*.f64 z z)) (*.f64 (neg.f64 (pow.f64 y 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (sqrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (sqrt.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (*.f64 y y) (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) z (*.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (-.f64 z y) (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (-.f64 z y) (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 9) (pow.f64 y 9)) (/.f64 1 (+.f64 (pow.f64 z 6) (+.f64 (pow.f64 y 6) (pow.f64 (*.f64 z y) 3)))) (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 9) (pow.f64 y 9)) (/.f64 1 (+.f64 (pow.f64 z 6) (+.f64 (pow.f64 y 6) (pow.f64 (*.f64 z y) 3)))) (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 y 3) (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 6) (pow.f64 y 6)) (/.f64 1 (+.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 6) (pow.f64 y 6)) (/.f64 1 (+.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 z 3/2) (pow.f64 z 3/2) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 z 3/2) (pow.f64 z 3/2) (*.f64 (neg.f64 (pow.f64 y 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y 3/2) (neg.f64 (pow.f64 y 3/2)) (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 y 3))) (cbrt.f64 (neg.f64 (pow.f64 y 3)))) (cbrt.f64 (neg.f64 (pow.f64 y 3))) (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (pow.f64 y 3))) (sqrt.f64 (neg.f64 (pow.f64 y 3))) (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 y y)) y (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 y 3/2)) (pow.f64 y 3/2) (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 z) 3) (pow.f64 (sqrt.f64 z) 3) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 z) 3) (pow.f64 (sqrt.f64 z) 3) (*.f64 (neg.f64 (pow.f64 y 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 z 3/2) (pow.f64 y 3/2)) (-.f64 (pow.f64 z 3/2) (pow.f64 y 3/2)) (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 z 3/2) (pow.f64 y 3/2)) (-.f64 (pow.f64 z 3/2) (pow.f64 y 3/2)) (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (-.f64 z y)) (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (-.f64 z y)) (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (sqrt.f64 (-.f64 z y))) (sqrt.f64 (-.f64 z y)) (fma.f64 (neg.f64 (pow.f64 y 3)) 1 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 y (+.f64 z y) (*.f64 z z)) (sqrt.f64 (-.f64 z y))) (sqrt.f64 (-.f64 z y)) (+.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (pow.f64 z 4))) (pow.f64 (cbrt.f64 z) 2) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (pow.f64 z 4))) (pow.f64 (cbrt.f64 z) 2) (*.f64 (neg.f64 (pow.f64 y 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z z) (pow.f64 (cbrt.f64 z) 2)) (cbrt.f64 z) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z z) (pow.f64 (cbrt.f64 z) 2)) (cbrt.f64 z) (*.f64 (neg.f64 (pow.f64 y 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z z) (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z z) (sqrt.f64 z)) (sqrt.f64 z) (*.f64 (neg.f64 (pow.f64 y 3)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 y (-.f64 z y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (neg.f64 (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2) (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y (-.f64 z y))) (sqrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y (-.f64 z y))) (neg.f64 (sqrt.f64 (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (neg.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 y (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 y (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 z y)))) (sqrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 z y) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 y) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 z y) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 y) (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 2)) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 z y)))) (sqrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y (-.f64 z y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (neg.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y (-.f64 z y))) 1))))))"]],"rules":[["egg-rr",51],["egg-rr",111],["egg-rr",38],["egg-rr",30]],"stop":[["node limit",1]],"time":68.636962890625,"type":"rewrite"},{"count":[[338,315]],"egraph":[[2,2429,2455,0.017186332999999998],[1,656,2710,0.004489874],[0,205,2826,0.000971416]],"inputs":[["(*.f64 -1 (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x)","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(/.f64 (*.f64 x (+.f64 (pow.f64 z 2) (*.f64 y (+.f64 y z)))) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (*.f64 y (+.f64 y z))) x) (-.f64 (pow.f64 z 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (*.f64 y (+.f64 y z))) x) (-.f64 (pow.f64 z 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (*.f64 y (+.f64 y z))) x) (-.f64 (pow.f64 z 3) (pow.f64 y 3))))","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 4))) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 3)) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y))))))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 x z))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (/.f64 x z))))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (+.f64 (/.f64 x z) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))))) (/.f64 y z))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 y)) z))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 y)) z))) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 y)) z)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 (pow.f64 y 3))) (pow.f64 z 3))))) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 y)) z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 (pow.f64 y 3))) (pow.f64 z 3)))))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(/.f64 x z)","(+.f64 (*.f64 y (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))) (/.f64 x z))","(+.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 y (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))) (/.f64 x z)))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 1 (pow.f64 z 3)))) (+.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 y (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))) (/.f64 x z))))","1","(+.f64 1 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (/.f64 z y) (+.f64 (*.f64 -1 (/.f64 x y)) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x z) y)))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x z) y)) (*.f64 -1 (/.f64 (-.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 z 3)) (pow.f64 y 3)))))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(*.f64 -1 (/.f64 x (pow.f64 y 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (*.f64 -1 (/.f64 x (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 9)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 9) x) (pow.f64 y 12))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 9))))))","(/.f64 x (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 9))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (+.f64 (/.f64 (*.f64 (pow.f64 y 9) x) (pow.f64 z 12)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 9)))))","(/.f64 x (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 9))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (+.f64 (/.f64 (*.f64 (pow.f64 y 9) x) (pow.f64 z 12)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 9)))))","(/.f64 x (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 9))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (+.f64 (/.f64 (*.f64 (pow.f64 y 9) x) (pow.f64 z 12)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 9)))))","(*.f64 -1 (/.f64 x (pow.f64 y 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (*.f64 -1 (/.f64 x (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 9)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 9) x) (pow.f64 y 12))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 9))))))","(*.f64 -1 (/.f64 x (pow.f64 y 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (*.f64 -1 (/.f64 x (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 9)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 9) x) (pow.f64 y 12))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 9))))))","(*.f64 -1 (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(pow.f64 z 3)","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(pow.f64 z 3)","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(pow.f64 z 3)","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(*.f64 -1 (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(*.f64 -1 (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 y (-.f64 z y)))","(/.f64 (neg.f64 y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (*.f64 (+.f64 (/.f64 (*.f64 z z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(-.f64 (*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 y z))) x) (/.f64 y (-.f64 z y)))","(-.f64 (*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 (+.f64 y z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) y)) x) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (*.f64 (+.f64 (/.f64 (*.f64 z z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(-.f64 (*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 y z))) x) (/.f64 y (-.f64 z y)))","(-.f64 (*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 (+.f64 y z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) y)) x) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (*.f64 (+.f64 (/.f64 (*.f64 z z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(-.f64 (*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 y z))) x) (/.f64 y (-.f64 z y)))","(-.f64 (*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 (+.f64 y z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) y)) x) (/.f64 y (-.f64 z y)))","(*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x)","(*.f64 (+.f64 (/.f64 (*.f64 z z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x)","(*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 y z))) x)","(*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 (+.f64 y z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) y)) x)","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (*.f64 (+.f64 (/.f64 (*.f64 z z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(-.f64 (*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 y z))) x) (/.f64 y (-.f64 z y)))","(-.f64 (*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 (+.f64 y z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) y)) x) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (*.f64 (+.f64 (/.f64 (*.f64 z z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(-.f64 (*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 y z))) x) (/.f64 y (-.f64 z y)))","(-.f64 (*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 (+.f64 y z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) y)) x) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (*.f64 (+.f64 (/.f64 (pow.f64 z 2) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (*.f64 (+.f64 (/.f64 (*.f64 z z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 y (+.f64 y z)) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))) x))","(-.f64 (*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 y z))) x) (/.f64 y (-.f64 z y)))","(-.f64 (*.f64 (+.f64 (/.f64 z (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) z)) (*.f64 (/.f64 (+.f64 y z) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) y)) x) (/.f64 y (-.f64 z y)))","(/.f64 (*.f64 x (+.f64 (pow.f64 z 2) (*.f64 y (+.f64 y z)))) (-.f64 (pow.f64 z 3) (pow.f64 y 3)))","(/.f64 (+.f64 (*.f64 z z) (*.f64 y (+.f64 y z))) (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) x))","(*.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (*.f64 y (+.f64 y z))) x) (-.f64 (pow.f64 z 3) (pow.f64 y 3))))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 (+.f64 (*.f64 z z) (*.f64 y (+.f64 y z))) (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) x)))","(-.f64 (*.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (*.f64 y (+.f64 y z))) x) (-.f64 (pow.f64 z 3) (pow.f64 y 3))))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 (+.f64 (*.f64 z z) (*.f64 y (+.f64 y z))) (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) x)))","(-.f64 (*.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (*.f64 y (+.f64 y z))) x) (-.f64 (pow.f64 z 3) (pow.f64 y 3))))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 (+.f64 (*.f64 z z) (*.f64 y (+.f64 y z))) (/.f64 (-.f64 (pow.f64 z 3) (pow.f64 y 3)) x)))","(-.f64 (*.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 z y)))","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 1 (/.f64 (neg.f64 x) y))","(-.f64 1 (/.f64 x y))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(fma.f64 (+.f64 (/.f64 1 y) (/.f64 (neg.f64 x) (*.f64 y y))) z (+.f64 1 (/.f64 (neg.f64 x) y)))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (-.f64 1 (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 (+.f64 (/.f64 1 y) (/.f64 (neg.f64 x) (*.f64 y y))) z (+.f64 1 (fma.f64 (*.f64 z z) (fma.f64 -1 (/.f64 x (pow.f64 y 3)) (/.f64 1 (*.f64 y y))) (/.f64 (neg.f64 x) y))))","(+.f64 (fma.f64 (*.f64 z z) (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3))) (/.f64 (neg.f64 x) y)) (fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) 1))","(+.f64 (fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (-.f64 1 (/.f64 x y))) (*.f64 (/.f64 (*.f64 z z) (*.f64 y y)) (-.f64 1 (/.f64 x y))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 4))) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 3)) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y))))))","(fma.f64 (+.f64 (/.f64 1 y) (/.f64 (neg.f64 x) (*.f64 y y))) z (+.f64 1 (fma.f64 (fma.f64 -1 (/.f64 x (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 3) (fma.f64 (*.f64 z z) (fma.f64 -1 (/.f64 x (pow.f64 y 3)) (/.f64 1 (*.f64 y y))) (/.f64 (neg.f64 x) y)))))","(+.f64 (fma.f64 (pow.f64 z 3) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 x (pow.f64 y 4))) (fma.f64 (*.f64 z z) (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3))) (/.f64 (neg.f64 x) y))) (fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) 1))","(+.f64 (-.f64 (fma.f64 (pow.f64 z 3) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 x (pow.f64 y 4))) (*.f64 (/.f64 (*.f64 z z) (*.f64 y y)) (-.f64 1 (/.f64 x y)))) (/.f64 x y)) (fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) 1))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 x z))) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (-.f64 (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 x z)) (/.f64 y z)))","(+.f64 (-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (*.f64 (/.f64 y z) (/.f64 y z))) (/.f64 (-.f64 x y) z))","(+.f64 (*.f64 (/.f64 y z) (/.f64 (-.f64 x y) z)) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (/.f64 x z))))) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (-.f64 (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z z)) (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x)) (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (/.f64 x z)))) (/.f64 y z)))","(+.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (-.f64 (+.f64 (-.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) x) (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (-.f64 (/.f64 x z) (*.f64 (/.f64 y z) (/.f64 y z)))) (/.f64 y z)))","(+.f64 (*.f64 (/.f64 y z) (/.f64 (-.f64 x y) z)) (-.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y (*.f64 y (-.f64 x y))) (pow.f64 z 3))) (/.f64 y z)))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (+.f64 (/.f64 x z) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (+.f64 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) x)) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z z)) (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x)) (+.f64 (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (/.f64 x z)) (neg.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)))))))) (/.f64 y z))","(+.f64 (+.f64 (+.f64 (-.f64 (/.f64 x z) (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (-.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) x) (/.f64 (pow.f64 y 3) (pow.f64 z 3)))) (-.f64 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x) (*.f64 (/.f64 y z) (/.f64 y z)))) (-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (/.f64 y z)))","(+.f64 (+.f64 (+.f64 (-.f64 (/.f64 x z) (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 (*.f64 y (*.f64 y (-.f64 x y))) (pow.f64 z 3))) (-.f64 (*.f64 (pow.f64 y 3) (/.f64 x (pow.f64 z 4))) (*.f64 (/.f64 y z) (/.f64 y z)))) (*.f64 (/.f64 y z) (+.f64 (/.f64 x z) -1)))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 y)) z))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 y)) z))) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (neg.f64 (/.f64 (*.f64 -1 (-.f64 x y)) z))) (/.f64 (*.f64 y y) (*.f64 z z)))","(-.f64 (-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (/.f64 (fma.f64 -1 x y) z)) (*.f64 (/.f64 y z) (/.f64 y z)))","(+.f64 (/.f64 (-.f64 x y) z) (*.f64 (/.f64 y z) (/.f64 (-.f64 x y) z)))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 y)) z)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 (pow.f64 y 3))) (pow.f64 z 3))))) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (-.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 -1 (-.f64 x y)) z) (/.f64 (*.f64 -1 (-.f64 (*.f64 x (*.f64 y y)) (pow.f64 y 3))) (pow.f64 z 3)))) (/.f64 (*.f64 y y) (*.f64 z z))))","(-.f64 (-.f64 (-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (/.f64 (fma.f64 -1 x y) z)) (/.f64 (neg.f64 (*.f64 (*.f64 y y) (-.f64 x y))) (pow.f64 z 3))) (*.f64 (/.f64 y z) (/.f64 y z)))","(+.f64 (+.f64 (/.f64 (-.f64 x y) z) (/.f64 (*.f64 y (*.f64 y (-.f64 x y))) (pow.f64 z 3))) (*.f64 (/.f64 y z) (/.f64 (-.f64 x y) z)))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 y)) z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 (pow.f64 y 3))) (pow.f64 z 3)))))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (-.f64 (fma.f64 -1 (/.f64 (*.f64 -1 (-.f64 x y)) z) (+.f64 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) x)) (neg.f64 (/.f64 (*.f64 -1 (-.f64 (*.f64 x (*.f64 y y)) (pow.f64 y 3))) (pow.f64 z 3))))) (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 (pow.f64 y 4) (pow.f64 z 4)))))","(+.f64 (-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (/.f64 (fma.f64 -1 x y) z)) (-.f64 (-.f64 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x) (/.f64 (neg.f64 (*.f64 (*.f64 y y) (-.f64 x y))) (pow.f64 z 3))) (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 (pow.f64 y 4) (pow.f64 z 4)))))","(-.f64 (+.f64 (fma.f64 (/.f64 x z) (/.f64 y z) (/.f64 (-.f64 x y) z)) (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x (/.f64 (*.f64 y (*.f64 y (-.f64 x y))) (pow.f64 z 3)))) (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))","(/.f64 x z)","(+.f64 (*.f64 y (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))) (/.f64 x z))","(fma.f64 y (-.f64 (/.f64 x (*.f64 z z)) (/.f64 1 z)) (/.f64 x z))","(fma.f64 y (+.f64 (/.f64 x (*.f64 z z)) (/.f64 -1 z)) (/.f64 x z))","(+.f64 (/.f64 x z) (*.f64 (/.f64 y z) (+.f64 (/.f64 x z) -1)))","(+.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 y (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))) (/.f64 x z)))","(fma.f64 (*.f64 y y) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (*.f64 z z))) (fma.f64 y (-.f64 (/.f64 x (*.f64 z z)) (/.f64 1 z)) (/.f64 x z)))","(fma.f64 (*.f64 y y) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 -1 (*.f64 z z))) (fma.f64 y (+.f64 (/.f64 x (*.f64 z z)) (/.f64 -1 z)) (/.f64 x z)))","(+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 y z) (+.f64 (/.f64 x z) -1)) (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (+.f64 (/.f64 x z) -1))))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 1 (pow.f64 z 3)))) (+.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 y (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))) (/.f64 x z))))","(fma.f64 (pow.f64 y 3) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 1 (pow.f64 z 3))) (fma.f64 (*.f64 y y) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (*.f64 z z))) (fma.f64 y (-.f64 (/.f64 x (*.f64 z z)) (/.f64 1 z)) (/.f64 x z))))","(fma.f64 (pow.f64 y 3) (+.f64 (/.f64 x (pow.f64 z 4)) (/.f64 -1 (pow.f64 z 3))) (fma.f64 (*.f64 y y) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 -1 (*.f64 z z))) (fma.f64 y (+.f64 (/.f64 x (*.f64 z z)) (/.f64 -1 z)) (/.f64 x z))))","(+.f64 (+.f64 (/.f64 x z) (*.f64 (/.f64 y z) (+.f64 (/.f64 x z) -1))) (fma.f64 (pow.f64 y 3) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 1 (pow.f64 z 3))) (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (+.f64 (/.f64 x z) -1))))","1","(+.f64 1 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y))))","(+.f64 1 (+.f64 (/.f64 (neg.f64 x) y) (/.f64 z y)))","(+.f64 (-.f64 1 (/.f64 x y)) (/.f64 z y))","(+.f64 1 (-.f64 (/.f64 z y) (/.f64 x y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (/.f64 z y) (+.f64 (*.f64 -1 (/.f64 x y)) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))))","(+.f64 1 (fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (+.f64 (/.f64 z y) (fma.f64 -1 (/.f64 x y) (/.f64 (*.f64 z z) (*.f64 y y))))))","(+.f64 (+.f64 (/.f64 z y) (-.f64 (/.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x y))) (-.f64 1 (/.f64 z (/.f64 (*.f64 y y) x))))","(+.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 z y)) (/.f64 z y)) (/.f64 x y)) (-.f64 1 (*.f64 (/.f64 x y) (/.f64 z y))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))))))","(+.f64 1 (fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (fma.f64 -1 (/.f64 x y) (fma.f64 -1 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 (*.f64 z z) (*.f64 y y))))))))","(+.f64 (+.f64 (fma.f64 (*.f64 z z) (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3))) (/.f64 (neg.f64 x) y)) (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 3) (pow.f64 y 3)))) (-.f64 1 (/.f64 z (/.f64 (*.f64 y y) x))))","(+.f64 (+.f64 (+.f64 (/.f64 z y) (-.f64 (pow.f64 (/.f64 z y) 3) (/.f64 x y))) (*.f64 (/.f64 (*.f64 z z) (*.f64 y y)) (-.f64 1 (/.f64 x y)))) (-.f64 1 (*.f64 (/.f64 x y) (/.f64 z y))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y)))","(+.f64 1 (neg.f64 (/.f64 (-.f64 x z) y)))","(-.f64 1 (/.f64 (-.f64 x z) y))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x z) y)))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(-.f64 (+.f64 1 (fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (neg.f64 (/.f64 (-.f64 x z) y)))) (neg.f64 (/.f64 (*.f64 z z) (*.f64 y y))))","(+.f64 (/.f64 (*.f64 z z) (*.f64 y y)) (-.f64 (-.f64 1 (/.f64 z (/.f64 (*.f64 y y) x))) (/.f64 (-.f64 x z) y)))","(+.f64 (/.f64 (*.f64 z z) (*.f64 y y)) (-.f64 1 (+.f64 (*.f64 (/.f64 x y) (/.f64 z y)) (/.f64 (-.f64 x z) y))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x z) y)) (*.f64 -1 (/.f64 (-.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 z 3)) (pow.f64 y 3)))))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(-.f64 (+.f64 1 (fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (-.f64 x z) y) (neg.f64 (/.f64 (fma.f64 (*.f64 z z) x (neg.f64 (pow.f64 z 3))) (pow.f64 y 3)))))) (neg.f64 (/.f64 (*.f64 z z) (*.f64 y y))))","(+.f64 (/.f64 (*.f64 z z) (*.f64 y y)) (+.f64 (-.f64 (/.f64 (neg.f64 (-.f64 x z)) y) (/.f64 (*.f64 (*.f64 z z) (-.f64 x z)) (pow.f64 y 3))) (-.f64 1 (/.f64 z (/.f64 (*.f64 y y) x)))))","(+.f64 (/.f64 (*.f64 z z) (*.f64 y y)) (-.f64 (-.f64 1 (+.f64 (*.f64 (/.f64 x y) (/.f64 z y)) (/.f64 (-.f64 x z) y))) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) (-.f64 x z)))))","(*.f64 -1 (/.f64 x (pow.f64 y 3)))","(/.f64 (neg.f64 x) (pow.f64 y 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (*.f64 -1 (/.f64 x (pow.f64 y 3))))","(fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)) (/.f64 (neg.f64 x) (pow.f64 y 3)))","(-.f64 (/.f64 (neg.f64 x) (pow.f64 y 3)) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)))","(*.f64 (/.f64 x (pow.f64 y 3)) (-.f64 -1 (pow.f64 (/.f64 z y) 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 9)))))","(fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)) (*.f64 -1 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 9) x)))))","(-.f64 (-.f64 (/.f64 (neg.f64 x) (pow.f64 y 3)) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x))) (*.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 9)) x))","(-.f64 (*.f64 (/.f64 x (pow.f64 y 3)) (-.f64 -1 (pow.f64 (/.f64 z y) 3))) (*.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 9)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 9) x) (pow.f64 y 12))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 9))))))","(fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)) (fma.f64 -1 (/.f64 x (pow.f64 y 3)) (fma.f64 -1 (/.f64 (pow.f64 z 9) (/.f64 (pow.f64 y 12) x)) (neg.f64 (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 9) x))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 x) (pow.f64 z 6)) (pow.f64 y 9)) (/.f64 x (/.f64 (pow.f64 y 12) (pow.f64 z 9)))) (/.f64 x (pow.f64 y 3))) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)))","(-.f64 (*.f64 (/.f64 x (pow.f64 y 3)) (-.f64 -1 (pow.f64 (/.f64 z y) 3))) (*.f64 x (+.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 9)) (/.f64 (pow.f64 z 9) (pow.f64 y 12)))))","(/.f64 x (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 6) x)))","(+.f64 (/.f64 x (pow.f64 z 3)) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 6)) x))","(*.f64 (+.f64 (pow.f64 (/.f64 y z) 3) 1) (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 9))))","(+.f64 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 6) x)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 z 9) x))))","(+.f64 (/.f64 x (pow.f64 z 3)) (+.f64 (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 9)) x) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 6)) x)))","(+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 y z) 3) 1) (/.f64 x (pow.f64 z 3))) (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 9)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (+.f64 (/.f64 (*.f64 (pow.f64 y 9) x) (pow.f64 z 12)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 9)))))","(+.f64 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 6) x)) (+.f64 (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 z 9) x))) (/.f64 (pow.f64 y 9) (/.f64 (pow.f64 z 12) x))))","(+.f64 (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 y 9) (/.f64 (pow.f64 z 12) x))) (+.f64 (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 9)) x) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 6)) x)))","(+.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 y z) 3) 1) (/.f64 x (pow.f64 z 3))) (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 9)) x)) (*.f64 (/.f64 x (pow.f64 z 12)) (pow.f64 y 9)))","(/.f64 x (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 6) x)))","(+.f64 (/.f64 x (pow.f64 z 3)) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 6)) x))","(*.f64 (+.f64 (pow.f64 (/.f64 y z) 3) 1) (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 9))))","(+.f64 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 6) x)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 z 9) x))))","(+.f64 (/.f64 x (pow.f64 z 3)) (+.f64 (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 9)) x) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 6)) x)))","(+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 y z) 3) 1) (/.f64 x (pow.f64 z 3))) (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 9)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (+.f64 (/.f64 (*.f64 (pow.f64 y 9) x) (pow.f64 z 12)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 9)))))","(+.f64 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 6) x)) (+.f64 (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 z 9) x))) (/.f64 (pow.f64 y 9) (/.f64 (pow.f64 z 12) x))))","(+.f64 (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 y 9) (/.f64 (pow.f64 z 12) x))) (+.f64 (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 9)) x) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 6)) x)))","(+.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 y z) 3) 1) (/.f64 x (pow.f64 z 3))) (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 9)) x)) (*.f64 (/.f64 x (pow.f64 z 12)) (pow.f64 y 9)))","(/.f64 x (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 6) x)))","(+.f64 (/.f64 x (pow.f64 z 3)) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 6)) x))","(*.f64 (+.f64 (pow.f64 (/.f64 y z) 3) 1) (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 9))))","(+.f64 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 6) x)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 z 9) x))))","(+.f64 (/.f64 x (pow.f64 z 3)) (+.f64 (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 9)) x) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 6)) x)))","(+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 y z) 3) 1) (/.f64 x (pow.f64 z 3))) (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 9)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 6)) (+.f64 (/.f64 (*.f64 (pow.f64 y 9) x) (pow.f64 z 12)) (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 9)))))","(+.f64 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 6) x)) (+.f64 (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 z 9) x))) (/.f64 (pow.f64 y 9) (/.f64 (pow.f64 z 12) x))))","(+.f64 (+.f64 (/.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 y 9) (/.f64 (pow.f64 z 12) x))) (+.f64 (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 9)) x) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 6)) x)))","(+.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 y z) 3) 1) (/.f64 x (pow.f64 z 3))) (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 9)) x)) (*.f64 (/.f64 x (pow.f64 z 12)) (pow.f64 y 9)))","(*.f64 -1 (/.f64 x (pow.f64 y 3)))","(/.f64 (neg.f64 x) (pow.f64 y 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (*.f64 -1 (/.f64 x (pow.f64 y 3))))","(fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)) (/.f64 (neg.f64 x) (pow.f64 y 3)))","(-.f64 (/.f64 (neg.f64 x) (pow.f64 y 3)) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)))","(*.f64 (/.f64 x (pow.f64 y 3)) (-.f64 -1 (pow.f64 (/.f64 z y) 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 9)))))","(fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)) (*.f64 -1 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 9) x)))))","(-.f64 (-.f64 (/.f64 (neg.f64 x) (pow.f64 y 3)) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x))) (*.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 9)) x))","(-.f64 (*.f64 (/.f64 x (pow.f64 y 3)) (-.f64 -1 (pow.f64 (/.f64 z y) 3))) (*.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 9)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 9) x) (pow.f64 y 12))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 9))))))","(fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)) (fma.f64 -1 (/.f64 x (pow.f64 y 3)) (fma.f64 -1 (/.f64 (pow.f64 z 9) (/.f64 (pow.f64 y 12) x)) (neg.f64 (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 9) x))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 x) (pow.f64 z 6)) (pow.f64 y 9)) (/.f64 x (/.f64 (pow.f64 y 12) (pow.f64 z 9)))) (/.f64 x (pow.f64 y 3))) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)))","(-.f64 (*.f64 (/.f64 x (pow.f64 y 3)) (-.f64 -1 (pow.f64 (/.f64 z y) 3))) (*.f64 x (+.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 9)) (/.f64 (pow.f64 z 9) (pow.f64 y 12)))))","(*.f64 -1 (/.f64 x (pow.f64 y 3)))","(/.f64 (neg.f64 x) (pow.f64 y 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (*.f64 -1 (/.f64 x (pow.f64 y 3))))","(fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)) (/.f64 (neg.f64 x) (pow.f64 y 3)))","(-.f64 (/.f64 (neg.f64 x) (pow.f64 y 3)) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)))","(*.f64 (/.f64 x (pow.f64 y 3)) (-.f64 -1 (pow.f64 (/.f64 z y) 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 9)))))","(fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)) (*.f64 -1 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 9) x)))))","(-.f64 (-.f64 (/.f64 (neg.f64 x) (pow.f64 y 3)) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x))) (*.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 9)) x))","(-.f64 (*.f64 (/.f64 x (pow.f64 y 3)) (-.f64 -1 (pow.f64 (/.f64 z y) 3))) (*.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 9)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 9) x) (pow.f64 y 12))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 9))))))","(fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)) (fma.f64 -1 (/.f64 x (pow.f64 y 3)) (fma.f64 -1 (/.f64 (pow.f64 z 9) (/.f64 (pow.f64 y 12) x)) (neg.f64 (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 9) x))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 x) (pow.f64 z 6)) (pow.f64 y 9)) (/.f64 x (/.f64 (pow.f64 y 12) (pow.f64 z 9)))) (/.f64 x (pow.f64 y 3))) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 6) x)))","(-.f64 (*.f64 (/.f64 x (pow.f64 y 3)) (-.f64 -1 (pow.f64 (/.f64 z y) 3))) (*.f64 x (+.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 9)) (/.f64 (pow.f64 z 9) (pow.f64 y 12)))))","(*.f64 -1 (pow.f64 y 3))","(neg.f64 (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(pow.f64 z 3)","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(pow.f64 z 3)","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(pow.f64 z 3)","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(*.f64 -1 (pow.f64 y 3))","(neg.f64 (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(*.f64 -1 (pow.f64 y 3))","(neg.f64 (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(+.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 z 3))","(-.f64 (pow.f64 z 3) (pow.f64 y 3))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z))","(+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z)))","(+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (+.f64 (/.f64 y z) (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (pow.f64 (/.f64 y z) 3) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z))))","(+.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))","(+.f64 (pow.f64 (/.f64 y z) 3) (+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(fma.f64 -1 (/.f64 z y) -1)","(-.f64 -1 (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(+.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (*.f64 y y)) (/.f64 z y))) -1)","(fma.f64 -1 (+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y))) -1)","(+.f64 -1 (*.f64 (/.f64 z y) (-.f64 -1 (/.f64 z y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 -1 (/.f64 z y) (neg.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) -1)","(+.f64 -1 (-.f64 (neg.f64 (+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y)))) (/.f64 (pow.f64 z 3) (pow.f64 y 3))))","(+.f64 -1 (-.f64 (*.f64 (/.f64 z y) (-.f64 -1 (/.f64 z y))) (pow.f64 (/.f64 z y) 3)))","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(fma.f64 -1 (/.f64 z y) -1)","(-.f64 -1 (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(+.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (*.f64 y y)) (/.f64 z y))) -1)","(fma.f64 -1 (+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y))) -1)","(+.f64 -1 (*.f64 (/.f64 z y) (-.f64 -1 (/.f64 z y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 -1 (/.f64 z y) (neg.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) -1)","(+.f64 -1 (-.f64 (neg.f64 (+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y)))) (/.f64 (pow.f64 z 3) (pow.f64 y 3))))","(+.f64 -1 (-.f64 (*.f64 (/.f64 z y) (-.f64 -1 (/.f64 z y))) (pow.f64 (/.f64 z y) 3)))","-1","(-.f64 (*.f64 -1 (/.f64 z y)) 1)","(fma.f64 -1 (/.f64 z y) -1)","(-.f64 -1 (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))) 1)","(+.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (*.f64 y y)) (/.f64 z y))) -1)","(fma.f64 -1 (+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y))) -1)","(+.f64 -1 (*.f64 (/.f64 z y) (-.f64 -1 (/.f64 z y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 -1 (/.f64 z y) (neg.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))) -1)","(+.f64 -1 (-.f64 (neg.f64 (+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y)))) (/.f64 (pow.f64 z 3) (pow.f64 y 3))))","(+.f64 -1 (-.f64 (*.f64 (/.f64 z y) (-.f64 -1 (/.f64 z y))) (pow.f64 (/.f64 z y) 3)))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z))","(+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z)))","(+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (+.f64 (/.f64 y z) (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (pow.f64 (/.f64 y z) 3) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z))))","(+.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))","(+.f64 (pow.f64 (/.f64 y z) 3) (+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))","(/.f64 y z)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z))","(+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z)))","(+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (+.f64 (/.f64 y z) (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (pow.f64 (/.f64 y z) 3) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 y z))))","(+.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (/.f64 y z)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))","(+.f64 (pow.f64 (/.f64 y z) 3) (+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y z)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))))"]],"stop":[["node limit",1]],"time":52.26513671875,"type":"simplify"},{"compiler":[[9425,3786]],"time":71.343017578125,"type":"eval"},{"alts":[["(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","done",38.97350952402978],["(+.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (pow.f64 (/.f64 (-.f64 z y) y) -1))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))","done",0.0846785923501602],["(/.f64 (-.f64 x y) (-.f64 z y))","done",0.015625]],"compiler":[[27,16],[34,19],[10,6]],"count":[[318,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[315,0],"picked":[1,1]}],"min-error":[0],"time":84.8779296875,"type":"prune"},{"accuracy":[0.015625],"baseline":[0.015625],"branch":[["x",0.015625,1],["y",0.015625,1],["z",0.015625,1],["(/.f64 (-.f64 x y) (-.f64 z y))",0.015625,1]],"compiler":[[4,3],[4,3],[4,3],[10,6],[163,73]],"count":[[5,1]],"inputs":[["(+.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (pow.f64 (/.f64 (-.f64 z y) y) -1))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))","(+.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))","(+.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))","(fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))","(/.f64 (-.f64 x y) (-.f64 z y))"]],"link":["."],"name":["Graphics.Rasterific.Shading:$sgradientColorAt from Rasterific-0.6.1"],"oracle":[39.054583303335114],"outputs":[["(/.f64 (-.f64 x y) (-.f64 z y))"]],"time":17.001953125,"times":[["x",3.676025390625],["y",3.68798828125],["z",3.847900390625],["(/.f64 (-.f64 x y) (-.f64 z y))",3.383056640625]],"type":"regimes"},{"compiler":[[10,6]],"egraph":[[4,19,10,9.8335e-5],[3,18,10,7.8876e-5],[2,16,10,5.9126e-5],[1,10,10,3.9584e-5],[0,7,10,1.7042e-5]],"inputs":[["(/.f64 (-.f64 x y) (-.f64 z y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 x y) (-.f64 z y))"]],"stop":[["done",1],["saturated",1]],"time":8.60302734375,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[10,6]],"remove-preprocessing":[[]],"time":7.59716796875,"type":"end"}]