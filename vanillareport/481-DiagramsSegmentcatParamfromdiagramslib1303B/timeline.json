[{"compiler":[[10,7]],"method":["search"],"sampling":[[12,0.6887799953110516,0.09170725150033832,0.21951275318861008],[11,0.6595117235556245,0.12097552325576544,0.21951275318861008],[10,0.6321946699172258,0.17951206676661968,0.18829326331615448],[9,0.5775605626404285,0.23414617404341698,0.18829326331615448],[8,0.5307313278317451,0.34341438859701157,0.1258542835712433],[7,0.43707285821437836,0.43707285821437836,0.1258542835712433],[6,0.37463387846946716,0.6243897974491119,0.0009763240814208984],[5,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":22.880126953125,"type":"analyze"},{"outcomes":[["body",256,"invalid",11.463134765625,356],["body",256,"valid",267.824951171875,8256]],"time":286.97998046875,"type":"sample"},{"compiler":[[9,6]],"egraph":[[0,2,2,1.375e-6],[4,86,20,0.000613374],[3,86,20,0.00046454099999999996],[2,52,20,0.000302249],[1,24,20,0.000138124],[0,10,20,5.4458e-5]],"inputs":[["0","1"],["(*.f64 (*.f64 (*.f64 x 3) y) y)","(*.f64 (*.f64 (*.f64 y 3) x) x)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (*.f64 (*.f64 x 3) y) y)","(*.f64 (*.f64 x 3) (*.f64 y y))","(*.f64 x (*.f64 3 (*.f64 y y)))","(*.f64 3 (*.f64 (*.f64 x y) y))","(*.f64 3 (*.f64 y (*.f64 x y)))","(*.f64 (*.f64 (*.f64 y 3) x) x)","(*.f64 x (*.f64 (*.f64 x 3) y))","(*.f64 x (*.f64 3 (*.f64 x y)))","(*.f64 3 (*.f64 y (*.f64 x x)))","(*.f64 3 (*.f64 x (*.f64 x y)))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":23.671875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[4,46,10,0.000383583],[3,46,10,0.000288833],[2,29,10,0.000188041],[1,14,10,9.641599999999999e-5],[0,7,10,3.8541e-5]],"inputs":[["(*.f64 (*.f64 (*.f64 x 3) y) y)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 (*.f64 x 3) y) y)","(*.f64 (*.f64 x 3) (*.f64 y y))","(*.f64 x (*.f64 3 (*.f64 y y)))"]],"stop":[["saturated",1]],"time":10.64013671875,"type":"simplify"},{"compiler":[[16,10]],"time":0.2919921875,"type":"eval"},{"alts":[["(*.f64 x (*.f64 3 (*.f64 y y)))","fresh",9.360772780771548],["(*.f64 (*.f64 (*.f64 x 3) y) y)","next",0.26009750976844204]],"compiler":[[9,6],[9,6],[9,6],[9,6]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.140625],"time":1.174072265625,"type":"prune"},{"compiler":[[20,12]],"locations":[["(*.f64 (*.f64 (*.f64 x 3) y) y)",0.18359375,true],["(*.f64 (*.f64 x 3) y)",0.19140625,true]],"time":4.66796875,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (*.f64 (*.f64 x 3) y) y)","y","-inf",0.169921875],["(*.f64 (*.f64 (*.f64 x 3) y) y)","y","inf",0.37109375],["(*.f64 (*.f64 (*.f64 x 3) y) y)","y","0",0.4130859375],["(*.f64 (*.f64 (*.f64 x 3) y) y)","x","-inf",0.27197265625],["(*.f64 (*.f64 (*.f64 x 3) y) y)","x","inf",0.77783203125],["(*.f64 (*.f64 (*.f64 x 3) y) y)","x","0",0.629150390625],["(*.f64 (*.f64 x 3) y)","y","-inf",0.244873046875],["(*.f64 (*.f64 x 3) y)","y","inf",0.421142578125],["(*.f64 (*.f64 x 3) y)","y","0",0.630126953125],["(*.f64 (*.f64 x 3) y)","x","-inf",0.263916015625],["(*.f64 (*.f64 x 3) y)","x","inf",0.530029296875],["(*.f64 (*.f64 x 3) y)","x","0",0.5087890625]],"time":5.3740234375,"type":"series"},{"count":[[2,26]],"egraph":[[2,1670,17,0.016843292],[1,142,17,0.0023315840000000003],[0,7,17,0.000190084]],"inputs":[["(*.f64 (*.f64 x 3) y)","(*.f64 (*.f64 (*.f64 x 3) y) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 3 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 3 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (*.f64 3 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (*.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 x 3) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 x 3) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 3 y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 3 (*.f64 y y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 3 (*.f64 y y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 3 (*.f64 y y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 (*.f64 y y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (*.f64 x 3)) y) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 3 (*.f64 y y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 x) 3) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 3 (*.f64 y y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 x (*.f64 3 y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 3 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 3 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 3 (*.f64 y y)))))))))"]],"rules":[["egg-rr",13],["egg-rr",13]],"stop":[["node limit",1]],"time":35.93994140625,"type":"rewrite"},{"count":[[74,30]],"egraph":[[22,6564,408,0.109009751],[21,6530,408,0.092222793],[20,6456,408,0.084047876],[19,6148,408,0.075406251],[18,5838,408,0.06722887599999999],[17,5416,408,0.059770292999999995],[16,4556,408,0.051815835],[15,3850,408,0.043219793],[14,3267,408,0.03619846],[13,2808,408,0.030239418000000004],[12,2438,408,0.025281210000000002],[11,2123,408,0.020815835],[10,1880,408,0.017044168000000002],[9,1708,408,0.013568252000000001],[8,1573,408,0.010760543000000001],[7,1473,408,0.008333376],[6,1059,408,0.005813376],[5,820,408,0.003771751],[4,245,408,0.002016876],[3,84,408,0.0008026680000000001],[2,45,408,0.000417001],[1,23,408,0.000221293],[0,10,408,8.8459e-5]],"inputs":[["(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))"]],"stop":[["node limit",1]],"time":137.576904296875,"type":"simplify"},{"compiler":[[290,192]],"time":4.3759765625,"type":"eval"},{"alts":[["(pow.f64 (*.f64 (sqrt.f64 (*.f64 x 3)) y) 2)","fresh",31.514743896526635],["(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)","next",0.2109375],["(*.f64 (*.f64 3 (*.f64 y x)) y)","fresh",0.27962875976844204],["(*.f64 x (*.f64 3 (*.f64 y y)))","fresh",9.360772780771548],["(*.f64 3 (*.f64 (pow.f64 y 2) x))","fresh",9.377061550308433],["(*.f64 (*.f64 (*.f64 x 3) y) y)","done",0.26009750976844204]],"compiler":[[10,8],[11,8],[9,6],[9,6],[9,7],[9,6],[10,8],[11,8],[9,6],[9,6],[9,7]],"count":[[32,6]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[30,4],"picked":[1,1]}],"min-error":[0.01953125],"time":6.01904296875,"type":"prune"},{"compiler":[[30,20]],"locations":[["(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)",0.18359375,true],["(*.f64 x (*.f64 3 y))",0.203125,true]],"time":7.027099609375,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)","y","-inf",0.15283203125],["(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)","y","inf",0.18701171875],["(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)","y","0",0.31103515625],["(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)","x","-inf",0.157958984375],["(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)","x","inf",0.18505859375],["(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)","x","0",0.178955078125],["(*.f64 x (*.f64 3 y))","y","-inf",0.175048828125],["(*.f64 x (*.f64 3 y))","y","inf",0.148193359375],["(*.f64 x (*.f64 3 y))","y","0",0.13916015625],["(*.f64 x (*.f64 3 y))","x","-inf",0.175048828125],["(*.f64 x (*.f64 3 y))","x","inf",0.1640625],["(*.f64 x (*.f64 3 y))","x","0",0.18603515625]],"time":2.2919921875,"type":"series"},{"count":[[2,27]],"egraph":[[2,1806,17,0.017177375],[1,166,17,0.00261525],[0,9,17,0.000248917]],"inputs":[["(*.f64 x (*.f64 3 y))","(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 y (*.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (*.f64 x 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (*.f64 x 3)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (*.f64 x 3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 x 3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 y (*.f64 x 3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 y (*.f64 x 3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (*.f64 x 3)) y))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (*.f64 x 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (*.f64 3 y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 3 y) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (*.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (*.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (*.f64 x 3))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 y (*.f64 y (*.f64 x 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (*.f64 y (*.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (*.f64 y (*.f64 x 3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 y (*.f64 x 3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 y (*.f64 y (*.f64 x 3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 y (*.f64 y (*.f64 x 3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 x 3)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (*.f64 y (*.f64 x 3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 y (*.f64 x 3)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 y (*.f64 x 3)) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (*.f64 y (*.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (*.f64 y (*.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (*.f64 y (*.f64 x 3)))))))))"]],"rules":[["egg-rr",13],["egg-rr",14]],"stop":[["node limit",1]],"time":35.882080078125,"type":"rewrite"},{"count":[[75,31]],"egraph":[[22,6564,408,0.10845304199999999],[21,6530,408,0.09212354199999999],[20,6456,408,0.08385829199999999],[19,6148,408,0.07514124999999999],[18,5838,408,0.06694054199999999],[17,5416,408,0.059486583999999995],[16,4556,408,0.051515416999999994],[15,3850,408,0.042959832999999996],[14,3267,408,0.036004417],[13,2808,408,0.030062166999999997],[12,2438,408,0.025097374999999998],[11,2123,408,0.020653417],[10,1880,408,0.0169095],[9,1708,408,0.013466708],[8,1573,408,0.010656458],[7,1473,408,0.008247041],[6,1059,408,0.005726916],[5,820,408,0.003715749],[4,245,408,0.001993083],[3,84,408,0.000794042],[2,45,408,0.000412875],[1,23,408,0.000220042],[0,10,408,8.825e-5]],"inputs":[["(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 x (*.f64 3 y))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 x (*.f64 y y)))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 (*.f64 y y) (*.f64 3 x))"]],"stop":[["node limit",1]],"time":137.114990234375,"type":"simplify"},{"compiler":[[335,243]],"time":5.06787109375,"type":"eval"},{"alts":[["(*.f64 (*.f64 3 (*.f64 y x)) y)","next",0.27962875976844204],["(*.f64 x (*.f64 3 (*.f64 y y)))","fresh",9.360772780771548],["(*.f64 (pow.f64 (pow.f64 (sqrt.f64 (*.f64 y (*.f64 x 3))) 2) 1) y)","fresh",29.933300048842213],["(pow.f64 (sqrt.f64 (*.f64 y (*.f64 y (*.f64 x 3)))) 2)","fresh",22.451873828147537],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 y (*.f64 x 3)))) 3)","fresh",0.5692140625901448],["(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)","done",0.2109375],["(*.f64 3 (*.f64 (pow.f64 y 2) x))","fresh",9.377061550308433],["(*.f64 (*.f64 (*.f64 x 3) y) y)","done",0.26009750976844204]],"compiler":[[9,6],[9,6],[14,11],[12,9],[12,9],[11,8],[9,7],[9,6],[9,6],[9,6],[14,11],[12,9],[12,9],[9,7]],"count":[[37,8]],"kept":[{"done":[1,1],"fresh":[4,3],"new":[31,3],"picked":[1,1]}],"min-error":[0.01171875],"time":7.283935546875,"type":"prune"},{"compiler":[[20,9]],"locations":[["(*.f64 (*.f64 3 (*.f64 y x)) y)",0.18359375,true],["(*.f64 3 (*.f64 y x))",0.3046875,true]],"time":4.13916015625,"type":"localize"},{"count":[[2,24]],"series":[["(*.f64 (*.f64 3 (*.f64 y x)) y)","x","-inf",0.14404296875],["(*.f64 (*.f64 3 (*.f64 y x)) y)","x","inf",0.14306640625],["(*.f64 (*.f64 3 (*.f64 y x)) y)","x","0",0.156982421875],["(*.f64 (*.f64 3 (*.f64 y x)) y)","y","-inf",0.14208984375],["(*.f64 (*.f64 3 (*.f64 y x)) y)","y","inf",0.143798828125],["(*.f64 (*.f64 3 (*.f64 y x)) y)","y","0",0.1630859375],["(*.f64 3 (*.f64 y x))","x","-inf",0.14794921875],["(*.f64 3 (*.f64 y x))","x","inf",0.1650390625],["(*.f64 3 (*.f64 y x))","x","0",0.14208984375],["(*.f64 3 (*.f64 y x))","y","-inf",0.15283203125],["(*.f64 3 (*.f64 y x))","y","inf",0.179931640625],["(*.f64 3 (*.f64 y x))","y","0",0.169921875]],"time":1.9638671875,"type":"series"},{"count":[[2,24]],"egraph":[[2,1705,17,0.016779291999999998],[1,143,17,0.0023530839999999996],[0,7,17,0.000189834]],"inputs":[["(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 (*.f64 y x)) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 3 (*.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 3 (*.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 3 (*.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (*.f64 y x) 2) 9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 x) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 3 (*.f64 y x))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 y (*.f64 3 (*.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 x) y) 3) y))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 3 (*.f64 y x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))))"]],"rules":[["egg-rr",13],["egg-rr",11]],"stop":[["node limit",1]],"time":35.10400390625,"type":"rewrite"},{"count":[[48,26]],"egraph":[[22,6523,240,0.107258502],[21,6487,240,0.09081521000000001],[20,6409,240,0.082595502],[19,6103,240,0.073914627],[18,5785,240,0.065727918],[17,5361,240,0.058284252],[16,4501,240,0.050450043],[15,3793,240,0.041977501],[14,3202,240,0.035090751],[13,2744,240,0.029089751],[12,2374,240,0.024231334],[11,2061,240,0.019849459],[10,1818,240,0.016172416999999998],[9,1646,240,0.012785834],[8,1511,240,0.010035709],[7,1411,240,0.007685667],[6,997,240,0.005283458],[5,736,240,0.003338333],[4,223,240,0.0017678750000000001],[3,83,240,0.000683042],[2,37,240,0.000331708],[1,17,240,0.000170416],[0,8,240,6.7208e-5]],"inputs":[["(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))"]],"stop":[["node limit",1]],"time":128.43798828125,"type":"simplify"},{"compiler":[[254,154]],"time":3.48095703125,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 3)","next",0.5444490235163767],["(*.f64 3 (*.f64 (pow.f64 y 2) x))","fresh",9.377061550308433],["(*.f64 (*.f64 3 (*.f64 y x)) y)","done",0.27962875976844204],["(*.f64 x (*.f64 3 (*.f64 y y)))","fresh",9.360772780771548],["(pow.f64 (sqrt.f64 (*.f64 y (*.f64 y (*.f64 x 3)))) 2)","fresh",22.451873828147537],["(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)","done",0.2109375],["(*.f64 (pow.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) 2) y)","fresh",29.93624882814754],["(*.f64 (*.f64 (*.f64 x 3) y) y)","done",0.26009750976844204]],"compiler":[[12,9],[9,7],[9,6],[9,6],[12,9],[11,8],[12,9],[9,6],[12,9],[9,7],[9,6],[12,9],[12,9]],"count":[[34,8]],"kept":[{"done":[2,2],"fresh":[5,2],"new":[26,3],"picked":[1,1]}],"min-error":[0.01171875],"time":6.68505859375,"type":"prune"},{"compiler":[[38,19]],"locations":[["(*.f64 y (*.f64 3 (*.f64 y x)))",0.18359375,true],["(*.f64 3 (*.f64 y x))",0.3046875,false],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 3)",0.49720395513728255,true],["(cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))",19.267103786801588,true]],"time":8.114013671875,"type":"localize"},{"count":[[3,24]],"series":[["(*.f64 y (*.f64 3 (*.f64 y x)))","x","-inf",0.140869140625],["(*.f64 y (*.f64 3 (*.f64 y x)))","x","inf",0.14599609375],["(*.f64 y (*.f64 3 (*.f64 y x)))","x","0",0.160888671875],["(*.f64 y (*.f64 3 (*.f64 y x)))","y","-inf",0.141845703125],["(*.f64 y (*.f64 3 (*.f64 y x)))","y","inf",0.169921875],["(*.f64 y (*.f64 3 (*.f64 y x)))","y","0",0.14794921875],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 3)","x","-inf",1.45703125],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 3)","x","inf",0.551025390625],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 3)","x","0",0.470947265625],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 3)","y","-inf",0.463134765625],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 3)","y","inf",0.823974609375],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 3)","y","0",0.8828125],["(cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))","x","-inf",0.449951171875],["(cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))","x","inf",0.364013671875],["(cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))","x","0",0.385986328125],["(cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))","y","-inf",0.306884765625],["(cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))","y","inf",0.373046875],["(cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))","y","0",0.656005859375]],"time":8.301025390625,"type":"series"},{"count":[[3,79]],"egraph":[[2,2063,32,0.020192541],[1,191,32,0.003106791],[0,9,32,0.000247041]],"inputs":[["(cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))","(pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 3)","(*.f64 y (*.f64 3 (*.f64 y x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2))) (cbrt.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (cbrt.f64 (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 3 (*.f64 y x))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1/6) (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y 3)) (cbrt.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2)) 1/3) (cbrt.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 1/3) (pow.f64 (sqrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 y 3) 1/3) (cbrt.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 y (*.f64 3 (*.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 3 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 (*.f64 y x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y x) (*.f64 y 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 (*.f64 y x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 y (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2)) (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2))) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))) (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 3 (*.f64 y x))) (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 3 (*.f64 y x))) 2) (*.f64 (cbrt.f64 (*.f64 3 (*.f64 y x))) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1/6) (*.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1/6) (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) (*.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) (sqrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y 3) (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2))) 3) (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1/6) 3) (pow.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (*.f64 y x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (pow.f64 (cbrt.f64 (*.f64 3 (*.f64 y x))) 2)) (cbrt.f64 (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (sqrt.f64 (*.f64 3 (*.f64 y x)))) (sqrt.f64 (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (*.f64 y 3)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 (*.f64 y x)) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 (*.f64 y x)) (sqrt.f64 y)) (sqrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2)) 1) (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2)))) (cbrt.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2)) (cbrt.f64 y)) (cbrt.f64 (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2)) (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1/6)) (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y 3) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y 3) 1) (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y 3) (pow.f64 (cbrt.f64 (*.f64 y x)) 2)) (cbrt.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y 3) (sqrt.f64 (*.f64 y x))) (sqrt.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 3 (*.f64 y x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 y (*.f64 3 (*.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2)) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (*.f64 3 (*.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 3 (*.f64 y x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (*.f64 3 (*.f64 y x)))))))))"]],"rules":[["egg-rr",14],["egg-rr",42],["egg-rr",23]],"stop":[["node limit",1]],"time":44.968994140625,"type":"rewrite"},{"count":[[103,72]],"egraph":[[22,6523,240,0.107263082],[21,6487,240,0.090744541],[20,6409,240,0.082547082],[19,6103,240,0.073891874],[18,5785,240,0.065714999],[17,5361,240,0.058288415999999996],[16,4501,240,0.050479208],[15,3793,240,0.042022541999999996],[14,3202,240,0.035107666999999995],[13,2744,240,0.029208541999999997],[12,2374,240,0.024274708],[11,2061,240,0.019847833],[10,1818,240,0.016170458],[9,1646,240,0.012791208],[8,1511,240,0.01005175],[7,1411,240,0.007699583],[6,997,240,0.005299708],[5,736,240,0.003337208],[4,223,240,0.001758417],[3,83,240,0.000676667],[2,37,240,0.000324376],[1,17,240,0.000164792],[0,8,240,6.5209e-5]],"inputs":[["(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (pow.f64 y 2) x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 3 (*.f64 (*.f64 y y) x))","(*.f64 3 (*.f64 y (*.f64 y x)))","(*.f64 x (*.f64 y (*.f64 3 y)))","(*.f64 (*.f64 y y) (*.f64 3 x))","(*.f64 y (*.f64 y (*.f64 3 x)))"]],"stop":[["node limit",1]],"time":129.291015625,"type":"simplify"},{"compiler":[[1173,724]],"time":14.155029296875,"type":"eval"},{"alts":[["(*.f64 3 (*.f64 (pow.f64 y 2) x))","fresh",9.377061550308433],["(*.f64 (*.f64 y (*.f64 y x)) 3)","fresh",0.25132753907376804],["(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)","done",0.2109375],["(*.f64 (*.f64 y 3) (*.f64 y x))","fresh",0.20769501953688402],["(*.f64 (*.f64 (*.f64 y 3) (pow.f64 (cbrt.f64 (*.f64 y x)) 2)) (cbrt.f64 (*.f64 y x)))","fresh",0.5160777953685883],["(*.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) (*.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) y))","fresh",29.936912597684426]],"compiler":[[9,7],[9,6],[11,8],[9,6],[17,10],[17,11]],"count":[[91,6]],"kept":[{"done":[3,1],"fresh":[4,1],"new":[83,4],"picked":[1,0]}],"min-error":[0],"time":16.510009765625,"type":"prune"},{"accuracy":[0.20769501953688402],"baseline":[0.20769501953688402],"branch":[["x",0.20769501953688402,1],["y",0.20769501953688402,1],["(*.f64 (*.f64 (*.f64 x 3) y) y)",0.20769501953688402,1],["(*.f64 x 3)",0.20769501953688402,1],["(*.f64 x 3)",0.20769501953688402,1]],"compiler":[[3,2],[3,2],[9,6],[5,4],[5,4],[150,92]],"count":[[16,1]],"inputs":[["(*.f64 (*.f64 y (*.f64 y x)) 3)","(*.f64 (*.f64 y 3) (*.f64 y x))","(*.f64 (*.f64 (*.f64 y 3) (pow.f64 (cbrt.f64 (*.f64 y x)) 2)) (cbrt.f64 (*.f64 y x)))","(*.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) (*.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) y))","(pow.f64 (cbrt.f64 (*.f64 y (*.f64 3 (*.f64 y x)))) 3)","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 (pow.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) 2) y)","(*.f64 (pow.f64 (pow.f64 (sqrt.f64 (*.f64 y (*.f64 x 3))) 2) 1) y)","(pow.f64 (sqrt.f64 (*.f64 y (*.f64 y (*.f64 x 3)))) 2)","(pow.f64 (cbrt.f64 (*.f64 y (*.f64 y (*.f64 x 3)))) 3)","(pow.f64 (*.f64 (sqrt.f64 (*.f64 x 3)) y) 2)","(*.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 1) y)","(*.f64 (*.f64 3 (*.f64 y x)) y)","(*.f64 3 (*.f64 (pow.f64 y 2) x))","(*.f64 x (*.f64 3 (*.f64 y y)))","(*.f64 (*.f64 (*.f64 x 3) y) y)"]],"link":["."],"name":["Diagrams.Segment:$catParam from diagrams-lib-1.3.0.3, B"],"oracle":[47.67548741696018],"outputs":[["(*.f64 (*.f64 y 3) (*.f64 y x))"]],"time":32.4560546875,"times":[["x",6.22705078125],["y",5.888916015625],["(*.f64 (*.f64 (*.f64 x 3) y) y)",4.991943359375],["(*.f64 x 3)",6.220947265625],["(*.f64 x 3)",6.10400390625]],"type":"regimes"},{"compiler":[[9,6]],"egraph":[[1,10,10,2.8626e-5],[0,7,10,1.6709e-5]],"inputs":[["(*.f64 (*.f64 y 3) (*.f64 y x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 y 3) (*.f64 y x))"]],"stop":[["fuel",1],["saturated",1]],"time":8.366943359375,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[9,6]],"remove-preprocessing":[[]],"time":7.4560546875,"type":"end"}]