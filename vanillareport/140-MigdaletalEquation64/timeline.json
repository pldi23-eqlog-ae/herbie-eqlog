[{"compiler":[[23,16]],"method":["search"],"sampling":[[12,0.3900530747614539,0.4407599744804429,0.1691869507581032],[11,0.3120424598091631,0.5460743046660355,0.14188323552480142],[10,0.2496339678473305,0.6396870426087844,0.11067898954388511],[9,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[8,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[7,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[6,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":160.634033203125,"type":"analyze"},{"outcomes":[["body",512,"invalid",119.637939453125,804],["body",256,"invalid",125.124755859375,1645],["body",512,"valid",139.34375,927],["body",1024,"valid",459.248291015625,1892],["body",1024,"invalid",382.488525390625,1600],["body",2048,"valid",3.084228515625,7],["body",256,"valid",399.310546875,5430]],"time":1641.034912109375,"type":"sample"},{"compiler":[[22,15]],"egraph":[[1,3,3,5.5e-6],[0,3,3,4.666e-6],[8,480,72,0.005208249000000001],[7,474,72,0.0044131660000000005],[6,420,72,0.0036182080000000004],[5,375,72,0.0027765000000000003],[4,321,72,0.002011333],[3,243,72,0.001358833],[2,160,72,0.000812958],[1,69,72,0.000391833],[0,25,80,0.00012325]],"inputs":[["0","1","2"],["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))","(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)))","(+.f64 (*.f64 (/.f64 (cos.f64 a1) (sqrt.f64 2)) (*.f64 th th)) (*.f64 (/.f64 (cos.f64 a1) (sqrt.f64 2)) (*.f64 a2 a2)))","(+.f64 (*.f64 (/.f64 (cos.f64 a2) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 a2) (sqrt.f64 2)) (*.f64 th th)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0","2"],["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2)))","(/.f64 (cos.f64 th) (/.f64 (sqrt.f64 2) (fma.f64 a1 a1 (*.f64 a2 a2))))","(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2)))","(/.f64 (cos.f64 th) (/.f64 (sqrt.f64 2) (fma.f64 a1 a1 (*.f64 a2 a2))))","(+.f64 (*.f64 (/.f64 (cos.f64 a1) (sqrt.f64 2)) (*.f64 th th)) (*.f64 (/.f64 (cos.f64 a1) (sqrt.f64 2)) (*.f64 a2 a2)))","(*.f64 (/.f64 (cos.f64 a1) (sqrt.f64 2)) (+.f64 (*.f64 th th) (*.f64 a2 a2)))","(*.f64 (/.f64 (cos.f64 a1) (sqrt.f64 2)) (fma.f64 th th (*.f64 a2 a2)))","(*.f64 (cos.f64 a1) (/.f64 (fma.f64 th th (*.f64 a2 a2)) (sqrt.f64 2)))","(+.f64 (*.f64 (/.f64 (cos.f64 a2) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 a2) (sqrt.f64 2)) (*.f64 th th)))","(*.f64 (/.f64 (cos.f64 a2) (sqrt.f64 2)) (+.f64 (*.f64 a1 a1) (*.f64 th th)))","(*.f64 (/.f64 (cos.f64 a2) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 th th)))","(*.f64 (/.f64 (cos.f64 a2) (sqrt.f64 2)) (fma.f64 th th (*.f64 a1 a1)))","(*.f64 (cos.f64 a2) (/.f64 (fma.f64 th th (*.f64 a1 a1)) (sqrt.f64 2)))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort a1 a2)"]],"time":29.718017578125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[8,172,18,0.001958333],[7,170,18,0.001666083],[6,152,18,0.001371041],[5,135,18,0.001056708],[4,115,18,0.000786958],[3,88,18,0.0005437080000000001],[2,58,18,0.000336791],[1,27,18,0.000172208],[0,13,20,6.1333e-5]],"inputs":[["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2)))","(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))"]],"stop":[["saturated",1]],"time":12.451171875,"type":"simplify"},{"compiler":[[34,20]],"time":0.456787109375,"type":"eval"},{"alts":[["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))","fresh",0.5228500976844203],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","next",0.4557800781475362]],"compiler":[[22,15],[15,10],[22,15],[15,10]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.38642504884221013],"time":1.859130859375,"type":"prune"},{"compiler":[[41,16]],"locations":[["(cos.f64 th)",0.00390625,true],["(fma.f64 a1 a1 (*.f64 a2 a2))",0.00390625,true],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))",0.1640625,true],["(/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2))",0.403007519536884,true]],"time":9.0888671875,"type":"localize"},{"count":[[4,88]],"series":[["(cos.f64 th)","th","-inf",0.132080078125],["(cos.f64 th)","th","inf",0.1611328125],["(cos.f64 th)","th","0",0.177001953125],["(fma.f64 a1 a1 (*.f64 a2 a2))","a2","-inf",0.14306640625],["(fma.f64 a1 a1 (*.f64 a2 a2))","a2","inf",0.170166015625],["(fma.f64 a1 a1 (*.f64 a2 a2))","a2","0",0.14404296875],["(fma.f64 a1 a1 (*.f64 a2 a2))","a1","-inf",0.14892578125],["(fma.f64 a1 a1 (*.f64 a2 a2))","a1","inf",0.1640625],["(fma.f64 a1 a1 (*.f64 a2 a2))","a1","0",0.14892578125],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","a2","-inf",0.2099609375],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","a2","inf",1.13916015625],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","a2","0",0.505126953125],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","a1","-inf",0.31787109375],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","a1","inf",0.4501953125],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","a1","0",0.67919921875],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","th","-inf",0.598876953125],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","th","inf",1.074951171875],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","th","0",0.625],["(/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2))","a2","-inf",0.218994140625],["(/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2))","a2","inf",0.413818359375],["(/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2))","a2","0",0.458984375],["(/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2))","a1","-inf",0.612060546875],["(/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2))","a1","inf",0.514892578125],["(/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2))","a1","0",0.76904296875]],"time":10.30322265625,"type":"series"},{"count":[[4,147]],"egraph":[[2,2732,39,0.024922457999999998],[1,224,39,0.003746375],[0,11,42,0.000275542]],"inputs":[["(/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2))","(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","(fma.f64 a1 a1 (*.f64 a2 a2))","(cos.f64 th)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 a1 a2) 2) (pow.f64 2 -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))) (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)) (cbrt.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 a1 a2) 4)) (*.f64 (pow.f64 (cbrt.f64 (hypot.f64 a1 a2)) 2) (pow.f64 2 -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 a1 a2) (*.f64 (hypot.f64 a1 a2) (pow.f64 2 -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (hypot.f64 a1 a2) 2)) (/.f64 1 (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (hypot.f64 a1 a2) 4)) 1) (/.f64 (pow.f64 (cbrt.f64 (hypot.f64 a1 a2)) 2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 2)) (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (pow.f64 2 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (hypot.f64 a1 a2) 4)) (cbrt.f64 2)) (cbrt.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 a1 a2) (cbrt.f64 2)) (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 2 -1/4) (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (pow.f64 2 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (hypot.f64 a1 a2) 4)) (pow.f64 2 1/4)) (/.f64 (pow.f64 (cbrt.f64 (hypot.f64 a1 a2)) 2) (pow.f64 2 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 6) (pow.f64 2 3/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)))) 2)) (cbrt.f64 (log.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))) (sqrt.f64 (log.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 6) (pow.f64 2 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (cbrt.f64 2)) (pow.f64 2 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (pow.f64 2 1/4)) (pow.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (hypot.f64 a1 a2) 2)) (cos.f64 th)) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 th) (neg.f64 (pow.f64 (hypot.f64 a1 a2) 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2) (pow.f64 (cos.f64 th) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) (sqrt.f64 (cos.f64 th))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))))) 2)) (cbrt.f64 (log.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))))) (sqrt.f64 (log.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2) (pow.f64 (cos.f64 th) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) (sqrt.f64 (cos.f64 th)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a2 a2) (*.f64 a1 a1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a1 a1) (*.f64 a2 a2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (hypot.f64 a1 a2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a1 a1) 1) (*.f64 a2 a2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (hypot.f64 a1 a2) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (hypot.f64 a1 a2) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (hypot.f64 a1 a2) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (hypot.f64 a1 a2) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (hypot.f64 a1 a2) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 a1 a2) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (hypot.f64 a1 a2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 a1 a2)) 2) (cbrt.f64 (pow.f64 (hypot.f64 a1 a2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 a1 a2) 4)) (pow.f64 (cbrt.f64 (hypot.f64 a1 a2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 a1 a2) (hypot.f64 a1 a2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 a1 6) (pow.f64 a2 6)) (+.f64 (pow.f64 a1 4) (-.f64 (pow.f64 a2 4) (pow.f64 (*.f64 a1 a2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 a1 4) (pow.f64 a2 4)) (-.f64 (*.f64 a1 a1) (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 a1 a2) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 a1 a2) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 a1 a2)) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 a1 a2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (pow.f64 (hypot.f64 a1 a2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (hypot.f64 a1 a2) 2))) 2)) (cbrt.f64 (log.f64 (pow.f64 (hypot.f64 a1 a2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (pow.f64 (hypot.f64 a1 a2) 2)))) (sqrt.f64 (log.f64 (pow.f64 (hypot.f64 a1 a2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (hypot.f64 a1 a2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (hypot.f64 a1 a2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (hypot.f64 a1 a2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 a2 a2))) (exp.f64 (*.f64 a1 a1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 a1 a1)) (+.f64 1 (expm1.f64 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (hypot.f64 a1 a2) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (hypot.f64 a1 a2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (hypot.f64 a1 a2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (hypot.f64 a1 a2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (hypot.f64 a1 a2) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (hypot.f64 a1 a2) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (cbrt.f64 (hypot.f64 a1 a2)) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 a1 a2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (pow.f64 (hypot.f64 a1 a2) 2)) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 th))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 th))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 th))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 th)))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 th) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 th)) (pow.f64 (cbrt.f64 (cos.f64 th)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 th)) 2) (cbrt.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 th)) (sqrt.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 th) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 th) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 th) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 th)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 th)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (cos.f64 th))) 2)) (cbrt.f64 (log.f64 (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (cos.f64 th)))) (sqrt.f64 (log.f64 (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 th) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 th) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 th)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (cos.f64 th))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cos.f64 th))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (cos.f64 th))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cos.f64 th)) 1) 1))))))"]],"rules":[["egg-rr",30],["egg-rr",36],["egg-rr",34],["egg-rr",47]],"stop":[["node limit",1]],"time":52.82080078125,"type":"rewrite"},{"count":[[235,182]],"egraph":[[4,3386,1298,0.017610542],[3,1218,1313,0.0075627920000000005],[2,354,1387,0.002637],[1,135,1393,0.000936583],[0,57,1499,0.00031275]],"inputs":[["(/.f64 (pow.f64 a2 2) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(/.f64 (pow.f64 a1 2) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(/.f64 (pow.f64 a1 2) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(/.f64 (pow.f64 a1 2) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(/.f64 (pow.f64 a2 2) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(/.f64 (pow.f64 a2 2) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(/.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)) (sqrt.f64 2)))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)) (sqrt.f64 2))) (*.f64 1/24 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)) (sqrt.f64 2))))))","(+.f64 (*.f64 -1/720 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 6)) (sqrt.f64 2))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)) (sqrt.f64 2))) (*.f64 1/24 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)) (sqrt.f64 2)))))))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(pow.f64 a2 2)","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(pow.f64 a1 2)","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(pow.f64 a1 2)","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(pow.f64 a1 2)","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(pow.f64 a2 2)","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(pow.f64 a2 2)","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 th 2)))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 th 4)) (*.f64 -1/2 (pow.f64 th 2))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 th 4)) (+.f64 (*.f64 -1/720 (pow.f64 th 6)) (*.f64 -1/2 (pow.f64 th 2)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (pow.f64 a2 2) (sqrt.f64 2))","(/.f64 (*.f64 a2 a2) (sqrt.f64 2))","(/.f64 a2 (/.f64 (sqrt.f64 2) a2))","(*.f64 a2 (/.f64 a2 (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(/.f64 (pow.f64 a1 2) (sqrt.f64 2))","(/.f64 (*.f64 a1 a1) (sqrt.f64 2))","(/.f64 a1 (/.f64 (sqrt.f64 2) a1))","(*.f64 (/.f64 a1 (sqrt.f64 2)) a1)","(*.f64 a1 (/.f64 a1 (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(/.f64 (pow.f64 a1 2) (sqrt.f64 2))","(/.f64 (*.f64 a1 a1) (sqrt.f64 2))","(/.f64 a1 (/.f64 (sqrt.f64 2) a1))","(*.f64 (/.f64 a1 (sqrt.f64 2)) a1)","(*.f64 a1 (/.f64 a1 (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(/.f64 (pow.f64 a1 2) (sqrt.f64 2))","(/.f64 (*.f64 a1 a1) (sqrt.f64 2))","(/.f64 a1 (/.f64 (sqrt.f64 2) a1))","(*.f64 (/.f64 a1 (sqrt.f64 2)) a1)","(*.f64 a1 (/.f64 a1 (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(/.f64 (pow.f64 a2 2) (sqrt.f64 2))","(/.f64 (*.f64 a2 a2) (sqrt.f64 2))","(/.f64 a2 (/.f64 (sqrt.f64 2) a2))","(*.f64 a2 (/.f64 a2 (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(/.f64 (pow.f64 a2 2) (sqrt.f64 2))","(/.f64 (*.f64 a2 a2) (sqrt.f64 2))","(/.f64 a2 (/.f64 (sqrt.f64 2) a2))","(*.f64 a2 (/.f64 a2 (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2))))","(/.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (sqrt.f64 2))","(/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)) (sqrt.f64 2)))))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 a1 a1) (sqrt.f64 2)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (*.f64 th th))))))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 th th)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1))))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 th th)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)))","(fma.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 -1/2 (*.f64 th th)) (fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (/.f64 a2 (/.f64 (sqrt.f64 2) a2))))","(fma.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 -1/2 (*.f64 th th)) (fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 a2 (/.f64 a2 (sqrt.f64 2)))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)) (sqrt.f64 2))) (*.f64 1/24 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)) (sqrt.f64 2))))))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 a1 a1) (sqrt.f64 2)) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (*.f64 th th))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (pow.f64 th 4)))))))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 th th)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1))) (/.f64 (*.f64 1/24 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (pow.f64 th 4))) (sqrt.f64 2))))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 th th)) (fma.f64 1/24 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (pow.f64 th 4)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))))","(fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (fma.f64 (/.f64 a2 (sqrt.f64 2)) a2 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 (*.f64 th th) (fma.f64 th (*.f64 th 1/24) -1/2)))))","(+.f64 (*.f64 -1/720 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 6)) (sqrt.f64 2))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)) (sqrt.f64 2))) (*.f64 1/24 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)) (sqrt.f64 2)))))))","(fma.f64 -1/720 (/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (pow.f64 th 6))) (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 a1 a1) (sqrt.f64 2)) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (*.f64 th th))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (pow.f64 th 4))))))))","(+.f64 (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 th th)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1))) (/.f64 (*.f64 1/24 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (pow.f64 th 4))) (sqrt.f64 2))) (fma.f64 -1/720 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (pow.f64 th 6)) (/.f64 a2 (/.f64 (sqrt.f64 2) a2))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 th th)) (fma.f64 1/24 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (pow.f64 th 4)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) (fma.f64 -1/720 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (pow.f64 th 6)) (/.f64 a2 (/.f64 (sqrt.f64 2) a2))))","(fma.f64 (/.f64 a2 (sqrt.f64 2)) a2 (fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (fma.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 -1/2 (*.f64 th th)) (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (fma.f64 1/24 (pow.f64 th 4) (*.f64 -1/720 (pow.f64 th 6)))))))","(fma.f64 (/.f64 a2 (sqrt.f64 2)) a2 (fma.f64 (/.f64 a1 (sqrt.f64 2)) a1 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (fma.f64 (*.f64 th th) (fma.f64 th (*.f64 th 1/24) -1/2) (*.f64 -1/720 (pow.f64 th 6))))))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th))","(*.f64 (*.f64 a2 a2) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(/.f64 (cos.f64 th) (/.f64 (sqrt.f64 2) (*.f64 a1 a1)))","(*.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1) (cos.f64 th))","(*.f64 (*.f64 a1 a1) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(*.f64 a1 (/.f64 (cos.f64 th) (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(/.f64 (cos.f64 th) (/.f64 (sqrt.f64 2) (*.f64 a1 a1)))","(*.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1) (cos.f64 th))","(*.f64 (*.f64 a1 a1) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(*.f64 a1 (/.f64 (cos.f64 th) (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(/.f64 (cos.f64 th) (/.f64 (sqrt.f64 2) (*.f64 a1 a1)))","(*.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1) (cos.f64 th))","(*.f64 (*.f64 a1 a1) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(*.f64 a1 (/.f64 (cos.f64 th) (/.f64 (sqrt.f64 2) a1)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th))","(*.f64 (*.f64 a2 a2) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th))","(*.f64 (*.f64 a2 a2) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(/.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(pow.f64 a2 2)","(*.f64 a2 a2)","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(pow.f64 a1 2)","(*.f64 a1 a1)","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(pow.f64 a1 2)","(*.f64 a1 a1)","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(pow.f64 a1 2)","(*.f64 a1 a1)","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(pow.f64 a2 2)","(*.f64 a2 a2)","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(pow.f64 a2 2)","(*.f64 a2 a2)","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (pow.f64 a1 2))","(+.f64 (*.f64 a2 a2) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 a2 a2))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 th 2)))","(+.f64 1 (*.f64 -1/2 (*.f64 th th)))","(fma.f64 -1/2 (*.f64 th th) 1)","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 th 4)) (*.f64 -1/2 (pow.f64 th 2))))","(+.f64 1 (fma.f64 1/24 (pow.f64 th 4) (*.f64 -1/2 (*.f64 th th))))","(+.f64 1 (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4))))","(fma.f64 1/24 (pow.f64 th 4) (fma.f64 -1/2 (*.f64 th th) 1))","(fma.f64 -1/2 (*.f64 th th) (fma.f64 1/24 (pow.f64 th 4) 1))","(fma.f64 (*.f64 th th) (fma.f64 th (*.f64 th 1/24) -1/2) 1)","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 th 4)) (+.f64 (*.f64 -1/720 (pow.f64 th 6)) (*.f64 -1/2 (pow.f64 th 2)))))","(+.f64 1 (fma.f64 1/24 (pow.f64 th 4) (fma.f64 -1/720 (pow.f64 th 6) (*.f64 -1/2 (*.f64 th th)))))","(+.f64 1 (fma.f64 1/24 (pow.f64 th 4) (fma.f64 -1/2 (*.f64 th th) (*.f64 -1/720 (pow.f64 th 6)))))","(+.f64 1 (fma.f64 -1/2 (*.f64 th th) (fma.f64 1/24 (pow.f64 th 4) (*.f64 -1/720 (pow.f64 th 6)))))","(fma.f64 (*.f64 th th) (fma.f64 th (*.f64 th 1/24) -1/2) (fma.f64 -1/720 (pow.f64 th 6) 1))"]],"stop":[["node limit",1]],"time":46.451171875,"type":"simplify"},{"compiler":[[2995,1788]],"time":34.89501953125,"type":"eval"},{"alts":[["(/.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (pow.f64 2 1/4)) (pow.f64 2 1/4))","fresh",0.4743538574528623],["(*.f64 (cos.f64 th) (pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) 2))","fresh",0.5570488769897464],["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","fresh",0.45445253907376815],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","done",0.4557800781475362],["(/.f64 1 (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))","fresh",0.8132106500228834],["(/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))","fresh",0.8070193902544414],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","next",0.4245300781475362]],"compiler":[[19,16],[15,12],[15,12],[15,10],[16,13],[14,11],[18,12],[19,16],[15,12],[15,12],[16,13],[14,11],[18,12]],"count":[[184,7]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[182,6],"picked":[1,1]}],"min-error":[0],"time":44.39990234375,"type":"prune"},{"compiler":[[53,27]],"locations":[["(cos.f64 th)",0.00390625,false],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))",0.1640625,true],["(*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))",0.23828125,true],["(/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))",0.41796875,true]],"time":11.462890625,"type":"localize"},{"count":[[3,84]],"series":[["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","a2","-inf",0.2958984375],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","a2","inf",0.467041015625],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","a2","0",1.427978515625],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","a1","-inf",0.7431640625],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","a1","inf",0.956787109375],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","a1","0",1.3662109375],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","th","-inf",0.383056640625],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","th","inf",0.674072265625],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","th","0",1.847900390625],["(*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))","a2","-inf",0.2900390625],["(*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))","a2","inf",0.589111328125],["(*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))","a2","0",2.28076171875],["(*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))","a1","-inf",0.314208984375],["(*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))","a1","inf",0.56201171875],["(*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))","a1","0",2.448974609375],["(/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))","a2","-inf",0.35009765625],["(/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))","a2","inf",0.448974609375],["(/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))","a2","0",0.44482421875],["(/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))","a1","-inf",0.379150390625],["(/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))","a1","inf",0.610107421875],["(/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))","a1","0",0.662109375]],"time":18.003173828125,"type":"series"},{"count":[[3,125]],"egraph":[[2,3039,38,0.026717459],[1,271,38,0.00427575],[0,13,44,0.000354542]],"inputs":[["(/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))","(*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))","(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 a1 a2) (pow.f64 2 -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))) (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) 1/2)) (cbrt.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 a1 a2)) 2) (*.f64 (cbrt.f64 (hypot.f64 a1 a2)) (pow.f64 2 -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) (pow.f64 2 -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))) (sqrt.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 a1 a2)) (/.f64 (sqrt.f64 (hypot.f64 a1 a2)) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 a1 a2)) (*.f64 (sqrt.f64 (hypot.f64 a1 a2)) (pow.f64 2 -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (hypot.f64 a1 a2)) (/.f64 1 (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 2 -1/2) (hypot.f64 a1 a2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 a1 a2) (cbrt.f64 2)) (/.f64 1 (pow.f64 2 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (hypot.f64 a1 a2)) 2) 1) (/.f64 (cbrt.f64 (hypot.f64 a1 a2)) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 2)) (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (hypot.f64 a1 a2)) 2) (cbrt.f64 2)) (cbrt.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (hypot.f64 a1 a2)) (cbrt.f64 2)) (/.f64 (sqrt.f64 (hypot.f64 a1 a2)) (pow.f64 2 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 2 -1/4) (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (hypot.f64 a1 a2)) 2) (pow.f64 2 1/4)) (/.f64 (cbrt.f64 (hypot.f64 a1 a2)) (pow.f64 2 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 2) (hypot.f64 a1 a2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 3) (pow.f64 2 3/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 1 (hypot.f64 a1 a2)) (sqrt.f64 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (hypot.f64 a1 a2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 3) (pow.f64 2 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sqrt.f64 2) (hypot.f64 a1 a2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 a1 a2) (/.f64 (sqrt.f64 2) (hypot.f64 a1 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 a1 a2) (*.f64 (/.f64 1 (hypot.f64 a1 a2)) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)) (/.f64 1 (hypot.f64 a1 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 1 (hypot.f64 a1 a2)) (/.f64 (sqrt.f64 2) (hypot.f64 a1 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (sqrt.f64 2) (hypot.f64 a1 a2)) (/.f64 1 (hypot.f64 a1 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 4) 2)) (/.f64 1 (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) (/.f64 1 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 a1 a2)) (*.f64 -1 (/.f64 (sqrt.f64 2) (hypot.f64 a1 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 a1 a2)) (*.f64 (/.f64 1 (hypot.f64 a1 a2)) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 a1 a2)) (*.f64 (neg.f64 (sqrt.f64 2)) (/.f64 1 (hypot.f64 a1 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 a1 a2)) (*.f64 (/.f64 (sqrt.f64 2) (hypot.f64 a1 a2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (neg.f64 (hypot.f64 a1 a2)) 2) (*.f64 -1 (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (neg.f64 (hypot.f64 a1 a2)) 2) (*.f64 (neg.f64 (sqrt.f64 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (hypot.f64 a1 a2) 2)) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 a1 a2)) (hypot.f64 a1 a2)) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 a1 a2)) (hypot.f64 a1 a2)) (*.f64 (neg.f64 (sqrt.f64 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 a1 a2) (neg.f64 (hypot.f64 a1 a2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 a1 a2) (neg.f64 (hypot.f64 a1 a2))) (*.f64 (sqrt.f64 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cbrt.f64 2)) (pow.f64 2 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (pow.f64 2 1/4)) (pow.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 a1 a2)) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2)) (neg.f64 (hypot.f64 a1 a2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 4) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 1 (hypot.f64 a1 a2)) (/.f64 (sqrt.f64 2) (hypot.f64 a1 a2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (sqrt.f64 2) (hypot.f64 a1 a2)) (/.f64 1 (hypot.f64 a1 a2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) -2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 a1 a2) (cos.f64 th)) (/.f64 (sqrt.f64 2) (hypot.f64 a1 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 th) (pow.f64 (hypot.f64 a1 a2) 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (hypot.f64 a1 a2) (cos.f64 th)) (hypot.f64 a1 a2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (hypot.f64 a1 a2) (cos.f64 th)) (neg.f64 (hypot.f64 a1 a2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (cos.f64 th) 2) (/.f64 (pow.f64 (hypot.f64 a1 a2) 4) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (cos.f64 th)) (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (cos.f64 th) 2) (/.f64 (pow.f64 (hypot.f64 a1 a2) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cos.f64 th)) (/.f64 (pow.f64 (hypot.f64 a1 a2) 2) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 (cos.f64 th)) (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (sqrt.f64 2))) 1) 1))))))"]],"rules":[["egg-rr",27],["egg-rr",52],["egg-rr",46]],"stop":[["node limit",1]],"time":51.916015625,"type":"rewrite"},{"count":[[209,207]],"egraph":[[2,3502,3319,0.020261874],[1,967,3739,0.006962166],[0,314,3973,0.001601333]],"inputs":[["(/.f64 a2 (sqrt.f64 2))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (/.f64 a2 (sqrt.f64 2)))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (/.f64 a2 (sqrt.f64 2))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3)))) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 5)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (/.f64 a2 (sqrt.f64 2)))))","(/.f64 a1 (sqrt.f64 2))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (/.f64 a1 (sqrt.f64 2)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3)))) (/.f64 a1 (sqrt.f64 2))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3)))) (+.f64 (/.f64 a1 (sqrt.f64 2)) (*.f64 1/16 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 5)))))))","(*.f64 -1 (/.f64 a1 (sqrt.f64 2)))","(+.f64 (*.f64 -1 (/.f64 a1 (sqrt.f64 2))) (*.f64 -1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3)))) (+.f64 (*.f64 -1 (/.f64 a1 (sqrt.f64 2))) (*.f64 -1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1)))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3)))) (+.f64 (*.f64 -1 (/.f64 a1 (sqrt.f64 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (*.f64 -1/16 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 5)))))))","(/.f64 a1 (sqrt.f64 2))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (/.f64 a1 (sqrt.f64 2)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3)))) (/.f64 a1 (sqrt.f64 2))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3)))) (+.f64 (/.f64 a1 (sqrt.f64 2)) (*.f64 1/16 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 5)))))))","(/.f64 a2 (sqrt.f64 2))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (/.f64 a2 (sqrt.f64 2)))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (/.f64 a2 (sqrt.f64 2))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3)))) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 5)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (/.f64 a2 (sqrt.f64 2)))))","(*.f64 -1 (/.f64 a2 (sqrt.f64 2)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (*.f64 -1 (/.f64 a2 (sqrt.f64 2))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3)))) (*.f64 -1 (/.f64 a2 (sqrt.f64 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 5)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3)))) (*.f64 -1 (/.f64 a2 (sqrt.f64 2))))))","(/.f64 (pow.f64 a2 2) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 (+.f64 (*.f64 5/64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 a2 6)))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (sqrt.f64 2)))) (pow.f64 a1 8))))","(+.f64 (*.f64 (pow.f64 a1 12) (+.f64 (*.f64 1/256 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 a2 10)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4))))) (sqrt.f64 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (*.f64 (sqrt.f64 2) (pow.f64 a2 4)))))))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 (+.f64 (*.f64 5/64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 a2 6)))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (sqrt.f64 2)))) (pow.f64 a1 8)))))","(/.f64 (pow.f64 a1 2) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))))))","(/.f64 (pow.f64 a1 2) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))))))","(/.f64 (pow.f64 a1 2) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 (+.f64 (*.f64 5/64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 a1 6)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (sqrt.f64 2)))) (pow.f64 a2 8))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (+.f64 (*.f64 (pow.f64 a2 12) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))))) (sqrt.f64 2))) (+.f64 (*.f64 1/256 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 a1 10)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 (sqrt.f64 2) (pow.f64 a1 4)))))))) (*.f64 (+.f64 (*.f64 5/64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 a1 6)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (sqrt.f64 2)))) (pow.f64 a2 8)))))","(/.f64 (pow.f64 a2 2) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 4)))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 1/8 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 4)))))))))","(/.f64 (pow.f64 a2 2) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 4)))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 1/8 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 4)))))))))","(/.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)) (sqrt.f64 2)))))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)) (sqrt.f64 2))) (*.f64 1/24 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)) (sqrt.f64 2))))))","(+.f64 (*.f64 -1/720 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 6)) (sqrt.f64 2))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)) (sqrt.f64 2))) (*.f64 1/24 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)) (sqrt.f64 2)))))))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6))))) (*.f64 5/64 (/.f64 1 (pow.f64 a2 6)))) (*.f64 (pow.f64 a1 8) (cos.f64 th))) (sqrt.f64 2))))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 12) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4)))))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4))) (*.f64 1/256 (/.f64 1 (pow.f64 a2 10)))))) (cos.f64 th))) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6))))) (*.f64 5/64 (/.f64 1 (pow.f64 a2 6)))) (*.f64 (pow.f64 a1 8) (cos.f64 th))) (sqrt.f64 2)))))","(/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a1 2))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a2 6)) (*.f64 -1/8 (pow.f64 a2 6))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a1 4))))))","(/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a1 2))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a2 6)) (*.f64 -1/8 (pow.f64 a2 6))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a1 4))))))","(/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 5/64 (/.f64 1 (pow.f64 a1 6)))) (*.f64 (cos.f64 th) (pow.f64 a2 8))) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 5/64 (/.f64 1 (pow.f64 a1 6)))) (*.f64 (pow.f64 a2 8) (cos.f64 th))) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))) (+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 a1 10))) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))))))))) (*.f64 (cos.f64 th) (pow.f64 a2 12))) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))))","(/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a1 6)) (*.f64 -1/8 (pow.f64 a1 6))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a2 4))) (+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a2 2))))))","(/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a1 6)) (*.f64 -1/8 (pow.f64 a1 6))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a2 4))) (+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a2 2))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 a2 (sqrt.f64 2))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (/.f64 a2 (sqrt.f64 2)))","(fma.f64 1/2 (/.f64 (*.f64 a1 a1) (*.f64 a2 (sqrt.f64 2))) (/.f64 a2 (sqrt.f64 2)))","(fma.f64 1/2 (*.f64 (/.f64 a1 (sqrt.f64 2)) (/.f64 a1 a2)) (/.f64 a2 (sqrt.f64 2)))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (/.f64 a2 (sqrt.f64 2))))","(fma.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) (fma.f64 1/2 (/.f64 (*.f64 a1 a1) (*.f64 a2 (sqrt.f64 2))) (/.f64 a2 (sqrt.f64 2))))","(fma.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) (fma.f64 1/2 (*.f64 (/.f64 a1 (sqrt.f64 2)) (/.f64 a1 a2)) (/.f64 a2 (sqrt.f64 2))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3)))) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 5)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (/.f64 a2 (sqrt.f64 2)))))","(fma.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) (fma.f64 1/16 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 5))) (fma.f64 1/2 (/.f64 (*.f64 a1 a1) (*.f64 a2 (sqrt.f64 2))) (/.f64 a2 (sqrt.f64 2)))))","(fma.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) (fma.f64 1/16 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 5))) (fma.f64 1/2 (*.f64 (/.f64 a1 (sqrt.f64 2)) (/.f64 a1 a2)) (/.f64 a2 (sqrt.f64 2)))))","(fma.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) (fma.f64 1/16 (/.f64 (/.f64 (pow.f64 a1 6) (sqrt.f64 2)) (pow.f64 a2 5)) (fma.f64 1/2 (*.f64 (/.f64 a1 (sqrt.f64 2)) (/.f64 a1 a2)) (/.f64 a2 (sqrt.f64 2)))))","(/.f64 a1 (sqrt.f64 2))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (/.f64 a1 (sqrt.f64 2)))","(fma.f64 1/2 (/.f64 (*.f64 a2 a2) (*.f64 (sqrt.f64 2) a1)) (/.f64 a1 (sqrt.f64 2)))","(fma.f64 1/2 (*.f64 (/.f64 a2 (sqrt.f64 2)) (/.f64 a2 a1)) (/.f64 a1 (sqrt.f64 2)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3)))) (/.f64 a1 (sqrt.f64 2))))","(fma.f64 1/2 (/.f64 (*.f64 a2 a2) (*.f64 (sqrt.f64 2) a1)) (fma.f64 -1/8 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (pow.f64 a1 3)) (/.f64 a1 (sqrt.f64 2))))","(fma.f64 1/2 (*.f64 (/.f64 a2 (sqrt.f64 2)) (/.f64 a2 a1)) (fma.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3))) (/.f64 a1 (sqrt.f64 2))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3)))) (+.f64 (/.f64 a1 (sqrt.f64 2)) (*.f64 1/16 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 5)))))))","(fma.f64 1/2 (/.f64 (*.f64 a2 a2) (*.f64 (sqrt.f64 2) a1)) (+.f64 (fma.f64 -1/8 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (pow.f64 a1 3)) (/.f64 a1 (sqrt.f64 2))) (/.f64 (*.f64 1/16 (pow.f64 a2 6)) (*.f64 (sqrt.f64 2) (pow.f64 a1 5)))))","(fma.f64 1/2 (*.f64 (/.f64 a2 (sqrt.f64 2)) (/.f64 a2 a1)) (fma.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3))) (fma.f64 1/16 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 5))) (/.f64 a1 (sqrt.f64 2)))))","(fma.f64 1/2 (*.f64 (/.f64 a2 (sqrt.f64 2)) (/.f64 a2 a1)) (fma.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3))) (fma.f64 1/16 (/.f64 (/.f64 (pow.f64 a2 6) (sqrt.f64 2)) (pow.f64 a1 5)) (/.f64 a1 (sqrt.f64 2)))))","(*.f64 -1 (/.f64 a1 (sqrt.f64 2)))","(neg.f64 (/.f64 a1 (sqrt.f64 2)))","(/.f64 (neg.f64 a1) (sqrt.f64 2))","(+.f64 (*.f64 -1 (/.f64 a1 (sqrt.f64 2))) (*.f64 -1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))))","(fma.f64 -1 (/.f64 a1 (sqrt.f64 2)) (/.f64 (*.f64 -1/2 (*.f64 a2 a2)) (*.f64 (sqrt.f64 2) a1)))","(-.f64 (/.f64 (*.f64 (*.f64 a2 a2) -1/2) (*.f64 (sqrt.f64 2) a1)) (/.f64 a1 (sqrt.f64 2)))","(-.f64 (*.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (/.f64 -1/2 a1)) (/.f64 a1 (sqrt.f64 2)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3)))) (+.f64 (*.f64 -1 (/.f64 a1 (sqrt.f64 2))) (*.f64 -1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1)))))","(fma.f64 1/8 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (pow.f64 a1 3)) (fma.f64 -1 (/.f64 a1 (sqrt.f64 2)) (/.f64 (*.f64 -1/2 (*.f64 a2 a2)) (*.f64 (sqrt.f64 2) a1))))","(fma.f64 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3))) 1/8 (-.f64 (/.f64 (*.f64 (*.f64 a2 a2) -1/2) (*.f64 (sqrt.f64 2) a1)) (/.f64 a1 (sqrt.f64 2))))","(fma.f64 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3))) 1/8 (-.f64 (*.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (/.f64 -1/2 a1)) (/.f64 a1 (sqrt.f64 2))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3)))) (+.f64 (*.f64 -1 (/.f64 a1 (sqrt.f64 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (*.f64 -1/16 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 5)))))))","(fma.f64 1/8 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (pow.f64 a1 3)) (fma.f64 -1 (/.f64 a1 (sqrt.f64 2)) (fma.f64 -1/2 (/.f64 (*.f64 a2 a2) (*.f64 (sqrt.f64 2) a1)) (*.f64 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 5))) -1/16))))","(fma.f64 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3))) 1/8 (-.f64 (fma.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) (/.f64 a2 a1)) -1/2 (*.f64 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 5))) -1/16)) (/.f64 a1 (sqrt.f64 2))))","(fma.f64 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3))) 1/8 (-.f64 (fma.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) (/.f64 a2 a1)) -1/2 (*.f64 (/.f64 (/.f64 (pow.f64 a2 6) (sqrt.f64 2)) (pow.f64 a1 5)) -1/16)) (/.f64 a1 (sqrt.f64 2))))","(/.f64 a1 (sqrt.f64 2))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (/.f64 a1 (sqrt.f64 2)))","(fma.f64 1/2 (/.f64 (*.f64 a2 a2) (*.f64 (sqrt.f64 2) a1)) (/.f64 a1 (sqrt.f64 2)))","(fma.f64 1/2 (*.f64 (/.f64 a2 (sqrt.f64 2)) (/.f64 a2 a1)) (/.f64 a1 (sqrt.f64 2)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3)))) (/.f64 a1 (sqrt.f64 2))))","(fma.f64 1/2 (/.f64 (*.f64 a2 a2) (*.f64 (sqrt.f64 2) a1)) (fma.f64 -1/8 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (pow.f64 a1 3)) (/.f64 a1 (sqrt.f64 2))))","(fma.f64 1/2 (*.f64 (/.f64 a2 (sqrt.f64 2)) (/.f64 a2 a1)) (fma.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3))) (/.f64 a1 (sqrt.f64 2))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a2 2) (*.f64 (sqrt.f64 2) a1))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3)))) (+.f64 (/.f64 a1 (sqrt.f64 2)) (*.f64 1/16 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 5)))))))","(fma.f64 1/2 (/.f64 (*.f64 a2 a2) (*.f64 (sqrt.f64 2) a1)) (+.f64 (fma.f64 -1/8 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (pow.f64 a1 3)) (/.f64 a1 (sqrt.f64 2))) (/.f64 (*.f64 1/16 (pow.f64 a2 6)) (*.f64 (sqrt.f64 2) (pow.f64 a1 5)))))","(fma.f64 1/2 (*.f64 (/.f64 a2 (sqrt.f64 2)) (/.f64 a2 a1)) (fma.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3))) (fma.f64 1/16 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 5))) (/.f64 a1 (sqrt.f64 2)))))","(fma.f64 1/2 (*.f64 (/.f64 a2 (sqrt.f64 2)) (/.f64 a2 a1)) (fma.f64 -1/8 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 3))) (fma.f64 1/16 (/.f64 (/.f64 (pow.f64 a2 6) (sqrt.f64 2)) (pow.f64 a1 5)) (/.f64 a1 (sqrt.f64 2)))))","(/.f64 a2 (sqrt.f64 2))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (/.f64 a2 (sqrt.f64 2)))","(fma.f64 1/2 (/.f64 (*.f64 a1 a1) (*.f64 a2 (sqrt.f64 2))) (/.f64 a2 (sqrt.f64 2)))","(fma.f64 1/2 (*.f64 (/.f64 a1 (sqrt.f64 2)) (/.f64 a1 a2)) (/.f64 a2 (sqrt.f64 2)))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (/.f64 a2 (sqrt.f64 2))))","(fma.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) (fma.f64 1/2 (/.f64 (*.f64 a1 a1) (*.f64 a2 (sqrt.f64 2))) (/.f64 a2 (sqrt.f64 2))))","(fma.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) (fma.f64 1/2 (*.f64 (/.f64 a1 (sqrt.f64 2)) (/.f64 a1 a2)) (/.f64 a2 (sqrt.f64 2))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3)))) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 5)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (/.f64 a2 (sqrt.f64 2)))))","(fma.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) (fma.f64 1/16 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 5))) (fma.f64 1/2 (/.f64 (*.f64 a1 a1) (*.f64 a2 (sqrt.f64 2))) (/.f64 a2 (sqrt.f64 2)))))","(fma.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) (fma.f64 1/16 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 5))) (fma.f64 1/2 (*.f64 (/.f64 a1 (sqrt.f64 2)) (/.f64 a1 a2)) (/.f64 a2 (sqrt.f64 2)))))","(fma.f64 -1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) (fma.f64 1/16 (/.f64 (/.f64 (pow.f64 a1 6) (sqrt.f64 2)) (pow.f64 a2 5)) (fma.f64 1/2 (*.f64 (/.f64 a1 (sqrt.f64 2)) (/.f64 a1 a2)) (/.f64 a2 (sqrt.f64 2)))))","(*.f64 -1 (/.f64 a2 (sqrt.f64 2)))","(neg.f64 (/.f64 a2 (sqrt.f64 2)))","(/.f64 (neg.f64 a2) (sqrt.f64 2))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (*.f64 -1 (/.f64 a2 (sqrt.f64 2))))","(fma.f64 -1/2 (/.f64 (*.f64 a1 a1) (*.f64 a2 (sqrt.f64 2))) (neg.f64 (/.f64 a2 (sqrt.f64 2))))","(-.f64 (*.f64 (/.f64 -1/2 a2) (/.f64 a1 (/.f64 (sqrt.f64 2) a1))) (/.f64 a2 (sqrt.f64 2)))","(-.f64 (*.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1) (/.f64 -1/2 a2)) (/.f64 a2 (sqrt.f64 2)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3)))) (*.f64 -1 (/.f64 a2 (sqrt.f64 2)))))","(fma.f64 -1/2 (/.f64 (*.f64 a1 a1) (*.f64 a2 (sqrt.f64 2))) (fma.f64 1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) (neg.f64 (/.f64 a2 (sqrt.f64 2)))))","(-.f64 (fma.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) (/.f64 a1 a2)) -1/2 (*.f64 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) 1/8)) (/.f64 a2 (sqrt.f64 2)))","(-.f64 (fma.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) (/.f64 a1 a2)) -1/2 (/.f64 (/.f64 (*.f64 (pow.f64 a1 4) 1/8) (sqrt.f64 2)) (pow.f64 a2 3))) (/.f64 a2 (sqrt.f64 2)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 a1 2) (*.f64 (sqrt.f64 2) a2))) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 5)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3)))) (*.f64 -1 (/.f64 a2 (sqrt.f64 2))))))","(fma.f64 -1/2 (/.f64 (*.f64 a1 a1) (*.f64 a2 (sqrt.f64 2))) (fma.f64 -1/16 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 5))) (fma.f64 1/8 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) (neg.f64 (/.f64 a2 (sqrt.f64 2))))))","(fma.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) (/.f64 a1 a2)) -1/2 (-.f64 (fma.f64 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 5))) -1/16 (*.f64 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 3))) 1/8)) (/.f64 a2 (sqrt.f64 2))))","(fma.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) (/.f64 a1 a2)) -1/2 (-.f64 (fma.f64 (/.f64 (/.f64 (pow.f64 a1 6) (sqrt.f64 2)) (pow.f64 a2 5)) -1/16 (/.f64 (/.f64 (*.f64 (pow.f64 a1 4) 1/8) (sqrt.f64 2)) (pow.f64 a2 3))) (/.f64 a2 (sqrt.f64 2))))","(/.f64 (pow.f64 a2 2) (sqrt.f64 2))","(/.f64 (*.f64 a2 a2) (sqrt.f64 2))","(/.f64 a2 (/.f64 (sqrt.f64 2) a2))","(*.f64 (/.f64 a2 (sqrt.f64 2)) a2)","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 (+.f64 (*.f64 5/64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 a2 6)))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (sqrt.f64 2)))) (pow.f64 a1 8))))","(+.f64 (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2))) (*.f64 (+.f64 (/.f64 5/64 (*.f64 (sqrt.f64 2) (pow.f64 a2 6))) (/.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (sqrt.f64 2))) (pow.f64 a1 8)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (fma.f64 (-.f64 (/.f64 5/64 (*.f64 (sqrt.f64 2) (pow.f64 a2 6))) (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (sqrt.f64 2))) (pow.f64 a1 8) (/.f64 a1 (/.f64 (sqrt.f64 2) a1))))","(+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (fma.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2)) (*.f64 (/.f64 1 (pow.f64 a2 6)) 1/64)) (sqrt.f64 2)) (pow.f64 a1 8) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)))","(+.f64 (*.f64 (pow.f64 a1 12) (+.f64 (*.f64 1/256 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 a2 10)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4))))) (sqrt.f64 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (*.f64 (sqrt.f64 2) (pow.f64 a2 4)))))))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 (+.f64 (*.f64 5/64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 a2 6)))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (sqrt.f64 2)))) (pow.f64 a1 8)))))","(fma.f64 (pow.f64 a1 12) (+.f64 (/.f64 1/256 (*.f64 (sqrt.f64 2) (pow.f64 a2 10))) (fma.f64 -1 (/.f64 (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a2 8)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (*.f64 a2 a2)))) (*.f64 a2 a2)) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4))))) (sqrt.f64 2)) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a2 8)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (*.f64 a2 a2)))) (*.f64 (sqrt.f64 2) (*.f64 a2 a2))) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (*.f64 (sqrt.f64 2) (pow.f64 a2 4))))))) (+.f64 (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2))) (*.f64 (+.f64 (/.f64 5/64 (*.f64 (sqrt.f64 2) (pow.f64 a2 6))) (/.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (sqrt.f64 2))) (pow.f64 a1 8))))","(+.f64 (fma.f64 (-.f64 (/.f64 5/64 (*.f64 (sqrt.f64 2) (pow.f64 a2 6))) (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (sqrt.f64 2))) (pow.f64 a1 8) (/.f64 a1 (/.f64 (sqrt.f64 2) a1))) (fma.f64 (pow.f64 a1 12) (+.f64 (/.f64 1/256 (*.f64 (sqrt.f64 2) (pow.f64 a2 10))) (-.f64 (fma.f64 1/2 (/.f64 (-.f64 (/.f64 1/64 (pow.f64 a2 8)) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (*.f64 a2 a2)))) (*.f64 a2 (*.f64 a2 (sqrt.f64 2)))) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (*.f64 (sqrt.f64 2) (pow.f64 a2 4))))) (/.f64 (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a2 a2) (pow.f64 a2 8))) (/.f64 (*.f64 -1/2 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (pow.f64 a2 4))) (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2))) (sqrt.f64 2)))) (/.f64 a2 (/.f64 (sqrt.f64 2) a2))))","(fma.f64 (pow.f64 a1 12) (+.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a2 8)) (/.f64 (*.f64 1/2 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (*.f64 a2 a2))) (*.f64 a2 (*.f64 a2 (sqrt.f64 2)))) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (*.f64 (sqrt.f64 2) (pow.f64 a2 4))))) (-.f64 (/.f64 1/256 (*.f64 (sqrt.f64 2) (pow.f64 a2 10))) (/.f64 (fma.f64 1/2 (+.f64 (/.f64 1/64 (*.f64 (*.f64 a2 a2) (pow.f64 a2 8))) (/.f64 (*.f64 1/2 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (pow.f64 a2 4))) (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (/.f64 1/256 (pow.f64 a2 10)))) (sqrt.f64 2)))) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (fma.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2)) (*.f64 (/.f64 1 (pow.f64 a2 6)) 1/64)) (sqrt.f64 2)) (pow.f64 a1 8) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))))","(/.f64 (pow.f64 a1 2) (sqrt.f64 2))","(/.f64 (*.f64 a1 a1) (sqrt.f64 2))","(/.f64 a1 (/.f64 (sqrt.f64 2) a1))","(*.f64 (/.f64 a1 (sqrt.f64 2)) a1)","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))))","(fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (*.f64 a1 a1)) (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (fma.f64 1/4 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (*.f64 a1 a1)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))))","(+.f64 (fma.f64 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) 1/4 (/.f64 a1 (/.f64 (sqrt.f64 2) a1))) (fma.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) (/.f64 a2 (/.f64 (sqrt.f64 2) a2))))","(+.f64 (fma.f64 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) 1/4 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)) (fma.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) (*.f64 (/.f64 a2 (sqrt.f64 2)) a2)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))))))","(fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (*.f64 a1 a1)) (fma.f64 -1/8 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4))) (fma.f64 1/8 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4))) (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (fma.f64 1/4 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (*.f64 a1 a1)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))))))","(+.f64 (*.f64 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4))) 0) (+.f64 (fma.f64 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) 1/4 (/.f64 a1 (/.f64 (sqrt.f64 2) a1))) (fma.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))))","(+.f64 (+.f64 (fma.f64 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) 1/4 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)) (fma.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) (*.f64 (/.f64 a2 (sqrt.f64 2)) a2))) 0)","(/.f64 (pow.f64 a1 2) (sqrt.f64 2))","(/.f64 (*.f64 a1 a1) (sqrt.f64 2))","(/.f64 a1 (/.f64 (sqrt.f64 2) a1))","(*.f64 (/.f64 a1 (sqrt.f64 2)) a1)","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))))","(fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (*.f64 a1 a1)) (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (fma.f64 1/4 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (*.f64 a1 a1)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))))","(+.f64 (fma.f64 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) 1/4 (/.f64 a1 (/.f64 (sqrt.f64 2) a1))) (fma.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) (/.f64 a2 (/.f64 (sqrt.f64 2) a2))))","(+.f64 (fma.f64 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) 1/4 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)) (fma.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) (*.f64 (/.f64 a2 (sqrt.f64 2)) a2)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))))))","(fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (*.f64 a1 a1)) (fma.f64 -1/8 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4))) (fma.f64 1/8 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4))) (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (fma.f64 1/4 (/.f64 (/.f64 (pow.f64 a2 4) (sqrt.f64 2)) (*.f64 a1 a1)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))))))","(+.f64 (*.f64 (/.f64 (pow.f64 a2 6) (*.f64 (sqrt.f64 2) (pow.f64 a1 4))) 0) (+.f64 (fma.f64 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) 1/4 (/.f64 a1 (/.f64 (sqrt.f64 2) a1))) (fma.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))))","(+.f64 (+.f64 (fma.f64 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) 1/4 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)) (fma.f64 -1/4 (/.f64 (pow.f64 a2 4) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) (*.f64 (/.f64 a2 (sqrt.f64 2)) a2))) 0)","(/.f64 (pow.f64 a1 2) (sqrt.f64 2))","(/.f64 (*.f64 a1 a1) (sqrt.f64 2))","(/.f64 a1 (/.f64 (sqrt.f64 2) a1))","(*.f64 (/.f64 a1 (sqrt.f64 2)) a1)","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 (+.f64 (*.f64 5/64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 a1 6)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (sqrt.f64 2)))) (pow.f64 a2 8))))","(+.f64 (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2))) (*.f64 (pow.f64 a2 8) (+.f64 (/.f64 5/64 (*.f64 (sqrt.f64 2) (pow.f64 a1 6))) (/.f64 (neg.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (sqrt.f64 2)))))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (fma.f64 (pow.f64 a2 8) (-.f64 (/.f64 5/64 (*.f64 (sqrt.f64 2) (pow.f64 a1 6))) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (sqrt.f64 2))) (/.f64 a1 (/.f64 (sqrt.f64 2) a1))))","(+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (fma.f64 (pow.f64 a2 8) (/.f64 (-.f64 (*.f64 (/.f64 1 (pow.f64 a1 6)) 1/64) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (sqrt.f64 2)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (+.f64 (*.f64 (pow.f64 a2 12) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))))) (sqrt.f64 2))) (+.f64 (*.f64 1/256 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 a1 10)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 (sqrt.f64 2) (pow.f64 a1 4)))))))) (*.f64 (+.f64 (*.f64 5/64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 a1 6)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (sqrt.f64 2)))) (pow.f64 a2 8)))))","(+.f64 (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2))) (fma.f64 (pow.f64 a2 12) (fma.f64 -1 (/.f64 (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 a1 a1)))) (*.f64 a1 a1)) (*.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))))) (sqrt.f64 2)) (+.f64 (/.f64 1/256 (*.f64 (sqrt.f64 2) (pow.f64 a1 10))) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 a1 a1)))) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) (*.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 (sqrt.f64 2) (pow.f64 a1 4))))))) (*.f64 (pow.f64 a2 8) (+.f64 (/.f64 5/64 (*.f64 (sqrt.f64 2) (pow.f64 a1 6))) (/.f64 (neg.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (sqrt.f64 2))))))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (+.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (fma.f64 (pow.f64 a2 8) (-.f64 (/.f64 5/64 (*.f64 (sqrt.f64 2) (pow.f64 a1 6))) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (sqrt.f64 2))) (*.f64 (pow.f64 a2 12) (-.f64 (+.f64 (/.f64 1/256 (*.f64 (sqrt.f64 2) (pow.f64 a1 10))) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (/.f64 (*.f64 1/2 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 a1 a1))) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) (*.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 (sqrt.f64 2) (pow.f64 a1 4)))))) (/.f64 (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a1 a1) (pow.f64 a1 8))) (/.f64 (*.f64 -1/2 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (pow.f64 a1 4))) (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2))) (sqrt.f64 2)))))))","(+.f64 (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)) (fma.f64 (pow.f64 a2 12) (+.f64 (/.f64 1/256 (*.f64 (sqrt.f64 2) (pow.f64 a1 10))) (-.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (/.f64 (*.f64 -1/2 (-.f64 (/.f64 -1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 a1 a1))) (*.f64 (sqrt.f64 2) (*.f64 a1 a1))) (*.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 (sqrt.f64 2) (pow.f64 a1 4))))) (/.f64 (fma.f64 1/2 (+.f64 (/.f64 1/64 (*.f64 (*.f64 a1 a1) (pow.f64 a1 8))) (/.f64 (*.f64 -1/2 (-.f64 (/.f64 -1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (pow.f64 a1 4))) (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (/.f64 1/256 (pow.f64 a1 10)))) (sqrt.f64 2)))) (*.f64 (pow.f64 a2 8) (/.f64 (-.f64 (*.f64 (/.f64 1 (pow.f64 a1 6)) 1/64) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (sqrt.f64 2)))))","(/.f64 (pow.f64 a2 2) (sqrt.f64 2))","(/.f64 (*.f64 a2 a2) (sqrt.f64 2))","(/.f64 a2 (/.f64 (sqrt.f64 2) a2))","(*.f64 (/.f64 a2 (sqrt.f64 2)) a2)","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))))","(fma.f64 1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (*.f64 a2 a2))) (fma.f64 -1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (*.f64 a2 a2))) (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))))","(+.f64 (+.f64 (*.f64 (/.f64 (pow.f64 a1 4) (*.f64 a2 (*.f64 a2 (sqrt.f64 2)))) 0) (/.f64 a1 (/.f64 (sqrt.f64 2) a1))) (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (+.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1) 0))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 4)))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 1/8 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 4)))))))))","(fma.f64 -1/8 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 4))) (fma.f64 1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (*.f64 a2 a2))) (fma.f64 -1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (*.f64 a2 a2))) (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 a1 a1) (sqrt.f64 2)) (*.f64 1/8 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 4)))))))))","(fma.f64 -1/8 (/.f64 (/.f64 (pow.f64 a1 6) (pow.f64 a2 4)) (sqrt.f64 2)) (+.f64 (+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (fma.f64 1/8 (/.f64 (/.f64 (pow.f64 a1 6) (pow.f64 a2 4)) (sqrt.f64 2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))) (*.f64 (/.f64 (pow.f64 a1 4) (*.f64 a2 (*.f64 a2 (sqrt.f64 2)))) 0)))","(fma.f64 -1/8 (/.f64 (/.f64 (pow.f64 a1 6) (sqrt.f64 2)) (pow.f64 a2 4)) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (+.f64 (fma.f64 1/8 (/.f64 (/.f64 (pow.f64 a1 6) (sqrt.f64 2)) (pow.f64 a2 4)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)) 0)))","(/.f64 (pow.f64 a2 2) (sqrt.f64 2))","(/.f64 (*.f64 a2 a2) (sqrt.f64 2))","(/.f64 a2 (/.f64 (sqrt.f64 2) a2))","(*.f64 (/.f64 a2 (sqrt.f64 2)) a2)","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))","(+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (/.f64 (pow.f64 a1 2) (sqrt.f64 2)))))","(fma.f64 1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (*.f64 a2 a2))) (fma.f64 -1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (*.f64 a2 a2))) (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2)))))","(+.f64 (+.f64 (*.f64 (/.f64 (pow.f64 a1 4) (*.f64 a2 (*.f64 a2 (sqrt.f64 2)))) 0) (/.f64 a1 (/.f64 (sqrt.f64 2) a1))) (/.f64 a2 (/.f64 (sqrt.f64 2) a2)))","(+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (+.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1) 0))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 4)))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 1/8 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 4)))))))))","(fma.f64 -1/8 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 4))) (fma.f64 1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (*.f64 a2 a2))) (fma.f64 -1/4 (/.f64 (pow.f64 a1 4) (*.f64 (sqrt.f64 2) (*.f64 a2 a2))) (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 a1 a1) (sqrt.f64 2)) (*.f64 1/8 (/.f64 (pow.f64 a1 6) (*.f64 (sqrt.f64 2) (pow.f64 a2 4)))))))))","(fma.f64 -1/8 (/.f64 (/.f64 (pow.f64 a1 6) (pow.f64 a2 4)) (sqrt.f64 2)) (+.f64 (+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (fma.f64 1/8 (/.f64 (/.f64 (pow.f64 a1 6) (pow.f64 a2 4)) (sqrt.f64 2)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1)))) (*.f64 (/.f64 (pow.f64 a1 4) (*.f64 a2 (*.f64 a2 (sqrt.f64 2)))) 0)))","(fma.f64 -1/8 (/.f64 (/.f64 (pow.f64 a1 6) (sqrt.f64 2)) (pow.f64 a2 4)) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (+.f64 (fma.f64 1/8 (/.f64 (/.f64 (pow.f64 a1 6) (sqrt.f64 2)) (pow.f64 a2 4)) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)) 0)))","(/.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (sqrt.f64 2))","(/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)) (sqrt.f64 2)))))","(+.f64 (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (*.f64 th th)))))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 th th)) (/.f64 a1 (/.f64 (sqrt.f64 2) a1))))","(+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 th th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2))) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)))","(+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)) (sqrt.f64 2))) (*.f64 1/24 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)) (sqrt.f64 2))))))","(+.f64 (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (*.f64 th th))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (pow.f64 th 4))))))","(+.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (+.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 th th)) (*.f64 1/24 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (pow.f64 th 4))))))","(+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 th th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2))) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)) (*.f64 (/.f64 1/24 (sqrt.f64 2)) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (pow.f64 th 4)))))","(+.f64 (*.f64 -1/720 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 6)) (sqrt.f64 2))) (+.f64 (/.f64 (pow.f64 a2 2) (sqrt.f64 2)) (+.f64 (/.f64 (pow.f64 a1 2) (sqrt.f64 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)) (sqrt.f64 2))) (*.f64 1/24 (/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)) (sqrt.f64 2)))))))","(fma.f64 -1/720 (/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (pow.f64 th 6))) (+.f64 (+.f64 (/.f64 (*.f64 a2 a2) (sqrt.f64 2)) (/.f64 (*.f64 a1 a1) (sqrt.f64 2))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (*.f64 th th))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (pow.f64 th 4)))))))","(+.f64 (+.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (*.f64 th th)) (*.f64 1/24 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (pow.f64 th 4))))) (fma.f64 -1/720 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (pow.f64 th 6)) (/.f64 a2 (/.f64 (sqrt.f64 2) a2))))","(+.f64 (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 th th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2))) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)) (*.f64 (/.f64 1/24 (sqrt.f64 2)) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (pow.f64 th 4)))) (fma.f64 -1/720 (*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (pow.f64 th 6)) (*.f64 (/.f64 a2 (sqrt.f64 2)) a2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2)))","(/.f64 (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (+.f64 (*.f64 a1 a1) (*.f64 a2 a2)) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)) (cos.f64 th))","(*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (fma.f64 a1 a1 (*.f64 a2 a2)))","(/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th))","(*.f64 (*.f64 a2 a2) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th)))","(*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6))))) (*.f64 5/64 (/.f64 1 (pow.f64 a2 6)))) (*.f64 (pow.f64 a1 8) (cos.f64 th))) (sqrt.f64 2))))","(+.f64 (+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th)))) (/.f64 (fma.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (/.f64 5/64 (pow.f64 a2 6))) (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 a1 8) (cos.f64 th)))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (+.f64 (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th)) (*.f64 (/.f64 (-.f64 (/.f64 5/64 (pow.f64 a2 6)) (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (sqrt.f64 2)) (*.f64 (pow.f64 a1 8) (cos.f64 th)))))","(+.f64 (*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) (*.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2)) (*.f64 (/.f64 1 (pow.f64 a2 6)) 1/64)) (sqrt.f64 2)) (*.f64 (pow.f64 a1 8) (cos.f64 th))))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 12) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4)))))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4))) (*.f64 1/256 (/.f64 1 (pow.f64 a2 10)))))) (cos.f64 th))) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6))))) (*.f64 5/64 (/.f64 1 (pow.f64 a2 6)))) (*.f64 (pow.f64 a1 8) (cos.f64 th))) (sqrt.f64 2)))))","(+.f64 (+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th)))) (+.f64 (/.f64 (fma.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (/.f64 5/64 (pow.f64 a2 6))) (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 a1 8) (cos.f64 th)))) (/.f64 (pow.f64 a1 12) (/.f64 (sqrt.f64 2) (*.f64 (cos.f64 th) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a2 8)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (*.f64 a2 a2)))) (*.f64 a2 a2)) (fma.f64 -1 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a2 8)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (*.f64 a2 a2)))) (*.f64 a2 a2)) (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4))))) (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (/.f64 1/256 (pow.f64 a2 10))))))))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (+.f64 (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th)) (+.f64 (*.f64 (/.f64 (-.f64 (/.f64 5/64 (pow.f64 a2 6)) (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (sqrt.f64 2)) (*.f64 (pow.f64 a1 8) (cos.f64 th))) (*.f64 (/.f64 (pow.f64 a1 12) (sqrt.f64 2)) (*.f64 (cos.f64 th) (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a2 a2) (pow.f64 a2 8))) (/.f64 (*.f64 -1/2 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (pow.f64 a2 4))) (-.f64 (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (/.f64 1/256 (pow.f64 a2 10))) (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a2 a2) (pow.f64 a2 8))) (/.f64 (*.f64 -1/2 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (pow.f64 a2 4))) (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2))))))))))","(+.f64 (+.f64 (*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) (*.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2)) (*.f64 (/.f64 1 (pow.f64 a2 6)) 1/64)) (sqrt.f64 2)) (*.f64 (pow.f64 a1 8) (cos.f64 th)))) (*.f64 (*.f64 (cos.f64 th) (+.f64 (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (/.f64 1/256 (pow.f64 a2 10))) (-.f64 (*.f64 (+.f64 (/.f64 1/64 (*.f64 (*.f64 a2 a2) (pow.f64 a2 8))) (/.f64 (*.f64 1/2 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (pow.f64 a2 4))) 0) (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (/.f64 1/256 (pow.f64 a2 10)))))) (/.f64 (pow.f64 a1 12) (sqrt.f64 2))))","(/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th))","(*.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1) (cos.f64 th))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th)))","(*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))) (*.f64 (/.f64 (*.f64 (pow.f64 a2 4) 0) (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (fma.f64 (/.f64 0 (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th))))","(+.f64 (*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) 0)","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a1 2))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a2 6)) (*.f64 -1/8 (pow.f64 a2 6))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a1 4))))))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))) (*.f64 (/.f64 (*.f64 (pow.f64 a2 4) 0) (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (fma.f64 (/.f64 0 (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th))))","(+.f64 (*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) 0)","(/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th))","(*.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1) (cos.f64 th))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th)))","(*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a1 2)))))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))) (*.f64 (/.f64 (*.f64 (pow.f64 a2 4) 0) (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (fma.f64 (/.f64 0 (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th))))","(+.f64 (*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) 0)","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a1 2))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a2 6)) (*.f64 -1/8 (pow.f64 a2 6))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a1 4))))))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))) (*.f64 (/.f64 (*.f64 (pow.f64 a2 4) 0) (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (fma.f64 (/.f64 0 (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th))))","(+.f64 (*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) 0)","(/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th))","(*.f64 (*.f64 (/.f64 a1 (sqrt.f64 2)) a1) (cos.f64 th))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th)))","(*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)))","(+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 5/64 (/.f64 1 (pow.f64 a1 6)))) (*.f64 (cos.f64 th) (pow.f64 a2 8))) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))))","(+.f64 (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (/.f64 (fma.f64 -1 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (/.f64 5/64 (pow.f64 a1 6))) (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 a2 8) (cos.f64 th))))))","(+.f64 (+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th))) (/.f64 (-.f64 (/.f64 5/64 (pow.f64 a1 6)) (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 a2 8) (cos.f64 th)))))","(+.f64 (*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 1 (pow.f64 a1 6)) 1/64) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (/.f64 (sqrt.f64 2) (cos.f64 th))) (pow.f64 a2 8)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 5/64 (/.f64 1 (pow.f64 a1 6)))) (*.f64 (pow.f64 a2 8) (cos.f64 th))) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))) (+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 a1 10))) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))))))))) (*.f64 (cos.f64 th) (pow.f64 a2 12))) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2)))))","(+.f64 (+.f64 (/.f64 (fma.f64 -1 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (/.f64 5/64 (pow.f64 a1 6))) (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 a2 8) (cos.f64 th)))) (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th)))) (+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (/.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 a1 a1)))) (*.f64 a1 a1)) (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (+.f64 (/.f64 1/256 (pow.f64 a1 10)) (neg.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 a1 a1)))) (*.f64 a1 a1)) (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2) (*.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))))))))) (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 a2 12) (cos.f64 th))))))","(+.f64 (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th)) (+.f64 (+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (*.f64 (/.f64 (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a1 a1) (pow.f64 a1 8))) (/.f64 (*.f64 -1/2 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (pow.f64 a1 4))) (-.f64 (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (/.f64 1/256 (pow.f64 a1 10))) (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a1 a1) (pow.f64 a1 8))) (/.f64 (*.f64 -1/2 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (pow.f64 a1 4))) (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2))))) (sqrt.f64 2)) (*.f64 (pow.f64 a2 12) (cos.f64 th)))) (/.f64 (-.f64 (/.f64 5/64 (pow.f64 a1 6)) (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 a2 8) (cos.f64 th))))))","(+.f64 (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 1 (pow.f64 a1 6)) 1/64) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (/.f64 (sqrt.f64 2) (cos.f64 th))) (pow.f64 a2 8)) (+.f64 (*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) (*.f64 (*.f64 (pow.f64 a2 12) (cos.f64 th)) (/.f64 (-.f64 (fma.f64 1/2 (+.f64 (/.f64 1/64 (*.f64 (*.f64 a1 a1) (pow.f64 a1 8))) (/.f64 (*.f64 -1/2 (-.f64 (/.f64 -1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (pow.f64 a1 4))) (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (/.f64 1/256 (pow.f64 a1 10)))) (fma.f64 1/2 (+.f64 (/.f64 1/64 (*.f64 (*.f64 a1 a1) (pow.f64 a1 8))) (/.f64 (*.f64 -1/2 (-.f64 (/.f64 -1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (pow.f64 a1 4))) (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (/.f64 1/256 (pow.f64 a1 10))))) (sqrt.f64 2)))))","(/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th))","(*.f64 (*.f64 a2 a2) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th)))","(*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))) (*.f64 (/.f64 (*.f64 (pow.f64 a2 4) 0) (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (fma.f64 (/.f64 0 (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th))))","(+.f64 (*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) 0)","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a1 6)) (*.f64 -1/8 (pow.f64 a1 6))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a2 4))) (+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a2 2))))))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))) (*.f64 (/.f64 (*.f64 (pow.f64 a2 4) 0) (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (fma.f64 (/.f64 0 (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th))))","(+.f64 (*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) 0)","(/.f64 (*.f64 (pow.f64 a2 2) (cos.f64 th)) (sqrt.f64 2))","(/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th)))","(*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th))","(*.f64 (*.f64 a2 a2) (/.f64 (cos.f64 th) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th)))","(*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1)))","(+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a2 2)))))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))) (*.f64 (/.f64 (*.f64 (pow.f64 a2 4) 0) (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (fma.f64 (/.f64 0 (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th))))","(+.f64 (*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) 0)","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a1 6)) (*.f64 -1/8 (pow.f64 a1 6))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a2 4))) (+.f64 (/.f64 (*.f64 (cos.f64 th) (pow.f64 a2 2)) (sqrt.f64 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a1 2) (cos.f64 th)) (sqrt.f64 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th)) (*.f64 (sqrt.f64 2) (pow.f64 a2 2))))))","(+.f64 (/.f64 (*.f64 a2 a2) (/.f64 (sqrt.f64 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 a1 a1) (/.f64 (sqrt.f64 2) (cos.f64 th))) (*.f64 (/.f64 (*.f64 (pow.f64 a2 4) 0) (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)))))","(+.f64 (*.f64 (/.f64 a2 (/.f64 (sqrt.f64 2) a2)) (cos.f64 th)) (fma.f64 (/.f64 0 (sqrt.f64 2)) (/.f64 (cos.f64 th) (*.f64 a1 a1)) (*.f64 (/.f64 a1 (/.f64 (sqrt.f64 2) a1)) (cos.f64 th))))","(+.f64 (*.f64 (cos.f64 th) (+.f64 (*.f64 (/.f64 a2 (sqrt.f64 2)) a2) (*.f64 (/.f64 a1 (sqrt.f64 2)) a1))) 0)"]],"stop":[["node limit",1]],"time":60.91796875,"type":"simplify"},{"compiler":[[6734,4547]],"time":74.926025390625,"type":"eval"},{"alts":[["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","next",0.45445253907376815],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","done",0.4557800781475362],["(/.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (pow.f64 2 1/4)) (pow.f64 2 1/4))","fresh",0.4743538574528623],["(*.f64 (cos.f64 th) (pow.f64 (pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) -2) -1))","fresh",0.8842632867810718],["(/.f64 1 (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))","fresh",0.8132106500228834],["(/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))","fresh",0.8070193902544414],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","done",0.4245300781475362]],"compiler":[[15,12],[15,10],[19,16],[17,14],[16,13],[14,11],[18,12],[15,12],[19,16],[17,14],[16,13],[14,11]],"count":[[251,7]],"kept":[{"done":[1,1],"fresh":[5,4],"new":[244,1],"picked":[1,1]}],"min-error":[0],"time":67.976806640625,"type":"prune"},{"compiler":[[42,25]],"locations":[["(cos.f64 th)",0.00390625,false],["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))",0.1640625,true],["(*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2))",0.4264450195368841,true]],"time":12.487060546875,"type":"localize"},{"count":[[2,60]],"series":[["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","a2","-inf",0.257080078125],["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","a2","inf",0.385986328125],["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","a2","0",0.754150390625],["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","a1","-inf",0.283935546875],["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","a1","inf",0.383056640625],["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","a1","0",0.73486328125],["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","th","-inf",0.35205078125],["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","th","inf",0.406005859375],["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","th","0",0.41796875],["(*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2))","a2","-inf",0.244140625],["(*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2))","a2","inf",0.3798828125],["(*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2))","a2","0",1.135986328125],["(*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2))","a1","-inf",0.31494140625],["(*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2))","a1","inf",0.404052734375],["(*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2))","a1","0",1.369140625]],"time":8.173095703125,"type":"series"},{"count":[[2,62]],"egraph":[[2,2788,29,0.025799333],[1,249,29,0.004139625],[0,12,31,0.000367042]],"inputs":[["(*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2))","(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (hypot.f64 a1 a2) 2)) (sqrt.f64 1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (hypot.f64 a1 a2) 2)) (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (hypot.f64 a1 a2) 2)) (sqrt.f64 1/2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (hypot.f64 a1 a2) 2)) (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (hypot.f64 a1 a2) (pow.f64 2 -1/4)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (hypot.f64 a1 a2) (pow.f64 2 -1/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2)))) 2)) (cbrt.f64 (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2))))) (sqrt.f64 (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 (hypot.f64 a1 a2) 2)) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (hypot.f64 a1 a2) (pow.f64 2 -1/4)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (hypot.f64 a1 a2) (pow.f64 2 -1/4)) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (hypot.f64 a1 a2) (pow.f64 2 -1/4))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 1/2)) 1) (*.f64 2 (log.f64 (hypot.f64 a1 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (sqrt.f64 1/2)) (*.f64 (*.f64 2 (log.f64 (hypot.f64 a1 a2))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 1/2)) 1) (*.f64 (*.f64 2 (log.f64 (hypot.f64 a1 a2))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 2 (log.f64 (hypot.f64 a1 a2))) 1) (log.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 2 (log.f64 (hypot.f64 a1 a2))) (*.f64 (log.f64 (sqrt.f64 1/2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 2 (log.f64 (hypot.f64 a1 a2))) 1) (*.f64 (log.f64 (sqrt.f64 1/2)) 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (cos.f64 th) 2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th))) (hypot.f64 a1 a2)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th))) (hypot.f64 a1 a2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))) 2)) (cbrt.f64 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)))))) (sqrt.f64 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (cos.f64 th) 2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 4) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (pow.f64 (hypot.f64 a1 a2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th))) (hypot.f64 a1 a2)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th))) (hypot.f64 a1 a2)) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th))) (hypot.f64 a1 a2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 2 (log.f64 (hypot.f64 a1 a2))) 1) (log.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2))) 1) (log.f64 (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2))) (*.f64 (log.f64 (cos.f64 th)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2))) 1) (*.f64 (log.f64 (cos.f64 th)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (cos.f64 th)) 1) (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (cos.f64 th)) (*.f64 (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (cos.f64 th)) 1) (*.f64 (fma.f64 2 (log.f64 (hypot.f64 a1 a2)) (log.f64 (sqrt.f64 1/2))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th))) (*.f64 (*.f64 2 (log.f64 (hypot.f64 a1 a2))) 1)))))))"]],"rules":[["egg-rr",32],["egg-rr",30]],"stop":[["node limit",1]],"time":49.100830078125,"type":"rewrite"},{"count":[[122,108]],"egraph":[[2,2732,1901,0.017198917],[1,723,2328,0.005347792],[0,223,2661,0.0011865]],"inputs":[["(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6))))) (*.f64 5/64 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a1 8))) (+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6))))) (*.f64 5/64 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a1 8))) (+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 12) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4))) (+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 a2 10))) (*.f64 -1 (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4))))))))))))))","(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4)))) (pow.f64 a1 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4)))) (pow.f64 a1 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 1/8 (pow.f64 a2 6)) (*.f64 -1/8 (pow.f64 a2 6)))) (pow.f64 a1 4)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))))","(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4)))) (pow.f64 a1 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4)))) (pow.f64 a1 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 1/8 (pow.f64 a2 6)) (*.f64 -1/8 (pow.f64 a2 6)))) (pow.f64 a1 4)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))))","(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 5/64 (/.f64 1 (pow.f64 a1 6)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a2 8))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))) (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)))))) (*.f64 1/256 (/.f64 1 (pow.f64 a1 10)))))) (pow.f64 a2 12))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 5/64 (/.f64 1 (pow.f64 a1 6)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a2 8))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))))","(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4)))) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4)))) (pow.f64 a2 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 a1 6)) (*.f64 1/8 (pow.f64 a1 6))) (sqrt.f64 1/2)) (pow.f64 a2 4)))))","(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4)))) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4)))) (pow.f64 a2 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 a1 6)) (*.f64 1/8 (pow.f64 a1 6))) (sqrt.f64 1/2)) (pow.f64 a2 4)))))","(*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2))))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)))))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)))) (+.f64 (*.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 6)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6))))) (*.f64 5/64 (/.f64 1 (pow.f64 a2 6)))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 8) (cos.f64 th)))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6))))) (*.f64 5/64 (/.f64 1 (pow.f64 a2 6)))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 8) (cos.f64 th)))) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 12) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4)))))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4))) (*.f64 1/256 (/.f64 1 (pow.f64 a2 10)))))) (cos.f64 th)))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th))) (pow.f64 a1 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a2 6)) (*.f64 -1/8 (pow.f64 a2 6))) (cos.f64 th))) (pow.f64 a1 4)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th))) (pow.f64 a1 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th))) (pow.f64 a1 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a2 6)) (*.f64 -1/8 (pow.f64 a2 6))) (cos.f64 th))) (pow.f64 a1 4)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th))) (pow.f64 a1 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 5/64 (/.f64 1 (pow.f64 a1 6)))) (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 8)))) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))) (+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 a1 10))) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))))))))) (*.f64 (pow.f64 a2 12) (cos.f64 th)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 5/64 (/.f64 1 (pow.f64 a1 6)))) (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 8)))) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th))) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th))) (pow.f64 a2 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))) (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a1 6)) (*.f64 -1/8 (pow.f64 a1 6))) (cos.f64 th))) (pow.f64 a2 4)))))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th))) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th))) (pow.f64 a2 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))) (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a1 6)) (*.f64 -1/8 (pow.f64 a1 6))) (cos.f64 th))) (pow.f64 a2 4)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6))))) (*.f64 5/64 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a1 8))) (+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (/.f64 5/64 (pow.f64 a2 6))) (pow.f64 a1 8)) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1))))","(*.f64 (sqrt.f64 1/2) (+.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 (-.f64 (/.f64 5/64 (pow.f64 a2 6)) (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (pow.f64 a1 8))))","(*.f64 (sqrt.f64 1/2) (+.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2)) (*.f64 (/.f64 1 (pow.f64 a2 6)) 1/64)) (pow.f64 a1 8))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6))))) (*.f64 5/64 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a1 8))) (+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 12) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4))) (+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 a2 10))) (*.f64 -1 (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4))))))))))))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (/.f64 5/64 (pow.f64 a2 6))) (pow.f64 a1 8)) (fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a1 a1) (*.f64 (pow.f64 a1 12) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a2 8)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (*.f64 a2 a2)))) (*.f64 a2 a2)) (+.f64 (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (/.f64 1/256 (pow.f64 a2 10))) (neg.f64 (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a2 8)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (*.f64 a2 a2)))) (*.f64 a2 a2)) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)))))))))))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (-.f64 (/.f64 5/64 (pow.f64 a2 6)) (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (pow.f64 a1 8)) (*.f64 (sqrt.f64 1/2) (+.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 (pow.f64 a1 12) (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a2 a2) (pow.f64 a2 8))) (/.f64 (*.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) -1/2) (pow.f64 a2 4))) (-.f64 (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (/.f64 1/256 (pow.f64 a2 10))) (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a2 a2) (pow.f64 a2 8))) (/.f64 (*.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) -1/2) (pow.f64 a2 4))) (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2)))))))))","(*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2)) (*.f64 (/.f64 1 (pow.f64 a2 6)) 1/64)) (pow.f64 a1 8)) (+.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 (pow.f64 a1 12) (+.f64 (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (/.f64 1/256 (pow.f64 a2 10))) (-.f64 (*.f64 (-.f64 (/.f64 (/.f64 1/64 (pow.f64 a2 4)) (pow.f64 a2 6)) (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (/.f64 (pow.f64 a2 4) -1/2))) 0) (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2))))))))","(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4)))) (pow.f64 a1 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 4) 0)) (*.f64 a1 a1))))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) 0))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) 0)","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4)))) (pow.f64 a1 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 1/8 (pow.f64 a2 6)) (*.f64 -1/8 (pow.f64 a2 6)))) (pow.f64 a1 4)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 4) 0)) (*.f64 a1 a1))))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) 0))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) 0)","(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4)))) (pow.f64 a1 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 4) 0)) (*.f64 a1 a1))))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) 0))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) 0)","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4)))) (pow.f64 a1 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 1/8 (pow.f64 a2 6)) (*.f64 -1/8 (pow.f64 a2 6)))) (pow.f64 a1 4)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 4) 0)) (*.f64 a1 a1))))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) 0))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) 0)","(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 5/64 (/.f64 1 (pow.f64 a1 6)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a2 8))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (fma.f64 (fma.f64 -1 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (/.f64 5/64 (pow.f64 a1 6))) (*.f64 (sqrt.f64 1/2) (pow.f64 a2 8)) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 8) (-.f64 (/.f64 5/64 (pow.f64 a1 6)) (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))))))","(*.f64 (sqrt.f64 1/2) (+.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 (pow.f64 a2 8) (-.f64 (*.f64 (/.f64 1 (pow.f64 a1 6)) 1/64) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))) (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)))))) (*.f64 1/256 (/.f64 1 (pow.f64 a1 10)))))) (pow.f64 a2 12))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 5/64 (/.f64 1 (pow.f64 a1 6)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a2 8))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 a1 a1)))) (*.f64 a1 a1)) (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (fma.f64 -1 (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 a1 a1)))) (*.f64 a1 a1)) (*.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))))) (/.f64 1/256 (pow.f64 a1 10))))) (pow.f64 a2 12)) (fma.f64 (fma.f64 -1 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (/.f64 5/64 (pow.f64 a1 6))) (*.f64 (sqrt.f64 1/2) (pow.f64 a2 8)) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)))))","(+.f64 (fma.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 12) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 a1 a1)))) (*.f64 a1 a1)) (-.f64 (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (/.f64 1/256 (pow.f64 a1 10))) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 a1 a1)))) (*.f64 a1 a1)) (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2)))))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 8) (-.f64 (/.f64 5/64 (pow.f64 a1 6)) (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)))))) (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 (pow.f64 a2 8) (-.f64 (*.f64 (/.f64 1 (pow.f64 a1 6)) 1/64) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))))) (*.f64 (pow.f64 a2 12) (*.f64 (sqrt.f64 1/2) (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a1 a1) (pow.f64 a1 8))) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (/.f64 (pow.f64 a1 4) -1/2))) (-.f64 (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (/.f64 1/256 (pow.f64 a1 10))) (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a1 a1) (pow.f64 a1 8))) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (/.f64 (pow.f64 a1 4) -1/2))) (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2))))))))","(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4)))) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 4) 0)) (*.f64 a1 a1))))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) 0))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) 0)","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4)))) (pow.f64 a2 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 a1 6)) (*.f64 1/8 (pow.f64 a1 6))) (sqrt.f64 1/2)) (pow.f64 a2 4)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 4) 0)) (*.f64 a1 a1))))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) 0))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) 0)","(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4)))) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 4) 0)) (*.f64 a1 a1))))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) 0))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) 0)","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4)))) (pow.f64 a2 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 a1 6)) (*.f64 1/8 (pow.f64 a1 6))) (sqrt.f64 1/2)) (pow.f64 a2 4)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 4) 0)) (*.f64 a1 a1))))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) 0))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) 0)","(*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (*.f64 th th))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1))))","(fma.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 th th)) -1/2)))","(*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (+.f64 (sqrt.f64 1/2) (*.f64 (*.f64 (sqrt.f64 1/2) -1/2) (*.f64 th th))))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)))))","(fma.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (pow.f64 th 4))) (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (*.f64 th th))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)))))","(fma.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (pow.f64 th 4))) (fma.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 th th)) -1/2))))","(+.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) (*.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) (+.f64 (*.f64 (*.f64 th th) -1/2) (*.f64 (pow.f64 th 4) 1/24))))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)))) (+.f64 (*.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 6)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2))))))","(fma.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (pow.f64 th 4))) (fma.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (pow.f64 th 6))) (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (*.f64 th th))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a2 a2) (*.f64 a1 a1))))))","(fma.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (pow.f64 th 4))) (fma.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (pow.f64 th 6))) (fma.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 th th)) -1/2)))))","(+.f64 (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (+.f64 (sqrt.f64 1/2) (*.f64 (*.f64 (sqrt.f64 1/2) -1/2) (*.f64 th th)))) (*.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))) (+.f64 (*.f64 (pow.f64 th 4) 1/24) (*.f64 (pow.f64 th 6) -1/720))))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 (*.f64 a2 (cos.f64 th))))","(*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)) (cos.f64 th))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6))))) (*.f64 5/64 (/.f64 1 (pow.f64 a2 6)))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 8) (cos.f64 th)))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)) (fma.f64 (fma.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (/.f64 5/64 (pow.f64 a2 6))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 8) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th))) (*.f64 (-.f64 (/.f64 5/64 (pow.f64 a2 6)) (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 8) (cos.f64 th)))))","(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (+.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2)) (*.f64 (/.f64 1 (pow.f64 a2 6)) 1/64)) (pow.f64 a1 8)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6))))) (*.f64 5/64 (/.f64 1 (pow.f64 a2 6)))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 8) (cos.f64 th)))) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 12) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a2 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 2)))) (pow.f64 a2 2))) (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2) (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4)))))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 a2 6)))) (pow.f64 a2 4))) (*.f64 1/256 (/.f64 1 (pow.f64 a2 10)))))) (cos.f64 th)))))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)) (fma.f64 (fma.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (/.f64 5/64 (pow.f64 a2 6))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 8) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (*.f64 (pow.f64 a1 12) (*.f64 (cos.f64 th) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a2 8)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (*.f64 a2 a2)))) (*.f64 a2 a2)) (fma.f64 -1 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a2 8)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (*.f64 a2 a2)))) (*.f64 a2 a2)) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4))) (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2))) (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (/.f64 1/256 (pow.f64 a2 10)))))))))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)) (fma.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (+.f64 (*.f64 a2 a2) (*.f64 (pow.f64 a1 12) (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a2 a2) (pow.f64 a2 8))) (/.f64 (*.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) -1/2) (pow.f64 a2 4))) (-.f64 (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (/.f64 1/256 (pow.f64 a2 10))) (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a2 a2) (pow.f64 a2 8))) (/.f64 (*.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) -1/2) (pow.f64 a2 4))) (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2)))))))) (*.f64 (-.f64 (/.f64 5/64 (pow.f64 a2 6)) (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6)))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 8) (cos.f64 th))))))","(+.f64 (*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2)) (*.f64 (/.f64 1 (pow.f64 a2 6)) 1/64)) (pow.f64 a1 8)) (*.f64 a2 a2)))) (*.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (fma.f64 a1 a1 (*.f64 (pow.f64 a1 12) (+.f64 (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (/.f64 1/256 (pow.f64 a2 10))) (-.f64 (*.f64 (-.f64 (/.f64 (/.f64 1/64 (pow.f64 a2 4)) (pow.f64 a2 6)) (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (/.f64 (pow.f64 a2 4) -1/2))) 0) (fma.f64 1/8 (/.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 a2 3)) 2) (/.f64 1/16 (pow.f64 a2 6))) (pow.f64 a2 4)) (pow.f64 (/.f64 1/16 (pow.f64 a2 5)) 2))))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th))) (pow.f64 a1 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (/.f64 (sqrt.f64 1/2) (/.f64 (*.f64 a1 a1) (*.f64 (*.f64 (pow.f64 a2 4) 0) (cos.f64 th)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (*.f64 (cos.f64 th) 0)))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) 0)","(+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a2 6)) (*.f64 -1/8 (pow.f64 a2 6))) (cos.f64 th))) (pow.f64 a1 4)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th))) (pow.f64 a1 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))))","(+.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (/.f64 (sqrt.f64 1/2) (/.f64 (*.f64 a1 a1) (*.f64 (*.f64 (pow.f64 a2 4) 0) (cos.f64 th)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (*.f64 (cos.f64 th) 0)))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) 0)","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th))) (pow.f64 a1 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (/.f64 (sqrt.f64 1/2) (/.f64 (*.f64 a1 a1) (*.f64 (*.f64 (pow.f64 a2 4) 0) (cos.f64 th)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (*.f64 (cos.f64 th) 0)))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) 0)","(+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a2 6)) (*.f64 -1/8 (pow.f64 a2 6))) (cos.f64 th))) (pow.f64 a1 4)) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a2 4)) (*.f64 1/4 (pow.f64 a2 4))) (cos.f64 th))) (pow.f64 a1 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))))","(+.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (/.f64 (sqrt.f64 1/2) (/.f64 (*.f64 a1 a1) (*.f64 (*.f64 (pow.f64 a2 4) 0) (cos.f64 th)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (*.f64 (cos.f64 th) 0)))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) 0)","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 5/64 (/.f64 1 (pow.f64 a1 6)))) (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 8)))) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(fma.f64 (fma.f64 -1 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (/.f64 5/64 (pow.f64 a1 6))) (*.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (pow.f64 a2 8)) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))","(fma.f64 (-.f64 (/.f64 5/64 (pow.f64 a1 6)) (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 (pow.f64 a2 8) (*.f64 (sqrt.f64 1/2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th))))","(*.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (+.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 (pow.f64 a2 8) (-.f64 (*.f64 (/.f64 1 (pow.f64 a1 6)) 1/64) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))) (+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 a1 10))) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 a1 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 2)))) (pow.f64 a1 2))) (+.f64 (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))))))))) (*.f64 (pow.f64 a2 12) (cos.f64 th)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 a1 6))) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 5/64 (/.f64 1 (pow.f64 a1 6)))) (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 8)))) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 a1 a1)))) (*.f64 a1 a1)) (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (+.f64 (/.f64 1/256 (pow.f64 a1 10)) (neg.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 a1 a1)))) (*.f64 a1 a1)) (+.f64 (*.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4))) (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2))))))) (*.f64 (pow.f64 a2 12) (cos.f64 th))) (fma.f64 (fma.f64 -1 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (/.f64 5/64 (pow.f64 a1 6))) (*.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (pow.f64 a2 8)) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))","(fma.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 a1 a1)))) (*.f64 a1 a1)) (-.f64 (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (/.f64 1/256 (pow.f64 a1 10))) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 a1 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (*.f64 a1 a1)))) (*.f64 a1 a1)) (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2)))))) (*.f64 (pow.f64 a2 12) (cos.f64 th)) (fma.f64 (-.f64 (/.f64 5/64 (pow.f64 a1 6)) (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))) (*.f64 (pow.f64 a2 8) (*.f64 (sqrt.f64 1/2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 12) (*.f64 (cos.f64 th) (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a1 a1) (pow.f64 a1 8))) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (/.f64 (pow.f64 a1 4) -1/2))) (-.f64 (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (/.f64 1/256 (pow.f64 a1 10))) (fma.f64 1/2 (-.f64 (/.f64 1/64 (*.f64 (*.f64 a1 a1) (pow.f64 a1 8))) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (/.f64 (pow.f64 a1 4) -1/2))) (fma.f64 1/8 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 a1 6)) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2)) (pow.f64 a1 4)) (pow.f64 (/.f64 1/16 (pow.f64 a1 5)) 2))))))) (*.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (+.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 (pow.f64 a2 8) (-.f64 (*.f64 (/.f64 1 (pow.f64 a1 6)) 1/64) (pow.f64 (/.f64 -1/8 (pow.f64 a1 3)) 2))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 (*.f64 a2 (cos.f64 th))))","(*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)) (cos.f64 th))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th))) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (/.f64 (sqrt.f64 1/2) (/.f64 (*.f64 a1 a1) (*.f64 (*.f64 (pow.f64 a2 4) 0) (cos.f64 th)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (*.f64 (cos.f64 th) 0)))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) 0)","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th))) (pow.f64 a2 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))) (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a1 6)) (*.f64 -1/8 (pow.f64 a1 6))) (cos.f64 th))) (pow.f64 a2 4)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (/.f64 (sqrt.f64 1/2) (/.f64 (*.f64 a1 a1) (*.f64 (*.f64 (pow.f64 a2 4) 0) (cos.f64 th)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (*.f64 (cos.f64 th) 0)))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) 0)","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 (*.f64 a2 (cos.f64 th))))","(*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)) (cos.f64 th))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 a2 a2) (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th))) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (/.f64 (sqrt.f64 1/2) (/.f64 (*.f64 a1 a1) (*.f64 (*.f64 (pow.f64 a2 4) 0) (cos.f64 th)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (*.f64 (cos.f64 th) 0)))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) 0)","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 a1 4)) (*.f64 1/4 (pow.f64 a1 4))) (cos.f64 th))) (pow.f64 a2 2)) (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))) (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 a1 6)) (*.f64 -1/8 (pow.f64 a1 6))) (cos.f64 th))) (pow.f64 a2 4)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (/.f64 (sqrt.f64 1/2) (/.f64 (*.f64 a1 a1) (*.f64 (*.f64 (pow.f64 a2 4) 0) (cos.f64 th)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) (*.f64 (/.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (*.f64 (cos.f64 th) 0)))","(fma.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)) 0)"]],"stop":[["node limit",1]],"time":47.01318359375,"type":"simplify"},{"compiler":[[4124,2962]],"time":50.116943359375,"type":"eval"},{"alts":[["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","done",0.45445253907376815],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","done",0.4557800781475362],["(*.f64 (log1p.f64 (expm1.f64 (cos.f64 th))) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","fresh",0.47398378907376815],["(/.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (pow.f64 2 1/4)) (pow.f64 2 1/4))","fresh",0.4743538574528623],["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","next",0.4131050293053261],["(/.f64 1 (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))","fresh",0.8132106500228834],["(/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))","fresh",0.8070193902544414],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","done",0.4245300781475362]],"compiler":[[15,12],[15,10],[17,14],[19,16],[22,17],[16,13],[14,11],[18,12],[17,14],[19,16],[22,17],[16,13],[14,11]],"count":[[152,8]],"kept":[{"done":[2,2],"fresh":[4,3],"new":[145,2],"picked":[1,1]}],"min-error":[0],"time":30.85791015625,"type":"prune"},{"compiler":[[67,43]],"locations":[["(*.f64 (pow.f64 a2 2) (cos.f64 th))",0.09375,true],["(*.f64 (pow.f64 a1 2) (cos.f64 th))",0.12890625,true],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))",0.28515625,true],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))",0.31869125976844204,true]],"time":17.39013671875,"type":"localize"},{"count":[[4,32]],"series":[["(*.f64 (pow.f64 a2 2) (cos.f64 th))","th","-inf",0.260009765625],["(*.f64 (pow.f64 a2 2) (cos.f64 th))","th","inf",0.247802734375],["(*.f64 (pow.f64 a2 2) (cos.f64 th))","th","0",0.2861328125],["(*.f64 (pow.f64 a2 2) (cos.f64 th))","a2","-inf",0.147216796875],["(*.f64 (pow.f64 a2 2) (cos.f64 th))","a2","inf",0.274169921875],["(*.f64 (pow.f64 a2 2) (cos.f64 th))","a2","0",0.239990234375],["(*.f64 (pow.f64 a1 2) (cos.f64 th))","th","-inf",0.237060546875],["(*.f64 (pow.f64 a1 2) (cos.f64 th))","th","inf",0.15185546875],["(*.f64 (pow.f64 a1 2) (cos.f64 th))","th","0",0.244873046875],["(*.f64 (pow.f64 a1 2) (cos.f64 th))","a1","-inf",0.14892578125],["(*.f64 (pow.f64 a1 2) (cos.f64 th))","a1","inf",0.3310546875],["(*.f64 (pow.f64 a1 2) (cos.f64 th))","a1","0",0.175048828125],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","th","-inf",0.448974609375],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","th","inf",0.402099609375],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","th","0",0.4111328125],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","a2","-inf",0.189208984375],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","a2","inf",0.333984375],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","a2","0",0.4228515625],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","th","-inf",0.4521484375],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","th","inf",0.52197265625],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","th","0",0.39599609375],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","a1","-inf",0.19287109375],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","a1","inf",0.440185546875],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","a1","0",0.660888671875]],"time":7.90185546875,"type":"series"},{"count":[[4,80]],"egraph":[[2,3215,46,0.027235958],[1,286,46,0.004597291999999999],[0,14,46,0.000366042]],"inputs":[["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (pow.f64 a1 2) (cos.f64 th))","(*.f64 (pow.f64 a2 2) (cos.f64 th))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (cos.f64 th)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (cos.f64 th)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/2 (pow.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th))) 4)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th))) 6) (pow.f64 1/2 3/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (cos.f64 th))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th))) (pow.f64 1/2 1/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 1/2 (pow.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (cos.f64 th)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th))) 6) (pow.f64 1/2 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (cos.f64 th))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (cos.f64 th))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (cos.f64 th))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (cos.f64 th))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (cos.f64 th)))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (cos.f64 th)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th))) (pow.f64 1/2 1/4))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/2 (pow.f64 (*.f64 a2 (sqrt.f64 (cos.f64 th))) 4)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 1/2 3/2) (pow.f64 (*.f64 a2 (sqrt.f64 (cos.f64 th))) 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 1/2 1/4) (*.f64 a2 (sqrt.f64 (cos.f64 th)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 1/2 (pow.f64 (*.f64 a2 (sqrt.f64 (cos.f64 th))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 1/2 3/2) (pow.f64 (*.f64 a2 (sqrt.f64 (cos.f64 th))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (pow.f64 1/2 1/4) (*.f64 a2 (sqrt.f64 (cos.f64 th))))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 a1 (*.f64 a1 (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 a1 a1))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 a1 a1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 a1 a1)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 a1 a1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 a1 (*.f64 a1 (cos.f64 th))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a1 (*.f64 a1 (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th))) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th))) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a1 (*.f64 a1 (cos.f64 th)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cos.f64 th)) (*.f64 a1 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 a1 (*.f64 a1 (cos.f64 th))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 a1 (*.f64 a1 (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 a1 (*.f64 a1 (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 2 (log.f64 a1) (log.f64 (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 2 (log.f64 a1) (log.f64 (cos.f64 th))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th))) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 a1 (*.f64 a1 (cos.f64 th))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 a1 (sqrt.f64 (cos.f64 th)))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (cos.f64 th) (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 a2) (*.f64 a2 (cos.f64 th)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 a2) (*.f64 a2 (cos.f64 th))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 a2) (*.f64 a2 (cos.f64 th))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 a2) (*.f64 a2 (cos.f64 th))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (cos.f64 th) (*.f64 a2 a2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 th) (*.f64 a2 a2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a2 (sqrt.f64 (cos.f64 th))) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a2 (sqrt.f64 (cos.f64 th))) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 th) (*.f64 a2 a2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a2 (sqrt.f64 (cos.f64 th))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 a2 (sqrt.f64 (cos.f64 th))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 a2) (*.f64 a2 (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 th) (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a2 (sqrt.f64 (cos.f64 th))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (cos.f64 th) (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (cos.f64 th) (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (cos.f64 th) (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cos.f64 th) (*.f64 a2 a2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 a2 (sqrt.f64 (cos.f64 th))) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (cos.f64 th) (*.f64 a2 a2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 a2 (sqrt.f64 (cos.f64 th)))) 2))))))"]],"rules":[["egg-rr",20],["egg-rr",20],["egg-rr",20],["egg-rr",20]],"stop":[["node limit",1]],"time":52.91796875,"type":"rewrite"},{"count":[[112,116]],"egraph":[[9,6454,498,0.080447332],[8,6256,498,0.065693874],[7,6087,498,0.054523874],[6,5924,498,0.044262707],[5,5749,498,0.034418165],[4,5416,498,0.024981415],[3,3024,498,0.013840624],[2,671,534,0.005303624],[1,205,631,0.001382416],[0,71,650,0.000335333]],"inputs":[["(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 2)))) (+.f64 (*.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 6)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))))","(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 4))))))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (+.f64 (*.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 6)))) (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 4)))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(pow.f64 a1 2)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a1 2) (pow.f64 th 2))) (pow.f64 a1 2))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a1 2) (pow.f64 th 2))) (+.f64 (pow.f64 a1 2) (*.f64 1/24 (*.f64 (pow.f64 a1 2) (pow.f64 th 4)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a1 2) (pow.f64 th 2))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 a1 2) (pow.f64 th 6))) (+.f64 (pow.f64 a1 2) (*.f64 1/24 (*.f64 (pow.f64 a1 2) (pow.f64 th 4))))))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(pow.f64 a2 2)","(+.f64 (pow.f64 a2 2) (*.f64 -1/2 (*.f64 (pow.f64 th 2) (pow.f64 a2 2))))","(+.f64 (pow.f64 a2 2) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 th 2) (pow.f64 a2 2))) (*.f64 1/24 (*.f64 (pow.f64 th 4) (pow.f64 a2 2)))))","(+.f64 (pow.f64 a2 2) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 th 2) (pow.f64 a2 2))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 th 4) (pow.f64 a2 2))) (*.f64 -1/720 (*.f64 (pow.f64 th 6) (pow.f64 a2 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (*.f64 th th))) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)))","(fma.f64 (sqrt.f64 1/2) (*.f64 a1 a1) (*.f64 (*.f64 (*.f64 (sqrt.f64 1/2) -1/2) (*.f64 a1 a1)) (*.f64 th th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 -1/2 (*.f64 th th) 1) (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 (fma.f64 -1/2 (*.f64 th th) 1) a1)))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(fma.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (pow.f64 th 4))) (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (*.f64 th th))) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))))","(fma.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (pow.f64 th 4)))) (fma.f64 (sqrt.f64 1/2) (*.f64 a1 a1) (*.f64 (*.f64 (*.f64 (sqrt.f64 1/2) -1/2) (*.f64 a1 a1)) (*.f64 th th))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a1 a1) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (+.f64 1 (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4))))))","(*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (+.f64 1 (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4)))))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 2)))) (+.f64 (*.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 6)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))))","(fma.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (pow.f64 th 4))) (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (*.f64 th th))) (fma.f64 -1/720 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (pow.f64 th 6)) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)))))","(fma.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (pow.f64 th 4)))) (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 a1 (*.f64 a1 (*.f64 th th)))) (fma.f64 (sqrt.f64 1/2) (*.f64 a1 a1) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (*.f64 -1/720 (pow.f64 th 6)))))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 -1/720 (pow.f64 th 6)) 1) (*.f64 a1 a1))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4))))))","(*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a1 a1) (*.f64 (*.f64 a1 a1) (+.f64 (*.f64 -1/720 (pow.f64 th 6)) (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4)))))))","(*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 a1 a1) (*.f64 (*.f64 a1 a1) (+.f64 (*.f64 -1/2 (*.f64 th th)) (fma.f64 1/24 (pow.f64 th 4) (*.f64 -1/720 (pow.f64 th 6)))))))","(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 th th) (*.f64 a2 a2)))))","(fma.f64 (*.f64 (sqrt.f64 1/2) -1/2) (*.f64 (*.f64 th th) (*.f64 a2 a2)) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (fma.f64 -1/2 (*.f64 th th) 1)))","(*.f64 (fma.f64 -1/2 (*.f64 th th) 1) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 (*.f64 (fma.f64 -1/2 (*.f64 th th) 1) a2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 4))))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 th th) (*.f64 a2 a2))) (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 th 4) (*.f64 a2 a2))))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (fma.f64 (*.f64 (sqrt.f64 1/2) -1/2) (*.f64 (*.f64 th th) (*.f64 a2 a2)) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 1/24 (*.f64 a2 a2)) (pow.f64 th 4)))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)) (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4)))))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 (+.f64 a2 (*.f64 a2 (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4)))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (+.f64 1 (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4))))))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (+.f64 (*.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 6)))) (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 4)))))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 th th) (*.f64 a2 a2))) (fma.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 th 6) (*.f64 a2 a2))) (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 th 4) (*.f64 a2 a2)))))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 th th) (*.f64 a2 a2))) (fma.f64 1/24 (*.f64 (*.f64 a2 a2) (*.f64 (pow.f64 th 4) (sqrt.f64 1/2))) (*.f64 (sqrt.f64 1/2) (*.f64 -1/720 (*.f64 (pow.f64 th 6) (*.f64 a2 a2)))))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (fma.f64 -1/2 (*.f64 th th) 1))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (fma.f64 1/24 (pow.f64 th 4) (*.f64 -1/720 (pow.f64 th 6))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (+.f64 (fma.f64 -1/2 (*.f64 th th) 1) (fma.f64 1/24 (pow.f64 th 4) (*.f64 -1/720 (pow.f64 th 6))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 (*.f64 a2 (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 (*.f64 a2 (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 (*.f64 a2 (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 (*.f64 a2 (cos.f64 th))))","(pow.f64 a1 2)","(*.f64 a1 a1)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a1 2) (pow.f64 th 2))) (pow.f64 a1 2))","(fma.f64 -1/2 (*.f64 (*.f64 a1 a1) (*.f64 th th)) (*.f64 a1 a1))","(fma.f64 a1 a1 (*.f64 (*.f64 a1 a1) (*.f64 -1/2 (*.f64 th th))))","(*.f64 (fma.f64 -1/2 (*.f64 th th) 1) (*.f64 a1 a1))","(*.f64 a1 (*.f64 (fma.f64 -1/2 (*.f64 th th) 1) a1))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a1 2) (pow.f64 th 2))) (+.f64 (pow.f64 a1 2) (*.f64 1/24 (*.f64 (pow.f64 a1 2) (pow.f64 th 4)))))","(+.f64 (fma.f64 -1/2 (*.f64 (*.f64 a1 a1) (*.f64 th th)) (*.f64 a1 a1)) (*.f64 (*.f64 1/24 (*.f64 a1 a1)) (pow.f64 th 4)))","(fma.f64 -1/2 (*.f64 a1 (*.f64 a1 (*.f64 th th))) (fma.f64 a1 a1 (*.f64 (*.f64 a1 a1) (*.f64 1/24 (pow.f64 th 4)))))","(fma.f64 a1 a1 (*.f64 (*.f64 a1 a1) (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4)))))","(*.f64 (*.f64 a1 a1) (+.f64 1 (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a1 2) (pow.f64 th 2))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 a1 2) (pow.f64 th 6))) (+.f64 (pow.f64 a1 2) (*.f64 1/24 (*.f64 (pow.f64 a1 2) (pow.f64 th 4))))))","(fma.f64 -1/2 (*.f64 (*.f64 a1 a1) (*.f64 th th)) (fma.f64 -1/720 (*.f64 (*.f64 a1 a1) (pow.f64 th 6)) (+.f64 (*.f64 a1 a1) (*.f64 (*.f64 1/24 (*.f64 a1 a1)) (pow.f64 th 4)))))","(fma.f64 -1/2 (*.f64 a1 (*.f64 a1 (*.f64 th th))) (fma.f64 -1/720 (*.f64 a1 (*.f64 a1 (pow.f64 th 6))) (fma.f64 a1 a1 (*.f64 (*.f64 a1 a1) (*.f64 1/24 (pow.f64 th 4))))))","(+.f64 (*.f64 (fma.f64 -1/2 (*.f64 th th) 1) (*.f64 a1 a1)) (*.f64 (*.f64 a1 a1) (fma.f64 1/24 (pow.f64 th 4) (*.f64 -1/720 (pow.f64 th 6)))))","(+.f64 (*.f64 a1 a1) (*.f64 (*.f64 a1 a1) (+.f64 (*.f64 -1/720 (pow.f64 th 6)) (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4))))))","(+.f64 (*.f64 a1 a1) (*.f64 (*.f64 a1 a1) (+.f64 (*.f64 -1/2 (*.f64 th th)) (fma.f64 1/24 (pow.f64 th 4) (*.f64 -1/720 (pow.f64 th 6))))))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (*.f64 a2 a2) (cos.f64 th))","(*.f64 a2 (*.f64 a2 (cos.f64 th)))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (*.f64 a2 a2) (cos.f64 th))","(*.f64 a2 (*.f64 a2 (cos.f64 th)))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (*.f64 a2 a2) (cos.f64 th))","(*.f64 a2 (*.f64 a2 (cos.f64 th)))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (*.f64 a2 a2) (cos.f64 th))","(*.f64 a2 (*.f64 a2 (cos.f64 th)))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (*.f64 a2 a2) (cos.f64 th))","(*.f64 a2 (*.f64 a2 (cos.f64 th)))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (*.f64 a2 a2) (cos.f64 th))","(*.f64 a2 (*.f64 a2 (cos.f64 th)))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (*.f64 a2 a2) (cos.f64 th))","(*.f64 a2 (*.f64 a2 (cos.f64 th)))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (*.f64 a2 a2) (cos.f64 th))","(*.f64 a2 (*.f64 a2 (cos.f64 th)))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (*.f64 a2 a2) (cos.f64 th))","(*.f64 a2 (*.f64 a2 (cos.f64 th)))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (*.f64 a2 a2) (cos.f64 th))","(*.f64 a2 (*.f64 a2 (cos.f64 th)))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (*.f64 a2 a2) (cos.f64 th))","(*.f64 a2 (*.f64 a2 (cos.f64 th)))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (*.f64 a2 a2) (cos.f64 th))","(*.f64 a2 (*.f64 a2 (cos.f64 th)))","(pow.f64 a2 2)","(*.f64 a2 a2)","(+.f64 (pow.f64 a2 2) (*.f64 -1/2 (*.f64 (pow.f64 th 2) (pow.f64 a2 2))))","(+.f64 (*.f64 a2 a2) (*.f64 -1/2 (*.f64 (*.f64 th th) (*.f64 a2 a2))))","(*.f64 (+.f64 (*.f64 -1/2 (*.f64 th th)) 1) (*.f64 a2 a2))","(*.f64 (*.f64 a2 a2) (fma.f64 -1/2 (*.f64 th th) 1))","(*.f64 a2 (*.f64 (fma.f64 -1/2 (*.f64 th th) 1) a2))","(+.f64 (pow.f64 a2 2) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 th 2) (pow.f64 a2 2))) (*.f64 1/24 (*.f64 (pow.f64 th 4) (pow.f64 a2 2)))))","(+.f64 (*.f64 a2 a2) (fma.f64 -1/2 (*.f64 (*.f64 th th) (*.f64 a2 a2)) (*.f64 1/24 (*.f64 (pow.f64 th 4) (*.f64 a2 a2)))))","(fma.f64 a2 a2 (*.f64 (*.f64 a2 a2) (+.f64 (*.f64 1/24 (pow.f64 th 4)) (*.f64 -1/2 (*.f64 th th)))))","(*.f64 (*.f64 a2 a2) (+.f64 (fma.f64 -1/2 (*.f64 th th) 1) (*.f64 1/24 (pow.f64 th 4))))","(*.f64 a2 (+.f64 a2 (*.f64 a2 (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4))))))","(*.f64 (*.f64 a2 a2) (+.f64 1 (fma.f64 -1/2 (*.f64 th th) (*.f64 1/24 (pow.f64 th 4)))))","(+.f64 (pow.f64 a2 2) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 th 2) (pow.f64 a2 2))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 th 4) (pow.f64 a2 2))) (*.f64 -1/720 (*.f64 (pow.f64 th 6) (pow.f64 a2 2))))))","(+.f64 (*.f64 a2 a2) (fma.f64 -1/2 (*.f64 (*.f64 th th) (*.f64 a2 a2)) (fma.f64 1/24 (*.f64 (pow.f64 th 4) (*.f64 a2 a2)) (*.f64 -1/720 (*.f64 (pow.f64 th 6) (*.f64 a2 a2))))))","(fma.f64 a2 a2 (fma.f64 -1/2 (*.f64 (*.f64 th th) (*.f64 a2 a2)) (*.f64 (*.f64 a2 a2) (+.f64 (*.f64 1/24 (pow.f64 th 4)) (*.f64 -1/720 (pow.f64 th 6))))))","(fma.f64 a2 a2 (*.f64 (*.f64 a2 a2) (+.f64 (*.f64 -1/2 (*.f64 th th)) (fma.f64 1/24 (pow.f64 th 4) (*.f64 -1/720 (pow.f64 th 6))))))","(*.f64 (*.f64 a2 a2) (+.f64 (fma.f64 -1/2 (*.f64 th th) 1) (fma.f64 1/24 (pow.f64 th 4) (*.f64 -1/720 (pow.f64 th 6)))))"]],"stop":[["node limit",1]],"time":103.0,"type":"simplify"},{"compiler":[[2879,1846]],"time":31.5322265625,"type":"eval"},{"alts":[["(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","done",0.45445253907376815],["(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","done",0.4557800781475362],["(*.f64 (log1p.f64 (expm1.f64 (cos.f64 th))) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","fresh",0.47398378907376815],["(/.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (pow.f64 2 1/4)) (pow.f64 2 1/4))","fresh",0.4743538574528623],["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","done",0.4131050293053261],["(/.f64 1 (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))","fresh",0.8132106500228834],["(/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))","fresh",0.8070193902544414],["(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","done",0.4245300781475362]],"compiler":[[15,12],[15,10],[17,14],[19,16],[22,17],[16,13],[14,11],[18,12]],"count":[[124,8]],"kept":[{"done":[3,3],"fresh":[4,4],"new":[116,0],"picked":[1,1]}],"min-error":[0],"time":25.226806640625,"type":"prune"},{"accuracy":[0.413105029305326],"baseline":[0.4131050293053261],"branch":[["a1",0.41310502930532605,1],["a2",0.413105029305326,1],["th",0.4131050293053261,1],["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))",0.4131050293053261,1],["(/.f64 (cos.f64 th) (sqrt.f64 2))",0.41310502930532605,1],["(cos.f64 th)",0.41310502930532605,1],["(*.f64 a1 a1)",0.41310502930532605,1],["(*.f64 a2 a2)",0.4131050293053261,1],["(*.f64 a2 a2)",0.4131050293053261,1]],"compiler":[[4,3],[4,3],[4,3],[22,15],[8,7],[5,4],[6,4],[6,4],[6,4],[160,98]],"count":[[11,1]],"inputs":[["(*.f64 (log1p.f64 (expm1.f64 (cos.f64 th))) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (cos.f64 th) (pow.f64 (pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) -2) -1))","(/.f64 (/.f64 (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th)) (pow.f64 2 1/4)) (pow.f64 2 1/4))","(*.f64 (cos.f64 th) (pow.f64 (/.f64 (hypot.f64 a1 a2) (pow.f64 2 1/4)) 2))","(*.f64 (cos.f64 th) (*.f64 (pow.f64 2 -1/2) (pow.f64 (hypot.f64 a1 a2) 2)))","(/.f64 1 (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 (hypot.f64 a1 a2) 2) (cos.f64 th))))","(/.f64 (cos.f64 th) (*.f64 (sqrt.f64 2) (pow.f64 (hypot.f64 a1 a2) -2)))","(*.f64 (cos.f64 th) (*.f64 (/.f64 (hypot.f64 a1 a2) 1) (/.f64 (hypot.f64 a1 a2) (sqrt.f64 2))))","(*.f64 (cos.f64 th) (/.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 2)))","(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))"]],"link":["."],"name":["Migdal et al, Equation (64)"],"oracle":[1.359727349371214],"outputs":[["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))"]],"time":44.826171875,"times":[["a1",5.0],["a2",5.300048828125],["th",4.97607421875],["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))",7.35205078125],["(/.f64 (cos.f64 th) (sqrt.f64 2))",4.382080078125],["(cos.f64 th)",4.243896484375],["(*.f64 a1 a1)",3.675048828125],["(*.f64 a2 a2)",3.294921875],["(*.f64 a2 a2)",3.170166015625]],"type":"regimes"},{"compiler":[[22,17]],"egraph":[[1,20,30,4.4125e-5],[0,15,30,2.4917e-5]],"inputs":[["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))"]],"stop":[["fuel",1],["saturated",1]],"time":8.708984375,"type":"simplify"},{"time":0.012939453125,"type":"soundness"},{"compiler":[[22,17],[22,17],[22,17]],"remove-preprocessing":[["(sort a1 a2)"]],"time":13.363037109375,"type":"end"}]