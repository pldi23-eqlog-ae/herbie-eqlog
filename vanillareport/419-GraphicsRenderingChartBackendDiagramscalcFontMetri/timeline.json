[{"compiler":[[13,9]],"method":["search"],"sampling":[[12,0.5870298775159881,0.41150599387333386,0.0014641286106780171],[11,0.5051187318160828,0.4934171395732392,0.0014641286106780171],[10,0.43295891298521383,0.5655769584041082,0.0014641286106780171],[9,0.3276445827996213,0.6708912885897007,0.0014641286106780171],[8,0.23403184485687234,0.7645040265324496,0.0014641286106780171],[7,0.15602122990458156,0.8425146414847404,0.0014641286106780171],[6,0.062408491961832624,0.9361273794274894,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":78.179931640625,"type":"analyze"},{"outcomes":[["body",512,"valid",0.14208984375,2],["body",1024,"valid",0.10302734375,1],["body",2048,"valid",0.164794921875,1],["body",256,"valid",339.845947265625,8252]],"time":348.953857421875,"type":"sample"},{"compiler":[[12,8]],"egraph":[[0,3,3,2.667e-6],[17,6887,52,0.090531585],[16,6865,52,0.07617146],[15,6817,52,0.066588501],[14,6743,52,0.057402043],[13,6508,52,0.048508085],[12,5562,52,0.037474543],[11,2656,52,0.023727127],[10,988,52,0.010244252],[9,546,52,0.005921336],[8,371,52,0.004257752],[7,314,52,0.0030205440000000004],[6,248,52,0.0021687520000000004],[5,185,52,0.0014947100000000002],[4,130,52,0.0009407930000000001],[3,81,52,0.0005697510000000001],[2,54,52,0.000303084],[1,34,52,0.00015379199999999998],[0,21,52,7.0959e-5]],"inputs":[["0","1","2"],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 x z)))","(/.f64 (+.f64 z y) (-.f64 1 (/.f64 y x)))","(/.f64 (+.f64 x z) (-.f64 1 (/.f64 z y)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 x z)))","(/.f64 (+.f64 x y) (-.f64 1 (/.f64 x z)))","(/.f64 (+.f64 z y) (-.f64 1 (/.f64 y x)))","(/.f64 (+.f64 y z) (-.f64 1 (/.f64 y x)))","(/.f64 (+.f64 x z) (-.f64 1 (/.f64 z y)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":117.6611328125,"type":"preprocess"},{"count":[[1,1]],"egraph":[[17,7373,13,0.05005216600000001],[16,6493,13,0.041615041000000005],[15,4738,13,0.030957416],[14,2891,13,0.020432208],[13,1376,13,0.012322749000000001],[12,560,13,0.006115249],[11,314,13,0.003441416],[10,229,13,0.002337625],[9,164,13,0.0017986249999999999],[8,117,13,0.001390375],[7,100,13,0.001030458],[6,79,13,0.000776833],[5,59,13,0.000556208],[4,43,13,0.000374625],[3,28,13,0.000244458],[2,20,13,0.000146208],[1,14,13,8.400000000000001e-5],[0,9,13,4.1625e-5]],"inputs":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))"]],"stop":[["node limit",1]],"time":62.154052734375,"type":"simplify"},{"compiler":[[12,8]],"time":0.2568359375,"type":"eval"},{"alts":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","next",8.893762559347234]],"compiler":[[12,8],[12,8]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[8.893762559347234],"time":0.77294921875,"type":"prune"},{"compiler":[[27,11]],"locations":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))",8.89376255934723,true]],"time":5.563232421875,"type":"localize"},{"count":[[1,36]],"series":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","z","-inf",0.346923828125],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","z","inf",0.48095703125],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","z","0",0.52099609375],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","y","-inf",0.471923828125],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","y","inf",0.656982421875],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","y","0",0.468994140625],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","x","-inf",0.385986328125],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","x","inf",0.532958984375],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","x","0",0.60400390625]],"time":4.64990234375,"type":"series"},{"count":[[1,41]],"egraph":[[2,3021,13,0.025683624999999998],[1,203,13,0.003759916],[0,9,13,0.000245375]],"inputs":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 1 (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))) 2) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (*.f64 (cbrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))) (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (neg.f64 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 (/.f64 y z))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (+.f64 x y)) (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) 1) (/.f64 (sqrt.f64 (+.f64 x y)) (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2)) (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2)) (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 1 (/.f64 y z)))) (/.f64 (+.f64 x y) (sqrt.f64 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (sqrt.f64 (-.f64 1 (/.f64 y z)))) (/.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 1 (pow.f64 (/.f64 y z) 3))) (fma.f64 (/.f64 y z) (+.f64 1 (/.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 1 (pow.f64 (/.f64 y z) 2))) (+.f64 1 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (+.f64 x y) 3) (pow.f64 (-.f64 1 (/.f64 y z)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (neg.f64 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 x y) 3) (pow.f64 (-.f64 1 (/.f64 y z)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))) 1))))))"]],"rules":[["egg-rr",41]],"stop":[["node limit",1]],"time":44.427001953125,"type":"rewrite"},{"count":[[77,80]],"egraph":[[3,6735,793,0.027778291],[2,1329,803,0.0116315],[1,372,964,0.002454708],[0,115,1010,0.000511]],"inputs":[["(/.f64 y (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","x","(+.f64 (*.f64 y (-.f64 1 (*.f64 -1 (/.f64 x z)))) x)","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 1 (*.f64 -1 (/.f64 x z)))) z) (+.f64 (*.f64 y (-.f64 1 (*.f64 -1 (/.f64 x z)))) x))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 1 (*.f64 -1 (/.f64 x z)))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 1 (*.f64 -1 (/.f64 x z)))) z) (+.f64 (*.f64 y (-.f64 1 (*.f64 -1 (/.f64 x z)))) x)))","(*.f64 -1 z)","(-.f64 (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 z x) y))) (/.f64 (pow.f64 z 2) y))","(-.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 z 2)) z) (pow.f64 y 2)))) (/.f64 (pow.f64 z 2) y))","(-.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 z 2)) (pow.f64 z 2)) (pow.f64 y 3)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 z 2)) z) (pow.f64 y 2))))) (/.f64 (pow.f64 z 2) y))","(*.f64 -1 z)","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) y)) (*.f64 -1 z))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) y)) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) (pow.f64 z 2)) (pow.f64 y 3))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 2))))))","(*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x)))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (pow.f64 z 3)) (+.f64 y x))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y x)))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 3)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 y (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","x","(+.f64 (*.f64 y (-.f64 1 (*.f64 -1 (/.f64 x z)))) x)","(fma.f64 y (-.f64 1 (neg.f64 (/.f64 x z))) x)","(fma.f64 y (+.f64 1 (/.f64 x z)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 1 (*.f64 -1 (/.f64 x z)))) z) (+.f64 (*.f64 y (-.f64 1 (*.f64 -1 (/.f64 x z)))) x))","(+.f64 (fma.f64 y (-.f64 1 (neg.f64 (/.f64 x z))) x) (/.f64 (*.f64 y y) (/.f64 z (-.f64 1 (neg.f64 (/.f64 x z))))))","(+.f64 (fma.f64 y (+.f64 1 (/.f64 x z)) x) (*.f64 (/.f64 y (/.f64 z y)) (+.f64 1 (/.f64 x z))))","(+.f64 x (*.f64 (+.f64 1 (/.f64 x z)) (+.f64 y (/.f64 (*.f64 y y) z))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 1 (*.f64 -1 (/.f64 x z)))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 1 (*.f64 -1 (/.f64 x z)))) z) (+.f64 (*.f64 y (-.f64 1 (*.f64 -1 (/.f64 x z)))) x)))","(+.f64 (+.f64 (fma.f64 y (-.f64 1 (neg.f64 (/.f64 x z))) x) (/.f64 (*.f64 y y) (/.f64 z (-.f64 1 (neg.f64 (/.f64 x z)))))) (/.f64 (pow.f64 y 3) (/.f64 (*.f64 z z) (-.f64 1 (neg.f64 (/.f64 x z))))))","(+.f64 (*.f64 (/.f64 y (/.f64 z y)) (+.f64 1 (/.f64 x z))) (+.f64 (fma.f64 y (+.f64 1 (/.f64 x z)) x) (*.f64 (/.f64 (pow.f64 y 3) (*.f64 z z)) (+.f64 1 (/.f64 x z)))))","(+.f64 x (fma.f64 (/.f64 (pow.f64 y 3) (*.f64 z z)) (+.f64 1 (/.f64 x z)) (*.f64 (+.f64 1 (/.f64 x z)) (+.f64 y (/.f64 (*.f64 y y) z)))))","(*.f64 -1 z)","(neg.f64 z)","(-.f64 (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 z x) y))) (/.f64 (pow.f64 z 2) y))","(-.f64 (*.f64 -1 (+.f64 z (/.f64 z (/.f64 y x)))) (/.f64 (*.f64 z z) y))","(-.f64 (-.f64 (neg.f64 z) (*.f64 (/.f64 z y) x)) (/.f64 z (/.f64 y z)))","(-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y))","(-.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 z 2)) z) (pow.f64 y 2)))) (/.f64 (pow.f64 z 2) y))","(-.f64 (fma.f64 -1 z (fma.f64 -1 (/.f64 z (/.f64 y x)) (/.f64 (-.f64 (*.f64 (neg.f64 z) x) (*.f64 z z)) (/.f64 (*.f64 y y) z)))) (/.f64 (*.f64 z z) y))","(-.f64 (-.f64 (-.f64 (/.f64 z (/.f64 (*.f64 y y) (neg.f64 (fma.f64 z x (*.f64 z z))))) (*.f64 (/.f64 z y) x)) z) (/.f64 z (/.f64 y z)))","(-.f64 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (*.f64 z (-.f64 (neg.f64 x) z)) y)) z)","(-.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 z 2)) (pow.f64 z 2)) (pow.f64 y 3)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 z 2)) z) (pow.f64 y 2))))) (/.f64 (pow.f64 z 2) y))","(-.f64 (fma.f64 -1 z (fma.f64 -1 (/.f64 z (/.f64 y x)) (+.f64 (/.f64 (-.f64 (*.f64 (neg.f64 z) x) (*.f64 z z)) (/.f64 (*.f64 y y) z)) (/.f64 (-.f64 (*.f64 (neg.f64 z) x) (*.f64 z z)) (/.f64 (pow.f64 y 3) (*.f64 z z)))))) (/.f64 (*.f64 z z) y))","(-.f64 (+.f64 (/.f64 (neg.f64 z) (/.f64 y x)) (-.f64 (neg.f64 (+.f64 (*.f64 (/.f64 (fma.f64 z x (*.f64 z z)) (pow.f64 y 3)) (*.f64 z z)) z)) (*.f64 (/.f64 (fma.f64 z x (*.f64 z z)) (*.f64 y y)) z))) (/.f64 z (/.f64 y z)))","(-.f64 (-.f64 (*.f64 (/.f64 (*.f64 z (-.f64 (neg.f64 x) z)) (*.f64 y y)) (+.f64 (*.f64 (/.f64 z y) z) z)) z) (/.f64 (*.f64 z (+.f64 x z)) y))","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) y)) (*.f64 -1 z))","(-.f64 (*.f64 -1 (+.f64 z (/.f64 z (/.f64 y x)))) (/.f64 (*.f64 z z) y))","(-.f64 (-.f64 (neg.f64 z) (*.f64 (/.f64 z y) x)) (/.f64 z (/.f64 y z)))","(-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) y)) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 2)))))","(-.f64 (fma.f64 -1 z (fma.f64 -1 (/.f64 z (/.f64 y x)) (/.f64 (-.f64 (*.f64 (neg.f64 z) x) (*.f64 z z)) (/.f64 (*.f64 y y) z)))) (/.f64 (*.f64 z z) y))","(-.f64 (-.f64 (-.f64 (/.f64 z (/.f64 (*.f64 y y) (neg.f64 (fma.f64 z x (*.f64 z z))))) (*.f64 (/.f64 z y) x)) z) (/.f64 z (/.f64 y z)))","(-.f64 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (*.f64 z (-.f64 (neg.f64 x) z)) y)) z)","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) (pow.f64 z 2)) (pow.f64 y 3))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 2))))))","(-.f64 (fma.f64 -1 z (fma.f64 -1 (/.f64 z (/.f64 y x)) (+.f64 (/.f64 (-.f64 (*.f64 (neg.f64 z) x) (*.f64 z z)) (/.f64 (*.f64 y y) z)) (/.f64 (-.f64 (*.f64 (neg.f64 z) x) (*.f64 z z)) (/.f64 (pow.f64 y 3) (*.f64 z z)))))) (/.f64 (*.f64 z z) y))","(-.f64 (+.f64 (/.f64 (neg.f64 z) (/.f64 y x)) (-.f64 (neg.f64 (+.f64 (*.f64 (/.f64 (fma.f64 z x (*.f64 z z)) (pow.f64 y 3)) (*.f64 z z)) z)) (*.f64 (/.f64 (fma.f64 z x (*.f64 z z)) (*.f64 y y)) z))) (/.f64 z (/.f64 y z)))","(-.f64 (-.f64 (*.f64 (/.f64 (*.f64 z (-.f64 (neg.f64 x) z)) (*.f64 y y)) (+.f64 (*.f64 (/.f64 z y) z) z)) z) (/.f64 (*.f64 z (+.f64 x z)) y))","(*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))","(neg.f64 (/.f64 (+.f64 y x) (/.f64 y z)))","(/.f64 (*.f64 (neg.f64 z) (+.f64 y x)) y)","(*.f64 (/.f64 (+.f64 y x) y) (neg.f64 z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))","(*.f64 -1 (+.f64 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (/.f64 (+.f64 y x) (/.f64 y z))))","(neg.f64 (fma.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (*.f64 (/.f64 (+.f64 y x) y) z)))","(*.f64 z (-.f64 (*.f64 z (fma.f64 -1 (/.f64 x (*.f64 y y)) (/.f64 -1 y))) (/.f64 (+.f64 y x) y)))","(*.f64 z (-.f64 (*.f64 z (-.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y)))) (/.f64 (+.f64 y x) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))))","(fma.f64 -1 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (*.f64 -1 (+.f64 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (*.f64 y y))) (pow.f64 z 3)) (/.f64 (+.f64 y x) (/.f64 y z)))))","(-.f64 (neg.f64 (fma.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (*.f64 y y))) (pow.f64 z 3) (*.f64 (/.f64 (+.f64 y x) y) z))) (*.f64 z (*.f64 z (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))))","(fma.f64 (pow.f64 z 3) (fma.f64 -1 (/.f64 x (pow.f64 y 3)) (/.f64 -1 (*.f64 y y))) (*.f64 z (-.f64 (*.f64 z (fma.f64 -1 (/.f64 x (*.f64 y y)) (/.f64 -1 y))) (/.f64 (+.f64 y x) y))))","(fma.f64 (pow.f64 z 3) (-.f64 (/.f64 -1 (*.f64 y y)) (/.f64 x (pow.f64 y 3))) (*.f64 z (-.f64 (*.f64 z (-.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y)))) (/.f64 (+.f64 y x) y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))))","(fma.f64 -1 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (fma.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (*.f64 y y))) (pow.f64 z 3)) (fma.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 4)) (neg.f64 (/.f64 (+.f64 y x) (/.f64 y z))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 4) (*.f64 (/.f64 (+.f64 y x) y) z))) (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (*.f64 y y))) (pow.f64 z 3))) (*.f64 z (*.f64 z (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))))","(-.f64 (*.f64 (*.f64 z z) (-.f64 (fma.f64 -1 (/.f64 x (*.f64 y y)) (/.f64 -1 y)) (*.f64 z (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (*.f64 y y)))))) (fma.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 4) (*.f64 z (/.f64 (+.f64 y x) y))))","(+.f64 (*.f64 z (-.f64 (*.f64 z (-.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y)))) (/.f64 (+.f64 y x) y))) (fma.f64 (pow.f64 z 4) (-.f64 (/.f64 -1 (pow.f64 y 3)) (/.f64 x (pow.f64 y 4))) (*.f64 (pow.f64 z 3) (-.f64 (/.f64 -1 (*.f64 y y)) (/.f64 x (pow.f64 y 3))))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (+.f64 y x) (/.f64 y (/.f64 z (+.f64 y x))))","(+.f64 y (+.f64 x (/.f64 (+.f64 y x) (/.f64 z y))))","(*.f64 (+.f64 (/.f64 y z) 1) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x)))","(+.f64 (+.f64 (/.f64 y (/.f64 z (+.f64 y x))) y) (+.f64 x (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) (+.f64 y x)))))","(+.f64 (/.f64 (+.f64 y x) (/.f64 z y)) (+.f64 (+.f64 y x) (*.f64 (/.f64 (+.f64 y x) (*.f64 z z)) (*.f64 y y))))","(+.f64 (+.f64 y x) (*.f64 (/.f64 (+.f64 y x) z) (+.f64 y (/.f64 (*.f64 y y) z))))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (pow.f64 z 3)) (+.f64 y x))))","(+.f64 (+.f64 (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) (+.f64 y x))) (/.f64 y (/.f64 z (+.f64 y x)))) (+.f64 (+.f64 y x) (/.f64 (+.f64 y x) (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(+.f64 (/.f64 (+.f64 y x) (/.f64 z y)) (+.f64 (+.f64 (+.f64 y x) (*.f64 (/.f64 (+.f64 y x) (*.f64 z z)) (*.f64 y y))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 y x))))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (+.f64 y x)) (*.f64 (/.f64 (+.f64 y x) (*.f64 z z)) (+.f64 (*.f64 y y) (/.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 y z) 3) 1) (+.f64 y x)) (*.f64 (/.f64 (+.f64 y x) z) (+.f64 y (/.f64 (*.f64 y y) z))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (+.f64 y x) (/.f64 y (/.f64 z (+.f64 y x))))","(+.f64 y (+.f64 x (/.f64 (+.f64 y x) (/.f64 z y))))","(*.f64 (+.f64 (/.f64 y z) 1) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y x)))","(+.f64 (+.f64 (/.f64 y (/.f64 z (+.f64 y x))) y) (+.f64 x (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) (+.f64 y x)))))","(+.f64 (/.f64 (+.f64 y x) (/.f64 z y)) (+.f64 (+.f64 y x) (*.f64 (/.f64 (+.f64 y x) (*.f64 z z)) (*.f64 y y))))","(+.f64 (+.f64 y x) (*.f64 (/.f64 (+.f64 y x) z) (+.f64 y (/.f64 (*.f64 y y) z))))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 3)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x))))","(+.f64 (+.f64 (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) (+.f64 y x))) (/.f64 y (/.f64 z (+.f64 y x)))) (+.f64 (+.f64 y x) (/.f64 (+.f64 y x) (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(+.f64 (/.f64 (+.f64 y x) (/.f64 z y)) (+.f64 (+.f64 (+.f64 y x) (*.f64 (/.f64 (+.f64 y x) (*.f64 z z)) (*.f64 y y))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 y x))))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (+.f64 y x)) (*.f64 (/.f64 (+.f64 y x) (*.f64 z z)) (+.f64 (*.f64 y y) (/.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 y z) 3) 1) (+.f64 y x)) (*.f64 (/.f64 (+.f64 y x) z) (+.f64 y (/.f64 (*.f64 y y) z))))"]],"stop":[["node limit",1]],"time":46.822021484375,"type":"simplify"},{"compiler":[[1519,767]],"time":14.4228515625,"type":"eval"},{"alts":[["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2)) (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 1 (/.f64 y z)))))","fresh",9.11937394842075],["(*.f64 (/.f64 (+.f64 y x) y) (neg.f64 z))","fresh",31.170135270825643],["(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)","next",9.026575059347234],["(-.f64 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (*.f64 z (-.f64 (neg.f64 x) z)) y)) z)","fresh",32.997883451361005],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","done",8.893762559347234]],"compiler":[[24,17],[11,7],[14,10],[19,12],[12,8],[24,17],[11,7],[14,10],[19,12]],"count":[[81,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[80,4],"picked":[1,1]}],"min-error":[0.00390625],"time":14.7822265625,"type":"prune"},{"compiler":[[39,17]],"locations":[["(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)",0.171875,true],["(/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y))",8.946799808879545,true]],"time":7.640869140625,"type":"localize"},{"count":[[2,72]],"series":[["(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)","x","-inf",0.47900390625],["(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)","x","inf",0.501953125],["(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)","x","0",1.010986328125],["(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)","z","-inf",0.219970703125],["(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)","z","inf",0.2509765625],["(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)","z","0",0.864013671875],["(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)","y","-inf",0.9541015625],["(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)","y","inf",0.713134765625],["(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)","y","0",0.760009765625],["(/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y))","x","-inf",0.31396484375],["(/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y))","x","inf",0.55615234375],["(/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y))","x","0",0.394775390625],["(/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y))","z","-inf",0.3681640625],["(/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y))","z","inf",0.35791015625],["(/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y))","z","0",0.4169921875],["(/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y))","y","-inf",0.347900390625],["(/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y))","y","inf",0.3388671875],["(/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y))","y","0",0.81689453125]],"time":10.037109375,"type":"series"},{"count":[[2,171]],"egraph":[[2,3566,26,0.028220749000000003],[1,247,26,0.0046191240000000005],[0,11,29,0.000314291]],"inputs":[["(/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y))","(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))) (sqrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 y (*.f64 (+.f64 y x) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x)))) (/.f64 (sqrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x))) (/.f64 y (*.f64 (+.f64 y x) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 y x)) (neg.f64 (/.f64 y (*.f64 (+.f64 y x) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 y (*.f64 (+.f64 y x) z)) 1))) (fma.f64 (neg.f64 (/.f64 y (*.f64 (+.f64 y x) z))) 1 (*.f64 (/.f64 y (*.f64 (+.f64 y x) z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 y (*.f64 (+.f64 y x) z)) 1))) (fma.f64 (neg.f64 (/.f64 y (*.f64 (+.f64 y x) z))) 1 (*.f64 (/.f64 y (*.f64 (+.f64 y x) z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 y (*.f64 (+.f64 y x) z)) 1))) (fma.f64 (neg.f64 (/.f64 y (*.f64 (+.f64 y x) z))) 1 (*.f64 (/.f64 y (*.f64 (+.f64 y x) z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 y (*.f64 (+.f64 y x) z)) 1))) (fma.f64 (neg.f64 (/.f64 y (*.f64 (+.f64 y x) z))) 1 (*.f64 (/.f64 y (*.f64 (+.f64 y x) z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (/.f64 y (*.f64 (+.f64 y x) z)) 1))) (fma.f64 (neg.f64 (/.f64 y (*.f64 (+.f64 y x) z))) 1 (*.f64 (/.f64 y (*.f64 (+.f64 y x) z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 1 (+.f64 y x)) (/.f64 y z)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 y x))) (/.f64 y z) (*.f64 (/.f64 1 (+.f64 y x)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 1 (+.f64 y x)) (/.f64 y z)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 y x))) (/.f64 y z) (*.f64 (/.f64 1 (+.f64 y x)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 1 (+.f64 y x)) (/.f64 y z)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 y x))) (/.f64 y z) (*.f64 (/.f64 1 (+.f64 y x)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 1 (+.f64 y x)) (/.f64 y z)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 y x))) (/.f64 y z) (*.f64 (/.f64 1 (+.f64 y x)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (/.f64 1 (+.f64 y x)) (/.f64 y z)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 y x))) (/.f64 y z) (*.f64 (/.f64 1 (+.f64 y x)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (*.f64 (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z))) (cbrt.f64 (/.f64 y (*.f64 (+.f64 y x) z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x)))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x)))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x)))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x)))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x)))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (/.f64 y z) (cbrt.f64 (+.f64 y x))) (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x))) (/.f64 1 (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x)))) (/.f64 1 (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x))) (/.f64 1 (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x))) (/.f64 1 (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x)))) (/.f64 1 (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x))) (/.f64 1 (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x))) (/.f64 1 (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x)))) (/.f64 1 (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x))) (/.f64 1 (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x))) (/.f64 1 (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x)))) (/.f64 1 (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x))) (/.f64 1 (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x))) (/.f64 1 (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x)))) (/.f64 1 (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x))) (/.f64 1 (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (sqrt.f64 (/.f64 y z)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) 1) (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (sqrt.f64 (/.f64 y z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (sqrt.f64 (/.f64 y z)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) 1) (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (sqrt.f64 (/.f64 y z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (sqrt.f64 (/.f64 y z)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) 1) (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (sqrt.f64 (/.f64 y z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (sqrt.f64 (/.f64 y z)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) 1) (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (sqrt.f64 (/.f64 y z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (sqrt.f64 (/.f64 y z)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) 1) (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (+.f64 y x)) (/.f64 (sqrt.f64 (/.f64 y z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x)))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x)))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x)))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x)))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x)))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x))) (/.f64 y (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x)))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x)))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x)))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x)))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x)))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x)))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x)))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x)))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x)))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x)))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (*.f64 (/.f64 (sqrt.f64 (/.f64 y z)) (cbrt.f64 (+.f64 y x))) (/.f64 (sqrt.f64 (/.f64 y z)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x))) (/.f64 y (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x)))) (/.f64 y (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x))) (/.f64 y (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x))) (/.f64 y (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x)))) (/.f64 y (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x))) (/.f64 y (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x))) (/.f64 y (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x)))) (/.f64 y (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x))) (/.f64 y (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x))) (/.f64 y (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x)))) (/.f64 y (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x))) (/.f64 y (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x))) (/.f64 y (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x)))) (/.f64 y (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x))) (/.f64 y (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x)))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x)))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x)))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x)))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x)))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x))) (*.f64 (/.f64 (cbrt.f64 (/.f64 y z)) (sqrt.f64 (+.f64 y x))) (/.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (sqrt.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (fma.f64 y (-.f64 y x) (*.f64 x x)) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (-.f64 y x) (*.f64 x x))) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (-.f64 y x) (*.f64 x x)) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (fma.f64 y (-.f64 y x) (*.f64 x x)) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (-.f64 y x) (*.f64 x x))) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (-.f64 y x) (*.f64 x x)) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (fma.f64 y (-.f64 y x) (*.f64 x x)) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (-.f64 y x) (*.f64 x x))) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (-.f64 y x) (*.f64 x x)) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (fma.f64 y (-.f64 y x) (*.f64 x x)) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (-.f64 y x) (*.f64 x x))) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (-.f64 y x) (*.f64 x x)) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (fma.f64 y (-.f64 y x) (*.f64 x x)) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (-.f64 y x) (*.f64 x x))) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (-.f64 y x) (*.f64 x x)) (/.f64 (/.f64 y z) (+.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (-.f64 x y) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (-.f64 x y)) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (-.f64 x y) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (-.f64 x y) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (-.f64 x y)) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (-.f64 x y) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (*.f64 (-.f64 x y) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (-.f64 x y)) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (-.f64 x y) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (-.f64 x y) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (-.f64 x y)) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (-.f64 x y) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (*.f64 (-.f64 x y) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (-.f64 x y)) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (-.f64 x y) (/.f64 (/.f64 y z) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 y x)) (/.f64 y (*.f64 (+.f64 y x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (/.f64 y z)) (/.f64 1 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))) 2) (cbrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2) (*.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) (/.f64 1 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))) (sqrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (/.f64 y z))) (*.f64 (sqrt.f64 (-.f64 1 (/.f64 y z))) (/.f64 1 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 1 (/.f64 y z))) (/.f64 1 (neg.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 y x)) (-.f64 1 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2) 1) (/.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 1 (/.f64 y z))) 1) (/.f64 (sqrt.f64 (-.f64 1 (/.f64 y z))) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (/.f64 (-.f64 1 (/.f64 y z)) (cbrt.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (cbrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 1 (/.f64 y z))) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (/.f64 (sqrt.f64 (-.f64 1 (/.f64 y z))) (cbrt.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 y x))) (/.f64 (-.f64 1 (/.f64 y z)) (sqrt.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2) (sqrt.f64 (+.f64 y x))) (/.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) (sqrt.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (/.f64 y z)) (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 1 (/.f64 y z)) (neg.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y z)) 3) (pow.f64 (+.f64 y x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (/.f64 y (*.f64 (+.f64 y x) z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 y x))) (cbrt.f64 (/.f64 1 (+.f64 y x)))) (cbrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (/.f64 y (*.f64 (+.f64 y x) z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 1 (+.f64 y x))) (sqrt.f64 (/.f64 1 (+.f64 y x))) (neg.f64 (/.f64 y (*.f64 (+.f64 y x) z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)) (neg.f64 (/.f64 y (*.f64 (+.f64 y x) z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (neg.f64 (/.f64 y (*.f64 (+.f64 y x) z))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z))))) (cbrt.f64 (exp.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 y x) (/.f64 1 (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))) 2) (cbrt.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))) (sqrt.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (/.f64 y z)) -1) (pow.f64 (/.f64 1 (+.f64 y x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))) 2) -1) (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))) -1) (pow.f64 (sqrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 y x)) 2) 1) (/.f64 (cbrt.f64 (+.f64 y x)) (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 y x)) 1) (/.f64 (sqrt.f64 (+.f64 y x)) (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2)) (/.f64 (+.f64 y x) (cbrt.f64 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 y x)) 2) (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2)) (/.f64 (cbrt.f64 (+.f64 y x)) (cbrt.f64 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2)) (/.f64 (sqrt.f64 (+.f64 y x)) (cbrt.f64 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 1 (/.f64 y z)))) (/.f64 (+.f64 y x) (sqrt.f64 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 y x)) 2) (sqrt.f64 (-.f64 1 (/.f64 y z)))) (/.f64 (cbrt.f64 (+.f64 y x)) (sqrt.f64 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 y x)) (sqrt.f64 (-.f64 1 (/.f64 y z)))) (/.f64 (sqrt.f64 (+.f64 y x)) (sqrt.f64 (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 (/.f64 y z))) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (-.f64 1 (/.f64 y z)))) (neg.f64 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y x) (-.f64 1 (pow.f64 (/.f64 y z) 3))) (fma.f64 (/.f64 y z) (+.f64 1 (/.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y x) (-.f64 1 (pow.f64 (/.f64 y z) 2))) (+.f64 1 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (+.f64 y x)) 2) (/.f64 (-.f64 1 (/.f64 y z)) (cbrt.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 y x)) (/.f64 (-.f64 1 (/.f64 y z)) (sqrt.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 y x)) (neg.f64 (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 (-.f64 1 (/.f64 y z)) (fma.f64 y (-.f64 y x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (*.f64 (-.f64 1 (/.f64 y z)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))) (sqrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 y x) (sqrt.f64 (-.f64 1 (/.f64 y z)))) (sqrt.f64 (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 y x) 1) (-.f64 1 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 1 (/.f64 y z))) (/.f64 1 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))) 2)) (cbrt.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 y x) (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2)) (cbrt.f64 (-.f64 1 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 y x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 y x) 3) (pow.f64 (-.f64 1 (/.f64 y z)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))) 1))))))"]],"rules":[["egg-rr",49],["egg-rr",122]],"stop":[["node limit",1]],"time":68.268798828125,"type":"rewrite"},{"count":[[243,259]],"egraph":[[2,4745,2743,0.022432792],[1,1068,2959,0.007944251],[0,315,3129,0.001522834]],"inputs":[["(/.f64 1 x)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (/.f64 1 x))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2)))) x) (/.f64 1 x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (*.f64 z (pow.f64 x 3)))))) (+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2)))) x) (/.f64 1 x))))","(/.f64 -1 z)","(-.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) x) (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) x) (pow.f64 y 2))) (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (pow.f64 x 2)) (pow.f64 y 3)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(/.f64 -1 z)","(-.f64 (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y z))) (/.f64 1 z))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (*.f64 y z)) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) x) (pow.f64 y 2))))) (/.f64 1 z))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (*.f64 y z)) (+.f64 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 x 2)) (pow.f64 y 3)) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) x) (pow.f64 y 2)))))) (/.f64 1 z))","(*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(/.f64 1 (+.f64 y x))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(/.f64 1 (+.f64 y x))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(/.f64 (-.f64 1 (/.f64 y z)) y)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) x)) (/.f64 1 z))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) x) (*.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z))) (pow.f64 x 2)))) (/.f64 1 z))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 y 3) z)) (/.f64 1 (pow.f64 y 4))) (pow.f64 x 3)) (+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) x) (*.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z))) (pow.f64 x 2))))) (/.f64 1 z))","(/.f64 (-.f64 1 (/.f64 y z)) x)","(-.f64 (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) y) (pow.f64 x 2)))) (/.f64 y (*.f64 z x)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) (pow.f64 y 2)) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) y) (pow.f64 x 2))))) (/.f64 y (*.f64 z x)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) (pow.f64 y 2)) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) y) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) (pow.f64 y 3)) (pow.f64 x 4)))))) (/.f64 y (*.f64 z x)))","(/.f64 (-.f64 1 (/.f64 y z)) x)","(-.f64 (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) y) (pow.f64 x 2)))) (/.f64 y (*.f64 z x)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) (pow.f64 y 2)) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) y) (pow.f64 x 2))))) (/.f64 y (*.f64 z x)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) (pow.f64 y 2)) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) y) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) (pow.f64 y 3)) (pow.f64 x 4)))))) (/.f64 y (*.f64 z x)))","x","(+.f64 (*.f64 y (*.f64 (pow.f64 x 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) x)","(+.f64 (*.f64 y (*.f64 (pow.f64 x 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 x (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2)))) (*.f64 -1 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2)))))) x))","(+.f64 (*.f64 y (*.f64 (pow.f64 x 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (*.f64 z (pow.f64 x 3)))) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) x) (*.f64 -1 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2)))) (*.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) x)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 x (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2)))) (*.f64 -1 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2)))))) x)))","(*.f64 -1 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (pow.f64 z 2)) y)))","(+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (pow.f64 z 2)) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (*.f64 (pow.f64 z 2) x))) (*.f64 (pow.f64 z 3) (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) 2))) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) 2) (*.f64 (pow.f64 z 3) x))) (+.f64 (*.f64 (pow.f64 z 2) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (pow.f64 x 2))) (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (*.f64 (pow.f64 z 2) x))) (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) 2) (pow.f64 z 3))) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) z)))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (pow.f64 z 2)) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (*.f64 (pow.f64 z 2) x))) (*.f64 (pow.f64 z 3) (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) 2))) (pow.f64 y 2))))))","(*.f64 -1 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)))","(+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 2) x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 2) x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 (+.f64 1 (/.f64 x z)) z)) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 2) (pow.f64 x 2))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 2) x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (pow.f64 y 2))))))))","(*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x)))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (pow.f64 z 3)) (+.f64 y x))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y x)))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 3)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x))))","(/.f64 y (-.f64 1 (/.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) x)) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z)))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) 2)) (pow.f64 (-.f64 1 (/.f64 y z)) 3)))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) x)) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 y (-.f64 1 (/.f64 y z)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z)))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) 2)) (pow.f64 (-.f64 1 (/.f64 y z)) 3)))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) x)) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z)))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) 2)) (pow.f64 (-.f64 1 (/.f64 y z)) 3)))))) (-.f64 1 (/.f64 y z)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z))))) (pow.f64 (-.f64 1 (/.f64 y z)) 3))) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (*.f64 (pow.f64 y 3) z)) (/.f64 1 (pow.f64 y 4)))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)))) (pow.f64 x 3))))))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))) (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))) x))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))) (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))) x)) (*.f64 -1 (/.f64 (+.f64 (*.f64 y (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))) (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (-.f64 1 (/.f64 y z)))) (/.f64 (pow.f64 y 3) (-.f64 1 (/.f64 y z))))) (pow.f64 x 2))))))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 (-.f64 1 (/.f64 y z)) x))) (/.f64 (pow.f64 y 2) (*.f64 (-.f64 1 (/.f64 y z)) x)))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 (-.f64 1 (/.f64 y z)) x))) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (-.f64 1 (/.f64 y z)) x)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (-.f64 1 (/.f64 y z)))) (+.f64 (*.f64 -1 (*.f64 y (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))) (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))))) (/.f64 (pow.f64 y 3) (-.f64 1 (/.f64 y z))))) (pow.f64 x 2)))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 x)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (/.f64 1 x))","(fma.f64 -1 (*.f64 y (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (/.f64 1 x))","(-.f64 (/.f64 1 x) (*.f64 y (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))))","(-.f64 (/.f64 1 x) (+.f64 (/.f64 y (*.f64 x x)) (/.f64 (/.f64 y x) z)))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2)))) x) (/.f64 1 x)))","(fma.f64 -1 (*.f64 y (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (+.f64 (/.f64 1 x) (/.f64 (*.f64 y y) (/.f64 x (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))))))","(+.f64 (/.f64 1 x) (fma.f64 (neg.f64 y) (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) (*.f64 (/.f64 y (/.f64 x y)) (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))))))","(+.f64 (/.f64 1 x) (*.f64 (+.f64 (/.f64 (/.f64 1 x) z) (/.f64 1 (*.f64 x x))) (+.f64 (neg.f64 y) (/.f64 y (/.f64 x y)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (*.f64 z (pow.f64 x 3)))))) (+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2)))) x) (/.f64 1 x))))","(fma.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (*.f64 z (pow.f64 x 3))))) (fma.f64 -1 (*.f64 y (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (+.f64 (/.f64 1 x) (/.f64 (*.f64 y y) (/.f64 x (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))))))))","(-.f64 (+.f64 (/.f64 1 x) (fma.f64 (neg.f64 y) (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) (*.f64 (/.f64 y (/.f64 x y)) (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))))) (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (*.f64 z (pow.f64 x 3))))))","(+.f64 (*.f64 (+.f64 (/.f64 (/.f64 1 x) z) (/.f64 1 (*.f64 x x))) (+.f64 (neg.f64 y) (/.f64 y (/.f64 x y)))) (-.f64 (/.f64 1 x) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))) (/.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(/.f64 -1 z)","(-.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(-.f64 (/.f64 1 y) (fma.f64 -1 (/.f64 (/.f64 x y) z) (/.f64 1 z)))","(-.f64 (/.f64 1 y) (-.f64 (/.f64 1 z) (/.f64 x (*.f64 y z))))","(+.f64 (/.f64 -1 z) (/.f64 (+.f64 1 (/.f64 x z)) y))","(-.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) x) (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (/.f64 (*.f64 y y) x))) (fma.f64 -1 (/.f64 (/.f64 x y) z) (/.f64 1 z))))","(-.f64 (-.f64 (/.f64 1 y) (*.f64 (/.f64 x y) (/.f64 (+.f64 1 (/.f64 x z)) y))) (-.f64 (/.f64 1 z) (/.f64 x (*.f64 y z))))","(+.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (+.f64 (/.f64 (*.f64 x (-.f64 -1 (/.f64 x z))) (*.f64 y y)) (/.f64 -1 z)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) x) (pow.f64 y 2))) (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (pow.f64 x 2)) (pow.f64 y 3)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (/.f64 1 y) (-.f64 (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (/.f64 (*.f64 y y) x)) (/.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (/.f64 (pow.f64 y 3) (*.f64 x x)))) (fma.f64 -1 (/.f64 (/.f64 x y) z) (/.f64 1 z))))","(+.f64 (-.f64 (/.f64 (+.f64 1 (/.f64 x z)) (/.f64 (pow.f64 y 3) (*.f64 x x))) (*.f64 (/.f64 x y) (/.f64 (+.f64 1 (/.f64 x z)) y))) (-.f64 (/.f64 1 y) (-.f64 (/.f64 1 z) (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) (*.f64 y y)) (-.f64 (/.f64 x (/.f64 y x)) x)) (+.f64 (/.f64 -1 z) (/.f64 (+.f64 1 (/.f64 x z)) y)))","(/.f64 -1 z)","(-.f64 (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y z))) (/.f64 1 z))","(-.f64 (/.f64 1 y) (fma.f64 -1 (/.f64 (/.f64 x y) z) (/.f64 1 z)))","(-.f64 (/.f64 1 y) (-.f64 (/.f64 1 z) (/.f64 x (*.f64 y z))))","(+.f64 (/.f64 -1 z) (/.f64 (+.f64 1 (/.f64 x z)) y))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (*.f64 y z)) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) x) (pow.f64 y 2))))) (/.f64 1 z))","(+.f64 (/.f64 1 y) (-.f64 (neg.f64 (/.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (/.f64 (*.f64 y y) x))) (fma.f64 -1 (/.f64 (/.f64 x y) z) (/.f64 1 z))))","(-.f64 (-.f64 (/.f64 1 y) (*.f64 (/.f64 x y) (/.f64 (+.f64 1 (/.f64 x z)) y))) (-.f64 (/.f64 1 z) (/.f64 x (*.f64 y z))))","(+.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (+.f64 (/.f64 (*.f64 x (-.f64 -1 (/.f64 x z))) (*.f64 y y)) (/.f64 -1 z)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 x (*.f64 y z)) (+.f64 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 x 2)) (pow.f64 y 3)) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) x) (pow.f64 y 2)))))) (/.f64 1 z))","(+.f64 (/.f64 1 y) (-.f64 (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (/.f64 (*.f64 y y) x)) (/.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (/.f64 (pow.f64 y 3) (*.f64 x x)))) (fma.f64 -1 (/.f64 (/.f64 x y) z) (/.f64 1 z))))","(+.f64 (-.f64 (/.f64 (+.f64 1 (/.f64 x z)) (/.f64 (pow.f64 y 3) (*.f64 x x))) (*.f64 (/.f64 x y) (/.f64 (+.f64 1 (/.f64 x z)) y))) (-.f64 (/.f64 1 y) (-.f64 (/.f64 1 z) (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) (*.f64 y y)) (-.f64 (/.f64 x (/.f64 y x)) x)) (+.f64 (/.f64 -1 z) (/.f64 (+.f64 1 (/.f64 x z)) y)))","(*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z)))","(neg.f64 (/.f64 y (*.f64 z (+.f64 x y))))","(/.f64 (/.f64 (neg.f64 y) z) (+.f64 x y))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(fma.f64 -1 (/.f64 y (*.f64 z (+.f64 x y))) (/.f64 1 (+.f64 x y)))","(-.f64 (/.f64 1 (+.f64 x y)) (/.f64 y (*.f64 z (+.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(fma.f64 -1 (/.f64 y (*.f64 z (+.f64 x y))) (/.f64 1 (+.f64 x y)))","(-.f64 (/.f64 1 (+.f64 x y)) (/.f64 y (*.f64 z (+.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(fma.f64 -1 (/.f64 y (*.f64 z (+.f64 x y))) (/.f64 1 (+.f64 x y)))","(-.f64 (/.f64 1 (+.f64 x y)) (/.f64 y (*.f64 z (+.f64 x y))))","(/.f64 1 (+.f64 y x))","(/.f64 1 (+.f64 x y))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(fma.f64 -1 (/.f64 y (*.f64 z (+.f64 x y))) (/.f64 1 (+.f64 x y)))","(-.f64 (/.f64 1 (+.f64 x y)) (/.f64 y (*.f64 z (+.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(fma.f64 -1 (/.f64 y (*.f64 z (+.f64 x y))) (/.f64 1 (+.f64 x y)))","(-.f64 (/.f64 1 (+.f64 x y)) (/.f64 y (*.f64 z (+.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(fma.f64 -1 (/.f64 y (*.f64 z (+.f64 x y))) (/.f64 1 (+.f64 x y)))","(-.f64 (/.f64 1 (+.f64 x y)) (/.f64 y (*.f64 z (+.f64 x y))))","(/.f64 1 (+.f64 y x))","(/.f64 1 (+.f64 x y))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(fma.f64 -1 (/.f64 y (*.f64 z (+.f64 x y))) (/.f64 1 (+.f64 x y)))","(-.f64 (/.f64 1 (+.f64 x y)) (/.f64 y (*.f64 z (+.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(fma.f64 -1 (/.f64 y (*.f64 z (+.f64 x y))) (/.f64 1 (+.f64 x y)))","(-.f64 (/.f64 1 (+.f64 x y)) (/.f64 y (*.f64 z (+.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (+.f64 y x) z))) (/.f64 1 (+.f64 y x)))","(fma.f64 -1 (/.f64 y (*.f64 z (+.f64 x y))) (/.f64 1 (+.f64 x y)))","(-.f64 (/.f64 1 (+.f64 x y)) (/.f64 y (*.f64 z (+.f64 x y))))","(/.f64 (-.f64 1 (/.f64 y z)) y)","(-.f64 (+.f64 (/.f64 1 y) (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) x)) (/.f64 1 z))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 x (-.f64 (/.f64 (/.f64 1 y) z) (/.f64 1 (*.f64 y y)))) (/.f64 1 z)))","(+.f64 (/.f64 1 y) (fma.f64 x (+.f64 (/.f64 (/.f64 1 y) z) (/.f64 -1 (*.f64 y y))) (/.f64 -1 z)))","(+.f64 (/.f64 1 y) (fma.f64 x (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 -1 (*.f64 y y))) (/.f64 -1 z)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) x) (*.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z))) (pow.f64 x 2)))) (/.f64 1 z))","(+.f64 (/.f64 1 y) (-.f64 (fma.f64 (-.f64 (/.f64 (/.f64 1 y) z) (/.f64 1 (*.f64 y y))) x (*.f64 (*.f64 x x) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (/.f64 1 (*.f64 y y)) z)))) (/.f64 1 z)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 (*.f64 x x) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y (*.f64 y z))))) (fma.f64 x (+.f64 (/.f64 (/.f64 1 y) z) (/.f64 -1 (*.f64 y y))) (/.f64 -1 z))))","(+.f64 (fma.f64 x (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 -1 (*.f64 y y))) (/.f64 1 y)) (fma.f64 x (*.f64 x (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y (*.f64 y z))))) (/.f64 -1 z)))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 y 3) z)) (/.f64 1 (pow.f64 y 4))) (pow.f64 x 3)) (+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) x) (*.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z))) (pow.f64 x 2))))) (/.f64 1 z))","(+.f64 (/.f64 1 y) (-.f64 (fma.f64 (-.f64 (/.f64 1 (*.f64 z (pow.f64 y 3))) (/.f64 1 (pow.f64 y 4))) (pow.f64 x 3) (fma.f64 (-.f64 (/.f64 (/.f64 1 y) z) (/.f64 1 (*.f64 y y))) x (*.f64 (*.f64 x x) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (/.f64 1 (*.f64 y y)) z))))) (/.f64 1 z)))","(+.f64 (fma.f64 (pow.f64 x 3) (+.f64 (/.f64 1 (*.f64 z (pow.f64 y 3))) (/.f64 -1 (pow.f64 y 4))) (fma.f64 x (+.f64 (/.f64 (/.f64 1 y) z) (/.f64 -1 (*.f64 y y))) (*.f64 (*.f64 x x) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y (*.f64 y z))))))) (-.f64 (/.f64 1 y) (/.f64 1 z)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 x (+.f64 (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 -1 (*.f64 y y))) (*.f64 (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y (*.f64 y z)))) x))) (fma.f64 (pow.f64 x 3) (+.f64 (/.f64 1 (*.f64 z (pow.f64 y 3))) (/.f64 -1 (pow.f64 y 4))) (/.f64 -1 z))))","(/.f64 (-.f64 1 (/.f64 y z)) x)","(-.f64 (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) y) (pow.f64 x 2)))) (/.f64 y (*.f64 z x)))","(+.f64 (/.f64 1 x) (-.f64 (neg.f64 (/.f64 (-.f64 1 (/.f64 y z)) (/.f64 (*.f64 x x) y))) (/.f64 (/.f64 y z) x)))","(+.f64 (/.f64 (*.f64 (neg.f64 y) (-.f64 1 (/.f64 y z))) (*.f64 x x)) (/.f64 (-.f64 1 (/.f64 y z)) x))","(+.f64 (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (*.f64 x x)) (neg.f64 y)) (/.f64 (-.f64 1 (/.f64 y z)) x))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) (pow.f64 y 2)) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) y) (pow.f64 x 2))))) (/.f64 y (*.f64 z x)))","(+.f64 (/.f64 (-.f64 1 (/.f64 y z)) (/.f64 (pow.f64 x 3) (*.f64 y y))) (+.f64 (/.f64 1 x) (-.f64 (neg.f64 (/.f64 (-.f64 1 (/.f64 y z)) (/.f64 (*.f64 x x) y))) (/.f64 (/.f64 y z) x))))","(+.f64 (+.f64 (/.f64 (*.f64 (neg.f64 y) (-.f64 1 (/.f64 y z))) (*.f64 x x)) (/.f64 (-.f64 1 (/.f64 y z)) x)) (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (pow.f64 x 3)) (*.f64 y y)))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (*.f64 x x)) (neg.f64 y)) (/.f64 (-.f64 1 (/.f64 y z)) x)) (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (pow.f64 x 3)) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) (pow.f64 y 2)) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) y) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) (pow.f64 y 3)) (pow.f64 x 4)))))) (/.f64 y (*.f64 z x)))","(+.f64 (/.f64 (-.f64 1 (/.f64 y z)) (/.f64 (pow.f64 x 3) (*.f64 y y))) (-.f64 (+.f64 (/.f64 1 x) (*.f64 -1 (+.f64 (/.f64 (-.f64 1 (/.f64 y z)) (/.f64 (*.f64 x x) y)) (/.f64 (-.f64 1 (/.f64 y z)) (/.f64 (pow.f64 x 4) (pow.f64 y 3)))))) (/.f64 (/.f64 y z) x)))","(+.f64 (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (pow.f64 x 3)) (*.f64 y y)) (+.f64 (-.f64 (/.f64 (*.f64 (neg.f64 y) (-.f64 1 (/.f64 y z))) (*.f64 x x)) (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (pow.f64 x 4)) (pow.f64 y 3))) (/.f64 (-.f64 1 (/.f64 y z)) x)))","(+.f64 (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (pow.f64 x 3)) (*.f64 y y)) (+.f64 (neg.f64 (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (*.f64 x x)) (+.f64 y (/.f64 (pow.f64 y 3) (*.f64 x x))))) (/.f64 (-.f64 1 (/.f64 y z)) x)))","(/.f64 (-.f64 1 (/.f64 y z)) x)","(-.f64 (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) y) (pow.f64 x 2)))) (/.f64 y (*.f64 z x)))","(+.f64 (/.f64 1 x) (-.f64 (neg.f64 (/.f64 (-.f64 1 (/.f64 y z)) (/.f64 (*.f64 x x) y))) (/.f64 (/.f64 y z) x)))","(+.f64 (/.f64 (*.f64 (neg.f64 y) (-.f64 1 (/.f64 y z))) (*.f64 x x)) (/.f64 (-.f64 1 (/.f64 y z)) x))","(+.f64 (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (*.f64 x x)) (neg.f64 y)) (/.f64 (-.f64 1 (/.f64 y z)) x))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) (pow.f64 y 2)) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) y) (pow.f64 x 2))))) (/.f64 y (*.f64 z x)))","(+.f64 (/.f64 (-.f64 1 (/.f64 y z)) (/.f64 (pow.f64 x 3) (*.f64 y y))) (+.f64 (/.f64 1 x) (-.f64 (neg.f64 (/.f64 (-.f64 1 (/.f64 y z)) (/.f64 (*.f64 x x) y))) (/.f64 (/.f64 y z) x))))","(+.f64 (+.f64 (/.f64 (*.f64 (neg.f64 y) (-.f64 1 (/.f64 y z))) (*.f64 x x)) (/.f64 (-.f64 1 (/.f64 y z)) x)) (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (pow.f64 x 3)) (*.f64 y y)))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (*.f64 x x)) (neg.f64 y)) (/.f64 (-.f64 1 (/.f64 y z)) x)) (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (pow.f64 x 3)) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) (pow.f64 y 2)) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) y) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (/.f64 y z)) (pow.f64 y 3)) (pow.f64 x 4)))))) (/.f64 y (*.f64 z x)))","(+.f64 (/.f64 (-.f64 1 (/.f64 y z)) (/.f64 (pow.f64 x 3) (*.f64 y y))) (-.f64 (+.f64 (/.f64 1 x) (*.f64 -1 (+.f64 (/.f64 (-.f64 1 (/.f64 y z)) (/.f64 (*.f64 x x) y)) (/.f64 (-.f64 1 (/.f64 y z)) (/.f64 (pow.f64 x 4) (pow.f64 y 3)))))) (/.f64 (/.f64 y z) x)))","(+.f64 (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (pow.f64 x 3)) (*.f64 y y)) (+.f64 (-.f64 (/.f64 (*.f64 (neg.f64 y) (-.f64 1 (/.f64 y z))) (*.f64 x x)) (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (pow.f64 x 4)) (pow.f64 y 3))) (/.f64 (-.f64 1 (/.f64 y z)) x)))","(+.f64 (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (pow.f64 x 3)) (*.f64 y y)) (+.f64 (neg.f64 (*.f64 (/.f64 (-.f64 1 (/.f64 y z)) (*.f64 x x)) (+.f64 y (/.f64 (pow.f64 y 3) (*.f64 x x))))) (/.f64 (-.f64 1 (/.f64 y z)) x)))","x","(+.f64 (*.f64 y (*.f64 (pow.f64 x 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) x)","(fma.f64 y (*.f64 (*.f64 x x) (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) x)","(fma.f64 y (fma.f64 (/.f64 1 (*.f64 x z)) (*.f64 x x) 1) x)","(fma.f64 y (+.f64 1 (/.f64 (*.f64 x x) (*.f64 x z))) x)","(+.f64 (*.f64 y (*.f64 (pow.f64 x 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 x (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2)))) (*.f64 -1 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2)))))) x))","(fma.f64 y (*.f64 (*.f64 x x) (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (fma.f64 -1 (*.f64 (*.f64 y y) (fma.f64 x (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) (neg.f64 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2))))) x))","(fma.f64 y (fma.f64 (/.f64 1 (*.f64 x z)) (*.f64 x x) 1) (fma.f64 (*.f64 (neg.f64 y) y) (-.f64 (*.f64 x (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2))) x))","(+.f64 x (*.f64 y (-.f64 (+.f64 1 (/.f64 (*.f64 x x) (*.f64 x z))) (*.f64 y (+.f64 (/.f64 x (*.f64 x z)) (-.f64 (/.f64 x (*.f64 x x)) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 (/.f64 1 x) z) (/.f64 1 (*.f64 x x))) 2))))))))","(+.f64 (*.f64 y (*.f64 (pow.f64 x 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (*.f64 z (pow.f64 x 3)))) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) x) (*.f64 -1 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2)))) (*.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) x)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 x (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2)))) (*.f64 -1 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2)))))) x)))","(fma.f64 y (*.f64 (*.f64 x x) (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (fma.f64 -1 (*.f64 (pow.f64 y 3) (fma.f64 -1 (*.f64 (*.f64 x x) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (*.f64 z (pow.f64 x 3))))) (fma.f64 (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2) (*.f64 x x) (*.f64 (*.f64 x (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (fma.f64 x (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) (neg.f64 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2)))))))) (fma.f64 -1 (*.f64 (*.f64 y y) (fma.f64 x (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) (neg.f64 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2))))) x)))","(fma.f64 y (fma.f64 (/.f64 1 (*.f64 x z)) (*.f64 x x) 1) (-.f64 (fma.f64 (*.f64 (neg.f64 y) y) (-.f64 (*.f64 x (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2))) x) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 x (*.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) (-.f64 (*.f64 x (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2))))) (*.f64 (*.f64 x x) (+.f64 (neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (*.f64 z (pow.f64 x 3))))) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2)))))))","(fma.f64 y (+.f64 1 (/.f64 (*.f64 x x) (*.f64 x z))) (-.f64 x (*.f64 (*.f64 y y) (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 (/.f64 1 x) z) (/.f64 1 (*.f64 x x))) (+.f64 (+.f64 1 (/.f64 (*.f64 x x) (*.f64 x z))) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (+.f64 (/.f64 (/.f64 1 x) z) (/.f64 1 (*.f64 x x))) 2) (neg.f64 (pow.f64 x 3))) (/.f64 x (*.f64 x z))) x) 1))) (*.f64 (*.f64 x x) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 (/.f64 1 z) (pow.f64 x 3))))) y) (+.f64 (/.f64 x (*.f64 x z)) (-.f64 (/.f64 x (*.f64 x x)) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 (/.f64 1 x) z) (/.f64 1 (*.f64 x x))) 2))))))))","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (pow.f64 z 2)) y)))","(*.f64 -1 (+.f64 z (/.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (/.f64 y (*.f64 z z)))))","(-.f64 (neg.f64 z) (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (*.f64 z z)))","(-.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 -1 (/.f64 x z))) y) z)","(+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (pow.f64 z 2)) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (*.f64 (pow.f64 z 2) x))) (*.f64 (pow.f64 z 3) (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) 2))) (pow.f64 y 2)))))","(fma.f64 -1 z (*.f64 -1 (+.f64 (/.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (/.f64 y (*.f64 z z))) (/.f64 (fma.f64 -1 (*.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (*.f64 x (*.f64 z z))) (*.f64 (pow.f64 z 3) (pow.f64 (-.f64 1 (neg.f64 (/.f64 x z))) 2))) (*.f64 y y)))))","(-.f64 (-.f64 (neg.f64 z) (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (*.f64 z z))) (/.f64 (fma.f64 (pow.f64 z 3) (pow.f64 (+.f64 1 (/.f64 x z)) 2) (*.f64 (*.f64 x (*.f64 z z)) (+.f64 -1 (/.f64 (neg.f64 x) z)))) (*.f64 y y)))","(-.f64 (-.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 -1 (/.f64 x z))) y) z) (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (-.f64 (*.f64 (pow.f64 z 3) (+.f64 1 (/.f64 x z))) (*.f64 x (*.f64 z z)))) (*.f64 y y)))","(+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) 2) (*.f64 (pow.f64 z 3) x))) (+.f64 (*.f64 (pow.f64 z 2) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (pow.f64 x 2))) (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (*.f64 (pow.f64 z 2) x))) (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) 2) (pow.f64 z 3))) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) z)))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (pow.f64 z 2)) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) (*.f64 (pow.f64 z 2) x))) (*.f64 (pow.f64 z 3) (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 x z))) 2))) (pow.f64 y 2))))))","(fma.f64 -1 z (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 (pow.f64 (-.f64 1 (neg.f64 (/.f64 x z))) 2) (*.f64 x (pow.f64 z 3))) (fma.f64 (*.f64 z z) (*.f64 (*.f64 x x) (-.f64 1 (neg.f64 (/.f64 x z)))) (*.f64 (fma.f64 -1 (*.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (*.f64 x (*.f64 z z))) (*.f64 (pow.f64 z 3) (pow.f64 (-.f64 1 (neg.f64 (/.f64 x z))) 2))) (*.f64 z (-.f64 1 (neg.f64 (/.f64 x z))))))) (pow.f64 y 3)) (*.f64 -1 (+.f64 (/.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (/.f64 y (*.f64 z z))) (/.f64 (fma.f64 -1 (*.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (*.f64 x (*.f64 z z))) (*.f64 (pow.f64 z 3) (pow.f64 (-.f64 1 (neg.f64 (/.f64 x z))) 2))) (*.f64 y y))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (+.f64 -1 (/.f64 (neg.f64 x) z)) (*.f64 z z)) y) (/.f64 (fma.f64 (pow.f64 z 3) (pow.f64 (+.f64 1 (/.f64 x z)) 2) (*.f64 (*.f64 x (*.f64 z z)) (+.f64 -1 (/.f64 (neg.f64 x) z)))) (*.f64 y y))) (/.f64 (-.f64 (fma.f64 (*.f64 x (*.f64 x (+.f64 1 (/.f64 x z)))) (*.f64 z z) (*.f64 (fma.f64 (pow.f64 z 3) (pow.f64 (+.f64 1 (/.f64 x z)) 2) (*.f64 (*.f64 x (*.f64 z z)) (+.f64 -1 (/.f64 (neg.f64 x) z)))) (*.f64 z (+.f64 1 (/.f64 x z))))) (*.f64 x (*.f64 (pow.f64 z 3) (pow.f64 (+.f64 1 (/.f64 x z)) 2)))) (pow.f64 y 3))) z)","(-.f64 (-.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 -1 (/.f64 x z))) y) (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (-.f64 (*.f64 (pow.f64 z 3) (+.f64 1 (/.f64 x z))) (*.f64 x (*.f64 z z)))) (*.f64 y y))) (+.f64 z (/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 x z)) (+.f64 (*.f64 x (*.f64 x (*.f64 z z))) (*.f64 (*.f64 (+.f64 1 (/.f64 x z)) (-.f64 (*.f64 (pow.f64 z 3) (+.f64 1 (/.f64 x z))) (*.f64 x (*.f64 z z)))) z))) (*.f64 x (*.f64 (pow.f64 z 3) (pow.f64 (+.f64 1 (/.f64 x z)) 2)))) (pow.f64 y 3))))","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)))","(*.f64 -1 (+.f64 z (/.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (/.f64 y (*.f64 z z)))))","(-.f64 (neg.f64 z) (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (*.f64 z z)))","(-.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 -1 (/.f64 x z))) y) z)","(+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 2) x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (pow.f64 y 2)))))","(fma.f64 -1 z (*.f64 -1 (+.f64 (/.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (/.f64 y (*.f64 z z))) (/.f64 (fma.f64 -1 (*.f64 (-.f64 1 (neg.f64 (/.f64 x z))) (*.f64 x (*.f64 z z))) (*.f64 (pow.f64 z 3) (pow.f64 (-.f64 1 (neg.f64 (/.f64 x z))) 2))) (*.f64 y y)))))","(-.f64 (-.f64 (neg.f64 z) (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (*.f64 z z))) (/.f64 (fma.f64 (pow.f64 z 3) (pow.f64 (+.f64 1 (/.f64 x z)) 2) (*.f64 (*.f64 x (*.f64 z z)) (+.f64 -1 (/.f64 (neg.f64 x) z)))) (*.f64 y y)))","(-.f64 (-.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 -1 (/.f64 x z))) y) z) (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (-.f64 (*.f64 (pow.f64 z 3) (+.f64 1 (/.f64 x z))) (*.f64 x (*.f64 z z)))) (*.f64 y y)))","(+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 2) x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 (+.f64 1 (/.f64 x z)) z)) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 2) (pow.f64 x 2))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 2) x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (pow.f64 y 2))))))))","(fma.f64 -1 z (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 x (*.f64 z z))) (*.f64 (pow.f64 z 3) (pow.f64 (+.f64 1 (/.f64 x z)) 2))) (/.f64 (pow.f64 y 3) (*.f64 z (+.f64 1 (/.f64 x z))))) (fma.f64 -1 (/.f64 (+.f64 1 (/.f64 x z)) (/.f64 y (*.f64 z z))) (+.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (/.f64 (pow.f64 y 3) (*.f64 x (pow.f64 z 3)))) (*.f64 -1 (+.f64 (/.f64 (+.f64 1 (/.f64 x z)) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x x) (*.f64 z z)))) (/.f64 (fma.f64 -1 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 x (*.f64 z z))) (*.f64 (pow.f64 z 3) (pow.f64 (+.f64 1 (/.f64 x z)) 2))) (*.f64 y y))))))))","(-.f64 (-.f64 (-.f64 (-.f64 (-.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (/.f64 (pow.f64 y 3) (*.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) (pow.f64 y 3)) (*.f64 (*.f64 x z) (*.f64 x z)))) (/.f64 (fma.f64 (pow.f64 z 3) (pow.f64 (+.f64 1 (/.f64 x z)) 2) (*.f64 (*.f64 x (*.f64 z z)) (+.f64 -1 (/.f64 (neg.f64 x) z)))) (*.f64 y y))) (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (*.f64 z z))) (/.f64 (*.f64 (fma.f64 (pow.f64 z 3) (pow.f64 (+.f64 1 (/.f64 x z)) 2) (*.f64 (*.f64 x (*.f64 z z)) (+.f64 -1 (/.f64 (neg.f64 x) z)))) (*.f64 z (+.f64 1 (/.f64 x z)))) (pow.f64 y 3))) z)","(-.f64 (+.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 y 3)) (*.f64 x (pow.f64 z 3)) (/.f64 (*.f64 (*.f64 x x) (*.f64 (*.f64 z z) (-.f64 -1 (/.f64 x z)))) (pow.f64 y 3))) (-.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 -1 (/.f64 x z))) y) (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (-.f64 (*.f64 (pow.f64 z 3) (+.f64 1 (/.f64 x z))) (*.f64 x (*.f64 z z)))) (*.f64 y y)))) (+.f64 z (*.f64 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (-.f64 (*.f64 (pow.f64 z 3) (+.f64 1 (/.f64 x z))) (*.f64 x (*.f64 z z)))) (pow.f64 y 3)) (+.f64 z (*.f64 (/.f64 x z) z)))))","(*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))","(neg.f64 (/.f64 (*.f64 z (+.f64 x y)) y))","(/.f64 (*.f64 (neg.f64 z) (+.f64 x y)) y)","(*.f64 (/.f64 (+.f64 x y) y) (neg.f64 z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))","(fma.f64 -1 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (neg.f64 (/.f64 (*.f64 z (+.f64 x y)) y)))","(neg.f64 (fma.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (*.f64 (/.f64 (+.f64 x y) y) z)))","(*.f64 z (-.f64 (*.f64 (neg.f64 (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) z) (/.f64 (+.f64 x y) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))))","(fma.f64 -1 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (fma.f64 -1 (*.f64 (pow.f64 z 3) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3)))) (neg.f64 (/.f64 (*.f64 z (+.f64 x y)) y))))","(-.f64 (neg.f64 (fma.f64 (pow.f64 z 3) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3))) (*.f64 (/.f64 (+.f64 x y) y) z))) (*.f64 z (*.f64 z (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))))","(-.f64 (*.f64 (pow.f64 z 3) (+.f64 (/.f64 -1 (*.f64 y y)) (neg.f64 (/.f64 x (pow.f64 y 3))))) (*.f64 z (+.f64 (/.f64 (+.f64 x y) y) (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) z))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))))","(fma.f64 -1 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (fma.f64 -1 (*.f64 (pow.f64 z 3) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3)))) (fma.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 x (pow.f64 y 4))) (pow.f64 z 4)) (neg.f64 (/.f64 (*.f64 z (+.f64 x y)) y)))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 x (pow.f64 y 4))) (pow.f64 z 4) (*.f64 (/.f64 (+.f64 x y) y) z))) (*.f64 (pow.f64 z 3) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3))))) (*.f64 z (*.f64 z (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))))","(-.f64 (neg.f64 (fma.f64 (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 x (pow.f64 y 4))) (pow.f64 z 4) (*.f64 (/.f64 (+.f64 x y) y) z))) (*.f64 (*.f64 z z) (+.f64 (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (*.f64 (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3))) z))))","(+.f64 y x)","(+.f64 x y)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (+.f64 x y) (/.f64 y (/.f64 z (+.f64 x y))))","(+.f64 (+.f64 x y) (*.f64 (/.f64 y z) (+.f64 x y)))","(*.f64 (+.f64 (/.f64 y z) 1) (+.f64 x y))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x)))","(+.f64 (+.f64 (/.f64 y (/.f64 z (+.f64 x y))) y) (+.f64 x (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) (+.f64 x y)))))","(+.f64 (+.f64 x y) (+.f64 (*.f64 (/.f64 y z) (+.f64 x y)) (*.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (+.f64 x y))))","(+.f64 (+.f64 x y) (*.f64 (/.f64 (+.f64 x y) z) (+.f64 y (/.f64 (*.f64 y y) z))))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (pow.f64 z 3)) (+.f64 y x))))","(+.f64 (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) (+.f64 x y))) (+.f64 (+.f64 (/.f64 y (/.f64 z (+.f64 x y))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 3) (+.f64 x y)))) (+.f64 x y)))","(+.f64 (*.f64 (/.f64 y z) (+.f64 x y)) (+.f64 y (+.f64 (+.f64 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 x y)) x) (*.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (+.f64 x y)))))","(+.f64 (+.f64 (+.f64 x y) (*.f64 (/.f64 (+.f64 x y) z) (+.f64 y (/.f64 (*.f64 y y) z)))) (/.f64 (+.f64 x y) (pow.f64 (/.f64 z y) 3)))","(+.f64 y x)","(+.f64 x y)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (+.f64 x y) (/.f64 y (/.f64 z (+.f64 x y))))","(+.f64 (+.f64 x y) (*.f64 (/.f64 y z) (+.f64 x y)))","(*.f64 (+.f64 (/.f64 y z) 1) (+.f64 x y))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y x)))","(+.f64 (+.f64 (/.f64 y (/.f64 z (+.f64 x y))) y) (+.f64 x (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) (+.f64 x y)))))","(+.f64 (+.f64 x y) (+.f64 (*.f64 (/.f64 y z) (+.f64 x y)) (*.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (+.f64 x y))))","(+.f64 (+.f64 x y) (*.f64 (/.f64 (+.f64 x y) z) (+.f64 y (/.f64 (*.f64 y y) z))))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 3)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x))))","(+.f64 (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) (+.f64 x y))) (+.f64 (+.f64 (/.f64 y (/.f64 z (+.f64 x y))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 3) (+.f64 x y)))) (+.f64 x y)))","(+.f64 (*.f64 (/.f64 y z) (+.f64 x y)) (+.f64 y (+.f64 (+.f64 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 x y)) x) (*.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (+.f64 x y)))))","(+.f64 (+.f64 (+.f64 x y) (*.f64 (/.f64 (+.f64 x y) z) (+.f64 y (/.f64 (*.f64 y y) z)))) (/.f64 (+.f64 x y) (pow.f64 (/.f64 z y) 3)))","(/.f64 y (-.f64 1 (/.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) x)) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 y (-.f64 1 (/.f64 y z))))","(fma.f64 -1 (/.f64 (*.f64 (*.f64 y y) (*.f64 x (-.f64 (/.f64 (/.f64 1 y) z) (/.f64 1 (*.f64 y y))))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 y (-.f64 1 (/.f64 y z))))","(-.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 (*.f64 (+.f64 (/.f64 (/.f64 1 y) z) (/.f64 -1 (*.f64 y y))) (*.f64 x (*.f64 y y))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)))","(-.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (*.f64 x (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 -1 (*.f64 y y))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z)))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) 2)) (pow.f64 (-.f64 1 (/.f64 y z)) 3)))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) x)) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 y (-.f64 1 (/.f64 y z)))))","(fma.f64 -1 (*.f64 (*.f64 x x) (+.f64 (/.f64 (*.f64 (*.f64 y y) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (/.f64 1 (*.f64 y y)) z))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (neg.f64 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 (-.f64 1 (/.f64 y z)) 3) (pow.f64 (-.f64 (/.f64 (/.f64 1 y) z) (/.f64 1 (*.f64 y y))) 2)))))) (fma.f64 -1 (/.f64 (*.f64 (*.f64 y y) (*.f64 x (-.f64 (/.f64 (/.f64 1 y) z) (/.f64 1 (*.f64 y y))))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 y (-.f64 1 (/.f64 y z)))))","(-.f64 (-.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 (*.f64 (+.f64 (/.f64 (/.f64 1 y) z) (/.f64 -1 (*.f64 y y))) (*.f64 x (*.f64 y y))) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (*.f64 (*.f64 x x) (-.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y (*.f64 y z))))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 1 (/.f64 y z)) 3)) (pow.f64 (+.f64 (/.f64 (/.f64 1 y) z) (/.f64 -1 (*.f64 y y))) 2)))))","(-.f64 (-.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (*.f64 x (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 -1 (*.f64 y y)))))) (*.f64 x (*.f64 x (-.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y (*.f64 y z))))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 1 (/.f64 y z)) 3)) (pow.f64 (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 -1 (*.f64 y y))) 2))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z)))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) 2)) (pow.f64 (-.f64 1 (/.f64 y z)) 3)))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) x)) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z)))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) 2)) (pow.f64 (-.f64 1 (/.f64 y z)) 3)))))) (-.f64 1 (/.f64 y z)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z))))) (pow.f64 (-.f64 1 (/.f64 y z)) 3))) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (*.f64 (pow.f64 y 3) z)) (/.f64 1 (pow.f64 y 4)))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)))) (pow.f64 x 3))))))","(fma.f64 -1 (*.f64 (*.f64 x x) (+.f64 (/.f64 (*.f64 (*.f64 y y) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (/.f64 1 (*.f64 y y)) z))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (neg.f64 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 (-.f64 1 (/.f64 y z)) 3) (pow.f64 (-.f64 (/.f64 (/.f64 1 y) z) (/.f64 1 (*.f64 y y))) 2)))))) (+.f64 (fma.f64 -1 (/.f64 (*.f64 (*.f64 y y) (*.f64 x (-.f64 (/.f64 (/.f64 1 y) z) (/.f64 1 (*.f64 y y))))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 y (-.f64 1 (/.f64 y z)))) (neg.f64 (*.f64 (pow.f64 x 3) (fma.f64 -1 (/.f64 (*.f64 (*.f64 y (-.f64 (/.f64 (/.f64 1 y) z) (/.f64 1 (*.f64 y y)))) (+.f64 (/.f64 (*.f64 (*.f64 y y) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (/.f64 1 (*.f64 y y)) z))) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (neg.f64 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 (-.f64 1 (/.f64 y z)) 3) (pow.f64 (-.f64 (/.f64 (/.f64 1 y) z) (/.f64 1 (*.f64 y y))) 2)))))) (-.f64 1 (/.f64 y z))) (fma.f64 -1 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 (-.f64 1 (/.f64 y z)) 3) (*.f64 (-.f64 (/.f64 (/.f64 1 y) z) (/.f64 1 (*.f64 y y))) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (/.f64 1 (*.f64 y y)) z))))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 (-.f64 1 (/.f64 y z)) 2) (-.f64 (/.f64 1 (*.f64 z (pow.f64 y 3))) (/.f64 1 (pow.f64 y 4)))))))))))","(-.f64 (-.f64 (-.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 (*.f64 (+.f64 (/.f64 (/.f64 1 y) z) (/.f64 -1 (*.f64 y y))) (*.f64 x (*.f64 y y))) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (*.f64 (pow.f64 x 3) (-.f64 (-.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (+.f64 (/.f64 1 (*.f64 z (pow.f64 y 3))) (/.f64 -1 (pow.f64 y 4)))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 1 (/.f64 y z)) 3)) (*.f64 (+.f64 (/.f64 (/.f64 1 y) z) (/.f64 -1 (*.f64 y y))) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y (*.f64 y z))))))) (*.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (*.f64 (+.f64 (/.f64 (/.f64 1 y) z) (/.f64 -1 (*.f64 y y))) (-.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y (*.f64 y z))))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 1 (/.f64 y z)) 3)) (pow.f64 (+.f64 (/.f64 (/.f64 1 y) z) (/.f64 -1 (*.f64 y y))) 2)))))))) (*.f64 (*.f64 x x) (-.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y (*.f64 y z))))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 1 (/.f64 y z)) 3)) (pow.f64 (+.f64 (/.f64 (/.f64 1 y) z) (/.f64 -1 (*.f64 y y))) 2)))))","(-.f64 (-.f64 (-.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (*.f64 x (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 -1 (*.f64 y y)))))) (*.f64 x (*.f64 x (-.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y (*.f64 y z))))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 1 (/.f64 y z)) 3)) (pow.f64 (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 -1 (*.f64 y y))) 2)))))) (*.f64 (pow.f64 x 3) (-.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (+.f64 (/.f64 1 (*.f64 z (pow.f64 y 3))) (/.f64 -1 (pow.f64 y 4)))) (+.f64 (*.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (*.f64 (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 -1 (*.f64 y y))) (-.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y (*.f64 y z))))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 1 (/.f64 y z)) 3)) (pow.f64 (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 -1 (*.f64 y y))) 2))))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 1 (/.f64 y z)) 3)) (*.f64 (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 -1 (*.f64 y y))) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 -1 (*.f64 y (*.f64 y z))))))))))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))) (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))) x))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))) (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))) x)) (*.f64 -1 (/.f64 (+.f64 (*.f64 y (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))) (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (-.f64 1 (/.f64 y z)))) (/.f64 (pow.f64 y 3) (-.f64 1 (/.f64 y z))))) (pow.f64 x 2))))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 (-.f64 1 (/.f64 y z)) x))) (/.f64 (pow.f64 y 2) (*.f64 (-.f64 1 (/.f64 y z)) x)))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 (-.f64 1 (/.f64 y z)) x))) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (-.f64 1 (/.f64 y z)) x)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (-.f64 1 (/.f64 y z)))) (+.f64 (*.f64 -1 (*.f64 y (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))) (/.f64 (pow.f64 y 2) (-.f64 1 (/.f64 y z)))))) (/.f64 (pow.f64 y 3) (-.f64 1 (/.f64 y z))))) (pow.f64 x 2)))))))","(+.f64 (/.f64 y (-.f64 1 (/.f64 y z))) (/.f64 x (-.f64 1 (/.f64 y z))))"]],"stop":[["node limit",1]],"time":56.947998046875,"type":"simplify"},{"compiler":[[10524,4674]],"time":78.108154296875,"type":"eval"},{"alts":[["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","next",6.151466747464789],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2)) (/.f64 (+.f64 y x) (cbrt.f64 (-.f64 1 (/.f64 y z)))))","fresh",9.11937394842075],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","done",8.893762559347234],["(*.f64 (/.f64 (+.f64 y x) y) (neg.f64 z))","fresh",31.170135270825643],["(*.f64 (/.f64 (+.f64 y x) (-.f64 1 (pow.f64 (/.f64 y z) 2))) (+.f64 1 (/.f64 y z)))","fresh",22.279031087250136]],"compiler":[[48,31],[24,17],[12,8],[11,7],[20,13],[48,31],[24,17],[11,7],[20,13]],"count":[[264,5]],"kept":[{"done":[1,1],"fresh":[3,1],"new":[259,3],"picked":[1,0]}],"min-error":[0.00390625],"time":75.5419921875,"type":"prune"},{"compiler":[[190,108]],"locations":[["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)",0.171875,true],["(/.f64 (/.f64 1 z) (+.f64 y x))",0.1796875,true],["(*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))",9.113559239894332,true],["(fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))",51.27577445425294,true]],"time":37.14697265625,"type":"localize"},{"count":[[4,144]],"series":[["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","z","-inf",0.260009765625],["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","z","inf",0.27197265625],["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","z","0",0.299072265625],["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","x","-inf",1.31689453125],["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","x","inf",1.496826171875],["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","x","0",1.349853515625],["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","y","-inf",0.705078125],["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","y","inf",0.73193359375],["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","y","0",0.781982421875],["(/.f64 (/.f64 1 z) (+.f64 y x))","x","-inf",0.215087890625],["(/.f64 (/.f64 1 z) (+.f64 y x))","x","inf",0.198974609375],["(/.f64 (/.f64 1 z) (+.f64 y x))","x","0",0.216064453125],["(/.f64 (/.f64 1 z) (+.f64 y x))","y","-inf",0.2138671875],["(/.f64 (/.f64 1 z) (+.f64 y x))","y","inf",0.281005859375],["(/.f64 (/.f64 1 z) (+.f64 y x))","y","0",0.25],["(/.f64 (/.f64 1 z) (+.f64 y x))","z","-inf",0.1650390625],["(/.f64 (/.f64 1 z) (+.f64 y x))","z","inf",0.14306640625],["(/.f64 (/.f64 1 z) (+.f64 y x))","z","0",0.172119140625],["(*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))","x","-inf",0.2119140625],["(*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))","x","inf",0.22509765625],["(*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))","x","0",0.18798828125],["(*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))","y","-inf",0.208984375],["(*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))","y","inf",0.239990234375],["(*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))","y","0",0.281982421875],["(*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))","z","-inf",0.155029296875],["(*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))","z","inf",0.150146484375],["(*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))","z","0",0.177978515625],["(fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))","x","-inf",1.625],["(fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))","x","inf",2.901123046875],["(fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))","x","0",9.698974609375],["(fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))","y","-inf",3.81201171875],["(fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))","y","inf",3.9560546875],["(fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))","y","0",6.783935546875],["(fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))","z","-inf",0.609130859375],["(fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))","z","inf",0.652099609375],["(fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))","z","0",0.985107421875]],"time":42.616943359375,"type":"series"},{"count":[[4,168]],"egraph":[[2,5606,68,0.036410499],[1,411,70,0.007653583],[0,18,108,0.00047025]],"inputs":[["(fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))","(*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))","(/.f64 (/.f64 1 z) (+.f64 y x))","(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (*.f64 z (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (*.f64 z (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (+.f64 (/.f64 1 (*.f64 z (+.f64 y x))) (/.f64 1 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 z (+.f64 y x))) (fma.f64 y -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 0 (/.f64 y (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)) (pow.f64 (cbrt.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)) 2) (cbrt.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)) (sqrt.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 3) (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 3)) (+.f64 (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 2) (-.f64 (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 2) (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 2) (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 2)) (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 y (*.f64 z (+.f64 y x)))) (exp.f64 (/.f64 y (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 y (*.f64 z (+.f64 y x))))) (exp.f64 (/.f64 y (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 y (*.f64 z (+.f64 y x)))) (+.f64 1 (expm1.f64 (/.f64 y (*.f64 z (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 y (*.f64 z (+.f64 y x))))) (+.f64 1 (expm1.f64 (/.f64 y (*.f64 z (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 y (*.f64 z (+.f64 y x))))) (exp.f64 (/.f64 y (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 y (*.f64 z (+.f64 y x)))) (+.f64 1 (expm1.f64 (/.f64 y (*.f64 z (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 y (*.f64 z (+.f64 y x))))) (+.f64 1 (expm1.f64 (/.f64 y (*.f64 z (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 y (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 y (*.f64 z (+.f64 y x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (pow.f64 y -1) (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (*.f64 z (+.f64 y x)) (pow.f64 y -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (/.f64 y (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 y x) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 z) (*.f64 (pow.f64 y -1) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 z) (/.f64 (+.f64 y x) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 z (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 (*.f64 z (+.f64 y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (*.f64 z (+.f64 y x))) (pow.f64 y -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (*.f64 z (+.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (*.f64 z (+.f64 y x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 2)) (/.f64 1 (cbrt.f64 (/.f64 y (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 y (*.f64 z (+.f64 y x)))) (/.f64 1 (sqrt.f64 (/.f64 y (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 z) (*.f64 (pow.f64 y -1) (neg.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (*.f64 z (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (*.f64 -1 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (*.f64 (*.f64 z (+.f64 y x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y z) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y z)) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y z)) (neg.f64 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 z) 1) (*.f64 (+.f64 y x) (pow.f64 y -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 z) 1) (*.f64 (neg.f64 (+.f64 y x)) (pow.f64 y -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 z) y) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 z) y) (neg.f64 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 z) y) (*.f64 (neg.f64 (+.f64 y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 z) (neg.f64 y)) (neg.f64 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 z) (neg.f64 y)) (*.f64 (+.f64 y x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 z) (neg.f64 y)) (*.f64 (neg.f64 (+.f64 y x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (/.f64 1 z)) (neg.f64 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 -1 z)) (neg.f64 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)) (*.f64 -1 (neg.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (neg.f64 y)) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (neg.f64 y)) (*.f64 (+.f64 y x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 3)) (+.f64 0 (+.f64 (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 2) (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 2)) (/.f64 y (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y z) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (cbrt.f64 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y z) (sqrt.f64 (+.f64 y x))) (sqrt.f64 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 y z)) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (*.f64 z (+.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y (*.f64 z (+.f64 y x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 y (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (/.f64 y (*.f64 z (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (*.f64 z (+.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (/.f64 1 (*.f64 z (+.f64 y x))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 z (+.f64 y x))) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y (*.f64 z (+.f64 y x)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (*.f64 z (+.f64 y x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 1 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (neg.f64 (/.f64 1 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 z (+.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 z (+.f64 y x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 y x)) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 z (+.f64 y x)))) (pow.f64 (/.f64 1 (cbrt.f64 (*.f64 z (+.f64 y x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 (cbrt.f64 (*.f64 z (+.f64 y x)))) 2) (/.f64 1 (cbrt.f64 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 (cbrt.f64 (*.f64 z (+.f64 y x)))) 2) (neg.f64 (/.f64 1 (cbrt.f64 (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 z -2)) (*.f64 (/.f64 1 (cbrt.f64 z)) (/.f64 1 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 z (+.f64 y x)))) (/.f64 1 (sqrt.f64 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 z (+.f64 y x)))) (neg.f64 (/.f64 1 (sqrt.f64 (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 y x) -1/2) (/.f64 (/.f64 1 z) (sqrt.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 z -1/2) (*.f64 (pow.f64 z -1/2) (/.f64 1 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 z) (/.f64 1 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 z) (/.f64 1 (neg.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 z -2)) 1) (/.f64 (/.f64 1 (cbrt.f64 z)) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 z -1/2) 1) (/.f64 (pow.f64 z -1/2) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (/.f64 (/.f64 1 z) (cbrt.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 z -2)) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (/.f64 1 (cbrt.f64 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 z -1/2) (pow.f64 (cbrt.f64 (+.f64 y x)) 2)) (/.f64 (pow.f64 z -1/2) (cbrt.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 z -2)) (sqrt.f64 (+.f64 y x))) (/.f64 (/.f64 1 (cbrt.f64 z)) (sqrt.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 1 (cbrt.f64 (*.f64 z (+.f64 y x)))) 2)) (/.f64 1 (cbrt.f64 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 1 (sqrt.f64 (*.f64 z (+.f64 y x))))) (/.f64 1 (sqrt.f64 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 z) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) (fma.f64 y y (*.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 z) (-.f64 (*.f64 y y) (*.f64 x x))) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 z) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) (fma.f64 y y (*.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 z) (-.f64 (*.f64 y y) (*.f64 x x))) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 z) (cbrt.f64 (pow.f64 (+.f64 y x) -2))) (/.f64 1 (cbrt.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 z) (pow.f64 (+.f64 y x) -1/2)) (pow.f64 (+.f64 y x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (pow.f64 (/.f64 1 (cbrt.f64 (*.f64 z (+.f64 y x)))) 2)) (/.f64 1 (cbrt.f64 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (/.f64 1 (sqrt.f64 (*.f64 z (+.f64 y x))))) (/.f64 1 (sqrt.f64 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (*.f64 z (+.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1 (*.f64 z (+.f64 y x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (*.f64 z (+.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (sqrt.f64 (*.f64 z (+.f64 y x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (+.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 1 (*.f64 z (+.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (/.f64 1 (*.f64 z (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1 (*.f64 z (+.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (/.f64 (pow.f64 z -2) z) (pow.f64 (+.f64 y x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (/.f64 (pow.f64 z -2) z) (pow.f64 (/.f64 1 (+.f64 y x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (*.f64 z (+.f64 y x)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))))) (cbrt.f64 (pow.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))) -2)) (cbrt.f64 (/.f64 1 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))) -1/2) (pow.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))) 2) -1) (pow.f64 (cbrt.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))) -1) (pow.f64 (sqrt.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (pow.f64 (+.f64 (/.f64 y (*.f64 z (+.f64 y x))) (/.f64 1 (+.f64 y x))) 3) (pow.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0) 3))) (fma.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0) (-.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0) (+.f64 (/.f64 y (*.f64 z (+.f64 y x))) (/.f64 1 (+.f64 y x)))) (pow.f64 (+.f64 (/.f64 y (*.f64 z (+.f64 y x))) (/.f64 1 (+.f64 y x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 (/.f64 y (*.f64 z (+.f64 y x))) (/.f64 1 (+.f64 y x))) 2) (pow.f64 (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0) 2))) (+.f64 (/.f64 1 (+.f64 y x)) (-.f64 (/.f64 y (*.f64 z (+.f64 y x))) (*.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))) -1/2) (sqrt.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))) 2)) (cbrt.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (+.f64 (fma.f64 (/.f64 y (*.f64 z (+.f64 y x))) 0 (/.f64 1 (+.f64 y x))) (/.f64 y (*.f64 z (+.f64 y x)))))) 1))))))"]],"rules":[["egg-rr",23],["egg-rr",53],["egg-rr",58],["egg-rr",34]],"stop":[["node limit",1]],"time":67.988037109375,"type":"rewrite"},{"count":[[312,266]],"egraph":[[2,4986,4654,0.024212291],[1,1193,4792,0.009043250000000001],[0,351,5341,0.001763]],"inputs":[["(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(*.f64 -1 (/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z))","(*.f64 -1 (/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z))","(*.f64 -1 (/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z))","(*.f64 -1 (/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z))","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","(/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x)","(/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x)","(/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x)","(/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x)","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(/.f64 1 z)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))","(+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))))","(/.f64 1 z)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))","(+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))))","(/.f64 1 z)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))","(+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))))","(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 z x))","(+.f64 (/.f64 1 (*.f64 z x)) (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 1 (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 1 (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 3))))))","(/.f64 1 (*.f64 y z))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (/.f64 1 (*.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 3) z)) (/.f64 1 (*.f64 y z))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 3) z)) (/.f64 1 (*.f64 y z)))))","(/.f64 1 (*.f64 y z))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (/.f64 1 (*.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 3) z)) (/.f64 1 (*.f64 y z))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 3) z)) (/.f64 1 (*.f64 y z)))))","(/.f64 1 (*.f64 y z))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (/.f64 1 (*.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 3) z)) (/.f64 1 (*.f64 y z))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 3) z)) (/.f64 1 (*.f64 y z)))))","(/.f64 1 (*.f64 z x))","(+.f64 (/.f64 1 (*.f64 z x)) (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 1 (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 1 (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 3))))))","(/.f64 1 (*.f64 z x))","(+.f64 (/.f64 1 (*.f64 z x)) (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 1 (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 1 (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 3))))))","x","(+.f64 (*.f64 y (*.f64 (pow.f64 x 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) x)","(+.f64 (*.f64 y (*.f64 (pow.f64 x 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 z (pow.f64 x 2)))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2)))))) x))","(+.f64 (*.f64 y (*.f64 (pow.f64 x 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (*.f64 z (pow.f64 x 3)))) (pow.f64 x 2))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 z (pow.f64 x 2)))) (*.f64 (pow.f64 x 3) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (*.f64 (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 z (pow.f64 x 2)))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2)))) (*.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) x)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 z (pow.f64 x 2)))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2)))))) x)))","(*.f64 -1 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) z)) (*.f64 -1 x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) z)) (*.f64 -1 x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 z (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) z)) (*.f64 -1 x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))))) (+.f64 (*.f64 (+.f64 (/.f64 (pow.f64 x 3) z) (pow.f64 x 2)) (pow.f64 z 2)) (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 3) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) z)) (*.f64 -1 x)))))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)))))","(*.f64 -1 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 x) (/.f64 (pow.f64 x 2) z)) (pow.f64 z 2)) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 x) (/.f64 (pow.f64 x 2) z)) (pow.f64 z 2)) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (/.f64 (pow.f64 x 3) z)) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (/.f64 (pow.f64 x 2) z)) (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 3))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 x) (/.f64 (pow.f64 x 2) z)) (pow.f64 z 2)) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 (+.f64 1 (/.f64 x z)) z)) (pow.f64 y 3))))))))","(/.f64 1 (-.f64 (/.f64 1 y) (/.f64 1 z)))","(+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z)))) x) (/.f64 1 (-.f64 (/.f64 1 y) (/.f64 1 z))))","(+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 3))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z))))) (-.f64 (/.f64 1 y) (/.f64 1 z))))) (pow.f64 x 2)) (+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z)))) x) (/.f64 1 (-.f64 (/.f64 1 y) (/.f64 1 z)))))","(+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 3))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z))))) (-.f64 (/.f64 1 y) (/.f64 1 z))))) (pow.f64 x 2)) (+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z)))) x) (+.f64 (/.f64 1 (-.f64 (/.f64 1 y) (/.f64 1 z))) (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 4))) (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 3))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z))))) (-.f64 (/.f64 1 y) (/.f64 1 z)))))) (-.f64 (/.f64 1 y) (/.f64 1 z))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 (pow.f64 y 3) z))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z)))) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z)))) (-.f64 (/.f64 1 y) (/.f64 1 z)))))) (pow.f64 x 3)))))","(/.f64 x (+.f64 (*.f64 -1 (/.f64 y z)) 1))","(+.f64 (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2))))) (/.f64 x (+.f64 (*.f64 -1 (/.f64 y z)) 1)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (+.f64 (*.f64 -1 (/.f64 y z)) 1))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z))) (/.f64 (pow.f64 y 2) (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) x)) (+.f64 (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2))))) (/.f64 x (+.f64 (*.f64 -1 (/.f64 y z)) 1))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (+.f64 (*.f64 -1 (/.f64 y z)) 1))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z))) (/.f64 (pow.f64 y 2) (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) x)) (+.f64 (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2))))) (+.f64 (/.f64 x (+.f64 (*.f64 -1 (/.f64 y z)) 1)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (+.f64 (*.f64 -1 (/.f64 y z)) 1))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z))) (/.f64 (pow.f64 y 2) (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (+.f64 (*.f64 -1 (/.f64 y z)) 1))) (+.f64 (/.f64 (pow.f64 y 4) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) (+.f64 (pow.f64 y 2) (*.f64 -1 (/.f64 (pow.f64 y 3) z)))) (+.f64 (*.f64 -1 (/.f64 y z)) 1))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))))) (pow.f64 x 2))))))","(*.f64 -1 (/.f64 x (-.f64 (/.f64 y z) 1)))","(+.f64 (*.f64 -1 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)))) (*.f64 -1 (/.f64 x (-.f64 (/.f64 y z) 1))))","(+.f64 (*.f64 -1 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)))) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) (*.f64 z x))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) x))) (+.f64 (*.f64 -1 (/.f64 x (-.f64 (/.f64 y z) 1))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (*.f64 (-.f64 (/.f64 y z) 1) x)))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (/.f64 (pow.f64 y 4) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (/.f64 (pow.f64 y 3) z)) (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)))) (-.f64 (/.f64 y z) 1))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (-.f64 (/.f64 y z) 1))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 (/.f64 y z) 1) 2))))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (-.f64 (/.f64 y z) 1))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 (/.f64 y z) 1) 2)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) x))) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) (*.f64 z x))) (+.f64 (*.f64 -1 (/.f64 x (-.f64 (/.f64 y z) 1))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (*.f64 (-.f64 (/.f64 y z) 1) x))))))))","(*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x)))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (pow.f64 z 3)) (+.f64 y x))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y x)))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 3)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z)","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(*.f64 -1 (/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z))","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(*.f64 -1 (/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z))","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(*.f64 -1 (/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z))","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(*.f64 -1 (/.f64 (+.f64 (/.f64 y (+.f64 y x)) (*.f64 -1 (/.f64 y (+.f64 y x)))) z))","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","(/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x)","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x)","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x)","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x)","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x))","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x))","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x))","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 y z)) x))","(/.f64 (*.f64 0 (/.f64 y (+.f64 y x))) z)","(/.f64 0 z)","0","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 z x))","(/.f64 (/.f64 y z) x)","(/.f64 y (*.f64 x z))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 (/.f64 y z) x) (/.f64 (neg.f64 (*.f64 y y)) (*.f64 z (*.f64 x x))))","(-.f64 (/.f64 y (*.f64 x z)) (/.f64 y (/.f64 (*.f64 x (*.f64 x z)) y)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 (/.f64 y z) x) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (-.f64 (/.f64 y (*.f64 x z)) (/.f64 y (/.f64 (*.f64 x (*.f64 x z)) y))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(+.f64 (/.f64 (/.f64 y z) x) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x))) (fma.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(+.f64 (-.f64 (/.f64 y (*.f64 x z)) (/.f64 y (/.f64 (*.f64 x (*.f64 x z)) y))) (-.f64 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))))","(+.f64 (-.f64 (/.f64 y (*.f64 x z)) (+.f64 (/.f64 y (/.f64 (*.f64 x (*.f64 x z)) y)) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4))))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))","(/.f64 1 z)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))","(fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z))","(-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y))","(+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z)) (/.f64 (*.f64 x x) (*.f64 z (*.f64 y y))))","(+.f64 (-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y)) (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))))","(fma.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 3))) (+.f64 (fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z)) (/.f64 (*.f64 x x) (*.f64 z (*.f64 y y)))))","(-.f64 (+.f64 (-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y)) (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y)))) (/.f64 (/.f64 (pow.f64 x 3) z) (pow.f64 y 3)))","(+.f64 (-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y)) (-.f64 (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y))) (/.f64 (pow.f64 (/.f64 x y) 3) z)))","(/.f64 1 z)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))","(fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z))","(-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y))","(+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z)) (/.f64 (*.f64 x x) (*.f64 z (*.f64 y y))))","(+.f64 (-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y)) (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))))","(fma.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 3))) (+.f64 (fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z)) (/.f64 (*.f64 x x) (*.f64 z (*.f64 y y)))))","(-.f64 (+.f64 (-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y)) (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y)))) (/.f64 (/.f64 (pow.f64 x 3) z) (pow.f64 y 3)))","(+.f64 (-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y)) (-.f64 (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y))) (/.f64 (pow.f64 (/.f64 x y) 3) z)))","(/.f64 1 z)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))","(fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z))","(-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y))","(+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z)) (/.f64 (*.f64 x x) (*.f64 z (*.f64 y y))))","(+.f64 (-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y)) (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))))","(fma.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 3))) (+.f64 (fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z)) (/.f64 (*.f64 x x) (*.f64 z (*.f64 y y)))))","(-.f64 (+.f64 (-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y)) (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y)))) (/.f64 (/.f64 (pow.f64 x 3) z) (pow.f64 y 3)))","(+.f64 (-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y)) (-.f64 (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y))) (/.f64 (pow.f64 (/.f64 x y) 3) z)))","(/.f64 y (*.f64 z x))","(/.f64 (/.f64 y z) x)","(/.f64 y (*.f64 x z))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 (/.f64 y z) x) (/.f64 (neg.f64 (*.f64 y y)) (*.f64 z (*.f64 x x))))","(-.f64 (/.f64 y (*.f64 x z)) (/.f64 y (/.f64 (*.f64 x (*.f64 x z)) y)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 (/.f64 y z) x) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (-.f64 (/.f64 y (*.f64 x z)) (/.f64 y (/.f64 (*.f64 x (*.f64 x z)) y))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(+.f64 (/.f64 (/.f64 y z) x) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x))) (fma.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(+.f64 (-.f64 (/.f64 y (*.f64 x z)) (/.f64 y (/.f64 (*.f64 x (*.f64 x z)) y))) (-.f64 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))))","(+.f64 (-.f64 (/.f64 y (*.f64 x z)) (+.f64 (/.f64 y (/.f64 (*.f64 x (*.f64 x z)) y)) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4))))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))","(/.f64 y (*.f64 z x))","(/.f64 (/.f64 y z) x)","(/.f64 y (*.f64 x z))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 (/.f64 y z) x) (/.f64 (neg.f64 (*.f64 y y)) (*.f64 z (*.f64 x x))))","(-.f64 (/.f64 y (*.f64 x z)) (/.f64 y (/.f64 (*.f64 x (*.f64 x z)) y)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 (/.f64 y z) x) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (-.f64 (/.f64 y (*.f64 x z)) (/.f64 y (/.f64 (*.f64 x (*.f64 x z)) y))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(+.f64 (/.f64 (/.f64 y z) x) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x))) (fma.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(+.f64 (-.f64 (/.f64 y (*.f64 x z)) (/.f64 y (/.f64 (*.f64 x (*.f64 x z)) y))) (-.f64 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))))","(+.f64 (-.f64 (/.f64 y (*.f64 x z)) (+.f64 (/.f64 y (/.f64 (*.f64 x (*.f64 x z)) y)) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4))))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 (+.f64 y x) z))","(/.f64 1 (*.f64 z x))","(/.f64 1 (*.f64 x z))","(+.f64 (/.f64 1 (*.f64 z x)) (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 1 (*.f64 x z)) (/.f64 (neg.f64 y) (*.f64 z (*.f64 x x))))","(-.f64 (/.f64 1 (*.f64 x z)) (/.f64 y (*.f64 x (*.f64 x z))))","(+.f64 (/.f64 1 (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 1 (*.f64 x z)) (fma.f64 -1 (/.f64 (/.f64 y z) (*.f64 x x)) (/.f64 (*.f64 y y) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 1 (*.f64 x z)) (-.f64 (*.f64 (/.f64 y z) (/.f64 y (pow.f64 x 3))) (/.f64 y (*.f64 x (*.f64 x z)))))","(+.f64 (/.f64 1 (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 3))))))","(+.f64 (/.f64 1 (*.f64 x z)) (fma.f64 -1 (/.f64 (/.f64 y z) (*.f64 x x)) (fma.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 4))) (/.f64 (*.f64 y y) (*.f64 z (pow.f64 x 3))))))","(+.f64 (-.f64 (/.f64 1 (*.f64 x z)) (/.f64 y (*.f64 x (*.f64 x z)))) (-.f64 (*.f64 (/.f64 y z) (/.f64 y (pow.f64 x 3))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 4)))))","(/.f64 1 (*.f64 y z))","(/.f64 (/.f64 1 z) y)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (/.f64 1 (*.f64 y z)))","(fma.f64 -1 (/.f64 x (*.f64 z (*.f64 y y))) (/.f64 1 (*.f64 y z)))","(-.f64 (/.f64 (/.f64 1 z) y) (/.f64 (/.f64 x z) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 3) z)) (/.f64 1 (*.f64 y z))))","(fma.f64 -1 (/.f64 x (*.f64 z (*.f64 y y))) (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 (*.f64 x x) (*.f64 z (pow.f64 y 3)))))","(+.f64 (-.f64 (/.f64 (/.f64 1 z) y) (/.f64 (/.f64 x z) (*.f64 y y))) (/.f64 (/.f64 x (/.f64 z x)) (pow.f64 y 3)))","(+.f64 (/.f64 (/.f64 1 z) y) (-.f64 (/.f64 (/.f64 x (/.f64 z x)) (pow.f64 y 3)) (/.f64 (/.f64 x z) (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 3) z)) (/.f64 1 (*.f64 y z)))))","(fma.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 4))) (fma.f64 -1 (/.f64 x (*.f64 z (*.f64 y y))) (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 (*.f64 x x) (*.f64 z (pow.f64 y 3))))))","(-.f64 (+.f64 (-.f64 (/.f64 (/.f64 1 z) y) (/.f64 (/.f64 x z) (*.f64 y y))) (/.f64 (/.f64 x (/.f64 z x)) (pow.f64 y 3))) (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 4))))","(+.f64 (-.f64 (/.f64 (/.f64 x (/.f64 z x)) (pow.f64 y 3)) (/.f64 (/.f64 x z) (*.f64 y y))) (-.f64 (/.f64 (/.f64 1 z) y) (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 4)))))","(/.f64 1 (*.f64 y z))","(/.f64 (/.f64 1 z) y)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (/.f64 1 (*.f64 y z)))","(fma.f64 -1 (/.f64 x (*.f64 z (*.f64 y y))) (/.f64 1 (*.f64 y z)))","(-.f64 (/.f64 (/.f64 1 z) y) (/.f64 (/.f64 x z) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 3) z)) (/.f64 1 (*.f64 y z))))","(fma.f64 -1 (/.f64 x (*.f64 z (*.f64 y y))) (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 (*.f64 x x) (*.f64 z (pow.f64 y 3)))))","(+.f64 (-.f64 (/.f64 (/.f64 1 z) y) (/.f64 (/.f64 x z) (*.f64 y y))) (/.f64 (/.f64 x (/.f64 z x)) (pow.f64 y 3)))","(+.f64 (/.f64 (/.f64 1 z) y) (-.f64 (/.f64 (/.f64 x (/.f64 z x)) (pow.f64 y 3)) (/.f64 (/.f64 x z) (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 3) z)) (/.f64 1 (*.f64 y z)))))","(fma.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 4))) (fma.f64 -1 (/.f64 x (*.f64 z (*.f64 y y))) (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 (*.f64 x x) (*.f64 z (pow.f64 y 3))))))","(-.f64 (+.f64 (-.f64 (/.f64 (/.f64 1 z) y) (/.f64 (/.f64 x z) (*.f64 y y))) (/.f64 (/.f64 x (/.f64 z x)) (pow.f64 y 3))) (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 4))))","(+.f64 (-.f64 (/.f64 (/.f64 x (/.f64 z x)) (pow.f64 y 3)) (/.f64 (/.f64 x z) (*.f64 y y))) (-.f64 (/.f64 (/.f64 1 z) y) (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 4)))))","(/.f64 1 (*.f64 y z))","(/.f64 (/.f64 1 z) y)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (/.f64 1 (*.f64 y z)))","(fma.f64 -1 (/.f64 x (*.f64 z (*.f64 y y))) (/.f64 1 (*.f64 y z)))","(-.f64 (/.f64 (/.f64 1 z) y) (/.f64 (/.f64 x z) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 3) z)) (/.f64 1 (*.f64 y z))))","(fma.f64 -1 (/.f64 x (*.f64 z (*.f64 y y))) (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 (*.f64 x x) (*.f64 z (pow.f64 y 3)))))","(+.f64 (-.f64 (/.f64 (/.f64 1 z) y) (/.f64 (/.f64 x z) (*.f64 y y))) (/.f64 (/.f64 x (/.f64 z x)) (pow.f64 y 3)))","(+.f64 (/.f64 (/.f64 1 z) y) (-.f64 (/.f64 (/.f64 x (/.f64 z x)) (pow.f64 y 3)) (/.f64 (/.f64 x z) (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 3) z)) (/.f64 1 (*.f64 y z)))))","(fma.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 4))) (fma.f64 -1 (/.f64 x (*.f64 z (*.f64 y y))) (+.f64 (/.f64 1 (*.f64 y z)) (/.f64 (*.f64 x x) (*.f64 z (pow.f64 y 3))))))","(-.f64 (+.f64 (-.f64 (/.f64 (/.f64 1 z) y) (/.f64 (/.f64 x z) (*.f64 y y))) (/.f64 (/.f64 x (/.f64 z x)) (pow.f64 y 3))) (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 4))))","(+.f64 (-.f64 (/.f64 (/.f64 x (/.f64 z x)) (pow.f64 y 3)) (/.f64 (/.f64 x z) (*.f64 y y))) (-.f64 (/.f64 (/.f64 1 z) y) (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 4)))))","(/.f64 1 (*.f64 z x))","(/.f64 1 (*.f64 x z))","(+.f64 (/.f64 1 (*.f64 z x)) (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 1 (*.f64 x z)) (/.f64 (neg.f64 y) (*.f64 z (*.f64 x x))))","(-.f64 (/.f64 1 (*.f64 x z)) (/.f64 y (*.f64 x (*.f64 x z))))","(+.f64 (/.f64 1 (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 1 (*.f64 x z)) (fma.f64 -1 (/.f64 (/.f64 y z) (*.f64 x x)) (/.f64 (*.f64 y y) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 1 (*.f64 x z)) (-.f64 (*.f64 (/.f64 y z) (/.f64 y (pow.f64 x 3))) (/.f64 y (*.f64 x (*.f64 x z)))))","(+.f64 (/.f64 1 (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 3))))))","(+.f64 (/.f64 1 (*.f64 x z)) (fma.f64 -1 (/.f64 (/.f64 y z) (*.f64 x x)) (fma.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 4))) (/.f64 (*.f64 y y) (*.f64 z (pow.f64 x 3))))))","(+.f64 (-.f64 (/.f64 1 (*.f64 x z)) (/.f64 y (*.f64 x (*.f64 x z)))) (-.f64 (*.f64 (/.f64 y z) (/.f64 y (pow.f64 x 3))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 4)))))","(/.f64 1 (*.f64 z x))","(/.f64 1 (*.f64 x z))","(+.f64 (/.f64 1 (*.f64 z x)) (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 1 (*.f64 x z)) (/.f64 (neg.f64 y) (*.f64 z (*.f64 x x))))","(-.f64 (/.f64 1 (*.f64 x z)) (/.f64 y (*.f64 x (*.f64 x z))))","(+.f64 (/.f64 1 (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 1 (*.f64 x z)) (fma.f64 -1 (/.f64 (/.f64 y z) (*.f64 x x)) (/.f64 (*.f64 y y) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 1 (*.f64 x z)) (-.f64 (*.f64 (/.f64 y z) (/.f64 y (pow.f64 x 3))) (/.f64 y (*.f64 x (*.f64 x z)))))","(+.f64 (/.f64 1 (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 y (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 3))))))","(+.f64 (/.f64 1 (*.f64 x z)) (fma.f64 -1 (/.f64 (/.f64 y z) (*.f64 x x)) (fma.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 4))) (/.f64 (*.f64 y y) (*.f64 z (pow.f64 x 3))))))","(+.f64 (-.f64 (/.f64 1 (*.f64 x z)) (/.f64 y (*.f64 x (*.f64 x z)))) (-.f64 (*.f64 (/.f64 y z) (/.f64 y (pow.f64 x 3))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 4)))))","x","(+.f64 (*.f64 y (*.f64 (pow.f64 x 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) x)","(fma.f64 y (*.f64 (*.f64 x x) (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) x)","(fma.f64 y (fma.f64 (*.f64 x x) (/.f64 1 (*.f64 x z)) 1) x)","(fma.f64 y (+.f64 1 (/.f64 (*.f64 x x) (*.f64 x z))) x)","(+.f64 (*.f64 y (*.f64 (pow.f64 x 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 z (pow.f64 x 2)))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2)))))) x))","(fma.f64 y (*.f64 (*.f64 x x) (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (fma.f64 -1 (*.f64 (*.f64 y y) (fma.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (/.f64 1 z) (*.f64 x x))) (*.f64 x x) (neg.f64 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2))))) x))","(fma.f64 y (fma.f64 (*.f64 x x) (/.f64 1 (*.f64 x z)) 1) (-.f64 x (*.f64 (*.f64 y y) (-.f64 (*.f64 x (*.f64 x (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x (*.f64 x z)))))) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2))))))","(-.f64 (fma.f64 y (+.f64 1 (/.f64 (*.f64 x x) (*.f64 x z))) x) (*.f64 (*.f64 y y) (-.f64 (*.f64 x (*.f64 x (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x (*.f64 x z)))))) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2)))))","(+.f64 (*.f64 y (*.f64 (pow.f64 x 2) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (*.f64 z (pow.f64 x 3)))) (pow.f64 x 2))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 z (pow.f64 x 2)))) (*.f64 (pow.f64 x 3) (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))))) (*.f64 (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 z (pow.f64 x 2)))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2)))) (*.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) x)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 z (pow.f64 x 2)))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 z x)) (/.f64 1 (pow.f64 x 2))) 2)))))) x)))","(fma.f64 y (*.f64 (*.f64 x x) (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (fma.f64 -1 (*.f64 (pow.f64 y 3) (fma.f64 -1 (*.f64 (*.f64 x x) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (*.f64 z (pow.f64 x 3))))) (fma.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (/.f64 1 z) (*.f64 x x))) (*.f64 (pow.f64 x 3) (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (*.f64 (fma.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (/.f64 1 z) (*.f64 x x))) (*.f64 x x) (neg.f64 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2)))) (*.f64 x (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))))))) (fma.f64 -1 (*.f64 (*.f64 y y) (fma.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (/.f64 1 z) (*.f64 x x))) (*.f64 x x) (neg.f64 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2))))) x)))","(fma.f64 y (fma.f64 (*.f64 x x) (/.f64 1 (*.f64 x z)) 1) (-.f64 (-.f64 x (*.f64 (*.f64 y y) (-.f64 (*.f64 x (*.f64 x (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x (*.f64 x z)))))) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2))))) (*.f64 (pow.f64 y 3) (-.f64 (fma.f64 (-.f64 (*.f64 x (*.f64 x (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x (*.f64 x z)))))) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2))) (*.f64 x (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (*.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x (*.f64 x z)))) (*.f64 x (fma.f64 (*.f64 x x) (/.f64 1 (*.f64 x z)) 1)))) (*.f64 x (*.f64 x (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 (/.f64 1 z) (pow.f64 x 3)))))))))","(-.f64 (-.f64 (fma.f64 y (+.f64 1 (/.f64 (*.f64 x x) (*.f64 x z))) x) (*.f64 (*.f64 y y) (-.f64 (*.f64 x (*.f64 x (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x (*.f64 x z)))))) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2))))) (*.f64 (pow.f64 y 3) (-.f64 (fma.f64 (-.f64 (*.f64 x (*.f64 x (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x (*.f64 x z)))))) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x))) 2))) (*.f64 x (+.f64 (/.f64 1 (*.f64 x z)) (/.f64 1 (*.f64 x x)))) (*.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x (*.f64 x z)))) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 x z))))) (*.f64 x (*.f64 x (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 (/.f64 1 z) (pow.f64 x 3))))))))","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)))","(*.f64 -1 (+.f64 z (/.f64 (+.f64 1 (/.f64 x z)) (/.f64 y (*.f64 z z)))))","(-.f64 (neg.f64 z) (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) z)) (*.f64 -1 x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y))))","(fma.f64 -1 (/.f64 (fma.f64 (*.f64 z z) (-.f64 (neg.f64 x) (/.f64 (*.f64 x x) z)) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 y y)) (*.f64 -1 (+.f64 z (/.f64 (+.f64 1 (/.f64 x z)) (/.f64 y (*.f64 z z))))))","(-.f64 (-.f64 (neg.f64 z) (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (*.f64 z z))) (/.f64 (fma.f64 (*.f64 z z) (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) z)) (*.f64 -1 x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 z (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) z)) (*.f64 -1 x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))))) (+.f64 (*.f64 (+.f64 (/.f64 (pow.f64 x 3) z) (pow.f64 x 2)) (pow.f64 z 2)) (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 3) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) z)) (*.f64 -1 x)))))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)))))","(fma.f64 -1 (/.f64 (fma.f64 (*.f64 z z) (-.f64 (neg.f64 x) (/.f64 (*.f64 x x) z)) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 y y)) (fma.f64 -1 z (fma.f64 -1 (/.f64 (fma.f64 (+.f64 1 (/.f64 x z)) (*.f64 z (fma.f64 (*.f64 z z) (-.f64 (neg.f64 x) (/.f64 (*.f64 x x) z)) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3)))) (fma.f64 (+.f64 (*.f64 x x) (/.f64 (pow.f64 x 3) z)) (*.f64 z z) (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 3) (-.f64 (neg.f64 x) (/.f64 (*.f64 x x) z)))))) (pow.f64 y 3)) (neg.f64 (/.f64 (+.f64 1 (/.f64 x z)) (/.f64 y (*.f64 z z)))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 z z))) y) (/.f64 (fma.f64 (+.f64 1 (/.f64 x z)) (+.f64 (*.f64 (pow.f64 z 3) (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x)))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 4))) (fma.f64 (*.f64 z z) (fma.f64 x x (/.f64 (pow.f64 x 3) z)) (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 3) (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x))))))) (pow.f64 y 3))) z) (/.f64 (fma.f64 (*.f64 z z) (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 y y)))","(-.f64 (-.f64 (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (*.f64 z (neg.f64 z))) (/.f64 (fma.f64 (+.f64 1 (/.f64 x z)) (+.f64 (*.f64 (pow.f64 z 3) (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x)))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 4))) (fma.f64 (*.f64 z z) (fma.f64 x x (/.f64 (pow.f64 x 3) z)) (*.f64 (+.f64 1 (/.f64 x z)) (*.f64 (pow.f64 z 3) (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x))))))) (pow.f64 y 3))) (+.f64 (/.f64 (fma.f64 (*.f64 z z) (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 y y)) z))","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)))","(*.f64 -1 (+.f64 z (/.f64 (+.f64 1 (/.f64 x z)) (/.f64 y (*.f64 z z)))))","(-.f64 (neg.f64 z) (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 x) (/.f64 (pow.f64 x 2) z)) (pow.f64 z 2)) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y))))","(fma.f64 -1 (/.f64 (fma.f64 (*.f64 z z) (-.f64 (neg.f64 x) (/.f64 (*.f64 x x) z)) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 y y)) (*.f64 -1 (+.f64 z (/.f64 (+.f64 1 (/.f64 x z)) (/.f64 y (*.f64 z z))))))","(-.f64 (-.f64 (neg.f64 z) (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (*.f64 z z))) (/.f64 (fma.f64 (*.f64 z z) (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 x) (/.f64 (pow.f64 x 2) z)) (pow.f64 z 2)) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (/.f64 (pow.f64 x 3) z)) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 2)) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (/.f64 (pow.f64 x 2) z)) (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 3))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 x) (/.f64 (pow.f64 x 2) z)) (pow.f64 z 2)) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 (+.f64 1 (/.f64 x z)) z)) (pow.f64 y 3))))))))","(fma.f64 -1 (/.f64 (fma.f64 (*.f64 z z) (-.f64 (neg.f64 x) (/.f64 (*.f64 x x) z)) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 y y)) (fma.f64 -1 z (+.f64 (/.f64 (-.f64 (neg.f64 (*.f64 x x)) (/.f64 (pow.f64 x 3) z)) (/.f64 (pow.f64 y 3) (*.f64 z z))) (fma.f64 -1 (/.f64 (+.f64 1 (/.f64 x z)) (/.f64 y (*.f64 z z))) (*.f64 -1 (+.f64 (/.f64 (-.f64 (neg.f64 x) (/.f64 (*.f64 x x) z)) (/.f64 (pow.f64 y 3) (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 3)))) (/.f64 (fma.f64 (*.f64 z z) (-.f64 (neg.f64 x) (/.f64 (*.f64 x x) z)) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (/.f64 (pow.f64 y 3) (*.f64 z (+.f64 1 (/.f64 x z)))))))))))","(-.f64 (-.f64 (+.f64 (*.f64 (/.f64 (neg.f64 (fma.f64 x x (/.f64 (pow.f64 x 3) z))) (pow.f64 y 3)) (*.f64 z z)) (-.f64 (-.f64 (/.f64 (neg.f64 (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x)))) (/.f64 (pow.f64 y 3) (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 3)))) (/.f64 (+.f64 1 (/.f64 x z)) (/.f64 (pow.f64 y 3) (+.f64 (*.f64 (pow.f64 z 3) (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x)))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 4)))))) (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (*.f64 z z)))) z) (/.f64 (fma.f64 (*.f64 z z) (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 y y)))","(+.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (fma.f64 x x (/.f64 (pow.f64 x 3) z))) (pow.f64 y 3)) (*.f64 z z)) z) (-.f64 (-.f64 (-.f64 (/.f64 (+.f64 x (/.f64 x (/.f64 z x))) (/.f64 (pow.f64 y 3) (*.f64 (+.f64 1 (/.f64 x z)) (pow.f64 z 3)))) (/.f64 (+.f64 1 (/.f64 x z)) (/.f64 (pow.f64 y 3) (+.f64 (*.f64 (pow.f64 z 3) (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x)))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 4)))))) (*.f64 (/.f64 (+.f64 1 (/.f64 x z)) y) (*.f64 z z))) (/.f64 (fma.f64 (*.f64 z z) (-.f64 (neg.f64 x) (/.f64 x (/.f64 z x))) (*.f64 (pow.f64 (+.f64 1 (/.f64 x z)) 2) (pow.f64 z 3))) (*.f64 y y))))","(/.f64 1 (-.f64 (/.f64 1 y) (/.f64 1 z)))","(/.f64 1 (+.f64 (/.f64 1 y) (/.f64 -1 z)))","(+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z)))) x) (/.f64 1 (-.f64 (/.f64 1 y) (/.f64 1 z))))","(fma.f64 (-.f64 (/.f64 1 (*.f64 (*.f64 y y) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))) (/.f64 1 (*.f64 (*.f64 y z) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2)))) x (/.f64 1 (-.f64 (/.f64 1 y) (/.f64 1 z))))","(fma.f64 x (-.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 (/.f64 1 z) y) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (/.f64 1 (+.f64 (/.f64 1 y) (/.f64 -1 z))))","(fma.f64 x (+.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 -1 (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (*.f64 y z))) (/.f64 1 (+.f64 (/.f64 1 y) (/.f64 -1 z))))","(+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 3))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z))))) (-.f64 (/.f64 1 y) (/.f64 1 z))))) (pow.f64 x 2)) (+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z)))) x) (/.f64 1 (-.f64 (/.f64 1 y) (/.f64 1 z)))))","(fma.f64 (-.f64 (-.f64 (/.f64 1 (*.f64 (*.f64 z (*.f64 y y)) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))) (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2)))) (/.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (*.f64 y y))) (/.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) (-.f64 (/.f64 1 (*.f64 (*.f64 y y) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))) (/.f64 1 (*.f64 (*.f64 y z) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))))))) (*.f64 x x) (fma.f64 (-.f64 (/.f64 1 (*.f64 (*.f64 y y) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))) (/.f64 1 (*.f64 (*.f64 y z) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2)))) x (/.f64 1 (-.f64 (/.f64 1 y) (/.f64 1 z)))))","(fma.f64 (*.f64 x x) (-.f64 (-.f64 (/.f64 1 (*.f64 (*.f64 y (*.f64 y z)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (/.f64 (/.f64 1 (pow.f64 y 3)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (*.f64 (/.f64 (+.f64 (/.f64 (/.f64 1 z) y) (/.f64 -1 (*.f64 y y))) (+.f64 (/.f64 1 y) (/.f64 -1 z))) (-.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 (/.f64 1 z) y) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))))) (fma.f64 x (-.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 (/.f64 1 z) y) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (/.f64 1 (+.f64 (/.f64 1 y) (/.f64 -1 z)))))","(fma.f64 (*.f64 x x) (-.f64 (+.f64 (/.f64 1 (*.f64 (*.f64 y (*.f64 y z)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (/.f64 -1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)))) (*.f64 (/.f64 (+.f64 (/.f64 (/.f64 1 z) y) (/.f64 -1 (*.f64 y y))) (+.f64 (/.f64 1 y) (/.f64 -1 z))) (+.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 -1 (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (*.f64 y z))))) (fma.f64 x (+.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 -1 (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (*.f64 y z))) (/.f64 1 (+.f64 (/.f64 1 y) (/.f64 -1 z)))))","(+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 3))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z))))) (-.f64 (/.f64 1 y) (/.f64 1 z))))) (pow.f64 x 2)) (+.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z)))) x) (+.f64 (/.f64 1 (-.f64 (/.f64 1 y) (/.f64 1 z))) (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 4))) (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 (pow.f64 y 2) z))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 3))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (pow.f64 y 2))) (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z))))) (-.f64 (/.f64 1 y) (/.f64 1 z)))))) (-.f64 (/.f64 1 y) (/.f64 1 z))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 (pow.f64 y 3) z))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (pow.f64 y 2))) (/.f64 1 (*.f64 (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2) (*.f64 y z)))) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 (pow.f64 y 2) z)))) (-.f64 (/.f64 1 y) (/.f64 1 z)))))) (pow.f64 x 3)))))","(fma.f64 (-.f64 (-.f64 (/.f64 1 (*.f64 (*.f64 z (*.f64 y y)) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))) (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2)))) (/.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (*.f64 y y))) (/.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) (-.f64 (/.f64 1 (*.f64 (*.f64 y y) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))) (/.f64 1 (*.f64 (*.f64 y z) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))))))) (*.f64 x x) (+.f64 (fma.f64 (-.f64 (/.f64 1 (*.f64 (*.f64 y y) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))) (/.f64 1 (*.f64 (*.f64 y z) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2)))) x (/.f64 1 (-.f64 (/.f64 1 y) (/.f64 1 z)))) (*.f64 (pow.f64 x 3) (-.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))) (/.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (*.f64 y y))) (/.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) (-.f64 (-.f64 (/.f64 1 (*.f64 (*.f64 z (*.f64 y y)) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))) (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2)))) (/.f64 (-.f64 (/.f64 1 (*.f64 y z)) (/.f64 1 (*.f64 y y))) (/.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) (-.f64 (/.f64 1 (*.f64 (*.f64 y y) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))) (/.f64 1 (*.f64 (*.f64 y z) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2)))))))))) (+.f64 (/.f64 1 (*.f64 (*.f64 z (pow.f64 y 3)) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))) (/.f64 (-.f64 (/.f64 1 (*.f64 (*.f64 y y) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2))) (/.f64 1 (*.f64 (*.f64 y z) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) 2)))) (/.f64 (-.f64 (/.f64 1 y) (/.f64 1 z)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 z (*.f64 y y)))))))))))","(fma.f64 (*.f64 x x) (-.f64 (-.f64 (/.f64 1 (*.f64 (*.f64 y (*.f64 y z)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (/.f64 (/.f64 1 (pow.f64 y 3)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (*.f64 (/.f64 (+.f64 (/.f64 (/.f64 1 z) y) (/.f64 -1 (*.f64 y y))) (+.f64 (/.f64 1 y) (/.f64 -1 z))) (-.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 (/.f64 1 z) y) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))))) (fma.f64 x (-.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 (/.f64 1 z) y) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (fma.f64 (pow.f64 x 3) (-.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (*.f64 (/.f64 (+.f64 (/.f64 (/.f64 1 z) y) (/.f64 -1 (*.f64 y y))) (+.f64 (/.f64 1 y) (/.f64 -1 z))) (-.f64 (-.f64 (/.f64 1 (*.f64 (*.f64 y (*.f64 y z)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (/.f64 (/.f64 1 (pow.f64 y 3)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (*.f64 (/.f64 (+.f64 (/.f64 (/.f64 1 z) y) (/.f64 -1 (*.f64 y y))) (+.f64 (/.f64 1 y) (/.f64 -1 z))) (-.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 (/.f64 1 z) y) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))))))) (+.f64 (/.f64 (/.f64 (/.f64 1 (pow.f64 y 3)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) z) (/.f64 (-.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 (/.f64 1 z) y) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (/.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (*.f64 y (*.f64 y z)))))))) (/.f64 1 (+.f64 (/.f64 1 y) (/.f64 -1 z))))))","(fma.f64 (*.f64 x x) (-.f64 (+.f64 (/.f64 1 (*.f64 (*.f64 y (*.f64 y z)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (/.f64 -1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)))) (*.f64 (/.f64 (+.f64 (/.f64 (/.f64 1 z) y) (/.f64 -1 (*.f64 y y))) (+.f64 (/.f64 1 y) (/.f64 -1 z))) (+.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 -1 (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (*.f64 y z))))) (fma.f64 x (+.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 -1 (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (*.f64 y z))) (fma.f64 (pow.f64 x 3) (-.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (*.f64 (/.f64 (+.f64 (/.f64 (/.f64 1 z) y) (/.f64 -1 (*.f64 y y))) (+.f64 (/.f64 1 y) (/.f64 -1 z))) (-.f64 (+.f64 (/.f64 1 (*.f64 (*.f64 y (*.f64 y z)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2))) (/.f64 -1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)))) (*.f64 (/.f64 (+.f64 (/.f64 (/.f64 1 z) y) (/.f64 -1 (*.f64 y y))) (+.f64 (/.f64 1 y) (/.f64 -1 z))) (+.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 -1 (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (*.f64 y z))))))) (+.f64 (/.f64 (/.f64 (/.f64 1 (pow.f64 y 3)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) z) (/.f64 (+.f64 (/.f64 (/.f64 1 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (/.f64 (/.f64 -1 (pow.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) 2)) (*.f64 y z))) (/.f64 (+.f64 (/.f64 1 y) (/.f64 -1 z)) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (/.f64 -1 z) (*.f64 y y))))))) (/.f64 1 (+.f64 (/.f64 1 y) (/.f64 -1 z))))))","(/.f64 x (+.f64 (*.f64 -1 (/.f64 y z)) 1))","(/.f64 x (fma.f64 -1 (/.f64 y z) 1))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2))))) (/.f64 x (+.f64 (*.f64 -1 (/.f64 y z)) 1)))","(fma.f64 -1 (+.f64 (/.f64 (*.f64 y y) (*.f64 z (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (neg.f64 y) (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 x (fma.f64 -1 (/.f64 y z) 1)))","(-.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2))))","(+.f64 (-.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (+.f64 (*.f64 -1 (/.f64 y z)) 1))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z))) (/.f64 (pow.f64 y 2) (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) x)) (+.f64 (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2))))) (/.f64 x (+.f64 (*.f64 -1 (/.f64 y z)) 1))))","(fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 y y) (*.f64 z (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (neg.f64 y) (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (fma.f64 -1 (/.f64 y z) 1) (+.f64 (/.f64 (*.f64 y y) z) (neg.f64 y)))) (fma.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (*.f64 y y) (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2)))) x) (fma.f64 -1 (+.f64 (/.f64 (*.f64 y y) (*.f64 z (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (neg.f64 y) (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 x (fma.f64 -1 (/.f64 y z) 1))))","(-.f64 (-.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2)))) (/.f64 (-.f64 (-.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 (/.f64 (pow.f64 y 3) z) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (-.f64 1 (/.f64 y z)) (-.f64 (/.f64 y (/.f64 z y)) y)))) x))","(-.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (+.f64 (/.f64 (+.f64 (/.f64 (-.f64 (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (-.f64 1 (/.f64 y z)) (-.f64 (/.f64 y (/.f64 z y)) y))) (-.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 (/.f64 (pow.f64 y 3) z) (pow.f64 (-.f64 1 (/.f64 y z)) 2)))) x) (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (+.f64 (*.f64 -1 (/.f64 y z)) 1))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z))) (/.f64 (pow.f64 y 2) (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) x)) (+.f64 (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2))))) (+.f64 (/.f64 x (+.f64 (*.f64 -1 (/.f64 y z)) 1)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (+.f64 (*.f64 -1 (/.f64 y z)) 1))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z))) (/.f64 (pow.f64 y 2) (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (+.f64 (*.f64 -1 (/.f64 y z)) 1))) (+.f64 (/.f64 (pow.f64 y 4) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2) z)) (*.f64 -1 (/.f64 y (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))) (+.f64 (pow.f64 y 2) (*.f64 -1 (/.f64 (pow.f64 y 3) z)))) (+.f64 (*.f64 -1 (/.f64 y z)) 1))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) 2)))))) (pow.f64 x 2))))))","(fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 y y) (*.f64 z (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (neg.f64 y) (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (fma.f64 -1 (/.f64 y z) 1) (+.f64 (/.f64 (*.f64 y y) z) (neg.f64 y)))) (fma.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (*.f64 y y) (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2)))) x) (+.f64 (fma.f64 -1 (+.f64 (/.f64 (*.f64 y y) (*.f64 z (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (neg.f64 y) (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 x (fma.f64 -1 (/.f64 y z) 1))) (neg.f64 (/.f64 (fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 y y) (*.f64 z (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (neg.f64 y) (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (fma.f64 -1 (/.f64 y z) 1) (+.f64 (/.f64 (*.f64 y y) z) (neg.f64 y)))) (fma.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (*.f64 y y) (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2)))) (/.f64 (fma.f64 -1 (/.f64 y z) 1) (+.f64 (/.f64 (*.f64 y y) z) (neg.f64 y)))) (+.f64 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (fma.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 y y) (*.f64 z (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (neg.f64 y) (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2))) (/.f64 (fma.f64 -1 (/.f64 y z) 1) (+.f64 (*.f64 y y) (neg.f64 (/.f64 (pow.f64 y 3) z))))) (neg.f64 (/.f64 (pow.f64 y 3) (pow.f64 (fma.f64 -1 (/.f64 y z) 1) 2)))))) (*.f64 x x)))))","(-.f64 (-.f64 (-.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2)))) (/.f64 (-.f64 (-.f64 (-.f64 (/.f64 (/.f64 (pow.f64 y 4) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) z) (/.f64 (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (-.f64 1 (/.f64 y z)) (-.f64 (*.f64 y y) (/.f64 (pow.f64 y 3) z))))) (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (*.f64 (/.f64 (-.f64 (-.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 (/.f64 (pow.f64 y 3) z) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (-.f64 1 (/.f64 y z)) (-.f64 (/.f64 y (/.f64 z y)) y)))) (-.f64 1 (/.f64 y z))) (-.f64 (/.f64 y (/.f64 z y)) y))) (*.f64 x x))) (/.f64 (-.f64 (-.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 (/.f64 (pow.f64 y 3) z) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (-.f64 1 (/.f64 y z)) (-.f64 (/.f64 y (/.f64 z y)) y)))) x))","(+.f64 (-.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 (-.f64 (-.f64 (-.f64 (/.f64 (/.f64 (pow.f64 y 4) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) z) (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (-.f64 1 (/.f64 y z)) (-.f64 (*.f64 y y) (/.f64 (pow.f64 y 3) z))))) (*.f64 (/.f64 (+.f64 (/.f64 (-.f64 (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (-.f64 1 (/.f64 y z)) (-.f64 (/.f64 y (/.f64 z y)) y))) (-.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 (/.f64 (pow.f64 y 3) z) (pow.f64 (-.f64 1 (/.f64 y z)) 2)))) (-.f64 1 (/.f64 y z))) (-.f64 (/.f64 y (/.f64 z y)) y))) (*.f64 x x))) (-.f64 (-.f64 (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (+.f64 (/.f64 (-.f64 (/.f64 y (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (-.f64 1 (/.f64 y z)) 2))) (/.f64 (-.f64 1 (/.f64 y z)) (-.f64 (/.f64 y (/.f64 z y)) y))) (-.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 1 (/.f64 y z)) 2)) (/.f64 (/.f64 (pow.f64 y 3) z) (pow.f64 (-.f64 1 (/.f64 y z)) 2)))) x)))","(*.f64 -1 (/.f64 x (-.f64 (/.f64 y z) 1)))","(/.f64 (neg.f64 x) (+.f64 (/.f64 y z) -1))","(/.f64 (neg.f64 x) (+.f64 -1 (/.f64 y z)))","(+.f64 (*.f64 -1 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)))) (*.f64 -1 (/.f64 x (-.f64 (/.f64 y z) 1))))","(fma.f64 -1 (fma.f64 -1 (/.f64 y (pow.f64 (+.f64 (/.f64 y z) -1) 2)) (/.f64 (/.f64 (*.f64 y y) (pow.f64 (+.f64 (/.f64 y z) -1) 2)) z)) (/.f64 (neg.f64 x) (+.f64 (/.f64 y z) -1)))","(-.f64 (/.f64 (neg.f64 x) (+.f64 -1 (/.f64 y z))) (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2))))","(-.f64 (-.f64 (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (/.f64 x (+.f64 -1 (/.f64 y z))))","(+.f64 (*.f64 -1 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)))) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) (*.f64 z x))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) x))) (+.f64 (*.f64 -1 (/.f64 x (-.f64 (/.f64 y z) 1))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (*.f64 (-.f64 (/.f64 y z) 1) x)))))))","(fma.f64 -1 (fma.f64 -1 (/.f64 y (pow.f64 (+.f64 (/.f64 y z) -1) 2)) (/.f64 (/.f64 (*.f64 y y) (pow.f64 (+.f64 (/.f64 y z) -1) 2)) z)) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x z) (pow.f64 (+.f64 (/.f64 y z) -1) 2))) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 x (pow.f64 (+.f64 (/.f64 y z) -1) 2))) (*.f64 -1 (+.f64 (/.f64 x (+.f64 (/.f64 y z) -1)) (/.f64 (fma.f64 -1 (/.f64 y (pow.f64 (+.f64 (/.f64 y z) -1) 2)) (/.f64 (/.f64 (*.f64 y y) (pow.f64 (+.f64 (/.f64 y z) -1) 2)) z)) (/.f64 (*.f64 x (+.f64 (/.f64 y z) -1)) (+.f64 (/.f64 (*.f64 y y) z) (neg.f64 y)))))))))","(-.f64 (-.f64 (-.f64 (-.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x z) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (/.f64 x (+.f64 -1 (/.f64 y z)))) (*.f64 (/.f64 (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (+.f64 -1 (/.f64 y z))) (/.f64 (-.f64 (/.f64 y (/.f64 z y)) y) x))) (/.f64 (/.f64 (*.f64 y y) x) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2))))","(+.f64 (-.f64 (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (+.f64 (-.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x z) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (/.f64 x (+.f64 -1 (/.f64 y z)))) (-.f64 (*.f64 (/.f64 (-.f64 (/.f64 y (/.f64 z y)) y) x) (/.f64 (-.f64 (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (+.f64 -1 (/.f64 y z)))) (/.f64 (/.f64 (*.f64 y y) x) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (/.f64 (pow.f64 y 4) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (/.f64 (pow.f64 y 3) z)) (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)))) (-.f64 (/.f64 y z) 1))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (-.f64 (/.f64 y z) 1))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 (/.f64 y z) 1) 2))))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (-.f64 (/.f64 y z) 1))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 (/.f64 y z) 1) 2)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) x))) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) (*.f64 z x))) (+.f64 (*.f64 -1 (/.f64 x (-.f64 (/.f64 y z) 1))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z))) (+.f64 (/.f64 (pow.f64 y 2) z) (*.f64 -1 y))) (*.f64 (-.f64 (/.f64 y z) 1) x))))))))","(fma.f64 -1 (/.f64 (+.f64 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 (+.f64 (/.f64 y z) -1) 2))) (fma.f64 -1 (/.f64 (*.f64 (fma.f64 -1 (/.f64 y (pow.f64 (+.f64 (/.f64 y z) -1) 2)) (/.f64 (/.f64 (*.f64 y y) (pow.f64 (+.f64 (/.f64 y z) -1) 2)) z)) (fma.f64 -1 (*.f64 y y) (/.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 y z) -1)) (*.f64 -1 (+.f64 (/.f64 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 (+.f64 (/.f64 y z) -1) 2))) (fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 y (pow.f64 (+.f64 (/.f64 y z) -1) 2)) (/.f64 (/.f64 (*.f64 y y) (pow.f64 (+.f64 (/.f64 y z) -1) 2)) z)) (/.f64 (+.f64 (/.f64 y z) -1) (+.f64 (/.f64 (*.f64 y y) z) (neg.f64 y)))) (/.f64 (neg.f64 (*.f64 y y)) (pow.f64 (+.f64 (/.f64 y z) -1) 2)))) (/.f64 (+.f64 (/.f64 y z) -1) (+.f64 (/.f64 (*.f64 y y) z) (neg.f64 y)))) (/.f64 (pow.f64 y 3) (pow.f64 (+.f64 (/.f64 y z) -1) 2)))))) (*.f64 x x)) (fma.f64 -1 (fma.f64 -1 (/.f64 y (pow.f64 (+.f64 (/.f64 y z) -1) 2)) (/.f64 (/.f64 (*.f64 y y) (pow.f64 (+.f64 (/.f64 y z) -1) 2)) z)) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 x (pow.f64 (+.f64 (/.f64 y z) -1) 2))) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x z) (pow.f64 (+.f64 (/.f64 y z) -1) 2))) (*.f64 -1 (+.f64 (/.f64 x (+.f64 (/.f64 y z) -1)) (/.f64 (fma.f64 -1 (/.f64 y (pow.f64 (+.f64 (/.f64 y z) -1) 2)) (/.f64 (/.f64 (*.f64 y y) (pow.f64 (+.f64 (/.f64 y z) -1) 2)) z)) (/.f64 (*.f64 x (+.f64 (/.f64 y z) -1)) (+.f64 (/.f64 (*.f64 y y) z) (neg.f64 y))))))))))","(-.f64 (-.f64 (-.f64 (-.f64 (-.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x z) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (/.f64 x (+.f64 -1 (/.f64 y z)))) (*.f64 (/.f64 (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (+.f64 -1 (/.f64 y z))) (/.f64 (-.f64 (/.f64 y (/.f64 z y)) y) x))) (/.f64 (/.f64 (*.f64 y y) x) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2)))) (/.f64 (+.f64 (/.f64 (/.f64 (pow.f64 y 4) z) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2)))) (-.f64 (/.f64 (pow.f64 y 3) z) (*.f64 y y))) (+.f64 -1 (/.f64 y z))) (/.f64 (-.f64 (-.f64 (/.f64 (/.f64 (pow.f64 y 3) z) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 (-.f64 (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (/.f64 (+.f64 -1 (/.f64 y z)) (-.f64 (/.f64 y (/.f64 z y)) y)))) (/.f64 y (/.f64 (pow.f64 (+.f64 -1 (/.f64 y z)) 2) y))) (/.f64 (+.f64 -1 (/.f64 y z)) (-.f64 (/.f64 y (/.f64 z y)) y)))) (/.f64 (pow.f64 y 3) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)))) (*.f64 x x)))","(-.f64 (+.f64 (-.f64 (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (+.f64 (-.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x z) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (/.f64 x (+.f64 -1 (/.f64 y z)))) (-.f64 (*.f64 (/.f64 (-.f64 (/.f64 y (/.f64 z y)) y) x) (/.f64 (-.f64 (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (+.f64 -1 (/.f64 y z)))) (/.f64 (/.f64 (*.f64 y y) x) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))))) (/.f64 (+.f64 (/.f64 (/.f64 (pow.f64 y 4) z) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (-.f64 (-.f64 (*.f64 (/.f64 (-.f64 (/.f64 (pow.f64 y 3) z) (*.f64 y y)) (+.f64 -1 (/.f64 y z))) (-.f64 (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)))) (/.f64 (+.f64 (-.f64 (/.f64 (/.f64 (pow.f64 y 3) z) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 y (/.f64 (pow.f64 (+.f64 -1 (/.f64 y z)) 2) y))) (/.f64 (-.f64 (/.f64 y (pow.f64 (+.f64 -1 (/.f64 y z)) 2)) (/.f64 (/.f64 y (/.f64 z y)) (pow.f64 (+.f64 -1 (/.f64 y z)) 2))) (/.f64 (+.f64 -1 (/.f64 y z)) (-.f64 (/.f64 y (/.f64 z y)) y)))) (/.f64 (+.f64 -1 (/.f64 y z)) (-.f64 (/.f64 y (/.f64 z y)) y)))) (/.f64 (pow.f64 y 3) (pow.f64 (+.f64 -1 (/.f64 y z)) 2)))) (*.f64 x x)))","(*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))","(neg.f64 (/.f64 (+.f64 y x) (/.f64 y z)))","(/.f64 (*.f64 (neg.f64 z) (+.f64 y x)) y)","(*.f64 (/.f64 (+.f64 y x) y) (neg.f64 z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))","(fma.f64 -1 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (neg.f64 (/.f64 (+.f64 y x) (/.f64 y z))))","(neg.f64 (fma.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (*.f64 (/.f64 (+.f64 y x) y) z)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))))","(fma.f64 -1 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (fma.f64 -1 (*.f64 (pow.f64 z 3) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3)))) (neg.f64 (/.f64 (+.f64 y x) (/.f64 y z)))))","(-.f64 (neg.f64 (fma.f64 (pow.f64 z 3) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3))) (*.f64 (/.f64 (+.f64 y x) y) z))) (*.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))))","(-.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3))) (neg.f64 (pow.f64 z 3))) (fma.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (*.f64 (/.f64 (+.f64 y x) y) z)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))))","(fma.f64 -1 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (fma.f64 -1 (*.f64 (pow.f64 z 3) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3)))) (fma.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 x (pow.f64 y 4))) (pow.f64 z 4)) (neg.f64 (/.f64 (+.f64 y x) (/.f64 y z))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 x (pow.f64 y 4))) (pow.f64 z 4) (*.f64 (/.f64 (+.f64 y x) y) z))) (*.f64 (pow.f64 z 3) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3))))) (*.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))))","(-.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 x (pow.f64 y 3))) (neg.f64 (pow.f64 z 3))) (fma.f64 (*.f64 z z) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (*.f64 (/.f64 (+.f64 y x) y) z))) (*.f64 (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 x (pow.f64 y 4))) (pow.f64 z 4)))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (+.f64 y x) (/.f64 (+.f64 y x) (/.f64 z y)))","(+.f64 x (+.f64 y (*.f64 (/.f64 y z) (+.f64 y x))))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x)))","(+.f64 (/.f64 (+.f64 y x) (/.f64 z y)) (+.f64 (+.f64 y (/.f64 (+.f64 y x) (/.f64 (*.f64 z z) (*.f64 y y)))) x))","(+.f64 (*.f64 (/.f64 y z) (+.f64 y x)) (+.f64 (+.f64 y x) (*.f64 (/.f64 y (/.f64 z y)) (/.f64 (+.f64 y x) z))))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (pow.f64 z 3)) (+.f64 y x))))","(+.f64 (/.f64 (+.f64 y x) (/.f64 (*.f64 z z) (*.f64 y y))) (+.f64 (/.f64 (+.f64 y x) (/.f64 z y)) (+.f64 (+.f64 y x) (/.f64 (+.f64 y x) (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(+.f64 y (+.f64 (+.f64 x (+.f64 (*.f64 (/.f64 y (/.f64 z y)) (/.f64 (+.f64 y x) z)) (*.f64 (/.f64 (+.f64 y x) (pow.f64 z 3)) (pow.f64 y 3)))) (*.f64 (/.f64 y z) (+.f64 y x))))","(+.f64 y (+.f64 (+.f64 x (+.f64 (*.f64 (/.f64 y (/.f64 z y)) (/.f64 (+.f64 y x) z)) (/.f64 (+.f64 y x) (pow.f64 (/.f64 z y) 3)))) (*.f64 (/.f64 y z) (+.f64 y x))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (+.f64 y x) (/.f64 (+.f64 y x) (/.f64 z y)))","(+.f64 x (+.f64 y (*.f64 (/.f64 y z) (+.f64 y x))))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y x)))","(+.f64 (/.f64 (+.f64 y x) (/.f64 z y)) (+.f64 (+.f64 y (/.f64 (+.f64 y x) (/.f64 (*.f64 z z) (*.f64 y y)))) x))","(+.f64 (*.f64 (/.f64 y z) (+.f64 y x)) (+.f64 (+.f64 y x) (*.f64 (/.f64 y (/.f64 z y)) (/.f64 (+.f64 y x) z))))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 3)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x))))","(+.f64 (/.f64 (+.f64 y x) (/.f64 (*.f64 z z) (*.f64 y y))) (+.f64 (/.f64 (+.f64 y x) (/.f64 z y)) (+.f64 (+.f64 y x) (/.f64 (+.f64 y x) (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(+.f64 y (+.f64 (+.f64 x (+.f64 (*.f64 (/.f64 y (/.f64 z y)) (/.f64 (+.f64 y x) z)) (*.f64 (/.f64 (+.f64 y x) (pow.f64 z 3)) (pow.f64 y 3)))) (*.f64 (/.f64 y z) (+.f64 y x))))","(+.f64 y (+.f64 (+.f64 x (+.f64 (*.f64 (/.f64 y (/.f64 z y)) (/.f64 (+.f64 y x) z)) (/.f64 (+.f64 y x) (pow.f64 (/.f64 z y) 3)))) (*.f64 (/.f64 y z) (+.f64 y x))))"]],"stop":[["node limit",1]],"time":73.555908203125,"type":"simplify"},{"compiler":[[24645,14000]],"time":209.468994140625,"type":"eval"},{"alts":[["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","done",6.151466747464789],["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","next",3.873564899101158],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","done",8.893762559347234],["(+.f64 (*.f64 -1 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)))) (*.f64 -1 (/.f64 x (-.f64 (/.f64 y z) 1))))","fresh",21.417038441914862],["(*.f64 (/.f64 (+.f64 y x) y) (neg.f64 z))","fresh",31.170135270825643]],"compiler":[[48,31],[48,31],[12,8],[40,28],[11,7],[48,31],[40,28],[11,7]],"count":[[485,5]],"kept":[{"done":[1,1],"fresh":[3,1],"new":[480,2],"picked":[1,1]}],"min-error":[0.00390625],"time":229.56201171875,"type":"prune"},{"compiler":[[211,119]],"locations":[["(/.f64 (/.f64 1 z) (+.f64 y x))",0.1796875,false],["(/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1)))",1.7784951315429076,true],["(*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1))",9.113559239894332,false],["(fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))",51.27577445425294,false]],"time":43.14208984375,"type":"localize"},{"count":[[1,36]],"series":[["(/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1)))","x","-inf",0.203857421875],["(/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1)))","x","inf",0.234130859375],["(/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1)))","x","0",0.18115234375],["(/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1)))","y","-inf",0.239013671875],["(/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1)))","y","inf",0.214111328125],["(/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1)))","y","0",0.226806640625],["(/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1)))","z","-inf",0.1630859375],["(/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1)))","z","inf",0.166015625],["(/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1)))","z","0",0.279052734375]],"time":2.0400390625,"type":"series"},{"count":[[1,47]],"egraph":[[2,3294,10,0.027154958],[1,238,13,0.004358625],[0,11,16,0.000318875]],"inputs":[["(/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (/.f64 y (+.f64 y x)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 y (+.f64 y x)) z))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 y (+.f64 y x)) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (/.f64 y (+.f64 y x)) z)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (/.f64 y (+.f64 y x)) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (/.f64 y (+.f64 y x)) z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 y (+.f64 y x)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 y (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (/.f64 1 z) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y (+.f64 y x)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 y (+.f64 y x)) z)) (pow.f64 (cbrt.f64 (/.f64 (/.f64 y (+.f64 y x)) z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 y (+.f64 y x)) z)) 2) (cbrt.f64 (/.f64 (/.f64 y (+.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 z -2)) (*.f64 (/.f64 1 (cbrt.f64 z)) (/.f64 y (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (/.f64 y (+.f64 y x)) z)) (sqrt.f64 (/.f64 (/.f64 y (+.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 z -1/2) (*.f64 (pow.f64 z -1/2) (/.f64 y (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 z) (/.f64 1 (neg.f64 (/.f64 (+.f64 y x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (+.f64 y x)) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 z -2)) 1) (/.f64 (/.f64 1 (cbrt.f64 z)) (/.f64 (+.f64 y x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 z -1/2) 1) (/.f64 (pow.f64 z -1/2) (/.f64 (+.f64 y x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 y x)) (/.f64 (/.f64 1 z) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 z -2)) (+.f64 y x)) (/.f64 (/.f64 1 (cbrt.f64 z)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 z -1/2) (+.f64 y x)) (/.f64 (pow.f64 z -1/2) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 z -1/2) (/.f64 1 y)) (/.f64 (pow.f64 z -1/2) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 z -2)) (/.f64 1 y)) (/.f64 (/.f64 1 (cbrt.f64 z)) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 y x) y)) -2) (/.f64 (/.f64 1 z) (cbrt.f64 (/.f64 (+.f64 y x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 z -2)) (pow.f64 (cbrt.f64 (/.f64 (+.f64 y x) y)) 2)) (cbrt.f64 (/.f64 (/.f64 y (+.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 z -1/2) (pow.f64 (cbrt.f64 (/.f64 (+.f64 y x) y)) 2)) (/.f64 (pow.f64 z -1/2) (cbrt.f64 (/.f64 (+.f64 y x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 y x) y) -1/2) (/.f64 (/.f64 1 z) (sqrt.f64 (/.f64 (+.f64 y x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 z -2)) (sqrt.f64 (/.f64 (+.f64 y x) y))) (/.f64 (/.f64 1 (cbrt.f64 z)) (sqrt.f64 (/.f64 (+.f64 y x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 y (+.f64 y x)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 y (+.f64 y x)) z) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 y (+.f64 y x)) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 y (+.f64 y x)) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (/.f64 y (+.f64 y x)) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (/.f64 (+.f64 y x) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 z -3) (pow.f64 (/.f64 (+.f64 y x) y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 z (/.f64 (+.f64 y x) y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 1 z) (neg.f64 (/.f64 (+.f64 y x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (/.f64 y (+.f64 y x)) z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (/.f64 y (+.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (/.f64 y (+.f64 y x)) z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 y (+.f64 y x)) z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 z -3) (pow.f64 (/.f64 (+.f64 y x) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (/.f64 y (+.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (/.f64 y (+.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (/.f64 y (+.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (/.f64 y (+.f64 y x)) z)) 1))))))"]],"rules":[["egg-rr",47]],"stop":[["node limit",1]],"time":46.053955078125,"type":"rewrite"},{"count":[[83,63]],"egraph":[[4,6639,630,0.027170292],[3,2291,639,0.013700375],[2,440,693,0.003857625],[1,133,738,0.000913167],[0,46,765,0.000248458]],"inputs":[["(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(/.f64 1 z)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))","(+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))))","(/.f64 1 z)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))","(+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))))","(/.f64 1 z)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))","(+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))))","(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 (+.f64 y x) z))","(/.f64 y (*.f64 z x))","(/.f64 y (*.f64 x z))","(/.f64 (/.f64 y z) x)","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 y (*.f64 x z)) (neg.f64 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x)))))","(-.f64 (/.f64 (/.f64 y z) x) (*.f64 (/.f64 y z) (/.f64 y (*.f64 x x))))","(-.f64 (/.f64 (/.f64 y z) x) (*.f64 (/.f64 (/.f64 y z) x) (/.f64 y x)))","(*.f64 (+.f64 (/.f64 (neg.f64 y) x) 1) (/.f64 y (*.f64 x z)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 y (*.f64 x z)) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (-.f64 (/.f64 (/.f64 y z) x) (*.f64 (/.f64 y z) (/.f64 y (*.f64 x x)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))","(+.f64 (/.f64 (/.f64 y z) x) (*.f64 (*.f64 (/.f64 y z) y) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 y (pow.f64 x 3)))))","(+.f64 (/.f64 (pow.f64 (/.f64 y x) 3) z) (*.f64 (+.f64 (/.f64 (neg.f64 y) x) 1) (/.f64 y (*.f64 x z))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(+.f64 (/.f64 y (*.f64 x z)) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x))) (fma.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(+.f64 (-.f64 (/.f64 (/.f64 y z) x) (*.f64 (/.f64 y z) (/.f64 y (*.f64 x x)))) (-.f64 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))))","(+.f64 (/.f64 (/.f64 y z) x) (-.f64 (*.f64 (*.f64 (/.f64 y z) y) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 y (pow.f64 x 3)))) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))))","(+.f64 (-.f64 (/.f64 (pow.f64 (/.f64 y x) 3) z) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (*.f64 (+.f64 (/.f64 (neg.f64 y) x) 1) (/.f64 y (*.f64 x z))))","(+.f64 (-.f64 (/.f64 (pow.f64 (/.f64 y x) 3) z) (/.f64 (pow.f64 (/.f64 y x) 4) z)) (*.f64 (+.f64 (/.f64 (neg.f64 y) x) 1) (/.f64 y (*.f64 x z))))","(/.f64 1 z)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))","(fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z))","(-.f64 (/.f64 1 z) (/.f64 x (*.f64 y z)))","(-.f64 (/.f64 1 z) (/.f64 (/.f64 x y) z))","(-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y))","(+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z)) (/.f64 (*.f64 x x) (*.f64 z (*.f64 y y))))","(+.f64 (/.f64 1 z) (-.f64 (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y))) (/.f64 x (*.f64 y z))))","(+.f64 (/.f64 1 z) (*.f64 (/.f64 x z) (+.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y)))))","(+.f64 (/.f64 1 z) (*.f64 (/.f64 (/.f64 x z) y) (+.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))))","(fma.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 3))) (+.f64 (fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z)) (/.f64 (*.f64 x x) (*.f64 z (*.f64 y y)))))","(-.f64 (+.f64 (/.f64 1 z) (-.f64 (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y))) (/.f64 x (*.f64 y z)))) (/.f64 (/.f64 (pow.f64 x 3) z) (pow.f64 y 3)))","(+.f64 (/.f64 1 z) (-.f64 (*.f64 (/.f64 x z) (+.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y)))) (/.f64 (pow.f64 (/.f64 x y) 3) z)))","(+.f64 (*.f64 (/.f64 (/.f64 x z) y) (+.f64 -1 (/.f64 x y))) (-.f64 (/.f64 1 z) (/.f64 (pow.f64 (/.f64 x y) 3) z)))","(/.f64 1 z)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))","(fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z))","(-.f64 (/.f64 1 z) (/.f64 x (*.f64 y z)))","(-.f64 (/.f64 1 z) (/.f64 (/.f64 x y) z))","(-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y))","(+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z)) (/.f64 (*.f64 x x) (*.f64 z (*.f64 y y))))","(+.f64 (/.f64 1 z) (-.f64 (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y))) (/.f64 x (*.f64 y z))))","(+.f64 (/.f64 1 z) (*.f64 (/.f64 x z) (+.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y)))))","(+.f64 (/.f64 1 z) (*.f64 (/.f64 (/.f64 x z) y) (+.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))))","(fma.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 3))) (+.f64 (fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z)) (/.f64 (*.f64 x x) (*.f64 z (*.f64 y y)))))","(-.f64 (+.f64 (/.f64 1 z) (-.f64 (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y))) (/.f64 x (*.f64 y z)))) (/.f64 (/.f64 (pow.f64 x 3) z) (pow.f64 y 3)))","(+.f64 (/.f64 1 z) (-.f64 (*.f64 (/.f64 x z) (+.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y)))) (/.f64 (pow.f64 (/.f64 x y) 3) z)))","(+.f64 (*.f64 (/.f64 (/.f64 x z) y) (+.f64 -1 (/.f64 x y))) (-.f64 (/.f64 1 z) (/.f64 (pow.f64 (/.f64 x y) 3) z)))","(/.f64 1 z)","(+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))","(fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z))","(-.f64 (/.f64 1 z) (/.f64 x (*.f64 y z)))","(-.f64 (/.f64 1 z) (/.f64 (/.f64 x y) z))","(-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) y))","(+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z)))","(+.f64 (fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z)) (/.f64 (*.f64 x x) (*.f64 z (*.f64 y y))))","(+.f64 (/.f64 1 z) (-.f64 (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y))) (/.f64 x (*.f64 y z))))","(+.f64 (/.f64 1 z) (*.f64 (/.f64 x z) (+.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y)))))","(+.f64 (/.f64 1 z) (*.f64 (/.f64 (/.f64 x z) y) (+.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 3) z))) (+.f64 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y z))) (/.f64 1 z))))","(fma.f64 -1 (/.f64 (pow.f64 x 3) (*.f64 z (pow.f64 y 3))) (+.f64 (fma.f64 -1 (/.f64 x (*.f64 y z)) (/.f64 1 z)) (/.f64 (*.f64 x x) (*.f64 z (*.f64 y y)))))","(-.f64 (+.f64 (/.f64 1 z) (-.f64 (*.f64 (/.f64 x z) (/.f64 x (*.f64 y y))) (/.f64 x (*.f64 y z)))) (/.f64 (/.f64 (pow.f64 x 3) z) (pow.f64 y 3)))","(+.f64 (/.f64 1 z) (-.f64 (*.f64 (/.f64 x z) (+.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y)))) (/.f64 (pow.f64 (/.f64 x y) 3) z)))","(+.f64 (*.f64 (/.f64 (/.f64 x z) y) (+.f64 -1 (/.f64 x y))) (-.f64 (/.f64 1 z) (/.f64 (pow.f64 (/.f64 x y) 3) z)))","(/.f64 y (*.f64 z x))","(/.f64 y (*.f64 x z))","(/.f64 (/.f64 y z) x)","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 y (*.f64 x z)) (neg.f64 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x)))))","(-.f64 (/.f64 (/.f64 y z) x) (*.f64 (/.f64 y z) (/.f64 y (*.f64 x x))))","(-.f64 (/.f64 (/.f64 y z) x) (*.f64 (/.f64 (/.f64 y z) x) (/.f64 y x)))","(*.f64 (+.f64 (/.f64 (neg.f64 y) x) 1) (/.f64 y (*.f64 x z)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 y (*.f64 x z)) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (-.f64 (/.f64 (/.f64 y z) x) (*.f64 (/.f64 y z) (/.f64 y (*.f64 x x)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))","(+.f64 (/.f64 (/.f64 y z) x) (*.f64 (*.f64 (/.f64 y z) y) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 y (pow.f64 x 3)))))","(+.f64 (/.f64 (pow.f64 (/.f64 y x) 3) z) (*.f64 (+.f64 (/.f64 (neg.f64 y) x) 1) (/.f64 y (*.f64 x z))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(+.f64 (/.f64 y (*.f64 x z)) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x))) (fma.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(+.f64 (-.f64 (/.f64 (/.f64 y z) x) (*.f64 (/.f64 y z) (/.f64 y (*.f64 x x)))) (-.f64 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))))","(+.f64 (/.f64 (/.f64 y z) x) (-.f64 (*.f64 (*.f64 (/.f64 y z) y) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 y (pow.f64 x 3)))) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))))","(+.f64 (-.f64 (/.f64 (pow.f64 (/.f64 y x) 3) z) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (*.f64 (+.f64 (/.f64 (neg.f64 y) x) 1) (/.f64 y (*.f64 x z))))","(+.f64 (-.f64 (/.f64 (pow.f64 (/.f64 y x) 3) z) (/.f64 (pow.f64 (/.f64 y x) 4) z)) (*.f64 (+.f64 (/.f64 (neg.f64 y) x) 1) (/.f64 y (*.f64 x z))))","(/.f64 y (*.f64 z x))","(/.f64 y (*.f64 x z))","(/.f64 (/.f64 y z) x)","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))))","(+.f64 (/.f64 y (*.f64 x z)) (neg.f64 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x)))))","(-.f64 (/.f64 (/.f64 y z) x) (*.f64 (/.f64 y z) (/.f64 y (*.f64 x x))))","(-.f64 (/.f64 (/.f64 y z) x) (*.f64 (/.f64 (/.f64 y z) x) (/.f64 y x)))","(*.f64 (+.f64 (/.f64 (neg.f64 y) x) 1) (/.f64 y (*.f64 x z)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (/.f64 y (*.f64 x z)) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3)))))","(+.f64 (-.f64 (/.f64 (/.f64 y z) x) (*.f64 (/.f64 y z) (/.f64 y (*.f64 x x)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))","(+.f64 (/.f64 (/.f64 y z) x) (*.f64 (*.f64 (/.f64 y z) y) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 y (pow.f64 x 3)))))","(+.f64 (/.f64 (pow.f64 (/.f64 y x) 3) z) (*.f64 (+.f64 (/.f64 (neg.f64 y) x) 1) (/.f64 y (*.f64 x z))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 z (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(+.f64 (/.f64 y (*.f64 x z)) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z (*.f64 x x))) (fma.f64 -1 (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4))) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))))))","(+.f64 (-.f64 (/.f64 (/.f64 y z) x) (*.f64 (/.f64 y z) (/.f64 y (*.f64 x x)))) (-.f64 (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 x 3))) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))))","(+.f64 (/.f64 (/.f64 y z) x) (-.f64 (*.f64 (*.f64 (/.f64 y z) y) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 y (pow.f64 x 3)))) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))))","(+.f64 (-.f64 (/.f64 (pow.f64 (/.f64 y x) 3) z) (/.f64 (pow.f64 y 4) (*.f64 z (pow.f64 x 4)))) (*.f64 (+.f64 (/.f64 (neg.f64 y) x) 1) (/.f64 y (*.f64 x z))))","(+.f64 (-.f64 (/.f64 (pow.f64 (/.f64 y x) 3) z) (/.f64 (pow.f64 (/.f64 y x) 4) z)) (*.f64 (+.f64 (/.f64 (neg.f64 y) x) 1) (/.f64 y (*.f64 x z))))"]],"stop":[["node limit",1]],"time":46.505126953125,"type":"simplify"},{"compiler":[[15364,8706]],"time":131.85693359375,"type":"eval"},{"alts":[["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","done",6.151466747464789],["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","done",3.873564899101158],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","done",8.893762559347234],["(+.f64 (*.f64 -1 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)))) (*.f64 -1 (/.f64 x (-.f64 (/.f64 y z) 1))))","fresh",21.417038441914862],["(*.f64 (/.f64 (+.f64 y x) y) (neg.f64 z))","fresh",31.170135270825643]],"compiler":[[48,31],[48,31],[12,8],[40,28],[11,7]],"count":[[322,5]],"kept":[{"done":[2,2],"fresh":[2,2],"new":[317,0],"picked":[1,1]}],"min-error":[0.00390625],"time":120.136962890625,"type":"prune"},{"accuracy":[0.06640625],"baseline":[3.873564899101158],"branch":[["x",3.873564899101159,1],["y",0.1481437988422101,3],["z",1.867073312485982,3],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))",0.06640625,3]],"compiler":[[4,3],[4,3],[4,3],[12,8],[233,136]],"count":[[10,3]],"inputs":[["(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (/.f64 (/.f64 1 z) (*.f64 (+.f64 y x) (pow.f64 y -1))))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","(+.f64 (*.f64 -1 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 (/.f64 y z) 1) 2))) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 (-.f64 (/.f64 y z) 1) 2) z)))) (*.f64 -1 (/.f64 x (-.f64 (/.f64 y z) 1))))","(pow.f64 (+.f64 (fma.f64 1 (/.f64 1 (+.f64 y x)) (neg.f64 (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (/.f64 1 z) (+.f64 y x))) (/.f64 y 1) (*.f64 (/.f64 (/.f64 1 z) (+.f64 y x)) (/.f64 y 1)))) -1)","(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2)) (/.f64 (+.f64 y x) (cbrt.f64 (-.f64 1 (/.f64 y z)))))","(*.f64 (/.f64 (+.f64 y x) (-.f64 1 (pow.f64 (/.f64 y z) 2))) (+.f64 1 (/.f64 y z)))","(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 y z))) 2)) (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 1 (/.f64 y z)))))","(*.f64 (/.f64 (+.f64 y x) y) (neg.f64 z))","(pow.f64 (/.f64 (-.f64 1 (/.f64 y z)) (+.f64 x y)) -1)","(-.f64 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (*.f64 z (-.f64 (neg.f64 x) z)) y)) z)","(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))"]],"link":["."],"name":["Graphics.Rendering.Chart.Backend.Diagrams:calcFontMetrics from Chart-diagrams-1.5.1, A"],"oracle":[57.04490165377861],"outputs":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","(*.f64 (/.f64 (+.f64 y x) y) (neg.f64 z))","(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))"]],"time":46.450927734375,"times":[["x",4.429931640625],["y",13.140869140625],["z",13.028076171875],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))",12.02685546875]],"type":"regimes"},{"bstep":[[0.0,7.738897505769512e-286,0.013916015625],[-1.235931737407556e-252,-6.97109837843496e-265,0.095947265625]],"compiler":[[6,5],[12,8]],"method":["left-value","left-value"],"time":0.2490234375,"type":"bsearch"},{"compiler":[[53,27]],"egraph":[[7,78,74,0.000662375],[6,77,74,0.000559292],[5,74,74,0.000463667],[4,66,74,0.00035875],[3,55,74,0.000265792],[2,43,74,0.000179833],[1,30,74,0.00010820799999999999],[0,20,74,5.5125e-5]],"inputs":[["(if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) -8254602048994769/8254602048994769474255309139320571976856989469314398783249386078541779727448825929287769623244643560854287421769642635607536680617229461519539671538483430889193541937484454440136429963694163141453503639190799818814812942074243152169349951543234944945149040326527156224) (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) (if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 0) (*.f64 (/.f64 (+.f64 y x) y) (neg.f64 z)) (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) -8254602048994769/8254602048994769474255309139320571976856989469314398783249386078541779727448825929287769623244643560854287421769642635607536680617229461519539671538483430889193541937484454440136429963694163141453503639190799818814812942074243152169349951543234944945149040326527156224) (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) (if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 0) (*.f64 (/.f64 (+.f64 y x) y) (neg.f64 z)) (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))","(if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) -8254602048994769/8254602048994769474255309139320571976856989469314398783249386078541779727448825929287769623244643560854287421769642635607536680617229461519539671538483430889193541937484454440136429963694163141453503639190799818814812942074243152169349951543234944945149040326527156224) (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) (if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 0) (*.f64 (/.f64 (+.f64 x y) y) (neg.f64 z)) (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))","(if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) -8254602048994769/8254602048994769474255309139320571976856989469314398783249386078541779727448825929287769623244643560854287421769642635607536680617229461519539671538483430889193541937484454440136429963694163141453503639190799818814812942074243152169349951543234944945149040326527156224) (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) (if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 0) (*.f64 z (/.f64 (neg.f64 (+.f64 x y)) y)) (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))","(if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) -8254602048994769/8254602048994769474255309139320571976856989469314398783249386078541779727448825929287769623244643560854287421769642635607536680617229461519539671538483430889193541937484454440136429963694163141453503639190799818814812942074243152169349951543234944945149040326527156224) (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) (if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 0) (*.f64 z (/.f64 (-.f64 (neg.f64 y) x) y)) (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))))"]],"stop":[["fuel",1],["saturated",1]],"time":10.616943359375,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[53,27]],"remove-preprocessing":[[]],"time":14.320068359375,"type":"end"}]