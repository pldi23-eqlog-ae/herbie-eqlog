[{"compiler":[[25,20]],"method":["search"],"sampling":[[12,0.448561035975672,0.42515785148998475,0.12628111253434326],[11,0.3900530747614539,0.48366581270420284,0.12628111253434326],[10,0.3120424598091631,0.5616764276564936,0.12628111253434326],[9,0.3120424598091631,0.5616764276564936,0.12628111253434326],[8,0.2496339678473305,0.6240849196183262,0.12628111253434326],[7,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[6,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":328.7490234375,"type":"analyze"},{"outcomes":[["body",512,"invalid",218.62548828125,719],["body",256,"invalid",118.31591796875,1026],["body",4096,"valid",30.871337890625,6],["body",512,"valid",229.114013671875,797],["body",1024,"invalid",747.1494140625,1374],["body",1024,"valid",855.223876953125,1611],["body",2048,"valid",198.83984375,194],["body",256,"valid",609.645263671875,5648]],"time":3020.426025390625,"type":"sample"},{"compiler":[[24,19]],"egraph":[[0,3,3,2.583e-6],[16,7975,136,0.093755835],[15,7799,136,0.083923002],[14,7139,136,0.073423502],[13,6265,136,0.06319575200000001],[12,5505,136,0.05384250200000001],[11,4705,136,0.045441377000000005],[10,3770,136,0.036135336000000004],[9,3081,136,0.027886128000000003],[8,2608,136,0.021083711],[7,2277,136,0.016037669],[6,1964,136,0.011895377],[5,1304,136,0.008139085],[4,942,136,0.005169168],[3,489,136,0.002878126],[2,224,136,0.001365209],[1,86,136,0.000529334],[0,39,136,0.000168459]],"inputs":[["0","1","2"],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 angle (cos.f64 (*.f64 (PI.f64) (/.f64 a 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 a 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 b 180)))) 2) (pow.f64 (*.f64 angle (sin.f64 (*.f64 (PI.f64) (/.f64 b 180)))) 2))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 angle (cos.f64 (*.f64 (PI.f64) (/.f64 a 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 a 180)))) 2))","(+.f64 (pow.f64 (*.f64 angle (cos.f64 (*.f64 (/.f64 (PI.f64) 180) a))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (PI.f64) 180) a))) 2))","(+.f64 (pow.f64 (*.f64 angle (cos.f64 (*.f64 a (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 a (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 b 180)))) 2) (pow.f64 (*.f64 angle (sin.f64 (*.f64 (PI.f64) (/.f64 b 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 b (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 angle (sin.f64 (*.f64 b (/.f64 (PI.f64) 180)))) 2))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":120.64697265625,"type":"preprocess"},{"count":[[1,1]],"egraph":[[20,7889,34,0.106183669],[19,7062,34,0.09473625199999999],[18,6992,34,0.08299929399999999],[17,6830,34,0.07464958599999999],[16,6392,34,0.06607825199999999],[15,5944,34,0.057361001999999994],[14,5258,34,0.049646919],[13,4375,34,0.041412001999999996],[12,3666,34,0.033627793999999996],[11,3074,34,0.026826293999999997],[10,2620,34,0.021227334999999996],[9,2310,34,0.016312334999999997],[8,2070,34,0.012501334999999999],[7,1853,34,0.009237375999999999],[6,1030,34,0.006017458999999999],[5,659,34,0.003575834],[4,260,34,0.001982334],[3,144,34,0.000943667],[2,71,34,0.0004987500000000001],[1,30,34,0.000220875],[0,16,34,8.0792e-5]],"inputs":[["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))"]],"stop":[["node limit",1]],"time":118.72705078125,"type":"simplify"},{"compiler":[[24,19]],"time":0.406982421875,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","next",21.606716098665466]],"compiler":[[24,19],[24,19]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[21.606716098665466],"time":1.053955078125,"type":"prune"},{"compiler":[[86,58]],"locations":[["(pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2)",0.281913769536884,true],["(*.f64 (PI.f64) (/.f64 angle 180))",0.3405075195368841,true],["(sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))",26.22093541468611,true],["(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))",26.328272261644532,true]],"time":25.261962890625,"type":"localize"},{"count":[[4,60]],"series":[["(pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2)","angle","-inf",0.466796875],["(pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2)","angle","inf",0.504150390625],["(pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2)","angle","0",0.69384765625],["(pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2)","b","-inf",0.47509765625],["(pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2)","b","inf",0.451904296875],["(pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2)","b","0",1.39794921875],["(*.f64 (PI.f64) (/.f64 angle 180))","angle","-inf",0.2568359375],["(*.f64 (PI.f64) (/.f64 angle 180))","angle","inf",0.486083984375],["(*.f64 (PI.f64) (/.f64 angle 180))","angle","0",0.384033203125],["(sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","angle","-inf",0.153076171875],["(sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","angle","inf",0.159912109375],["(sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","angle","0",0.4599609375],["(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","angle","-inf",0.211181640625],["(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","angle","inf",0.197021484375],["(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","angle","0",0.55615234375]],"time":7.071044921875,"type":"series"},{"count":[[4,112]],"egraph":[[2,2928,44,0.025723126],[1,253,44,0.004328626],[0,12,44,0.000355209]],"inputs":[["(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","(sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","(*.f64 (PI.f64) (/.f64 angle 180))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (sqrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (sqrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 angle) 1/180) (PI.f64))) 2)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 angle) 1/180) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 angle) 1/180) (PI.f64)))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 angle) 1/180) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) (/.f64 180 angle))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 180 (*.f64 (PI.f64) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) angle) 180)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (PI.f64) angle)) -180)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 angle) (PI.f64)) -180)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (neg.f64 angle)) -180)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (PI.f64) angle) 2) 32400) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 180 (*.f64 (PI.f64) angle)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (*.f64 (PI.f64) angle) 2) 32400))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 angle) 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)) 4) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)) (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 3/2) (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)) 5) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b))) 1) 1))))))"]],"rules":[["egg-rr",30],["egg-rr",28],["egg-rr",27],["egg-rr",27]],"stop":[["node limit",1]],"time":52.3359375,"type":"rewrite"},{"count":[[172,141]],"egraph":[[14,7969,1028,0.104833792],[13,7681,1028,0.096108875],[12,7237,1028,0.086268292],[11,6588,1028,0.07571162499999999],[10,6040,1028,0.064961334],[9,4679,1028,0.054827],[8,4325,1028,0.043562584],[7,4079,1028,0.036179292],[6,3889,1028,0.029171708],[5,3726,1028,0.022814125],[4,3494,1028,0.016993292],[3,2130,1028,0.011034249999999999],[2,849,1028,0.00530925],[1,245,1044,0.00183775],[0,87,1046,0.000490625]],"inputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))))","(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))","(+.f64 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/2777030065152000000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 8))) (*.f64 -1/396718580736000000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 8)))) (pow.f64 angle 8)) (+.f64 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (*.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2)))","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) 1)","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) 1)","(fma.f64 (*.f64 angle angle) (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) 1)","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2))))","(+.f64 1 (fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)))))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 (pow.f64 angle 4) (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) 1))","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2)))))","(+.f64 (fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)))) (fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) 1))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 (pow.f64 angle 4) (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) 1)))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 angle (*.f64 (PI.f64) 1/180)))","(fma.f64 angle (*.f64 (PI.f64) 1/180) (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 (*.f64 1/22674816000000 (pow.f64 angle 5)) (pow.f64 (PI.f64) 5))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 (pow.f64 (PI.f64) 5) (*.f64 1/22674816000000 (pow.f64 angle 5)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 angle (*.f64 (PI.f64) 1/180))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 angle (*.f64 (PI.f64) 1/180) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 (*.f64 -1/30855889612800000000 (pow.f64 angle 7)) (pow.f64 (PI.f64) 7)))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (fma.f64 angle (*.f64 (PI.f64) 1/180) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 angle (*.f64 (PI.f64) 1/180) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))))","(*.f64 1/32400 (*.f64 (*.f64 (*.f64 angle angle) (*.f64 b b)) (pow.f64 (PI.f64) 2)))","(*.f64 (*.f64 angle angle) (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 b b)) 1/32400))","(*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 b b) (*.f64 (*.f64 angle angle) 1/32400)))","(*.f64 (*.f64 angle angle) (*.f64 1/32400 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 b b))))","(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))","(fma.f64 1/32400 (*.f64 (*.f64 (*.f64 angle angle) (*.f64 b b)) (pow.f64 (PI.f64) 2)) (*.f64 (*.f64 -1/3149280000 (pow.f64 angle 4)) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 b b))))","(fma.f64 1/32400 (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 b b))) (*.f64 (pow.f64 angle 4) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (*.f64 b b)) -1/3149280000)))","(*.f64 (*.f64 b b) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 angle angle) 1/32400)) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))","(*.f64 (*.f64 b b) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))","(+.f64 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))))))","(fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (pow.f64 (PI.f64) 6) (*.f64 b b)) 1/765275040000000) (fma.f64 1/32400 (*.f64 (*.f64 (*.f64 angle angle) (*.f64 b b)) (pow.f64 (PI.f64) 2)) (*.f64 (*.f64 -1/3149280000 (pow.f64 angle 4)) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 b b)))))","(fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 (*.f64 b b) 1/765275040000000)) (fma.f64 1/32400 (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 b b))) (*.f64 (pow.f64 angle 4) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (*.f64 b b)) -1/3149280000))))","(fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 (*.f64 b b) 1/765275040000000)) (*.f64 (*.f64 b b) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 angle angle) 1/32400)) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000)))))","(fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 b (*.f64 b 1/765275040000000))) (*.f64 (*.f64 b b) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/2777030065152000000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 8))) (*.f64 -1/396718580736000000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 8)))) (pow.f64 angle 8)) (+.f64 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))))","(fma.f64 (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 8)) -1/347128758144000000000) (pow.f64 angle 8) (fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (pow.f64 (PI.f64) 6) (*.f64 b b)) 1/765275040000000) (fma.f64 1/32400 (*.f64 (*.f64 (*.f64 angle angle) (*.f64 b b)) (pow.f64 (PI.f64) 2)) (*.f64 (*.f64 -1/3149280000 (pow.f64 angle 4)) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 b b))))))","(fma.f64 (*.f64 (*.f64 b b) (*.f64 (pow.f64 (PI.f64) 8) -1/347128758144000000000)) (pow.f64 angle 8) (fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 (*.f64 b b) 1/765275040000000)) (fma.f64 1/32400 (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 b b))) (*.f64 (pow.f64 angle 4) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (*.f64 b b)) -1/3149280000)))))","(fma.f64 (*.f64 b (*.f64 b (pow.f64 (PI.f64) 8))) (*.f64 (pow.f64 angle 8) -1/347128758144000000000) (fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 (*.f64 b b) 1/765275040000000)) (*.f64 (*.f64 b b) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 angle angle) 1/32400)) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))))","(fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 b (*.f64 b 1/765275040000000))) (fma.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 8)) (*.f64 (pow.f64 angle 8) -1/347128758144000000000) (*.f64 (*.f64 b b) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))","(*.f64 b (*.f64 b (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))"]],"stop":[["node limit",1]],"time":147.31396484375,"type":"simplify"},{"compiler":[[4617,3267]],"time":53.731201171875,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))","fresh",21.57744848527218],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (/.f64 180 (*.f64 (PI.f64) angle)) -1))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",21.672039673320715],["(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",21.61958113911142],["(+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",22.311016408294982],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (sqrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",43.843791274623484],["(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",21.611768638041887],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (sqrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2))) 2))","fresh",43.83368184884717],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",21.611768627917517],["(+.f64 (pow.f64 (*.f64 a (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",26.50843610300821],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",21.684218081830643],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2))","fresh",21.760424581273433],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 1 (/.f64 180 (*.f64 (PI.f64) angle))))) 2))","fresh",21.613253901570094],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))) 2))","fresh",33.752785015590504],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))))","fresh",34.87956260876693],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (expm1.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",26.52018030646427],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 3) 1/3))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",35.54893079774823],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))","fresh",24.308723501679008],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (expm1.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2))","fresh",26.419358737209908],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","next",21.537842905245107],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (expm1.f64 (log1p.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2))","fresh",21.59351604276239],["(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",21.625019879044125],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 b (*.f64 b 1/765275040000000))) (*.f64 (*.f64 b b) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))))","fresh",36.4522580885425],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b))","fresh",21.675560277114073],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 angle angle) (*.f64 1/32400 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 b b)))))","fresh",35.04953862285228],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 3)))","fresh",22.328693793782683],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",43.92789353908562],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 6)) 1/3)))","fresh",29.657539645425167],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) 2))","fresh",44.0231622141303],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))","fresh",22.018853576805494],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2))","fresh",28.96699584174042],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)) 4)))","fresh",21.618644791241902],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 1/3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",43.95137374106286]],"compiler":[[24,19],[26,21],[37,29],[19,16],[27,22],[39,31],[27,22],[28,23],[41,33],[27,22],[27,22],[26,21],[41,33],[43,34],[26,21],[28,23],[31,22],[26,21],[24,19],[26,21],[27,22],[50,37],[31,22],[27,20],[29,24],[29,24],[28,23],[29,24],[26,21],[39,31],[37,28],[30,25],[24,19],[26,21],[37,29],[19,16],[27,22],[39,31],[27,22],[28,23],[41,33],[27,22],[27,22],[26,21],[41,33],[43,34],[26,21],[28,23],[31,22],[26,21],[24,19],[26,21],[27,22],[50,37],[31,22],[27,20],[29,24],[29,24],[28,23],[29,24],[26,21],[39,31],[37,28],[30,25]],"count":[[170,32]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[169,32],"picked":[1,0]}],"min-error":[20.62681664680098],"time":64.68603515625,"type":"prune"},{"compiler":[[94,63]],"locations":[["(/.f64 (PI.f64) (/.f64 180 angle))",0.28125,true],["(*.f64 (PI.f64) (/.f64 angle 180))",0.3405075195368841,false],["(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))",26.328272261644532,false],["(sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))",26.369290243446212,true]],"time":28.18994140625,"type":"localize"},{"count":[[2,24]],"series":[["(/.f64 (PI.f64) (/.f64 180 angle))","angle","-inf",0.14013671875],["(/.f64 (PI.f64) (/.f64 180 angle))","angle","inf",0.14404296875],["(/.f64 (PI.f64) (/.f64 180 angle))","angle","0",0.160888671875],["(sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))","angle","-inf",0.222900390625],["(sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))","angle","inf",0.1669921875],["(sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))","angle","0",0.25]],"time":1.198974609375,"type":"series"},{"count":[[2,57]],"egraph":[[2,2012,18,0.018690125000000002],[1,153,18,0.002822958],[0,7,18,0.000221167]],"inputs":[["(sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))","(/.f64 (PI.f64) (/.f64 180 angle))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) (sqrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (PI.f64) (*.f64 angle 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 angle 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 angle (*.f64 (PI.f64) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2) (cbrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (*.f64 (cbrt.f64 (PI.f64)) (*.f64 angle 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (sqrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (PI.f64)) (*.f64 (sqrt.f64 (PI.f64)) (*.f64 angle 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (PI.f64)) (/.f64 1 (/.f64 -180 angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle 1/180) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/180) angle)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/180 (/.f64 (PI.f64) (/.f64 1 angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) 180) (/.f64 (cbrt.f64 (PI.f64)) (/.f64 1 angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (PI.f64)) 180) (/.f64 (sqrt.f64 (PI.f64)) (/.f64 1 angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) 1) (/.f64 (cbrt.f64 (PI.f64)) (/.f64 180 angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (PI.f64)) 1) (/.f64 (sqrt.f64 (PI.f64)) (/.f64 180 angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (/.f64 (PI.f64) (cbrt.f64 (/.f64 180 angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (/.f64 (sqrt.f64 (PI.f64)) (cbrt.f64 (/.f64 180 angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (/.f64 180 angle))) (/.f64 (PI.f64) (sqrt.f64 (/.f64 180 angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (sqrt.f64 (/.f64 180 angle))) (/.f64 (cbrt.f64 (PI.f64)) (sqrt.f64 (/.f64 180 angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) 1) (*.f64 angle 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) -180) (neg.f64 angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) 1/180) 1) angle)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) 1/180) (pow.f64 (cbrt.f64 angle) 2)) (cbrt.f64 angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) 1/180) (sqrt.f64 angle)) (sqrt.f64 angle))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 180 (*.f64 (PI.f64) angle)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (PI.f64) (/.f64 -180 angle)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (PI.f64)) (*.f64 angle 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (PI.f64) 3) (pow.f64 (/.f64 180 angle) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))"]],"rules":[["egg-rr",41],["egg-rr",16]],"stop":[["node limit",1]],"time":38.739013671875,"type":"rewrite"},{"count":[[81,65]],"egraph":[[15,7854,292,0.08804474799999999],[14,7308,292,0.079045832],[13,6358,292,0.069570832],[12,5619,292,0.059685415],[11,5053,292,0.05109029],[10,4661,292,0.042763789999999996],[9,4400,292,0.03585554],[8,4216,292,0.029804581999999996],[7,4074,292,0.023856456999999998],[6,3964,292,0.018557789999999998],[5,2683,292,0.013457748999999998],[4,2014,292,0.008434081999999999],[3,939,292,0.004843831999999999],[2,252,292,0.0019212489999999999],[1,87,292,0.000632832],[0,31,292,0.000187666]],"inputs":[["(*.f64 1/180 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/180 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -1/34992000 (pow.f64 angle 3))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(*.f64 angle (fma.f64 1/180 (PI.f64) (*.f64 -1/34992000 (*.f64 (pow.f64 (PI.f64) 3) (*.f64 angle angle)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 1/180 (*.f64 angle (PI.f64)))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 (pow.f64 angle 3) (*.f64 -1/34992000 (pow.f64 (PI.f64) 3)) (*.f64 (pow.f64 (PI.f64) 5) (*.f64 1/22674816000000 (pow.f64 angle 5)))))","(fma.f64 angle (fma.f64 1/180 (PI.f64) (*.f64 -1/34992000 (*.f64 (pow.f64 (PI.f64) 3) (*.f64 angle angle)))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 (pow.f64 (PI.f64) 5) (*.f64 1/22674816000000 (pow.f64 angle 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (PI.f64) 7) (*.f64 -1/30855889612800000000 (pow.f64 angle 7))))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))"]],"stop":[["node limit",1]],"time":109.4189453125,"type":"simplify"},{"compiler":[[3391,2449]],"time":40.527099609375,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",26.44542681674652],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","next",21.54289543449716],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (/.f64 (PI.f64) (cbrt.f64 (/.f64 180 angle)))))) 2))","fresh",21.599035148772025],["(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.55070794569107],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (-.f64 (+.f64 1 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1)) 2))","fresh",28.90617817463772],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))","fresh",22.018853576805494],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",43.88736428212923],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (sqrt.f64 (PI.f64)) 180) (/.f64 (sqrt.f64 (PI.f64)) (/.f64 1 angle))))) 2))","fresh",21.67050695528088],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (sqrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",43.843791274623484],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 3) 1/3))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",35.536999655952734],["(+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",22.24214321487456],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2))","fresh",21.760424581273433],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.61534488841028],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))) 2))","fresh",33.752785015590504],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))))","fresh",34.87956260876693],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))","fresh",24.308723501679008],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (expm1.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2))","fresh",26.419358737209908],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (expm1.f64 (log1p.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2))","fresh",21.59351604276239],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 b (*.f64 b 1/765275040000000))) (*.f64 (*.f64 b b) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))))","fresh",36.4522580885425],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 (PI.f64)) (*.f64 (sqrt.f64 (PI.f64)) (*.f64 angle 1/180))))) 2))","fresh",21.623473710431377],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b))","fresh",21.675560277114073],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2))","fresh",28.96699584174042],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)) 2))","fresh",21.667765743700894],["(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.556146685623773],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)) 4)))","fresh",21.618644791241902],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 angle angle) (*.f64 1/32400 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 b b)))))","fresh",35.04953862285228],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 3)))","fresh",22.328693793782683],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (expm1.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",26.457171020202527],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (sqrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (/.f64 (sqrt.f64 (PI.f64)) (cbrt.f64 (/.f64 180 angle)))))) 2))","fresh",21.68000974188784],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 6)) 1/3)))","fresh",29.657539645425167],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) 2))","fresh",44.0231622141303],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) 2))","fresh",21.774510517244504],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 1/3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",43.95137374106286],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (/.f64 1 (/.f64 180 (*.f64 (PI.f64) angle))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.603166479900363],["(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.542895444621536],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (*.f64 (cbrt.f64 (PI.f64)) (*.f64 angle 1/180))))) 2))","fresh",21.846522774292435]],"compiler":[[41,33],[28,23],[34,28],[37,29],[28,23],[26,21],[29,24],[30,23],[27,22],[28,23],[19,16],[27,22],[27,22],[41,33],[43,34],[31,22],[26,21],[26,21],[50,37],[28,21],[31,22],[39,31],[27,22],[27,22],[37,28],[27,20],[29,24],[26,21],[36,28],[28,23],[29,24],[37,30],[30,25],[26,21],[39,31],[30,23],[41,33],[28,23],[34,28],[37,29],[28,23],[26,21],[29,24],[30,23],[27,22],[28,23],[19,16],[27,22],[27,22],[41,33],[43,34],[31,22],[26,21],[26,21],[50,37],[28,21],[31,22],[39,31],[27,22],[27,22],[37,28],[27,20],[29,24],[26,21],[36,28],[28,23],[29,24],[37,30],[30,25],[26,21],[39,31],[30,23]],"count":[[161,36]],"kept":[{"done":[0,0],"fresh":[31,17],"new":[129,19],"picked":[1,0]}],"min-error":[20.446822513436082],"time":61.449951171875,"type":"prune"},{"compiler":[[134,88]],"locations":[["(/.f64 (PI.f64) (/.f64 180 angle))",0.28125,false],["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))",0.625,true],["(cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))",26.153882723042837,true],["(sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))",26.369290243446212,false]],"time":42.01904296875,"type":"localize"},{"count":[[2,24]],"series":[["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))","angle","-inf",0.23193359375],["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))","angle","inf",0.23095703125],["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))","angle","0",0.58203125],["(cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))","angle","-inf",0.18310546875],["(cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))","angle","inf",0.163818359375],["(cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))","angle","0",0.23095703125]],"time":1.718017578125,"type":"series"},{"count":[[2,55]],"egraph":[[2,2394,22,0.021876873999999998],[1,201,22,0.003449999],[0,10,25,0.000302541]],"inputs":[["(cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))","(+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))) (log.f64 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))) (log.f64 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (/.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2) (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)) (/.f64 1 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2)) (/.f64 1 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)) (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)) (+.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2)) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))) (neg.f64 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))) (neg.f64 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) 1) (-.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2)) (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2) (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sqrt.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 1)))))"]],"rules":[["egg-rr",34],["egg-rr",21]],"stop":[["node limit",1]],"time":44.308837890625,"type":"rewrite"},{"count":[[79,74]],"egraph":[[9,7726,335,0.088667251],[8,7334,335,0.073458626],[7,7057,335,0.059057709],[6,6801,353,0.045766959],[5,6575,353,0.033517917],[4,4190,371,0.020879959],[3,2022,371,0.009849751],[2,425,373,0.003538792],[1,136,384,0.0010155],[0,51,386,0.00029625]],"inputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(exp.f64 1)","(+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (exp.f64 1))","(+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 angle 4) (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1))) (exp.f64 1)))","(+.f64 (*.f64 (pow.f64 angle 6) (*.f64 (+.f64 (*.f64 -1/816293376000000 (pow.f64 (PI.f64) 6)) (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6))) (exp.f64 1))) (+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 angle 4) (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1))) (exp.f64 1))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2))))","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) 1)","(fma.f64 (*.f64 angle angle) (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) 1)","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) 1)","(fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) 1)","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 -1/64800 angle) angle))))","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1))","(fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2))))))","(+.f64 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 -1/64800 angle) angle))) (fma.f64 (*.f64 -1/24488801280000000 (pow.f64 angle 6)) (pow.f64 (PI.f64) 6) 1))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1)))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1)))","(fma.f64 -1/24488801280000000 (pow.f64 (*.f64 angle (PI.f64)) 6) (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1)))","(fma.f64 -1/24488801280000000 (pow.f64 (*.f64 angle (PI.f64)) 6) (fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(exp.f64 1)","(E.f64)","(+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (exp.f64 1))","(fma.f64 -1/64800 (*.f64 (*.f64 (*.f64 angle angle) (E.f64)) (pow.f64 (PI.f64) 2)) (E.f64))","(fma.f64 -1/64800 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 angle angle) (E.f64))) (E.f64))","(*.f64 (fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) 1) (E.f64))","(*.f64 (fma.f64 (*.f64 angle angle) (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) 1) (E.f64))","(*.f64 (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) 1) (E.f64))","(*.f64 (fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) 1) (E.f64))","(+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 angle 4) (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1))) (exp.f64 1)))","(fma.f64 -1/64800 (*.f64 (*.f64 (*.f64 angle angle) (E.f64)) (pow.f64 (PI.f64) 2)) (fma.f64 (pow.f64 angle 4) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (E.f64)))","(fma.f64 -1/64800 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 angle angle) (E.f64))) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 1/6298560000 (E.f64))) (E.f64)))","(*.f64 (E.f64) (+.f64 (*.f64 (*.f64 angle (pow.f64 (PI.f64) 2)) (*.f64 -1/64800 angle)) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1)))","(*.f64 (E.f64) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle))) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1)))","(*.f64 (E.f64) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle))) (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 4) 1/6298560000 1)))","(*.f64 (E.f64) (+.f64 (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2)) (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 4) 1/6298560000 1)))","(+.f64 (*.f64 (pow.f64 angle 6) (*.f64 (+.f64 (*.f64 -1/816293376000000 (pow.f64 (PI.f64) 6)) (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6))) (exp.f64 1))) (+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 angle 4) (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1))) (exp.f64 1))))","(fma.f64 (pow.f64 angle 6) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 6) -31/24488801280000000)) (fma.f64 -1/64800 (*.f64 (*.f64 (*.f64 angle angle) (E.f64)) (pow.f64 (PI.f64) 2)) (fma.f64 (pow.f64 angle 4) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (E.f64))))","(fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 -31/24488801280000000 (E.f64))) (fma.f64 -1/64800 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 angle angle) (E.f64))) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 1/6298560000 (E.f64))) (E.f64))))","(fma.f64 -1/64800 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 angle angle) (E.f64))) (*.f64 (E.f64) (+.f64 (*.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) -31/24488801280000000)) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1))))","(*.f64 (E.f64) (+.f64 (*.f64 (*.f64 angle (pow.f64 (PI.f64) 2)) (*.f64 -1/64800 angle)) (+.f64 (*.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) -31/24488801280000000)) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1))))","(*.f64 (E.f64) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle))) (+.f64 (*.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) -31/24488801280000000)) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1))))","(*.f64 (E.f64) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle))) (+.f64 (*.f64 (pow.f64 (*.f64 angle (PI.f64)) 6) -31/24488801280000000) (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 4) 1/6298560000 1))))","(*.f64 (E.f64) (+.f64 (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2)) (+.f64 (*.f64 (pow.f64 (*.f64 angle (PI.f64)) 6) -31/24488801280000000) (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 4) 1/6298560000 1))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))"]],"stop":[["node limit",1]],"time":108.234130859375,"type":"simplify"},{"compiler":[[4396,3318]],"time":53.830810546875,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",26.44542681674652],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.51713669702311],["(+.f64 (pow.f64 (*.f64 a (log.f64 (pow.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.53072283062037],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))","fresh",22.018853576805494],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",43.88736428212923],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (sqrt.f64 (PI.f64)) 180) (/.f64 (sqrt.f64 (PI.f64)) (/.f64 1 angle))))) 2))","fresh",21.67050695528088],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (sqrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",43.843791274623484],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 3) 1/3))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",35.536999655952734],["(+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",22.24214321487456],["(+.f64 (pow.f64 (*.f64 a (log.f64 (-.f64 (/.f64 1 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (/.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",22.10552617792661],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2))","fresh",21.760424581273433],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.61534488841028],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))) 2))","fresh",33.752785015590504],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (-.f64 (+.f64 1 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1)) 2))","fresh",28.91123070388977],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))))","fresh",34.87956260876693],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))","fresh",24.308723501679008],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","next",21.51173051690106],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (/.f64 (PI.f64) (cbrt.f64 (/.f64 180 angle)))))) 2))","fresh",21.60408767802294],["(+.f64 (pow.f64 (*.f64 a (log.f64 (fma.f64 (pow.f64 (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2) (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 1))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.52332794544621],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (expm1.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2))","fresh",26.419358737209908],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 b (*.f64 b 1/765275040000000))) (*.f64 (*.f64 b b) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))))","fresh",36.4522580885425],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b))","fresh",21.675560277114073],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2))","fresh",28.96699584174042],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (sqrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (/.f64 (sqrt.f64 (PI.f64)) (cbrt.f64 (/.f64 180 angle)))))) 2))","fresh",21.685062271139888],["(+.f64 (pow.f64 (*.f64 a (log.f64 (expm1.f64 (log1p.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.542267319345516],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)) 4)))","fresh",21.618644791241902],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 angle angle) (*.f64 1/32400 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 b b)))))","fresh",35.04953862285228],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (*.f64 (cbrt.f64 (PI.f64)) (*.f64 angle 1/180))))) 2))","fresh",21.851575303545346],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 3)))","fresh",22.328693793782683],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (expm1.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",26.457171020202527],["(+.f64 (pow.f64 (*.f64 a (log.f64 (/.f64 1 (/.f64 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.52196888138629],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 6)) 1/3)))","fresh",29.657539645425167],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) 2))","fresh",44.0231622141303],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 (PI.f64)) (*.f64 (sqrt.f64 (PI.f64)) (*.f64 angle 1/180))))) 2))","fresh",21.62852623968124],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) 2))","fresh",21.774510517244504],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)) 2))","fresh",21.672818272952945],["(+.f64 (pow.f64 (*.f64 a (log.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.550707945842554],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 1/3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",43.95137374106286],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (/.f64 1 (/.f64 180 (*.f64 (PI.f64) angle))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.603166479900363],["(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.542895444621536],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (expm1.f64 (log1p.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) 2))","fresh",21.60366690623878]],"compiler":[[41,33],[31,26],[29,24],[26,21],[29,24],[30,23],[27,22],[28,23],[19,16],[50,41],[27,22],[27,22],[41,33],[32,27],[43,34],[31,22],[28,23],[38,32],[39,32],[26,21],[50,37],[31,22],[39,31],[40,32],[28,23],[37,28],[27,20],[34,27],[29,24],[26,21],[52,43],[28,23],[29,24],[32,25],[37,30],[31,26],[26,21],[30,25],[26,21],[39,31],[30,25],[41,33],[31,26],[29,24],[26,21],[29,24],[30,23],[27,22],[28,23],[19,16],[50,41],[27,22],[27,22],[41,33],[32,27],[43,34],[31,22],[28,23],[38,32],[39,32],[26,21],[50,37],[31,22],[39,31],[40,32],[28,23],[37,28],[27,20],[34,27],[29,24],[26,21],[52,43],[28,23],[29,24],[32,25],[37,30],[31,26],[26,21],[30,25],[26,21],[39,31],[30,25]],"count":[[175,41]],"kept":[{"done":[0,0],"fresh":[35,26],"new":[139,15],"picked":[1,0]}],"min-error":[20.441300525713284],"time":72.781005859375,"type":"prune"},{"compiler":[[134,97]],"locations":[["(/.f64 (PI.f64) (/.f64 180 angle))",0.28125,false],["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))",0.66015625,true],["(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))",26.35733482607287,true],["(sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))",26.369290243446212,false]],"time":44.322021484375,"type":"localize"},{"count":[[2,24]],"series":[["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))","angle","-inf",0.15087890625],["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))","angle","inf",0.1708984375],["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))","angle","0",0.236083984375],["(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","angle","-inf",0.175048828125],["(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","angle","inf",0.162109375],["(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","angle","0",0.880126953125]],"time":1.8681640625,"type":"series"},{"count":[[2,55]],"egraph":[[2,2401,22,0.022001959],[1,201,22,0.0034552920000000004],[0,10,25,0.000303834]],"inputs":[["(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))) (log.f64 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3))) (log.f64 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (sqrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (/.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2) (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sqrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3)) (/.f64 1 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)) (/.f64 1 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3)) (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3)) (+.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3))) (neg.f64 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))) (neg.f64 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) 1) (-.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sqrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)) (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2) (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sqrt.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1)))))"]],"rules":[["egg-rr",34],["egg-rr",21]],"stop":[["node limit",1]],"time":44.35888671875,"type":"rewrite"},{"count":[[79,73]],"egraph":[[9,7726,335,0.08862658300000001],[8,7334,335,0.073493292],[7,7057,335,0.059034709],[6,6801,353,0.045746084],[5,6575,353,0.033516751],[4,4190,371,0.020851084],[3,2022,371,0.009891459],[2,425,373,0.0035722920000000003],[1,136,384,0.00103575],[0,51,386,0.00029975]],"inputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(exp.f64 1)","(+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (exp.f64 1))","(+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 angle 4) (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1))) (exp.f64 1)))","(+.f64 (*.f64 (pow.f64 angle 6) (*.f64 (+.f64 (*.f64 -1/816293376000000 (pow.f64 (PI.f64) 6)) (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6))) (exp.f64 1))) (+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 angle 4) (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1))) (exp.f64 1))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2))))","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) 1)","(fma.f64 (*.f64 angle angle) (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) 1)","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) 1)","(fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) 1)","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 -1/64800 angle) angle))))","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1))","(fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2))))))","(+.f64 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 -1/64800 angle) angle))) (fma.f64 (*.f64 -1/24488801280000000 (pow.f64 angle 6)) (pow.f64 (PI.f64) 6) 1))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1)))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1)))","(fma.f64 -1/24488801280000000 (pow.f64 (*.f64 angle (PI.f64)) 6) (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1)))","(fma.f64 -1/24488801280000000 (pow.f64 (*.f64 angle (PI.f64)) 6) (fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(exp.f64 1)","(E.f64)","(+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (exp.f64 1))","(fma.f64 -1/64800 (*.f64 (*.f64 (*.f64 angle angle) (E.f64)) (pow.f64 (PI.f64) 2)) (E.f64))","(fma.f64 -1/64800 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 angle angle) (E.f64))) (E.f64))","(*.f64 (fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) 1) (E.f64))","(*.f64 (fma.f64 (*.f64 angle angle) (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) 1) (E.f64))","(*.f64 (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) 1) (E.f64))","(*.f64 (fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) 1) (E.f64))","(+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 angle 4) (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1))) (exp.f64 1)))","(fma.f64 -1/64800 (*.f64 (*.f64 (*.f64 angle angle) (E.f64)) (pow.f64 (PI.f64) 2)) (fma.f64 (pow.f64 angle 4) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (E.f64)))","(fma.f64 -1/64800 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 angle angle) (E.f64))) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 1/6298560000 (E.f64))) (E.f64)))","(*.f64 (E.f64) (+.f64 (*.f64 (*.f64 angle (pow.f64 (PI.f64) 2)) (*.f64 -1/64800 angle)) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1)))","(*.f64 (E.f64) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle))) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1)))","(*.f64 (E.f64) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle))) (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 4) 1/6298560000 1)))","(*.f64 (E.f64) (+.f64 (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2)) (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 4) 1/6298560000 1)))","(+.f64 (*.f64 (pow.f64 angle 6) (*.f64 (+.f64 (*.f64 -1/816293376000000 (pow.f64 (PI.f64) 6)) (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6))) (exp.f64 1))) (+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 angle 4) (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1))) (exp.f64 1))))","(fma.f64 (pow.f64 angle 6) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 6) -31/24488801280000000)) (fma.f64 -1/64800 (*.f64 (*.f64 (*.f64 angle angle) (E.f64)) (pow.f64 (PI.f64) 2)) (fma.f64 (pow.f64 angle 4) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (E.f64))))","(fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 -31/24488801280000000 (E.f64))) (fma.f64 -1/64800 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 angle angle) (E.f64))) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 1/6298560000 (E.f64))) (E.f64))))","(fma.f64 -1/64800 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (*.f64 angle angle) (E.f64))) (*.f64 (E.f64) (+.f64 (*.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) -31/24488801280000000)) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1))))","(*.f64 (E.f64) (+.f64 (*.f64 (*.f64 angle (pow.f64 (PI.f64) 2)) (*.f64 -1/64800 angle)) (+.f64 (*.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) -31/24488801280000000)) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1))))","(*.f64 (E.f64) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle))) (+.f64 (*.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) -31/24488801280000000)) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1))))","(*.f64 (E.f64) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle))) (+.f64 (*.f64 (pow.f64 (*.f64 angle (PI.f64)) 6) -31/24488801280000000) (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 4) 1/6298560000 1))))","(*.f64 (E.f64) (+.f64 (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2)) (+.f64 (*.f64 (pow.f64 (*.f64 angle (PI.f64)) 6) -31/24488801280000000) (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 4) 1/6298560000 1))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))"]],"stop":[["node limit",1]],"time":108.111083984375,"type":"simplify"},{"compiler":[[4373,3366]],"time":53.203857421875,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",26.44542681674652],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.51713669702311],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) 2))","fresh",21.748398128900455],["(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.542895444621536],["(+.f64 (pow.f64 (*.f64 a (log.f64 (pow.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.53072283062037],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))","fresh",22.018853576805494],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",43.88736428212923],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (sqrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",43.843791274623484],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 3) 1/3))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",35.536999655952734],["(+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",22.24214321487456],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2))","fresh",21.760424581273433],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.61534488841028],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))) 2))","fresh",33.752785015590504],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (-.f64 (+.f64 1 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1)) 2))","fresh",28.91123070388977],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))))","fresh",34.87956260876693],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (/.f64 (PI.f64) (cbrt.f64 (/.f64 180 angle)))))) 2))","fresh",21.60408767802294],["(+.f64 (pow.f64 (*.f64 a (log.f64 (fma.f64 (pow.f64 (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2) (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 1))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.52332794544621],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))","fresh",24.308723501679008],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (expm1.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2))","fresh",26.419358737209908],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 b (*.f64 b 1/765275040000000))) (*.f64 (*.f64 b b) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))))","fresh",36.4522580885425],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b))","fresh",21.675560277114073],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2))","fresh",28.96699584174042],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (sqrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (/.f64 (sqrt.f64 (PI.f64)) (cbrt.f64 (/.f64 180 angle)))))) 2))","fresh",21.685062271139888],["(+.f64 (pow.f64 (*.f64 a (log.f64 (expm1.f64 (log1p.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.542267319345516],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)) 4)))","fresh",21.618644791241902],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 angle angle) (*.f64 1/32400 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 b b)))))","fresh",35.04953862285228],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (*.f64 (cbrt.f64 (PI.f64)) (*.f64 angle 1/180))))) 2))","fresh",21.851575303545346],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (sqrt.f64 (PI.f64)) 180) (/.f64 (sqrt.f64 (PI.f64)) (/.f64 1 angle))))) 2))","fresh",21.644394566936835],["(+.f64 (pow.f64 (*.f64 a (log.f64 (-.f64 (/.f64 1 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (/.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",22.100537635321135],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 3)))","fresh",22.328693793782683],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (expm1.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",26.457171020202527],["(+.f64 (pow.f64 (*.f64 a (log.f64 (-.f64 (+.f64 1 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.519960653916318],["(+.f64 (pow.f64 (*.f64 a (log.f64 (/.f64 1 (/.f64 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.52196888138629],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 6)) 1/3)))","fresh",29.657539645425167],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) 2))","fresh",44.0231622141303],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 (PI.f64)) (*.f64 (sqrt.f64 (PI.f64)) (*.f64 angle 1/180))))) 2))","fresh",21.62852623968124],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)) 2))","fresh",21.672818272952945],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 1/3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",43.95137374106286],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (/.f64 1 (/.f64 180 (*.f64 (PI.f64) angle))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","fresh",21.603166479900363],["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (expm1.f64 (log1p.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) 2))","fresh",21.60366690623878]],"compiler":[[41,33],[31,26],[41,34],[39,31],[29,24],[26,21],[29,24],[27,22],[28,23],[19,16],[27,22],[27,22],[41,33],[32,27],[43,34],[38,32],[39,32],[31,22],[26,21],[50,37],[31,22],[39,31],[40,32],[28,23],[37,28],[27,20],[34,27],[34,27],[50,41],[29,24],[26,21],[30,25],[52,43],[28,23],[29,24],[32,25],[31,26],[30,25],[26,21],[30,25]],"count":[[179,40]],"kept":[{"done":[0,0],"fresh":[40,36],"new":[138,4],"picked":[1,0]}],"min-error":[20.441300525713284],"time":54.280029296875,"type":"prune"},{"accuracy":[21.511730516901064],"baseline":[21.51173051690106],"branch":[["a",21.51173051690107,1],["b",21.511730516901068,1],["angle",21.51173051690107,1],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))",21.511730516901064,1],["(*.f64 (PI.f64) (/.f64 angle 180))",21.51173051690107,1],["(*.f64 (PI.f64) (/.f64 angle 180))",21.51173051690107,1],["(/.f64 angle 180)",21.51173051690107,1],["(/.f64 angle 180)",21.51173051690107,1]],"compiler":[[4,3],[4,3],[4,3],[24,19],[8,7],[8,7],[6,5],[6,5],[2041,1480]],"count":[[71,1]],"inputs":[["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (sqrt.f64 (PI.f64)) 180) (/.f64 (sqrt.f64 (PI.f64)) (/.f64 1 angle))))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (-.f64 (/.f64 1 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (/.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (-.f64 (+.f64 1 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (pow.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (-.f64 (/.f64 1 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (/.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (-.f64 (+.f64 1 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1)) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (/.f64 (PI.f64) (cbrt.f64 (/.f64 180 angle)))))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (fma.f64 (pow.f64 (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2) (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 1))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (sqrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (/.f64 (sqrt.f64 (PI.f64)) (cbrt.f64 (/.f64 180 angle)))))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (expm1.f64 (log1p.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (*.f64 (cbrt.f64 (PI.f64)) (*.f64 angle 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (/.f64 1 (/.f64 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 (PI.f64)) (*.f64 (sqrt.f64 (PI.f64)) (*.f64 angle 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (expm1.f64 (log1p.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) 2))","(+.f64 (pow.f64 (*.f64 a (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (/.f64 (PI.f64) (cbrt.f64 (/.f64 180 angle)))))) 2))","(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (-.f64 (+.f64 1 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1)) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (sqrt.f64 (PI.f64)) 180) (/.f64 (sqrt.f64 (PI.f64)) (/.f64 1 angle))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 3) 1/3))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 (PI.f64)) (*.f64 (sqrt.f64 (PI.f64)) (*.f64 angle 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)) 2))","(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (expm1.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (sqrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (/.f64 (sqrt.f64 (PI.f64)) (cbrt.f64 (/.f64 180 angle)))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (pow.f64 (cbrt.f64 (/.f64 180 angle)) 2)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (/.f64 1 (/.f64 180 (*.f64 (PI.f64) angle))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (*.f64 (cbrt.f64 (PI.f64)) (*.f64 angle 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (/.f64 180 (*.f64 (PI.f64) angle)) -1))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (sqrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (sqrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2))) 2))","(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 1 (/.f64 180 (*.f64 (PI.f64) angle))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (sin.f64 1)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (expm1.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 3) 1/3))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (expm1.f64 (log1p.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (expm1.f64 (log1p.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 b (*.f64 b 1/765275040000000))) (*.f64 (*.f64 b b) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (*.f64 angle angle) (*.f64 1/32400 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 b b)))))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))) 3)))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 6)) 1/3)))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2))))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b) 2)) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) b)) 4)))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 1/3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))"]],"link":["."],"name":["ab-angle->ABCF C"],"oracle":[53.107267836711124],"outputs":[["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))"]],"time":184.9560546875,"times":[["a",18.224853515625],["b",18.466796875],["angle",19.180908203125],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))",16.2548828125],["(*.f64 (PI.f64) (/.f64 angle 180))",20.142822265625],["(*.f64 (PI.f64) (/.f64 angle 180))",17.966064453125],["(/.f64 angle 180)",18.364990234375],["(/.f64 angle 180)",18.683837890625]],"type":"regimes"},{"compiler":[[28,23]],"egraph":[[1,31,41,7.5833e-5],[0,23,41,4.3042e-5]],"inputs":[["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (pow.f64 (*.f64 a (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2) (pow.f64 (*.f64 b (sin.f64 (/.f64 (PI.f64) (/.f64 180 angle)))) 2))"]],"stop":[["fuel",1],["saturated",1]],"time":8.965087890625,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[28,23]],"remove-preprocessing":[[]],"time":13.93798828125,"type":"end"}]