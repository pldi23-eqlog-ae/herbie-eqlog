[{"compiler":[[18,14]],"method":["search"],"sampling":[[12,0.21052581434561324,0.7875224907002569,0.0019516949541298345],[11,0.1403505428970755,0.8576977621487947,0.0019516949541298345],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":159.638916015625,"type":"analyze"},{"outcomes":[["body",256,"invalid",70.021484375,1245],["body",1024,"valid",0.125,1],["body",256,"valid",439.879638671875,8255]],"time":520.59912109375,"type":"sample"},{"compiler":[[17,13]],"egraph":[[1,4,4,9.082e-6],[0,4,4,7.791e-6],[13,5870,84,0.157483502],[12,5862,84,0.136612127],[11,5862,84,0.11521962699999999],[10,5862,84,0.096382294],[9,4874,84,0.07771821],[8,4874,84,0.057720417999999996],[7,4826,84,0.04811412599999999],[6,4531,84,0.035830958999999996],[5,2538,84,0.022474834],[4,1168,84,0.009405917],[3,474,98,0.003362583],[2,218,105,0.0013175],[1,101,112,0.000544417],[0,40,112,0.000166375]],"inputs":[["0","1","2","3"],["(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 y z) 2)) t)","(+.f64 (-.f64 (*.f64 (/.f64 1 8) y) (/.f64 (*.f64 x z) 2)) t)","(+.f64 (-.f64 (*.f64 (/.f64 1 8) z) (/.f64 (*.f64 y x) 2)) t)","(+.f64 (-.f64 (*.f64 (/.f64 1 8) t) (/.f64 (*.f64 y z) 2)) x)","(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 z y) 2)) t)","(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 t z) 2)) y)","(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 y t) 2)) z)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","1","3"],["(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 y z) 2)) t)","(+.f64 (-.f64 (*.f64 1/8 x) (/.f64 (*.f64 y z) 2)) t)","(-.f64 (+.f64 t (*.f64 1/8 x)) (/.f64 (*.f64 y z) 2))","(fma.f64 1/8 x (fma.f64 -1 (*.f64 y (/.f64 z 2)) t))","(-.f64 (fma.f64 1/8 x t) (*.f64 y (/.f64 z 2)))","(fma.f64 1/8 x (fma.f64 y (*.f64 -1/2 z) t))","(fma.f64 1/8 x (fma.f64 y (*.f64 z -1/2) t))","(+.f64 (-.f64 (*.f64 (/.f64 1 8) y) (/.f64 (*.f64 x z) 2)) t)","(+.f64 t (-.f64 (*.f64 1/8 y) (/.f64 x (/.f64 2 z))))","(+.f64 t (-.f64 (*.f64 1/8 y) (*.f64 (/.f64 x 2) z)))","(fma.f64 1/8 y (fma.f64 -1 (*.f64 z (/.f64 x 2)) t))","(-.f64 (fma.f64 1/8 y t) (*.f64 x (/.f64 z 2)))","(fma.f64 1/8 y (fma.f64 z (*.f64 -1/2 x) t))","(fma.f64 1/8 y (fma.f64 x (*.f64 z -1/2) t))","(+.f64 (-.f64 (*.f64 (/.f64 1 8) z) (/.f64 (*.f64 y x) 2)) t)","(+.f64 t (-.f64 (*.f64 1/8 z) (/.f64 y (/.f64 2 x))))","(+.f64 t (-.f64 (*.f64 1/8 z) (*.f64 (/.f64 y 2) x)))","(fma.f64 1/8 z (fma.f64 -1 (*.f64 x (/.f64 y 2)) t))","(-.f64 (fma.f64 1/8 z t) (*.f64 x (/.f64 y 2)))","(fma.f64 1/8 z (fma.f64 x (*.f64 -1/2 y) t))","(fma.f64 1/8 z (fma.f64 x (*.f64 y -1/2) t))","(+.f64 (-.f64 (*.f64 (/.f64 1 8) t) (/.f64 (*.f64 y z) 2)) x)","(+.f64 x (-.f64 (*.f64 1/8 t) (/.f64 (*.f64 y z) 2)))","(fma.f64 1/8 t (fma.f64 -1 (*.f64 y (/.f64 z 2)) x))","(fma.f64 1/8 t (fma.f64 (/.f64 (neg.f64 y) 2) z x))","(fma.f64 1/8 t (fma.f64 z (*.f64 -1/2 y) x))","(fma.f64 1/8 t (fma.f64 z (*.f64 y -1/2) x))","(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 z y) 2)) t)","(+.f64 (-.f64 (*.f64 1/8 x) (/.f64 (*.f64 y z) 2)) t)","(-.f64 (+.f64 t (*.f64 1/8 x)) (/.f64 (*.f64 y z) 2))","(fma.f64 1/8 x (fma.f64 -1 (*.f64 y (/.f64 z 2)) t))","(-.f64 (fma.f64 1/8 x t) (*.f64 y (/.f64 z 2)))","(fma.f64 1/8 x (fma.f64 y (*.f64 -1/2 z) t))","(fma.f64 1/8 x (fma.f64 y (*.f64 z -1/2) t))","(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 t z) 2)) y)","(+.f64 y (-.f64 (*.f64 1/8 x) (/.f64 t (/.f64 2 z))))","(+.f64 y (-.f64 (*.f64 1/8 x) (*.f64 (/.f64 t 2) z)))","(fma.f64 1/8 x (fma.f64 -1 (*.f64 z (/.f64 t 2)) y))","(-.f64 (fma.f64 1/8 x y) (*.f64 z (/.f64 t 2)))","(fma.f64 1/8 x (fma.f64 (*.f64 -1/2 z) t y))","(fma.f64 1/8 x (fma.f64 t (*.f64 z -1/2) y))","(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 y t) 2)) z)","(+.f64 z (-.f64 (*.f64 1/8 x) (/.f64 (*.f64 y t) 2)))","(+.f64 z (-.f64 (*.f64 1/8 x) (/.f64 t (/.f64 2 y))))","(fma.f64 1/8 x (fma.f64 -1 (*.f64 t (/.f64 y 2)) z))","(-.f64 (fma.f64 1/8 x z) (*.f64 y (/.f64 t 2)))","(fma.f64 1/8 x (fma.f64 t (*.f64 -1/2 y) z))","(fma.f64 1/8 x (fma.f64 y (*.f64 t -1/2) z))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort y z)"]],"time":185.85400390625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[9,1633,12,0.018412792],[8,1535,12,0.014743084],[7,1061,12,0.010545418],[6,731,12,0.006230334],[5,456,12,0.003381792],[4,236,12,0.001695292],[3,103,14,0.0007582089999999999],[2,51,15,0.000325417],[1,27,16,0.000149667],[0,15,16,5.7917e-5]],"inputs":[["(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 y z) 2)) t)"]],"method":["egg-herbie"],"outputs":[["(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 y z) 2)) t)","(+.f64 (fma.f64 1/8 x (neg.f64 (/.f64 y (/.f64 2 z)))) t)","(+.f64 (fma.f64 1/8 x (/.f64 (neg.f64 y) (/.f64 2 z))) t)","(fma.f64 1/8 x (fma.f64 -1 (*.f64 z (/.f64 y 2)) t))","(-.f64 (fma.f64 1/8 x t) (/.f64 (*.f64 y z) 2))","(fma.f64 z (*.f64 -1/2 y) (fma.f64 1/8 x t))","(fma.f64 1/8 x (fma.f64 -1/2 (*.f64 y z) t))","(fma.f64 z (*.f64 y -1/2) (fma.f64 1/8 x t))"]],"stop":[["saturated",1]],"time":30.434814453125,"type":"simplify"},{"compiler":[[26,18]],"time":0.4560546875,"type":"eval"},{"alts":[["(fma.f64 z (*.f64 y -1/2) (fma.f64 1/8 x t))","next",0]],"compiler":[[13,9],[13,9]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0],"time":0.906005859375,"type":"prune"},{"compiler":[[26,15]],"time":6.56103515625,"type":"localize"},{"compiler":[[4,4]],"time":0.098876953125,"type":"eval"},{"alts":[["(fma.f64 z (*.f64 y -1/2) (fma.f64 1/8 x t))","done",0]],"compiler":[[13,9]],"count":[[1,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[0],"time":0.565185546875,"type":"prune"},{"accuracy":[0],"baseline":[0.0],"branch":[["x",0,1],["y",0,1],["z",0,1],["t",0,1],["(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 y z) 2)) t)",0,1],["(-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 y z) 2))",0,1],["(*.f64 (/.f64 1 8) x)",0,1],["(/.f64 (*.f64 y z) 2)",0,1],["(*.f64 y z)",0,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[17,13],[15,12],[9,8],[9,7],[7,5],[26,18]],"count":[[2,1]],"inputs":[["(fma.f64 z (*.f64 y -1/2) (fma.f64 1/8 x t))","(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 y z) 2)) t)"]],"link":["."],"name":["Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, B"],"oracle":[0.00390625],"outputs":[["(fma.f64 z (*.f64 y -1/2) (fma.f64 1/8 x t))"]],"time":22.35791015625,"times":[["x",2.177978515625],["y",2.658935546875],["z",2.242919921875],["t",2.35302734375],["(+.f64 (-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 y z) 2)) t)",2.405029296875],["(-.f64 (*.f64 (/.f64 1 8) x) (/.f64 (*.f64 y z) 2))",2.343994140625],["(*.f64 (/.f64 1 8) x)",2.27197265625],["(/.f64 (*.f64 y z) 2)",2.619873046875],["(*.f64 y z)",2.39501953125]],"type":"regimes"},{"compiler":[[13,9]],"egraph":[[1,11,12,3.3208e-5],[0,10,12,2.0083e-5]],"inputs":[["(fma.f64 z (*.f64 y -1/2) (fma.f64 1/8 x t))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 z (*.f64 y -1/2) (fma.f64 1/8 x t))"]],"stop":[["done",1],["saturated",1]],"time":8.5029296875,"type":"simplify"},{"time":0.01318359375,"type":"soundness"},{"compiler":[[13,9],[13,9],[13,9]],"remove-preprocessing":[["(sort y z)"]],"time":9.85595703125,"type":"end"}]