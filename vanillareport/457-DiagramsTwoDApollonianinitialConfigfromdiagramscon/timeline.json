[{"compiler":[[19,12]],"method":["search"],"sampling":[[12,0.325694317425814,0.5333975797362882,0.1409081028378978],[11,0.20672812962357057,0.723548453682497,0.06972341669393245],[10,0.16382229139981064,0.7918077417657514,0.044369966834437946],[9,0.12481698392366525,0.8581167644751986,0.017066251601136173],[8,0.0,0.998535871389322,0.0014641286106780171],[7,0.0,0.998535871389322,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":146.546142578125,"type":"analyze"},{"outcomes":[["body",256,"invalid",202.96630859375,3868],["body",256,"valid",424.912841796875,8256]],"time":640.510009765625,"type":"sample"},{"compiler":[[18,11]],"egraph":[[0,3,3,2.458e-6],[5,3258,76,0.024346125],[4,1093,80,0.008924584],[3,441,80,0.003134084],[2,214,80,0.001362584],[1,80,80,0.000416459],[0,23,80,0.000122417]],"inputs":[["0","1","2"],["(/.f64 (-.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) (*.f64 y 2))","(/.f64 (-.f64 (+.f64 (*.f64 y y) (*.f64 x x)) (*.f64 z z)) (*.f64 x 2))","(/.f64 (-.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (*.f64 x x)) (*.f64 y 2))","(/.f64 (-.f64 (+.f64 (*.f64 x x) (*.f64 z z)) (*.f64 y y)) (*.f64 z 2))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (-.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) (*.f64 y 2))","(/.f64 (-.f64 (fma.f64 x x (*.f64 y y)) (*.f64 z z)) (*.f64 y 2))","(/.f64 (fma.f64 y y (-.f64 (*.f64 x x) (*.f64 z z))) (*.f64 y 2))","(/.f64 (+.f64 y (*.f64 (/.f64 (+.f64 x z) y) (-.f64 x z))) 2)","(/.f64 (-.f64 (+.f64 (*.f64 y y) (*.f64 x x)) (*.f64 z z)) (*.f64 x 2))","(/.f64 (-.f64 (fma.f64 x x (*.f64 y y)) (*.f64 z z)) (*.f64 x 2))","(/.f64 (fma.f64 y y (-.f64 (*.f64 x x) (*.f64 z z))) (*.f64 x 2))","(*.f64 -1/2 (-.f64 (*.f64 (/.f64 (+.f64 y z) x) (-.f64 z y)) x))","(/.f64 (-.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (*.f64 x x)) (*.f64 y 2))","(/.f64 (-.f64 (fma.f64 z z (*.f64 y y)) (*.f64 x x)) (*.f64 y 2))","(/.f64 (-.f64 (fma.f64 y y (*.f64 z z)) (*.f64 x x)) (*.f64 y 2))","(/.f64 (fma.f64 y y (-.f64 (*.f64 z z) (*.f64 x x))) (*.f64 y 2))","(/.f64 (-.f64 y (*.f64 (/.f64 (+.f64 x z) y) (-.f64 x z))) 2)","(/.f64 (-.f64 (+.f64 (*.f64 x x) (*.f64 z z)) (*.f64 y y)) (*.f64 z 2))","(/.f64 (-.f64 (fma.f64 x x (*.f64 z z)) (*.f64 y y)) (*.f64 z 2))","(/.f64 (-.f64 (fma.f64 z z (*.f64 x x)) (*.f64 y y)) (*.f64 z 2))","(/.f64 (fma.f64 x x (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 z 2))","(*.f64 -1/2 (-.f64 (*.f64 (/.f64 (-.f64 y x) z) (+.f64 x y)) z))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":50.637939453125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[7,4453,19,0.032394706999999995],[6,1896,19,0.015809207],[5,755,20,0.005479665],[4,320,20,0.002220749],[3,136,20,0.000965583],[2,67,20,0.000423833],[1,27,20,0.000186499],[0,12,20,6.3333e-5]],"inputs":[["(/.f64 (-.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) (*.f64 y 2))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) (*.f64 y 2))","(/.f64 (-.f64 (fma.f64 x x (*.f64 y y)) (*.f64 z z)) (*.f64 y 2))","(/.f64 (fma.f64 x x (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 y 2))","(/.f64 (fma.f64 y y (-.f64 (*.f64 x x) (*.f64 z z))) (*.f64 y 2))","(*.f64 -1/2 (-.f64 (*.f64 (+.f64 x z) (/.f64 (-.f64 z x) y)) y))","(*.f64 -1/2 (-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y))"]],"stop":[["node limit",1]],"time":45.466064453125,"type":"simplify"},{"compiler":[[31,18]],"time":0.450927734375,"type":"eval"},{"alts":[["(*.f64 -1/2 (-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y))","next",12.331050795068045]],"compiler":[[16,10],[16,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[12.331050795068045],"time":0.93603515625,"type":"prune"},{"compiler":[[53,11]],"locations":[["(-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y)",0.0078125,true],["(fma.f64 z z (*.f64 x (neg.f64 x)))",0.5039007452111204,true],["(/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y)",13.286853669550004,true]],"time":8.56103515625,"type":"localize"},{"count":[[3,96]],"series":[["(-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y)","y","-inf",0.18505859375],["(-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y)","y","inf",0.29296875],["(-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y)","y","0",0.2080078125],["(-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y)","x","-inf",0.19189453125],["(-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y)","x","inf",0.18701171875],["(-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y)","x","0",0.2041015625],["(-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y)","z","-inf",0.1728515625],["(-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y)","z","inf",0.197998046875],["(-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y)","z","0",0.198974609375],["(fma.f64 z z (*.f64 x (neg.f64 x)))","x","-inf",0.150146484375],["(fma.f64 z z (*.f64 x (neg.f64 x)))","x","inf",0.1708984375],["(fma.f64 z z (*.f64 x (neg.f64 x)))","x","0",0.14794921875],["(fma.f64 z z (*.f64 x (neg.f64 x)))","z","-inf",0.153076171875],["(fma.f64 z z (*.f64 x (neg.f64 x)))","z","inf",0.193115234375],["(fma.f64 z z (*.f64 x (neg.f64 x)))","z","0",0.18115234375],["(/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y)","y","-inf",0.34716796875],["(/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y)","y","inf",0.738037109375],["(/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y)","y","0",0.655029296875],["(/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y)","x","-inf",0.194091796875],["(/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y)","x","inf",0.4638671875],["(/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y)","x","0",0.52197265625],["(/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y)","z","-inf",0.721923828125],["(/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y)","z","inf",0.56884765625],["(/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y)","z","0",0.89990234375]],"time":9.141845703125,"type":"series"},{"count":[[3,91]],"egraph":[[2,2822,30,0.023940459],[1,198,30,0.00374675],[0,9,39,0.000225875]],"inputs":[["(/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y)","(fma.f64 z z (*.f64 x (neg.f64 x)))","(-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 z x) 2) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (hypot.f64 z x) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y)) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y)) 2) (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 z x) 2)) 2) (*.f64 (cbrt.f64 (pow.f64 (hypot.f64 z x) 2)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 z x) (sqrt.f64 y)) (/.f64 (hypot.f64 z x) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 z x) (*.f64 (hypot.f64 z x) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (hypot.f64 z x) 2)) (/.f64 1 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (pow.f64 (hypot.f64 z x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 z x) 2)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (hypot.f64 z x) 2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 z x) 1) (/.f64 (hypot.f64 z x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 y y))) (/.f64 (pow.f64 (hypot.f64 z x) 2) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 z x) 2)) 2) (cbrt.f64 (*.f64 y y))) (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 z x) (cbrt.f64 (*.f64 y y))) (/.f64 (hypot.f64 z x) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 y)) (/.f64 (pow.f64 (hypot.f64 z x) 2) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 z x) 2)) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 (pow.f64 (hypot.f64 z x) 2)) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (hypot.f64 z x) (sqrt.f64 y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (pow.f64 (hypot.f64 z x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z z) 1) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 z z) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (hypot.f64 z x) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 z x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (hypot.f64 z x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 z x) 2)) (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 z x) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 z x) 2)) 2) (cbrt.f64 (pow.f64 (hypot.f64 z x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 z x) (hypot.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 z z) 3) (pow.f64 (*.f64 x x) 3)) (+.f64 (*.f64 (*.f64 z z) (*.f64 z z)) (-.f64 (*.f64 x (pow.f64 x 3)) (*.f64 (*.f64 z z) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 z z) (*.f64 z z)) (*.f64 x (pow.f64 x 3))) (pow.f64 (hypot.f64 z x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 z x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (hypot.f64 z x) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 z x) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 z x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 z x) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (hypot.f64 z x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (hypot.f64 z x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 z x) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (hypot.f64 z x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (hypot.f64 z x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (hypot.f64 z x) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y) (fma.f64 (neg.f64 (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y) (fma.f64 (neg.f64 (sqrt.f64 y)) (sqrt.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 y) (/.f64 (pow.f64 (hypot.f64 z x) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y)) (pow.f64 (cbrt.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y)) 2) (cbrt.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y)) (sqrt.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 3) (pow.f64 y 3)) (/.f64 1 (+.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 2) (*.f64 y (+.f64 y (/.f64 (pow.f64 (hypot.f64 z x) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 2) (*.f64 y y)) (/.f64 1 (+.f64 y (/.f64 (pow.f64 (hypot.f64 z x) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (hypot.f64 z x) (sqrt.f64 y)) (sqrt.f64 y)) (-.f64 (/.f64 (hypot.f64 z x) (sqrt.f64 y)) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 2) (*.f64 y (+.f64 y (/.f64 (pow.f64 (hypot.f64 z x) 2) y)))) (-.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 y (/.f64 (pow.f64 (hypot.f64 z x) 2) y)) (-.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 2) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 3) (pow.f64 y 3)) (+.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 2) (*.f64 y (+.f64 y (/.f64 (pow.f64 (hypot.f64 z x) 2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 2) (*.f64 y y)) (+.f64 y (/.f64 (pow.f64 (hypot.f64 z x) 2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 3) (pow.f64 y 3))) (neg.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 2) (*.f64 y (+.f64 y (/.f64 (pow.f64 (hypot.f64 z x) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 2) (*.f64 y y))) (neg.f64 (+.f64 y (/.f64 (pow.f64 (hypot.f64 z x) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 3) (pow.f64 (neg.f64 y) 3)) (+.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 2) (-.f64 (*.f64 (neg.f64 y) (neg.f64 y)) (*.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) 2) (*.f64 (neg.f64 y) (neg.f64 y))) (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (hypot.f64 z x) 2) (/.f64 1 y) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (pow.f64 (hypot.f64 z x) 2) y) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y)) 2) (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 z x) 2) y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (hypot.f64 z x) (sqrt.f64 y)) (/.f64 (hypot.f64 z x) (sqrt.f64 y)) (neg.f64 y))))))"]],"rules":[["egg-rr",37],["egg-rr",23],["egg-rr",31]],"stop":[["node limit",1]],"time":52.84619140625,"type":"rewrite"},{"count":[[187,113]],"egraph":[[6,6258,1151,0.032519417999999994],[5,2167,1151,0.019451958999999998],[4,598,1151,0.006618041999999999],[3,230,1151,0.002091001],[2,109,1153,0.001013501],[1,55,1327,0.000498876],[0,22,1421,0.000194584]],"inputs":[["(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(*.f64 -1 (pow.f64 x 2))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(*.f64 -1 (pow.f64 x 2))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(*.f64 -1 (pow.f64 x 2))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(-.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(/.f64 (pow.f64 z 2) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(/.f64 (pow.f64 z 2) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (/.f64 (pow.f64 z 2) y) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(+.f64 (*.f64 -1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(*.f64 -1 y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 -1 y) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 -1 y) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 -1 y) (/.f64 (pow.f64 z 2) y)))","(*.f64 -1 y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 -1 y) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 -1 y) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 -1 y) (/.f64 (pow.f64 z 2) y)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(/.f64 (neg.f64 (*.f64 x x)) y)","(neg.f64 (/.f64 x (/.f64 y x)))","(*.f64 (neg.f64 x) (/.f64 x y))","(*.f64 x (/.f64 (neg.f64 x) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(/.f64 (neg.f64 (*.f64 x x)) y)","(neg.f64 (/.f64 x (/.f64 y x)))","(*.f64 (neg.f64 x) (/.f64 x y))","(*.f64 x (/.f64 (neg.f64 x) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(/.f64 (neg.f64 (*.f64 x x)) y)","(neg.f64 (/.f64 x (/.f64 y x)))","(*.f64 (neg.f64 x) (/.f64 x y))","(*.f64 x (/.f64 (neg.f64 x) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(*.f64 -1 (pow.f64 x 2))","(neg.f64 (*.f64 x x))","(*.f64 x (neg.f64 x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(*.f64 -1 (pow.f64 x 2))","(neg.f64 (*.f64 x x))","(*.f64 x (neg.f64 x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(*.f64 -1 (pow.f64 x 2))","(neg.f64 (*.f64 x x))","(*.f64 x (neg.f64 x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 x x)))","(-.f64 (*.f64 z z) (*.f64 x x))","(-.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) y)","(-.f64 (/.f64 (neg.f64 (*.f64 x x)) y) y)","(-.f64 (neg.f64 (/.f64 x (/.f64 y x))) y)","(neg.f64 (fma.f64 (/.f64 x y) x y))","(neg.f64 (fma.f64 x (/.f64 x y) y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 z (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 z (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (/.f64 (pow.f64 z 2) y) y)","(-.f64 (/.f64 (*.f64 z z) y) y)","(-.f64 (/.f64 z (/.f64 y z)) y)","(-.f64 (*.f64 z (/.f64 z y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(/.f64 (neg.f64 (*.f64 x x)) y)","(neg.f64 (/.f64 x (/.f64 y x)))","(*.f64 (neg.f64 x) (/.f64 x y))","(*.f64 x (/.f64 (neg.f64 x) y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(/.f64 (neg.f64 (*.f64 x x)) y)","(neg.f64 (/.f64 x (/.f64 y x)))","(*.f64 (neg.f64 x) (/.f64 x y))","(*.f64 x (/.f64 (neg.f64 x) y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(/.f64 (+.f64 (pow.f64 z 2) (*.f64 -1 (pow.f64 x 2))) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x)))","(/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)","(/.f64 (+.f64 x z) (/.f64 y (-.f64 z x)))","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(+.f64 (*.f64 -1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(+.f64 (*.f64 -1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(+.f64 (*.f64 -1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 -1 y) (/.f64 (pow.f64 z 2) y)))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 -1 y) (/.f64 (pow.f64 z 2) y)))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 -1 y) (/.f64 (pow.f64 z 2) y)))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 -1 y) (/.f64 (pow.f64 z 2) y)))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 -1 y) (/.f64 (pow.f64 z 2) y)))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 -1 y) (/.f64 (pow.f64 z 2) y)))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 z z) y)) y)","(-.f64 (-.f64 (/.f64 z (/.f64 y z)) (/.f64 x (/.f64 y x))) y)","(-.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y) y)","(-.f64 (/.f64 (+.f64 x z) (/.f64 y (-.f64 z x))) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)"]],"stop":[["node limit",1]],"time":65.286865234375,"type":"simplify"},{"compiler":[[1883,1081]],"time":21.908935546875,"type":"eval"},{"alts":[["(*.f64 -1/2 (-.f64 (/.f64 (/.f64 (-.f64 (*.f64 (*.f64 z z) (*.f64 z z)) (*.f64 x (pow.f64 x 3))) (pow.f64 (hypot.f64 z x) 2)) y) y))","fresh",28.99768570091252],["(*.f64 -1/2 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y))","next",0.11328125],["(*.f64 -1/2 (-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y))","done",12.331050795068045],["(*.f64 -1/2 (-.f64 (*.f64 (hypot.f64 z x) (*.f64 (hypot.f64 z x) (/.f64 1 y))) y))","fresh",15.278708038349414],["(*.f64 -1/2 (-.f64 (*.f64 (pow.f64 (hypot.f64 z x) 2) (/.f64 1 y)) y))","fresh",22.34680263134903]],"compiler":[[28,17],[16,10],[16,10],[18,11],[16,12],[28,17],[16,10],[18,11],[16,12]],"count":[[114,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[113,4],"picked":[1,1]}],"min-error":[0.04296875],"time":26.155029296875,"type":"prune"},{"compiler":[[51,11]],"locations":[["(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)",0.0078125,true],["(/.f64 (-.f64 z x) y)",0.015625,true],["(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))",0.28353500976844204,true]],"time":8.18017578125,"type":"localize"},{"count":[[3,96]],"series":[["(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","y","-inf",0.169921875],["(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","y","inf",0.18310546875],["(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","y","0",0.20703125],["(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","x","-inf",0.2509765625],["(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","x","inf",0.281005859375],["(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","x","0",0.201904296875],["(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","z","-inf",0.22900390625],["(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","z","inf",0.31689453125],["(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)","z","0",0.298828125],["(/.f64 (-.f64 z x) y)","y","-inf",0.291015625],["(/.f64 (-.f64 z x) y)","y","inf",0.322998046875],["(/.f64 (-.f64 z x) y)","y","0",0.287109375],["(/.f64 (-.f64 z x) y)","x","-inf",0.73193359375],["(/.f64 (-.f64 z x) y)","x","inf",0.286865234375],["(/.f64 (-.f64 z x) y)","x","0",0.245849609375],["(/.f64 (-.f64 z x) y)","z","-inf",0.341064453125],["(/.f64 (-.f64 z x) y)","z","inf",0.259033203125],["(/.f64 (-.f64 z x) y)","z","0",0.257080078125],["(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","y","-inf",0.340087890625],["(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","y","inf",0.39208984375],["(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","y","0",1.18212890625],["(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","x","-inf",0.35986328125],["(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","x","inf",0.3759765625],["(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","x","0",0.4228515625],["(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","z","-inf",0.48193359375],["(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","z","inf",0.427978515625],["(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","z","0",0.58203125]],"time":10.18701171875,"type":"series"},{"count":[[3,275]],"egraph":[[2,3904,36,0.033094458],[1,225,36,0.004708666],[0,9,36,0.000243]],"inputs":[["(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(/.f64 (-.f64 z x) y)","(-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x (-.f64 z x)) y) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (/.f64 (-.f64 z x) y)) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x (-.f64 z x)) y) 1) (*.f64 (*.f64 z (/.f64 (-.f64 z x) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y))) (cbrt.f64 (pow.f64 (exp.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 z x) (/.f64 y (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 z x) (/.f64 y (-.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 y (-.f64 (*.f64 z z) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 z 3) (pow.f64 x 3)) (*.f64 (/.f64 y (-.f64 z x)) (fma.f64 z (-.f64 z x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z z) (*.f64 x x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 z z)) (*.f64 (/.f64 y (-.f64 z x)) (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 z z) (*.f64 x x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 z x) (+.f64 (pow.f64 z 3) (pow.f64 x 3))) (*.f64 y (fma.f64 z (-.f64 z x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 z x)) (+.f64 (pow.f64 z 3) (pow.f64 x 3))) (*.f64 (neg.f64 y) (fma.f64 z (-.f64 z x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 z x) (-.f64 (*.f64 x x) (*.f64 z z))) (*.f64 y (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 z x)) (-.f64 (*.f64 x x) (*.f64 z z))) (*.f64 (neg.f64 y) (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 z 3) (pow.f64 x 3)) (-.f64 z x)) (*.f64 (fma.f64 z (-.f64 z x) (*.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 z z)) (-.f64 z x)) (*.f64 (-.f64 x z) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 z 3) (pow.f64 x 3)) 1) (*.f64 (fma.f64 z (-.f64 z x) (*.f64 x x)) (/.f64 y (-.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 z z)) 1) (*.f64 (-.f64 x z) (/.f64 y (-.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 z 3) (pow.f64 x 3)) (neg.f64 (-.f64 z x))) (*.f64 (fma.f64 z (-.f64 z x) (*.f64 x x)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 z z)) (neg.f64 (-.f64 z x))) (*.f64 (-.f64 x z) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 x (-.f64 z x)) y) 3) (pow.f64 (*.f64 z (/.f64 (-.f64 z x) y)) 3)) (fma.f64 (/.f64 (*.f64 x (-.f64 z x)) y) (/.f64 (*.f64 x (-.f64 z x)) y) (-.f64 (*.f64 (*.f64 z (/.f64 (-.f64 z x) y)) (*.f64 z (/.f64 (-.f64 z x) y))) (*.f64 (/.f64 (*.f64 x (-.f64 z x)) y) (*.f64 z (/.f64 (-.f64 z x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x (-.f64 z x)) y) (/.f64 (*.f64 x (-.f64 z x)) y)) (*.f64 (*.f64 z (/.f64 (-.f64 z x) y)) (*.f64 z (/.f64 (-.f64 z x) y)))) (-.f64 (/.f64 (*.f64 x (-.f64 z x)) y) (*.f64 z (/.f64 (-.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) (sqrt.f64 y)) (sqrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 z z) (*.f64 x x)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 z x)) (+.f64 z x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 z 3) (pow.f64 x 3)) (/.f64 (-.f64 z x) y)) (fma.f64 z (-.f64 z x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 z z)) (/.f64 (-.f64 z x) y)) (-.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 (pow.f64 z 3) (pow.f64 x 3))) (fma.f64 z (-.f64 z x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z x) y) (-.f64 (*.f64 x x) (*.f64 z z))) (-.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 z x) (neg.f64 (-.f64 z x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 (*.f64 z z) (*.f64 x x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 z (/.f64 (-.f64 z x) y))) (exp.f64 (/.f64 (*.f64 x (-.f64 z x)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 (-.f64 z x) y) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 (-.f64 z x) y) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z x) (*.f64 (/.f64 1 y) x) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z x) (*.f64 (/.f64 1 y) z) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) y) z (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) y) x (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x (-.f64 z x)) y) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (/.f64 (-.f64 z x) y)) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 (-.f64 z x) y)) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2) (*.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) x) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2) (*.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) z) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 (-.f64 z x) y)) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 (-.f64 z x) y)) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (*.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) x) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (*.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) z) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 (-.f64 z x) y)) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (-.f64 z x)) (/.f64 1 y) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x (-.f64 z x)) y) 1 (*.f64 (*.f64 z (/.f64 (-.f64 z x) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 z (/.f64 (-.f64 z x) y))) (cbrt.f64 (*.f64 z (/.f64 (-.f64 z x) y)))) (cbrt.f64 (*.f64 z (/.f64 (-.f64 z x) y))) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 x (-.f64 z x)) y)) (cbrt.f64 (/.f64 (*.f64 x (-.f64 z x)) y))) (cbrt.f64 (/.f64 (*.f64 x (-.f64 z x)) y)) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 z (/.f64 (-.f64 z x) y))) (sqrt.f64 (*.f64 z (/.f64 (-.f64 z x) y))) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (*.f64 x (-.f64 z x)) y)) (sqrt.f64 (/.f64 (*.f64 x (-.f64 z x)) y)) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (sqrt.f64 x)) (*.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (sqrt.f64 x)) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 x) (sqrt.f64 (/.f64 (-.f64 z x) y))) (*.f64 (sqrt.f64 x) (sqrt.f64 (/.f64 (-.f64 z x) y))) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (sqrt.f64 z)) (*.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (sqrt.f64 z)) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 z) (sqrt.f64 (/.f64 (-.f64 z x) y))) (*.f64 (sqrt.f64 z) (sqrt.f64 (/.f64 (-.f64 z x) y))) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (-.f64 z x)) (/.f64 1 y) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (sqrt.f64 x)) (sqrt.f64 x) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2)) (cbrt.f64 (/.f64 (-.f64 z x) y)) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 (/.f64 (-.f64 z x) y))) (sqrt.f64 (/.f64 (-.f64 z x) y)) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (pow.f64 (cbrt.f64 z) 2)) (cbrt.f64 z) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (sqrt.f64 z)) (sqrt.f64 z) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2)) (cbrt.f64 (/.f64 (-.f64 z x) y)) (/.f64 (*.f64 x (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (sqrt.f64 (/.f64 (-.f64 z x) y))) (sqrt.f64 (/.f64 (-.f64 z x) y)) (/.f64 (*.f64 x (-.f64 z x)) y))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z y) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 z x) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 z x) y))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 z x) y))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 z x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 z x) y)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 z x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z y) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 z x) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z x) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z x) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 z x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2) (cbrt.f64 (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) (*.f64 (cbrt.f64 (-.f64 z x)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (sqrt.f64 (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 z x)) (*.f64 (sqrt.f64 (-.f64 z x)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 z x)) (/.f64 1 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (-.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (-.f64 z x) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 y)) (/.f64 (-.f64 z x) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) 1) (/.f64 (cbrt.f64 (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z x)) 1) (/.f64 (sqrt.f64 (-.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z x)) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 (-.f64 z x)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) (sqrt.f64 y)) (/.f64 (cbrt.f64 (-.f64 z x)) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z x) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 z x) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 z x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 z x) 3) (pow.f64 y 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 y (-.f64 z x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 z x) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 z x) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 z x) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 z x) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 z x) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 1 y) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 z y) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 z y)) (cbrt.f64 (/.f64 z y))) (cbrt.f64 (/.f64 z y)) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 z y)) (sqrt.f64 (/.f64 z y)) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) y) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) y) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 z (cbrt.f64 y)) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 y)) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 y)) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 y)) (/.f64 z (sqrt.f64 y)) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 z) (sqrt.f64 y)) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 y)) (/.f64 (sqrt.f64 z) (sqrt.f64 y)) (neg.f64 (/.f64 x y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 y) (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x (-.f64 z x)) y) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y))) (cbrt.f64 (exp.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) 2) (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (sqrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 3) (pow.f64 y 3)) (/.f64 1 (fma.f64 y (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y) (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2) (*.f64 y y)) (/.f64 1 (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (sqrt.f64 y)) (-.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 y (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y) (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2)) (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y) (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 3) (pow.f64 y 3)) (fma.f64 y (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y) (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2) (*.f64 y y)) (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 3) (pow.f64 y 3))) (neg.f64 (fma.f64 y (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y) (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2) (*.f64 y y))) (neg.f64 (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 3) (pow.f64 (neg.f64 y) 3)) (+.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2) (-.f64 (*.f64 (neg.f64 y) (neg.f64 y)) (*.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2) (*.f64 (neg.f64 y) (neg.f64 y))) (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 y (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y) (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2)) (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 3) (pow.f64 y 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y) (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2) (*.f64 y y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))) (exp.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (+.f64 1 (expm1.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))) (+.f64 1 (expm1.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))) (exp.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (/.f64 1 (exp.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))) (/.f64 1 (exp.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 y)) (pow.f64 (exp.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 y)) (pow.f64 (exp.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 y)) (+.f64 1 (expm1.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 y)) (+.f64 1 (expm1.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 (-.f64 z x) y) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z x) (*.f64 (/.f64 1 y) (+.f64 z x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z x) (*.f64 (/.f64 1 y) (+.f64 z x)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z x) (*.f64 (/.f64 1 y) x) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) y) x (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 1 (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 1 (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) 1 (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) 1 (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) 1 (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 y) (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x (-.f64 z x)) y) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) 2) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) 2) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) 2) (cbrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) 2) (cbrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 y) 2) (neg.f64 (cbrt.f64 y)) (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) 2) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) 2) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) 2) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) 2) (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) 2) (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) 2) (cbrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2) (*.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2) (*.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2) (*.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) x) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 (-.f64 z x) y)) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 z x) 2)) (*.f64 (cbrt.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 z x) 2)) (*.f64 (cbrt.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (neg.f64 (sqrt.f64 y)) (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (sqrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (sqrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (sqrt.f64 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) y)) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (*.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (*.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (*.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) x) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 (-.f64 z x) y)) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 z x)) (*.f64 (sqrt.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 z x)) (*.f64 (sqrt.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 3) (pow.f64 y 3)) (/.f64 1 (fma.f64 y (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y) (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2))) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 3) (pow.f64 y 3)) (/.f64 1 (fma.f64 y (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y) (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2))) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 3) (pow.f64 y 3)) (/.f64 1 (fma.f64 y (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y) (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2))) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2) (*.f64 y y)) (/.f64 1 (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y)) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2) (*.f64 y y)) (/.f64 1 (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y)) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)) 2) (*.f64 y y)) (/.f64 1 (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) y)) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 z z) (*.f64 x x)) (/.f64 1 y) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 z z) (*.f64 x x)) (/.f64 1 y) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (neg.f64 y)) (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 x (-.f64 z x)) y)) (cbrt.f64 (/.f64 (*.f64 x (-.f64 z x)) y))) (cbrt.f64 (/.f64 (*.f64 x (-.f64 z x)) y)) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 y)) (sqrt.f64 (neg.f64 y)) (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (*.f64 x (-.f64 z x)) y)) (sqrt.f64 (/.f64 (*.f64 x (-.f64 z x)) y)) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 y)) (sqrt.f64 y) (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 y (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) 1) (/.f64 (+.f64 z x) y) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) 1) (/.f64 (+.f64 z x) y) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (+.f64 z x) (cbrt.f64 y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (+.f64 z x) (cbrt.f64 y)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) (sqrt.f64 y)) (/.f64 (+.f64 z x) (sqrt.f64 y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) (sqrt.f64 y)) (/.f64 (+.f64 z x) (sqrt.f64 y)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (sqrt.f64 y)) (-.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (sqrt.f64 y)) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (sqrt.f64 y)) (-.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (sqrt.f64 y)) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (sqrt.f64 y)) (-.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))) (sqrt.f64 y)) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (sqrt.f64 x)) (*.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (sqrt.f64 x)) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 x) (sqrt.f64 (/.f64 (-.f64 z x) y))) (*.f64 (sqrt.f64 x) (sqrt.f64 (/.f64 (-.f64 z x) y))) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y) (*.f64 (/.f64 (-.f64 z x) y) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (-.f64 z x)) (/.f64 1 y) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (cbrt.f64 (pow.f64 (+.f64 z x) 2))) (cbrt.f64 (+.f64 z x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (cbrt.f64 (pow.f64 (+.f64 z x) 2))) (cbrt.f64 (+.f64 z x)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (sqrt.f64 (+.f64 z x))) (sqrt.f64 (+.f64 z x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (sqrt.f64 (+.f64 z x))) (sqrt.f64 (+.f64 z x)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z x) (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2)) (cbrt.f64 (/.f64 (-.f64 z x) y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z x) (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2)) (cbrt.f64 (/.f64 (-.f64 z x) y)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z x) (sqrt.f64 (/.f64 (-.f64 z x) y))) (sqrt.f64 (/.f64 (-.f64 z x) y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z x) (sqrt.f64 (/.f64 (-.f64 z x) y))) (sqrt.f64 (/.f64 (-.f64 z x) y)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (sqrt.f64 x)) (sqrt.f64 x) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2)) (cbrt.f64 (/.f64 (-.f64 z x) y)) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 (/.f64 (-.f64 z x) y))) (sqrt.f64 (/.f64 (-.f64 z x) y)) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y)))))))"]],"rules":[["egg-rr",139],["egg-rr",52],["egg-rr",84]],"stop":[["node limit",1]],"time":74.2939453125,"type":"rewrite"},{"count":[[371,307]],"egraph":[[4,4004,1023,0.024771292],[3,1244,1023,0.008967209],[2,347,1165,0.003593584],[1,132,1403,0.0011074169999999999],[0,43,1761,0.000338917]],"inputs":[["(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(*.f64 -1 (/.f64 x y))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(/.f64 z y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(/.f64 z y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(/.f64 z y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (/.f64 x y))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (/.f64 x y))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(-.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (/.f64 (pow.f64 z 2) y) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(*.f64 -1 y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(*.f64 -1 y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (/.f64 (neg.f64 x) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (/.f64 (neg.f64 x) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(/.f64 (*.f64 z z) y)","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(/.f64 (*.f64 z z) y)","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (/.f64 (pow.f64 z 2) y))","(/.f64 (*.f64 z z) y)","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (/.f64 (neg.f64 x) y))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (/.f64 (neg.f64 x) y))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (/.f64 (neg.f64 x) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (/.f64 (neg.f64 x) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(/.f64 z y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(/.f64 z y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(/.f64 z y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(+.f64 (/.f64 z y) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 x y)) (/.f64 z y))","(-.f64 (/.f64 z y) (/.f64 x y))","(/.f64 (-.f64 z x) y)","(-.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) y)","(-.f64 (neg.f64 (/.f64 (*.f64 x x) y)) y)","(-.f64 (/.f64 (*.f64 (neg.f64 x) x) y) y)","(-.f64 (/.f64 (neg.f64 x) (/.f64 y x)) y)","(neg.f64 (fma.f64 (/.f64 x y) x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z)) y)","(-.f64 (neg.f64 (/.f64 (*.f64 x x) y)) y)","(-.f64 (/.f64 (*.f64 (neg.f64 x) x) y) y)","(-.f64 (/.f64 (neg.f64 x) (/.f64 y x)) y)","(neg.f64 (fma.f64 (/.f64 x y) x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(/.f64 (*.f64 z z) y)","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(/.f64 (*.f64 z z) y)","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(-.f64 (/.f64 (pow.f64 z 2) y) y)","(-.f64 (/.f64 (*.f64 z z) y) y)","(-.f64 (*.f64 (/.f64 z y) z) y)","(-.f64 (*.f64 z (/.f64 z y)) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (/.f64 (*.f64 z z) y) y)","(-.f64 (*.f64 (/.f64 z y) z) y)","(-.f64 (*.f64 z (/.f64 z y)) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (/.f64 (neg.f64 x) y))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (/.f64 (neg.f64 x) y))","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (/.f64 (neg.f64 x) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (/.f64 (neg.f64 x) y))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 x x) y)) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)"]],"stop":[["node limit",1]],"time":58.14892578125,"type":"simplify"},{"compiler":[[6811,2060]],"time":48.81396484375,"type":"eval"},{"alts":[["(*.f64 -1/2 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 (-.f64 z x) y)) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y))))","fresh",0.23312382814753613],["(*.f64 -1/2 (-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y))","done",12.331050795068045],["(*.f64 -1/2 (-.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2) (*.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) x) (*.f64 z (/.f64 (-.f64 z x) y))) y))","fresh",0.25265507814753607],["(*.f64 -1/2 (-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y))","next",0.109375],["(*.f64 -1/2 (-.f64 (fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (pow.f64 (cbrt.f64 z) 2)) (cbrt.f64 z) (/.f64 (*.f64 x (-.f64 z x)) y)) y))","fresh",8.779281835149988],["(*.f64 -1/2 (-.f64 (*.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z y)) (cbrt.f64 (/.f64 z y))) (cbrt.f64 (/.f64 z y)) (neg.f64 (/.f64 x y))) (+.f64 x z)) y))","fresh",0.21521381837909412]],"compiler":[[27,14],[16,10],[31,14],[16,10],[27,15],[29,14],[27,14],[31,14],[16,10],[27,15],[29,14]],"count":[[312,6]],"kept":[{"done":[1,1],"fresh":[3,0],"new":[307,5],"picked":[1,0]}],"min-error":[0],"time":130.6611328125,"type":"prune"},{"compiler":[[51,11]],"locations":[["(/.f64 y (+.f64 x z))",0.0078125,true],["(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)",0.0078125,true],["(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))",0.25390625,true]],"time":7.587890625,"type":"localize"},{"count":[[3,108]],"series":[["(/.f64 y (+.f64 x z))","z","-inf",0.2919921875],["(/.f64 y (+.f64 x z))","z","inf",0.27587890625],["(/.f64 y (+.f64 x z))","z","0",0.2919921875],["(/.f64 y (+.f64 x z))","x","-inf",0.27294921875],["(/.f64 y (+.f64 x z))","x","inf",0.387939453125],["(/.f64 y (+.f64 x z))","x","0",0.421875],["(/.f64 y (+.f64 x z))","y","-inf",0.3720703125],["(/.f64 y (+.f64 x z))","y","inf",0.502197265625],["(/.f64 y (+.f64 x z))","y","0",0.375],["(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","y","-inf",0.162109375],["(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","y","inf",0.156982421875],["(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","y","0",0.18603515625],["(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","x","-inf",0.18701171875],["(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","x","inf",0.206787109375],["(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","x","0",0.178955078125],["(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","z","-inf",0.18896484375],["(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","z","inf",0.179931640625],["(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","z","0",0.185791015625],["(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","y","-inf",0.19287109375],["(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","y","inf",0.1669921875],["(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","y","0",0.181884765625],["(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","x","-inf",0.18994140625],["(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","x","inf",0.198974609375],["(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","x","0",0.179931640625],["(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","z","-inf",0.195068359375],["(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","z","inf",0.22705078125],["(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","z","0",0.248046875]],"time":6.9990234375,"type":"series"},{"count":[[3,285]],"egraph":[[2,3906,36,0.029912374000000002],[1,224,36,0.004860374],[0,9,36,0.000228666]],"inputs":[["(/.f64 (-.f64 z x) (/.f64 y (+.f64 x z)))","(-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y)","(/.f64 y (+.f64 x z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 z y) (+.f64 z x)) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (/.f64 (-.f64 z x) y)) (*.f64 x (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (/.f64 (-.f64 z x) y)) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 z x) y) z) (*.f64 (/.f64 (-.f64 z x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 z x) y) x) (*.f64 (/.f64 (-.f64 z x) y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x))) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (/.f64 z y) (+.f64 z x)) (*.f64 x (/.f64 (+.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z x) (/.f64 (+.f64 z x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 2) (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) (*.f64 (cbrt.f64 (-.f64 z x)) (/.f64 (+.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 z x)) (*.f64 (sqrt.f64 (-.f64 z x)) (/.f64 (+.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 z x)) (/.f64 1 (/.f64 (neg.f64 y) (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 z x) y) (-.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z x) y) (+.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) 1) (/.f64 (cbrt.f64 (-.f64 z x)) (/.f64 y (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z x)) 1) (/.f64 (sqrt.f64 (-.f64 z x)) (/.f64 y (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z x)) y) (/.f64 (sqrt.f64 (-.f64 z x)) (/.f64 1 (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -1) (/.f64 (-.f64 z x) (/.f64 1 (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) y) (/.f64 (cbrt.f64 (-.f64 z x)) (/.f64 1 (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (-.f64 z x) (cbrt.f64 (/.f64 y (+.f64 z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z x)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (sqrt.f64 (-.f64 z x)) (cbrt.f64 (/.f64 y (+.f64 z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 (-.f64 z x) (sqrt.f64 (/.f64 y (+.f64 z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 (cbrt.f64 (-.f64 z x)) (sqrt.f64 (/.f64 y (+.f64 z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z x) 1) (/.f64 (+.f64 z x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z x) (neg.f64 y)) (neg.f64 (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 z x) y) 1) (+.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 z x) y) (pow.f64 (cbrt.f64 (+.f64 z x)) 2)) (cbrt.f64 (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 z x) y) (sqrt.f64 (+.f64 z x))) (sqrt.f64 (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 y (+.f64 z x)) (-.f64 z x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (/.f64 y (+.f64 z x)) (-.f64 z x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 z x) (/.f64 (neg.f64 y) (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 (+.f64 z x) y) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 (-.f64 z x) y) (*.f64 x (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 (-.f64 z x) y) (*.f64 z (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 z y) (+.f64 z x)) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) y) z (*.f64 (/.f64 (-.f64 z x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) y) x (*.f64 (/.f64 (-.f64 z x) y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 z y) (+.f64 z x))) (cbrt.f64 (*.f64 (/.f64 z y) (+.f64 z x)))) (cbrt.f64 (*.f64 (/.f64 z y) (+.f64 z x))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 z y) (+.f64 z x))) (sqrt.f64 (*.f64 (/.f64 z y) (+.f64 z x))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y -1) (/.f64 z (/.f64 1 (+.f64 z x))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 z (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 z (sqrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) y) (/.f64 (cbrt.f64 z) (/.f64 1 (+.f64 z x))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) y) (/.f64 (sqrt.f64 z) (/.f64 1 (+.f64 z x))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (/.f64 y (+.f64 z x))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (/.f64 y (+.f64 z x))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 (cbrt.f64 z) (sqrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 (sqrt.f64 z) (sqrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z y) (+.f64 z x) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z 1) (/.f64 (+.f64 z x) y) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (neg.f64 y)) (neg.f64 (+.f64 z x)) (neg.f64 (*.f64 x (/.f64 (+.f64 z x) y))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 y) (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y))) (cbrt.f64 (exp.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) 2) (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (sqrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 3) (pow.f64 y 3)) (/.f64 1 (fma.f64 y (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2) (*.f64 y y)) (/.f64 1 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (sqrt.f64 (+.f64 z x)) (sqrt.f64 y)) (-.f64 (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 y (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2)) (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 3) (pow.f64 y 3)) (fma.f64 y (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2) (*.f64 y y)) (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 3) (pow.f64 y 3))) (neg.f64 (fma.f64 y (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2) (*.f64 y y))) (neg.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 3) (pow.f64 (neg.f64 y) 3)) (+.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2) (-.f64 (*.f64 (neg.f64 y) (neg.f64 y)) (*.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2) (*.f64 (neg.f64 y) (neg.f64 y))) (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 y (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2)) (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 3) (pow.f64 y 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2) (*.f64 y y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))) (exp.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x)) (+.f64 1 (expm1.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))) (+.f64 1 (expm1.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))) (exp.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x)) (/.f64 1 (exp.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))) (/.f64 1 (exp.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 y)) (pow.f64 (exp.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 y)) (pow.f64 (exp.f64 (/.f64 (-.f64 z x) y)) (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 y)) (+.f64 1 (expm1.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 y)) (+.f64 1 (expm1.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 (+.f64 z x) y) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 (+.f64 z x) y) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z x) (/.f64 (+.f64 z x) y) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z x) (/.f64 (+.f64 z x) y) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 1 (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 1 (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) 1 (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) 1 (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) 1 (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 y) (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 z y) (+.f64 z x)) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 z y) (+.f64 z x)) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 2) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 2) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 2) (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 2) (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 y) 2) (neg.f64 (cbrt.f64 y)) (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) 2) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) 2) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) 2) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) 2) (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) 2) (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) 2) (cbrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) (*.f64 (cbrt.f64 (-.f64 z x)) (/.f64 (+.f64 z x) y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) (*.f64 (cbrt.f64 (-.f64 z x)) (/.f64 (+.f64 z x) y)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (neg.f64 (sqrt.f64 y)) (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (sqrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (sqrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (sqrt.f64 (-.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 z x)) (*.f64 (sqrt.f64 (-.f64 z x)) (/.f64 (+.f64 z x) y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 z x)) (*.f64 (sqrt.f64 (-.f64 z x)) (/.f64 (+.f64 z x) y)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (-.f64 z x)) (/.f64 1 (/.f64 (neg.f64 y) (+.f64 z x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (-.f64 z x)) (/.f64 1 (/.f64 (neg.f64 y) (+.f64 z x))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 3) (pow.f64 y 3)) (/.f64 1 (fma.f64 y (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2))) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 3) (pow.f64 y 3)) (/.f64 1 (fma.f64 y (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2))) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 3) (pow.f64 y 3)) (/.f64 1 (fma.f64 y (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2))) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 z x) y) (-.f64 z x) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 z x) y) (-.f64 z x) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2) (*.f64 y y)) (/.f64 1 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2) (*.f64 y y)) (/.f64 1 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2) (*.f64 y y)) (/.f64 1 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (neg.f64 y)) (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 z y) (+.f64 z x))) (cbrt.f64 (*.f64 (/.f64 z y) (+.f64 z x)))) (cbrt.f64 (*.f64 (/.f64 z y) (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 z y) (+.f64 z x))) (cbrt.f64 (*.f64 (/.f64 z y) (+.f64 z x)))) (cbrt.f64 (*.f64 (/.f64 z y) (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 y)) (sqrt.f64 (neg.f64 y)) (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 z y) (+.f64 z x))) (sqrt.f64 (*.f64 (/.f64 z y) (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 z y) (+.f64 z x))) (sqrt.f64 (*.f64 (/.f64 z y) (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 y)) (sqrt.f64 y) (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 y (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) 1) (/.f64 (cbrt.f64 (-.f64 z x)) (/.f64 y (+.f64 z x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) 1) (/.f64 (cbrt.f64 (-.f64 z x)) (/.f64 y (+.f64 z x))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 z x)) 1) (/.f64 (sqrt.f64 (-.f64 z x)) (/.f64 y (+.f64 z x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 z x)) 1) (/.f64 (sqrt.f64 (-.f64 z x)) (/.f64 y (+.f64 z x))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 z x)) y) (/.f64 (sqrt.f64 (-.f64 z x)) (/.f64 1 (+.f64 z x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 z x)) y) (/.f64 (sqrt.f64 (-.f64 z x)) (/.f64 1 (+.f64 z x))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y -1) (/.f64 (-.f64 z x) (/.f64 1 (+.f64 z x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y -1) (/.f64 (-.f64 z x) (/.f64 1 (+.f64 z x))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y -1) (/.f64 z (/.f64 1 (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y -1) (/.f64 z (/.f64 1 (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) y) (/.f64 (cbrt.f64 (-.f64 z x)) (/.f64 1 (+.f64 z x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) y) (/.f64 (cbrt.f64 (-.f64 z x)) (/.f64 1 (+.f64 z x))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (-.f64 z x) (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (-.f64 z x) (cbrt.f64 (/.f64 y (+.f64 z x)))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 z (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 z (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 z x)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (sqrt.f64 (-.f64 z x)) (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 z x)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (sqrt.f64 (-.f64 z x)) (cbrt.f64 (/.f64 y (+.f64 z x)))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 (-.f64 z x) (sqrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 (-.f64 z x) (sqrt.f64 (/.f64 y (+.f64 z x)))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 z (sqrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 z (sqrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 (cbrt.f64 (-.f64 z x)) (sqrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z x) 2)) (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 (cbrt.f64 (-.f64 z x)) (sqrt.f64 (/.f64 y (+.f64 z x)))) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) y) (/.f64 (cbrt.f64 z) (/.f64 1 (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) y) (/.f64 (cbrt.f64 z) (/.f64 1 (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) y) (/.f64 (sqrt.f64 z) (/.f64 1 (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) y) (/.f64 (sqrt.f64 z) (/.f64 1 (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (/.f64 y (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (/.f64 y (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (/.f64 y (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (/.f64 y (+.f64 z x))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 (cbrt.f64 z) (sqrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 (cbrt.f64 z) (sqrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 (sqrt.f64 z) (sqrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (/.f64 y (+.f64 z x)))) (/.f64 (sqrt.f64 z) (sqrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z y) (+.f64 z x) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z y) (+.f64 z x) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (sqrt.f64 (+.f64 z x)) (sqrt.f64 y)) (-.f64 (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (sqrt.f64 y)) (fma.f64 (neg.f64 y) 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (sqrt.f64 (+.f64 z x)) (sqrt.f64 y)) (-.f64 (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (sqrt.f64 y)) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sqrt.f64 (/.f64 (-.f64 z x) y)) (sqrt.f64 (+.f64 z x)) (sqrt.f64 y)) (-.f64 (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (sqrt.f64 y)) (+.f64 (neg.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y) (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) 1) (/.f64 (+.f64 z x) y) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) 1) (/.f64 (+.f64 z x) y) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) (neg.f64 y)) (neg.f64 (+.f64 z x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z x) (neg.f64 y)) (neg.f64 (+.f64 z x)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z 1) (/.f64 (+.f64 z x) y) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z 1) (/.f64 (+.f64 z x) y) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (neg.f64 y)) (neg.f64 (+.f64 z x)) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (neg.f64 y)) (neg.f64 (+.f64 z x)) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) (neg.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) 1) (+.f64 z x) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) 1) (+.f64 z x) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (pow.f64 (cbrt.f64 (+.f64 z x)) 2)) (cbrt.f64 (+.f64 z x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (pow.f64 (cbrt.f64 (+.f64 z x)) 2)) (cbrt.f64 (+.f64 z x)) (*.f64 (neg.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (sqrt.f64 (+.f64 z x))) (sqrt.f64 (+.f64 z x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (sqrt.f64 (+.f64 z x))) (sqrt.f64 (+.f64 z x)) (*.f64 (neg.f64 y) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 y (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 y (+.f64 z x)))) (cbrt.f64 (exp.f64 (/.f64 y (+.f64 z x)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 y (+.f64 z x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (+.f64 z x))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (+.f64 z x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 y (+.f64 z x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (+.f64 z x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (/.f64 1 (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (+.f64 z x))) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2)) (cbrt.f64 (/.f64 y (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (/.f64 1 (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y (+.f64 z x))) (sqrt.f64 (/.f64 y (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (neg.f64 (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 z x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (+.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 z x)) 2)) (/.f64 y (cbrt.f64 (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (+.f64 z x)) 2)) (cbrt.f64 (/.f64 y (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (+.f64 z x)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 z x))) (/.f64 y (sqrt.f64 (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (+.f64 z x))) (/.f64 (cbrt.f64 y) (sqrt.f64 (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (+.f64 (pow.f64 z 3) (pow.f64 x 3))) (fma.f64 z (-.f64 z x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 (*.f64 x x) (*.f64 z z))) (-.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (+.f64 z x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (+.f64 z x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (+.f64 z x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y (+.f64 z x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 z x) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 y 3) (pow.f64 (+.f64 z x) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 z x) y) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (neg.f64 (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 y (+.f64 z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (pow.f64 (+.f64 z x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y (+.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 z x))) 1))))))"]],"rules":[["egg-rr",40],["egg-rr",171],["egg-rr",74]],"stop":[["node limit",1]],"time":68.819091796875,"type":"rewrite"},{"count":[[393,328]],"egraph":[[3,3402,1441,0.018328333000000002],[2,752,1618,0.006196666],[1,239,1859,0.001706374],[0,77,2214,0.000441833]],"inputs":[["(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (/.f64 (pow.f64 z 2) y))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(-.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (/.f64 (pow.f64 z 2) y) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(*.f64 -1 y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(*.f64 -1 y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 z x))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (/.f64 y z)))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 z 4))) (/.f64 y z))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2))))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2)))))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2))))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2))))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2)))))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2))))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2))))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2)))))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2))))))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (/.f64 y z)))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 z 4))) (/.f64 y z))))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (/.f64 y z)))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 z 4))) (/.f64 y z))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (/.f64 (pow.f64 z 2) y))","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y)))","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(-.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) y)","(-.f64 (neg.f64 (/.f64 (*.f64 x x) y)) y)","(-.f64 (/.f64 (*.f64 (neg.f64 x) x) y) y)","(-.f64 (/.f64 (neg.f64 x) (/.f64 y x)) y)","(-.f64 (*.f64 (/.f64 x y) (neg.f64 x)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z)) y)","(-.f64 (neg.f64 (/.f64 (*.f64 x x) y)) y)","(-.f64 (/.f64 (*.f64 (neg.f64 x) x) y) y)","(-.f64 (/.f64 (neg.f64 x) (/.f64 y x)) y)","(-.f64 (*.f64 (/.f64 x y) (neg.f64 x)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(-.f64 (/.f64 (pow.f64 z 2) y) y)","(-.f64 (/.f64 (*.f64 z z) y) y)","(-.f64 (/.f64 z (/.f64 y z)) y)","(-.f64 (*.f64 (/.f64 z y) z) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (/.f64 (*.f64 z z) y) y)","(-.f64 (/.f64 z (/.f64 y z)) y)","(-.f64 (*.f64 (/.f64 z y) z) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(/.f64 (neg.f64 x) (/.f64 y x))","(*.f64 (/.f64 x y) (neg.f64 x))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y)))","(-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 (/.f64 z y) z) (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(-.f64 (*.f64 (/.f64 (+.f64 x z) y) (-.f64 z x)) y)","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 x z))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 x z))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 x z))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 x z))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 x z))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 x z))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 x z))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 x z))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 x z))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 x z))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 x z))","(/.f64 y (+.f64 z x))","(/.f64 y (+.f64 x z))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (/.f64 y z))","(fma.f64 -1 (/.f64 y (/.f64 (*.f64 z z) x)) (/.f64 y z))","(-.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 x z)))","(*.f64 (+.f64 (/.f64 (neg.f64 x) z) 1) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (/.f64 y z)))","(+.f64 (fma.f64 -1 (/.f64 y (/.f64 (*.f64 z z) x)) (/.f64 y z)) (/.f64 (*.f64 (*.f64 x x) y) (pow.f64 z 3)))","(+.f64 (-.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 x z))) (*.f64 (/.f64 y (pow.f64 z 3)) (*.f64 x x)))","(+.f64 (/.f64 y z) (*.f64 (/.f64 y (*.f64 z z)) (-.f64 (/.f64 (*.f64 x x) z) x)))","(-.f64 (/.f64 y z) (*.f64 (/.f64 y (*.f64 z z)) (-.f64 x (/.f64 (*.f64 x x) z))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 z 4))) (/.f64 y z))))","(+.f64 (/.f64 (*.f64 (*.f64 x x) y) (pow.f64 z 3)) (fma.f64 -1 (/.f64 y (/.f64 (*.f64 z z) x)) (fma.f64 -1 (/.f64 y (/.f64 (pow.f64 z 4) (pow.f64 x 3))) (/.f64 y z))))","(+.f64 (*.f64 (/.f64 y (pow.f64 z 3)) (*.f64 x x)) (-.f64 (-.f64 (/.f64 y z) (*.f64 (/.f64 y (pow.f64 z 4)) (pow.f64 x 3))) (*.f64 (/.f64 y z) (/.f64 x z))))","(+.f64 (/.f64 y z) (-.f64 (*.f64 (/.f64 y (*.f64 z z)) (-.f64 (/.f64 (*.f64 x x) z) x)) (/.f64 y (/.f64 (pow.f64 z 4) (pow.f64 x 3)))))","(+.f64 (/.f64 y z) (*.f64 (/.f64 y (*.f64 z z)) (-.f64 (/.f64 (*.f64 x x) z) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 z z))))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (neg.f64 (/.f64 y (/.f64 (*.f64 x x) z))))","(-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 z x)))","(-.f64 (/.f64 y x) (*.f64 z (/.f64 (/.f64 y x) x)))","(*.f64 (+.f64 (/.f64 (neg.f64 z) x) 1) (/.f64 y x))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2)))))","(+.f64 (+.f64 (/.f64 y (/.f64 (pow.f64 x 3) (*.f64 z z))) (/.f64 y x)) (neg.f64 (/.f64 y (/.f64 (*.f64 x x) z))))","(+.f64 (-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 z x))) (/.f64 (*.f64 z z) (/.f64 (pow.f64 x 3) y)))","(-.f64 (fma.f64 (/.f64 y (pow.f64 x 3)) (*.f64 z z) (/.f64 y x)) (*.f64 z (/.f64 (/.f64 y x) x)))","(+.f64 (/.f64 y x) (*.f64 (*.f64 z (/.f64 y (*.f64 x x))) (+.f64 -1 (/.f64 z x))))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2))))))","(+.f64 (+.f64 (/.f64 y (/.f64 (pow.f64 x 3) (*.f64 z z))) (/.f64 y x)) (*.f64 -1 (+.f64 (/.f64 y (/.f64 (pow.f64 x 4) (pow.f64 z 3))) (/.f64 y (/.f64 (*.f64 x x) z)))))","(+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 x 3) y)) (-.f64 (-.f64 (/.f64 y x) (/.f64 y (/.f64 (pow.f64 x 4) (pow.f64 z 3)))) (*.f64 (/.f64 y x) (/.f64 z x))))","(-.f64 (fma.f64 (/.f64 y (pow.f64 x 3)) (*.f64 z z) (/.f64 y x)) (*.f64 (/.f64 (/.f64 y x) x) (+.f64 z (/.f64 (pow.f64 z 3) (*.f64 x x)))))","(+.f64 (/.f64 y x) (*.f64 (/.f64 y (*.f64 x x)) (-.f64 (*.f64 (/.f64 z x) z) (+.f64 z (/.f64 (pow.f64 z 3) (*.f64 x x))))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (neg.f64 (/.f64 y (/.f64 (*.f64 x x) z))))","(-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 z x)))","(-.f64 (/.f64 y x) (*.f64 z (/.f64 (/.f64 y x) x)))","(*.f64 (+.f64 (/.f64 (neg.f64 z) x) 1) (/.f64 y x))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2)))))","(+.f64 (+.f64 (/.f64 y (/.f64 (pow.f64 x 3) (*.f64 z z))) (/.f64 y x)) (neg.f64 (/.f64 y (/.f64 (*.f64 x x) z))))","(+.f64 (-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 z x))) (/.f64 (*.f64 z z) (/.f64 (pow.f64 x 3) y)))","(-.f64 (fma.f64 (/.f64 y (pow.f64 x 3)) (*.f64 z z) (/.f64 y x)) (*.f64 z (/.f64 (/.f64 y x) x)))","(+.f64 (/.f64 y x) (*.f64 (*.f64 z (/.f64 y (*.f64 x x))) (+.f64 -1 (/.f64 z x))))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2))))))","(+.f64 (+.f64 (/.f64 y (/.f64 (pow.f64 x 3) (*.f64 z z))) (/.f64 y x)) (*.f64 -1 (+.f64 (/.f64 y (/.f64 (pow.f64 x 4) (pow.f64 z 3))) (/.f64 y (/.f64 (*.f64 x x) z)))))","(+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 x 3) y)) (-.f64 (-.f64 (/.f64 y x) (/.f64 y (/.f64 (pow.f64 x 4) (pow.f64 z 3)))) (*.f64 (/.f64 y x) (/.f64 z x))))","(-.f64 (fma.f64 (/.f64 y (pow.f64 x 3)) (*.f64 z z) (/.f64 y x)) (*.f64 (/.f64 (/.f64 y x) x) (+.f64 z (/.f64 (pow.f64 z 3) (*.f64 x x)))))","(+.f64 (/.f64 y x) (*.f64 (/.f64 y (*.f64 x x)) (-.f64 (*.f64 (/.f64 z x) z) (+.f64 z (/.f64 (pow.f64 z 3) (*.f64 x x))))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (neg.f64 (/.f64 y (/.f64 (*.f64 x x) z))))","(-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 z x)))","(-.f64 (/.f64 y x) (*.f64 z (/.f64 (/.f64 y x) x)))","(*.f64 (+.f64 (/.f64 (neg.f64 z) x) 1) (/.f64 y x))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2)))))","(+.f64 (+.f64 (/.f64 y (/.f64 (pow.f64 x 3) (*.f64 z z))) (/.f64 y x)) (neg.f64 (/.f64 y (/.f64 (*.f64 x x) z))))","(+.f64 (-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 z x))) (/.f64 (*.f64 z z) (/.f64 (pow.f64 x 3) y)))","(-.f64 (fma.f64 (/.f64 y (pow.f64 x 3)) (*.f64 z z) (/.f64 y x)) (*.f64 z (/.f64 (/.f64 y x) x)))","(+.f64 (/.f64 y x) (*.f64 (*.f64 z (/.f64 y (*.f64 x x))) (+.f64 -1 (/.f64 z x))))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 x 2))))))","(+.f64 (+.f64 (/.f64 y (/.f64 (pow.f64 x 3) (*.f64 z z))) (/.f64 y x)) (*.f64 -1 (+.f64 (/.f64 y (/.f64 (pow.f64 x 4) (pow.f64 z 3))) (/.f64 y (/.f64 (*.f64 x x) z)))))","(+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 x 3) y)) (-.f64 (-.f64 (/.f64 y x) (/.f64 y (/.f64 (pow.f64 x 4) (pow.f64 z 3)))) (*.f64 (/.f64 y x) (/.f64 z x))))","(-.f64 (fma.f64 (/.f64 y (pow.f64 x 3)) (*.f64 z z) (/.f64 y x)) (*.f64 (/.f64 (/.f64 y x) x) (+.f64 z (/.f64 (pow.f64 z 3) (*.f64 x x)))))","(+.f64 (/.f64 y x) (*.f64 (/.f64 y (*.f64 x x)) (-.f64 (*.f64 (/.f64 z x) z) (+.f64 z (/.f64 (pow.f64 z 3) (*.f64 x x))))))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (/.f64 y z))","(fma.f64 -1 (/.f64 y (/.f64 (*.f64 z z) x)) (/.f64 y z))","(-.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 x z)))","(*.f64 (+.f64 (/.f64 (neg.f64 x) z) 1) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (/.f64 y z)))","(+.f64 (fma.f64 -1 (/.f64 y (/.f64 (*.f64 z z) x)) (/.f64 y z)) (/.f64 (*.f64 (*.f64 x x) y) (pow.f64 z 3)))","(+.f64 (-.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 x z))) (*.f64 (/.f64 y (pow.f64 z 3)) (*.f64 x x)))","(+.f64 (/.f64 y z) (*.f64 (/.f64 y (*.f64 z z)) (-.f64 (/.f64 (*.f64 x x) z) x)))","(-.f64 (/.f64 y z) (*.f64 (/.f64 y (*.f64 z z)) (-.f64 x (/.f64 (*.f64 x x) z))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 z 4))) (/.f64 y z))))","(+.f64 (/.f64 (*.f64 (*.f64 x x) y) (pow.f64 z 3)) (fma.f64 -1 (/.f64 y (/.f64 (*.f64 z z) x)) (fma.f64 -1 (/.f64 y (/.f64 (pow.f64 z 4) (pow.f64 x 3))) (/.f64 y z))))","(+.f64 (*.f64 (/.f64 y (pow.f64 z 3)) (*.f64 x x)) (-.f64 (-.f64 (/.f64 y z) (*.f64 (/.f64 y (pow.f64 z 4)) (pow.f64 x 3))) (*.f64 (/.f64 y z) (/.f64 x z))))","(+.f64 (/.f64 y z) (-.f64 (*.f64 (/.f64 y (*.f64 z z)) (-.f64 (/.f64 (*.f64 x x) z) x)) (/.f64 y (/.f64 (pow.f64 z 4) (pow.f64 x 3)))))","(+.f64 (/.f64 y z) (*.f64 (/.f64 y (*.f64 z z)) (-.f64 (/.f64 (*.f64 x x) z) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 z z))))))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (/.f64 y z))","(fma.f64 -1 (/.f64 y (/.f64 (*.f64 z z) x)) (/.f64 y z))","(-.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 x z)))","(*.f64 (+.f64 (/.f64 (neg.f64 x) z) 1) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (/.f64 y z)))","(+.f64 (fma.f64 -1 (/.f64 y (/.f64 (*.f64 z z) x)) (/.f64 y z)) (/.f64 (*.f64 (*.f64 x x) y) (pow.f64 z 3)))","(+.f64 (-.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 x z))) (*.f64 (/.f64 y (pow.f64 z 3)) (*.f64 x x)))","(+.f64 (/.f64 y z) (*.f64 (/.f64 y (*.f64 z z)) (-.f64 (/.f64 (*.f64 x x) z) x)))","(-.f64 (/.f64 y z) (*.f64 (/.f64 y (*.f64 z z)) (-.f64 x (/.f64 (*.f64 x x) z))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 z 4))) (/.f64 y z))))","(+.f64 (/.f64 (*.f64 (*.f64 x x) y) (pow.f64 z 3)) (fma.f64 -1 (/.f64 y (/.f64 (*.f64 z z) x)) (fma.f64 -1 (/.f64 y (/.f64 (pow.f64 z 4) (pow.f64 x 3))) (/.f64 y z))))","(+.f64 (*.f64 (/.f64 y (pow.f64 z 3)) (*.f64 x x)) (-.f64 (-.f64 (/.f64 y z) (*.f64 (/.f64 y (pow.f64 z 4)) (pow.f64 x 3))) (*.f64 (/.f64 y z) (/.f64 x z))))","(+.f64 (/.f64 y z) (-.f64 (*.f64 (/.f64 y (*.f64 z z)) (-.f64 (/.f64 (*.f64 x x) z) x)) (/.f64 y (/.f64 (pow.f64 z 4) (pow.f64 x 3)))))","(+.f64 (/.f64 y z) (*.f64 (/.f64 y (*.f64 z z)) (-.f64 (/.f64 (*.f64 x x) z) (+.f64 x (/.f64 (pow.f64 x 3) (*.f64 z z))))))"]],"stop":[["node limit",1]],"time":51.11083984375,"type":"simplify"},{"compiler":[[7391,2309]],"time":51.094970703125,"type":"eval"},{"alts":[["(*.f64 -1/2 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y))))","fresh",6.28564491068147],["(*.f64 -1/2 (-.f64 (pow.f64 (/.f64 (/.f64 y (+.f64 z x)) (-.f64 z x)) -1) y))","fresh",0.16796875],["(*.f64 -1/2 (-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y))","done",12.331050795068045],["(*.f64 -1/2 (-.f64 (/.f64 (-.f64 z x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (+.f64 z x)) 2)) (cbrt.f64 (/.f64 y (+.f64 z x))))) y))","fresh",0.2461701172213042],["(*.f64 -1/2 (-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y))","done",0.109375],["(*.f64 -1/2 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y)))","next",0.11328125]],"compiler":[[37,20],[18,12],[16,10],[29,19],[16,10],[16,10],[37,20],[18,12],[29,19],[16,10]],"count":[[334,6]],"kept":[{"done":[1,1],"fresh":[4,0],"new":[328,4],"picked":[1,1]}],"min-error":[0],"time":142.631103515625,"type":"prune"},{"compiler":[[44,11]],"locations":[["(/.f64 (-.f64 z x) y)",0.015625,false],["(fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))",0.1171875,true]],"time":7.488037109375,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))","y","-inf",1.6259765625],["(fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))","y","inf",0.23193359375],["(fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))","y","0",0.469970703125],["(fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))","x","-inf",0.244873046875],["(fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))","x","inf",0.27099609375],["(fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))","x","0",0.280029296875],["(fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))","z","-inf",0.282958984375],["(fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))","z","inf",0.285888671875],["(fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))","z","0",0.339111328125]],"time":4.18701171875,"type":"series"},{"count":[[1,87]],"egraph":[[2,3140,14,0.024905207999999998],[1,205,14,0.00394025],[0,9,16,0.000224]],"inputs":[["(fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 y (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (fma.f64 -1 y y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (fma.f64 1 y y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (fma.f64 y 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (fma.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (fma.f64 (neg.f64 (sqrt.f64 y)) (sqrt.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 y))) (sqrt.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (fma.f64 y -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) (fma.f64 (neg.f64 (sqrt.f64 y)) (neg.f64 (sqrt.f64 y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (+.f64 z x) 2)) (*.f64 (cbrt.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (+.f64 z x)) (*.f64 (sqrt.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 (*.f64 z z) (*.f64 x x)) (/.f64 1 y) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 2) (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (+.f64 z x)) (sqrt.f64 (/.f64 (-.f64 z x) y))) (*.f64 (sqrt.f64 (+.f64 z x)) (sqrt.f64 (/.f64 (-.f64 z x) y))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (+.f64 z x) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z x) y) 2))) (cbrt.f64 (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (+.f64 z x) (sqrt.f64 (/.f64 (-.f64 z x) y))) (sqrt.f64 (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (neg.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) (neg.f64 (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (+.f64 z x) 2)) (*.f64 (cbrt.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (+.f64 z x)) (*.f64 (sqrt.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 (*.f64 z z) (*.f64 x x)) (/.f64 1 y) (neg.f64 (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 2) (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (neg.f64 (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (neg.f64 (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (+.f64 z x)) (sqrt.f64 (/.f64 (-.f64 z x) y))) (*.f64 (sqrt.f64 (+.f64 z x)) (sqrt.f64 (/.f64 (-.f64 z x) y))) (neg.f64 (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (+.f64 z x) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z x) y) 2))) (cbrt.f64 (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (+.f64 z x) (sqrt.f64 (/.f64 (-.f64 z x) y))) (sqrt.f64 (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (neg.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (+.f64 z x) 2)) (*.f64 (cbrt.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (+.f64 z x)) (*.f64 (sqrt.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 (*.f64 z z) (*.f64 x x)) (/.f64 1 y) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 2) (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (+.f64 z x)) (sqrt.f64 (/.f64 (-.f64 z x) y))) (*.f64 (sqrt.f64 (+.f64 z x)) (sqrt.f64 (/.f64 (-.f64 z x) y))) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (+.f64 z x) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z x) y) 2))) (cbrt.f64 (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (+.f64 z x) (sqrt.f64 (/.f64 (-.f64 z x) y))) (sqrt.f64 (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 y) (*.f64 -1 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 -1 (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 z x) y) (+.f64 z x) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 -1 (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 -1 (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (+.f64 z x) 2)) (*.f64 (cbrt.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 -1 (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (+.f64 z x)) (*.f64 (sqrt.f64 (+.f64 z x)) (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 -1 (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 (*.f64 z z) (*.f64 x x)) (/.f64 1 y) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 -1 (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) 2) (cbrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 -1 (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (sqrt.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 -1 (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (+.f64 z x)) (sqrt.f64 (/.f64 (-.f64 z x) y))) (*.f64 (sqrt.f64 (+.f64 z x)) (sqrt.f64 (/.f64 (-.f64 z x) y))) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 -1 (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (+.f64 z x) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z x) y) 2))) (cbrt.f64 (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 -1 (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (+.f64 z x) (sqrt.f64 (/.f64 (-.f64 z x) y))) (sqrt.f64 (/.f64 (-.f64 z x) y)) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 -1 (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 -1 (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) 0) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)) 2) (cbrt.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)) (sqrt.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 3) (pow.f64 y 3)) (+.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2) (-.f64 (*.f64 y y) (*.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)) 2) (*.f64 y y)) (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (exp.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (+.f64 1 (expm1.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 y) (exp.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 y)) (exp.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (+.f64 z x) (/.f64 (-.f64 z x) y))) (+.f64 1 (expm1.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) y)) 1))))))"]],"rules":[["egg-rr",87]],"stop":[["node limit",1]],"time":50.14697265625,"type":"rewrite"},{"count":[[123,111]],"egraph":[[4,4397,459,0.020646416],[3,1440,459,0.008471875],[2,409,526,0.003017208],[1,146,610,0.000966042],[0,46,757,0.000250708]],"inputs":[["(-.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(/.f64 (pow.f64 z 2) y)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z)) (/.f64 (pow.f64 z 2) y))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (/.f64 (pow.f64 z 2) y) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(*.f64 -1 y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(*.f64 -1 y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) y)","(-.f64 (neg.f64 (/.f64 (*.f64 x x) y)) y)","(-.f64 (/.f64 (*.f64 (neg.f64 x) x) y) y)","(-.f64 (neg.f64 (*.f64 (/.f64 x y) x)) y)","(neg.f64 (fma.f64 (/.f64 x y) x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z)) y)","(-.f64 (neg.f64 (/.f64 (*.f64 x x) y)) y)","(-.f64 (/.f64 (*.f64 (neg.f64 x) x) y) y)","(-.f64 (neg.f64 (*.f64 (/.f64 x y) x)) y)","(neg.f64 (fma.f64 (/.f64 x y) x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (+.f64 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(/.f64 (pow.f64 z 2) y)","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z)) (/.f64 (pow.f64 z 2) y))","(/.f64 (*.f64 z z) y)","(/.f64 z (/.f64 y z))","(*.f64 (/.f64 z y) z)","(*.f64 z (/.f64 z y))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(-.f64 (/.f64 (pow.f64 z 2) y) y)","(-.f64 (/.f64 (*.f64 z z) y) y)","(-.f64 (/.f64 z (/.f64 y z)) y)","(-.f64 (*.f64 (/.f64 z y) z) y)","(fma.f64 (/.f64 z y) z (neg.f64 y))","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (/.f64 (pow.f64 z 2) y)) y)","(-.f64 (/.f64 (*.f64 z z) y) y)","(-.f64 (/.f64 z (/.f64 y z)) y)","(-.f64 (*.f64 (/.f64 z y) z) y)","(fma.f64 (/.f64 z y) z (neg.f64 y))","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(neg.f64 (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (neg.f64 (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(neg.f64 (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (neg.f64 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(-.f64 (+.f64 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(*.f64 -1 (/.f64 (pow.f64 x 2) y))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(neg.f64 (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (neg.f64 (/.f64 x y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(neg.f64 (/.f64 (*.f64 x x) y))","(/.f64 (*.f64 (neg.f64 x) x) y)","(neg.f64 (*.f64 (/.f64 x y) x))","(*.f64 (/.f64 x y) (neg.f64 x))","(*.f64 x (neg.f64 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 z y) (*.f64 -1 (/.f64 z y))) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) y)) (/.f64 (pow.f64 z 2) y))) y)","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y)","(/.f64 (*.f64 (-.f64 z x) (+.f64 x z)) y)","(*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z))","(*.f64 (+.f64 x z) (/.f64 (-.f64 z x) y))","(*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y))","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)","(+.f64 (*.f64 -1 y) (/.f64 (*.f64 (-.f64 z x) (+.f64 z x)) y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) y) (fma.f64 (*.f64 0 (/.f64 x y)) z (/.f64 (*.f64 z z) y))) y)","(-.f64 (-.f64 (fma.f64 z 0 (/.f64 z (/.f64 y z))) (/.f64 x (/.f64 y x))) y)","(-.f64 (*.f64 (/.f64 z y) z) (+.f64 y (*.f64 (/.f64 x y) x)))","(fma.f64 (+.f64 x z) (/.f64 (-.f64 z x) y) (neg.f64 y))","(-.f64 (*.f64 (-.f64 z x) (/.f64 (+.f64 x z) y)) y)"]],"stop":[["node limit",1]],"time":39.720947265625,"type":"simplify"},{"compiler":[[4225,1587]],"time":36.364013671875,"type":"eval"},{"alts":[["(*.f64 -1/2 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y))))","fresh",6.28564491068147],["(*.f64 -1/2 (-.f64 (pow.f64 (/.f64 (/.f64 y (+.f64 z x)) (-.f64 z x)) -1) y))","fresh",0.16796875],["(*.f64 -1/2 (-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y))","done",12.331050795068045],["(*.f64 -1/2 (-.f64 (/.f64 (-.f64 z x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (+.f64 z x)) 2)) (cbrt.f64 (/.f64 y (+.f64 z x))))) y))","fresh",0.2461701172213042],["(*.f64 -1/2 (-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y))","done",0.109375],["(*.f64 -1/2 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y)))","done",0.11328125]],"compiler":[[37,20],[18,12],[16,10],[29,19],[16,10],[16,10]],"count":[[174,6]],"kept":[{"done":[2,2],"fresh":[3,3],"new":[168,0],"picked":[1,1]}],"min-error":[0],"time":41.926025390625,"type":"prune"},{"accuracy":[0.109375],"baseline":[0.109375],"branch":[["x",0.109375,1],["y",0.109375,1],["z",0.109375,1],["(/.f64 (-.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) (*.f64 y 2))",0.109375,1],["(*.f64 x x)",0.109375,1],["(*.f64 z z)",0.109375,1]],"compiler":[[4,3],[4,3],[4,3],[18,11],[6,4],[6,4],[300,133]],"count":[[15,1]],"inputs":[["(*.f64 -1/2 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z x)) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (/.f64 y (+.f64 z x)))) (neg.f64 (fma.f64 x (/.f64 (+.f64 z x) y) y))))","(*.f64 -1/2 (-.f64 (pow.f64 (/.f64 (/.f64 y (+.f64 z x)) (-.f64 z x)) -1) y))","(*.f64 -1/2 (-.f64 (/.f64 (-.f64 z x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (+.f64 z x)) 2)) (cbrt.f64 (/.f64 y (+.f64 z x))))) y))","(*.f64 -1/2 (fma.f64 (+.f64 z x) (/.f64 (-.f64 z x) y) (neg.f64 y)))","(*.f64 -1/2 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 (-.f64 z x) y)) (fma.f64 z (/.f64 (-.f64 z x) y) (neg.f64 y))))","(*.f64 -1/2 (-.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) 2) (*.f64 (cbrt.f64 (/.f64 (-.f64 z x) y)) x) (*.f64 z (/.f64 (-.f64 z x) y))) y))","(*.f64 -1/2 (-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y))","(*.f64 -1/2 (-.f64 (fma.f64 (*.f64 (/.f64 (-.f64 z x) y) (pow.f64 (cbrt.f64 z) 2)) (cbrt.f64 z) (/.f64 (*.f64 x (-.f64 z x)) y)) y))","(*.f64 -1/2 (-.f64 (*.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z y)) (cbrt.f64 (/.f64 z y))) (cbrt.f64 (/.f64 z y)) (neg.f64 (/.f64 x y))) (+.f64 x z)) y))","(*.f64 -1/2 (-.f64 (/.f64 (/.f64 (-.f64 (*.f64 (*.f64 z z) (*.f64 z z)) (*.f64 x (pow.f64 x 3))) (pow.f64 (hypot.f64 z x) 2)) y) y))","(*.f64 -1/2 (-.f64 (*.f64 (/.f64 (-.f64 z x) y) (+.f64 x z)) y))","(*.f64 -1/2 (-.f64 (*.f64 (hypot.f64 z x) (*.f64 (hypot.f64 z x) (/.f64 1 y))) y))","(*.f64 -1/2 (-.f64 (*.f64 (pow.f64 (hypot.f64 z x) 2) (/.f64 1 y)) y))","(*.f64 -1/2 (-.f64 (/.f64 (fma.f64 z z (*.f64 x (neg.f64 x))) y) y))","(/.f64 (-.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) (*.f64 y 2))"]],"link":["."],"name":["Diagrams.TwoD.Apollonian:initialConfig from diagrams-contrib-1.3.0.5, A"],"oracle":[48.14623473668725],"outputs":[["(*.f64 -1/2 (-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y))"]],"time":37.4970703125,"times":[["x",6.850830078125],["y",6.240966796875],["z",6.650146484375],["(/.f64 (-.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) (*.f64 y 2))",4.73095703125],["(*.f64 x x)",3.56201171875],["(*.f64 z z)",4.18603515625]],"type":"regimes"},{"compiler":[[16,10]],"egraph":[[4,31,19,0.000156625],[3,29,19,0.000123125],[2,25,19,8.9458e-5],[1,17,19,5.7208e-5],[0,11,19,2.6375e-5]],"inputs":[["(*.f64 -1/2 (-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/2 (-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 x z))) y))","(*.f64 -1/2 (-.f64 (/.f64 (-.f64 z x) (/.f64 y (+.f64 z x))) y))"]],"stop":[["fuel",1],["saturated",1]],"time":9.467041015625,"type":"simplify"},{"time":0.02685546875,"type":"soundness"},{"compiler":[[16,10]],"remove-preprocessing":[[]],"time":10.658935546875,"type":"end"}]