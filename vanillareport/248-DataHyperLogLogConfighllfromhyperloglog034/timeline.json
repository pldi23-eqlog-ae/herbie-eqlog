[{"compiler":[[8,5]],"method":["search"],"sampling":[[12,0.6887799953110516,0.09170725150033832,0.21951275318861008],[11,0.6595117235556245,0.12097552325576544,0.21951275318861008],[10,0.6321946699172258,0.17951206676661968,0.18829326331615448],[9,0.5775605626404285,0.23414617404341698,0.18829326331615448],[8,0.5307313278317451,0.34341438859701157,0.1258542835712433],[7,0.43707285821437836,0.43707285821437836,0.1258542835712433],[6,0.37463387846946716,0.6243897974491119,0.0009763240814208984],[5,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":20.859130859375,"type":"analyze"},{"outcomes":[["body",256,"invalid",10.081298828125,347],["body",256,"valid",246.272705078125,8256]],"time":263.803955078125,"type":"sample"},{"compiler":[[7,4]],"egraph":[[0,2,2,1.375e-6],[2,16,14,0.000136042],[1,14,14,9.1542e-5],[0,7,14,4.5125e-5]],"inputs":[["0","1"],["(*.f64 (*.f64 x y) y)","(*.f64 (*.f64 y x) x)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (*.f64 x y) y)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 y x) x)","(*.f64 y (*.f64 x x))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":22.22412109375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[2,10,7,9.8542e-5],[1,9,7,6.5709e-5],[0,5,7,3.225e-5]],"inputs":[["(*.f64 (*.f64 x y) y)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 x y) y)","(*.f64 x (*.f64 y y))"]],"stop":[["saturated",1]],"time":10.102783203125,"type":"simplify"},{"compiler":[[12,6]],"time":0.26220703125,"type":"eval"},{"alts":[["(*.f64 x (*.f64 y y))","fresh",8.629064688552472],["(*.f64 (*.f64 x y) y)","next",0.21484375]],"compiler":[[7,4],[7,4],[7,4],[7,4]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.11328125],"time":1.033935546875,"type":"prune"},{"compiler":[[12,4]],"locations":[["(*.f64 (*.f64 x y) y)",0.21484375,true]],"time":3.365966796875,"type":"localize"},{"count":[[1,24]],"series":[["(*.f64 (*.f64 x y) y)","y","-inf",0.1728515625],["(*.f64 (*.f64 x y) y)","y","inf",0.494140625],["(*.f64 (*.f64 x y) y)","y","0",0.412109375],["(*.f64 (*.f64 x y) y)","x","-inf",0.302001953125],["(*.f64 (*.f64 x y) y)","x","inf",0.40185546875],["(*.f64 (*.f64 x y) y)","x","0",0.572021484375]],"time":2.430908203125,"type":"series"},{"count":[[1,11]],"egraph":[[2,1193,7,0.013712585],[1,99,7,0.001616251],[0,5,7,0.000120042]],"inputs":[["(*.f64 (*.f64 x y) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 y y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 y y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 x) y) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 y y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 y y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 y y))))))))"]],"rules":[["egg-rr",11]],"stop":[["node limit",1]],"time":29.671142578125,"type":"rewrite"},{"count":[[35,13]],"egraph":[[22,7960,168,0.11987266399999999],[21,7019,168,0.10793724799999999],[20,6983,168,0.09448958099999999],[19,6905,168,0.08443545599999999],[18,6629,168,0.07610583099999998],[17,6335,168,0.06794916399999999],[16,5941,168,0.060210247999999994],[15,5104,168,0.051971039999999996],[14,4416,168,0.042917831999999996],[13,3850,168,0.03561929],[12,3367,168,0.029519582],[11,2974,168,0.023847873999999998],[10,2676,168,0.019141999],[9,2468,168,0.015245874000000001],[8,2284,168,0.011739874],[7,2120,168,0.008683499],[6,1245,168,0.005468083],[5,332,168,0.002704791],[4,105,168,0.000935083],[3,44,168,0.000422208],[2,23,168,0.000230333],[1,12,168,0.000128333],[0,6,168,5.3708e-5]],"inputs":[["(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))"]],"stop":[["node limit",1]],"time":138.203857421875,"type":"simplify"},{"compiler":[[95,42]],"time":1.381103515625,"type":"eval"},{"alts":[["(*.f64 (pow.f64 y 2) x)","next",8.629064688552472],["(*.f64 (*.f64 x y) y)","done",0.21484375],["(pow.f64 (*.f64 (sqrt.f64 x) y) 2)","fresh",31.240642626989754],["(pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 3)","fresh",8.89513612415287]],"compiler":[[7,5],[7,4],[8,6],[10,7],[7,5],[8,6],[10,7]],"count":[[15,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[13,3],"picked":[1,1]}],"min-error":[0.0703125],"time":3.04296875,"type":"prune"},{"compiler":[[13,8]],"locations":[["(*.f64 (pow.f64 y 2) x)",8.352097432423964,true]],"time":3.597900390625,"type":"localize"},{"count":[[1,0]],"series":[["(*.f64 (pow.f64 y 2) x)","x","-inf",0.174072265625],["(*.f64 (pow.f64 y 2) x)","x","inf",0.14404296875],["(*.f64 (pow.f64 y 2) x)","x","0",0.13916015625],["(*.f64 (pow.f64 y 2) x)","y","-inf",0.190185546875],["(*.f64 (pow.f64 y 2) x)","y","inf",0.188232421875],["(*.f64 (pow.f64 y 2) x)","y","0",0.169189453125]],"time":1.06298828125,"type":"series"},{"count":[[1,11]],"egraph":[[2,1319,7,0.013606707],[1,122,7,0.001905749],[0,6,7,0.000176416]],"inputs":[["(*.f64 (pow.f64 y 2) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (*.f64 x y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 x y) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (sqrt.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 x x) (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (*.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 x y) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 x y) y)))))))"]],"rules":[["egg-rr",11]],"stop":[["node limit",1]],"time":30.045166015625,"type":"rewrite"},{"count":[[11,11]],"egraph":[[0,0,0,1.9709e-5]],"inputs":[[]],"method":["egg-herbie"],"outputs":[[]],"stop":[["saturated",1]],"time":10.238037109375,"type":"simplify"},{"compiler":[[85,37]],"time":1.183837890625,"type":"eval"},{"alts":[["(*.f64 (pow.f64 y 2) x)","done",8.629064688552472],["(*.f64 (*.f64 x y) y)","done",0.21484375],["(sqrt.f64 (*.f64 (*.f64 x x) (pow.f64 y 4)))","fresh",40.89541918854096],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)","next",0.5242540039794927],["(pow.f64 (*.f64 (sqrt.f64 x) y) 2)","fresh",31.240642626989754]],"compiler":[[7,5],[7,4],[10,7],[10,7],[8,6],[10,7],[10,7],[8,6]],"count":[[15,5]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[11,2],"picked":[1,1]}],"min-error":[0.05859375],"time":3.094970703125,"type":"prune"},{"compiler":[[27,8]],"locations":[["(*.f64 (*.f64 x y) y)",0.21484375,false],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)",0.4919701660635144,true],["(cbrt.f64 (*.f64 (*.f64 x y) y))",19.52169860391451,true]],"time":5.335205078125,"type":"localize"},{"count":[[2,0]],"series":[["(pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)","y","-inf",0.402099609375],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)","y","inf",0.47900390625],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)","y","0",0.3740234375],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)","x","-inf",0.81396484375],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)","x","inf",0.554931640625],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)","x","0",0.85498046875],["(cbrt.f64 (*.f64 (*.f64 x y) y))","y","-inf",0.2470703125],["(cbrt.f64 (*.f64 (*.f64 x y) y))","y","inf",0.294921875],["(cbrt.f64 (*.f64 (*.f64 x y) y))","y","0",0.26806640625],["(cbrt.f64 (*.f64 (*.f64 x y) y))","x","-inf",0.47216796875],["(cbrt.f64 (*.f64 (*.f64 x y) y))","x","inf",0.32080078125],["(cbrt.f64 (*.f64 (*.f64 x y) y))","x","0",0.43017578125]],"time":5.64697265625,"type":"series"},{"count":[[2,60]],"egraph":[[2,1719,16,0.016724083],[1,168,16,0.002636375],[0,8,16,0.000222417]],"inputs":[["(cbrt.f64 (*.f64 (*.f64 x y) y))","(pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (*.f64 x (*.f64 y y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (pow.f64 (*.f64 y y) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))) (pow.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))) 2) (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (cbrt.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 x) y)) (cbrt.f64 (*.f64 (sqrt.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2) 1/3) (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (*.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sqrt.f64 x) y) 1/3) (pow.f64 (*.f64 (sqrt.f64 x) y) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 y y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 x) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 y y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2) (cbrt.f64 (*.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))) (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x y)) (*.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x y)) 2) (*.f64 (cbrt.f64 (*.f64 x y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 x) y) (*.f64 (sqrt.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 x) y)) (*.f64 (cbrt.f64 (*.f64 (sqrt.f64 x) y)) (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x y)) (*.f64 (sqrt.f64 (*.f64 x y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))) 2) 3) (cbrt.f64 (*.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 x) y)) 3) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 x) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (pow.f64 (cbrt.f64 (*.f64 x y)) 2)) (cbrt.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (sqrt.f64 (*.f64 x y))) (sqrt.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x y) (sqrt.f64 y)) (sqrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2) 1) (cbrt.f64 (*.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2) (cbrt.f64 (*.f64 x y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2) (cbrt.f64 (*.f64 (sqrt.f64 x) y))) (cbrt.f64 (*.f64 (sqrt.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 y y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 y y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 x y) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 y y))))))))"]],"rules":[["egg-rr",37],["egg-rr",23]],"stop":[["node limit",1]],"time":37.0888671875,"type":"rewrite"},{"count":[[60,60]],"egraph":[[0,0,0,1.9708e-5]],"inputs":[[]],"method":["egg-herbie"],"outputs":[[]],"stop":[["saturated",1]],"time":10.4150390625,"type":"simplify"},{"compiler":[[839,307]],"time":8.35107421875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (*.f64 x y) (sqrt.f64 y)) (sqrt.f64 y))","fresh",32.18263627930533],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)","done",0.5242540039794927],["(*.f64 (pow.f64 y 2) x)","done",8.629064688552472],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 x y)) 2) (*.f64 (cbrt.f64 (*.f64 x y)) y))","fresh",0.5137927856001464],["(*.f64 (*.f64 x y) y)","done",0.21484375],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))))","fresh",9.003105475936582],["(*.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (*.f64 y y)))","fresh",8.886225551868824],["(*.f64 (*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))","next",0.5122415528217027]],"compiler":[[11,6],[10,7],[7,5],[15,8],[7,4],[28,12],[13,8],[13,8],[11,6],[15,8],[28,12],[13,8],[13,8]],"count":[[78,8]],"kept":[{"done":[2,2],"fresh":[2,0],"new":[73,5],"picked":[1,1]}],"min-error":[0],"time":14.447021484375,"type":"prune"},{"compiler":[[33,14]],"locations":[["(cbrt.f64 y)",0.0859375,true],["(*.f64 (*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))",0.203125,true],["(*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2))",0.25619125976844204,true],["(pow.f64 (cbrt.f64 y) 2)",0.5341987793053261,true]],"time":7.40283203125,"type":"localize"},{"count":[[4,36]],"series":[["(cbrt.f64 y)","y","-inf",0.27685546875],["(cbrt.f64 y)","y","inf",0.19091796875],["(cbrt.f64 y)","y","0",0.1728515625],["(*.f64 (*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))","y","-inf",1.635009765625],["(*.f64 (*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))","y","inf",0.246826171875],["(*.f64 (*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))","y","0",0.93896484375],["(*.f64 (*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))","x","-inf",0.217041015625],["(*.f64 (*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))","x","inf",0.27392578125],["(*.f64 (*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))","x","0",1.1220703125],["(*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2))","y","-inf",0.442138671875],["(*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2))","y","inf",0.482177734375],["(*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2))","y","0",1.0439453125],["(*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2))","x","-inf",0.30078125],["(*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2))","x","inf",0.408203125],["(*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2))","x","0",2.0439453125],["(pow.f64 (cbrt.f64 y) 2)","y","-inf",0.43994140625],["(pow.f64 (cbrt.f64 y) 2)","y","inf",0.3759765625],["(pow.f64 (cbrt.f64 y) 2)","y","0",0.361083984375]],"time":11.18603515625,"type":"series"},{"count":[[4,62]],"egraph":[[2,2098,28,0.020358291],[1,184,28,0.003065666],[0,9,28,0.000229208]],"inputs":[["(pow.f64 (cbrt.f64 y) 2)","(*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2))","(*.f64 (*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))","(cbrt.f64 y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (cbrt.f64 y) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 2) (cbrt.f64 (*.f64 y (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 2) (*.f64 (cbrt.f64 (cbrt.f64 y)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (cbrt.f64 y))) (pow.f64 (cbrt.f64 (cbrt.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (pow.f64 y 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 1/6) (*.f64 (pow.f64 y 1/6) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 (cbrt.f64 y)) 2)) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 y (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (cbrt.f64 y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 y (*.f64 x (pow.f64 (cbrt.f64 y) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (*.f64 x (pow.f64 (cbrt.f64 y) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (*.f64 x (pow.f64 (cbrt.f64 y) 2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 x (pow.f64 (cbrt.f64 y) 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 y (cbrt.f64 y)) (pow.f64 (*.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (*.f64 x (pow.f64 (cbrt.f64 y) 2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 y y) (pow.f64 (*.f64 y x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 y x) 3) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (*.f64 x (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (*.f64 x (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (*.f64 x (pow.f64 (cbrt.f64 y) 2)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 y (*.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (*.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (*.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 y (*.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 y (*.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 y) x) y))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (*.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 y (pow.f64 (*.f64 y (*.f64 x (pow.f64 (cbrt.f64 y) 2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 y x) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (*.f64 y x))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 2) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 y)) (pow.f64 (cbrt.f64 (cbrt.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 1/6) (pow.f64 y 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (*.f64 y (cbrt.f64 y)))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 y) 1/3) (pow.f64 (sqrt.f64 y) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 y 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 y) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 y 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 y)))))))"]],"rules":[["egg-rr",20],["egg-rr",13],["egg-rr",13],["egg-rr",16]],"stop":[["node limit",1]],"time":45.72705078125,"type":"rewrite"},{"count":[[98,66]],"egraph":[[18,6753,276,0.09085354100000001],[17,6559,276,0.077923791],[16,6212,276,0.069181249],[15,5782,276,0.060444499],[14,5276,276,0.051806958],[13,4772,276,0.044654499],[12,3879,276,0.037330833],[11,3154,276,0.029286666000000003],[10,2542,276,0.022313208],[9,2128,276,0.016856791000000003],[8,1827,276,0.012631125000000002],[7,1585,276,0.009241625000000002],[6,1400,276,0.006605208000000001],[5,819,276,0.004197208000000001],[4,259,276,0.0022239160000000003],[3,114,276,0.0009742910000000001],[2,60,276,0.000509291],[1,32,276,0.000266458],[0,13,276,0.000104708]],"inputs":[["(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 5)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 5)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 5)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 5)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 5)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 5)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 5)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 5)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 5)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 5)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 5)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 5)) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 y x))"]],"stop":[["node limit",1]],"time":113.02294921875,"type":"simplify"},{"compiler":[[1136,516]],"time":12.074951171875,"type":"eval"},{"alts":[["(*.f64 (pow.f64 y 2) x)","done",8.629064688552472],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 x y)) 2) (*.f64 (cbrt.f64 (*.f64 x y)) y))","fresh",0.5137927856001464],["(*.f64 (*.f64 x y) y)","done",0.21484375],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))))","fresh",9.003105475936582],["(*.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (*.f64 y y)))","fresh",8.886225551868824],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)","done",0.5242540039794927],["(*.f64 (*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))","done",0.5122415528217027],["(*.f64 (*.f64 (*.f64 x y) (sqrt.f64 (*.f64 y (cbrt.f64 y)))) (cbrt.f64 y))","fresh",1.294890830335405]],"compiler":[[7,5],[15,8],[7,4],[28,12],[13,8],[10,7],[13,8],[14,8]],"count":[[94,8]],"kept":[{"done":[3,3],"fresh":[4,3],"new":[86,1],"picked":[1,1]}],"min-error":[0],"time":15.718994140625,"type":"prune"},{"accuracy":[0.21484375],"baseline":[0.21484375],"branch":[["x",0.21484375,1],["y",0.21484375,1],["(*.f64 (*.f64 x y) y)",0.21484375,1]],"compiler":[[3,2],[3,2],[7,4],[129,53]],"count":[[13,1]],"inputs":[["(*.f64 (*.f64 (*.f64 x y) (sqrt.f64 (*.f64 y (cbrt.f64 y)))) (cbrt.f64 y))","(*.f64 (*.f64 (*.f64 x y) (sqrt.f64 y)) (sqrt.f64 y))","(*.f64 (pow.f64 (cbrt.f64 (*.f64 x y)) 2) (*.f64 (cbrt.f64 (*.f64 x y)) y))","(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 x (*.f64 y y)))))","(*.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (*.f64 y y)))","(*.f64 (*.f64 (*.f64 x y) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))","(sqrt.f64 (*.f64 (*.f64 x x) (pow.f64 y 4)))","(pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)","(*.f64 (pow.f64 y 2) x)","(pow.f64 (*.f64 (sqrt.f64 x) y) 2)","(pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 3)","(*.f64 x (*.f64 y y))","(*.f64 (*.f64 x y) y)"]],"link":["."],"name":["Data.HyperLogLog.Config:hll from hyperloglog-0.3.4"],"oracle":[55.75602256843448],"outputs":[["(*.f64 (*.f64 x y) y)"]],"time":18.045166015625,"times":[["x",5.7880859375],["y",5.5078125],["(*.f64 (*.f64 x y) y)",4.569091796875]],"type":"regimes"},{"compiler":[[7,4]],"egraph":[[1,7,7,2.3250000000000003e-5],[0,5,7,1.4042e-5]],"inputs":[["(*.f64 (*.f64 x y) y)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 x y) y)","(*.f64 y (*.f64 x y))"]],"stop":[["fuel",1],["saturated",1]],"time":8.011962890625,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[7,4]],"remove-preprocessing":[[]],"time":7.01611328125,"type":"end"}]