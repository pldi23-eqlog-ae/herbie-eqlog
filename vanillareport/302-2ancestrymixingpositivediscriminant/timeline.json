[{"compiler":[[41,24]],"method":["search"],"sampling":[[12,0.2866890099496686,0.30229113294012677,0.4110198571102046],[11,0.24573343709971596,0.4017546670042975,0.3525118958959865],[10,0.16382229139981064,0.5070689971898901,0.3291087114102993],[9,0.1404191069141234,0.5304721816755773,0.3291087114102993],[8,0.09361273794274894,0.6864934115801589,0.2198938504770922],[7,0.0,0.8113103955038241,0.1886896044961759],[6,0.0,0.8113103955038241,0.1886896044961759],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":135.08203125,"type":"analyze"},{"outcomes":[["body",256,"invalid",105.086669921875,1481],["body",256,"valid",631.08935546875,8256]],"time":746.556884765625,"type":"sample"},{"compiler":[[40,23]],"egraph":[[0,3,3,2.292e-6],[4,5048,192,0.027434459],[3,1766,192,0.012471459],[2,545,200,0.0036182919999999995],[1,165,200,0.0009429589999999999],[0,54,208,0.000221792]],"inputs":[["0","1","2"],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (+.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (+.f64 (neg.f64 h) (sqrt.f64 (-.f64 (*.f64 h h) (*.f64 g g)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (-.f64 (neg.f64 h) (sqrt.f64 (-.f64 (*.f64 h h) (*.f64 g g)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 g)) (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 h h)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 g)) (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 h h)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 h)) (+.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 a a)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 h)) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 a a)))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (+.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (+.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 g g (*.f64 h (neg.f64 h)))) g))) (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (neg.f64 g) (sqrt.f64 (fma.f64 g g (*.f64 h (neg.f64 h))))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (+.f64 (neg.f64 h) (sqrt.f64 (-.f64 (*.f64 h h) (*.f64 g g)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (-.f64 (neg.f64 h) (sqrt.f64 (-.f64 (*.f64 h h) (*.f64 g g)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (+.f64 (neg.f64 h) (sqrt.f64 (-.f64 (*.f64 h h) (*.f64 g g)))))) (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (neg.f64 h) (sqrt.f64 (-.f64 (*.f64 h h) (*.f64 g g)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 h h) (*.f64 g g))) h))) (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (neg.f64 h) (sqrt.f64 (-.f64 (*.f64 h h) (*.f64 g g)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 h h) (*.f64 g g))) h))) (cbrt.f64 (*.f64 (+.f64 h (sqrt.f64 (-.f64 (*.f64 h h) (*.f64 g g)))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 g)) (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 h h)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 g)) (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 h h)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 g) (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 h h)))))) (cbrt.f64 (*.f64 (/.f64 1/2 g) (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 h h)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 g) (-.f64 (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 h h))) a))) (cbrt.f64 (*.f64 (/.f64 1/2 g) (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 h h)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 g) (-.f64 (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 h h))) a))) (cbrt.f64 (neg.f64 (/.f64 (+.f64 a (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 h h)))) (*.f64 2 g)))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 g) (-.f64 (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 h h))) a))) (cbrt.f64 (*.f64 (+.f64 a (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 h h)))) (/.f64 -1/2 g))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 h)) (+.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 a a)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 h)) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 a a)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 h) (+.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 a a)))))) (cbrt.f64 (*.f64 (/.f64 1/2 h) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 a a)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 h) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 a a))) g))) (cbrt.f64 (*.f64 (/.f64 1/2 h) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 a a)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 h) (-.f64 (sqrt.f64 (fma.f64 g g (*.f64 a (neg.f64 a)))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (fma.f64 g g (*.f64 a (neg.f64 a))))) (/.f64 -1/2 h))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":54.0029296875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[10,7796,48,0.07953725],[9,6718,48,0.069532917],[8,6120,48,0.055304542],[7,5301,48,0.043945709],[6,3919,48,0.031506168],[5,2645,48,0.018749793],[4,1288,48,0.009196459],[3,479,48,0.003396792],[2,154,50,0.0011267920000000002],[1,54,50,0.000331709],[0,20,52,0.000101042]],"inputs":[["(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (+.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (+.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (+.f64 (neg.f64 g) (sqrt.f64 (fma.f64 g g (neg.f64 (*.f64 h h))))))) (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (neg.f64 g) (sqrt.f64 (fma.f64 g g (neg.f64 (*.f64 h h))))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))"]],"stop":[["node limit",1]],"time":92.070068359375,"type":"simplify"},{"compiler":[[71,34]],"time":0.615966796875,"type":"eval"},{"alts":[["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","next",38.255120495860474]],"compiler":[[34,18],[34,18]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[38.255120495860474],"time":1.134033203125,"type":"prune"},{"compiler":[[144,38]],"locations":[["(-.f64 (*.f64 g g) (*.f64 h h))",2.7890625000000004,true],["(cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))",5.793717886366516,true],["(cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))",9.584627945950924,true],["(sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))",33.250698958394096,true]],"time":20.37890625,"type":"localize"},{"count":[[4,40]],"series":[["(-.f64 (*.f64 g g) (*.f64 h h))","h","-inf",0.1611328125],["(-.f64 (*.f64 g g) (*.f64 h h))","h","inf",0.2431640625],["(-.f64 (*.f64 g g) (*.f64 h h))","h","0",0.22509765625],["(-.f64 (*.f64 g g) (*.f64 h h))","g","-inf",0.181884765625],["(-.f64 (*.f64 g g) (*.f64 h h))","g","inf",0.2490234375],["(-.f64 (*.f64 g g) (*.f64 h h))","g","0",0.26318359375],["(cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))","a","-inf",0.31005859375],["(cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))","a","inf",0.31494140625],["(cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))","a","0",0.35693359375],["(cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))","h","-inf",0.4130859375],["(cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))","h","inf",0.610107421875],["(cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))","h","0",2.2958984375],["(cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))","g","-inf",0.452880859375],["(cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))","g","inf",0.47900390625],["(cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))","g","0",1.25390625],["(cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))","h","-inf",0.44189453125],["(cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))","h","inf",1.45703125],["(cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))","h","0",0.870849609375],["(cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))","g","-inf",0.80615234375],["(cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))","g","inf",1.037841796875],["(cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))","g","0",1.60888671875],["(cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))","a","-inf",0.612060546875],["(cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))","a","inf",0.447021484375],["(cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))","a","0",0.698974609375],["(sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","h","-inf",0.324951171875],["(sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","h","inf",0.390869140625],["(sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","h","0",0.4111328125],["(sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","g","-inf",0.286865234375],["(sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","g","inf",0.489990234375],["(sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","g","0",0.670166015625]],"time":18.8720703125,"type":"series"},{"count":[[4,160]],"egraph":[[2,5918,65,0.0383495],[1,408,68,0.0082445],[0,18,68,0.000492917]],"inputs":[["(sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","(cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))","(cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))","(-.f64 (*.f64 g g) (*.f64 h h))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) (cbrt.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/4) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 2)) (sqrt.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 g h)) (sqrt.f64 (-.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 2) 1/2) (pow.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 g h) 1/2) (pow.f64 (-.f64 g h) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 g 4) (pow.f64 h 4))) (hypot.f64 g h))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 g 6) (pow.f64 h 6))) (hypot.f64 (*.f64 g g) (hypot.f64 (*.f64 h h) (*.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) (hypot.f64 (sqrt.f64 (*.f64 h (neg.f64 h))) h))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (hypot.f64 (sqrt.f64 (*.f64 h (neg.f64 h))) h) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 h (neg.f64 h))) g)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g)) (cbrt.f64 (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/2 a)) (cbrt.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)))) 2) (cbrt.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)) 1/6) (pow.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))) 2) 1/3) (cbrt.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))) 1/3) (pow.f64 (sqrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 1/2 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)) 2))) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) (cbrt.f64 (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/2 a)) (cbrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)) 1/6) (pow.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)) 2)) 1/3) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a))) 1/3) (pow.f64 (sqrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) -1/2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 1/2 a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 g g) (*.f64 h (neg.f64 h)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 g g) (*.f64 (*.f64 h (neg.f64 h)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 g g) (+.f64 (*.f64 h (neg.f64 h)) (fma.f64 (neg.f64 h) h (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 g g) (*.f64 h h)) (fma.f64 (neg.f64 h) h (*.f64 h h)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 g g) (*.f64 h h)) (fma.f64 (*.f64 h (neg.f64 h)) 1 (*.f64 h h)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 g g) (*.f64 h h)) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 h) 2)) (cbrt.f64 (pow.f64 h 4)) (*.f64 h h)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 g g) (*.f64 h h)) (*.f64 (fma.f64 (neg.f64 h) h (*.f64 h h)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 g g) (*.f64 h h)) (+.f64 (fma.f64 (neg.f64 h) h (*.f64 h h)) (fma.f64 (neg.f64 h) h (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 h (neg.f64 h)) (*.f64 g g))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 h) h (*.f64 h h)) (-.f64 (*.f64 g g) (*.f64 h h)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 g g) (*.f64 h h)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) (*.f64 (cbrt.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 2) (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/4) (*.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/4) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 g 6) (pow.f64 h 6)) (/.f64 1 (+.f64 (pow.f64 g 4) (+.f64 (pow.f64 h 4) (pow.f64 (*.f64 g h) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 g 4) (pow.f64 h 4)) (/.f64 1 (fma.f64 g g (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 g h) (-.f64 g h))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 g h) (+.f64 g h))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/4)) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (cbrt.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 g 4) (+.f64 (pow.f64 h 4) (pow.f64 (*.f64 g h) 2))) (-.f64 (pow.f64 g 6) (pow.f64 h 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 g g (*.f64 h h)) (-.f64 (pow.f64 g 4) (pow.f64 h 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 g 6) (pow.f64 h 6)) (+.f64 (pow.f64 g 4) (+.f64 (pow.f64 h 4) (pow.f64 (*.f64 g h) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 g 4) (pow.f64 h 4)) (fma.f64 g g (*.f64 h h)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 g 6) (pow.f64 h 6))) (neg.f64 (+.f64 (pow.f64 g 4) (+.f64 (pow.f64 h 4) (pow.f64 (*.f64 g h) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 g 4) (pow.f64 h 4))) (neg.f64 (fma.f64 g g (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 g 6) (pow.f64 (*.f64 h (neg.f64 h)) 3)) (+.f64 (pow.f64 g 4) (-.f64 (*.f64 (*.f64 h (neg.f64 h)) (*.f64 h (neg.f64 h))) (*.f64 (*.f64 g g) (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3) (pow.f64 (fma.f64 (neg.f64 h) h (*.f64 h h)) 3)) (+.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 2) (-.f64 (*.f64 (fma.f64 (neg.f64 h) h (*.f64 h h)) (fma.f64 (neg.f64 h) h (*.f64 h h))) (*.f64 (-.f64 (*.f64 g g) (*.f64 h h)) (fma.f64 (neg.f64 h) h (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 g 4) (*.f64 (*.f64 h (neg.f64 h)) (*.f64 h (neg.f64 h)))) (-.f64 (*.f64 g g) (*.f64 h (neg.f64 h))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 2) (*.f64 (fma.f64 (neg.f64 h) h (*.f64 h h)) (fma.f64 (neg.f64 h) h (*.f64 h h)))) (-.f64 (-.f64 (*.f64 g g) (*.f64 h h)) (fma.f64 (neg.f64 h) h (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 g h)) (-.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 g g))) (pow.f64 (exp.f64 h) h)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 g) g) (+.f64 1 (expm1.f64 (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 g g))) (+.f64 1 (expm1.f64 (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 g g))) (exp.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 g) g) (/.f64 1 (pow.f64 (exp.f64 h) h))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 g g))) (/.f64 1 (pow.f64 (exp.f64 h) h))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (exp.f64 (fma.f64 (neg.f64 h) h (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (pow.f64 (exp.f64 g) g)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 h) h)) (pow.f64 (exp.f64 g) g)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (+.f64 1 (expm1.f64 (*.f64 g g)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 h) h)) (+.f64 1 (expm1.f64 (*.f64 g g)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (neg.f64 h) h (*.f64 h h))) (pow.f64 (exp.f64 (+.f64 g h)) (-.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (neg.f64 h) h (*.f64 h h))) (+.f64 1 (expm1.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 g g (*.f64 h (neg.f64 h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 g g (neg.f64 (-.f64 (*.f64 h h) (fma.f64 (neg.f64 h) h (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 g g) 1 (*.f64 h (neg.f64 h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 g g) 1 (neg.f64 (-.f64 (*.f64 h h) (fma.f64 (neg.f64 h) h (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) (fma.f64 (neg.f64 h) h (*.f64 h h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 g g) (*.f64 h (neg.f64 h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 g g) (neg.f64 (-.f64 (*.f64 h h) (fma.f64 (neg.f64 h) h (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 g g) (*.f64 h h)) (fma.f64 (neg.f64 h) h (*.f64 h h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 2) (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) (fma.f64 (neg.f64 h) h (*.f64 h h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 g) 2) (cbrt.f64 (pow.f64 g 4)) (*.f64 h (neg.f64 h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 g) 2) (cbrt.f64 (pow.f64 g 4)) (neg.f64 (-.f64 (*.f64 h h) (fma.f64 (neg.f64 h) h (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 g) 2) (*.f64 (cbrt.f64 g) g) (*.f64 h (neg.f64 h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 g) 2) (*.f64 (cbrt.f64 g) g) (neg.f64 (-.f64 (*.f64 h h) (fma.f64 (neg.f64 h) h (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 g 4)) (pow.f64 (cbrt.f64 g) 2) (*.f64 h (neg.f64 h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 g 4)) (pow.f64 (cbrt.f64 g) 2) (neg.f64 (-.f64 (*.f64 h h) (fma.f64 (neg.f64 h) h (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 g) (*.f64 (sqrt.f64 g) g) (*.f64 h (neg.f64 h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 g) (*.f64 (sqrt.f64 g) g) (neg.f64 (-.f64 (*.f64 h h) (fma.f64 (neg.f64 h) h (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 g h) (-.f64 g h) (fma.f64 (neg.f64 h) h (*.f64 h h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 g (sqrt.f64 g)) (sqrt.f64 g) (*.f64 h (neg.f64 h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 g (sqrt.f64 g)) (sqrt.f64 g) (neg.f64 (-.f64 (*.f64 h h) (fma.f64 (neg.f64 h) h (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 g (pow.f64 (cbrt.f64 g) 2)) (cbrt.f64 g) (*.f64 h (neg.f64 h)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 g (pow.f64 (cbrt.f64 g) 2)) (cbrt.f64 g) (neg.f64 (-.f64 (*.f64 h h) (fma.f64 (neg.f64 h) h (*.f64 h h)))))))))"]],"rules":[["egg-rr",81],["egg-rr",24],["egg-rr",24],["egg-rr",31]],"stop":[["node limit",1]],"time":71.548095703125,"type":"rewrite"},{"count":[[200,189]],"egraph":[[4,6238,698,0.030992418],[3,4388,698,0.017865459],[2,894,729,0.007577376],[1,275,732,0.001970584],[0,94,783,0.000488459]],"inputs":[["g","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(*.f64 -1 g)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 -1 g))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1 g) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (*.f64 1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1 g) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","g","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 h 2)) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 (/.f64 1 (*.f64 a (pow.f64 g 5))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 h 2)) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 (/.f64 1 (*.f64 a (pow.f64 g 5))) 1/3))) (+.f64 (*.f64 -1/18 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 h 4)) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 (/.f64 1 (*.f64 a (pow.f64 g 11))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 h 2)) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 (/.f64 1 (*.f64 a (pow.f64 g 5))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (-.f64 (*.f64 1/216 (/.f64 1 (*.f64 a (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 g 5))))) (*.f64 13/144 (/.f64 1 (*.f64 a (pow.f64 g 5))))) (pow.f64 h 6))) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 a 2)) (pow.f64 g 2)) 1/3))) (+.f64 (*.f64 -1/18 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 h 4)) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 (/.f64 1 (*.f64 a (pow.f64 g 11))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2))))))","(*.f64 -1 (pow.f64 h 2))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(pow.f64 g 2)","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(pow.f64 g 2)","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(pow.f64 g 2)","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(*.f64 -1 (pow.f64 h 2))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(*.f64 -1 (pow.f64 h 2))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))"]],"method":["egg-herbie"],"outputs":[["g","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) g)","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) g)","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) g)","(fma.f64 -1/2 (*.f64 h (/.f64 h g)) g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 h h) g) g) (/.f64 (*.f64 -1/8 (pow.f64 h 4)) (pow.f64 g 3)))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g))","(fma.f64 -1/2 (*.f64 h (/.f64 h g)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g))","(fma.f64 -1/2 (*.f64 h (/.f64 h g)) (fma.f64 -1/8 (*.f64 h (pow.f64 (/.f64 h g) 3)) g))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (+.f64 g (/.f64 (*.f64 -1/8 (pow.f64 h 4)) (pow.f64 g 3)))))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g)))","(fma.f64 -1/2 (*.f64 h (/.f64 h g)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) g)))","(fma.f64 -1/2 (*.f64 h (/.f64 h g)) (fma.f64 -1/8 (*.f64 h (pow.f64 (/.f64 h g) 3)) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) g)))","(fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 -1/2 (*.f64 h (/.f64 h g)) (fma.f64 -1/8 (*.f64 h (pow.f64 (/.f64 h g) 3)) g)))","(*.f64 -1 g)","(neg.f64 g)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 -1 g))","(fma.f64 1/2 (/.f64 (*.f64 h h) g) (neg.f64 g))","(-.f64 (/.f64 (*.f64 (*.f64 h h) 1/2) g) g)","(-.f64 (*.f64 (*.f64 h h) (/.f64 1/2 g)) g)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1 g) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(fma.f64 1/2 (/.f64 (*.f64 h h) g) (fma.f64 -1 g (*.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8)))","(fma.f64 (/.f64 h (/.f64 g h)) 1/2 (-.f64 (/.f64 1/8 (/.f64 (pow.f64 g 3) (pow.f64 h 4))) g))","(fma.f64 (*.f64 h (/.f64 h g)) 1/2 (-.f64 (*.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8) g))","(fma.f64 h (*.f64 (/.f64 h g) 1/2) (-.f64 (/.f64 (*.f64 (pow.f64 h 4) 1/8) (pow.f64 g 3)) g))","(+.f64 (*.f64 1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1 g) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 1/2 (/.f64 (*.f64 h h) g) (fma.f64 -1 g (*.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8))))","(fma.f64 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) 1/16 (fma.f64 (/.f64 h (/.f64 g h)) 1/2 (-.f64 (/.f64 1/8 (/.f64 (pow.f64 g 3) (pow.f64 h 4))) g)))","(fma.f64 (*.f64 h (/.f64 h g)) 1/2 (-.f64 (fma.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8 (*.f64 (/.f64 1/16 (pow.f64 g 5)) (pow.f64 h 6))) g))","(-.f64 (fma.f64 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) 1/16 (*.f64 (*.f64 h h) (/.f64 1/2 g))) (fma.f64 -1/8 (*.f64 h (pow.f64 (/.f64 h g) 3)) g))","(-.f64 (*.f64 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) 1/16) (fma.f64 -1/2 (*.f64 h (/.f64 h g)) (fma.f64 -1/8 (*.f64 h (pow.f64 (/.f64 h g) 3)) g)))","g","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) g)","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) g)","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) g)","(fma.f64 -1/2 (*.f64 h (/.f64 h g)) g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 h h) g) g) (/.f64 (*.f64 -1/8 (pow.f64 h 4)) (pow.f64 g 3)))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g))","(fma.f64 -1/2 (*.f64 h (/.f64 h g)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g))","(fma.f64 -1/2 (*.f64 h (/.f64 h g)) (fma.f64 -1/8 (*.f64 h (pow.f64 (/.f64 h g) 3)) g))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (+.f64 g (/.f64 (*.f64 -1/8 (pow.f64 h 4)) (pow.f64 g 3)))))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g)))","(fma.f64 -1/2 (*.f64 h (/.f64 h g)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) g)))","(fma.f64 -1/2 (*.f64 h (/.f64 h g)) (fma.f64 -1/8 (*.f64 h (pow.f64 (/.f64 h g) 3)) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) g)))","(fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 -1/2 (*.f64 h (/.f64 h g)) (fma.f64 -1/8 (*.f64 h (pow.f64 (/.f64 h g) 3)) g)))","(*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)))","(*.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)))","(*.f64 (cbrt.f64 -1/2) (*.f64 (cbrt.f64 (/.f64 g a)) (cbrt.f64 2)))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 h 2)) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 (/.f64 1 (*.f64 a (pow.f64 g 5))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2))))","(fma.f64 -1/6 (*.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 (cbrt.f64 2) 2) (*.f64 h h))) (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 g 5) a)))) (*.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2))))","(fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (*.f64 -1/6 (*.f64 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 (cbrt.f64 2) 2)) (*.f64 h h)) (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 g 5) a))))))","(fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (*.f64 -1/6 (*.f64 (/.f64 (*.f64 h h) (/.f64 (pow.f64 (cbrt.f64 2) 2) (cbrt.f64 -1/2))) (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 g 5) a))))))","(fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (*.f64 (cbrt.f64 (/.f64 (/.f64 1 a) (pow.f64 g 5))) (*.f64 -1/6 (*.f64 (/.f64 (*.f64 h h) (pow.f64 (cbrt.f64 2) 2)) (cbrt.f64 -1/2)))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 h 2)) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 (/.f64 1 (*.f64 a (pow.f64 g 5))) 1/3))) (+.f64 (*.f64 -1/18 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 h 4)) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 (/.f64 1 (*.f64 a (pow.f64 g 11))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)))))","(fma.f64 -1/6 (*.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 (cbrt.f64 2) 2) (*.f64 h h))) (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 g 5) a)))) (fma.f64 -1/18 (*.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 h 4))) (cbrt.f64 (/.f64 1 (*.f64 a (pow.f64 g 11))))) (*.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)))))","(fma.f64 -1/6 (*.f64 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 (cbrt.f64 2) 2)) (*.f64 h h)) (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 g 5) a)))) (fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (*.f64 -1/18 (*.f64 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 h 4)) (cbrt.f64 (/.f64 1 (*.f64 a (pow.f64 g 11))))))))","(fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (fma.f64 -1/6 (*.f64 (/.f64 (*.f64 h h) (/.f64 (pow.f64 (cbrt.f64 2) 2) (cbrt.f64 -1/2))) (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 g 5) a)))) (*.f64 (*.f64 (/.f64 (pow.f64 h 4) (pow.f64 (cbrt.f64 2) 2)) (cbrt.f64 -1/2)) (*.f64 -1/18 (cbrt.f64 (/.f64 1 (*.f64 a (pow.f64 g 11))))))))","(fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 (cbrt.f64 2) 2)) (+.f64 (*.f64 (*.f64 h h) (*.f64 -1/6 (cbrt.f64 (/.f64 (/.f64 1 a) (pow.f64 g 5))))) (*.f64 (pow.f64 h 4) (*.f64 -1/18 (cbrt.f64 (/.f64 1 (*.f64 a (pow.f64 g 11)))))))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 h 2)) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 (/.f64 1 (*.f64 a (pow.f64 g 5))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (-.f64 (*.f64 1/216 (/.f64 1 (*.f64 a (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 g 5))))) (*.f64 13/144 (/.f64 1 (*.f64 a (pow.f64 g 5))))) (pow.f64 h 6))) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 a 2)) (pow.f64 g 2)) 1/3))) (+.f64 (*.f64 -1/18 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 h 4)) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 (/.f64 1 (*.f64 a (pow.f64 g 11))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2))))))","(fma.f64 -1/6 (*.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 (cbrt.f64 2) 2) (*.f64 h h))) (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 g 5) a)))) (fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 (cbrt.f64 2) 2) (*.f64 (pow.f64 h 6) (-.f64 (/.f64 1/216 (*.f64 a (*.f64 (pow.f64 g 5) (pow.f64 (cbrt.f64 2) 6)))) (/.f64 13/144 (*.f64 (pow.f64 g 5) a)))))) (cbrt.f64 (/.f64 (*.f64 a a) (*.f64 g g)))) (fma.f64 -1/18 (*.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 h 4))) (cbrt.f64 (/.f64 1 (*.f64 a (pow.f64 g 11))))) (*.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2))))))","(fma.f64 -1/6 (*.f64 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 (cbrt.f64 2) 2)) (*.f64 h h)) (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 g 5) a)))) (fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (pow.f64 h 6) (+.f64 (/.f64 1/216 (*.f64 a (*.f64 (pow.f64 g 5) 4))) (/.f64 -13/144 (*.f64 (pow.f64 g 5) a))))) (/.f64 (pow.f64 (cbrt.f64 2) 2) (cbrt.f64 (*.f64 (/.f64 a g) (/.f64 a g))))) (fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (*.f64 -1/18 (*.f64 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 (cbrt.f64 2) 2)) (pow.f64 h 4)) (cbrt.f64 (/.f64 1 (*.f64 a (pow.f64 g 11)))))))))","(fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 (cbrt.f64 2) 2)) (*.f64 (pow.f64 h 6) (*.f64 (+.f64 (/.f64 (/.f64 1/864 a) (pow.f64 g 5)) (/.f64 -13/144 (*.f64 (pow.f64 g 5) a))) (cbrt.f64 (*.f64 a (/.f64 a (*.f64 g g))))))) (fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (fma.f64 -1/6 (*.f64 (/.f64 (*.f64 h h) (/.f64 (pow.f64 (cbrt.f64 2) 2) (cbrt.f64 -1/2))) (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 g 5) a)))) (*.f64 (*.f64 (/.f64 (pow.f64 h 4) (pow.f64 (cbrt.f64 2) 2)) (cbrt.f64 -1/2)) (*.f64 -1/18 (cbrt.f64 (/.f64 1 (*.f64 a (pow.f64 g 11)))))))))","(fma.f64 1/3 (*.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (cbrt.f64 (*.f64 a (/.f64 a (*.f64 g g))))) (pow.f64 (cbrt.f64 2) 2)) (*.f64 (pow.f64 h 6) (*.f64 (/.f64 (/.f64 1 a) (pow.f64 g 5)) -77/864))) (fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 (cbrt.f64 2) 2)) (+.f64 (*.f64 (*.f64 h h) (*.f64 -1/6 (cbrt.f64 (/.f64 (/.f64 1 a) (pow.f64 g 5))))) (*.f64 (pow.f64 h 4) (*.f64 -1/18 (cbrt.f64 (/.f64 1 (*.f64 a (pow.f64 g 11))))))))))","(*.f64 -1 (pow.f64 h 2))","(neg.f64 (*.f64 h h))","(*.f64 h (neg.f64 h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(pow.f64 g 2)","(*.f64 g g)","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(pow.f64 g 2)","(*.f64 g g)","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(pow.f64 g 2)","(*.f64 g g)","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(*.f64 -1 (pow.f64 h 2))","(neg.f64 (*.f64 h h))","(*.f64 h (neg.f64 h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(*.f64 -1 (pow.f64 h 2))","(neg.f64 (*.f64 h h))","(*.f64 h (neg.f64 h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))","(+.f64 (pow.f64 g 2) (*.f64 -1 (pow.f64 h 2)))","(+.f64 (*.f64 g g) (neg.f64 (*.f64 h h)))","(-.f64 (*.f64 g g) (*.f64 h h))"]],"stop":[["node limit",1]],"time":52.369873046875,"type":"simplify"},{"compiler":[[12416,4875]],"time":76.777099609375,"type":"eval"},{"alts":[["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (/.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) -1/2)) (cbrt.f64 a)))","fresh",48.53467968983397],["(+.f64 (*.f64 (cbrt.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g)) (cbrt.f64 (/.f64 1/2 a))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",47.53847522169623],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (*.f64 (sqrt.f64 (+.f64 g h)) (sqrt.f64 (-.f64 g h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",54.64552393655801],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (*.f64 (cbrt.f64 (/.f64 (/.f64 1 a) (pow.f64 g 5))) (*.f64 -1/6 (*.f64 (/.f64 (*.f64 h h) (pow.f64 (cbrt.f64 2) 2)) (cbrt.f64 -1/2))))))","fresh",52.65642987139966],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 g g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",49.76558641790725],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (pow.f64 (cbrt.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 3)) (/.f64 -1/2 a))))","fresh",51.20056894454513],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (neg.f64 g)) (/.f64 -1/2 a))))","fresh",50.791630213649704],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2))))","fresh",56.13852097440259],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (/.f64 -1/2 a))))","next",42.9859364444127],["(+.f64 (/.f64 (cbrt.f64 (*.f64 1/2 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g))) (cbrt.f64 a)) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",47.55019397169623],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",53.41166006951949],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (fma.f64 -1/2 (*.f64 h (/.f64 h g)) g)) (/.f64 -1/2 a))))","fresh",47.8293763699439],["(+.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))) 1) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",49.188629544690585],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) (/.f64 -1/2 a))))","fresh",53.11148842572897]],"compiler":[[34,23],[34,23],[35,23],[51,38],[27,18],[36,25],[28,19],[32,24],[36,21],[34,23],[35,24],[34,22],[35,24],[35,24],[34,23],[34,23],[35,23],[51,38],[27,18],[36,25],[28,19],[32,24],[36,21],[34,23],[35,24],[34,22],[35,24],[35,24]],"count":[[323,14]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[322,14],"picked":[1,0]}],"min-error":[35.74530435402341],"time":154.90185546875,"type":"prune"},{"compiler":[[179,41]],"locations":[["(+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))",26.88651947698512,true],["(log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))",29.298036050532364,true],["(sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))",33.250698958394096,true],["(sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))",33.250698958394096,false]],"time":25.0791015625,"type":"localize"},{"count":[[3,48]],"series":[["(+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))","h","-inf",0.22607421875],["(+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))","h","inf",0.18017578125],["(+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))","h","0",0.22216796875],["(+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))","g","-inf",0.615966796875],["(+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))","g","inf",0.2177734375],["(+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))","g","0",0.22705078125],["(log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","h","-inf",0.2939453125],["(log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","h","inf",0.578857421875],["(log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","h","0",1.68603515625],["(log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","g","-inf",0.262939453125],["(log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","g","inf",0.578125],["(log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","g","0",0.709228515625],["(sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))","h","-inf",0.198974609375],["(sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))","h","inf",0.248046875],["(sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))","h","0",0.170166015625],["(sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))","g","-inf",0.18212890625],["(sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))","g","inf",0.239013671875],["(sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))","g","0",0.380859375]],"time":7.5029296875,"type":"series"},{"count":[[3,114]],"egraph":[[2,3114,37,0.026339417000000004],[1,210,39,0.0042567920000000006],[0,10,39,0.000251333]],"inputs":[["(sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))","(log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))","(+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 g h) (-.f64 g h))) (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 1/6) (cbrt.f64 (*.f64 (+.f64 g h) (-.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 1/4) (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 g h)) (sqrt.f64 (-.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 g 4) (pow.f64 h 4))) (hypot.f64 g h))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 g 6) (pow.f64 h 6))) (hypot.f64 (*.f64 g g) (hypot.f64 (*.f64 h h) (*.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 3) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 g h) (-.f64 g h))) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) (hypot.f64 (sqrt.f64 (*.f64 h (neg.f64 h))) h))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 h (neg.f64 h))) g)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (hypot.f64 (sqrt.f64 (*.f64 h (neg.f64 h))) h) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 g h) (-.f64 g h))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 1/6)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/4 (log.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3/2 (log.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 g h) (-.f64 g h) 1)) 2)) (log.f64 (cbrt.f64 (fma.f64 (+.f64 g h) (-.f64 g h) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (fma.f64 (+.f64 g h) (-.f64 g h) 1))) (log.f64 (sqrt.f64 (fma.f64 (+.f64 g h) (-.f64 g h) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 3)) (log.f64 (+.f64 1 (-.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 2) (*.f64 (+.f64 g h) (-.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 1 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 2))) (log.f64 (-.f64 1 (*.f64 (+.f64 g h) (-.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) (pow.f64 (cbrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2) (cbrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (fma.f64 (+.f64 g h) (-.f64 g h) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h))))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 g g) (-.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) (/.f64 (*.f64 (+.f64 g h) (-.f64 g h)) (-.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) (pow.f64 (cbrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) 2) (cbrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) (sqrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 g 3) (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 3/2)) (/.f64 1 (fma.f64 g g (-.f64 (*.f64 g g) (fma.f64 h h (*.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (-.f64 (*.f64 g g) (*.f64 g g)) (*.f64 h h)) (/.f64 1 (-.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 g g (-.f64 (*.f64 g g) (fma.f64 h h (*.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (+.f64 (pow.f64 g 3) (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (+.f64 (-.f64 (*.f64 g g) (*.f64 g g)) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 g 3) (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 3/2)) (fma.f64 g g (-.f64 (*.f64 g g) (fma.f64 h h (*.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 g 3) (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 3/2)) (fma.f64 (+.f64 g h) (-.f64 g h) (-.f64 (*.f64 g g) (*.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 (*.f64 g g) (*.f64 g g)) (*.f64 h h)) (-.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 g 3) (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 3/2))) (neg.f64 (fma.f64 g g (-.f64 (*.f64 g g) (fma.f64 h h (*.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (-.f64 (*.f64 g g) (*.f64 g g)) (*.f64 h h))) (neg.f64 (-.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 g h) (-.f64 g h)) (*.f64 g g)) (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 g g (-.f64 (*.f64 g g) (fma.f64 h h (*.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (+.f64 (pow.f64 g 3) (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (+.f64 (-.f64 (*.f64 g g) (*.f64 g g)) (*.f64 h h))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 g)) (exp.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 g) (+.f64 1 (expm1.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 g)) (+.f64 1 (expm1.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) (exp.f64 g)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (+.f64 1 (expm1.f64 g))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) (+.f64 1 (expm1.f64 g))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 g 1 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) 1 g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 g h) (-.f64 g h))) (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 1/6) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 g) (pow.f64 (cbrt.f64 g) 2) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 1/6) (cbrt.f64 (*.f64 (+.f64 g h) (-.f64 g h))) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 g) 2) (cbrt.f64 g) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 g) (sqrt.f64 g) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 1/4) (pow.f64 (*.f64 (+.f64 g h) (-.f64 g h)) 1/4) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cbrt.f64 g) g)) (sqrt.f64 (pow.f64 (cbrt.f64 g) 2)) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 g h)) (sqrt.f64 (-.f64 g h)) g)))))"]],"rules":[["egg-rr",53],["egg-rr",25],["egg-rr",36]],"stop":[["node limit",1]],"time":52.376953125,"type":"rewrite"},{"count":[[162,192]],"egraph":[[3,5373,1284,0.024391126],[2,1293,1295,0.010492584],[1,432,1343,0.002807792],[0,148,1420,0.000652667]],"inputs":[["g","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(*.f64 -1 g)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 -1 g))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1 g) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (*.f64 1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1 g) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","g","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(log.f64 (-.f64 1 (pow.f64 h 2)))","(+.f64 (/.f64 (pow.f64 g 2) (-.f64 1 (pow.f64 h 2))) (log.f64 (-.f64 1 (pow.f64 h 2))))","(+.f64 (/.f64 (pow.f64 g 2) (-.f64 1 (pow.f64 h 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 g 4) (pow.f64 (-.f64 1 (pow.f64 h 2)) 2))) (log.f64 (-.f64 1 (pow.f64 h 2)))))","(+.f64 (/.f64 (pow.f64 g 2) (-.f64 1 (pow.f64 h 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 g 6) (pow.f64 (-.f64 1 (pow.f64 h 2)) 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 g 4) (pow.f64 (-.f64 1 (pow.f64 h 2)) 2))) (log.f64 (-.f64 1 (pow.f64 h 2))))))","(*.f64 -2 (log.f64 (/.f64 1 g)))","(-.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (/.f64 1 (pow.f64 g 2))) (/.f64 (pow.f64 h 2) (pow.f64 g 2)))","(-.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 4))) (/.f64 1 (pow.f64 g 2)))) (/.f64 (pow.f64 h 2) (pow.f64 g 2)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 3) (pow.f64 g 6))) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 4))) (/.f64 1 (pow.f64 g 2))))) (/.f64 (pow.f64 h 2) (pow.f64 g 2)))","(*.f64 -2 (log.f64 (/.f64 -1 g)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 g 2)) (*.f64 -2 (log.f64 (/.f64 -1 g)))) (/.f64 (pow.f64 h 2) (pow.f64 g 2)))","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 4))) (+.f64 (/.f64 1 (pow.f64 g 2)) (*.f64 -2 (log.f64 (/.f64 -1 g))))) (/.f64 (pow.f64 h 2) (pow.f64 g 2)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 3) (pow.f64 g 6))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 4))) (+.f64 (/.f64 1 (pow.f64 g 2)) (*.f64 -2 (log.f64 (/.f64 -1 g)))))) (/.f64 (pow.f64 h 2) (pow.f64 g 2)))","(log.f64 (+.f64 1 (pow.f64 g 2)))","(+.f64 (log.f64 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (/.f64 (pow.f64 h 2) (+.f64 1 (pow.f64 g 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 4) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (+.f64 (log.f64 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (/.f64 (pow.f64 h 2) (+.f64 1 (pow.f64 g 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 4) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (+.f64 (log.f64 (+.f64 1 (pow.f64 g 2))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 h 6) (pow.f64 (+.f64 1 (pow.f64 g 2)) 3))) (*.f64 -1 (/.f64 (pow.f64 h 2) (+.f64 1 (pow.f64 g 2)))))))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (pow.f64 g 2)) (pow.f64 h 2))) (log.f64 -1)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (pow.f64 g 2)) 2) (pow.f64 h 4))) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (pow.f64 g 2)) (pow.f64 h 2))) (log.f64 -1))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (pow.f64 g 2)) 2) (pow.f64 h 4))) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (pow.f64 g 2)) (pow.f64 h 2))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (pow.f64 g 2)) 3) (pow.f64 h 6))) (log.f64 -1)))))","(+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 1 (pow.f64 g 2)) (pow.f64 h 2))) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (pow.f64 g 2)) 2) (pow.f64 h 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (pow.f64 g 2)) (pow.f64 h 2))) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (pow.f64 g 2)) 2) (pow.f64 h 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (pow.f64 g 2)) (pow.f64 h 2))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (pow.f64 g 2)) 3) (pow.f64 h 6))) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))","(*.f64 2 g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 2 g))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 2 g) (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 (*.f64 2 g) (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(*.f64 1/2 (/.f64 (pow.f64 h 2) g))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))","(+.f64 (*.f64 1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (*.f64 1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 h 8)) (pow.f64 (*.f64 -1/8 (pow.f64 h 4)) 2)) (pow.f64 g 7))) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(*.f64 2 g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 2 g))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 2 g) (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 (*.f64 2 g) (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))"]],"method":["egg-herbie"],"outputs":[["g","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) g)","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) g)","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) g)","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 h h) g) g) (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g))","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g)))","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) g)))","(*.f64 -1 g)","(neg.f64 g)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 -1 g))","(fma.f64 1/2 (/.f64 (*.f64 h h) g) (neg.f64 g))","(fma.f64 (/.f64 h (/.f64 g h)) 1/2 (neg.f64 g))","(-.f64 (*.f64 (/.f64 1/2 g) (*.f64 h h)) g)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1 g) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(fma.f64 1/2 (/.f64 (*.f64 h h) g) (fma.f64 -1 g (/.f64 (*.f64 1/8 (pow.f64 h 4)) (pow.f64 g 3))))","(fma.f64 (/.f64 h (/.f64 g h)) 1/2 (-.f64 (*.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8) g))","(fma.f64 (*.f64 (/.f64 h g) h) 1/2 (-.f64 (/.f64 (pow.f64 h 4) (/.f64 (pow.f64 g 3) 1/8)) g))","(-.f64 (*.f64 (/.f64 1/2 g) (*.f64 h h)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g))","(+.f64 (*.f64 1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1 g) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 1/2 (/.f64 (*.f64 h h) g) (fma.f64 -1 g (/.f64 (*.f64 1/8 (pow.f64 h 4)) (pow.f64 g 3)))))","(fma.f64 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) 1/16 (fma.f64 (/.f64 h (/.f64 g h)) 1/2 (-.f64 (*.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8) g)))","(-.f64 (fma.f64 (*.f64 (/.f64 h g) h) 1/2 (fma.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8 (*.f64 (/.f64 1/16 (pow.f64 g 5)) (pow.f64 h 6)))) g)","g","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) g)","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) g)","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) g)","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 h h) g) g) (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g))","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (+.f64 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) g)))","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) g)))","(log.f64 (-.f64 1 (pow.f64 h 2)))","(log.f64 (-.f64 1 (*.f64 h h)))","(log1p.f64 (*.f64 h (neg.f64 h)))","(log1p.f64 (neg.f64 (*.f64 h h)))","(+.f64 (/.f64 (pow.f64 g 2) (-.f64 1 (pow.f64 h 2))) (log.f64 (-.f64 1 (pow.f64 h 2))))","(+.f64 (log.f64 (-.f64 1 (*.f64 h h))) (/.f64 (*.f64 g g) (-.f64 1 (*.f64 h h))))","(+.f64 (log1p.f64 (*.f64 h (neg.f64 h))) (/.f64 g (/.f64 (-.f64 1 (*.f64 h h)) g)))","(+.f64 (log1p.f64 (*.f64 h (neg.f64 h))) (*.f64 (/.f64 g (-.f64 1 (*.f64 h h))) g))","(+.f64 (log1p.f64 (neg.f64 (*.f64 h h))) (*.f64 (/.f64 g (-.f64 1 (*.f64 h h))) g))","(+.f64 (/.f64 (pow.f64 g 2) (-.f64 1 (pow.f64 h 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 g 4) (pow.f64 (-.f64 1 (pow.f64 h 2)) 2))) (log.f64 (-.f64 1 (pow.f64 h 2)))))","(+.f64 (/.f64 (*.f64 g g) (-.f64 1 (*.f64 h h))) (fma.f64 -1/2 (/.f64 (pow.f64 g 4) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (log.f64 (-.f64 1 (*.f64 h h)))))","(+.f64 (/.f64 g (/.f64 (-.f64 1 (*.f64 h h)) g)) (fma.f64 -1/2 (/.f64 (pow.f64 g 4) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (log1p.f64 (*.f64 h (neg.f64 h)))))","(+.f64 (log1p.f64 (*.f64 h (neg.f64 h))) (fma.f64 -1/2 (/.f64 (pow.f64 g 4) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (*.f64 (/.f64 g (-.f64 1 (*.f64 h h))) g)))","(+.f64 (log1p.f64 (neg.f64 (*.f64 h h))) (fma.f64 -1/2 (/.f64 (pow.f64 g 4) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (*.f64 (/.f64 g (-.f64 1 (*.f64 h h))) g)))","(+.f64 (/.f64 (pow.f64 g 2) (-.f64 1 (pow.f64 h 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 g 6) (pow.f64 (-.f64 1 (pow.f64 h 2)) 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 g 4) (pow.f64 (-.f64 1 (pow.f64 h 2)) 2))) (log.f64 (-.f64 1 (pow.f64 h 2))))))","(+.f64 (/.f64 (*.f64 g g) (-.f64 1 (*.f64 h h))) (fma.f64 1/3 (/.f64 (pow.f64 g 6) (pow.f64 (-.f64 1 (*.f64 h h)) 3)) (fma.f64 -1/2 (/.f64 (pow.f64 g 4) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (log.f64 (-.f64 1 (*.f64 h h))))))","(+.f64 (/.f64 g (/.f64 (-.f64 1 (*.f64 h h)) g)) (fma.f64 1/3 (/.f64 (pow.f64 g 6) (pow.f64 (-.f64 1 (*.f64 h h)) 3)) (fma.f64 -1/2 (/.f64 (pow.f64 g 4) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (log1p.f64 (*.f64 h (neg.f64 h))))))","(+.f64 (fma.f64 -1/2 (/.f64 (pow.f64 g 4) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (*.f64 (/.f64 g (-.f64 1 (*.f64 h h))) g)) (fma.f64 1/3 (/.f64 (pow.f64 g 6) (pow.f64 (-.f64 1 (*.f64 h h)) 3)) (log1p.f64 (*.f64 h (neg.f64 h)))))","(+.f64 (fma.f64 -1/2 (/.f64 (pow.f64 g 4) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (log1p.f64 (neg.f64 (*.f64 h h)))) (fma.f64 1/3 (/.f64 (pow.f64 g 6) (pow.f64 (-.f64 1 (*.f64 h h)) 3)) (*.f64 (/.f64 g (-.f64 1 (*.f64 h h))) g)))","(*.f64 -2 (log.f64 (/.f64 1 g)))","(*.f64 -2 (neg.f64 (log.f64 g)))","(*.f64 2 (log.f64 g))","(-.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (/.f64 1 (pow.f64 g 2))) (/.f64 (pow.f64 h 2) (pow.f64 g 2)))","(-.f64 (fma.f64 -2 (neg.f64 (log.f64 g)) (/.f64 1 (*.f64 g g))) (/.f64 (*.f64 h h) (*.f64 g g)))","(-.f64 (fma.f64 -2 (neg.f64 (log.f64 g)) (/.f64 1 (*.f64 g g))) (/.f64 h (/.f64 (*.f64 g g) h)))","(+.f64 (*.f64 2 (log.f64 g)) (/.f64 (-.f64 1 (*.f64 h h)) (*.f64 g g)))","(-.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 4))) (/.f64 1 (pow.f64 g 2)))) (/.f64 (pow.f64 h 2) (pow.f64 g 2)))","(-.f64 (fma.f64 -2 (neg.f64 (log.f64 g)) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (/.f64 1 (*.f64 g g)))) (/.f64 (*.f64 h h) (*.f64 g g)))","(-.f64 (fma.f64 -2 (neg.f64 (log.f64 g)) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (/.f64 1 (*.f64 g g)))) (/.f64 h (/.f64 (*.f64 g g) h)))","(+.f64 (*.f64 2 (log.f64 g)) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (/.f64 (-.f64 1 (*.f64 h h)) (*.f64 g g))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 3) (pow.f64 g 6))) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 4))) (/.f64 1 (pow.f64 g 2))))) (/.f64 (pow.f64 h 2) (pow.f64 g 2)))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 3) (pow.f64 g 6)) (fma.f64 -2 (neg.f64 (log.f64 g)) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (/.f64 1 (*.f64 g g))))) (/.f64 (*.f64 h h) (*.f64 g g)))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 3) (pow.f64 g 6)) (fma.f64 -2 (neg.f64 (log.f64 g)) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (/.f64 1 (*.f64 g g))))) (/.f64 h (/.f64 (*.f64 g g) h)))","(+.f64 (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (/.f64 (-.f64 1 (*.f64 h h)) (*.f64 g g))) (fma.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 3) (pow.f64 g 6)) (*.f64 2 (log.f64 g))))","(+.f64 (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (/.f64 (-.f64 1 (*.f64 h h)) (*.f64 g g))) (fma.f64 1/3 (pow.f64 (/.f64 (-.f64 1 (*.f64 h h)) (*.f64 g g)) 3) (*.f64 2 (log.f64 g))))","(*.f64 -2 (log.f64 (/.f64 -1 g)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 g 2)) (*.f64 -2 (log.f64 (/.f64 -1 g)))) (/.f64 (pow.f64 h 2) (pow.f64 g 2)))","(+.f64 (/.f64 1 (*.f64 g g)) (-.f64 (*.f64 -2 (log.f64 (/.f64 -1 g))) (/.f64 (*.f64 h h) (*.f64 g g))))","(-.f64 (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 1 (*.f64 g g))) (/.f64 h (/.f64 (*.f64 g g) h)))","(fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 (-.f64 1 (*.f64 h h)) (*.f64 g g)))","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 4))) (+.f64 (/.f64 1 (pow.f64 g 2)) (*.f64 -2 (log.f64 (/.f64 -1 g))))) (/.f64 (pow.f64 h 2) (pow.f64 g 2)))","(-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (+.f64 (/.f64 1 (*.f64 g g)) (*.f64 -2 (log.f64 (/.f64 -1 g))))) (/.f64 (*.f64 h h) (*.f64 g g)))","(-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 1 (*.f64 g g)))) (/.f64 h (/.f64 (*.f64 g g) h)))","(fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 (-.f64 1 (*.f64 h h)) (*.f64 g g))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 3) (pow.f64 g 6))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 4))) (+.f64 (/.f64 1 (pow.f64 g 2)) (*.f64 -2 (log.f64 (/.f64 -1 g)))))) (/.f64 (pow.f64 h 2) (pow.f64 g 2)))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 3) (pow.f64 g 6)) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (+.f64 (/.f64 1 (*.f64 g g)) (*.f64 -2 (log.f64 (/.f64 -1 g)))))) (/.f64 (*.f64 h h) (*.f64 g g)))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 3) (pow.f64 g 6)) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 1 (*.f64 g g))))) (/.f64 h (/.f64 (*.f64 g g) h)))","(fma.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 3) (pow.f64 g 6)) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 (-.f64 1 (*.f64 h h)) (*.f64 g g)))))","(fma.f64 1/3 (pow.f64 (/.f64 (-.f64 1 (*.f64 h h)) (*.f64 g g)) 3) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 h h)) 2) (pow.f64 g 4)) (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 (-.f64 1 (*.f64 h h)) (*.f64 g g)))))","(log.f64 (+.f64 1 (pow.f64 g 2)))","(log1p.f64 (*.f64 g g))","(+.f64 (log.f64 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (/.f64 (pow.f64 h 2) (+.f64 1 (pow.f64 g 2)))))","(+.f64 (log1p.f64 (*.f64 g g)) (neg.f64 (/.f64 (*.f64 h h) (+.f64 1 (*.f64 g g)))))","(-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1)))","(-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 4) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (+.f64 (log.f64 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (/.f64 (pow.f64 h 2) (+.f64 1 (pow.f64 g 2))))))","(fma.f64 -1/2 (/.f64 (pow.f64 h 4) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (+.f64 (log1p.f64 (*.f64 g g)) (neg.f64 (/.f64 (*.f64 h h) (+.f64 1 (*.f64 g g))))))","(-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 h 4) (pow.f64 (fma.f64 g g 1) 2)) (log1p.f64 (*.f64 g g))) (/.f64 (*.f64 h h) (fma.f64 g g 1)))","(-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 h 4) (pow.f64 (fma.f64 g g 1) 2)) (log1p.f64 (*.f64 g g))) (*.f64 (/.f64 h (fma.f64 g g 1)) h))","(fma.f64 -1/2 (/.f64 (pow.f64 h 4) (pow.f64 (fma.f64 g g 1) 2)) (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 4) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (+.f64 (log.f64 (+.f64 1 (pow.f64 g 2))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 h 6) (pow.f64 (+.f64 1 (pow.f64 g 2)) 3))) (*.f64 -1 (/.f64 (pow.f64 h 2) (+.f64 1 (pow.f64 g 2)))))))","(fma.f64 -1/2 (/.f64 (pow.f64 h 4) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (+.f64 (log1p.f64 (*.f64 g g)) (fma.f64 -1/3 (/.f64 (pow.f64 h 6) (pow.f64 (+.f64 1 (*.f64 g g)) 3)) (neg.f64 (/.f64 (*.f64 h h) (+.f64 1 (*.f64 g g)))))))","(+.f64 (fma.f64 -1/3 (/.f64 (pow.f64 h 6) (pow.f64 (fma.f64 g g 1) 3)) (/.f64 (*.f64 h (neg.f64 h)) (fma.f64 g g 1))) (fma.f64 -1/2 (/.f64 (pow.f64 h 4) (pow.f64 (fma.f64 g g 1) 2)) (log1p.f64 (*.f64 g g))))","(-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 h 4) (pow.f64 (fma.f64 g g 1) 2)) (fma.f64 -1/3 (/.f64 (pow.f64 h 6) (pow.f64 (fma.f64 g g 1) 3)) (log1p.f64 (*.f64 g g)))) (*.f64 (/.f64 h (fma.f64 g g 1)) h))","(-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 h 4) (pow.f64 (fma.f64 g g 1) 2)) (fma.f64 -1/3 (/.f64 (pow.f64 h 6) (pow.f64 (hypot.f64 1 g) 6)) (log1p.f64 (*.f64 g g)))) (*.f64 (/.f64 h (fma.f64 g g 1)) h))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))","(fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))","(+.f64 (*.f64 2 (log.f64 h)) (log.f64 -1))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (pow.f64 g 2)) (pow.f64 h 2))) (log.f64 -1)))","(fma.f64 -2 (neg.f64 (log.f64 h)) (fma.f64 -1 (/.f64 (+.f64 1 (*.f64 g g)) (*.f64 h h)) (log.f64 -1)))","(fma.f64 -2 (neg.f64 (log.f64 h)) (-.f64 (log.f64 -1) (/.f64 (fma.f64 g g 1) (*.f64 h h))))","(+.f64 (*.f64 2 (log.f64 h)) (-.f64 (log.f64 -1) (/.f64 (fma.f64 g g 1) (*.f64 h h))))","(fma.f64 2 (log.f64 h) (-.f64 (log.f64 -1) (/.f64 (fma.f64 g g 1) (*.f64 h h))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (pow.f64 g 2)) 2) (pow.f64 h 4))) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (pow.f64 g 2)) (pow.f64 h 2))) (log.f64 -1))))","(fma.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 g g)) 2) (pow.f64 h 4)) (fma.f64 -2 (neg.f64 (log.f64 h)) (fma.f64 -1 (/.f64 (+.f64 1 (*.f64 g g)) (*.f64 h h)) (log.f64 -1))))","(fma.f64 -1/2 (/.f64 (pow.f64 (fma.f64 g g 1) 2) (pow.f64 h 4)) (fma.f64 -2 (neg.f64 (log.f64 h)) (-.f64 (log.f64 -1) (/.f64 (fma.f64 g g 1) (*.f64 h h)))))","(+.f64 (*.f64 2 (log.f64 h)) (fma.f64 -1/2 (/.f64 (pow.f64 (fma.f64 g g 1) 2) (pow.f64 h 4)) (-.f64 (log.f64 -1) (/.f64 (fma.f64 g g 1) (*.f64 h h)))))","(fma.f64 -1/2 (/.f64 (pow.f64 (fma.f64 g g 1) 2) (pow.f64 h 4)) (fma.f64 2 (log.f64 h) (-.f64 (log.f64 -1) (/.f64 (fma.f64 g g 1) (*.f64 h h)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (pow.f64 g 2)) 2) (pow.f64 h 4))) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (pow.f64 g 2)) (pow.f64 h 2))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (pow.f64 g 2)) 3) (pow.f64 h 6))) (log.f64 -1)))))","(fma.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 g g)) 2) (pow.f64 h 4)) (fma.f64 -2 (neg.f64 (log.f64 h)) (fma.f64 -1 (/.f64 (+.f64 1 (*.f64 g g)) (*.f64 h h)) (fma.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (*.f64 g g)) 3) (pow.f64 h 6)) (log.f64 -1)))))","(fma.f64 -1/2 (/.f64 (pow.f64 (fma.f64 g g 1) 2) (pow.f64 h 4)) (fma.f64 -2 (neg.f64 (log.f64 h)) (-.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (fma.f64 g g 1) 3) (pow.f64 h 6)) (log.f64 -1)) (/.f64 (fma.f64 g g 1) (*.f64 h h)))))","(+.f64 (*.f64 2 (log.f64 h)) (fma.f64 -1/2 (/.f64 (pow.f64 (fma.f64 g g 1) 2) (pow.f64 h 4)) (-.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (fma.f64 g g 1) 3) (pow.f64 h 6)) (log.f64 -1)) (/.f64 (fma.f64 g g 1) (*.f64 h h)))))","(fma.f64 -1/2 (/.f64 (pow.f64 (fma.f64 g g 1) 2) (pow.f64 h 4)) (fma.f64 2 (log.f64 h) (-.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (hypot.f64 1 g) 6) (pow.f64 h 6)) (log.f64 -1)) (/.f64 (fma.f64 g g 1) (*.f64 h h)))))","(+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))","(fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))","(+.f64 (*.f64 -1 (/.f64 (+.f64 1 (pow.f64 g 2)) (pow.f64 h 2))) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))","(+.f64 (fma.f64 -1 (/.f64 (+.f64 1 (*.f64 g g)) (*.f64 h h)) (log.f64 -1)) (*.f64 -2 (log.f64 (/.f64 -1 h))))","(-.f64 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1)) (/.f64 (fma.f64 g g 1) (*.f64 h h)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (pow.f64 g 2)) 2) (pow.f64 h 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (pow.f64 g 2)) (pow.f64 h 2))) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))","(fma.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 g g)) 2) (pow.f64 h 4)) (+.f64 (fma.f64 -1 (/.f64 (+.f64 1 (*.f64 g g)) (*.f64 h h)) (log.f64 -1)) (*.f64 -2 (log.f64 (/.f64 -1 h)))))","(fma.f64 -1/2 (/.f64 (pow.f64 (fma.f64 g g 1) 2) (pow.f64 h 4)) (-.f64 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1)) (/.f64 (fma.f64 g g 1) (*.f64 h h))))","(-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 (fma.f64 g g 1) 2) (pow.f64 h 4)) (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (/.f64 (fma.f64 g g 1) (*.f64 h h)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (pow.f64 g 2)) 2) (pow.f64 h 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (pow.f64 g 2)) (pow.f64 h 2))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (pow.f64 g 2)) 3) (pow.f64 h 6))) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))","(fma.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 g g)) 2) (pow.f64 h 4)) (fma.f64 -1 (/.f64 (+.f64 1 (*.f64 g g)) (*.f64 h h)) (fma.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (*.f64 g g)) 3) (pow.f64 h 6)) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))","(fma.f64 -1/2 (/.f64 (pow.f64 (fma.f64 g g 1) 2) (pow.f64 h 4)) (-.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (fma.f64 g g 1) 3) (pow.f64 h 6)) (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (/.f64 (fma.f64 g g 1) (*.f64 h h))))","(fma.f64 -1/2 (/.f64 (pow.f64 (fma.f64 g g 1) 2) (pow.f64 h 4)) (-.f64 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (fma.f64 -1/3 (/.f64 (pow.f64 (fma.f64 g g 1) 3) (pow.f64 h 6)) (log.f64 -1))) (/.f64 (fma.f64 g g 1) (*.f64 h h))))","(fma.f64 -1/2 (/.f64 (pow.f64 (fma.f64 g g 1) 2) (pow.f64 h 4)) (fma.f64 -1/3 (/.f64 (pow.f64 (hypot.f64 1 g) 6) (pow.f64 h 6)) (-.f64 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1)) (/.f64 (fma.f64 g g 1) (*.f64 h h)))))","(*.f64 2 g)","(*.f64 g 2)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 2 g))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (*.f64 g 2))","(fma.f64 g 2 (/.f64 -1/2 (/.f64 g (*.f64 h h))))","(fma.f64 g 2 (*.f64 -1/2 (*.f64 (/.f64 h g) h)))","(fma.f64 g 2 (*.f64 (/.f64 -1/2 g) (*.f64 h h)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 2 g) (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (fma.f64 2 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 g 2 (/.f64 (pow.f64 h 4) (/.f64 (pow.f64 g 3) -1/8))))","(fma.f64 g 2 (fma.f64 -1/2 (*.f64 (/.f64 h g) h) (*.f64 (/.f64 -1/8 (pow.f64 g 3)) (pow.f64 h 4))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 (*.f64 2 g) (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 2 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 g 2 (/.f64 (pow.f64 h 4) (/.f64 (pow.f64 g 3) -1/8)))))","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) (fma.f64 g 2 (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) (*.f64 (/.f64 -1/16 (pow.f64 g 5)) (pow.f64 h 6)))))","(*.f64 1/2 (/.f64 (pow.f64 h 2) g))","(*.f64 (/.f64 (*.f64 h h) g) 1/2)","(*.f64 (/.f64 h (/.f64 g h)) 1/2)","(*.f64 (/.f64 1/2 g) (*.f64 h h))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))","(fma.f64 1/2 (/.f64 (*.f64 h h) g) (/.f64 (*.f64 1/8 (pow.f64 h 4)) (pow.f64 g 3)))","(fma.f64 (/.f64 h (/.f64 g h)) 1/2 (*.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8))","(fma.f64 (*.f64 (/.f64 h g) h) 1/2 (/.f64 (pow.f64 h 4) (/.f64 (pow.f64 g 3) 1/8)))","(+.f64 (*.f64 1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(fma.f64 1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 1/2 (/.f64 (*.f64 h h) g) (/.f64 (*.f64 1/8 (pow.f64 h 4)) (pow.f64 g 3))))","(fma.f64 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) 1/16 (fma.f64 (/.f64 h (/.f64 g h)) 1/2 (*.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8)))","(fma.f64 (*.f64 (/.f64 h g) h) 1/2 (fma.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8 (*.f64 (/.f64 1/16 (pow.f64 g 5)) (pow.f64 h 6))))","(+.f64 (*.f64 1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 h 8)) (pow.f64 (*.f64 -1/8 (pow.f64 h 4)) 2)) (pow.f64 g 7))) (*.f64 1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 1/2 (/.f64 (*.f64 h h) g) (fma.f64 1/2 (/.f64 (fma.f64 1/16 (pow.f64 h 8) (pow.f64 (*.f64 -1/8 (pow.f64 h 4)) 2)) (pow.f64 g 7)) (/.f64 (*.f64 1/8 (pow.f64 h 4)) (pow.f64 g 3)))))","(fma.f64 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) 1/16 (fma.f64 (/.f64 h (/.f64 g h)) 1/2 (fma.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8 (/.f64 (*.f64 1/2 (fma.f64 1/16 (pow.f64 h 8) (*.f64 (pow.f64 h 8) 1/64))) (pow.f64 g 7)))))","(fma.f64 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) 1/16 (fma.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8 (*.f64 1/2 (+.f64 (*.f64 (/.f64 h g) h) (/.f64 (*.f64 (pow.f64 h 8) 5/64) (pow.f64 g 7))))))","(fma.f64 (*.f64 (/.f64 h g) h) 1/2 (fma.f64 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) 1/16 (fma.f64 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) 1/8 (/.f64 (*.f64 (pow.f64 h 8) 5/128) (pow.f64 g 7)))))","(*.f64 2 g)","(*.f64 g 2)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 2 g))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (*.f64 g 2))","(fma.f64 g 2 (/.f64 -1/2 (/.f64 g (*.f64 h h))))","(fma.f64 g 2 (*.f64 -1/2 (*.f64 (/.f64 h g) h)))","(fma.f64 g 2 (*.f64 (/.f64 -1/2 g) (*.f64 h h)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 2 g) (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (fma.f64 2 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)))))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 g 2 (/.f64 (pow.f64 h 4) (/.f64 (pow.f64 g 3) -1/8))))","(fma.f64 g 2 (fma.f64 -1/2 (*.f64 (/.f64 h g) h) (*.f64 (/.f64 -1/8 (pow.f64 g 3)) (pow.f64 h 4))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5))) (+.f64 (*.f64 2 g) (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 2 g (*.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3))))))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 -1/16 (/.f64 (pow.f64 h 6) (pow.f64 g 5)) (fma.f64 g 2 (/.f64 (pow.f64 h 4) (/.f64 (pow.f64 g 3) -1/8)))))","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) (fma.f64 g 2 (fma.f64 -1/8 (/.f64 (pow.f64 h 4) (pow.f64 g 3)) (*.f64 (/.f64 -1/16 (pow.f64 g 5)) (pow.f64 h 6)))))"]],"stop":[["node limit",1]],"time":49.754150390625,"type":"simplify"},{"compiler":[[9589,4329]],"time":66.885986328125,"type":"eval"},{"alts":[["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (/.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) -1/2)) (cbrt.f64 a)))","fresh",48.53467968983397],["(+.f64 (*.f64 (cbrt.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g)) (cbrt.f64 (/.f64 1/2 a))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",47.53847522169623],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (*.f64 (sqrt.f64 (+.f64 g h)) (sqrt.f64 (-.f64 g h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",54.64552393655801],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (*.f64 (cbrt.f64 (/.f64 (/.f64 1 a) (pow.f64 g 5))) (*.f64 -1/6 (*.f64 (/.f64 (*.f64 h h) (pow.f64 (cbrt.f64 2) 2)) (cbrt.f64 -1/2))))))","fresh",52.65642987139966],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 g g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",49.76558641790725],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2)))) (/.f64 -1/2 a))))","fresh",43.155395315798394],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2))))","fresh",56.13852097440259],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) 2) (/.f64 -1/2 a))))","fresh",49.17336422390489],["(+.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))) 1) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",49.188629544690585],["(+.f64 (/.f64 (cbrt.f64 (*.f64 1/2 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g))) (cbrt.f64 a)) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",47.55019397169623],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",53.41166006951949],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))) (/.f64 -1/2 a))))","next",42.98586189461529],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (fma.f64 (cbrt.f64 g) (pow.f64 (cbrt.f64 g) 2) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 -1/2 a))))","fresh",52.63878809482684],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (*.f64 (/.f64 1/2 g) (*.f64 h h)) (/.f64 -1/2 a))))","fresh",50.42439993605038],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (pow.f64 (cbrt.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 3)) (/.f64 -1/2 a))))","fresh",51.20056894454513],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 g g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (/.f64 -1/2 a))))","fresh",49.72283786585441],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) (/.f64 -1/2 a))))","fresh",53.11148842572897]],"compiler":[[34,23],[34,23],[35,23],[51,38],[27,18],[39,27],[32,24],[36,25],[35,24],[34,23],[35,24],[41,26],[38,25],[31,20],[36,25],[29,20],[35,24],[34,23],[34,23],[35,23],[51,38],[27,18],[39,27],[32,24],[36,25],[35,24],[34,23],[35,24],[41,26],[38,25],[31,20],[36,25],[29,20],[35,24]],"count":[[252,17]],"kept":[{"done":[0,0],"fresh":[13,10],"new":[238,7],"picked":[1,0]}],"min-error":[35.51989914354249],"time":90.97998046875,"type":"prune"},{"compiler":[[237,98]],"locations":[["(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))",26.886908362089986,true],["(log1p.f64 (*.f64 g g))",29.298036050532357,true],["(sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))",33.250698958394096,false],["(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))",33.250698958394096,true]],"time":47.658935546875,"type":"localize"},{"count":[[3,60]],"series":[["(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","h","-inf",0.215087890625],["(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","h","inf",0.204833984375],["(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","h","0",0.279052734375],["(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","g","-inf",0.291015625],["(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","g","inf",0.3330078125],["(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","g","0",0.35302734375],["(log1p.f64 (*.f64 g g))","g","-inf",0.194091796875],["(log1p.f64 (*.f64 g g))","g","inf",0.2431640625],["(log1p.f64 (*.f64 g g))","g","0",0.447021484375],["(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","h","-inf",0.22705078125],["(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","h","inf",0.44580078125],["(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","h","0",0.822021484375],["(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","g","-inf",1.155029296875],["(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","g","inf",1.951171875],["(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","g","0",1.77490234375]],"time":9.274169921875,"type":"series"},{"count":[[3,105]],"egraph":[[2,3948,53,0.030513916999999998],[1,279,55,0.005652458],[0,13,55,0.000346583]],"inputs":[["(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","(log1p.f64 (*.f64 g g))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) (cbrt.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) (cbrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 1/4) (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) 2)) (sqrt.f64 (cbrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) 2) 1/2) (pow.f64 (cbrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (*.f64 g g)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (*.f64 g g)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (log1p.f64 (*.f64 g g))) (*.f64 2 (*.f64 1/3 (log1p.f64 (*.f64 g g)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (hypot.f64 1 g)) (log.f64 (hypot.f64 1 g)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (log1p.f64 (*.f64 g g)))) (*.f64 1/3 (log1p.f64 (*.f64 g g))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (pow.f64 (*.f64 g g) 3)) (log.f64 (+.f64 1 (-.f64 (pow.f64 g 4) (*.f64 g g)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log1p.f64 (*.f64 g g)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (pow.f64 (*.f64 g g) 3) 1)) (log.f64 (+.f64 (pow.f64 g 4) (-.f64 1 (*.f64 g g)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 (pow.f64 g 4) 1)) (log.f64 (fma.f64 g g -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 1 (pow.f64 g 4))) (log.f64 (-.f64 1 (*.f64 g g))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 g g)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (*.f64 g g)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (*.f64 g g))) (pow.f64 (cbrt.f64 (log1p.f64 (*.f64 g g))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (*.f64 g g))) 2) (cbrt.f64 (log1p.f64 (*.f64 g g))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (*.f64 g g))) (sqrt.f64 (log1p.f64 (*.f64 g g))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (log.f64 (hypot.f64 1 g)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (log1p.f64 (*.f64 g g))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (log1p.f64 (*.f64 g g))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (*.f64 g g)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (*.f64 g g))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (*.f64 g g))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (*.f64 g g)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (*.f64 g g)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (fma.f64 g g 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (*.f64 g g)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (*.f64 g g))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (*.f64 g g))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log1p.f64 (*.f64 g g))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 g g) (-.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) (/.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) (-.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) (pow.f64 (cbrt.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) 2) (cbrt.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) (sqrt.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 g 3) (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 3/2)) (/.f64 1 (-.f64 (fma.f64 g g (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) (*.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 g g) (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) (/.f64 1 (-.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (fma.f64 g g (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) (*.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) (+.f64 (pow.f64 g 3) (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) (-.f64 (*.f64 g g) (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 g 3) (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 3/2)) (-.f64 (fma.f64 g g (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) (*.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 g 3) (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 3/2)) (+.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) (-.f64 (*.f64 g g) (*.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 g g) (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) (-.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 g 3) (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 3/2))) (neg.f64 (-.f64 (fma.f64 g g (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) (*.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 g g) (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) (neg.f64 (-.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) (*.f64 g g)) (-.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) g))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (fma.f64 g g (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) (*.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) (+.f64 (pow.f64 g 3) (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) (-.f64 (*.f64 g g) (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 g)) (exp.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 g) (+.f64 1 (expm1.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 g)) (+.f64 1 (expm1.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) (exp.f64 g)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) (+.f64 1 (expm1.f64 g))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) (+.f64 1 (expm1.f64 g))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 g 1 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) 1 g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) (cbrt.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 g) (pow.f64 (cbrt.f64 g) 2) (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 g) 2) (cbrt.f64 g) (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) (cbrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 g) (sqrt.f64 g) (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 1/4) (pow.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))) 1/4) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 g 4))) (sqrt.f64 (pow.f64 (cbrt.f64 g) 2)) (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) 2)) (sqrt.f64 (cbrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2))))) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) 2) 1/2) (pow.f64 (cbrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (pow.f64 (/.f64 h (hypot.f64 1 g)) 2)))) 1/2) g)))))"]],"rules":[["egg-rr",51],["egg-rr",28],["egg-rr",26]],"stop":[["node limit",1]],"time":60.470947265625,"type":"rewrite"},{"count":[[165,188]],"egraph":[[2,2408,2662,0.017500542],[1,703,2982,0.005109959],[0,228,3337,0.001137542]],"inputs":[["(sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (exp.f64 (neg.f64 (pow.f64 h 2))))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) (sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (exp.f64 (neg.f64 (pow.f64 h 2))))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) (+.f64 (sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))) (*.f64 (pow.f64 g 4) (-.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) (-.f64 (+.f64 (*.f64 -1 (pow.f64 h 2)) (*.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 h 2)) 2))) 1/2)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (exp.f64 (neg.f64 (pow.f64 h 2)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) 2)))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (exp.f64 (neg.f64 (pow.f64 h 2))))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (-.f64 (*.f64 -1 (pow.f64 h 2)) 1/2)) (+.f64 1/3 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 1 (pow.f64 h 2)) 3)) (pow.f64 h 2)))) (exp.f64 (neg.f64 (pow.f64 h 2)))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (*.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) (-.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) (-.f64 (+.f64 (*.f64 -1 (pow.f64 h 2)) (*.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 h 2)) 2))) 1/2)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (exp.f64 (neg.f64 (pow.f64 h 2)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) 2)))) (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1)))) (pow.f64 g 6)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) (+.f64 (sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))) (*.f64 (pow.f64 g 4) (-.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) (-.f64 (+.f64 (*.f64 -1 (pow.f64 h 2)) (*.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 h 2)) 2))) 1/2)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (exp.f64 (neg.f64 (pow.f64 h 2)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) 2))))))))","(sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)))) (sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)))) (+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (pow.f64 g 4))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)))) (+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (pow.f64 g 4)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 3) (pow.f64 g 2))) (+.f64 (*.f64 1/3 (pow.f64 g 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (*.f64 (-.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (-.f64 (pow.f64 h 2) 1/2)))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2))))) (-.f64 (pow.f64 (/.f64 1 g) -2) 1)))) (pow.f64 g 6)))))))","(sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))","(+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (pow.f64 g 4)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))) (+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (pow.f64 g 4)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))) (+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 3) (pow.f64 g 2))) (+.f64 (*.f64 1/3 (pow.f64 g 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (*.f64 (-.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (-.f64 (pow.f64 h 2) 1/2)))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2)))) (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)))) (pow.f64 g 6)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))))))","g","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))) (pow.f64 (/.f64 -1/2 g) 2)) (pow.f64 h 4)) g)) g))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))) (pow.f64 (/.f64 -1/2 g) 2)) (pow.f64 h 4)) g)) (+.f64 g (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))) (pow.f64 (/.f64 -1/2 g) 2)) (pow.f64 g 2))) (*.f64 1/6 (/.f64 1 (pow.f64 (+.f64 1 (pow.f64 g 2)) 2)))) (pow.f64 h 6)) g)))))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(pow.f64 g 2)","(+.f64 (*.f64 -1/2 (pow.f64 g 4)) (pow.f64 g 2))","(+.f64 (*.f64 -1/2 (pow.f64 g 4)) (+.f64 (pow.f64 g 2) (*.f64 1/3 (pow.f64 g 6))))","(+.f64 (*.f64 -1/2 (pow.f64 g 4)) (+.f64 (pow.f64 g 2) (+.f64 (*.f64 -1/4 (pow.f64 g 8)) (*.f64 1/3 (pow.f64 g 6)))))","(*.f64 -2 (log.f64 (/.f64 1 g)))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (/.f64 1 (pow.f64 g 2)))","(-.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (/.f64 1 (pow.f64 g 2))) (*.f64 1/2 (/.f64 1 (pow.f64 g 4))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 g 6))) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (/.f64 1 (pow.f64 g 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 g 4))))","(*.f64 -2 (log.f64 (/.f64 -1 g)))","(+.f64 (/.f64 1 (pow.f64 g 2)) (*.f64 -2 (log.f64 (/.f64 -1 g))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 g 2)) (*.f64 -2 (log.f64 (/.f64 -1 g)))) (*.f64 1/2 (/.f64 1 (pow.f64 g 4))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 g 6))) (+.f64 (/.f64 1 (pow.f64 g 2)) (*.f64 -2 (log.f64 (/.f64 -1 g))))) (*.f64 1/2 (/.f64 1 (pow.f64 g 4))))","(sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))","(+.f64 g (sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (exp.f64 (neg.f64 (pow.f64 h 2))))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) (+.f64 g (sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (exp.f64 (neg.f64 (pow.f64 h 2))))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) (+.f64 g (+.f64 (sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))) (*.f64 (pow.f64 g 4) (-.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) (-.f64 (+.f64 (*.f64 -1 (pow.f64 h 2)) (*.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 h 2)) 2))) 1/2)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (exp.f64 (neg.f64 (pow.f64 h 2)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) 2))))))))","g","(+.f64 g (sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1)))","(+.f64 g (+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2))))))","(+.f64 g (+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (pow.f64 g 4)))))))","g","(+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)) g)","(+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))) g))","(+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (pow.f64 g 4)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))) g)))","(*.f64 2 g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 2 g))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))) (pow.f64 (/.f64 -1/2 g) 2)) (pow.f64 h 4)) g)) (*.f64 2 g)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))) (pow.f64 (/.f64 -1/2 g) 2)) (pow.f64 h 4)) g)) (+.f64 (*.f64 2 g) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))) (pow.f64 (/.f64 -1/2 g) 2)) (pow.f64 g 2))) (*.f64 1/6 (/.f64 1 (pow.f64 (+.f64 1 (pow.f64 g 2)) 2)))) (pow.f64 h 6)) g)))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))","(sqrt.f64 (expm1.f64 (neg.f64 (*.f64 h h))))","(sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (exp.f64 (neg.f64 (pow.f64 h 2))))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) (sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1)))","(fma.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 h h) 1) (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (*.f64 g g))) (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h)))))) (sqrt.f64 (expm1.f64 (neg.f64 (*.f64 h h)))))","(fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (*.f64 (fma.f64 h h 1) (*.f64 g g))) (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h)))))) (sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h)))))","(fma.f64 1/2 (*.f64 (fma.f64 h h 1) (*.f64 (*.f64 (/.f64 g (pow.f64 (exp.f64 h) h)) g) (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h))))))) (sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (exp.f64 (neg.f64 (pow.f64 h 2))))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) (+.f64 (sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))) (*.f64 (pow.f64 g 4) (-.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) (-.f64 (+.f64 (*.f64 -1 (pow.f64 h 2)) (*.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 h 2)) 2))) 1/2)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (exp.f64 (neg.f64 (pow.f64 h 2)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) 2)))))))","(+.f64 (fma.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 h h) 1) (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (*.f64 g g))) (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h)))))) (sqrt.f64 (expm1.f64 (neg.f64 (*.f64 h h))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h))))) (*.f64 (pow.f64 g 4) (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (+.f64 (fma.f64 -1 (*.f64 h h) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 h h) 1) 2))) -1/2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h))))) (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (+.f64 (*.f64 h h) 1)))) 2))))))","(fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (*.f64 (fma.f64 h h 1) (*.f64 g g))) (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h)))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h))))) (*.f64 (pow.f64 g 4) (-.f64 (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (fma.f64 (*.f64 h h) -1 (fma.f64 1/2 (pow.f64 (fma.f64 h h 1) 2) -1/2))) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 h h 1) (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h)))))))) 2)))) (sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h))))))","(+.f64 (sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h)))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h)))))) (+.f64 (*.f64 (pow.f64 g 4) (-.f64 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 (fma.f64 h h 1) 2)) (fma.f64 h h 1/2)) (pow.f64 (exp.f64 h) h)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h))))) (/.f64 (fma.f64 h h 1) (pow.f64 (exp.f64 h) h)))) 2))) (*.f64 (*.f64 g g) (/.f64 (fma.f64 h h 1) (pow.f64 (exp.f64 h) h))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (exp.f64 (neg.f64 (pow.f64 h 2))))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (-.f64 (*.f64 -1 (pow.f64 h 2)) 1/2)) (+.f64 1/3 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 1 (pow.f64 h 2)) 3)) (pow.f64 h 2)))) (exp.f64 (neg.f64 (pow.f64 h 2)))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (*.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) (-.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) (-.f64 (+.f64 (*.f64 -1 (pow.f64 h 2)) (*.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 h 2)) 2))) 1/2)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (exp.f64 (neg.f64 (pow.f64 h 2)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) 2)))) (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1)))) (pow.f64 g 6)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) (+.f64 (sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))) (*.f64 (pow.f64 g 4) (-.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) (-.f64 (+.f64 (*.f64 -1 (pow.f64 h 2)) (*.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 h 2)) 2))) 1/2)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (exp.f64 (neg.f64 (pow.f64 h 2)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) 2))))))))","(fma.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 h h) 1) (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (*.f64 g g))) (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h)))))) (fma.f64 1/2 (*.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (fma.f64 (+.f64 (*.f64 h h) 1) (fma.f64 -1 (*.f64 h h) -1/2) (+.f64 1/3 (fma.f64 1/6 (pow.f64 (+.f64 (*.f64 h h) 1) 3) (*.f64 h h))))) (*.f64 -1/2 (/.f64 (*.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (+.f64 (*.f64 h h) 1)) (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (+.f64 (fma.f64 -1 (*.f64 h h) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 h h) 1) 2))) -1/2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h))))) (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (+.f64 (*.f64 h h) 1)))) 2))) (expm1.f64 (neg.f64 (*.f64 h h)))))) (*.f64 (pow.f64 g 6) (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h))))))) (+.f64 (sqrt.f64 (expm1.f64 (neg.f64 (*.f64 h h)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h))))) (*.f64 (pow.f64 g 4) (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (+.f64 (fma.f64 -1 (*.f64 h h) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 h h) 1) 2))) -1/2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h))))) (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (+.f64 (*.f64 h h) 1)))) 2))))))))","(+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h))))) (*.f64 (pow.f64 g 4) (-.f64 (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (fma.f64 (*.f64 h h) -1 (fma.f64 1/2 (pow.f64 (fma.f64 h h 1) 2) -1/2))) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 h h 1) (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h)))))))) 2)))) (sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h))))) (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (*.f64 (fma.f64 h h 1) (*.f64 g g)))) (*.f64 (*.f64 1/2 (fma.f64 (exp.f64 (*.f64 h (neg.f64 h))) (+.f64 (fma.f64 h h (*.f64 1/6 (pow.f64 (fma.f64 h h 1) 3))) (fma.f64 (fma.f64 h h 1) (fma.f64 (*.f64 h h) -1 -1/2) 1/3)) (*.f64 (*.f64 (/.f64 (fma.f64 h h 1) (expm1.f64 (*.f64 h (neg.f64 h)))) (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (-.f64 (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (fma.f64 (*.f64 h h) -1 (fma.f64 1/2 (pow.f64 (fma.f64 h h 1) 2) -1/2))) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 h h 1) (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h)))))))) 2)))) -1/2))) (pow.f64 g 6)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h))))) (+.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 g g) (/.f64 (fma.f64 h h 1) (pow.f64 (exp.f64 h) h))) (*.f64 (+.f64 (/.f64 (+.f64 (fma.f64 1/6 (pow.f64 (fma.f64 h h 1) 3) (*.f64 h h)) (fma.f64 (fma.f64 h h 1) (-.f64 -1/2 (*.f64 h h)) 1/3)) (pow.f64 (exp.f64 h) h)) (*.f64 (/.f64 (*.f64 -1/2 (fma.f64 h h 1)) (expm1.f64 (*.f64 h (neg.f64 h)))) (/.f64 (-.f64 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 (fma.f64 h h 1) 2)) (fma.f64 h h 1/2)) (pow.f64 (exp.f64 h) h)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h))))) (/.f64 (fma.f64 h h 1) (pow.f64 (exp.f64 h) h)))) 2)) (pow.f64 (exp.f64 h) h)))) (pow.f64 g 6)))) (*.f64 (*.f64 (pow.f64 g 4) (-.f64 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 (fma.f64 h h 1) 2)) (fma.f64 h h 1/2)) (pow.f64 (exp.f64 h) h)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h))))) (/.f64 (fma.f64 h h 1) (pow.f64 (exp.f64 h) h)))) 2))) 1/2))) (sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h)))))","(sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))","(sqrt.f64 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))","(sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))","(sqrt.f64 (fma.f64 g g -1))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)))) (sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1)))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (/.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (*.f64 g g))) (sqrt.f64 (+.f64 (pow.f64 (/.f64 1 g) -2) -1)))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))) (-.f64 1 (/.f64 (*.f64 h h) 1))) (sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 1 g) -2))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 g g -1))) (-.f64 1 (*.f64 h h))) (sqrt.f64 (fma.f64 g g -1)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)))) (+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (pow.f64 g 4))))))","(+.f64 (sqrt.f64 (+.f64 (pow.f64 (/.f64 1 g) -2) -1)) (*.f64 1/2 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (/.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (*.f64 g g))) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (/.f64 (-.f64 (fma.f64 1/2 (*.f64 (*.f64 g g) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (*.f64 (*.f64 h h) (*.f64 g g))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))))) 2) (*.f64 1/2 (*.f64 g g)))) (pow.f64 g 4))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))) (+.f64 (-.f64 1 (/.f64 (*.f64 h h) 1)) (/.f64 (-.f64 (*.f64 (*.f64 g g) (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2)))) (fma.f64 1/2 (*.f64 g g) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))) (*.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) 1/2)) 2))) (pow.f64 g 4)))) (sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 1 g) -2))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 g g -1))) (+.f64 (-.f64 1 (*.f64 h h)) (/.f64 (-.f64 (*.f64 (*.f64 g g) (-.f64 (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2))) 1/2)) (pow.f64 (*.f64 (*.f64 g (-.f64 g (*.f64 (*.f64 h h) g))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 g g -1))))) 2)) (pow.f64 g 4)))) (sqrt.f64 (fma.f64 g g -1)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)))) (+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (pow.f64 g 4)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 3) (pow.f64 g 2))) (+.f64 (*.f64 1/3 (pow.f64 g 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (*.f64 (-.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (-.f64 (pow.f64 h 2) 1/2)))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2))))) (-.f64 (pow.f64 (/.f64 1 g) -2) 1)))) (pow.f64 g 6)))))))","(+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (/.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (*.f64 g g))) (sqrt.f64 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (*.f64 1/2 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (/.f64 (-.f64 (fma.f64 1/2 (*.f64 (*.f64 g g) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (*.f64 (*.f64 h h) (*.f64 g g))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))))) 2) (*.f64 1/2 (*.f64 g g)))) (pow.f64 g 4))) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (/.f64 (+.f64 (fma.f64 1/6 (*.f64 (*.f64 g g) (pow.f64 (-.f64 1 (*.f64 h h)) 3)) (fma.f64 1/3 (*.f64 g g) (fma.f64 -1 (*.f64 (*.f64 h h) (*.f64 g g)) (*.f64 (-.f64 1 (*.f64 h h)) (*.f64 (*.f64 g g) (+.f64 (*.f64 h h) -1/2)))))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (/.f64 (+.f64 (pow.f64 (/.f64 1 g) -2) -1) (-.f64 (fma.f64 1/2 (*.f64 (*.f64 g g) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (*.f64 (*.f64 h h) (*.f64 g g))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))))) 2) (*.f64 1/2 (*.f64 g g)))))))) (pow.f64 g 6))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))) (-.f64 1 (/.f64 (*.f64 h h) 1))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))) (+.f64 (/.f64 (-.f64 (*.f64 (*.f64 g g) (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2)))) (fma.f64 1/2 (*.f64 g g) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))) (*.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) 1/2)) 2))) (pow.f64 g 4)) (/.f64 (+.f64 (+.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 h h)) (*.f64 (*.f64 g g) (fma.f64 h h -1/2))) (*.f64 (*.f64 h h) (*.f64 g g))) (*.f64 (*.f64 g g) (+.f64 (*.f64 1/6 (pow.f64 (-.f64 1 (*.f64 h h)) 3)) 1/3))) (/.f64 (*.f64 -1/2 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g)))) (/.f64 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)) (-.f64 (*.f64 (*.f64 g g) (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2)))) (fma.f64 1/2 (*.f64 g g) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))) (*.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) 1/2)) 2)))))) (pow.f64 g 6)))) (sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))))","(+.f64 (sqrt.f64 (fma.f64 g g -1)) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 g g -1)))) (+.f64 (-.f64 1 (*.f64 h h)) (+.f64 (/.f64 (-.f64 (*.f64 (*.f64 g g) (-.f64 (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2))) 1/2)) (pow.f64 (*.f64 (*.f64 g (-.f64 g (*.f64 (*.f64 h h) g))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 g g -1))))) 2)) (pow.f64 g 4)) (/.f64 (+.f64 (+.f64 (*.f64 (*.f64 g g) (-.f64 (*.f64 (-.f64 1 (*.f64 h h)) (fma.f64 h h -1/2)) (*.f64 h h))) (*.f64 (*.f64 g g) (+.f64 1/3 (*.f64 1/6 (pow.f64 (-.f64 1 (*.f64 h h)) 3))))) (*.f64 (/.f64 (*.f64 -1/2 (*.f64 g (-.f64 g (*.f64 (*.f64 h h) g)))) (fma.f64 g g -1)) (-.f64 (*.f64 (*.f64 g g) (-.f64 (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2))) 1/2)) (pow.f64 (*.f64 (*.f64 g (-.f64 g (*.f64 (*.f64 h h) g))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 g g -1))))) 2)))) (pow.f64 g 6))))))","(sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))","(sqrt.f64 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1))","(sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2)))","(sqrt.f64 (fma.f64 (neg.f64 g) (neg.f64 g) -1))","(+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))))","(+.f64 (sqrt.f64 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1)) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (*.f64 g g)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1))))))","(fma.f64 1/2 (*.f64 (-.f64 1 (/.f64 (*.f64 h h) 1)) (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2))))) (sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2))))","(fma.f64 1/2 (*.f64 (-.f64 1 (*.f64 h h)) (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 g) (neg.f64 g) -1)))) (sqrt.f64 (fma.f64 (neg.f64 g) (neg.f64 g) -1)))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (pow.f64 g 4)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))) (+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1))) (/.f64 (-.f64 (fma.f64 1/2 (*.f64 (*.f64 g g) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (*.f64 (*.f64 h h) (*.f64 g g))) (+.f64 (*.f64 1/2 (*.f64 g g)) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1))))) 2))) (pow.f64 g 4))) (+.f64 (sqrt.f64 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1)) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (*.f64 g g)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1)))))))","(+.f64 (sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2))) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 (*.f64 g g) (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2)))) (fma.f64 1/2 (*.f64 g g) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2)))))) 2))) (pow.f64 g 4))) (*.f64 1/2 (-.f64 1 (/.f64 (*.f64 h h) 1))))))","(+.f64 (sqrt.f64 (fma.f64 (neg.f64 g) (neg.f64 g) -1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 g) (neg.f64 g) -1))) (+.f64 (/.f64 (-.f64 (*.f64 (*.f64 g g) (-.f64 (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2))) 1/2)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 g (-.f64 g (*.f64 (*.f64 h h) g))) (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 g) (neg.f64 g) -1))))) 2)) (pow.f64 g 4)) (-.f64 1 (*.f64 h h))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (pow.f64 g 4)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))) (+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 3) (pow.f64 g 2))) (+.f64 (*.f64 1/3 (pow.f64 g 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (*.f64 (-.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (-.f64 (pow.f64 h 2) 1/2)))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2)))) (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)))) (pow.f64 g 6)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1))) (/.f64 (-.f64 (fma.f64 1/2 (*.f64 (*.f64 g g) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (*.f64 (*.f64 h h) (*.f64 g g))) (+.f64 (*.f64 1/2 (*.f64 g g)) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1))))) 2))) (pow.f64 g 4))) (+.f64 (sqrt.f64 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1)) (*.f64 1/2 (+.f64 (*.f64 (/.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (*.f64 g g)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1)))) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1))) (/.f64 (-.f64 (fma.f64 1/6 (*.f64 (*.f64 g g) (pow.f64 (-.f64 1 (*.f64 h h)) 3)) (fma.f64 1/3 (*.f64 g g) (fma.f64 -1 (*.f64 (*.f64 h h) (*.f64 g g)) (*.f64 (-.f64 1 (*.f64 h h)) (*.f64 (*.f64 g g) (+.f64 (*.f64 h h) -1/2)))))) (*.f64 1/2 (/.f64 (-.f64 (fma.f64 1/2 (*.f64 (*.f64 g g) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (*.f64 (*.f64 h h) (*.f64 g g))) (+.f64 (*.f64 1/2 (*.f64 g g)) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1))))) 2))) (/.f64 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1) (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))))))) (pow.f64 g 6)))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2)))) (/.f64 (-.f64 (*.f64 (*.f64 g g) (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2)))) (fma.f64 1/2 (*.f64 g g) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2)))))) 2))) (pow.f64 g 4))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2)))) (+.f64 (-.f64 1 (/.f64 (*.f64 h h) 1)) (/.f64 (+.f64 (+.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 h h)) (*.f64 (*.f64 g g) (fma.f64 h h -1/2))) (*.f64 (*.f64 h h) (*.f64 g g))) (*.f64 (*.f64 g g) (+.f64 (*.f64 1/6 (pow.f64 (-.f64 1 (*.f64 h h)) 3)) 1/3))) (/.f64 (*.f64 -1/2 (-.f64 (*.f64 (*.f64 g g) (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2)))) (fma.f64 1/2 (*.f64 g g) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2)))))) 2)))) (/.f64 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2)) (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g)))))) (pow.f64 g 6)))) (sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2)))))","(+.f64 (sqrt.f64 (fma.f64 (neg.f64 g) (neg.f64 g) -1)) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 g) (neg.f64 g) -1))) (+.f64 (*.f64 1/2 (+.f64 (/.f64 (+.f64 (*.f64 (*.f64 g g) (-.f64 (*.f64 (-.f64 1 (*.f64 h h)) (fma.f64 h h -1/2)) (*.f64 h h))) (-.f64 (*.f64 (*.f64 g g) (+.f64 1/3 (*.f64 1/6 (pow.f64 (-.f64 1 (*.f64 h h)) 3)))) (*.f64 (/.f64 1/2 (fma.f64 (neg.f64 g) (neg.f64 g) -1)) (*.f64 (*.f64 g (-.f64 g (*.f64 (*.f64 h h) g))) (-.f64 (*.f64 (*.f64 g g) (-.f64 (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2))) 1/2)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 g (-.f64 g (*.f64 (*.f64 h h) g))) (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 g) (neg.f64 g) -1))))) 2)))))) (pow.f64 g 6)) (-.f64 1 (*.f64 h h)))) (*.f64 1/2 (/.f64 (-.f64 (*.f64 (*.f64 g g) (-.f64 (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2))) 1/2)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 g (-.f64 g (*.f64 (*.f64 h h) g))) (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 g) (neg.f64 g) -1))))) 2)) (pow.f64 g 4))))))","g","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) g)","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) g)","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) g)","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))) (pow.f64 (/.f64 -1/2 g) 2)) (pow.f64 h 4)) g)) g))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (fma.f64 1/2 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (pow.f64 (/.f64 -1/2 g) 2)) (/.f64 g (pow.f64 h 4))) g))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (pow.f64 (/.f64 -1/2 g) 2)) g) (pow.f64 h 4)) g))","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (/.f64 (/.f64 1/4 g) g)) g) (pow.f64 h 4)) g))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))) (pow.f64 (/.f64 -1/2 g) 2)) (pow.f64 h 4)) g)) (+.f64 g (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))) (pow.f64 (/.f64 -1/2 g) 2)) (pow.f64 g 2))) (*.f64 1/6 (/.f64 1 (pow.f64 (+.f64 1 (pow.f64 g 2)) 2)))) (pow.f64 h 6)) g)))))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (+.f64 (fma.f64 1/2 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (pow.f64 (/.f64 -1/2 g) 2)) (/.f64 g (pow.f64 h 4))) g) (*.f64 -1/2 (/.f64 (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (pow.f64 (/.f64 -1/2 g) 2)) (*.f64 g g)) (/.f64 1/6 (pow.f64 (fma.f64 g g 1) 2))) (/.f64 g (pow.f64 h 6))))))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (pow.f64 (/.f64 -1/2 g) 2)) g) (pow.f64 h 4)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (pow.f64 (/.f64 -1/2 g) 2)) (*.f64 g g)) (/.f64 1/6 (pow.f64 (fma.f64 g g 1) 2))) g) (pow.f64 h 6)) g)))","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (/.f64 (/.f64 1/4 g) g)) g) (pow.f64 h 4)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (/.f64 (/.f64 1/4 g) g)) (*.f64 g g)) (/.f64 1/6 (pow.f64 (fma.f64 g g 1) 2))) g) (pow.f64 h 6)) g)))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","(sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h)))))","(sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))","(pow.f64 g 2)","(*.f64 g g)","(+.f64 (*.f64 -1/2 (pow.f64 g 4)) (pow.f64 g 2))","(fma.f64 -1/2 (pow.f64 g 4) (*.f64 g g))","(fma.f64 g g (*.f64 (pow.f64 g 4) -1/2))","(fma.f64 (pow.f64 g 4) -1/2 (*.f64 g g))","(+.f64 (*.f64 -1/2 (pow.f64 g 4)) (+.f64 (pow.f64 g 2) (*.f64 1/3 (pow.f64 g 6))))","(+.f64 (fma.f64 -1/2 (pow.f64 g 4) (*.f64 g g)) (*.f64 1/3 (pow.f64 g 6)))","(fma.f64 (pow.f64 g 4) -1/2 (fma.f64 g g (*.f64 1/3 (pow.f64 g 6))))","(fma.f64 (pow.f64 g 4) -1/2 (fma.f64 1/3 (pow.f64 g 6) (*.f64 g g)))","(+.f64 (*.f64 -1/2 (pow.f64 g 4)) (+.f64 (pow.f64 g 2) (+.f64 (*.f64 -1/4 (pow.f64 g 8)) (*.f64 1/3 (pow.f64 g 6)))))","(+.f64 (fma.f64 -1/2 (pow.f64 g 4) (*.f64 g g)) (fma.f64 -1/4 (pow.f64 g 8) (*.f64 1/3 (pow.f64 g 6))))","(fma.f64 (pow.f64 g 4) -1/2 (fma.f64 g g (fma.f64 1/3 (pow.f64 g 6) (*.f64 -1/4 (pow.f64 g 8)))))","(*.f64 -2 (log.f64 (/.f64 1 g)))","(*.f64 -2 (neg.f64 (log.f64 g)))","(*.f64 2 (log.f64 g))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (/.f64 1 (pow.f64 g 2)))","(fma.f64 -2 (neg.f64 (log.f64 g)) (/.f64 1 (*.f64 g g)))","(+.f64 (*.f64 2 (log.f64 g)) (/.f64 1 (*.f64 g g)))","(-.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (/.f64 1 (pow.f64 g 2))) (*.f64 1/2 (/.f64 1 (pow.f64 g 4))))","(-.f64 (fma.f64 -2 (neg.f64 (log.f64 g)) (/.f64 1 (*.f64 g g))) (/.f64 1/2 (pow.f64 g 4)))","(fma.f64 -2 (neg.f64 (log.f64 g)) (+.f64 (/.f64 1 (*.f64 g g)) (/.f64 -1/2 (pow.f64 g 4))))","(+.f64 (*.f64 2 (log.f64 g)) (+.f64 (/.f64 1 (*.f64 g g)) (/.f64 -1/2 (pow.f64 g 4))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 g 6))) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (/.f64 1 (pow.f64 g 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 g 4))))","(+.f64 (/.f64 1/3 (pow.f64 g 6)) (-.f64 (fma.f64 -2 (neg.f64 (log.f64 g)) (/.f64 1 (*.f64 g g))) (/.f64 1/2 (pow.f64 g 4))))","(+.f64 (fma.f64 -2 (neg.f64 (log.f64 g)) (/.f64 1 (*.f64 g g))) (-.f64 (/.f64 1/3 (pow.f64 g 6)) (/.f64 1/2 (pow.f64 g 4))))","(+.f64 (/.f64 1 (*.f64 g g)) (-.f64 (+.f64 (*.f64 2 (log.f64 g)) (/.f64 1/3 (pow.f64 g 6))) (/.f64 1/2 (pow.f64 g 4))))","(*.f64 -2 (log.f64 (/.f64 -1 g)))","(+.f64 (/.f64 1 (pow.f64 g 2)) (*.f64 -2 (log.f64 (/.f64 -1 g))))","(+.f64 (/.f64 1 (*.f64 g g)) (*.f64 -2 (log.f64 (/.f64 -1 g))))","(fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 1 (*.f64 g g)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 g 2)) (*.f64 -2 (log.f64 (/.f64 -1 g)))) (*.f64 1/2 (/.f64 1 (pow.f64 g 4))))","(+.f64 (/.f64 1 (*.f64 g g)) (-.f64 (*.f64 -2 (log.f64 (/.f64 -1 g))) (/.f64 1/2 (pow.f64 g 4))))","(+.f64 (/.f64 1 (*.f64 g g)) (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 -1/2 (pow.f64 g 4))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 g 6))) (+.f64 (/.f64 1 (pow.f64 g 2)) (*.f64 -2 (log.f64 (/.f64 -1 g))))) (*.f64 1/2 (/.f64 1 (pow.f64 g 4))))","(+.f64 (/.f64 1/3 (pow.f64 g 6)) (+.f64 (/.f64 1 (*.f64 g g)) (-.f64 (*.f64 -2 (log.f64 (/.f64 -1 g))) (/.f64 1/2 (pow.f64 g 4)))))","(+.f64 (/.f64 1/3 (pow.f64 g 6)) (+.f64 (/.f64 1 (*.f64 g g)) (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 -1/2 (pow.f64 g 4)))))","(sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))","(sqrt.f64 (expm1.f64 (neg.f64 (*.f64 h h))))","(sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h))))","(+.f64 g (sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1)))","(+.f64 (sqrt.f64 (expm1.f64 (neg.f64 (*.f64 h h)))) g)","(+.f64 (sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h)))) g)","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (exp.f64 (neg.f64 (pow.f64 h 2))))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) (+.f64 g (sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))","(fma.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 h h) 1) (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (*.f64 g g))) (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h)))))) (+.f64 (sqrt.f64 (expm1.f64 (neg.f64 (*.f64 h h)))) g))","(fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (*.f64 (fma.f64 h h 1) (*.f64 g g))) (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h)))))) (+.f64 (sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h)))) g))","(fma.f64 1/2 (*.f64 (fma.f64 h h 1) (*.f64 (*.f64 (/.f64 g (pow.f64 (exp.f64 h) h)) g) (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h))))))) (+.f64 (sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h)))) g))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (*.f64 (pow.f64 g 2) (exp.f64 (neg.f64 (pow.f64 h 2))))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) (+.f64 g (+.f64 (sqrt.f64 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))) (*.f64 (pow.f64 g 4) (-.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) (-.f64 (+.f64 (*.f64 -1 (pow.f64 h 2)) (*.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 h 2)) 2))) 1/2)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 1 (pow.f64 h 2)) (exp.f64 (neg.f64 (pow.f64 h 2)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (neg.f64 (pow.f64 h 2))) 1))))) 2))))))))","(fma.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 h h) 1) (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (*.f64 g g))) (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h)))))) (+.f64 g (+.f64 (sqrt.f64 (expm1.f64 (neg.f64 (*.f64 h h)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h))))) (*.f64 (pow.f64 g 4) (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (+.f64 (fma.f64 -1 (*.f64 h h) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 h h) 1) 2))) -1/2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (neg.f64 (*.f64 h h))))) (*.f64 (exp.f64 (neg.f64 (*.f64 h h))) (+.f64 (*.f64 h h) 1)))) 2))))))))","(+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h))))) (*.f64 (pow.f64 g 4) (-.f64 (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (fma.f64 (*.f64 h h) -1 (fma.f64 1/2 (pow.f64 (fma.f64 h h 1) 2) -1/2))) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 h h 1) (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h)))))))) 2)))) (sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h))))) (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (*.f64 h (neg.f64 h))) (*.f64 (fma.f64 h h 1) (*.f64 g g))) (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h)))))) g))","(+.f64 (+.f64 (sqrt.f64 (expm1.f64 (*.f64 h (neg.f64 h)))) g) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h)))))) (+.f64 (*.f64 (pow.f64 g 4) (-.f64 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 (fma.f64 h h 1) 2)) (fma.f64 h h 1/2)) (pow.f64 (exp.f64 h) h)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (*.f64 h (neg.f64 h))))) (/.f64 (fma.f64 h h 1) (pow.f64 (exp.f64 h) h)))) 2))) (*.f64 (*.f64 g g) (/.f64 (fma.f64 h h 1) (pow.f64 (exp.f64 h) h))))))","g","(+.f64 g (sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1)))","(+.f64 g (sqrt.f64 (+.f64 (pow.f64 (/.f64 1 g) -2) -1)))","(+.f64 g (sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 1 g) -2))))","(+.f64 g (sqrt.f64 (fma.f64 g g -1)))","(+.f64 g (+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2))))))","(+.f64 g (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (/.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (*.f64 g g))) (sqrt.f64 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))))","(+.f64 g (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))) (-.f64 1 (/.f64 (*.f64 h h) 1))) (sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))))","(+.f64 g (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 g g -1))) (-.f64 1 (*.f64 h h))) (sqrt.f64 (fma.f64 g g -1))))","(+.f64 g (+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 1 g) -2) 1)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (/.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (pow.f64 g 4)))))))","(+.f64 g (+.f64 (sqrt.f64 (+.f64 (pow.f64 (/.f64 1 g) -2) -1)) (*.f64 1/2 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (/.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (*.f64 g g))) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (/.f64 (-.f64 (fma.f64 1/2 (*.f64 (*.f64 g g) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (*.f64 (*.f64 h h) (*.f64 g g))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 1 g) -2) -1))) (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))))) 2) (*.f64 1/2 (*.f64 g g)))) (pow.f64 g 4)))))))","(+.f64 g (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))) (+.f64 (-.f64 1 (/.f64 (*.f64 h h) 1)) (/.f64 (-.f64 (*.f64 (*.f64 g g) (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2)))) (fma.f64 1/2 (*.f64 g g) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))) (*.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) 1/2)) 2))) (pow.f64 g 4)))) (sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 1 g) -2)))))","(+.f64 g (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 g g -1))) (+.f64 (-.f64 1 (*.f64 h h)) (/.f64 (-.f64 (*.f64 (*.f64 g g) (-.f64 (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2))) 1/2)) (pow.f64 (*.f64 (*.f64 g (-.f64 g (*.f64 (*.f64 h h) g))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 g g -1))))) 2)) (pow.f64 g 4)))) (sqrt.f64 (fma.f64 g g -1))))","g","(+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)) g)","(+.f64 g (sqrt.f64 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1)))","(+.f64 g (sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2))))","(+.f64 g (sqrt.f64 (fma.f64 (neg.f64 g) (neg.f64 g) -1)))","(+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))) g))","(+.f64 (sqrt.f64 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1)) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (*.f64 g g)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1)))) g))","(+.f64 g (fma.f64 1/2 (*.f64 (-.f64 1 (/.f64 (*.f64 h h) 1)) (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2))))) (sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2)))))","(+.f64 g (fma.f64 1/2 (*.f64 (-.f64 1 (*.f64 h h)) (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 g) (neg.f64 g) -1)))) (sqrt.f64 (fma.f64 (neg.f64 g) (neg.f64 g) -1))))","(+.f64 (sqrt.f64 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 1 (pow.f64 h 2)) 2) (pow.f64 g 2))) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))) (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))))) 2) (*.f64 1/2 (pow.f64 g 2)))) (pow.f64 g 4)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 g 2) (*.f64 (pow.f64 g 2) (pow.f64 h 2))) (pow.f64 g 2)) (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 (/.f64 -1 g) -2) 1))))) g)))","(+.f64 (sqrt.f64 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1)) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1))) (/.f64 (-.f64 (fma.f64 1/2 (*.f64 (*.f64 g g) (pow.f64 (-.f64 1 (*.f64 h h)) 2)) (*.f64 (*.f64 h h) (*.f64 g g))) (+.f64 (*.f64 1/2 (*.f64 g g)) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1))))) 2))) (pow.f64 g 4))) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (*.f64 g g)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 -1 g) -2) -1)))) g)))","(+.f64 (sqrt.f64 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2))) (+.f64 g (*.f64 (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 (*.f64 g g) (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2)))) (fma.f64 1/2 (*.f64 g g) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 (*.f64 g g) (*.f64 (*.f64 h h) (*.f64 g g))) (sqrt.f64 (/.f64 1 (+.f64 -1 (pow.f64 (/.f64 -1 g) -2)))))) 2))) (pow.f64 g 4))) (*.f64 1/2 (-.f64 1 (/.f64 (*.f64 h h) 1)))))))","(+.f64 (sqrt.f64 (fma.f64 (neg.f64 g) (neg.f64 g) -1)) (+.f64 g (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 g) (neg.f64 g) -1))) (+.f64 (/.f64 (-.f64 (*.f64 (*.f64 g g) (-.f64 (+.f64 (*.f64 h h) (*.f64 1/2 (pow.f64 (-.f64 1 (*.f64 h h)) 2))) 1/2)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 g (-.f64 g (*.f64 (*.f64 h h) g))) (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 g) (neg.f64 g) -1))))) 2)) (pow.f64 g 4)) (-.f64 1 (*.f64 h h)))))))","(*.f64 2 g)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (*.f64 2 g))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (*.f64 2 g))","(fma.f64 2 g (/.f64 (*.f64 (*.f64 -1/2 h) h) g))","(fma.f64 2 g (*.f64 -1/2 (*.f64 (/.f64 h g) h)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))) (pow.f64 (/.f64 -1/2 g) 2)) (pow.f64 h 4)) g)) (*.f64 2 g)))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (fma.f64 1/2 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (pow.f64 (/.f64 -1/2 g) 2)) (/.f64 g (pow.f64 h 4))) (*.f64 2 g)))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 2 g (*.f64 1/2 (*.f64 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (pow.f64 (/.f64 -1/2 g) 2)) g) (pow.f64 h 4)))))","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) (fma.f64 2 g (*.f64 (/.f64 1/2 g) (*.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (/.f64 (/.f64 1/4 g) g)) (pow.f64 h 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 h 2) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))) (pow.f64 (/.f64 -1/2 g) 2)) (pow.f64 h 4)) g)) (+.f64 (*.f64 2 g) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))) (pow.f64 (/.f64 -1/2 g) 2)) (pow.f64 g 2))) (*.f64 1/6 (/.f64 1 (pow.f64 (+.f64 1 (pow.f64 g 2)) 2)))) (pow.f64 h 6)) g)))))","(fma.f64 -1/2 (/.f64 (*.f64 h h) g) (fma.f64 1/2 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (pow.f64 (/.f64 -1/2 g) 2)) (/.f64 g (pow.f64 h 4))) (fma.f64 2 g (*.f64 -1/2 (/.f64 (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (pow.f64 (/.f64 -1/2 g) 2)) (*.f64 g g)) (/.f64 1/6 (pow.f64 (fma.f64 g g 1) 2))) (/.f64 g (pow.f64 h 6)))))))","(fma.f64 -1/2 (/.f64 h (/.f64 g h)) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (pow.f64 (/.f64 -1/2 g) 2)) g) (pow.f64 h 4)) (fma.f64 2 g (/.f64 (*.f64 -1/2 (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (pow.f64 (/.f64 -1/2 g) 2)) (*.f64 g g)) (/.f64 1/6 (pow.f64 (fma.f64 g g 1) 2)))) (/.f64 g (pow.f64 h 6))))))","(fma.f64 -1/2 (*.f64 (/.f64 h g) h) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (/.f64 (/.f64 1/4 g) g)) g) (pow.f64 h 4)) (fma.f64 2 g (*.f64 (/.f64 -1/2 g) (*.f64 (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/2 (fma.f64 g g 1)) (/.f64 (/.f64 1/4 g) g)) (*.f64 g g)) (/.f64 1/6 (pow.f64 (fma.f64 g g 1) 2))) (pow.f64 h 6))))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (-.f64 (log1p.f64 (pow.f64 g 2)) (/.f64 (pow.f64 h 2) (fma.f64 g g 1)))) 1)) g)","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 (*.f64 h h) (fma.f64 g g 1))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (/.f64 h (/.f64 (fma.f64 g g 1) h))))))","(+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h)))))"]],"stop":[["node limit",1]],"time":52.389892578125,"type":"simplify"},{"compiler":[[12614,7186]],"time":106.376953125,"type":"eval"},{"alts":[["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (/.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) -1/2)) (cbrt.f64 a)))","fresh",48.53467968983397],["(+.f64 (*.f64 (cbrt.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g)) (cbrt.f64 (/.f64 1/2 a))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",47.53847522169623],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (*.f64 (sqrt.f64 (+.f64 g h)) (sqrt.f64 (-.f64 g h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",54.64552393655801],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (*.f64 (cbrt.f64 (/.f64 (/.f64 1 a) (pow.f64 g 5))) (*.f64 -1/6 (*.f64 (/.f64 (*.f64 h h) (pow.f64 (cbrt.f64 2) 2)) (cbrt.f64 -1/2))))))","fresh",52.65642987139966],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 g g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",49.76558641790725],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2)))) (/.f64 -1/2 a))))","next",43.155395315798394],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2))))","fresh",56.13852097440259],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) 2) (/.f64 -1/2 a))))","fresh",49.17336422390489],["(+.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))) 1) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",49.188629544690585],["(+.f64 (/.f64 (cbrt.f64 (*.f64 1/2 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g))) (cbrt.f64 a)) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",47.55019397169623],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",53.41166006951949],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (expm1.f64 (log1p.f64 (log1p.f64 (*.f64 g g)))) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))) (/.f64 -1/2 a))))","fresh",43.52249410921392],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (*.f64 (/.f64 1/2 g) (*.f64 h h)) (/.f64 -1/2 a))))","fresh",50.42439993605038],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (pow.f64 (cbrt.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 3)) (/.f64 -1/2 a))))","fresh",51.20056894454513],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 g g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (/.f64 -1/2 a))))","fresh",49.72283786585441],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) (/.f64 -1/2 a))))","fresh",53.11148842572897],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (fma.f64 (cbrt.f64 g) (pow.f64 (cbrt.f64 g) 2) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 -1/2 a))))","fresh",52.63878809482684]],"compiler":[[34,23],[34,23],[35,23],[51,38],[27,18],[39,27],[32,24],[36,25],[35,24],[34,23],[35,24],[43,28],[31,20],[36,25],[29,20],[35,24],[38,25],[34,23],[34,23],[35,23],[51,38],[27,18],[39,27],[32,24],[36,25],[35,24],[34,23],[35,24],[43,28],[31,20],[36,25],[29,20],[35,24],[38,25]],"count":[[251,17]],"kept":[{"done":[0,0],"fresh":[16,16],"new":[234,1],"picked":[1,0]}],"min-error":[35.519861495533036],"time":90.843994140625,"type":"prune"},{"compiler":[[231,72]],"locations":[["(+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2))))",27.128061731819496,true],["(log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))",29.298036050532364,true],["(sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2)))",33.250698958394096,true],["(sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))",33.250698958394096,false]],"time":40.584228515625,"type":"localize"},{"count":[[3,50]],"series":[["(+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2))))","h","-inf",1.5361328125],["(+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2))))","h","inf",1.808837890625],["(+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2))))","h","0",1.919189453125],["(+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2))))","g","-inf",0.666015625],["(+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2))))","g","inf",0.673828125],["(+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2))))","g","0",1.97021484375],["(log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))","h","-inf",0.318115234375],["(log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))","h","inf",0.337158203125],["(log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))","h","0",0.35302734375],["(log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))","g","-inf",0.3291015625],["(log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))","g","inf",0.341064453125],["(log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))","g","0",0.4150390625],["(sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2)))","h","-inf",2.94189453125],["(sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2)))","h","inf",4.18603515625],["(sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2)))","h","0",7.18505859375],["(sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2)))","g","-inf",4.18896484375],["(sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2)))","g","inf",4.2939453125],["(sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2)))","g","0",6.9208984375]],"time":41.22900390625,"type":"series"},{"count":[[3,109]],"egraph":[[2,3471,39,0.027843417],[1,286,39,0.004754459],[0,13,39,0.00034275]],"inputs":[["(sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2)))","(log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))","(+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/6) (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 g h)) (sqrt.f64 (+.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/4) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 g h)) (sqrt.f64 (-.f64 g h)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 g h) (-.f64 g h) 1)) 2)) (log.f64 (cbrt.f64 (fma.f64 (+.f64 g h) (-.f64 g h) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (fma.f64 (+.f64 g h) (-.f64 g h) 1))) (log.f64 (sqrt.f64 (fma.f64 (+.f64 g h) (-.f64 g h) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3)) (log.f64 (+.f64 1 (-.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 2) (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 1 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 2))) (log.f64 (-.f64 1 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (sqrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (pow.f64 (cbrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (*.f64 (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1/6) (sqrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) 2) (cbrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1/4) (*.f64 (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1/4) (sqrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1/4) 3) (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (cbrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 3/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1/4) 4)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (fma.f64 (+.f64 g h) (-.f64 g h) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 g g) (-.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) (/.f64 (-.f64 (*.f64 g g) (*.f64 h h)) (-.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) (pow.f64 (cbrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 2) (cbrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) (sqrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 g 3) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3/2)) (/.f64 1 (-.f64 (fma.f64 g g (-.f64 (*.f64 g g) (*.f64 h h))) (*.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 g g) (-.f64 (*.f64 g g) (*.f64 h h))) (/.f64 1 (-.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (fma.f64 g g (-.f64 (*.f64 g g) (*.f64 h h))) (*.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) (+.f64 (pow.f64 g 3) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (-.f64 (*.f64 g g) (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 g 3) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3/2)) (-.f64 (fma.f64 g g (-.f64 (*.f64 g g) (*.f64 h h))) (*.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 g 3) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3/2)) (fma.f64 (+.f64 g h) (-.f64 g h) (-.f64 (*.f64 g g) (*.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 g g) (-.f64 (*.f64 g g) (*.f64 h h))) (-.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 g 3) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3/2))) (neg.f64 (-.f64 (fma.f64 g g (-.f64 (*.f64 g g) (*.f64 h h))) (*.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 g g) (-.f64 (*.f64 g g) (*.f64 h h)))) (neg.f64 (-.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (-.f64 (*.f64 g g) (*.f64 h h)) (*.f64 g g)) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (fma.f64 g g (-.f64 (*.f64 g g) (*.f64 h h))) (*.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) (+.f64 (pow.f64 g 3) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (-.f64 (*.f64 g g) (-.f64 (*.f64 g g) (*.f64 h h)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 g)) (exp.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 g) (+.f64 1 (expm1.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 g)) (+.f64 1 (expm1.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) (exp.f64 g)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (+.f64 1 (expm1.f64 g))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) (+.f64 1 (expm1.f64 g))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 g 1 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 1 g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/6) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 g) (pow.f64 (cbrt.f64 g) 2) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 g) 2) (cbrt.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/6) (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 g h)) (sqrt.f64 (+.f64 g h)) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 g) (sqrt.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/4) (pow.f64 (-.f64 (*.f64 g g) (*.f64 h h)) 1/4) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 g h)) (sqrt.f64 (-.f64 g h)) g)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g)))))"]],"rules":[["egg-rr",51],["egg-rr",29],["egg-rr",29]],"stop":[["node limit",1]],"time":53.86279296875,"type":"rewrite"},{"count":[[159,201]],"egraph":[[1,1924,4068,0.013066291],[0,478,7542,0.002520416]],"inputs":[["g","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h)) g)) g)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h)) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 1 (pow.f64 g 2))) (pow.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) g)) 2)) (pow.f64 h 2)) g)) g))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h)) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 1 (pow.f64 g 2))) (pow.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) g)) 2)) (pow.f64 h 2)) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (-.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2))))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 3)) (*.f64 1/6 (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 3) (pow.f64 (+.f64 1 (pow.f64 g 2)) 3))) (*.f64 6 (/.f64 (+.f64 g (*.f64 -1 g)) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2)))))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) (log.f64 (+.f64 1 (pow.f64 g 2))))))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2)) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2))) (pow.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) g)) 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) (pow.f64 g 2)))) (pow.f64 h 3)) g)) g)))","(sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g)) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 g (*.f64 -1 g)))) 2)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g)) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 g (*.f64 -1 g)))) 2)) (+.f64 (*.f64 -1 g) g))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 g (*.f64 -1 g)))) 2)) (+.f64 (*.f64 -1 g) g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1/6 (pow.f64 (+.f64 (*.f64 -1 g) g) 3)) (*.f64 1/6 (+.f64 (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 g) g) 3)) (*.f64 -6 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 g) g)))))))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1 g) g))) 2)) (+.f64 g (*.f64 -1 g))) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))))) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (-.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1 g) g))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) 2)) (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))))) (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)))) (pow.f64 h 3)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 g (*.f64 -1 g)))) 2)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g)) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))))))","(sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g)) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 g (*.f64 -1 g)))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 g (*.f64 -1 g))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) (+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g)) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 g (*.f64 -1 g)))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 g (*.f64 -1 g))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) (+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g)) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) (*.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 g (*.f64 -1 g)))) 2)) (+.f64 (*.f64 -1 g) g))) (+.f64 (*.f64 -1/6 (pow.f64 (+.f64 (*.f64 -1 g) g) 3)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 g) g) 3)) (*.f64 -6 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 g) g))))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 g (*.f64 -1 g)))) 2)) (+.f64 (*.f64 -1 g) g)) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (-.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1 g) g))) 2))) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (*.f64 -1/2 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (*.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1 g) g))) 2)) (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) 2)) (+.f64 g (*.f64 -1 g)))) (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)))) (pow.f64 h 3)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))))))","(log.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))))","(+.f64 (log.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 g (+.f64 (/.f64 h (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 -1 (/.f64 h (+.f64 1 (*.f64 -1 (pow.f64 h 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 g 2) (+.f64 (*.f64 2 (/.f64 1 (+.f64 1 (*.f64 -1 (pow.f64 h 2))))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 h (*.f64 -1 h)) 2) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))) 2)))))) (+.f64 (log.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 g (+.f64 (/.f64 h (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 -1 (/.f64 h (+.f64 1 (*.f64 -1 (pow.f64 h 2)))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 g 2) (+.f64 (*.f64 2 (/.f64 1 (+.f64 1 (*.f64 -1 (pow.f64 h 2))))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 h (*.f64 -1 h)) 2) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))) 2)))))) (+.f64 (log.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (+.f64 (*.f64 g (+.f64 (/.f64 h (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 -1 (/.f64 h (+.f64 1 (*.f64 -1 (pow.f64 h 2))))))) (*.f64 1/6 (*.f64 (pow.f64 g 3) (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 h (*.f64 -1 h)) 3) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))) 3))) (*.f64 -6 (/.f64 (+.f64 h (*.f64 -1 h)) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))) 2)))))))))","(*.f64 -2 (log.f64 (/.f64 1 g)))","(+.f64 (*.f64 -1 (/.f64 h g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (/.f64 h g)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 h) h) 2))) (pow.f64 g 2))) (+.f64 (*.f64 -1 (/.f64 h g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (/.f64 h g))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 h) h) 2))) (pow.f64 g 2))) (+.f64 (*.f64 -1 (/.f64 h g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -6 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))) (+.f64 (*.f64 -1 h) h))) (*.f64 2 (pow.f64 (+.f64 (*.f64 -1 h) h) 3))) (pow.f64 g 3))) (/.f64 h g)))))","(*.f64 -2 (log.f64 (/.f64 -1 g)))","(+.f64 (*.f64 -1 (/.f64 h g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 g))) (/.f64 h g)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 h (*.f64 -1 h)) 2)) (*.f64 2 (+.f64 1 (*.f64 -1 (pow.f64 h 2))))) (pow.f64 g 2))) (+.f64 (*.f64 -1 (/.f64 h g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 g))) (/.f64 h g))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 h (*.f64 -1 h)) 2)) (*.f64 2 (+.f64 1 (*.f64 -1 (pow.f64 h 2))))) (pow.f64 g 2))) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 (+.f64 h (*.f64 -1 h)) 3)) (*.f64 6 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))) (+.f64 h (*.f64 -1 h))))) (pow.f64 g 3))) (+.f64 (*.f64 -1 (/.f64 h g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 g))) (/.f64 h g)))))","(log.f64 (+.f64 1 (pow.f64 g 2)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h) (log.f64 (+.f64 1 (pow.f64 g 2))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h) (+.f64 (log.f64 (+.f64 1 (pow.f64 g 2))) (*.f64 1/2 (*.f64 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2))))) (pow.f64 h 2)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h) (+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 3) (pow.f64 (+.f64 1 (pow.f64 g 2)) 3))) (*.f64 6 (/.f64 (+.f64 (*.f64 -1 g) g) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2)))) (pow.f64 h 3))) (+.f64 (log.f64 (+.f64 1 (pow.f64 g 2))) (*.f64 1/2 (*.f64 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2))))) (pow.f64 h 2))))))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (+.f64 (log.f64 -1) (*.f64 -1 (/.f64 (+.f64 g (*.f64 -1 g)) h))))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2))) (pow.f64 h 2))) (+.f64 (log.f64 -1) (*.f64 -1 (/.f64 (+.f64 g (*.f64 -1 g)) h)))))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2))) (pow.f64 h 2))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (/.f64 (+.f64 g (*.f64 -1 g)) h)) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 (+.f64 g (*.f64 -1 g)) 3)) (*.f64 -6 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 g (*.f64 -1 g))))) (pow.f64 h 3)))))))","(+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))","(+.f64 (*.f64 -1 (/.f64 g h)) (+.f64 (/.f64 g h) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))","(+.f64 (*.f64 -1 (/.f64 g h)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2))) (pow.f64 h 2))) (+.f64 (/.f64 g h) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))","(+.f64 (*.f64 -1 (/.f64 g h)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2))) (pow.f64 h 2))) (+.f64 (/.f64 g h) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 (+.f64 g (*.f64 -1 g)) 3)) (*.f64 -6 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 g (*.f64 -1 g))))) (pow.f64 h 3))) (*.f64 -2 (log.f64 (/.f64 -1 h))))))))","g","g","(*.f64 2 g)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h)) g)) (*.f64 2 g))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h)) g)) (+.f64 (*.f64 2 g) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2)) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2))) (pow.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) g)) 2)) (pow.f64 h 2)) g))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h)) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 3)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 3) (pow.f64 (+.f64 1 (pow.f64 g 2)) 3))) (*.f64 6 (/.f64 (+.f64 (*.f64 -1 g) g) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) (log.f64 (+.f64 1 (pow.f64 g 2))))) (*.f64 (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2))))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) (log.f64 (+.f64 1 (pow.f64 g 2))))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 1 (pow.f64 g 2))) (pow.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) g)) 2)) (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) (pow.f64 g 2)))) (pow.f64 h 3)) g)) (+.f64 (*.f64 2 g) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2)) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2))) (pow.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) g)) 2)) (pow.f64 h 2)) g)))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)) g)","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 g (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (-.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1 g) g))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 g (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -2 (pow.f64 (+.f64 g (*.f64 -1 g)) 3)) (*.f64 -6 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 g (*.f64 -1 g)))))) (+.f64 (*.f64 -1/6 (pow.f64 (+.f64 g (*.f64 -1 g)) 3)) (+.f64 (*.f64 -1 (*.f64 (+.f64 g (*.f64 -1 g)) (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1 g) g))) 2)))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1 g) g))) 2)) (+.f64 g (*.f64 -1 g))) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))))))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 g (*.f64 -1 g)))) 2)) (+.f64 (*.f64 -1 g) g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))))) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 g (*.f64 -1 g)))) 2)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g))) (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)))) (pow.f64 h 3)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (-.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1 g) g))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 g (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) g)","(+.f64 g (+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 g (*.f64 -1 g))) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)))))))","(+.f64 g (+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 g (*.f64 -1 g))) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1 g) g))) 2)) (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -2 (pow.f64 (+.f64 g (*.f64 -1 g)) 3)) (*.f64 -6 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 g (*.f64 -1 g)))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (-.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1 g) g))) 2))) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1/6 (pow.f64 (+.f64 g (*.f64 -1 g)) 3)) (*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1 g) g))) 2)) (+.f64 g (*.f64 -1 g))))))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 g (*.f64 -1 g)))) 2)) (+.f64 (*.f64 -1 g) g)) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 g (*.f64 -1 g)))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 g (*.f64 -1 g))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) 2)) (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g))) (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)))) (pow.f64 h 3)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) (+.f64 g (+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 g (*.f64 -1 g))) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1 g) g))) 2)) (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)))))))))"]],"method":["egg-herbie"],"outputs":[["g","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h)) g)) g)","(fma.f64 1/2 (/.f64 (+.f64 1 (*.f64 g g)) (/.f64 g (*.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) h))) g)","(+.f64 g (/.f64 0 g))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h)) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 1 (pow.f64 g 2))) (pow.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) g)) 2)) (pow.f64 h 2)) g)) g))","(fma.f64 1/2 (/.f64 (+.f64 1 (*.f64 g g)) (/.f64 g (*.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) h))) (fma.f64 1/2 (/.f64 (-.f64 (*.f64 (+.f64 1 (*.f64 g g)) (-.f64 (fma.f64 1/4 (/.f64 (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2) (log1p.f64 (*.f64 g g))) (*.f64 1/2 (+.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g)))) (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))) 2))) (pow.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 g g)) (/.f64 g (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))))) 2)) (/.f64 g (*.f64 h h))) g))","(+.f64 (/.f64 0 g) (fma.f64 1/2 (/.f64 (fma.f64 (fma.f64 g g 1) (-.f64 (fma.f64 1/2 (/.f64 -2 (fma.f64 g g 1)) (/.f64 0 (log1p.f64 (*.f64 g g)))) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) 2)) (neg.f64 (pow.f64 (/.f64 0 g) 2))) (/.f64 g (*.f64 h h))) g))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h)) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 1 (pow.f64 g 2))) (pow.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) g)) 2)) (pow.f64 h 2)) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (-.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2))))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 3)) (*.f64 1/6 (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 3) (pow.f64 (+.f64 1 (pow.f64 g 2)) 3))) (*.f64 6 (/.f64 (+.f64 g (*.f64 -1 g)) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2)))))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) (log.f64 (+.f64 1 (pow.f64 g 2))))))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2)) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2))) (pow.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) g)) 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) (pow.f64 g 2)))) (pow.f64 h 3)) g)) g)))","(fma.f64 1/2 (/.f64 (+.f64 1 (*.f64 g g)) (/.f64 g (*.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) h))) (fma.f64 1/2 (/.f64 (-.f64 (*.f64 (+.f64 1 (*.f64 g g)) (-.f64 (fma.f64 1/4 (/.f64 (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2) (log1p.f64 (*.f64 g g))) (*.f64 1/2 (+.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g)))) (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))) 2))) (pow.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 g g)) (/.f64 g (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))))) 2)) (/.f64 g (*.f64 h h))) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 (+.f64 1 (*.f64 g g)) (+.f64 (fma.f64 1/2 (/.f64 (-.f64 (*.f64 1/2 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g))))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))) 2)) (/.f64 (log1p.f64 (*.f64 g g)) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))))) (fma.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) (-.f64 (fma.f64 1/4 (/.f64 (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2) (log1p.f64 (*.f64 g g))) (*.f64 1/2 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g)))))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))) 2)) (*.f64 1/6 (+.f64 (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 3) (fma.f64 2 (/.f64 (pow.f64 (*.f64 0 g) 3) (pow.f64 (+.f64 1 (*.f64 g g)) 3)) (*.f64 6 (/.f64 (*.f64 0 g) (pow.f64 (+.f64 1 (*.f64 g g)) 2)))))))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g))))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))) 2)) (/.f64 (log1p.f64 (*.f64 g g)) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))))))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 1 (*.f64 g g)) (*.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) (-.f64 (*.f64 (+.f64 1 (*.f64 g g)) (-.f64 (fma.f64 1/4 (/.f64 (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2) (log1p.f64 (*.f64 g g))) (*.f64 1/2 (+.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g)))) (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))) 2))) (pow.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 g g)) (/.f64 g (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))))) 2)))) (*.f64 g g)))) (/.f64 g (pow.f64 h 3))) g)))","(+.f64 (/.f64 0 g) (fma.f64 1/2 (/.f64 (fma.f64 (fma.f64 g g 1) (-.f64 (fma.f64 1/2 (/.f64 -2 (fma.f64 g g 1)) (/.f64 0 (log1p.f64 (*.f64 g g)))) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) 2)) (neg.f64 (pow.f64 (/.f64 0 g) 2))) (/.f64 g (*.f64 h h))) (fma.f64 1/2 (/.f64 (fma.f64 (fma.f64 g g 1) (+.f64 (fma.f64 0 (-.f64 (fma.f64 1/2 (/.f64 -2 (fma.f64 g g 1)) (/.f64 0 (log1p.f64 (*.f64 g g)))) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) 2)) (*.f64 (/.f64 (-.f64 (*.f64 1/2 (/.f64 -2 (fma.f64 g g 1))) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) 2)) (log1p.f64 (*.f64 g g))) 0)) (/.f64 (neg.f64 (*.f64 0 (-.f64 (*.f64 1/2 (/.f64 -2 (fma.f64 g g 1))) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) 2)))) (log1p.f64 (*.f64 g g)))) (/.f64 (neg.f64 (*.f64 0 (fma.f64 (fma.f64 g g 1) (-.f64 (fma.f64 1/2 (/.f64 -2 (fma.f64 g g 1)) (/.f64 0 (log1p.f64 (*.f64 g g)))) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) 2)) (neg.f64 (pow.f64 (/.f64 0 g) 2))))) (*.f64 g g))) (/.f64 g (pow.f64 h 3))) g)))","(sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))","(sqrt.f64 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))","(sqrt.f64 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g)) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))))","(+.f64 (sqrt.f64 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (/.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (/.f64 h (*.f64 0 g))))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 h) -2) 0) h) (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) (sqrt.f64 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1)))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 g (*.f64 -1 g)))) 2)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g)) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)))))))","(+.f64 (sqrt.f64 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (/.f64 (-.f64 (*.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (fma.f64 1/2 (pow.f64 (*.f64 0 g) 2) (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2))) (pow.f64 (*.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2)) (*.f64 h h))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (/.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (/.f64 h (*.f64 0 g)))))))","(+.f64 (sqrt.f64 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1)) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) (+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 h) -2) 0) h) (*.f64 1/2 (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 h) -2) (neg.f64 (+.f64 (/.f64 0 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) 2))))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) (*.f64 (pow.f64 (/.f64 1 h) -2) 0)) 2)) (*.f64 h h))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 g (*.f64 -1 g)))) 2)) (+.f64 (*.f64 -1 g) g))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 g (*.f64 -1 g)))) 2)) (+.f64 (*.f64 -1 g) g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1/6 (pow.f64 (+.f64 (*.f64 -1 g) g) 3)) (*.f64 1/6 (+.f64 (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 g) g) 3)) (*.f64 -6 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 g) g)))))))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1 g) g))) 2)) (+.f64 g (*.f64 -1 g))) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))))) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (-.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1 g) g))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) 2)) (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))))) (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)))) (pow.f64 h 3)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 g (*.f64 -1 g)))) 2)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g)) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (/.f64 (fma.f64 (+.f64 (fma.f64 -1 (*.f64 (*.f64 0 g) (-.f64 (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2))) (fma.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2)) (/.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)) (*.f64 0 g))) (fma.f64 -1/6 (pow.f64 (*.f64 0 g) 3) (*.f64 1/6 (fma.f64 -2 (pow.f64 (*.f64 0 g) 3) (*.f64 -6 (*.f64 (+.f64 1 (*.f64 g g)) (*.f64 0 g)))))))) (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2)) (/.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)) (*.f64 0 g))))) (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (neg.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (fma.f64 1/2 (pow.f64 (*.f64 0 g) 2) (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2))) (pow.f64 (*.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2)) (/.f64 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (*.f64 (*.f64 0 g) (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))))))) (pow.f64 h 3))) (+.f64 (sqrt.f64 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (/.f64 (-.f64 (*.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (fma.f64 1/2 (pow.f64 (*.f64 0 g) 2) (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2))) (pow.f64 (*.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2)) (*.f64 h h))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (/.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (/.f64 h (*.f64 0 g))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) (+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 h) -2) 0) h) (*.f64 1/2 (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 h) -2) (neg.f64 (+.f64 (/.f64 0 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) 2))))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) (*.f64 (pow.f64 (/.f64 1 h) -2) 0)) 2)) (*.f64 h h))))) (fma.f64 1/2 (/.f64 (-.f64 (*.f64 (*.f64 -1 (pow.f64 (/.f64 1 h) -2)) (-.f64 (fma.f64 0 (+.f64 (/.f64 0 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) 2))) (*.f64 (/.f64 (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) 2)) (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) 0)) (*.f64 (/.f64 (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) 2)) (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) 0))) (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 h) -2) (neg.f64 (+.f64 (/.f64 0 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) 2))))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) (*.f64 (pow.f64 (/.f64 1 h) -2) 0)) 2)) (/.f64 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1) (*.f64 (pow.f64 (/.f64 1 h) -2) 0)))) (/.f64 (pow.f64 h 3) (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))))) (sqrt.f64 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))))","(sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))","(sqrt.f64 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))","(sqrt.f64 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g)) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))))","(+.f64 (sqrt.f64 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (/.f64 h (*.f64 0 g))) (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 0 (pow.f64 (/.f64 -1 h) -2)) h) (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1)))) (sqrt.f64 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1)))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 g (*.f64 -1 g)))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 g (*.f64 -1 g))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) (+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g)) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)))))))","(+.f64 (sqrt.f64 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (*.f64 1/2 (+.f64 (*.f64 (/.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (/.f64 h (*.f64 0 g))) (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))) (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (fma.f64 1/2 (pow.f64 (*.f64 0 g) 2) (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))))) 2)) (*.f64 h h))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1))) (+.f64 (/.f64 (*.f64 0 (pow.f64 (/.f64 -1 h) -2)) h) (/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (/.f64 0 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))))) 2)))) (pow.f64 (/.f64 -1 h) -2)) (pow.f64 (*.f64 (*.f64 0 (pow.f64 (/.f64 -1 h) -2)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1)))) 2)) (*.f64 h h)))) (sqrt.f64 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1)))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 g (*.f64 -1 g)))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 g (*.f64 -1 g))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) (+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g)) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) (*.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 g (*.f64 -1 g)))) 2)) (+.f64 (*.f64 -1 g) g))) (+.f64 (*.f64 -1/6 (pow.f64 (+.f64 (*.f64 -1 g) g) 3)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 g) g) 3)) (*.f64 -6 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 g) g))))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 g (*.f64 -1 g)))) 2)) (+.f64 (*.f64 -1 g) g)) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (-.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1 g) g))) 2))) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (*.f64 -1/2 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (*.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1 g) g))) 2)) (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) 2)) (+.f64 g (*.f64 -1 g)))) (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)))) (pow.f64 h 3)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))) (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (fma.f64 1/2 (pow.f64 (*.f64 0 g) 2) (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))))) 2)) (*.f64 h h))) (+.f64 (sqrt.f64 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (fma.f64 1/2 (*.f64 (/.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (/.f64 h (*.f64 0 g))) (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))) (/.f64 (fma.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (fma.f64 -1 (*.f64 (*.f64 0 g) (-.f64 (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) 2))) (fma.f64 -1/6 (pow.f64 (*.f64 0 g) 3) (fma.f64 1/6 (fma.f64 -2 (pow.f64 (*.f64 0 g) 3) (*.f64 -6 (*.f64 (+.f64 1 (*.f64 g g)) (*.f64 0 g)))) (*.f64 -1/2 (/.f64 (*.f64 0 g) (/.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))) (-.f64 (*.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) 2)))))))) (*.f64 1/2 (/.f64 (*.f64 0 g) (/.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))) (-.f64 (*.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) 2)))))) (neg.f64 (*.f64 -1/2 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (*.f64 (*.f64 0 g) (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (fma.f64 1/2 (pow.f64 (*.f64 0 g) 2) (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))))) 2)))) (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))))) (pow.f64 h 3)))))))","(+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1))) (+.f64 (/.f64 (*.f64 0 (pow.f64 (/.f64 -1 h) -2)) h) (/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (/.f64 0 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))))) 2)))) (pow.f64 (/.f64 -1 h) -2)) (pow.f64 (*.f64 (*.f64 0 (pow.f64 (/.f64 -1 h) -2)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1)))) 2)) (*.f64 h h)))) (sqrt.f64 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1))) (*.f64 -1/2 (/.f64 (fma.f64 (*.f64 -1 (pow.f64 (/.f64 -1 h) -2)) (+.f64 (*.f64 (/.f64 0 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))))) 2))) (+.f64 (*.f64 (/.f64 0 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))))) 2))) (*.f64 0 (+.f64 (/.f64 0 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))))) 2)))))) (neg.f64 (/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (/.f64 0 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))))) 2)))) (pow.f64 (/.f64 -1 h) -2)) (pow.f64 (*.f64 (*.f64 0 (pow.f64 (/.f64 -1 h) -2)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1)))) 2)) (/.f64 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1) (*.f64 0 (pow.f64 (/.f64 -1 h) -2)))))) (/.f64 (pow.f64 h 3) (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1)))))))","(log.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))))","(log1p.f64 (neg.f64 (*.f64 h h)))","(log1p.f64 (*.f64 h (neg.f64 h)))","(+.f64 (log.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 g (+.f64 (/.f64 h (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 -1 (/.f64 h (+.f64 1 (*.f64 -1 (pow.f64 h 2))))))))","(+.f64 (log1p.f64 (neg.f64 (*.f64 h h))) (*.f64 g (*.f64 0 (/.f64 h (+.f64 1 (neg.f64 (*.f64 h h)))))))","(+.f64 0 (log1p.f64 (*.f64 h (neg.f64 h))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 g 2) (+.f64 (*.f64 2 (/.f64 1 (+.f64 1 (*.f64 -1 (pow.f64 h 2))))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 h (*.f64 -1 h)) 2) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))) 2)))))) (+.f64 (log.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 g (+.f64 (/.f64 h (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 -1 (/.f64 h (+.f64 1 (*.f64 -1 (pow.f64 h 2)))))))))","(fma.f64 1/2 (*.f64 (*.f64 g g) (+.f64 (/.f64 2 (+.f64 1 (neg.f64 (*.f64 h h)))) (/.f64 (neg.f64 (pow.f64 (*.f64 0 h) 2)) (pow.f64 (+.f64 1 (neg.f64 (*.f64 h h))) 2)))) (+.f64 (log1p.f64 (neg.f64 (*.f64 h h))) (*.f64 g (*.f64 0 (/.f64 h (+.f64 1 (neg.f64 (*.f64 h h))))))))","(+.f64 0 (fma.f64 1/2 (fma.f64 (*.f64 g g) (/.f64 2 (-.f64 1 (*.f64 h h))) 0) (log1p.f64 (*.f64 h (neg.f64 h)))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 g 2) (+.f64 (*.f64 2 (/.f64 1 (+.f64 1 (*.f64 -1 (pow.f64 h 2))))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 h (*.f64 -1 h)) 2) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))) 2)))))) (+.f64 (log.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (+.f64 (*.f64 g (+.f64 (/.f64 h (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 -1 (/.f64 h (+.f64 1 (*.f64 -1 (pow.f64 h 2))))))) (*.f64 1/6 (*.f64 (pow.f64 g 3) (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 h (*.f64 -1 h)) 3) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))) 3))) (*.f64 -6 (/.f64 (+.f64 h (*.f64 -1 h)) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))) 2)))))))))","(fma.f64 1/2 (*.f64 (*.f64 g g) (+.f64 (/.f64 2 (+.f64 1 (neg.f64 (*.f64 h h)))) (/.f64 (neg.f64 (pow.f64 (*.f64 0 h) 2)) (pow.f64 (+.f64 1 (neg.f64 (*.f64 h h))) 2)))) (+.f64 (log1p.f64 (neg.f64 (*.f64 h h))) (*.f64 g (*.f64 0 (/.f64 h (+.f64 1 (neg.f64 (*.f64 h h))))))))","(+.f64 0 (fma.f64 1/2 (fma.f64 (*.f64 g g) (/.f64 2 (-.f64 1 (*.f64 h h))) 0) (log1p.f64 (*.f64 h (neg.f64 h)))))","(*.f64 -2 (log.f64 (/.f64 1 g)))","(*.f64 -2 (neg.f64 (log.f64 g)))","(+.f64 (*.f64 -1 (/.f64 h g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (/.f64 h g)))","(fma.f64 -1 (/.f64 h g) (fma.f64 -2 (neg.f64 (log.f64 g)) (/.f64 h g)))","(-.f64 (fma.f64 -2 (neg.f64 (log.f64 g)) (/.f64 h g)) (/.f64 h g))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 h) h) 2))) (pow.f64 g 2))) (+.f64 (*.f64 -1 (/.f64 h g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (/.f64 h g))))","(fma.f64 1/2 (/.f64 (fma.f64 2 (+.f64 1 (neg.f64 (*.f64 h h))) (neg.f64 (pow.f64 (*.f64 0 h) 2))) (*.f64 g g)) (fma.f64 -1 (/.f64 h g) (fma.f64 -2 (neg.f64 (log.f64 g)) (/.f64 h g))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 (*.f64 h h) -2)) (*.f64 g g)) (-.f64 (fma.f64 -2 (neg.f64 (log.f64 g)) (/.f64 h g)) (/.f64 h g)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (+.f64 1 (*.f64 -1 (pow.f64 h 2)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 h) h) 2))) (pow.f64 g 2))) (+.f64 (*.f64 -1 (/.f64 h g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 g))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -6 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))) (+.f64 (*.f64 -1 h) h))) (*.f64 2 (pow.f64 (+.f64 (*.f64 -1 h) h) 3))) (pow.f64 g 3))) (/.f64 h g)))))","(fma.f64 1/2 (/.f64 (fma.f64 2 (+.f64 1 (neg.f64 (*.f64 h h))) (neg.f64 (pow.f64 (*.f64 0 h) 2))) (*.f64 g g)) (fma.f64 -1 (/.f64 h g) (fma.f64 -2 (neg.f64 (log.f64 g)) (fma.f64 1/6 (/.f64 (fma.f64 -6 (*.f64 (+.f64 1 (neg.f64 (*.f64 h h))) (*.f64 0 h)) (*.f64 2 (pow.f64 (*.f64 0 h) 3))) (pow.f64 g 3)) (/.f64 h g)))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 (*.f64 h h) -2)) (*.f64 g g)) (-.f64 (fma.f64 -2 (neg.f64 (log.f64 g)) (fma.f64 1/6 (/.f64 (+.f64 0 (*.f64 0 (-.f64 1 (*.f64 h h)))) (pow.f64 g 3)) (/.f64 h g))) (/.f64 h g)))","(*.f64 -2 (log.f64 (/.f64 -1 g)))","(+.f64 (*.f64 -1 (/.f64 h g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 g))) (/.f64 h g)))","(fma.f64 -1 (/.f64 h g) (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 h g)))","(-.f64 (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 h g)) (/.f64 h g))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 h (*.f64 -1 h)) 2)) (*.f64 2 (+.f64 1 (*.f64 -1 (pow.f64 h 2))))) (pow.f64 g 2))) (+.f64 (*.f64 -1 (/.f64 h g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 g))) (/.f64 h g))))","(fma.f64 1/2 (/.f64 (fma.f64 2 (+.f64 1 (neg.f64 (*.f64 h h))) (neg.f64 (pow.f64 (*.f64 0 h) 2))) (*.f64 g g)) (fma.f64 -1 (/.f64 h g) (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 h g))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 (*.f64 h h) -2)) (*.f64 g g)) (-.f64 (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 h g)) (/.f64 h g)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 h (*.f64 -1 h)) 2)) (*.f64 2 (+.f64 1 (*.f64 -1 (pow.f64 h 2))))) (pow.f64 g 2))) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 (+.f64 h (*.f64 -1 h)) 3)) (*.f64 6 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 h 2))) (+.f64 h (*.f64 -1 h))))) (pow.f64 g 3))) (+.f64 (*.f64 -1 (/.f64 h g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 g))) (/.f64 h g)))))","(fma.f64 1/2 (/.f64 (fma.f64 2 (+.f64 1 (neg.f64 (*.f64 h h))) (neg.f64 (pow.f64 (*.f64 0 h) 2))) (*.f64 g g)) (fma.f64 -1/6 (/.f64 (fma.f64 -2 (pow.f64 (*.f64 0 h) 3) (*.f64 6 (*.f64 (+.f64 1 (neg.f64 (*.f64 h h))) (*.f64 0 h)))) (pow.f64 g 3)) (fma.f64 -1 (/.f64 h g) (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 h g)))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 (*.f64 h h) -2)) (*.f64 g g)) (fma.f64 -1/6 (/.f64 (+.f64 0 (*.f64 0 (-.f64 1 (*.f64 h h)))) (pow.f64 g 3)) (-.f64 (fma.f64 -2 (log.f64 (/.f64 -1 g)) (/.f64 h g)) (/.f64 h g))))","(log.f64 (+.f64 1 (pow.f64 g 2)))","(log1p.f64 (*.f64 g g))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h) (log.f64 (+.f64 1 (pow.f64 g 2))))","(fma.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) h (log1p.f64 (*.f64 g g)))","(+.f64 (log1p.f64 (*.f64 g g)) 0)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h) (+.f64 (log.f64 (+.f64 1 (pow.f64 g 2))) (*.f64 1/2 (*.f64 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2))))) (pow.f64 h 2)))))","(+.f64 (fma.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) h (log1p.f64 (*.f64 g g))) (*.f64 1/2 (*.f64 (*.f64 h h) (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g)))))))","(+.f64 0 (fma.f64 1/2 (*.f64 h (*.f64 h (/.f64 -2 (fma.f64 g g 1)))) (log1p.f64 (*.f64 g g))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h) (+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 3) (pow.f64 (+.f64 1 (pow.f64 g 2)) 3))) (*.f64 6 (/.f64 (+.f64 (*.f64 -1 g) g) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2)))) (pow.f64 h 3))) (+.f64 (log.f64 (+.f64 1 (pow.f64 g 2))) (*.f64 1/2 (*.f64 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2))))) (pow.f64 h 2))))))","(+.f64 (fma.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) h (log1p.f64 (*.f64 g g))) (*.f64 1/2 (*.f64 (*.f64 h h) (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g)))))))","(+.f64 0 (fma.f64 1/2 (*.f64 h (*.f64 h (/.f64 -2 (fma.f64 g g 1)))) (log1p.f64 (*.f64 g g))))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))","(fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (+.f64 (log.f64 -1) (*.f64 -1 (/.f64 (+.f64 g (*.f64 -1 g)) h))))","(+.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)) (neg.f64 (/.f64 (*.f64 0 g) h)))","(fma.f64 -2 (neg.f64 (log.f64 h)) (+.f64 (log.f64 -1) (/.f64 0 h)))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2))) (pow.f64 h 2))) (+.f64 (log.f64 -1) (*.f64 -1 (/.f64 (+.f64 g (*.f64 -1 g)) h)))))","(fma.f64 -2 (neg.f64 (log.f64 h)) (fma.f64 1/2 (/.f64 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 h h)) (+.f64 (log.f64 -1) (neg.f64 (/.f64 (*.f64 0 g) h)))))","(+.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (+.f64 (log.f64 -1) (/.f64 0 h))) (/.f64 (*.f64 (fma.f64 g g 1) -1) (*.f64 h h)))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2))) (pow.f64 h 2))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (/.f64 (+.f64 g (*.f64 -1 g)) h)) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 (+.f64 g (*.f64 -1 g)) 3)) (*.f64 -6 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 g (*.f64 -1 g))))) (pow.f64 h 3)))))))","(fma.f64 -2 (neg.f64 (log.f64 h)) (fma.f64 1/2 (/.f64 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 h h)) (+.f64 (log.f64 -1) (fma.f64 -1 (/.f64 (*.f64 0 g) h) (*.f64 1/6 (/.f64 (fma.f64 -2 (pow.f64 (*.f64 0 g) 3) (*.f64 -6 (*.f64 (+.f64 1 (*.f64 g g)) (*.f64 0 g)))) (pow.f64 h 3)))))))","(+.f64 (+.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (+.f64 (log.f64 -1) (/.f64 0 h))) (/.f64 (*.f64 (fma.f64 g g 1) -1) (*.f64 h h))) (/.f64 0 (pow.f64 h 3)))","(+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))","(fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))","(+.f64 (*.f64 -1 (/.f64 g h)) (+.f64 (/.f64 g h) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))","(fma.f64 -1 (/.f64 g h) (+.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))) (/.f64 g h)))","(+.f64 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1)) (*.f64 0 (/.f64 g h)))","(+.f64 (*.f64 -1 (/.f64 g h)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2))) (pow.f64 h 2))) (+.f64 (/.f64 g h) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))","(fma.f64 -1 (/.f64 g h) (fma.f64 1/2 (/.f64 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 h h)) (+.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))) (/.f64 g h))))","(+.f64 (/.f64 (*.f64 (fma.f64 g g 1) -1) (*.f64 h h)) (+.f64 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1)) (*.f64 0 (/.f64 g h))))","(+.f64 (*.f64 -1 (/.f64 g h)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2))) (pow.f64 h 2))) (+.f64 (/.f64 g h) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 (+.f64 g (*.f64 -1 g)) 3)) (*.f64 -6 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 g (*.f64 -1 g))))) (pow.f64 h 3))) (*.f64 -2 (log.f64 (/.f64 -1 h))))))))","(fma.f64 -1 (/.f64 g h) (fma.f64 1/2 (/.f64 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 h h)) (+.f64 (/.f64 g h) (+.f64 (log.f64 -1) (fma.f64 -1/6 (/.f64 (fma.f64 -2 (pow.f64 (*.f64 0 g) 3) (*.f64 -6 (*.f64 (+.f64 1 (*.f64 g g)) (*.f64 0 g)))) (pow.f64 h 3)) (*.f64 -2 (log.f64 (/.f64 -1 h))))))))","(-.f64 (+.f64 (/.f64 (*.f64 (fma.f64 g g 1) -1) (*.f64 h h)) (+.f64 (/.f64 g h) (+.f64 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1)) (/.f64 0 (pow.f64 h 3))))) (/.f64 g h))","g","g","(*.f64 2 g)","(*.f64 g 2)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h)) g)) (*.f64 2 g))","(fma.f64 1/2 (/.f64 (+.f64 1 (*.f64 g g)) (/.f64 g (*.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) h))) (*.f64 g 2))","(fma.f64 g 2 (/.f64 0 g))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h)) g)) (+.f64 (*.f64 2 g) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2)) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2))) (pow.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) g)) 2)) (pow.f64 h 2)) g))))","(fma.f64 1/2 (/.f64 (+.f64 1 (*.f64 g g)) (/.f64 g (*.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) h))) (fma.f64 2 g (*.f64 1/2 (/.f64 (-.f64 (*.f64 (+.f64 1 (*.f64 g g)) (-.f64 (fma.f64 1/4 (/.f64 (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2) (log1p.f64 (*.f64 g g))) (*.f64 1/2 (+.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g)))) (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))) 2))) (pow.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 g g)) (/.f64 g (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))))) 2)) (/.f64 g (*.f64 h h))))))","(+.f64 (/.f64 (*.f64 (*.f64 1/2 (*.f64 h h)) (fma.f64 (fma.f64 g g 1) (-.f64 (fma.f64 1/2 (/.f64 -2 (fma.f64 g g 1)) (/.f64 0 (log1p.f64 (*.f64 g g)))) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) 2)) (neg.f64 (pow.f64 (/.f64 0 g) 2)))) g) (fma.f64 g 2 (/.f64 0 g)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) h)) g)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 3)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 3) (pow.f64 (+.f64 1 (pow.f64 g 2)) 3))) (*.f64 6 (/.f64 (+.f64 (*.f64 -1 g) g) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) (log.f64 (+.f64 1 (pow.f64 g 2))))) (*.f64 (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2))))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) (log.f64 (+.f64 1 (pow.f64 g 2))))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2)) (+.f64 1 (pow.f64 g 2))) (pow.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) g)) 2)) (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) (pow.f64 g 2)))) (pow.f64 h 3)) g)) (+.f64 (*.f64 2 g) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2) (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))) 2)) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (pow.f64 (+.f64 1 (pow.f64 g 2)) 2))) (*.f64 2 (/.f64 1 (+.f64 1 (pow.f64 g 2)))))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2)))))) 2))) (pow.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 (*.f64 -1 (/.f64 g (+.f64 1 (pow.f64 g 2)))) (/.f64 g (+.f64 1 (pow.f64 g 2))))) g)) 2)) (pow.f64 h 2)) g)))))","(fma.f64 1/2 (/.f64 (+.f64 1 (*.f64 g g)) (/.f64 g (*.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) h))) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 (+.f64 1 (*.f64 g g)) (+.f64 (fma.f64 1/6 (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 3) (fma.f64 1/6 (fma.f64 2 (/.f64 (pow.f64 (*.f64 0 g) 3) (pow.f64 (+.f64 1 (*.f64 g g)) 3)) (*.f64 6 (/.f64 (*.f64 0 g) (pow.f64 (+.f64 1 (*.f64 g g)) 2)))) (fma.f64 1/2 (/.f64 (-.f64 (*.f64 1/2 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g))))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))) 2)) (/.f64 (log1p.f64 (*.f64 g g)) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))))) (*.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) (-.f64 (fma.f64 1/4 (/.f64 (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2) (log1p.f64 (*.f64 g g))) (*.f64 1/2 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g)))))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))) 2)))))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g))))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))) 2)) (/.f64 (log1p.f64 (*.f64 g g)) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))))))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 (+.f64 1 (*.f64 g g)) (-.f64 (fma.f64 1/4 (/.f64 (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2) (log1p.f64 (*.f64 g g))) (*.f64 1/2 (+.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g)))) (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))) 2))) (pow.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 g g)) (/.f64 g (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))))) 2)) (/.f64 (*.f64 g g) (*.f64 (+.f64 1 (*.f64 g g)) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))))))) (/.f64 g (pow.f64 h 3))) (fma.f64 2 g (*.f64 1/2 (/.f64 (-.f64 (*.f64 (+.f64 1 (*.f64 g g)) (-.f64 (fma.f64 1/4 (/.f64 (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2) (log1p.f64 (*.f64 g g))) (*.f64 1/2 (+.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 0 g) 2)) (pow.f64 (+.f64 1 (*.f64 g g)) 2)) (/.f64 2 (+.f64 1 (*.f64 g g)))) (pow.f64 (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g)))) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))) 2))) (pow.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 g g)) (/.f64 g (*.f64 0 (/.f64 g (+.f64 1 (*.f64 g g))))))) 2)) (/.f64 g (*.f64 h h)))))))","(+.f64 (/.f64 0 g) (fma.f64 1/2 (/.f64 (fma.f64 (fma.f64 g g 1) (+.f64 (fma.f64 0 (-.f64 (fma.f64 1/2 (/.f64 -2 (fma.f64 g g 1)) (/.f64 0 (log1p.f64 (*.f64 g g)))) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) 2)) (*.f64 (/.f64 (-.f64 (*.f64 1/2 (/.f64 -2 (fma.f64 g g 1))) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) 2)) (log1p.f64 (*.f64 g g))) 0)) (/.f64 (neg.f64 (*.f64 0 (-.f64 (*.f64 1/2 (/.f64 -2 (fma.f64 g g 1))) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) 2)))) (log1p.f64 (*.f64 g g)))) (/.f64 (neg.f64 (*.f64 0 (fma.f64 (fma.f64 g g 1) (-.f64 (fma.f64 1/2 (/.f64 -2 (fma.f64 g g 1)) (/.f64 0 (log1p.f64 (*.f64 g g)))) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) 2)) (neg.f64 (pow.f64 (/.f64 0 g) 2))))) (*.f64 g g))) (/.f64 g (pow.f64 h 3))) (fma.f64 g 2 (/.f64 (*.f64 (*.f64 1/2 (*.f64 h h)) (fma.f64 (fma.f64 g g 1) (-.f64 (fma.f64 1/2 (/.f64 -2 (fma.f64 g g 1)) (/.f64 0 (log1p.f64 (*.f64 g g)))) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (log1p.f64 (*.f64 g g))))) 2)) (neg.f64 (pow.f64 (/.f64 0 g) 2)))) g))))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)) g)","(+.f64 g (sqrt.f64 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))","(+.f64 g (sqrt.f64 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1)))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 g (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (/.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (/.f64 h (*.f64 0 g)))) (+.f64 g (sqrt.f64 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))))","(+.f64 (sqrt.f64 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1)) (fma.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 h) -2) 0) h) (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) g))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (-.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1 g) g))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 g (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (/.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (/.f64 h (*.f64 0 g)))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (/.f64 (-.f64 (*.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (fma.f64 1/2 (pow.f64 (*.f64 0 g) 2) (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2))) (pow.f64 (*.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2)) (*.f64 h h))) (+.f64 g (sqrt.f64 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) (+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 h) -2) 0) h) (*.f64 1/2 (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 h) -2) (neg.f64 (+.f64 (/.f64 0 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) 2))))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) (*.f64 (pow.f64 (/.f64 1 h) -2) 0)) 2)) (*.f64 h h))))) (+.f64 g (sqrt.f64 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -2 (pow.f64 (+.f64 g (*.f64 -1 g)) 3)) (*.f64 -6 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 g (*.f64 -1 g)))))) (+.f64 (*.f64 -1/6 (pow.f64 (+.f64 g (*.f64 -1 g)) 3)) (+.f64 (*.f64 -1 (*.f64 (+.f64 g (*.f64 -1 g)) (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1 g) g))) 2)))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1 g) g))) 2)) (+.f64 g (*.f64 -1 g))) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))))))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 g (*.f64 -1 g)))) 2)) (+.f64 (*.f64 -1 g) g)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))))) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 g (*.f64 -1 g)))) 2)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g))) (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1)))) (pow.f64 h 3)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (-.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1)))) (+.f64 (*.f64 -1 g) g))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) (+.f64 (*.f64 -1 g) g)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))) (+.f64 g (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 h))) (log.f64 -1))) 1))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (/.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (/.f64 h (*.f64 0 g)))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (/.f64 (+.f64 (*.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (+.f64 (fma.f64 1/6 (fma.f64 -2 (pow.f64 (*.f64 0 g) 3) (*.f64 -6 (*.f64 (+.f64 1 (*.f64 g g)) (*.f64 0 g)))) (fma.f64 -1/6 (pow.f64 (*.f64 0 g) 3) (fma.f64 -1 (*.f64 (*.f64 0 g) (-.f64 (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2)) (/.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)) (*.f64 0 g))))))) (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2)) (/.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)) (*.f64 0 g)))))) (*.f64 1/2 (/.f64 (-.f64 (*.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (fma.f64 1/2 (pow.f64 (*.f64 0 g) 2) (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2))) (pow.f64 (*.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2)) (/.f64 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (*.f64 (*.f64 0 g) (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))))) (pow.f64 h 3))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (/.f64 (-.f64 (*.f64 (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (fma.f64 1/2 (pow.f64 (*.f64 0 g) 2) (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2))) (pow.f64 (*.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (exp.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) (sqrt.f64 (/.f64 1 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1)))))) 2)) (*.f64 h h))) (+.f64 g (sqrt.f64 (expm1.f64 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 (*.f64 -1 (pow.f64 (/.f64 1 h) -2)) (-.f64 (fma.f64 0 (+.f64 (/.f64 0 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) 2))) (*.f64 (/.f64 (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) 2)) (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) 0)) (*.f64 (/.f64 (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) 2)) (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) 0))) (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 h) -2) (neg.f64 (+.f64 (/.f64 0 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) 2))))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) (*.f64 (pow.f64 (/.f64 1 h) -2) 0)) 2)) (/.f64 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1) (*.f64 (pow.f64 (/.f64 1 h) -2) 0)))) (pow.f64 h 3))) (*.f64 1/2 (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 h) -2) (neg.f64 (+.f64 (/.f64 0 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (neg.f64 (log.f64 h)) (log.f64 -1))))) 2))))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) (*.f64 (pow.f64 (/.f64 1 h) -2) 0)) 2)) (*.f64 h h))))) (+.f64 (sqrt.f64 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1)) (fma.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 h) -2) 0) h) (sqrt.f64 (/.f64 1 (fma.f64 (pow.f64 (/.f64 1 h) -2) -1 -1))) g)))","(+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) g)","(+.f64 g (sqrt.f64 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))","(+.f64 g (sqrt.f64 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1)))","(+.f64 g (+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 g (*.f64 -1 g))) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)))))))","(+.f64 g (+.f64 (sqrt.f64 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (/.f64 h (*.f64 0 g))) (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))))))","(+.f64 g (fma.f64 1/2 (*.f64 (/.f64 (*.f64 0 (pow.f64 (/.f64 -1 h) -2)) h) (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1)))) (sqrt.f64 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1))))","(+.f64 g (+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 g (*.f64 -1 g))) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1 g) g))) 2)) (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))))))","(+.f64 g (+.f64 (sqrt.f64 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (*.f64 1/2 (+.f64 (*.f64 (/.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (/.f64 h (*.f64 0 g))) (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))) (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (fma.f64 1/2 (pow.f64 (*.f64 0 g) 2) (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))))) 2)) (*.f64 h h)))))))","(+.f64 g (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1))) (+.f64 (/.f64 (*.f64 0 (pow.f64 (/.f64 -1 h) -2)) h) (/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (/.f64 0 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))))) 2)))) (pow.f64 (/.f64 -1 h) -2)) (pow.f64 (*.f64 (*.f64 0 (pow.f64 (/.f64 -1 h) -2)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1)))) 2)) (*.f64 h h)))) (sqrt.f64 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -2 (pow.f64 (+.f64 g (*.f64 -1 g)) 3)) (*.f64 -6 (*.f64 (+.f64 1 (pow.f64 g 2)) (+.f64 g (*.f64 -1 g)))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 g (*.f64 -1 g)) (-.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1 g) g))) 2))) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1/6 (pow.f64 (+.f64 g (*.f64 -1 g)) 3)) (*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1 g) g))) 2)) (+.f64 g (*.f64 -1 g))))))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 g (*.f64 -1 g)))) 2)) (+.f64 (*.f64 -1 g) g)) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)) (*.f64 -2 (+.f64 1 (pow.f64 g 2))))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 (*.f64 -1 g) g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 g) g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 g (*.f64 -1 g)))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 g (*.f64 -1 g))) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) 2)) (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g))) (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)))) (pow.f64 h 3)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) (+.f64 g (+.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 g (*.f64 -1 g))) h) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -2 (+.f64 1 (pow.f64 g 2))) (*.f64 -1 (pow.f64 (+.f64 g (*.f64 -1 g)) 2)))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 g (*.f64 -1 g)) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (+.f64 (*.f64 -1 g) g))) 2)) (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (*.f64 -1 g) g)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1))))) 2)) (pow.f64 h 2)) (sqrt.f64 (/.f64 1 (-.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) 1)))))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))) (/.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (+.f64 (fma.f64 1/6 (fma.f64 -2 (pow.f64 (*.f64 0 g) 3) (*.f64 -6 (*.f64 (+.f64 1 (*.f64 g g)) (*.f64 0 g)))) (fma.f64 -1/2 (/.f64 (*.f64 0 g) (/.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))) (-.f64 (*.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) 2)))) (fma.f64 -1/6 (pow.f64 (*.f64 0 g) 3) (neg.f64 (*.f64 (*.f64 0 g) (-.f64 (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) 2))))))) (*.f64 1/2 (/.f64 (*.f64 0 g) (/.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))) (-.f64 (*.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2)))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) 2))))))) (*.f64 1/2 (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (fma.f64 1/2 (pow.f64 (*.f64 0 g) 2) (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))))) 2)) (/.f64 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (*.f64 (*.f64 0 g) (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))))) (pow.f64 h 3))) (+.f64 g (+.f64 (sqrt.f64 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))) (*.f64 1/2 (+.f64 (*.f64 (/.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (/.f64 h (*.f64 0 g))) (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (*.f64 (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))))) (/.f64 (-.f64 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (-.f64 (fma.f64 1/2 (pow.f64 (*.f64 0 g) 2) (fma.f64 1/2 (fma.f64 -2 (+.f64 1 (*.f64 g g)) (neg.f64 (pow.f64 (*.f64 0 g) 2))) (*.f64 1/4 (/.f64 (pow.f64 (*.f64 0 g) 2) (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) (pow.f64 (*.f64 -1/2 (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (exp.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h))))) (*.f64 (*.f64 0 g) (sqrt.f64 (/.f64 1 (expm1.f64 (+.f64 (log.f64 -1) (*.f64 -2 (log.f64 (/.f64 -1 h)))))))))) 2)) (*.f64 h h))))))))","(+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1))) (+.f64 (/.f64 (*.f64 0 (pow.f64 (/.f64 -1 h) -2)) h) (/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (/.f64 0 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))))) 2)))) (pow.f64 (/.f64 -1 h) -2)) (pow.f64 (*.f64 (*.f64 0 (pow.f64 (/.f64 -1 h) -2)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1)))) 2)) (*.f64 h h)))) (sqrt.f64 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1))) (fma.f64 -1/2 (/.f64 (fma.f64 (*.f64 -1 (pow.f64 (/.f64 -1 h) -2)) (+.f64 (*.f64 (/.f64 0 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))))) 2))) (+.f64 (*.f64 (/.f64 0 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))))) 2))) (*.f64 0 (+.f64 (/.f64 0 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))))) 2)))))) (neg.f64 (/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (/.f64 0 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))) (-.f64 (*.f64 (fma.f64 g g 1) -1) (pow.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 -2 (log.f64 (/.f64 -1 h)) (log.f64 -1))))) 2)))) (pow.f64 (/.f64 -1 h) -2)) (pow.f64 (*.f64 (*.f64 0 (pow.f64 (/.f64 -1 h) -2)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1)))) 2)) (/.f64 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1) (*.f64 0 (pow.f64 (/.f64 -1 h) -2)))))) (/.f64 (pow.f64 h 3) (sqrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 (/.f64 -1 h) -2) -1))))) g))"]],"stop":[["node limit",1]],"time":61.406982421875,"type":"simplify"},{"compiler":[[17506,11008]],"time":156.400146484375,"type":"eval"},{"alts":[["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 2) (cbrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (/.f64 -1/2 a))))","fresh",38.290256577019385],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (*.f64 (/.f64 1/2 g) (*.f64 h h)) (/.f64 -1/2 a))))","fresh",50.42439993605038],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 2) (/.f64 -1/2 a))))","fresh",38.64453683073643],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (/.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) -1/2)) (cbrt.f64 a)))","fresh",48.53467968983397],["(+.f64 (*.f64 (cbrt.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g)) (cbrt.f64 (/.f64 1/2 a))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",47.53847522169623],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (*.f64 (sqrt.f64 (+.f64 g h)) (sqrt.f64 (-.f64 g h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",54.64552393655801],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 g g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",49.76558641790725],["(+.f64 (/.f64 (cbrt.f64 (*.f64 1/2 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g))) (cbrt.f64 a)) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",47.55019397169623],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",53.41166006951949],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (+.f64 0 (fma.f64 1/2 (*.f64 h (*.f64 h (/.f64 -2 (fma.f64 g g 1)))) (log1p.f64 (*.f64 g g))))) 2)))) (/.f64 -1/2 a))))","fresh",43.155247961748366],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (pow.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 3/2)) (/.f64 -1/2 a))))","fresh",40.95746319257398],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (pow.f64 (cbrt.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 3)) (/.f64 -1/2 a))))","fresh",51.20056894454513],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2))))","fresh",56.13852097440259],["(+.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))) 1) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","fresh",49.188629544690585],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 g g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (/.f64 -1/2 a))))","fresh",49.72283786585441],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) (/.f64 -1/2 a))))","fresh",53.11148842572897],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (fma.f64 (cbrt.f64 g) (pow.f64 (cbrt.f64 g) 2) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 -1/2 a))))","fresh",52.63878809482684]],"compiler":[[49,22],[31,20],[37,21],[34,23],[34,23],[35,23],[27,18],[34,23],[35,24],[49,34],[36,21],[36,25],[32,24],[35,24],[29,20],[35,24],[38,25]],"count":[[264,17]],"kept":[{"done":[0,0],"fresh":[16,13],"new":[247,4],"picked":[1,0]}],"min-error":[35.519861495533036],"time":95.7978515625,"type":"prune"},{"accuracy":[36.56559260949328],"baseline":[38.255120495860474],"branch":[["g",36.61436527316466,3],["h",36.56559260949328,3],["a",38.255120495860474,1],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (+.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))",36.84266607890834,3],["(/.f64 1 (*.f64 2 a))",38.255120495860474,1],["(*.f64 2 a)",38.255120495860474,1],["(*.f64 h h)",36.5750774909935,2],["(*.f64 h h)",36.5750774909935,2]],"compiler":[[4,3],[4,3],[4,3],[40,23],[8,7],[6,5],[6,4],[6,4],[942,395]],"count":[[28,3]],"inputs":[["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 2) (cbrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 2) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (+.f64 0 (fma.f64 1/2 (*.f64 h (*.f64 h (/.f64 -2 (fma.f64 g g 1)))) (log1p.f64 (*.f64 g g))))) 2)))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (pow.f64 (cbrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) 3/2)) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (expm1.f64 (log1p.f64 (log1p.f64 (*.f64 g g)))) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (pow.f64 (sqrt.f64 (log1p.f64 (*.f64 (+.f64 g h) (-.f64 g h)))) 2)))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) 2) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (-.f64 (log1p.f64 (*.f64 g g)) (*.f64 (/.f64 h (fma.f64 g g 1)) h))))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (fma.f64 (cbrt.f64 g) (pow.f64 (cbrt.f64 g) 2) (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (*.f64 (/.f64 1/2 g) (*.f64 h h)) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 g g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (/.f64 (cbrt.f64 (*.f64 (+.f64 g (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) -1/2)) (cbrt.f64 a)))","(+.f64 (*.f64 (cbrt.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g)) (cbrt.f64 (/.f64 1/2 a))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (*.f64 (sqrt.f64 (+.f64 g h)) (sqrt.f64 (-.f64 g h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (fma.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2)) (*.f64 (cbrt.f64 (/.f64 (/.f64 1 a) (pow.f64 g 5))) (*.f64 -1/6 (*.f64 (/.f64 (*.f64 h h) (pow.f64 (cbrt.f64 2) 2)) (cbrt.f64 -1/2))))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 g g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (pow.f64 (cbrt.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))) 3)) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (neg.f64 g)) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (*.f64 (pow.f64 (/.f64 (*.f64 1 g) a) 1/3) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 2))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (expm1.f64 (log1p.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (/.f64 -1/2 a))))","(+.f64 (/.f64 (cbrt.f64 (*.f64 1/2 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g))) (cbrt.f64 a)) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (fma.f64 -1/2 (*.f64 h (/.f64 h g)) g)) (/.f64 -1/2 a))))","(+.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (/.f64 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g) a))) 1) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (exp.f64 (log.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h))))))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (+.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))"]],"link":["."],"name":["2-ancestry mixing, positive discriminant"],"oracle":[63.920299981689084],"outputs":[["(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","(+.f64 (/.f64 (cbrt.f64 (*.f64 1/2 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g))) (cbrt.f64 a)) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))))","(+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 2) (/.f64 -1/2 a))))"]],"time":124.72021484375,"times":[["g",24.041015625],["h",24.717041015625],["a",8.785888671875],["(+.f64 (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (+.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))) (cbrt.f64 (*.f64 (/.f64 1 (*.f64 2 a)) (-.f64 (neg.f64 g) (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))))))",18.527099609375],["(/.f64 1 (*.f64 2 a))",9.02001953125],["(*.f64 2 a)",9.1708984375],["(*.f64 h h)",7.890869140625],["(*.f64 h h)",8.14208984375]],"type":"regimes"},{"bstep":[[3.463605616987621e-181,6.090244102185687e-180,17.3740234375],[-5.109778323576834e-255,-1.2436178174433587e-256,17.796142578125]],"compiler":[[42,25],[4,3]],"method":["binary-search","binary-search"],"time":35.5498046875,"type":"bsearch"},{"compiler":[[107,51]],"egraph":[[4,78,162,0.000402708],[3,76,162,0.000321208],[2,71,162,0.00023875],[1,62,162,0.000158417],[0,42,162,8.2917e-5]],"inputs":[["(if (<=.f64 h -2699467943661209/528294531135665246352339784916516606518847326036121522127960709026673902556724859474417255887657187894674394993257128678882347559502685537250538978462939576908386683999005084168731517676426441053024232908211188404148028292751561738838396898767036476489538580897737998336) (+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))) (if (<=.f64 h 3236350965835511/9343878384890255807777119448474196633381331982845050737826186276657715542443371287564109437577976626746659450006721346172290467269376897020421450382791094657540085093089822617769726345721044533248) (+.f64 (/.f64 (cbrt.f64 (*.f64 1/2 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g))) (cbrt.f64 a)) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))) (+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 2) (/.f64 -1/2 a))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 h -2699467943661209/528294531135665246352339784916516606518847326036121522127960709026673902556724859474417255887657187894674394993257128678882347559502685537250538978462939576908386683999005084168731517676426441053024232908211188404148028292751561738838396898767036476489538580897737998336) (+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))) (if (<=.f64 h 3236350965835511/9343878384890255807777119448474196633381331982845050737826186276657715542443371287564109437577976626746659450006721346172290467269376897020421450382791094657540085093089822617769726345721044533248) (+.f64 (/.f64 (cbrt.f64 (*.f64 1/2 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g))) (cbrt.f64 a)) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))) (+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 2) (/.f64 -1/2 a))))))","(if (<=.f64 h -2699467943661209/528294531135665246352339784916516606518847326036121522127960709026673902556724859474417255887657187894674394993257128678882347559502685537250538978462939576908386683999005084168731517676426441053024232908211188404148028292751561738838396898767036476489538580897737998336) (+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a)))) (if (<=.f64 h 3236350965835511/9343878384890255807777119448474196633381331982845050737826186276657715542443371287564109437577976626746659450006721346172290467269376897020421450382791094657540085093089822617769726345721044533248) (+.f64 (cbrt.f64 (*.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h)))) (/.f64 -1/2 a))) (/.f64 (cbrt.f64 (*.f64 1/2 (-.f64 (hypot.f64 g (sqrt.f64 (*.f64 h (neg.f64 h)))) g))) (cbrt.f64 a))) (+.f64 (cbrt.f64 (*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))) g))) (cbrt.f64 (*.f64 (/.f64 -1/2 a) (pow.f64 (sqrt.f64 (+.f64 g (sqrt.f64 (-.f64 (*.f64 g g) (*.f64 h h))))) 2))))))"]],"stop":[["fuel",1],["saturated",1]],"time":11.1669921875,"type":"simplify"},{"time":0.113037109375,"type":"soundness"},{"compiler":[[107,51]],"remove-preprocessing":[[]],"time":23.300048828125,"type":"end"}]