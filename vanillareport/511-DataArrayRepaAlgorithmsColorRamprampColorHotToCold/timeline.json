[{"compiler":[[15,11]],"method":["search"],"sampling":[[12,0.3061916636877413,0.6416373079825917,0.052171028329667024],[11,0.25353449859494503,0.6981950038230025,0.048270497582052485],[10,0.2106286603711851,0.745001372794377,0.044369966834437946],[9,0.0,0.998535871389322,0.0014641286106780171],[8,0.0,0.998535871389322,0.0014641286106780171],[7,0.0,0.998535871389322,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":122.64599609375,"type":"analyze"},{"outcomes":[["body",256,"invalid",72.2216796875,1670],["body",256,"valid",362.376220703125,8256]],"time":443.622802734375,"type":"sample"},{"compiler":[[14,10]],"egraph":[[0,3,3,2.208e-6],[5,5936,44,0.030511166],[4,1729,56,0.014056165999999998],[3,581,56,0.003914999],[2,178,56,0.001210083],[1,69,64,0.000365416],[0,25,64,0.0001075]],"inputs":[["0","1","2"],["(/.f64 (*.f64 4 (-.f64 (-.f64 x y) (*.f64 z 1/2))) z)","(/.f64 (*.f64 4 (-.f64 (-.f64 y x) (*.f64 z 1/2))) z)","(/.f64 (*.f64 4 (-.f64 (-.f64 z y) (*.f64 x 1/2))) x)","(/.f64 (*.f64 4 (-.f64 (-.f64 x z) (*.f64 y 1/2))) y)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (*.f64 4 (-.f64 (-.f64 x y) (*.f64 z 1/2))) z)","(/.f64 (*.f64 4 (-.f64 x (+.f64 y (*.f64 z 1/2)))) z)","(/.f64 (-.f64 x (+.f64 y (*.f64 z 1/2))) (/.f64 z 4))","(/.f64 (-.f64 x (fma.f64 z 1/2 y)) (/.f64 z 4))","(*.f64 (-.f64 x (fma.f64 z 1/2 y)) (/.f64 4 z))","(*.f64 4 (/.f64 (-.f64 x (fma.f64 z 1/2 y)) z))","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(/.f64 (*.f64 4 (-.f64 (-.f64 y x) (*.f64 z 1/2))) z)","(/.f64 4 (/.f64 z (-.f64 y (+.f64 x (*.f64 z 1/2)))))","(*.f64 (/.f64 4 z) (+.f64 (-.f64 y x) (*.f64 z -1/2)))","(*.f64 (-.f64 y (fma.f64 z 1/2 x)) (/.f64 4 z))","(*.f64 4 (/.f64 (-.f64 y (fma.f64 z 1/2 x)) z))","(fma.f64 (-.f64 y x) (/.f64 4 z) -2)","(/.f64 (*.f64 4 (-.f64 (-.f64 z y) (*.f64 x 1/2))) x)","(*.f64 (/.f64 4 x) (+.f64 (-.f64 z y) (*.f64 x -1/2)))","(*.f64 (-.f64 z (fma.f64 x 1/2 y)) (/.f64 4 x))","(*.f64 4 (/.f64 (-.f64 z (fma.f64 x 1/2 y)) x))","(fma.f64 (-.f64 z y) (/.f64 4 x) -2)","(/.f64 (*.f64 4 (-.f64 (-.f64 x z) (*.f64 y 1/2))) y)","(*.f64 (/.f64 4 y) (+.f64 (-.f64 x z) (*.f64 y -1/2)))","(*.f64 (-.f64 x (fma.f64 y 1/2 z)) (/.f64 4 y))","(*.f64 4 (/.f64 (fma.f64 y -1/2 (-.f64 x z)) y))","(*.f64 4 (/.f64 (-.f64 x (fma.f64 y 1/2 z)) y))","(fma.f64 (-.f64 x z) (/.f64 4 y) -2)"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":55.112060546875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[6,6056,11,0.027415708],[5,1668,11,0.017116083],[4,516,14,0.004172083],[3,184,14,0.001346125],[2,59,14,0.000473708],[1,24,16,0.000158708],[0,11,16,5.1083e-5]],"inputs":[["(/.f64 (*.f64 4 (-.f64 (-.f64 x y) (*.f64 z 1/2))) z)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 4 (-.f64 (-.f64 x y) (*.f64 z 1/2))) z)","(/.f64 4 (/.f64 z (-.f64 x (+.f64 y (*.f64 z 1/2)))))","(*.f64 (/.f64 4 z) (+.f64 (-.f64 x y) (*.f64 z -1/2)))","(*.f64 (-.f64 x (fma.f64 z 1/2 y)) (/.f64 4 z))","(*.f64 4 (/.f64 (-.f64 x (fma.f64 z 1/2 y)) z))","(*.f64 4 (/.f64 (-.f64 (fma.f64 z -1/2 x) y) z))","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)"]],"stop":[["node limit",1]],"time":38.760009765625,"type":"simplify"},{"compiler":[[22,14]],"time":0.405029296875,"type":"eval"},{"alts":[["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","next",0.15234375],["(/.f64 (*.f64 4 (-.f64 (-.f64 x y) (*.f64 z 1/2))) z)","fresh",0.52734375]],"compiler":[[11,8],[14,10],[11,8],[14,10]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.0078125],"time":1.3349609375,"type":"prune"},{"compiler":[[22,12]],"locations":[["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)",0.15234375,true]],"time":5.03515625,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","z","-inf",0.30908203125],["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","z","inf",0.283935546875],["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","z","0",0.366943359375],["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","y","-inf",0.382080078125],["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","y","inf",0.333984375],["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","y","0",0.324951171875],["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","x","-inf",0.593017578125],["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","x","inf",0.422119140625],["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","x","0",0.515869140625]],"time":3.65283203125,"type":"series"},{"count":[[1,37]],"egraph":[[2,2550,11,0.023127790999999998],[1,199,11,0.0034333750000000002],[0,9,11,0.000282416]],"inputs":[["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 -2 (*.f64 (-.f64 x y) (/.f64 4 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x y) (/.f64 4 z)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 x y) (/.f64 4 z)) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2) 2)) (cbrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)) (sqrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (fma.f64 (-.f64 x y) (/.f64 4 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (pow.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2) 3)) 1/3) (pow.f64 (sqrt.f64 (pow.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2) (cbrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))) 2) 1/3) (cbrt.f64 (cbrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2) 5/2) 1/3) (cbrt.f64 (sqrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))) 2) 3) (cbrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (cbrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))) 3) (pow.f64 (sqrt.f64 (cbrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 x y) (/.f64 4 z)) 3) -8) (+.f64 (pow.f64 (*.f64 (-.f64 x y) (/.f64 4 z)) 2) (-.f64 4 (*.f64 (*.f64 (-.f64 x y) (/.f64 4 z)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (-.f64 x y) (/.f64 4 z)) 2) 4) (fma.f64 (-.f64 x y) (/.f64 4 z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 (-.f64 x y) (/.f64 4 z) -2)) 1) 1))))))"]],"rules":[["egg-rr",37]],"stop":[["node limit",1]],"time":40.83203125,"type":"rewrite"},{"count":[[73,50]],"egraph":[[12,3443,353,0.046398376000000005],[11,3443,353,0.040028626000000005],[10,3278,353,0.034504917],[9,3188,353,0.028244583],[8,2831,353,0.022339958],[7,1818,353,0.015666791],[6,911,353,0.0077972910000000005],[5,440,353,0.003634458],[4,230,353,0.001783458],[3,124,353,0.001028749],[2,81,461,0.000583458],[1,43,461,0.000309083],[0,20,515,0.000117041]],"inputs":[["(-.f64 (*.f64 -4 (/.f64 y z)) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(*.f64 4 (/.f64 x z))","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(*.f64 4 (/.f64 x z))","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (*.f64 4 (/.f64 x z)) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(*.f64 -4 (/.f64 y z))","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(*.f64 -4 (/.f64 y z))","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(*.f64 4 (/.f64 (-.f64 x y) z))","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","-2","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","-2","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 -4 (/.f64 y z)) 2)","(fma.f64 -4 (/.f64 y z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(*.f64 4 (/.f64 x z))","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(*.f64 4 (/.f64 x z))","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (*.f64 4 (/.f64 x z)) 2)","(fma.f64 4 (/.f64 x z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(*.f64 -4 (/.f64 y z))","(/.f64 -4 (/.f64 z y))","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(*.f64 -4 (/.f64 y z))","(/.f64 -4 (/.f64 z y))","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(*.f64 4 (/.f64 (-.f64 x y) z))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (-.f64 x y) (/.f64 4 z))","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","-2","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","-2","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(-.f64 (*.f64 4 (/.f64 (-.f64 x y) z)) 2)","(+.f64 (*.f64 -4 (/.f64 y z)) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 -4 (/.f64 y z) (fma.f64 4 (/.f64 x z) -2))","(fma.f64 4 (/.f64 (-.f64 x y) z) -2)","(fma.f64 (/.f64 -4 z) (-.f64 y x) -2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)"]],"stop":[["saturated",1]],"time":67.39892578125,"type":"simplify"},{"compiler":[[662,418]],"time":8.84814453125,"type":"eval"},{"alts":[["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","done",0.15234375],["(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","next",0.0078125]],"compiler":[[11,8],[16,12],[16,12]],"count":[[52,2]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[50,1],"picked":[1,1]}],"min-error":[0.00390625],"time":7.3369140625,"type":"prune"},{"compiler":[[49,24]],"locations":[["(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))",0.01171875,true],["(*.f64 4 (/.f64 x z))",0.01857377930532605,true],["(*.f64 -4 (/.f64 y z))",0.026386279305326048,true]],"time":9.39306640625,"type":"localize"},{"count":[[3,18]],"series":[["(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","x","-inf",0.194091796875],["(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","x","inf",0.2509765625],["(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","x","0",0.33984375],["(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","z","-inf",0.18212890625],["(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","z","inf",0.193115234375],["(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","z","0",0.1708984375],["(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","y","-inf",0.196044921875],["(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","y","inf",0.28515625],["(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","y","0",0.97900390625],["(*.f64 4 (/.f64 x z))","z","-inf",0.294921875],["(*.f64 4 (/.f64 x z))","z","inf",0.426025390625],["(*.f64 4 (/.f64 x z))","z","0",0.4228515625],["(*.f64 4 (/.f64 x z))","x","-inf",0.278076171875],["(*.f64 4 (/.f64 x z))","x","inf",0.343994140625],["(*.f64 4 (/.f64 x z))","x","0",0.346923828125],["(*.f64 -4 (/.f64 y z))","z","-inf",0.27783203125],["(*.f64 -4 (/.f64 y z))","z","inf",0.4150390625],["(*.f64 -4 (/.f64 y z))","z","0",0.419921875],["(*.f64 -4 (/.f64 y z))","y","-inf",0.265869140625],["(*.f64 -4 (/.f64 y z))","y","inf",0.47900390625],["(*.f64 -4 (/.f64 y z))","y","0",0.781982421875]],"time":7.751953125,"type":"series"},{"count":[[3,124]],"egraph":[[2,3379,28,0.027825833],[1,245,28,0.004534333000000001],[0,11,28,0.000325541]],"inputs":[["(*.f64 -4 (/.f64 y z))","(*.f64 4 (/.f64 x z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 -4) (/.f64 y z))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 -4) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -4) (/.f64 y z)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -4) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 -4 (/.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -4 (/.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 z (*.f64 -4 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 y) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 -4 y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -4 y) 1) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -4 y) (pow.f64 (cbrt.f64 z) 2)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -4 y) (sqrt.f64 z)) (sqrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) -4) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (neg.f64 y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -4 (/.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 y z) 2) 16) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -4 (/.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 -4 (/.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 y z) 3) -64) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z (*.f64 -4 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (/.f64 y z) 2) 16))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 -4) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 -4 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 y z) 3) -64))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 -4 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 -4 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 -4 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -4 (/.f64 y z))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 4) (/.f64 x z))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 4) (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 4) (/.f64 x z)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 4) (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 4 (/.f64 x z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 4 (/.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 z (*.f64 4 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 x) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 4 x)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 4 x) 1) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 4 x) (pow.f64 (cbrt.f64 z) 2)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 4 x) (sqrt.f64 z)) (sqrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) 4) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (neg.f64 x)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 4 (/.f64 x z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 16 (pow.f64 (/.f64 x z) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 4 (/.f64 x z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 4 (/.f64 x z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 x z) 3) 64) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z (*.f64 4 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 16 (pow.f64 (/.f64 x z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 4) (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 4 (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 x z) 3) 64))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 4 (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 4 (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 4 (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 4 (/.f64 x z))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (pow.f64 (/.f64 y z) 2) 16) (/.f64 (-.f64 (*.f64 -4 y) (*.f64 4 x)) z)) (/.f64 (*.f64 16 (pow.f64 (/.f64 x z) 2)) (/.f64 (-.f64 (*.f64 -4 y) (*.f64 4 x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))) (pow.f64 (cbrt.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))) 2) (cbrt.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))) (sqrt.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 (/.f64 x z) 3) 64 (*.f64 (pow.f64 (/.f64 y z) 3) -64)) (/.f64 1 (fma.f64 (*.f64 4 (/.f64 x z)) (-.f64 (*.f64 4 (/.f64 x z)) (*.f64 -4 (/.f64 y z))) (*.f64 (pow.f64 (/.f64 y z) 2) 16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (pow.f64 (/.f64 y z) 2) 16) (*.f64 16 (pow.f64 (/.f64 x z) 2))) (/.f64 1 (/.f64 (-.f64 (*.f64 -4 y) (*.f64 4 x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 4 (/.f64 x z)) (-.f64 (*.f64 4 (/.f64 x z)) (*.f64 -4 (/.f64 y z))) (*.f64 (pow.f64 (/.f64 y z) 2) 16)) (fma.f64 (pow.f64 (/.f64 x z) 3) 64 (*.f64 (pow.f64 (/.f64 y z) 3) -64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 (*.f64 -4 y) (*.f64 4 x)) z) (-.f64 (*.f64 (pow.f64 (/.f64 y z) 2) 16) (*.f64 16 (pow.f64 (/.f64 x z) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (/.f64 x z) 3) 64 (*.f64 (pow.f64 (/.f64 y z) 3) -64)) (fma.f64 (*.f64 4 (/.f64 x z)) (-.f64 (*.f64 4 (/.f64 x z)) (*.f64 -4 (/.f64 y z))) (*.f64 (pow.f64 (/.f64 y z) 2) 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (/.f64 x z) 3) 64 (*.f64 (pow.f64 (/.f64 y z) 3) -64)) (fma.f64 16 (pow.f64 (/.f64 x z) 2) (fma.f64 (pow.f64 (/.f64 y z) 2) 16 (neg.f64 (/.f64 (*.f64 (*.f64 -4 y) (*.f64 4 x)) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (/.f64 y z) 2) 16) (*.f64 16 (pow.f64 (/.f64 x z) 2))) (/.f64 (-.f64 (*.f64 -4 y) (*.f64 4 x)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (pow.f64 (/.f64 x z) 3) 64 (*.f64 (pow.f64 (/.f64 y z) 3) -64))) (neg.f64 (fma.f64 (*.f64 4 (/.f64 x z)) (-.f64 (*.f64 4 (/.f64 x z)) (*.f64 -4 (/.f64 y z))) (*.f64 (pow.f64 (/.f64 y z) 2) 16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 (/.f64 y z) 2) 16) (*.f64 16 (pow.f64 (/.f64 x z) 2)))) (neg.f64 (/.f64 (-.f64 (*.f64 -4 y) (*.f64 4 x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 -4 y) z (*.f64 z (*.f64 4 x))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 4 x) z (*.f64 z (*.f64 -4 y))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 16 (pow.f64 (/.f64 x z) 2)) (*.f64 (pow.f64 (/.f64 y z) 2) 16)) (-.f64 (*.f64 4 (/.f64 x z)) (*.f64 -4 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (*.f64 4 (/.f64 x z)) (-.f64 (*.f64 4 (/.f64 x z)) (*.f64 -4 (/.f64 y z))) (*.f64 (pow.f64 (/.f64 y z) 2) 16)) (fma.f64 (pow.f64 (/.f64 x z) 3) 64 (*.f64 (pow.f64 (/.f64 y z) 3) -64))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 (*.f64 -4 y) (*.f64 4 x)) z) (-.f64 (*.f64 (pow.f64 (/.f64 y z) 2) 16) (*.f64 16 (pow.f64 (/.f64 x z) 2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -4 (/.f64 y z)))) (pow.f64 (exp.f64 4) (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 -4) (/.f64 y z)) (+.f64 1 (expm1.f64 (*.f64 4 (/.f64 x z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -4 (/.f64 y z)))) (+.f64 1 (expm1.f64 (*.f64 4 (/.f64 x z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 4 (/.f64 x z)))) (pow.f64 (exp.f64 -4) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 4) (/.f64 x z)) (+.f64 1 (expm1.f64 (*.f64 -4 (/.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 4 (/.f64 x z)))) (+.f64 1 (expm1.f64 (*.f64 -4 (/.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 (/.f64 1 z) -4) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y z) -4 (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (/.f64 y z)) 1 (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 (/.f64 x z) (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x z) 4 (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 (/.f64 x z)) 1 (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 4 (/.f64 x z)) (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 y z)) 2) (*.f64 (cbrt.f64 (/.f64 y z)) -4) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x z)) 2) (*.f64 (cbrt.f64 (/.f64 x z)) 4) (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -4 (/.f64 y z))) (pow.f64 (cbrt.f64 (*.f64 -4 (/.f64 y z))) 2) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 -4 (/.f64 y z))) 2) (cbrt.f64 (*.f64 -4 (/.f64 y z))) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 4 (/.f64 x z))) (pow.f64 (cbrt.f64 (*.f64 4 (/.f64 x z))) 2) (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 4 (/.f64 x z))) 2) (cbrt.f64 (*.f64 4 (/.f64 x z))) (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 y z)) (*.f64 (sqrt.f64 (/.f64 y z)) -4) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x z)) (*.f64 (sqrt.f64 (/.f64 x z)) 4) (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 -4 (/.f64 y z))) (sqrt.f64 (*.f64 -4 (/.f64 y z))) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 4 (/.f64 x z))) (sqrt.f64 (*.f64 4 (/.f64 x z))) (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 y) (/.f64 1 z) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 x) (/.f64 1 z) (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -4 (pow.f64 (cbrt.f64 z) 2)) (/.f64 y (cbrt.f64 z)) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -4 (sqrt.f64 z)) (/.f64 y (sqrt.f64 z)) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 4 (pow.f64 (cbrt.f64 z) 2)) (/.f64 x (cbrt.f64 z)) (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 4 (sqrt.f64 z)) (/.f64 x (sqrt.f64 z)) (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (/.f64 y z)) 2)) (cbrt.f64 (/.f64 y z)) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (sqrt.f64 (/.f64 y z))) (sqrt.f64 (/.f64 y z)) (*.f64 4 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 x z)) 2)) (cbrt.f64 (/.f64 x z)) (*.f64 -4 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 (sqrt.f64 (/.f64 x z))) (sqrt.f64 (/.f64 x z)) (*.f64 -4 (/.f64 y z)))))))"]],"rules":[["egg-rr",70],["egg-rr",27],["egg-rr",27]],"stop":[["node limit",1]],"time":53.93505859375,"type":"rewrite"},{"count":[[142,130]],"egraph":[[13,2291,162,0.036874501000000004],[12,2291,162,0.031740209000000005],[11,2286,162,0.027455709000000002],[10,2164,162,0.023158168],[9,2054,162,0.017994417999999998],[8,1710,162,0.013333168],[7,946,162,0.007402501000000001],[6,535,162,0.0037235840000000003],[5,277,162,0.002066501],[4,165,162,0.001165918],[3,97,174,0.000727709],[2,65,174,0.00044116800000000003],[1,36,174,0.00023300100000000001],[0,20,174,9.4084e-5]],"inputs":[["(*.f64 4 (/.f64 x z))","(*.f64 -4 (/.f64 y z))","(*.f64 -4 (/.f64 y z))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(*.f64 -4 (/.f64 y z))","(*.f64 4 (/.f64 x z))","(*.f64 4 (/.f64 x z))"]],"method":["egg-herbie"],"outputs":[["(*.f64 4 (/.f64 x z))","(*.f64 -4 (/.f64 y z))","(*.f64 y (/.f64 -4 z))","(*.f64 -4 (/.f64 y z))","(*.f64 y (/.f64 -4 z))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (fma.f64 -4 y (*.f64 4 x)) z)","(/.f64 (fma.f64 4 x (*.f64 -4 y)) z)","(/.f64 (*.f64 4 (-.f64 x y)) z)","(*.f64 (/.f64 4 z) (-.f64 x y))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (fma.f64 -4 y (*.f64 4 x)) z)","(/.f64 (fma.f64 4 x (*.f64 -4 y)) z)","(/.f64 (*.f64 4 (-.f64 x y)) z)","(*.f64 (/.f64 4 z) (-.f64 x y))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (fma.f64 -4 y (*.f64 4 x)) z)","(/.f64 (fma.f64 4 x (*.f64 -4 y)) z)","(/.f64 (*.f64 4 (-.f64 x y)) z)","(*.f64 (/.f64 4 z) (-.f64 x y))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (fma.f64 -4 y (*.f64 4 x)) z)","(/.f64 (fma.f64 4 x (*.f64 -4 y)) z)","(/.f64 (*.f64 4 (-.f64 x y)) z)","(*.f64 (/.f64 4 z) (-.f64 x y))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (fma.f64 -4 y (*.f64 4 x)) z)","(/.f64 (fma.f64 4 x (*.f64 -4 y)) z)","(/.f64 (*.f64 4 (-.f64 x y)) z)","(*.f64 (/.f64 4 z) (-.f64 x y))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (fma.f64 -4 y (*.f64 4 x)) z)","(/.f64 (fma.f64 4 x (*.f64 -4 y)) z)","(/.f64 (*.f64 4 (-.f64 x y)) z)","(*.f64 (/.f64 4 z) (-.f64 x y))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (fma.f64 -4 y (*.f64 4 x)) z)","(/.f64 (fma.f64 4 x (*.f64 -4 y)) z)","(/.f64 (*.f64 4 (-.f64 x y)) z)","(*.f64 (/.f64 4 z) (-.f64 x y))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (fma.f64 -4 y (*.f64 4 x)) z)","(/.f64 (fma.f64 4 x (*.f64 -4 y)) z)","(/.f64 (*.f64 4 (-.f64 x y)) z)","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(/.f64 (fma.f64 -4 y (*.f64 4 x)) z)","(/.f64 (fma.f64 4 x (*.f64 -4 y)) z)","(/.f64 (*.f64 4 (-.f64 x y)) z)","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(/.f64 (fma.f64 -4 y (*.f64 4 x)) z)","(/.f64 (fma.f64 4 x (*.f64 -4 y)) z)","(/.f64 (*.f64 4 (-.f64 x y)) z)","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(/.f64 (fma.f64 -4 y (*.f64 4 x)) z)","(/.f64 (fma.f64 4 x (*.f64 -4 y)) z)","(/.f64 (*.f64 4 (-.f64 x y)) z)","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(/.f64 (fma.f64 -4 y (*.f64 4 x)) z)","(/.f64 (fma.f64 4 x (*.f64 -4 y)) z)","(/.f64 (*.f64 4 (-.f64 x y)) z)","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 y z))","(*.f64 y (/.f64 -4 z))","(*.f64 4 (/.f64 x z))","(*.f64 4 (/.f64 x z))"]],"stop":[["saturated",1]],"time":53.028076171875,"type":"simplify"},{"compiler":[[2377,1434]],"time":26.1669921875,"type":"eval"},{"alts":[["(-.f64 (fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z))) 2)","next",0.0703125],["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","done",0.15234375],["(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","done",0.0078125]],"compiler":[[17,13],[11,8],[16,12],[17,13]],"count":[[132,3]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[130,1],"picked":[1,1]}],"min-error":[0],"time":34.348876953125,"type":"prune"},{"compiler":[[52,32]],"locations":[["(*.f64 (/.f64 1 z) 4)",0.00390625,true],["(*.f64 -4 (/.f64 y z))",0.026386279305326048,false],["(fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z)))",0.12109375,true]],"time":11.006103515625,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (/.f64 1 z) 4)","z","-inf",0.136962890625],["(*.f64 (/.f64 1 z) 4)","z","inf",0.159912109375],["(*.f64 (/.f64 1 z) 4)","z","0",0.133056640625],["(fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z)))","y","-inf",0.1650390625],["(fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z)))","y","inf",0.194091796875],["(fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z)))","y","0",0.205078125],["(fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z)))","z","-inf",0.385986328125],["(fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z)))","z","inf",0.376953125],["(fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z)))","z","0",0.366943359375],["(fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z)))","x","-inf",0.304931640625],["(fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z)))","x","inf",0.240966796875],["(fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z)))","x","0",0.27099609375]],"time":3.0849609375,"type":"series"},{"count":[[2,66]],"egraph":[[2,2891,18,0.026369291],[1,246,18,0.00410525],[0,12,18,0.000351625]],"inputs":[["(fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z)))","(*.f64 (/.f64 1 z) 4)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -4 (/.f64 z y)) (/.f64 (*.f64 x 4) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x 4) z) (/.f64 -4 (/.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x 4) z) 1) (/.f64 -4 (/.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))) (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))) 2) (cbrt.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))) (sqrt.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 x 4) z) 3) (pow.f64 (/.f64 -4 (/.f64 z y)) 3)) (+.f64 (pow.f64 (/.f64 (*.f64 x 4) z) 2) (-.f64 (*.f64 16 (pow.f64 (/.f64 z y) -2)) (*.f64 (/.f64 (*.f64 x 4) z) (/.f64 -4 (/.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 (*.f64 x 4) z) 2) (*.f64 16 (pow.f64 (/.f64 z y) -2))) (-.f64 (/.f64 (*.f64 x 4) z) (/.f64 -4 (/.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))))) 2)) (cbrt.f64 (log.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))))) (sqrt.f64 (log.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 -4 (/.f64 z y)))) (pow.f64 (exp.f64 x) (/.f64 4 z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 x) (/.f64 4 z)) (+.f64 1 (expm1.f64 (/.f64 -4 (/.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 x (/.f64 4 z) (/.f64 -4 (/.f64 z y)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 4 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 4 z))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 4 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 4 z)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 4 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 4 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 z 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 4 z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -4 (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4 (pow.f64 (cbrt.f64 z) 2)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4 (sqrt.f64 z)) (sqrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 4 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (/.f64 4 z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 16 (*.f64 z z)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 4 z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 4 z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 2 (sqrt.f64 z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z 4) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 4 z))) 2)) (cbrt.f64 (log.f64 (/.f64 4 z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 4 z)))) (sqrt.f64 (log.f64 (/.f64 4 z))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 16 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 4 z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 4 z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 4 z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 4 z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 4 z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 4 z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 4 z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 4 z))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 4 z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 2 (sqrt.f64 z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 4 z)) 1) 1))))))"]],"rules":[["egg-rr",30],["egg-rr",36]],"stop":[["node limit",1]],"time":47.806884765625,"type":"rewrite"},{"count":[[114,74]],"egraph":[[13,2292,390,0.037347124],[12,2292,390,0.032161499],[11,2287,390,0.027827374000000002],[10,2165,390,0.023426083000000004],[9,2055,390,0.018234958000000002],[8,1711,390,0.013579249000000002],[7,947,390,0.007630166000000001],[6,537,390,0.003937249],[5,289,390,0.002286749],[4,171,390,0.0013718329999999998],[3,103,510,0.0008775829999999999],[2,72,510,0.000549874],[1,40,510,0.000300041],[0,22,510,0.000121833]],"inputs":[["(*.f64 -4 (/.f64 y z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(*.f64 4 (/.f64 x z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(*.f64 4 (/.f64 x z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(*.f64 4 (/.f64 x z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(*.f64 -4 (/.f64 y z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(*.f64 -4 (/.f64 y z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -4 (/.f64 y z))","(*.f64 y (/.f64 -4 z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(*.f64 4 (/.f64 x z))","(*.f64 x (/.f64 4 z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(*.f64 4 (/.f64 x z))","(*.f64 x (/.f64 4 z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(/.f64 (+.f64 (*.f64 -4 y) (*.f64 4 x)) z)","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(*.f64 -1 (/.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) z))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(*.f64 4 (/.f64 x z))","(*.f64 x (/.f64 4 z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(*.f64 -4 (/.f64 y z))","(*.f64 y (/.f64 -4 z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(*.f64 -4 (/.f64 y z))","(*.f64 y (/.f64 -4 z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z)))","(fma.f64 -4 (/.f64 y z) (*.f64 4 (/.f64 x z)))","(/.f64 -4 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 4 z) (-.f64 x y))","(*.f64 -4 (/.f64 (-.f64 y x) z))","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)","(/.f64 4 z)"]],"stop":[["saturated",1]],"time":60.049072265625,"type":"simplify"},{"compiler":[[1718,1159]],"time":21.6240234375,"type":"eval"},{"alts":[["(-.f64 (fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z))) 2)","done",0.0703125],["(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","done",0.15234375],["(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","done",0.0078125]],"compiler":[[17,13],[11,8],[16,12]],"count":[[104,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[101,0],"picked":[1,1]}],"min-error":[0],"time":24.930908203125,"type":"prune"},{"accuracy":[0.0078125],"baseline":[0.0078125],"branch":[["x",0.0078125,1],["y",0.0078125,1],["z",0.0078125,1],["(/.f64 (*.f64 4 (-.f64 (-.f64 x y) (*.f64 z 1/2))) z)",0.0078125,1],["(-.f64 x y)",0.0078125,1],["(-.f64 x y)",0.0078125,1]],"compiler":[[4,3],[4,3],[4,3],[14,10],[6,4],[6,4],[49,32]],"count":[[4,1]],"inputs":[["(-.f64 (fma.f64 x (*.f64 (/.f64 1 z) 4) (*.f64 -4 (/.f64 y z))) 2)","(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(fma.f64 (-.f64 x y) (/.f64 4 z) -2)","(/.f64 (*.f64 4 (-.f64 (-.f64 x y) (*.f64 z 1/2))) z)"]],"link":["."],"name":["Data.Array.Repa.Algorithms.ColorRamp:rampColorHotToCold from repa-algorithms-3.4.0.1, B"],"oracle":[0.67578125],"outputs":[["(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)"]],"time":20.89208984375,"times":[["x",3.346923828125],["y",3.35888671875],["z",3.406982421875],["(/.f64 (*.f64 4 (-.f64 (-.f64 x y) (*.f64 z 1/2))) z)",2.933837890625],["(-.f64 x y)",3.3310546875],["(-.f64 x y)",3.360107421875]],"type":"regimes"},{"compiler":[[16,12]],"egraph":[[2,20,19,6.275000000000001e-5],[1,19,19,4.6916e-5],[0,13,19,2.9291e-5]],"inputs":[["(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)"]],"method":["egg-herbie"],"outputs":[["(-.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) 2)","(+.f64 (+.f64 (*.f64 -4 (/.f64 y z)) (*.f64 4 (/.f64 x z))) -2)"]],"stop":[["done",1],["saturated",1]],"time":8.64892578125,"type":"simplify"},{"time":0.012939453125,"type":"soundness"},{"compiler":[[16,12]],"remove-preprocessing":[[]],"time":9.4921875,"type":"end"}]