[{"compiler":[[11,8]],"method":["search"],"sampling":[[12,0.28585345414467156,0.3546338927699253,0.35951265308540314],[11,0.28292662696912885,0.3804875328205526,0.33658584021031857],[10,0.25951200956478715,0.4117070226930082,0.32878096774220467],[9,0.2536583552137017,0.47609722055494785,0.2702444242313504],[8,0.21073155663907528,0.5307313278317451,0.2585371155291796],[7,0.20292668417096138,0.6243897974491119,0.17268351837992668],[6,0.12487795948982239,0.7180482670664787,0.15707377344369888],[5,0.12487795948982239,0.8741457164287567,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":103.175048828125,"type":"analyze"},{"outcomes":[["body",512,"invalid",202.329345703125,1698],["body",2048,"invalid",1.024169921875,3],["body",8192,"exit",2492.003173828125,1614],["body",256,"invalid",116.443603515625,1998],["body",8192,"invalid",2.407958984375,1],["body",4096,"invalid",1.958984375,2],["body",1024,"invalid",754.54931640625,3213],["body",256,"valid",533.242431640625,8256]],"time":4121.408935546875,"type":"sample"},{"compiler":[[10,7]],"egraph":[[0,2,2,1.75e-6],[11,7248,22,0.055997211000000005],[10,5703,22,0.043051836],[9,4857,22,0.031771127],[8,4407,22,0.024581543],[7,4175,22,0.019142585],[6,4018,22,0.014645501],[5,2189,22,0.010181167],[4,504,22,0.00421325],[3,156,22,0.001256333],[2,67,22,0.000503291],[1,31,26,0.00022004100000000003],[0,13,26,8.6958e-5]],"inputs":[["0","1"],["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(*.f64 (exp.f64 (neg.f64 l)) (pow.f64 w (exp.f64 l)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 l)) (pow.f64 w (exp.f64 l)))","(/.f64 (pow.f64 w (exp.f64 l)) (exp.f64 l))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":79.343994140625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[11,5791,11,0.046432167999999996],[10,4974,11,0.033332167999999995],[9,4531,11,0.025807333999999998],[8,4294,11,0.020167209],[7,4170,11,0.015560792],[6,4071,11,0.011475959],[5,1119,11,0.006802126],[4,261,11,0.002225167],[3,85,11,0.000732833],[2,38,11,0.00031062500000000003],[1,19,13,0.00014595800000000001],[0,8,13,6.1125e-5]],"inputs":[["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))"]],"stop":[["node limit",1]],"time":57.662109375,"type":"simplify"},{"compiler":[[17,8]],"time":0.350830078125,"type":"eval"},{"alts":[["(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","fresh",0.1861566740711404],["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","next",0.1823535542098672]],"compiler":[[9,5],[10,7],[9,5],[10,7]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.18220326456996627],"time":1.673095703125,"type":"prune"},{"compiler":[[23,7]],"locations":[["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))",0.00390625,true],["(pow.f64 l (exp.f64 w))",0.18276359155206073,true]],"time":5.679931640625,"type":"localize"},{"count":[[2,40]],"series":[["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","l","-inf",0.297119140625],["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","l","inf",0.31494140625],["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","l","0",0.36083984375],["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","w","-inf",0.3349609375],["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","w","inf",0.30615234375],["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","w","0",0.498046875],["(pow.f64 l (exp.f64 w))","w","-inf",0.342041015625],["(pow.f64 l (exp.f64 w))","w","inf",6.66796875],["(pow.f64 l (exp.f64 w))","w","0",0.58984375],["(pow.f64 l (exp.f64 w))","l","-inf",9.91796875],["(pow.f64 l (exp.f64 w))","l","inf",5.51513671875],["(pow.f64 l (exp.f64 w))","l","0",13.758056640625]],"time":39.116943359375,"type":"series"},{"count":[[2,27]],"egraph":[[2,2003,17,0.016751916],[1,159,17,0.002750291],[0,8,19,0.0001895]],"inputs":[["(pow.f64 l (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 l (exp.f64 w))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 l (exp.f64 w)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 l (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) (pow.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) 2) (cbrt.f64 (pow.f64 l (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (sqrt.f64 (pow.f64 l (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 (exp.f64 w)) (pow.f64 l (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 l) 2) (exp.f64 w)) (pow.f64 (cbrt.f64 l) (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 l) (exp.f64 w)) (pow.f64 (sqrt.f64 l) (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 l (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 l (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 l (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (exp.f64 w) (log.f64 l)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 w (*.f64 (exp.f64 w) (log.f64 l))))))))"]],"rules":[["egg-rr",12],["egg-rr",15]],"stop":[["node limit",1]],"time":39.025146484375,"type":"rewrite"},{"count":[[67,49]],"egraph":[[3,3860,544,0.020569291],[2,775,552,0.006762375],[1,232,613,0.001628583],[0,79,631,0.000408167]],"inputs":[["(exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))","(exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))","(exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))","(exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))","(exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))","(exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))","(exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))","(exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))","(exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))","(exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))","(exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))","(exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))","l","(+.f64 l (*.f64 l (*.f64 w (log.f64 l))))","(+.f64 l (+.f64 (*.f64 l (*.f64 (pow.f64 w 2) (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2))))) (*.f64 l (*.f64 w (log.f64 l)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (*.f64 l (pow.f64 w 3))) (+.f64 l (+.f64 (*.f64 l (*.f64 (pow.f64 w 2) (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2))))) (*.f64 l (*.f64 w (log.f64 l))))))","l","(+.f64 l (*.f64 (+.f64 (*.f64 -1 l) (*.f64 l (log.f64 l))) w))","(+.f64 l (+.f64 (*.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 (*.f64 1/2 l) (*.f64 -1 (*.f64 l (log.f64 l))))) (pow.f64 w 2)) (*.f64 (+.f64 (*.f64 -1 l) (*.f64 l (log.f64 l))) w)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 l (log.f64 l))) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 -1 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2))))) (*.f64 -1/6 l)))) (pow.f64 w 3)) (+.f64 l (+.f64 (*.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 (*.f64 1/2 l) (*.f64 -1 (*.f64 l (log.f64 l))))) (pow.f64 w 2)) (*.f64 (+.f64 (*.f64 -1 l) (*.f64 l (log.f64 l))) w))))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))"]],"method":["egg-herbie"],"outputs":[["(exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))","(pow.f64 l (exp.f64 w))","(exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))","(pow.f64 l (exp.f64 w))","(exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))","(pow.f64 l (exp.f64 w))","(exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))","(pow.f64 l (exp.f64 w))","(exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))","(pow.f64 l (exp.f64 w))","(exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))","(pow.f64 l (exp.f64 w))","(exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))","(pow.f64 l (exp.f64 w))","(exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))","(pow.f64 l (exp.f64 w))","(exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))","(pow.f64 l (exp.f64 w))","(exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))","(pow.f64 l (exp.f64 w))","(exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))","(pow.f64 l (exp.f64 w))","(exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))","(pow.f64 l (exp.f64 w))","l","(+.f64 l (*.f64 l (*.f64 w (log.f64 l))))","(+.f64 l (*.f64 l (*.f64 (log.f64 l) w)))","(fma.f64 l (*.f64 (log.f64 l) w) l)","(*.f64 l (fma.f64 (log.f64 l) w 1))","(+.f64 l (+.f64 (*.f64 l (*.f64 (pow.f64 w 2) (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2))))) (*.f64 l (*.f64 w (log.f64 l)))))","(+.f64 l (*.f64 l (+.f64 (*.f64 (*.f64 w w) (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)))) (*.f64 (log.f64 l) w))))","(fma.f64 l (fma.f64 (*.f64 w w) (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) (*.f64 (log.f64 l) w)) l)","(fma.f64 l (*.f64 w (+.f64 (*.f64 w (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2)))) (log.f64 l))) l)","(fma.f64 l (*.f64 (log.f64 l) (+.f64 w (*.f64 (*.f64 w (*.f64 w 1/2)) (+.f64 (log.f64 l) 1)))) l)","(+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (*.f64 l (pow.f64 w 3))) (+.f64 l (+.f64 (*.f64 l (*.f64 (pow.f64 w 2) (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2))))) (*.f64 l (*.f64 w (log.f64 l))))))","(fma.f64 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/6 (log.f64 l) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (*.f64 l (pow.f64 w 3)) (+.f64 l (*.f64 l (+.f64 (*.f64 (*.f64 w w) (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)))) (*.f64 (log.f64 l) w)))))","(fma.f64 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 (log.f64 l) 1/6 (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (*.f64 l (pow.f64 w 3)) (fma.f64 l (fma.f64 (*.f64 w w) (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) (*.f64 (log.f64 l) w)) l))","(fma.f64 l (*.f64 w (+.f64 (*.f64 w (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2)))) (log.f64 l))) (fma.f64 (pow.f64 w 3) (*.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (*.f64 (log.f64 l) (+.f64 (*.f64 (log.f64 l) 1/2) 1/6)))) l))","(fma.f64 l (*.f64 (*.f64 (log.f64 l) (+.f64 1/6 (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/6))))) (pow.f64 w 3)) (fma.f64 l (*.f64 (log.f64 l) (+.f64 w (*.f64 (*.f64 w (*.f64 w 1/2)) (+.f64 (log.f64 l) 1)))) l))","l","(+.f64 l (*.f64 (+.f64 (*.f64 -1 l) (*.f64 l (log.f64 l))) w))","(+.f64 l (*.f64 w (fma.f64 -1 l (*.f64 l (log.f64 l)))))","(fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) l)","(fma.f64 w (*.f64 l (+.f64 (log.f64 l) -1)) l)","(+.f64 l (+.f64 (*.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 (*.f64 1/2 l) (*.f64 -1 (*.f64 l (log.f64 l))))) (pow.f64 w 2)) (*.f64 (+.f64 (*.f64 -1 l) (*.f64 l (log.f64 l))) w)))","(+.f64 l (fma.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) (fma.f64 1/2 l (*.f64 (neg.f64 l) (log.f64 l)))) (*.f64 w w) (*.f64 w (fma.f64 -1 l (*.f64 l (log.f64 l))))))","(+.f64 l (fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) (*.f64 (*.f64 w w) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) 1/2)) (*.f64 l (log.f64 l))))))","(fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) (fma.f64 w (*.f64 w (*.f64 l (-.f64 (fma.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)) 1/2) (log.f64 l)))) l))","(fma.f64 w (*.f64 l (+.f64 (log.f64 l) -1)) (fma.f64 w (*.f64 w (*.f64 l (+.f64 1/2 (*.f64 (log.f64 l) (+.f64 -1 (+.f64 1/2 (*.f64 (log.f64 l) 1/2))))))) l))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 l (log.f64 l))) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 -1 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2))))) (*.f64 -1/6 l)))) (pow.f64 w 3)) (+.f64 l (+.f64 (*.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 (*.f64 1/2 l) (*.f64 -1 (*.f64 l (log.f64 l))))) (pow.f64 w 2)) (*.f64 (+.f64 (*.f64 -1 l) (*.f64 l (log.f64 l))) w))))","(fma.f64 (fma.f64 1/2 (*.f64 l (log.f64 l)) (fma.f64 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/6 (log.f64 l) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l (fma.f64 -1 (*.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)))) (*.f64 l -1/6)))) (pow.f64 w 3) (+.f64 l (fma.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) (fma.f64 1/2 l (*.f64 (neg.f64 l) (log.f64 l)))) (*.f64 w w) (*.f64 w (fma.f64 -1 l (*.f64 l (log.f64 l)))))))","(+.f64 (fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) (*.f64 (*.f64 w w) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) 1/2)) (*.f64 l (log.f64 l))))) (fma.f64 (pow.f64 w 3) (fma.f64 1/2 (*.f64 l (log.f64 l)) (fma.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 (log.f64 l) 1/6 (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (-.f64 (*.f64 l -1/6) (*.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))))))) l))","(fma.f64 (pow.f64 w 3) (fma.f64 l (*.f64 (log.f64 l) 1/2) (fma.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (*.f64 (log.f64 l) (+.f64 (*.f64 (log.f64 l) 1/2) 1/6))) (*.f64 l (-.f64 -1/6 (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))))))) (fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) (fma.f64 w (*.f64 w (*.f64 l (-.f64 (fma.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)) 1/2) (log.f64 l)))) l)))","(fma.f64 (pow.f64 w 3) (*.f64 l (+.f64 (+.f64 -1/6 (*.f64 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)) -1/2)) (+.f64 (*.f64 (log.f64 l) 1/2) (*.f64 (log.f64 l) (+.f64 1/6 (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/6)))))))) (fma.f64 w (*.f64 l (+.f64 (log.f64 l) -1)) (fma.f64 w (*.f64 w (*.f64 l (+.f64 1/2 (*.f64 (log.f64 l) (+.f64 -1 (+.f64 1/2 (*.f64 (log.f64 l) 1/2))))))) l)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))"]],"stop":[["node limit",1]],"time":37.929931640625,"type":"simplify"},{"compiler":[[835,375]],"time":7.845947265625,"type":"eval"},{"alts":[["(*.f64 (exp.f64 (neg.f64 w)) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (sqrt.f64 (pow.f64 l (exp.f64 w)))))","fresh",0.5630971255557686],["(*.f64 (exp.f64 (neg.f64 w)) (fma.f64 l (*.f64 (*.f64 (log.f64 l) (+.f64 1/6 (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/6))))) (pow.f64 w 3)) (fma.f64 l (*.f64 (log.f64 l) (+.f64 w (*.f64 (*.f64 w (*.f64 w 1/2)) (+.f64 (log.f64 l) 1)))) l)))","fresh",7.941962186779579],["(*.f64 (exp.f64 (neg.f64 w)) (expm1.f64 (log1p.f64 (pow.f64 l (exp.f64 w)))))","fresh",2.32258908998896],["(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","next",0.1861566740711404]],"compiler":[[17,9],[44,27],[12,9],[9,5],[17,9],[44,27],[12,9],[9,5]],"count":[[51,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[49,4],"picked":[1,0]}],"min-error":[0.06694809286822626],"time":9.39697265625,"type":"prune"},{"compiler":[[17,5]],"locations":[["(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))",0.015625,true],["(pow.f64 l (exp.f64 w))",0.18276359155206073,false]],"time":4.1591796875,"type":"localize"},{"count":[[1,16]],"series":[["(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","w","-inf",0.39697265625],["(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","w","inf",0.381103515625],["(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","w","0",0.597900390625],["(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","l","-inf",0.423095703125],["(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","l","inf",0.383056640625],["(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","l","0",0.447998046875]],"time":2.725830078125,"type":"series"},{"count":[[1,31]],"egraph":[[2,1638,11,0.016483666],[1,125,11,0.002227541],[0,6,11,0.000146458]],"inputs":[["(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2) (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) 2) (*.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (sqrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 l (exp.f64 w))) (/.f64 1 (neg.f64 (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) 2) 1) (/.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) 1) (/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (exp.f64 w)) 2)) (/.f64 (pow.f64 l (exp.f64 w)) (cbrt.f64 (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) 2) (pow.f64 (cbrt.f64 (exp.f64 w)) 2)) (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (pow.f64 (cbrt.f64 (exp.f64 w)) 2)) (/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (cbrt.f64 (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (exp.f64 w))) (/.f64 (pow.f64 l (exp.f64 w)) (sqrt.f64 (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) 2) (sqrt.f64 (exp.f64 w))) (/.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) (sqrt.f64 (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (exp.f64 w) (pow.f64 l (exp.f64 w))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 l (exp.f64 w)) (neg.f64 (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 3) (pow.f64 (exp.f64 w) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (exp.f64 w) (log.f64 l)) w))))))"]],"rules":[["egg-rr",31]],"stop":[["node limit",1]],"time":34.5390625,"type":"rewrite"},{"count":[[47,42]],"egraph":[[4,7964,294,0.033076292],[3,3124,294,0.0181855],[2,596,312,0.005512875],[1,187,322,0.0012940830000000001],[0,63,330,0.000305375]],"inputs":[["(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","l","(+.f64 l (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (*.f64 1/2 l))) (pow.f64 w 2)) (+.f64 l (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l))))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (*.f64 1/2 l))) (pow.f64 w 2)) (+.f64 l (+.f64 (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)) (*.f64 (-.f64 (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (*.f64 1/2 l))) (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 l (+.f64 (*.f64 1/6 l) (*.f64 1/2 (-.f64 (*.f64 l (log.f64 l)) l)))))) (pow.f64 w 3)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","l","(+.f64 l (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))","(fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) l)","(fma.f64 w (fma.f64 l (log.f64 l) (neg.f64 l)) l)","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (*.f64 1/2 l))) (pow.f64 w 2)) (+.f64 l (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l))))","(fma.f64 (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (*.f64 l 1/2))) (*.f64 w w) (+.f64 l (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l))))","(fma.f64 (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (*.f64 l (+.f64 (log.f64 l) 1/2))) (*.f64 w w) (fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) l))","(fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) (fma.f64 w (*.f64 w (+.f64 l (*.f64 l (-.f64 (*.f64 (log.f64 l) (+.f64 (*.f64 (log.f64 l) 1/2) 1/2)) (+.f64 (log.f64 l) 1/2))))) l))","(fma.f64 w (fma.f64 l (log.f64 l) (neg.f64 l)) (fma.f64 (-.f64 (*.f64 l (fma.f64 1/2 (pow.f64 (log.f64 l) 2) 1/2)) (*.f64 (log.f64 l) (*.f64 l 1/2))) (*.f64 w w) l))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (*.f64 1/2 l))) (pow.f64 w 2)) (+.f64 l (+.f64 (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)) (*.f64 (-.f64 (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (*.f64 1/2 l))) (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 l (+.f64 (*.f64 1/6 l) (*.f64 1/2 (-.f64 (*.f64 l (log.f64 l)) l)))))) (pow.f64 w 3)))))","(fma.f64 (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (*.f64 l 1/2))) (*.f64 w w) (+.f64 l (fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) (*.f64 (-.f64 (fma.f64 l (log.f64 l) (*.f64 l (+.f64 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/6 (log.f64 l) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) 1/2))) (+.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 1/6 l (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) 1/2)))) (pow.f64 w 3)))))","(+.f64 (fma.f64 (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (*.f64 l (+.f64 (log.f64 l) 1/2))) (*.f64 w w) (fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) l)) (*.f64 (-.f64 (*.f64 l (+.f64 (log.f64 l) (+.f64 1/2 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 (log.f64 l) 1/6 (*.f64 1/2 (pow.f64 (log.f64 l) 2))))))) (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) (+.f64 (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) 1/2) (*.f64 7/6 l)))) (pow.f64 w 3)))","(fma.f64 w (*.f64 w (+.f64 l (*.f64 l (-.f64 (*.f64 (log.f64 l) (+.f64 (*.f64 (log.f64 l) 1/2) 1/2)) (+.f64 (log.f64 l) 1/2))))) (fma.f64 (-.f64 (*.f64 l (+.f64 (log.f64 l) (fma.f64 1/6 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 3)) (fma.f64 1/2 (pow.f64 (log.f64 l) 2) 1/2)))) (fma.f64 7/6 l (*.f64 1/2 (+.f64 (-.f64 (*.f64 l (log.f64 l)) l) (*.f64 l (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))))))) (pow.f64 w 3) (fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) l)))","(fma.f64 w (*.f64 w (-.f64 (*.f64 l (fma.f64 1/2 (pow.f64 (log.f64 l) 2) 1/2)) (*.f64 (log.f64 l) (*.f64 l 1/2)))) (fma.f64 (-.f64 (*.f64 l (-.f64 (+.f64 (*.f64 (+.f64 1 (pow.f64 (log.f64 l) 2)) (+.f64 1/2 (*.f64 (log.f64 l) 1/6))) (*.f64 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)) -1/2)) 1/6)) (*.f64 l (-.f64 1/2 (*.f64 (log.f64 l) 1/2)))) (pow.f64 w 3) (fma.f64 w (fma.f64 l (log.f64 l) (neg.f64 l)) l)))","(fma.f64 w (*.f64 w (-.f64 (*.f64 l (fma.f64 1/2 (pow.f64 (log.f64 l) 2) 1/2)) (*.f64 (log.f64 l) (*.f64 l 1/2)))) (fma.f64 (-.f64 (*.f64 l (-.f64 (+.f64 (*.f64 (+.f64 1 (pow.f64 (log.f64 l) 2)) (+.f64 1/2 (*.f64 (log.f64 l) 1/6))) (*.f64 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)) -1/2)) 1/6)) (*.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) -1/2)) (pow.f64 w 3) (fma.f64 w (fma.f64 l (log.f64 l) (neg.f64 l)) l)))"]],"stop":[["node limit",1]],"time":47.93798828125,"type":"simplify"},{"compiler":[[1090,424]],"time":11.52197265625,"type":"eval"},{"alts":[["(*.f64 (exp.f64 (neg.f64 w)) (fma.f64 l (*.f64 (*.f64 (log.f64 l) (+.f64 1/6 (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/6))))) (pow.f64 w 3)) (fma.f64 l (*.f64 (log.f64 l) (+.f64 w (*.f64 (*.f64 w (*.f64 w 1/2)) (+.f64 (log.f64 l) 1)))) l)))","fresh",7.941962186779579],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w))))","next",0.5631209948311957],["(*.f64 (exp.f64 (neg.f64 w)) (expm1.f64 (log1p.f64 (pow.f64 l (exp.f64 w)))))","fresh",2.32258908998896],["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))","fresh",0.7373256669688241]],"compiler":[[44,27],[17,9],[12,9],[21,9],[44,27],[17,9],[12,9],[21,9]],"count":[[72,4]],"kept":[{"done":[0,0],"fresh":[3,2],"new":[68,2],"picked":[1,0]}],"min-error":[0.0667936851956222],"time":14.12109375,"type":"prune"},{"compiler":[[44,9]],"locations":[["(sqrt.f64 (pow.f64 l (exp.f64 w)))",0.00390625,true],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w)))",0.01171875,true],["(pow.f64 l (exp.f64 w))",0.18276359155206073,false],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w))))",0.3984375,true]],"time":8.010986328125,"type":"localize"},{"count":[[3,60]],"series":[["(sqrt.f64 (pow.f64 l (exp.f64 w)))","w","-inf",0.1708984375],["(sqrt.f64 (pow.f64 l (exp.f64 w)))","w","inf",0.14892578125],["(sqrt.f64 (pow.f64 l (exp.f64 w)))","w","0",0.43994140625],["(sqrt.f64 (pow.f64 l (exp.f64 w)))","l","-inf",0.1689453125],["(sqrt.f64 (pow.f64 l (exp.f64 w)))","l","inf",0.18896484375],["(sqrt.f64 (pow.f64 l (exp.f64 w)))","l","0",0.155029296875],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w)))","w","-inf",0.427001953125],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w)))","w","inf",0.4228515625],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w)))","w","0",0.946044921875],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w)))","l","-inf",0.413818359375],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w)))","l","inf",0.449951171875],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w)))","l","0",0.464111328125],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w))))","w","-inf",0.2041015625],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w))))","w","inf",0.17578125],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w))))","w","0",0.275146484375],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w))))","l","-inf",0.198974609375],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w))))","l","inf",0.368896484375],["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w))))","l","0",0.221923828125]],"time":6.133056640625,"type":"series"},{"count":[[3,54]],"egraph":[[2,2494,32,0.019262793],[1,199,32,0.003504751],[0,10,36,0.000236792]],"inputs":[["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w))))","(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w)))","(sqrt.f64 (pow.f64 l (exp.f64 w)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 3) (pow.f64 (exp.f64 w) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 3/2) (pow.f64 (*.f64 (exp.f64 w) (sqrt.f64 (pow.f64 l (exp.f64 w)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 w) (sqrt.f64 (pow.f64 l (exp.f64 w)))) 3) (pow.f64 (pow.f64 l (exp.f64 w)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (exp.f64 w) (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (exp.f64 w) (log.f64 l)) w))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (exp.f64 w) (sqrt.f64 (pow.f64 l (exp.f64 w))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (exp.f64 w) (sqrt.f64 (pow.f64 l (exp.f64 w)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (exp.f64 w) (sqrt.f64 (pow.f64 l (exp.f64 w)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (exp.f64 w) (sqrt.f64 (pow.f64 l (exp.f64 w))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (exp.f64 w) (sqrt.f64 (pow.f64 l (exp.f64 w))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 l (exp.f64 w)) (pow.f64 (exp.f64 w) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (exp.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (exp.f64 w) (sqrt.f64 (pow.f64 l (exp.f64 w)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 3/2) (pow.f64 (exp.f64 w) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (exp.f64 w) 3) (pow.f64 (pow.f64 l (exp.f64 w)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (exp.f64 w) (sqrt.f64 (pow.f64 l (exp.f64 w))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (exp.f64 w) (sqrt.f64 (pow.f64 l (exp.f64 w))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 w (log.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (sqrt.f64 (pow.f64 l (exp.f64 w)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (pow.f64 l (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) (cbrt.f64 (sqrt.f64 (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (pow.f64 l (exp.f64 w)))) (cbrt.f64 (pow.f64 l (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 1/4) (pow.f64 (pow.f64 l (exp.f64 w)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (*.f64 l l) (exp.f64 w)))) (sqrt.f64 (cbrt.f64 (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 (*.f64 (exp.f64 w) 1/2)) (sqrt.f64 (pow.f64 l (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 l) 2) (*.f64 (exp.f64 w) 1/2)) (pow.f64 (cbrt.f64 l) (*.f64 (exp.f64 w) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 l) (*.f64 (exp.f64 w) 1/2)) (pow.f64 (sqrt.f64 l) (*.f64 (exp.f64 w) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (pow.f64 l (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 l l) (exp.f64 w))) 1/2) (pow.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 l (*.f64 (exp.f64 w) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 l (*.f64 (*.f64 (exp.f64 w) 1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 l (exp.f64 w)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (pow.f64 l (exp.f64 w)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (pow.f64 l (exp.f64 w)))))))))"]],"rules":[["egg-rr",25],["egg-rr",14],["egg-rr",15]],"stop":[["node limit",1]],"time":41.849853515625,"type":"rewrite"},{"count":[[114,87]],"egraph":[[3,6607,1220,0.026964042],[2,1376,1248,0.011692167],[1,381,1350,0.002773917],[0,127,1384,0.000643875]],"inputs":[["(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","l","(+.f64 l (*.f64 (+.f64 (*.f64 -1 l) (*.f64 l (log.f64 l))) w))","(+.f64 l (+.f64 (*.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 (*.f64 1/2 l) (*.f64 -1 (*.f64 l (log.f64 l))))) (pow.f64 w 2)) (*.f64 (+.f64 (*.f64 -1 l) (*.f64 l (log.f64 l))) w)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 l (log.f64 l))) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 -1 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2))))) (*.f64 -1/6 l)))) (pow.f64 w 3)) (+.f64 l (+.f64 (*.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 (*.f64 1/2 l) (*.f64 -1 (*.f64 l (log.f64 l))))) (pow.f64 w 2)) (*.f64 (+.f64 (*.f64 -1 l) (*.f64 l (log.f64 l))) w))))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))))","(*.f64 (sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))) (exp.f64 (neg.f64 w)))","(*.f64 (sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))) (exp.f64 (neg.f64 w)))","(*.f64 (sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))) (exp.f64 (neg.f64 w)))","(*.f64 (sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))) (exp.f64 (neg.f64 w)))","(sqrt.f64 l)","(+.f64 (*.f64 w (+.f64 (*.f64 -1 (sqrt.f64 l)) (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))))) (sqrt.f64 l))","(+.f64 (*.f64 w (+.f64 (*.f64 -1 (sqrt.f64 l)) (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))))) (+.f64 (sqrt.f64 l) (*.f64 (pow.f64 w 2) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) (*.f64 1/2 (sqrt.f64 l)))))))","(+.f64 (*.f64 w (+.f64 (*.f64 -1 (sqrt.f64 l)) (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))))) (+.f64 (*.f64 (pow.f64 w 3) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2)))) (+.f64 (*.f64 -1/6 (sqrt.f64 l)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (*.f64 1/2 (*.f64 (log.f64 l) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2))))))) (*.f64 1/4 (*.f64 (sqrt.f64 l) (log.f64 l))))))) (+.f64 (sqrt.f64 l) (*.f64 (pow.f64 w 2) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) (*.f64 1/2 (sqrt.f64 l))))))))","(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (*.f64 -1 w)))","(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (*.f64 -1 w)))","(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (*.f64 -1 w)))","(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (*.f64 -1 w)))","(sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))))","(sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))))","(sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))))","(sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))))","(sqrt.f64 l)","(+.f64 (sqrt.f64 l) (*.f64 1/2 (*.f64 (sqrt.f64 l) (*.f64 w (log.f64 l)))))","(+.f64 (sqrt.f64 l) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (*.f64 w (log.f64 l)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 (pow.f64 w 2) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2)))))))","(+.f64 (sqrt.f64 l) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (*.f64 w (log.f64 l)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 (pow.f64 w 2) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (*.f64 1/2 (*.f64 (log.f64 l) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2))))) (pow.f64 w 3)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","l","(+.f64 l (*.f64 (+.f64 (*.f64 -1 l) (*.f64 l (log.f64 l))) w))","(+.f64 l (*.f64 w (fma.f64 -1 l (*.f64 l (log.f64 l)))))","(fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) l)","(fma.f64 w (fma.f64 l (log.f64 l) (neg.f64 l)) l)","(+.f64 l (+.f64 (*.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 (*.f64 1/2 l) (*.f64 -1 (*.f64 l (log.f64 l))))) (pow.f64 w 2)) (*.f64 (+.f64 (*.f64 -1 l) (*.f64 l (log.f64 l))) w)))","(+.f64 l (fma.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) (fma.f64 1/2 l (*.f64 (neg.f64 l) (log.f64 l)))) (*.f64 w w) (*.f64 w (fma.f64 -1 l (*.f64 l (log.f64 l))))))","(+.f64 (fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) l) (*.f64 w (*.f64 w (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (*.f64 (+.f64 (log.f64 l) 1) (log.f64 l))) 1/2)) (*.f64 l (log.f64 l))))))","(+.f64 l (*.f64 w (+.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) (*.f64 w (*.f64 l (-.f64 (+.f64 1/2 (*.f64 (*.f64 1/2 (+.f64 (log.f64 l) 1)) (log.f64 l))) (log.f64 l)))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 l (log.f64 l))) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 -1 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2))))) (*.f64 -1/6 l)))) (pow.f64 w 3)) (+.f64 l (+.f64 (*.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 (*.f64 1/2 l) (*.f64 -1 (*.f64 l (log.f64 l))))) (pow.f64 w 2)) (*.f64 (+.f64 (*.f64 -1 l) (*.f64 l (log.f64 l))) w))))","(fma.f64 (fma.f64 1/2 (*.f64 l (log.f64 l)) (fma.f64 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/6 (log.f64 l) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l (fma.f64 -1 (*.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)))) (*.f64 l -1/6)))) (pow.f64 w 3) (+.f64 l (fma.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) (fma.f64 1/2 l (*.f64 (neg.f64 l) (log.f64 l)))) (*.f64 w w) (*.f64 w (fma.f64 -1 l (*.f64 l (log.f64 l)))))))","(+.f64 (fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) (*.f64 w (*.f64 w (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (*.f64 (+.f64 (log.f64 l) 1) (log.f64 l))) 1/2)) (*.f64 l (log.f64 l)))))) (fma.f64 (fma.f64 (*.f64 l (log.f64 l)) 1/2 (fma.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/2 (pow.f64 (log.f64 l) 2) (*.f64 (log.f64 l) 1/6))) (-.f64 (*.f64 l -1/6) (*.f64 (*.f64 l 1/2) (*.f64 (+.f64 (log.f64 l) 1) (log.f64 l)))))) (pow.f64 w 3) l))","(+.f64 (*.f64 w (+.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) (*.f64 w (*.f64 l (-.f64 (+.f64 1/2 (*.f64 (*.f64 1/2 (+.f64 (log.f64 l) 1)) (log.f64 l))) (log.f64 l)))))) (fma.f64 (fma.f64 (*.f64 l (log.f64 l)) 1/2 (fma.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (*.f64 (log.f64 l) (+.f64 (*.f64 (log.f64 l) 1/2) 1/6))) (*.f64 l (-.f64 -1/6 (*.f64 (*.f64 1/2 (+.f64 (log.f64 l) 1)) (log.f64 l)))))) (pow.f64 w 3) l))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (pow.f64 l (exp.f64 w)) (exp.f64 (*.f64 -1 w)))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w))))))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w)))) (exp.f64 (neg.f64 w)))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(sqrt.f64 l)","(+.f64 (*.f64 w (+.f64 (*.f64 -1 (sqrt.f64 l)) (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))))) (sqrt.f64 l))","(fma.f64 w (fma.f64 -1 (sqrt.f64 l) (*.f64 (*.f64 1/2 (sqrt.f64 l)) (log.f64 l))) (sqrt.f64 l))","(fma.f64 w (-.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) (sqrt.f64 l)) (sqrt.f64 l))","(fma.f64 w (*.f64 (sqrt.f64 l) (+.f64 -1 (*.f64 (log.f64 l) 1/2))) (sqrt.f64 l))","(+.f64 (*.f64 w (+.f64 (*.f64 -1 (sqrt.f64 l)) (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))))) (+.f64 (sqrt.f64 l) (*.f64 (pow.f64 w 2) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) (*.f64 1/2 (sqrt.f64 l)))))))","(+.f64 (fma.f64 w (fma.f64 -1 (sqrt.f64 l) (*.f64 (*.f64 1/2 (sqrt.f64 l)) (log.f64 l))) (sqrt.f64 l)) (*.f64 (*.f64 w w) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 l)) (log.f64 l)) 2))) (fma.f64 -1/2 (*.f64 (log.f64 l) (sqrt.f64 l)) (*.f64 1/2 (sqrt.f64 l))))))","(fma.f64 w (-.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) (sqrt.f64 l)) (fma.f64 (*.f64 w w) (fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 l))) (-.f64 (*.f64 (*.f64 l 1/2) (*.f64 (+.f64 (log.f64 l) 1) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2)) (fma.f64 1/2 (sqrt.f64 l) (*.f64 (*.f64 (log.f64 l) (sqrt.f64 l)) -1/2))) (sqrt.f64 l)))","(fma.f64 w (*.f64 (sqrt.f64 l) (+.f64 -1 (*.f64 (log.f64 l) 1/2))) (fma.f64 (*.f64 w w) (fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 l))) (-.f64 (*.f64 l (*.f64 (*.f64 1/2 (+.f64 (log.f64 l) 1)) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2)) (*.f64 (sqrt.f64 l) (+.f64 (*.f64 (log.f64 l) -1/2) 1/2))) (sqrt.f64 l)))","(fma.f64 w (*.f64 (sqrt.f64 l) (+.f64 -1 (*.f64 (log.f64 l) 1/2))) (fma.f64 (*.f64 w w) (fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 l))) (*.f64 1/2 (fma.f64 l (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)) (*.f64 (pow.f64 (log.f64 l) 2) (*.f64 l -1/2)))) (*.f64 (sqrt.f64 l) (+.f64 (*.f64 (log.f64 l) -1/2) 1/2))) (sqrt.f64 l)))","(+.f64 (*.f64 w (+.f64 (*.f64 -1 (sqrt.f64 l)) (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))))) (+.f64 (*.f64 (pow.f64 w 3) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2)))) (+.f64 (*.f64 -1/6 (sqrt.f64 l)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (*.f64 1/2 (*.f64 (log.f64 l) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2))))))) (*.f64 1/4 (*.f64 (sqrt.f64 l) (log.f64 l))))))) (+.f64 (sqrt.f64 l) (*.f64 (pow.f64 w 2) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) (*.f64 1/2 (sqrt.f64 l))))))))","(fma.f64 w (fma.f64 -1 (sqrt.f64 l) (*.f64 (*.f64 1/2 (sqrt.f64 l)) (log.f64 l))) (fma.f64 (pow.f64 w 3) (fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 l)) (log.f64 l)) 2))) (fma.f64 -1/6 (sqrt.f64 l) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/6 (log.f64 l) (*.f64 1/2 (pow.f64 (log.f64 l) 2))))) (*.f64 (*.f64 (log.f64 l) 1/2) (-.f64 (*.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 l)) (log.f64 l)) 2))))) (*.f64 (*.f64 (log.f64 l) (sqrt.f64 l)) 1/4)))) (+.f64 (sqrt.f64 l) (*.f64 (*.f64 w w) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 l)) (log.f64 l)) 2))) (fma.f64 -1/2 (*.f64 (log.f64 l) (sqrt.f64 l)) (*.f64 1/2 (sqrt.f64 l))))))))","(fma.f64 w (-.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) (sqrt.f64 l)) (fma.f64 (pow.f64 w 3) (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 (*.f64 l 1/2) (*.f64 (+.f64 (log.f64 l) 1) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2))) -1/2 (fma.f64 -1/6 (sqrt.f64 l) (fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 l))) (fma.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/2 (pow.f64 (log.f64 l) 2) (*.f64 (log.f64 l) 1/6))) (*.f64 (*.f64 -1/2 (log.f64 l)) (-.f64 (*.f64 (*.f64 l 1/2) (*.f64 (+.f64 (log.f64 l) 1) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2)))) (*.f64 (log.f64 l) (*.f64 (sqrt.f64 l) 1/4))))) (fma.f64 (*.f64 w w) (fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 l))) (-.f64 (*.f64 (*.f64 l 1/2) (*.f64 (+.f64 (log.f64 l) 1) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2)) (fma.f64 1/2 (sqrt.f64 l) (*.f64 (*.f64 (log.f64 l) (sqrt.f64 l)) -1/2))) (sqrt.f64 l))))","(fma.f64 w (*.f64 (sqrt.f64 l) (+.f64 -1 (*.f64 (log.f64 l) 1/2))) (fma.f64 (pow.f64 w 3) (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (*.f64 (*.f64 1/2 (+.f64 (log.f64 l) 1)) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2))) -1/2 (+.f64 (*.f64 (fma.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (*.f64 (log.f64 l) (+.f64 (*.f64 (log.f64 l) 1/2) 1/6))) (*.f64 (-.f64 (*.f64 l (*.f64 (*.f64 1/2 (+.f64 (log.f64 l) 1)) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2)) (*.f64 (log.f64 l) -1/2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 l)))) (*.f64 (sqrt.f64 l) (+.f64 -1/6 (*.f64 (log.f64 l) 1/4))))) (fma.f64 (*.f64 w w) (fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 l))) (-.f64 (*.f64 l (*.f64 (*.f64 1/2 (+.f64 (log.f64 l) 1)) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2)) (*.f64 (sqrt.f64 l) (+.f64 (*.f64 (log.f64 l) -1/2) 1/2))) (sqrt.f64 l))))","(fma.f64 w (*.f64 (sqrt.f64 l) (+.f64 -1 (*.f64 (log.f64 l) 1/2))) (fma.f64 (pow.f64 w 3) (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 1/2 (fma.f64 l (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)) (*.f64 (pow.f64 (log.f64 l) 2) (*.f64 l -1/2))))) -1/2 (+.f64 (*.f64 (fma.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (*.f64 (log.f64 l) (+.f64 (*.f64 (log.f64 l) 1/2) 1/6))) (*.f64 (*.f64 (log.f64 l) 1/2) (fma.f64 l (*.f64 (pow.f64 (log.f64 l) 2) 1/4) (*.f64 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)) (*.f64 l -1/2))))) (*.f64 1/2 (sqrt.f64 (/.f64 1 l)))) (*.f64 (sqrt.f64 l) (+.f64 -1/6 (*.f64 (log.f64 l) 1/4))))) (fma.f64 (*.f64 w w) (fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 l))) (*.f64 1/2 (fma.f64 l (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)) (*.f64 (pow.f64 (log.f64 l) 2) (*.f64 l -1/2)))) (*.f64 (sqrt.f64 l) (+.f64 (*.f64 (log.f64 l) -1/2) 1/2))) (sqrt.f64 l))))","(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (*.f64 -1 w)))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (*.f64 -1 w)))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (*.f64 -1 w)))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (*.f64 -1 w)))","(*.f64 (exp.f64 (neg.f64 w)) (sqrt.f64 (pow.f64 l (exp.f64 w))))","(/.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 w))","(sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(sqrt.f64 (pow.f64 l (exp.f64 w)))","(sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(sqrt.f64 (pow.f64 l (exp.f64 w)))","(sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(sqrt.f64 (pow.f64 l (exp.f64 w)))","(sqrt.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))))","(sqrt.f64 (pow.f64 l (exp.f64 w)))","(sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(sqrt.f64 (pow.f64 l (exp.f64 w)))","(sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(sqrt.f64 (pow.f64 l (exp.f64 w)))","(sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(sqrt.f64 (pow.f64 l (exp.f64 w)))","(sqrt.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))))","(sqrt.f64 (pow.f64 l (exp.f64 w)))","(sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))))","(sqrt.f64 (pow.f64 l (exp.f64 w)))","(sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))))","(sqrt.f64 (pow.f64 l (exp.f64 w)))","(sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))))","(sqrt.f64 (pow.f64 l (exp.f64 w)))","(sqrt.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))))","(sqrt.f64 (pow.f64 l (exp.f64 w)))","(sqrt.f64 l)","(+.f64 (sqrt.f64 l) (*.f64 1/2 (*.f64 (sqrt.f64 l) (*.f64 w (log.f64 l)))))","(+.f64 (sqrt.f64 l) (*.f64 (*.f64 1/2 (sqrt.f64 l)) (*.f64 w (log.f64 l))))","(fma.f64 1/2 (*.f64 w (*.f64 (log.f64 l) (sqrt.f64 l))) (sqrt.f64 l))","(*.f64 (+.f64 (*.f64 (log.f64 l) (*.f64 w 1/2)) 1) (sqrt.f64 l))","(+.f64 (sqrt.f64 l) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (*.f64 w (log.f64 l)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 (pow.f64 w 2) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2)))))))","(+.f64 (sqrt.f64 l) (*.f64 1/2 (+.f64 (*.f64 (sqrt.f64 l) (*.f64 w (log.f64 l))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 w w)) (-.f64 (*.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 l)) (log.f64 l)) 2))))))","(fma.f64 1/2 (fma.f64 (sqrt.f64 l) (*.f64 w (log.f64 l)) (*.f64 (-.f64 (*.f64 (*.f64 l 1/2) (*.f64 (+.f64 (log.f64 l) 1) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2)) (*.f64 (*.f64 w w) (sqrt.f64 (/.f64 1 l))))) (sqrt.f64 l))","(fma.f64 1/2 (fma.f64 (sqrt.f64 l) (*.f64 w (log.f64 l)) (*.f64 (*.f64 w w) (*.f64 (sqrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (*.f64 (*.f64 1/2 (+.f64 (log.f64 l) 1)) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2))))) (sqrt.f64 l))","(fma.f64 1/2 (fma.f64 (sqrt.f64 l) (*.f64 w (log.f64 l)) (*.f64 (*.f64 w w) (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 1/2 (fma.f64 l (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)) (*.f64 (pow.f64 (log.f64 l) 2) (*.f64 l -1/2))))))) (sqrt.f64 l))","(+.f64 (sqrt.f64 l) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (*.f64 w (log.f64 l)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 (pow.f64 w 2) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (*.f64 1/2 (*.f64 (log.f64 l) (-.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 l) (log.f64 l))) 2))))) (pow.f64 w 3)))))))","(+.f64 (sqrt.f64 l) (fma.f64 1/2 (*.f64 (sqrt.f64 l) (*.f64 w (log.f64 l))) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 w w)) (-.f64 (*.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 l)) (log.f64 l)) 2))) (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 (pow.f64 w 3) (-.f64 (*.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/6 (log.f64 l) (*.f64 1/2 (pow.f64 (log.f64 l) 2))))) (*.f64 (*.f64 (log.f64 l) 1/2) (-.f64 (*.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (sqrt.f64 l)) (log.f64 l)) 2))))))))))","(+.f64 (sqrt.f64 l) (*.f64 1/2 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 l)) (+.f64 (*.f64 w (*.f64 w (-.f64 (*.f64 (*.f64 l 1/2) (*.f64 (+.f64 (log.f64 l) 1) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2)))) (*.f64 (pow.f64 w 3) (fma.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/2 (pow.f64 (log.f64 l) 2) (*.f64 (log.f64 l) 1/6))) (*.f64 (*.f64 -1/2 (log.f64 l)) (-.f64 (*.f64 (*.f64 l 1/2) (*.f64 (+.f64 (log.f64 l) 1) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2))))))) (*.f64 w (*.f64 (log.f64 l) (sqrt.f64 l))))))","(+.f64 (sqrt.f64 l) (*.f64 1/2 (+.f64 (*.f64 (log.f64 l) (*.f64 w (sqrt.f64 l))) (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 (*.f64 w w) (+.f64 (-.f64 (*.f64 l (*.f64 (*.f64 1/2 (+.f64 (log.f64 l) 1)) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2)) (*.f64 w (fma.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (*.f64 (log.f64 l) (+.f64 (*.f64 (log.f64 l) 1/2) 1/6))) (*.f64 (-.f64 (*.f64 l (*.f64 (*.f64 1/2 (+.f64 (log.f64 l) 1)) (log.f64 l))) (pow.f64 (*.f64 (log.f64 l) (*.f64 1/2 (sqrt.f64 l))) 2)) (*.f64 (log.f64 l) -1/2))))))))))","(+.f64 (sqrt.f64 l) (*.f64 1/2 (+.f64 (*.f64 (log.f64 l) (*.f64 w (sqrt.f64 l))) (*.f64 (sqrt.f64 (/.f64 1 l)) (*.f64 (*.f64 w w) (+.f64 (*.f64 1/2 (fma.f64 l (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)) (*.f64 (pow.f64 (log.f64 l) 2) (*.f64 l -1/2)))) (*.f64 w (fma.f64 l (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (*.f64 (log.f64 l) (+.f64 (*.f64 (log.f64 l) 1/2) 1/6))) (*.f64 (*.f64 (log.f64 l) 1/2) (fma.f64 l (*.f64 (pow.f64 (log.f64 l) 2) 1/4) (*.f64 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2)) (*.f64 l -1/2))))))))))))"]],"stop":[["node limit",1]],"time":51.64404296875,"type":"simplify"},{"compiler":[[4330,1588]],"time":34.27294921875,"type":"eval"},{"alts":[["(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (pow.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 3/2) 1/3) (exp.f64 (neg.f64 w))))","fresh",18.159184866522967],["(*.f64 (exp.f64 (neg.f64 w)) (fma.f64 l (*.f64 (*.f64 (log.f64 l) (+.f64 1/6 (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/6))))) (pow.f64 w 3)) (fma.f64 l (*.f64 (log.f64 l) (+.f64 w (*.f64 (*.f64 w (*.f64 w 1/2)) (+.f64 (log.f64 l) 1)))) l)))","fresh",7.941962186779579],["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))","next",0.7373256669688241]],"compiler":[[20,13],[44,27],[21,9],[20,13],[44,27],[21,9]],"count":[[178,3]],"kept":[{"done":[0,0],"fresh":[3,2],"new":[174,1],"picked":[1,0]}],"min-error":[0.06296207903526169],"time":40.05615234375,"type":"prune"},{"compiler":[[55,12]],"locations":[["(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))",0.0546875,true],["(pow.f64 l (exp.f64 w))",0.18276359155206073,false],["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))",0.25390625,true],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)",0.375,true]],"time":8.635009765625,"type":"localize"},{"count":[[3,72]],"series":[["(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","w","-inf",0.156005859375],["(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","w","inf",0.20703125],["(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","w","0",0.679931640625],["(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","l","-inf",0.2099609375],["(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","l","inf",0.212890625],["(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","l","0",0.175048828125],["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))","w","-inf",0.423095703125],["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))","w","inf",0.428955078125],["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))","w","0",0.3291015625],["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))","l","-inf",0.43896484375],["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))","l","inf",0.45703125],["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))","l","0",0.4541015625],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)","w","-inf",1.31103515625],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)","w","inf",1.366943359375],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)","w","0",2.68408203125],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)","l","-inf",1.402099609375],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)","l","inf",1.33984375],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)","l","0",1.580078125]],"time":14.21484375,"type":"series"},{"count":[[3,74]],"egraph":[[2,2253,40,0.020378709],[1,208,40,0.003240001],[0,10,40,0.000263334]],"inputs":[["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)","(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/6) (sqrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) 2)) (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) 2) (pow.f64 (cbrt.f64 (exp.f64 w)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) (cbrt.f64 (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (cbrt.f64 (pow.f64 l (exp.f64 w)))) (cbrt.f64 (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (*.f64 (-.f64 (*.f64 (exp.f64 w) (log.f64 l)) w) 1/3)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (exp.f64 w) (pow.f64 l (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (exp.f64 w) (pow.f64 l (exp.f64 w))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) 2) (/.f64 (exp.f64 w) (cbrt.f64 (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 l (exp.f64 w))) (neg.f64 (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (/.f64 (exp.f64 w) (sqrt.f64 (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (exp.f64 w) (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (pow.f64 l (exp.f64 w)))) (neg.f64 (neg.f64 (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 l (exp.f64 w)) (sqrt.f64 (exp.f64 w))) (sqrt.f64 (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 l (exp.f64 w)) 1) (exp.f64 w))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 l (exp.f64 w)) (pow.f64 (cbrt.f64 (exp.f64 w)) 2)) (cbrt.f64 (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)) (cbrt.f64 (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2) (cbrt.f64 (pow.f64 l (exp.f64 w)))) (cbrt.f64 (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (exp.f64 w) (pow.f64 l (exp.f64 w))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 l (exp.f64 w)) (neg.f64 (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 3) (pow.f64 (exp.f64 w) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (exp.f64 w) (log.f64 l)) w))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) (cbrt.f64 (exp.f64 (neg.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) (pow.f64 (exp.f64 (neg.f64 w)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) (/.f64 1 (cbrt.f64 (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/6) (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 1/3) (pow.f64 (sqrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (/.f64 (exp.f64 w) (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (exp.f64 w)) (cbrt.f64 (pow.f64 l (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 l (exp.f64 w))) (cbrt.f64 (exp.f64 w)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 l (exp.f64 w)))) (cbrt.f64 (neg.f64 (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 l (exp.f64 w)))) (neg.f64 (cbrt.f64 (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (*.f64 (exp.f64 w) (log.f64 l)) w) 1/3))))))"]],"rules":[["egg-rr",28],["egg-rr",27],["egg-rr",19]],"stop":[["node limit",1]],"time":45.18017578125,"type":"rewrite"},{"count":[[146,112]],"egraph":[[2,1920,2312,0.016375833],[1,500,2346,0.00393625],[0,160,2397,0.00085175]],"inputs":[["(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (pow.f64 l 2) 1/3)","(+.f64 (pow.f64 (pow.f64 l 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 l) 1/9) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))))","(+.f64 (pow.f64 (pow.f64 l 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 l) 1/9) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))) (*.f64 (pow.f64 w 2) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 l) 1/3) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))))","(+.f64 (pow.f64 (pow.f64 l 2) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 8)) 1/9) (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2))))))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 l) 1/3) (-.f64 (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (*.f64 1/2 l))) (+.f64 (*.f64 1/6 l) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/9) (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2))))))))) (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 l (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/3) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 3))) (*.f64 1/2 (-.f64 (*.f64 l (log.f64 l)) l))))))))))) (pow.f64 w 3)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 l) 1/9) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))) (*.f64 (pow.f64 w 2) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 l) 1/3) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2))))))))","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","l","(+.f64 l (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (*.f64 1/2 l))) (pow.f64 w 2)) (+.f64 l (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l))))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (*.f64 1/2 l))) (pow.f64 w 2)) (+.f64 l (+.f64 (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)) (*.f64 (-.f64 (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (*.f64 1/2 l))) (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 l (+.f64 (*.f64 1/6 l) (*.f64 1/2 (-.f64 (*.f64 l (log.f64 l)) l)))))) (pow.f64 w 3)))))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w)) 1/3)","(pow.f64 l 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/9) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))) (pow.f64 l 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/9) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))) (+.f64 (pow.f64 l 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/3) (*.f64 (pow.f64 w 2) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/9) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))) (+.f64 (pow.f64 l 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/3) (*.f64 (pow.f64 w 2) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2))))))))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (*.f64 1/2 l))) (+.f64 (*.f64 1/6 l) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/9) (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2))))))))) (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 l (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/3) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 3))) (*.f64 1/2 (-.f64 (*.f64 l (log.f64 l)) l)))))))) (pow.f64 w 3)) (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/3))))))","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 l))))) (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 (exp.f64 w)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 l)))) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 l) -1)) (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 l))))) (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 (exp.f64 w)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 l)))) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 l) -1)) (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 l))))) (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 (exp.f64 w)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 l)))) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 l) -1)) (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 l))))) (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 (exp.f64 w)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 l)))) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 l) -1)) (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (pow.f64 l 2) 1/3)","(cbrt.f64 (*.f64 l l))","(+.f64 (pow.f64 (pow.f64 l 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 l) 1/9) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))))","(+.f64 (cbrt.f64 (*.f64 l l)) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 l 1/18) (pow.f64 l 1/18)) (*.f64 w (fma.f64 l (log.f64 l) (neg.f64 l))))))","(fma.f64 2/3 (*.f64 (*.f64 l (-.f64 (log.f64 l) 1)) (*.f64 (pow.f64 l 1/18) (*.f64 (pow.f64 l 1/18) w))) (cbrt.f64 (*.f64 l l)))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 l 1/18) (pow.f64 l 1/18)) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l))) (cbrt.f64 (*.f64 l l)))","(+.f64 (pow.f64 (pow.f64 l 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 l) 1/9) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))) (*.f64 (pow.f64 w 2) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 l) 1/3) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))))","(+.f64 (cbrt.f64 (*.f64 l l)) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 l 1/18) (pow.f64 l 1/18)) (*.f64 w (fma.f64 l (log.f64 l) (neg.f64 l)))) (*.f64 (*.f64 w w) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 l)) (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 1/2 l (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 2))))))) (*.f64 1/9 (*.f64 (pow.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/18))))))))","(+.f64 (cbrt.f64 (*.f64 l l)) (fma.f64 (*.f64 w w) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 l)) (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 (pow.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)))))))) (*.f64 (pow.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 2) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/18))))) (*.f64 2/3 (*.f64 (*.f64 l (-.f64 (log.f64 l) 1)) (*.f64 (pow.f64 l 1/18) (*.f64 (pow.f64 l 1/18) w))))))","(+.f64 (cbrt.f64 (*.f64 l l)) (*.f64 w (+.f64 (*.f64 (*.f64 2/3 (*.f64 (pow.f64 l 1/18) (pow.f64 l 1/18))) (-.f64 (*.f64 l (log.f64 l)) l)) (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 l)) (-.f64 (fma.f64 l (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2))))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/18))))) w))))","(+.f64 (pow.f64 (pow.f64 l 2) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 8)) 1/9) (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2))))))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 l) 1/3) (-.f64 (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (*.f64 1/2 l))) (+.f64 (*.f64 1/6 l) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/9) (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2))))))))) (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 l (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/3) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 3))) (*.f64 1/2 (-.f64 (*.f64 l (log.f64 l)) l))))))))))) (pow.f64 w 3)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 l) 1/9) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))) (*.f64 (pow.f64 w 2) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 l) 1/3) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2))))))))","(+.f64 (cbrt.f64 (*.f64 l l)) (fma.f64 (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 8)) 1/18)) (*.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 1/2 l (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 2)))))))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 l)) (-.f64 (fma.f64 l (log.f64 l) (*.f64 l (+.f64 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/6 (log.f64 l) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) 1/2))) (fma.f64 1/6 l (fma.f64 2/3 (*.f64 (*.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 1/2 l (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 2))))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/18))) (+.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 l l))) (pow.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 3)) (*.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 1/2))))))))) (pow.f64 w 3) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 l 1/18) (pow.f64 l 1/18)) (*.f64 w (fma.f64 l (log.f64 l) (neg.f64 l)))) (*.f64 (*.f64 w w) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 l)) (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 1/2 l (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 2))))))) (*.f64 1/9 (*.f64 (pow.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/18)))))))))","(+.f64 (cbrt.f64 (*.f64 l l)) (fma.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 l)) (-.f64 (*.f64 l (+.f64 (log.f64 l) (+.f64 1/2 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/2 (pow.f64 (log.f64 l) 2) (*.f64 (log.f64 l) 1/6)))))) (fma.f64 l 1/6 (fma.f64 2/3 (*.f64 (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 (pow.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18))))))) (*.f64 (*.f64 l (-.f64 (log.f64 l) 1)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/18)))) (+.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 1/2 (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 l l))) (pow.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 3))))))))) (*.f64 2/9 (*.f64 (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 (pow.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18))))))) (*.f64 (*.f64 l (-.f64 (log.f64 l) 1)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 8)) 1/18)))))) (pow.f64 w 3) (fma.f64 (*.f64 w w) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 l)) (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 (pow.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)))))))) (*.f64 (pow.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 2) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/18))))) (*.f64 2/3 (*.f64 (*.f64 l (-.f64 (log.f64 l) 1)) (*.f64 (pow.f64 l 1/18) (*.f64 (pow.f64 l 1/18) w)))))))","(+.f64 (cbrt.f64 (*.f64 l l)) (fma.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 l)) (-.f64 (+.f64 (*.f64 l (+.f64 (log.f64 l) (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (*.f64 (log.f64 l) (+.f64 (*.f64 (log.f64 l) 1/2) 1/6))))) (*.f64 l 1/3)) (fma.f64 2/3 (*.f64 (-.f64 (fma.f64 l (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))) (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/18)))) (+.f64 (fma.f64 l (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))) l) (fma.f64 (-.f64 (*.f64 l (log.f64 l)) l) 1/2 (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 l l))) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 3)))))))) (*.f64 2/9 (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) (*.f64 (-.f64 (fma.f64 l (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 8)) 1/18)))))) (pow.f64 w 3) (*.f64 w (+.f64 (*.f64 (*.f64 2/3 (*.f64 (pow.f64 l 1/18) (pow.f64 l 1/18))) (-.f64 (*.f64 l (log.f64 l)) l)) (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 l)) (-.f64 (fma.f64 l (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2))))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 4)) 1/18))))) w)))))","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)))","(cbrt.f64 (/.f64 (pow.f64 l (*.f64 2 (exp.f64 w))) (pow.f64 (exp.f64 w) 2)))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(exp.f64 (-.f64 (*.f64 (exp.f64 w) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 l))))) w))","(exp.f64 (fma.f64 (exp.f64 w) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 l))) (neg.f64 w)))","(/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 l) -1)) (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(exp.f64 (-.f64 (*.f64 (exp.f64 w) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 l))))) w))","(exp.f64 (fma.f64 (exp.f64 w) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 l))) (neg.f64 w)))","(/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 l) -1)) (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(exp.f64 (-.f64 (*.f64 (exp.f64 w) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 l))))) w))","(exp.f64 (fma.f64 (exp.f64 w) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 l))) (neg.f64 w)))","(/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 l) -1)) (exp.f64 w)) (exp.f64 w))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w))","(exp.f64 (-.f64 (*.f64 (exp.f64 w) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 l))))) w))","(exp.f64 (fma.f64 (exp.f64 w) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 l))) (neg.f64 w)))","(/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 l) -1)) (exp.f64 w)) (exp.f64 w))","l","(+.f64 l (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))","(+.f64 l (*.f64 w (fma.f64 l (log.f64 l) (neg.f64 l))))","(fma.f64 w (*.f64 l (-.f64 (log.f64 l) 1)) l)","(fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) l)","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (*.f64 1/2 l))) (pow.f64 w 2)) (+.f64 l (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l))))","(fma.f64 (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (*.f64 l 1/2))) (*.f64 w w) (+.f64 l (*.f64 w (fma.f64 l (log.f64 l) (neg.f64 l)))))","(fma.f64 (*.f64 w w) (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (*.f64 l (+.f64 (log.f64 l) 1/2))) (fma.f64 w (*.f64 l (-.f64 (log.f64 l) 1)) l))","(fma.f64 (*.f64 w w) (+.f64 l (*.f64 l (-.f64 (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))) (+.f64 (log.f64 l) 1/2)))) (fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) l))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (*.f64 1/2 l))) (pow.f64 w 2)) (+.f64 l (+.f64 (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)) (*.f64 (-.f64 (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (*.f64 1/2 l))) (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 l (+.f64 (*.f64 1/6 l) (*.f64 1/2 (-.f64 (*.f64 l (log.f64 l)) l)))))) (pow.f64 w 3)))))","(fma.f64 (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (*.f64 l 1/2))) (*.f64 w w) (+.f64 l (fma.f64 w (fma.f64 l (log.f64 l) (neg.f64 l)) (*.f64 (pow.f64 w 3) (-.f64 (fma.f64 l (log.f64 l) (*.f64 l (+.f64 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/6 (log.f64 l) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) 1/2))) (+.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 1/6 l (*.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 1/2))))))))","(+.f64 (fma.f64 (pow.f64 w 3) (-.f64 (*.f64 l (+.f64 (log.f64 l) (+.f64 1/2 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/2 (pow.f64 (log.f64 l) 2) (*.f64 (log.f64 l) 1/6)))))) (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) (+.f64 (*.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 1/2) (*.f64 l 7/6)))) (*.f64 w (*.f64 l (-.f64 (log.f64 l) 1)))) (fma.f64 (*.f64 w w) (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (*.f64 l (+.f64 (log.f64 l) 1/2))) l))","(+.f64 (fma.f64 w (-.f64 (*.f64 l (log.f64 l)) l) l) (*.f64 (*.f64 w w) (+.f64 (*.f64 (+.f64 (-.f64 (*.f64 l (+.f64 (log.f64 l) (+.f64 1/2 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (*.f64 (log.f64 l) (+.f64 (*.f64 (log.f64 l) 1/2) 1/6)))))) (*.f64 l (+.f64 (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))) 7/6))) (*.f64 -1/2 (-.f64 (*.f64 l (log.f64 l)) l))) w) (+.f64 l (*.f64 l (-.f64 (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))) (+.f64 (log.f64 l) 1/2)))))))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 l) (exp.f64 w))) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 l)) (exp.f64 w)))) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w)) 1/3)","(cbrt.f64 (exp.f64 (-.f64 (*.f64 (exp.f64 w) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 l))))) w)))","(cbrt.f64 (exp.f64 (fma.f64 (exp.f64 w) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 l))) (neg.f64 w))))","(cbrt.f64 (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 l) -1)) (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w)) 1/3)","(cbrt.f64 (exp.f64 (-.f64 (*.f64 (exp.f64 w) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 l))))) w)))","(cbrt.f64 (exp.f64 (fma.f64 (exp.f64 w) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 l))) (neg.f64 w))))","(cbrt.f64 (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 l) -1)) (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w)) 1/3)","(cbrt.f64 (exp.f64 (-.f64 (*.f64 (exp.f64 w) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 l))))) w)))","(cbrt.f64 (exp.f64 (fma.f64 (exp.f64 w) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 l))) (neg.f64 w))))","(cbrt.f64 (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 l) -1)) (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 l)))) (exp.f64 w))) (exp.f64 w)) 1/3)","(cbrt.f64 (exp.f64 (-.f64 (*.f64 (exp.f64 w) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 l))))) w)))","(cbrt.f64 (exp.f64 (fma.f64 (exp.f64 w) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 l))) (neg.f64 w))))","(cbrt.f64 (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 l) -1)) (exp.f64 w)) (exp.f64 w)))","(pow.f64 l 1/3)","(cbrt.f64 l)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/9) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))) (pow.f64 l 1/3))","(fma.f64 1/3 (*.f64 (*.f64 w (fma.f64 l (log.f64 l) (neg.f64 l))) (*.f64 (pow.f64 (/.f64 1 (*.f64 l l)) 1/18) (pow.f64 (/.f64 1 (*.f64 l l)) 1/18))) (cbrt.f64 l))","(fma.f64 1/3 (*.f64 (*.f64 l (-.f64 (log.f64 l) 1)) (*.f64 w (*.f64 (pow.f64 (/.f64 1 (*.f64 l l)) 1/18) (pow.f64 (/.f64 1 (*.f64 l l)) 1/18)))) (cbrt.f64 l))","(fma.f64 (*.f64 (*.f64 1/3 (pow.f64 (/.f64 1 (*.f64 l l)) 1/18)) (pow.f64 (/.f64 1 (*.f64 l l)) 1/18)) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)) (cbrt.f64 l))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/9) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))) (+.f64 (pow.f64 l 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/3) (*.f64 (pow.f64 w 2) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))))))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 w (fma.f64 l (log.f64 l) (neg.f64 l))) (*.f64 (pow.f64 (/.f64 1 (*.f64 l l)) 1/18) (pow.f64 (/.f64 1 (*.f64 l l)) 1/18))) (cbrt.f64 l)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 l l))) (*.f64 (*.f64 w w) (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 1/2 l (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 2))))))))))","(fma.f64 1/3 (*.f64 (*.f64 l (-.f64 (log.f64 l) 1)) (*.f64 w (*.f64 (pow.f64 (/.f64 1 (*.f64 l l)) 1/18) (pow.f64 (/.f64 1 (*.f64 l l)) 1/18)))) (fma.f64 1/3 (*.f64 (*.f64 w w) (*.f64 (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 (pow.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18))))))) (cbrt.f64 (/.f64 1 (*.f64 l l))))) (cbrt.f64 l)))","(fma.f64 1/3 (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) (*.f64 (pow.f64 (/.f64 1 (*.f64 l l)) 1/18) (*.f64 (pow.f64 (/.f64 1 (*.f64 l l)) 1/18) w))) (fma.f64 1/3 (*.f64 (-.f64 (fma.f64 l (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))) (*.f64 (*.f64 w w) (cbrt.f64 (/.f64 1 (*.f64 l l))))) (cbrt.f64 l)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/9) (*.f64 w (-.f64 (*.f64 l (log.f64 l)) l)))) (+.f64 (pow.f64 l 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/3) (*.f64 (pow.f64 w 2) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2))))))))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 l) 3)) (+.f64 (*.f64 1/6 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (*.f64 1/2 l))) (+.f64 (*.f64 1/6 l) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/9) (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) (-.f64 (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) l) (+.f64 (*.f64 l (log.f64 l)) (+.f64 (*.f64 1/2 l) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/9) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2))))))))) (+.f64 (*.f64 l (+.f64 (*.f64 1/2 (log.f64 l)) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) (+.f64 l (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/3) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 3))) (*.f64 1/2 (-.f64 (*.f64 l (log.f64 l)) l)))))))) (pow.f64 w 3)) (pow.f64 (/.f64 1 (pow.f64 l 2)) 1/3))))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 w (fma.f64 l (log.f64 l) (neg.f64 l))) (*.f64 (pow.f64 (/.f64 1 (*.f64 l l)) 1/18) (pow.f64 (/.f64 1 (*.f64 l l)) 1/18))) (cbrt.f64 l)) (*.f64 1/3 (+.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 l l))) (*.f64 (*.f64 w w) (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 1/2 l (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 2)))))))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 l l))) (*.f64 (-.f64 (fma.f64 l (log.f64 l) (*.f64 l (+.f64 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/6 (log.f64 l) (*.f64 1/2 (pow.f64 (log.f64 l) 2)))) 1/2))) (fma.f64 1/6 l (fma.f64 2/3 (*.f64 (*.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 1/2 l (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 2))))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/18))) (+.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 l l))) (pow.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 3)) (*.f64 (fma.f64 l (log.f64 l) (neg.f64 l)) 1/2)))))) (pow.f64 w 3))))))","(fma.f64 1/3 (*.f64 (*.f64 l (-.f64 (log.f64 l) 1)) (*.f64 w (*.f64 (pow.f64 (/.f64 1 (*.f64 l l)) 1/18) (pow.f64 (/.f64 1 (*.f64 l l)) 1/18)))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 l l))) (+.f64 (*.f64 w (*.f64 w (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 (pow.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18))))))))) (*.f64 (-.f64 (*.f64 l (+.f64 (log.f64 l) (+.f64 1/2 (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (fma.f64 1/2 (pow.f64 (log.f64 l) 2) (*.f64 (log.f64 l) 1/6)))))) (fma.f64 l 1/6 (fma.f64 2/3 (*.f64 (-.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 (pow.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18))))))) (*.f64 (*.f64 l (-.f64 (log.f64 l) 1)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/18)))) (+.f64 (fma.f64 l (*.f64 1/2 (+.f64 (log.f64 l) (pow.f64 (log.f64 l) 2))) l) (fma.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 1/2 (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 l l))) (pow.f64 (*.f64 l (-.f64 (log.f64 l) 1)) 3)))))))) (pow.f64 w 3)))) (cbrt.f64 l)))","(fma.f64 1/3 (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) (*.f64 (pow.f64 (/.f64 1 (*.f64 l l)) 1/18) (*.f64 (pow.f64 (/.f64 1 (*.f64 l l)) 1/18) w))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 l l))) (*.f64 (*.f64 w w) (+.f64 (-.f64 (fma.f64 l (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))) (*.f64 (-.f64 (+.f64 (*.f64 l (+.f64 (log.f64 l) (fma.f64 1/6 (pow.f64 (log.f64 l) 3) (*.f64 (log.f64 l) (+.f64 (*.f64 (log.f64 l) 1/2) 1/6))))) (*.f64 l 1/3)) (fma.f64 2/3 (*.f64 (-.f64 (fma.f64 l (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))) l) (fma.f64 l (log.f64 l) (fma.f64 l 1/2 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 l) 1/18) (pow.f64 (/.f64 1 l) 1/18)) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 2)))))) (*.f64 (-.f64 (*.f64 l (log.f64 l)) l) (*.f64 (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/18) (pow.f64 (/.f64 1 (pow.f64 l 5)) 1/18)))) (+.f64 (fma.f64 l (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/2))) l) (fma.f64 (-.f64 (*.f64 l (log.f64 l)) l) 1/2 (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 l l))) (pow.f64 (-.f64 (*.f64 l (log.f64 l)) l) 3))))))) w)))) (cbrt.f64 l)))","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))","(pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3)","(cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))"]],"stop":[["node limit",1]],"time":45.578857421875,"type":"simplify"},{"compiler":[[6647,2642]],"time":48.360107421875,"type":"eval"},{"alts":[["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3))","fresh",26.656441925771222],["(*.f64 (exp.f64 (neg.f64 w)) (fma.f64 l (*.f64 (*.f64 (log.f64 l) (+.f64 1/6 (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/6))))) (pow.f64 w 3)) (fma.f64 l (*.f64 (log.f64 l) (+.f64 w (*.f64 (*.f64 w (*.f64 w 1/2)) (+.f64 (log.f64 l) 1)))) l)))","fresh",7.941962186779579],["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) 3) 2))","fresh",1.2993433780911068],["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3) 2))","fresh",5.0050156240319055],["(/.f64 (/.f64 (pow.f64 l (exp.f64 w)) (sqrt.f64 (exp.f64 w))) (sqrt.f64 (exp.f64 w)))","fresh",0.18324652202107966]],"compiler":[[24,14],[44,27],[24,12],[22,11],[14,7]],"count":[[208,5]],"kept":[{"done":[0,0],"fresh":[2,1],"new":[205,4],"picked":[1,0]}],"min-error":[0.043727114214309123],"time":48.116943359375,"type":"prune"},{"accuracy":[0.1823535542098672],"baseline":[0.1823535542098672],"branch":[["w",0.1823535542098672,1],["l",0.1823535542098672,1],["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))",0.1823535542098672,1]],"compiler":[[3,2],[3,2],[10,7],[219,71]],"count":[[13,1]],"inputs":[["(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (/.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 2) (pow.f64 (exp.f64 w) 2)) 1/3))","(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)))) 3) 2))","(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (pow.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w)) 1/3) 2))","(/.f64 (/.f64 (pow.f64 l (exp.f64 w)) (sqrt.f64 (exp.f64 w))) (sqrt.f64 (exp.f64 w)))","(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (pow.f64 (pow.f64 (pow.f64 l (exp.f64 w)) 3/2) 1/3) (exp.f64 (neg.f64 w))))","(*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (exp.f64 (neg.f64 w))))","(*.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))) 2))","(*.f64 (exp.f64 (neg.f64 w)) (*.f64 (sqrt.f64 (pow.f64 l (exp.f64 w))) (sqrt.f64 (pow.f64 l (exp.f64 w)))))","(*.f64 (exp.f64 (neg.f64 w)) (fma.f64 l (*.f64 (*.f64 (log.f64 l) (+.f64 1/6 (*.f64 (log.f64 l) (+.f64 1/2 (*.f64 (log.f64 l) 1/6))))) (pow.f64 w 3)) (fma.f64 l (*.f64 (log.f64 l) (+.f64 w (*.f64 (*.f64 w (*.f64 w 1/2)) (+.f64 (log.f64 l) 1)))) l)))","(*.f64 (exp.f64 (neg.f64 w)) (expm1.f64 (log1p.f64 (pow.f64 l (exp.f64 w)))))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(/.f64 (pow.f64 l (exp.f64 w)) (exp.f64 w))","(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))"]],"link":["."],"name":["exp-w crasher"],"oracle":[34.43258966405344],"outputs":[["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))"]],"time":17.887939453125,"times":[["w",5.11083984375],["l",5.35498046875],["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))",4.525146484375]],"type":"regimes"},{"compiler":[[10,7]],"egraph":[[3,16,13,9.1625e-5],[2,15,13,7.095800000000001e-5],[1,13,13,5.025e-5],[0,8,13,2.8875e-5]],"inputs":[["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (exp.f64 (neg.f64 w)) (pow.f64 l (exp.f64 w)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.37109375,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[10,7]],"remove-preprocessing":[[]],"time":9.213134765625,"type":"end"}]