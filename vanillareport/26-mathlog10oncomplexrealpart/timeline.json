[{"compiler":[[15,11]],"method":["search"],"sampling":[[12,0.9068286198889837,0.09219505602959543,0.0009763240814208984],[11,0.8770725436042994,0.12195113231427968,0.0009763240814208984],[10,0.8175603910349309,0.18146328488364816,0.0009763240814208984],[9,0.7609750656411052,0.23804861027747393,0.0009763240814208984],[8,0.6478044148534536,0.35121926106512547,0.0009763240814208984],[7,0.546341072767973,0.45268260315060616,0.0009763240814208984],[6,0.34341438859701157,0.6556092873215675,0.0009763240814208984],[5,0.18731693923473358,0.8117067366838455,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":41.552001953125,"type":"analyze"},{"outcomes":[["body",256,"valid",510.68994140625,8256]],"time":517.86279296875,"type":"sample"},{"compiler":[[14,10]],"egraph":[[1,2,2,5.167e-6],[0,2,2,4.542e-6],[1,19,22,0.000104917],[0,15,22,5.6667e-5]],"inputs":[["0","1"],["(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 10))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 im im) (*.f64 re re)))) (log.f64 10))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0"],["(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 10))","(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 im im) (*.f64 re re)))) (log.f64 10))","(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort re im)"]],"time":22.998046875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[2,16,11,0.000136876],[1,14,11,9.2292e-5],[0,11,11,4.3667e-5]],"inputs":[["(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 10))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 10))","(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))"]],"stop":[["saturated",1]],"time":10.318115234375,"type":"simplify"},{"compiler":[[21,15]],"time":0.390869140625,"type":"eval"},{"alts":[["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))","next",0.5748825195368841]],"compiler":[[9,7],[9,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.5748825195368841],"time":0.8271484375,"type":"prune"},{"compiler":[[21,10]],"locations":[["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))",0.5748825195368841,true]],"time":6.0869140625,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))","im","-inf",0.47509765625],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))","im","inf",0.807861328125],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))","im","0",0.906005859375],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))","re","-inf",0.47314453125],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))","re","inf",1.08203125],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))","re","0",1.3759765625]],"time":5.24609375,"type":"series"},{"count":[[1,31]],"egraph":[[2,1913,11,0.019379833],[1,160,11,0.002727291],[0,8,11,0.000213833]],"inputs":[["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (hypot.f64 re im)) (/.f64 1 (log.f64 10)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) (pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) 2) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (*.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (/.f64 1 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (*.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (/.f64 1 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (/.f64 1 (log.f64 1/10)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (log.f64 10)) (log.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) 1) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (log.f64 10)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) 1) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (log.f64 10)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (log.f64 10)) 2)) (/.f64 (log.f64 (hypot.f64 re im)) (cbrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (pow.f64 (cbrt.f64 (log.f64 10)) 2)) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (cbrt.f64 (log.f64 10)) 2)) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (cbrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (sqrt.f64 (log.f64 10))) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 10) (log.f64 (hypot.f64 re im))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 1/10)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 10) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))))))"]],"rules":[["egg-rr",31]],"stop":[["node limit",1]],"time":37.781005859375,"type":"rewrite"},{"count":[[55,70]],"egraph":[[4,7328,862,0.030851333],[3,3540,862,0.017165],[2,814,884,0.006313167000000001],[1,273,932,0.0017235],[0,99,948,0.000451]],"inputs":[["(/.f64 (log.f64 im) (log.f64 10))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 10) (pow.f64 im 6)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(/.f64 (log.f64 re) (log.f64 10))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (/.f64 (log.f64 re) (log.f64 10)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (/.f64 (log.f64 re) (log.f64 10))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (log.f64 10) (pow.f64 re 6)))) (/.f64 (log.f64 re) (log.f64 10)))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 10) (pow.f64 im 6)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 10) (pow.f64 im 6)))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (log.f64 im) (log.f64 10))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (/.f64 (*.f64 1/2 (*.f64 re re)) (*.f64 (log.f64 10) (*.f64 im im))))","(fma.f64 1/2 (/.f64 re (/.f64 (*.f64 (log.f64 10) (*.f64 im im)) re)) (/.f64 (log.f64 im) (log.f64 10)))","(fma.f64 1/2 (*.f64 (/.f64 re (*.f64 im (*.f64 im (log.f64 10)))) re) (/.f64 (log.f64 im) (log.f64 10)))","(fma.f64 1/2 (/.f64 (*.f64 (/.f64 (/.f64 re im) im) re) (log.f64 10)) (/.f64 (log.f64 im) (log.f64 10)))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (/.f64 (*.f64 -1/4 (pow.f64 re 4)) (*.f64 (log.f64 10) (pow.f64 im 4)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 re (/.f64 (*.f64 (log.f64 10) (*.f64 im im)) re)) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(fma.f64 1/2 (*.f64 (/.f64 re (*.f64 im (*.f64 im (log.f64 10)))) re) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (log.f64 10)) (/.f64 (log.f64 im) (log.f64 10))))","(+.f64 (*.f64 (/.f64 (*.f64 (/.f64 (/.f64 re im) im) re) (log.f64 10)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (/.f64 (log.f64 im) (log.f64 10)))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 10) (pow.f64 im 6)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (fma.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (log.f64 10)) (pow.f64 im 6)) (/.f64 (*.f64 -1/4 (pow.f64 re 4)) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 re (/.f64 (*.f64 (log.f64 10) (*.f64 im im)) re)) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 (/.f64 1/6 (pow.f64 im 6)) (/.f64 (pow.f64 re 6) (log.f64 10))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (*.f64 (/.f64 re (*.f64 im (*.f64 im (log.f64 10)))) re) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (log.f64 10)) (*.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (pow.f64 im 6)) (log.f64 10))))))","(+.f64 (*.f64 (/.f64 (*.f64 (/.f64 (/.f64 re im) im) re) (log.f64 10)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (fma.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (pow.f64 im 6)) (log.f64 10)) (/.f64 (log.f64 im) (log.f64 10))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))","(neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(/.f64 (log.f64 re) (log.f64 10))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)) (*.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 10)) (*.f64 re re))))","(-.f64 (*.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re)))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (/.f64 (log.f64 re) (log.f64 10)))","(fma.f64 1/2 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (log.f64 10)) (/.f64 (log.f64 re) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 10)) (*.f64 re re)) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (log.f64 10)) (/.f64 (log.f64 re) (log.f64 10))))","(+.f64 (*.f64 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (log.f64 10)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 -1/4 im) im) (*.f64 re re)))) (/.f64 (log.f64 re) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 10)) (*.f64 re re)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 1/720 (*.f64 (/.f64 (pow.f64 im 6) (log.f64 10)) (/.f64 120 (pow.f64 re 6)))))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (log.f64 10)) (fma.f64 1/6 (/.f64 (/.f64 (pow.f64 im 6) (log.f64 10)) (pow.f64 re 6)) (/.f64 (log.f64 re) (log.f64 10)))))","(+.f64 (*.f64 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (log.f64 10)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 -1/4 im) im) (*.f64 re re)))) (fma.f64 1/6 (/.f64 (/.f64 (pow.f64 im 6) (log.f64 10)) (pow.f64 re 6)) (/.f64 (log.f64 re) (log.f64 10))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10))","(/.f64 (-.f64 (log.f64 re) (log.f64 -1)) (log.f64 10))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)) (*.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 10)) (*.f64 re re))))","(-.f64 (*.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re)))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(-.f64 (/.f64 (/.f64 (*.f64 im (*.f64 im 1/2)) (log.f64 10)) (*.f64 re re)) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 10)) (*.f64 re re)) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(-.f64 (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (log.f64 10)) (/.f64 (/.f64 (*.f64 im (*.f64 im 1/2)) (log.f64 10)) (*.f64 re re))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(-.f64 (*.f64 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (log.f64 10)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 -1/4 im) im) (*.f64 re re)))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 10)) (*.f64 re re)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 1/720 (*.f64 (/.f64 (pow.f64 im 6) (log.f64 10)) (/.f64 120 (pow.f64 re 6)))))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(-.f64 (fma.f64 (/.f64 1/2 (log.f64 10)) (*.f64 (/.f64 im re) (/.f64 im re)) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (log.f64 10)) (/.f64 (/.f64 1/6 (/.f64 (pow.f64 re 6) (pow.f64 im 6))) (log.f64 10)))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(+.f64 (*.f64 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (log.f64 10)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 -1/4 im) im) (*.f64 re re)))) (-.f64 (/.f64 (*.f64 (/.f64 (pow.f64 im 6) (pow.f64 re 6)) 1/6) (log.f64 10)) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))","(/.f64 (log.f64 re) (log.f64 10))","(neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (/.f64 (log.f64 re) (log.f64 10)))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)) (*.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 10)) (*.f64 re re))))","(-.f64 (*.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re)))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (/.f64 (log.f64 re) (log.f64 10)))","(fma.f64 1/2 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (log.f64 10)) (/.f64 (log.f64 re) (log.f64 10)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (/.f64 (log.f64 re) (log.f64 10))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 10)) (*.f64 re re)) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (log.f64 10)) (/.f64 (log.f64 re) (log.f64 10))))","(+.f64 (*.f64 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (log.f64 10)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 -1/4 im) im) (*.f64 re re)))) (/.f64 (log.f64 re) (log.f64 10)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (log.f64 10) (pow.f64 re 6)))) (/.f64 (log.f64 re) (log.f64 10)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 10)) (*.f64 re re)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 1/720 (*.f64 (/.f64 (pow.f64 im 6) (log.f64 10)) (/.f64 120 (pow.f64 re 6)))))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (log.f64 10)) (fma.f64 1/6 (/.f64 (/.f64 (pow.f64 im 6) (log.f64 10)) (pow.f64 re 6)) (/.f64 (log.f64 re) (log.f64 10)))))","(+.f64 (*.f64 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (log.f64 10)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 -1/4 im) im) (*.f64 re re)))) (fma.f64 1/6 (/.f64 (/.f64 (pow.f64 im 6) (log.f64 10)) (pow.f64 re 6)) (/.f64 (log.f64 re) (log.f64 10))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))","(/.f64 (log.f64 im) (log.f64 10))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (/.f64 (*.f64 1/2 (*.f64 re re)) (*.f64 (log.f64 10) (*.f64 im im))))","(fma.f64 1/2 (/.f64 re (/.f64 (*.f64 (log.f64 10) (*.f64 im im)) re)) (/.f64 (log.f64 im) (log.f64 10)))","(fma.f64 1/2 (*.f64 (/.f64 re (*.f64 im (*.f64 im (log.f64 10)))) re) (/.f64 (log.f64 im) (log.f64 10)))","(fma.f64 1/2 (/.f64 (*.f64 (/.f64 (/.f64 re im) im) re) (log.f64 10)) (/.f64 (log.f64 im) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (/.f64 (*.f64 -1/4 (pow.f64 re 4)) (*.f64 (log.f64 10) (pow.f64 im 4)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 re (/.f64 (*.f64 (log.f64 10) (*.f64 im im)) re)) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(fma.f64 1/2 (*.f64 (/.f64 re (*.f64 im (*.f64 im (log.f64 10)))) re) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (log.f64 10)) (/.f64 (log.f64 im) (log.f64 10))))","(+.f64 (*.f64 (/.f64 (*.f64 (/.f64 (/.f64 re im) im) re) (log.f64 10)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (/.f64 (log.f64 im) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 10) (pow.f64 im 6)))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (fma.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (log.f64 10)) (pow.f64 im 6)) (/.f64 (*.f64 -1/4 (pow.f64 re 4)) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 re (/.f64 (*.f64 (log.f64 10) (*.f64 im im)) re)) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 (/.f64 1/6 (pow.f64 im 6)) (/.f64 (pow.f64 re 6) (log.f64 10))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (*.f64 (/.f64 re (*.f64 im (*.f64 im (log.f64 10)))) re) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (log.f64 10)) (*.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (pow.f64 im 6)) (log.f64 10))))))","(+.f64 (*.f64 (/.f64 (*.f64 (/.f64 (/.f64 re im) im) re) (log.f64 10)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (fma.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (pow.f64 im 6)) (log.f64 10)) (/.f64 (log.f64 im) (log.f64 10))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10))","(/.f64 (-.f64 (log.f64 im) (log.f64 -1)) (log.f64 10))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)) (/.f64 (*.f64 1/2 (*.f64 re re)) (*.f64 (log.f64 10) (*.f64 im im))))","(-.f64 (*.f64 1/2 (/.f64 re (/.f64 (*.f64 (log.f64 10) (*.f64 im im)) re))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(-.f64 (*.f64 1/2 (*.f64 (/.f64 re (*.f64 im (*.f64 im (log.f64 10)))) re)) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(-.f64 (*.f64 1/2 (/.f64 (*.f64 (/.f64 (/.f64 re im) im) re) (log.f64 10))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (/.f64 (*.f64 -1/4 (pow.f64 re 4)) (*.f64 (log.f64 10) (pow.f64 im 4)))))","(-.f64 (fma.f64 1/2 (/.f64 re (/.f64 (*.f64 (log.f64 10) (*.f64 im im)) re)) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 re (*.f64 im (*.f64 im (log.f64 10)))) re) (*.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (log.f64 10)))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(-.f64 (*.f64 (/.f64 (*.f64 (/.f64 (/.f64 re im) im) re) (log.f64 10)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 10) (pow.f64 im 6)))))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 1/720 (/.f64 (*.f64 (pow.f64 re 6) 120) (*.f64 (log.f64 10) (pow.f64 im 6)))))))","(-.f64 (fma.f64 1/2 (/.f64 re (/.f64 (*.f64 (log.f64 10) (*.f64 im im)) re)) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 1/720 (/.f64 (/.f64 (*.f64 (pow.f64 re 6) 120) (log.f64 10)) (pow.f64 im 6))))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 re (*.f64 im (*.f64 im (log.f64 10)))) re) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (log.f64 10)) (*.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (pow.f64 im 6)) (log.f64 10))))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(-.f64 (fma.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (pow.f64 im 6)) (log.f64 10)) (*.f64 (/.f64 (*.f64 (/.f64 (/.f64 re im) im) re) (log.f64 10)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im))))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))"]],"stop":[["node limit",1]],"time":51.697998046875,"type":"simplify"},{"compiler":[[1463,1034]],"time":16.975830078125,"type":"eval"},{"alts":[["(expm1.f64 (log1p.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))","fresh",15.614576940229806],["(*.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) 1) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (log.f64 10)))","fresh",15.253025146526632],["(neg.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 1/10)))","fresh",0.6276550781475362],["(*.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))","fresh",15.308452783284821],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))","next",0.5254288086106522],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) 1) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (log.f64 10)))","fresh",0.7531778809692391],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))","done",0.5748825195368841],["(pow.f64 (/.f64 (log.f64 10) (log.f64 (hypot.f64 re im))) -1)","fresh",0.5837288574528623],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) 2) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))","fresh",0.7945253907376812]],"compiler":[[11,9],[18,11],[10,8],[19,13],[16,14],[20,13],[9,7],[11,9],[21,15],[11,9],[18,11],[10,8],[19,13],[16,14],[20,13],[11,9],[21,15]],"count":[[71,9]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[70,8],"picked":[1,1]}],"min-error":[0.0078125],"time":12.201171875,"type":"prune"},{"compiler":[[45,30]],"locations":[["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))",0.26953125,true],["(/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))",0.47103500976844204,true]],"time":13.79296875,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))","im","-inf",0.22900390625],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))","im","inf",0.210205078125],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))","im","0",0.2080078125],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))","re","-inf",0.212158203125],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))","re","inf",0.22900390625],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))","re","0",0.205078125],["(/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))","im","-inf",0.3291015625],["(/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))","im","inf",0.427001953125],["(/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))","im","0",0.391845703125],["(/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))","re","-inf",0.429931640625],["(/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))","re","inf",0.5810546875],["(/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))","re","0",0.931884765625]],"time":4.640869140625,"type":"series"},{"count":[[2,117]],"egraph":[[2,2932,24,0.026173290999999998],[1,241,24,0.0041655],[0,12,24,0.0003225]],"inputs":[["(/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))","(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (log.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 (log.f64 10) -1/6) (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (*.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))) (cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (log.f64 10))) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 10) -1/4) (/.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 10) -1/4) (*.f64 (pow.f64 (log.f64 10) -1/4) (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (*.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))) (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (/.f64 1 (neg.f64 (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) 1) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) 1) (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (cbrt.f64 (log.f64 10))) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (cbrt.f64 (log.f64 10))) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (log.f64 10) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (pow.f64 (log.f64 10) 1/4)) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (log.f64 10) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2)) (cbrt.f64 (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (sqrt.f64 (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 (hypot.f64 re im)) (cbrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 (log.f64 10) -1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/4)) (pow.f64 (log.f64 10) -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (log.f64 10)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (log.f64 10)) (log.f64 (hypot.f64 re im))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 10) 3/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (sqrt.f64 (log.f64 10)) (log.f64 (hypot.f64 re im))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (log.f64 10) -1/6) (cbrt.f64 (log.f64 (hypot.f64 re im)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))) 2)) (cbrt.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))))) (sqrt.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (log.f64 (hypot.f64 re im)) (neg.f64 (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (log.f64 10)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 10) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sqrt.f64 (log.f64 10)) (log.f64 (hypot.f64 re im)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 10)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 10))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 10))))) (log.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 10))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) (sqrt.f64 (log.f64 10)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (sqrt.f64 (log.f64 10)) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (sqrt.f64 (log.f64 10)) (/.f64 (sqrt.f64 (log.f64 10)) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (log.f64 10) (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sqrt.f64 (log.f64 10)) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (log.f64 10) -1/2) (/.f64 (sqrt.f64 (log.f64 10)) (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (/.f64 (log.f64 10) (cbrt.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (log.f64 10))) (/.f64 (sqrt.f64 (log.f64 10)) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (/.f64 (log.f64 10) (sqrt.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))) (/.f64 (sqrt.f64 (log.f64 10)) (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 (sqrt.f64 (log.f64 10))) (/.f64 (sqrt.f64 (log.f64 10)) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (/.f64 (sqrt.f64 (log.f64 10)) (log.f64 (hypot.f64 re im))) (neg.f64 (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (log.f64 1/10))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (*.f64 (neg.f64 (sqrt.f64 (log.f64 10))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (*.f64 (sqrt.f64 (log.f64 10)) (neg.f64 (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))) (neg.f64 (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (log.f64 (hypot.f64 re im))) 1) (*.f64 (neg.f64 (sqrt.f64 (log.f64 10))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 (hypot.f64 re im)) -1) (*.f64 (sqrt.f64 (log.f64 10)) (neg.f64 (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (log.f64 (hypot.f64 re im))) -1) (pow.f64 (neg.f64 (sqrt.f64 (log.f64 10))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (log.f64 (hypot.f64 re im)))) (pow.f64 (neg.f64 (sqrt.f64 (log.f64 10))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log.f64 (hypot.f64 re im)) 1) (log.f64 10))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) (pow.f64 (log.f64 10) 1/4)) (pow.f64 (log.f64 10) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (cbrt.f64 (log.f64 10)) 2)) (cbrt.f64 (log.f64 10)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) 1) (sqrt.f64 (log.f64 10)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) (cbrt.f64 (log.f64 10))) (pow.f64 (log.f64 10) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (log.f64 10) -1/2)) (neg.f64 (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))) (neg.f64 (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) -1) (neg.f64 (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (neg.f64 (log.f64 (hypot.f64 re im)))) (neg.f64 (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 10) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) 3) (pow.f64 (log.f64 10) 3/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (sqrt.f64 (log.f64 10)) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (log.f64 10)) (/.f64 (sqrt.f64 (log.f64 10)) (log.f64 (hypot.f64 re im)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 10) (log.f64 (hypot.f64 re im))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (log.f64 10)) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (log.f64 10) -1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)))) 2)) (cbrt.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))) (sqrt.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 10) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) 3) (pow.f64 (log.f64 10) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) 1) 1))))))"]],"rules":[["egg-rr",63],["egg-rr",54]],"stop":[["node limit",1]],"time":50.2509765625,"type":"rewrite"},{"count":[[165,195]],"egraph":[[3,5877,1748,0.024775584000000003],[2,1534,1878,0.011430959000000001],[1,487,2156,0.003229],[0,165,2183,0.000746625]],"inputs":[["(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 6) (pow.f64 im 6)))))))","(*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))))))","(+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 re 6)))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))","(*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))) (+.f64 (*.f64 1/720 (*.f64 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))))))","(+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 6) (pow.f64 re 6)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))","(*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))) (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))) (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))))","(*.f64 -1 (*.f64 (log.f64 (/.f64 -1 im)) (sqrt.f64 (/.f64 1 (log.f64 10)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 im)) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 im)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 im)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (pow.f64 im 6)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))))))","(/.f64 (log.f64 im) (log.f64 10))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 10) (pow.f64 im 6)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(/.f64 (log.f64 re) (log.f64 10))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (/.f64 (log.f64 re) (log.f64 10)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (/.f64 (log.f64 re) (log.f64 10))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (log.f64 10) (pow.f64 re 6)))) (/.f64 (log.f64 re) (log.f64 10)))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 10) (pow.f64 im 6)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 10) (pow.f64 im 6)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im)))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (/.f64 (*.f64 re re) im) im) 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (/.f64 re im) (*.f64 (/.f64 re im) 1/2)) (log.f64 im)))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (/.f64 (*.f64 re re) im) im)) (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) -1/4))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (*.f64 (/.f64 re im) (*.f64 (/.f64 re im) 1/2)))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (log.f64 im)))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 6) (pow.f64 im 6)))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 6) (pow.f64 im 6)))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (/.f64 (*.f64 re re) im) im)) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (*.f64 (*.f64 1/6 (/.f64 (pow.f64 re 6) (pow.f64 im 6))) (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (*.f64 (/.f64 re im) (*.f64 (/.f64 re im) 1/2)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (*.f64 1/6 (pow.f64 re 6)) (pow.f64 im 6)) (log.f64 im))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (+.f64 (/.f64 (*.f64 1/6 (pow.f64 re 6)) (pow.f64 im 6)) (log.f64 im))))","(*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))","(neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 re))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))))","(fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re)))))","(-.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 im (/.f64 (*.f64 re re) im)) 1/2)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 re) (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))))))","(fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))))))","(-.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 im (/.f64 (*.f64 re re) im)) 1/2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2)) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (+.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2)) (log.f64 re))))","(+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 re 6)))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))","(fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6))) (fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))","(fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 6) (/.f64 (pow.f64 re 6) 120))) (-.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 im (/.f64 (*.f64 re re) im)) 1/2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 re) (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 1/6 (/.f64 (pow.f64 im 6) (pow.f64 re 6))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (+.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2)) (log.f64 re)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 1/6 (/.f64 (pow.f64 im 6) (pow.f64 re 6))))))","(*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))","(neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))))","(fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re)))))","(-.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 im (/.f64 (*.f64 re re) im)) 1/2)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (-.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2)) (log.f64 (/.f64 -1 re))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))))))","(fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))))))","(-.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 im (/.f64 (*.f64 re re) im)) 1/2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))","(+.f64 (*.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) -1/4)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (-.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2)) (log.f64 (/.f64 -1 re)))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (-.f64 (*.f64 (*.f64 (/.f64 im (*.f64 re re)) im) (+.f64 1/2 (/.f64 (*.f64 (*.f64 im im) -1/4) (*.f64 re re)))) (log.f64 (/.f64 -1 re))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))) (+.f64 (*.f64 1/720 (*.f64 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))","(-.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 6) (/.f64 (pow.f64 re 6) 120))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 im (/.f64 (*.f64 re re) im)) 1/2)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (-.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2)) (log.f64 (/.f64 -1 re)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 1/6 (/.f64 (pow.f64 im 6) (pow.f64 re 6))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (-.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2)) (log.f64 (/.f64 -1 re))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 1/6 (/.f64 (pow.f64 im 6) (pow.f64 re 6))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re))","(neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 re))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))))","(fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re)))))","(-.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 im (/.f64 (*.f64 re re) im)) 1/2)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 re) (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))))))","(fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))))))","(-.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 im (/.f64 (*.f64 re re) im)) 1/2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2)) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (+.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2)) (log.f64 re))))","(+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 6) (pow.f64 re 6)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))","(fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6))) (fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))","(fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 6) (/.f64 (pow.f64 re 6) 120))) (-.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 im (/.f64 (*.f64 re re) im)) 1/2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 re) (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 1/6 (/.f64 (pow.f64 im 6) (pow.f64 re 6))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (+.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) 1/2)) (log.f64 re)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 1/6 (/.f64 (pow.f64 im 6) (pow.f64 re 6))))))","(*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im)))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (/.f64 (*.f64 re re) im) im) 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (/.f64 re im) (*.f64 (/.f64 re im) 1/2)) (log.f64 im)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))) (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (/.f64 (*.f64 re re) im) im)) (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) -1/4))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (*.f64 (/.f64 re im) (*.f64 (/.f64 re im) 1/2)))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (log.f64 im)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))) (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 6) (pow.f64 im 6)))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (/.f64 (*.f64 re re) im) im)) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (*.f64 (*.f64 1/6 (/.f64 (pow.f64 re 6) (pow.f64 im 6))) (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (*.f64 (/.f64 re im) (*.f64 (/.f64 re im) 1/2)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (*.f64 1/6 (pow.f64 re 6)) (pow.f64 im 6)) (log.f64 im))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (+.f64 (/.f64 (*.f64 1/6 (pow.f64 re 6)) (pow.f64 im 6)) (log.f64 im))))","(*.f64 -1 (*.f64 (log.f64 (/.f64 -1 im)) (sqrt.f64 (/.f64 1 (log.f64 10)))))","(neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 im)) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))","(-.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (/.f64 (*.f64 re re) im) im) 1/2)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (-.f64 (*.f64 (/.f64 re im) (*.f64 (/.f64 re im) 1/2)) (log.f64 (/.f64 -1 im))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 im)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (/.f64 (*.f64 re re) im) im)) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 re im) (/.f64 re im))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (-.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (log.f64 (/.f64 -1 im)))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (-.f64 (*.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (log.f64 (/.f64 -1 im))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 im)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (pow.f64 im 6)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 re 6) 120) (pow.f64 im 6))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (/.f64 (*.f64 re re) im) im)) (-.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (*.f64 (/.f64 (pow.f64 re 6) (/.f64 (pow.f64 im 6) 120)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) 1/720))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (-.f64 (*.f64 (/.f64 re im) (*.f64 (/.f64 re im) 1/2)) (log.f64 (/.f64 -1 im)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (/.f64 (*.f64 1/6 (pow.f64 re 6)) (pow.f64 im 6)))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (-.f64 (/.f64 (*.f64 1/6 (pow.f64 re 6)) (pow.f64 im 6)) (log.f64 (/.f64 -1 im)))))","(/.f64 (log.f64 im) (log.f64 10))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (*.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im)))))","(fma.f64 1/2 (/.f64 (/.f64 (/.f64 (*.f64 re re) im) im) (log.f64 10)) (/.f64 (log.f64 im) (log.f64 10)))","(fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (/.f64 (log.f64 im) (log.f64 10)))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 (/.f64 (/.f64 (*.f64 re re) im) im) (log.f64 10)) (/.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (log.f64 10))) (pow.f64 im 4))))","(+.f64 (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (/.f64 (log.f64 im) (log.f64 10))) (/.f64 -1/4 (/.f64 (pow.f64 im 4) (/.f64 (pow.f64 re 4) (log.f64 10)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (*.f64 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 10) (pow.f64 im 6)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (fma.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 10) (pow.f64 im 6))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))))))","(+.f64 (fma.f64 1/2 (/.f64 (/.f64 (/.f64 (*.f64 re re) im) im) (log.f64 10)) (/.f64 (log.f64 im) (log.f64 10))) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (pow.f64 im 4)) (*.f64 (/.f64 1/6 (pow.f64 im 6)) (/.f64 (pow.f64 re 6) (log.f64 10)))))","(+.f64 (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (/.f64 (log.f64 im) (log.f64 10))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (log.f64 10)) (pow.f64 im 6)))))","(+.f64 (*.f64 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (+.f64 (/.f64 (log.f64 im) (log.f64 10)) (*.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (log.f64 10)) (pow.f64 im 6)))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))","(neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(/.f64 (log.f64 re) (log.f64 10))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 10) (*.f64 re re)))))","(-.f64 (*.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re)))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(fma.f64 1/2 (/.f64 (/.f64 im (/.f64 (log.f64 10) im)) (*.f64 re re)) (/.f64 (log.f64 re) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 10) (*.f64 re re))) (*.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (pow.f64 re 4)))))","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(fma.f64 1/2 (/.f64 (/.f64 im (/.f64 (log.f64 10) im)) (*.f64 re re)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (/.f64 (log.f64 re) (log.f64 10))))","(+.f64 (*.f64 (/.f64 im (/.f64 (log.f64 10) im)) (+.f64 (/.f64 (*.f64 (*.f64 im im) -1/4) (pow.f64 re 4)) (/.f64 1/2 (*.f64 re re)))) (/.f64 (log.f64 re) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 10) (*.f64 re re))) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (pow.f64 re 4)) (*.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 (/.f64 1/720 (log.f64 10)) (/.f64 (pow.f64 im 6) (/.f64 (pow.f64 re 6) 120))))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(fma.f64 1/2 (/.f64 (/.f64 im (/.f64 (log.f64 10) im)) (*.f64 re re)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (fma.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (log.f64 10) (pow.f64 re 6))) (/.f64 (log.f64 re) (log.f64 10)))))","(+.f64 (*.f64 (/.f64 im (/.f64 (log.f64 10) im)) (+.f64 (/.f64 (*.f64 (*.f64 im im) -1/4) (pow.f64 re 4)) (/.f64 1/2 (*.f64 re re)))) (fma.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (log.f64 10) (pow.f64 re 6))) (/.f64 (log.f64 re) (log.f64 10))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 10) (*.f64 re re)))))","(-.f64 (*.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re)))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(-.f64 (*.f64 1/2 (/.f64 (/.f64 im (/.f64 (log.f64 10) im)) (*.f64 re re))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 10) (*.f64 re re))) (*.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (pow.f64 re 4)))))","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 1/2 (/.f64 (/.f64 im (/.f64 (log.f64 10) im)) (*.f64 re re)))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(-.f64 (*.f64 (/.f64 im (/.f64 (log.f64 10) im)) (+.f64 (/.f64 (*.f64 (*.f64 im im) -1/4) (pow.f64 re 4)) (/.f64 1/2 (*.f64 re re)))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 10) (*.f64 re re))) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (pow.f64 re 4)) (*.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 (/.f64 1/720 (log.f64 10)) (/.f64 (pow.f64 im 6) (/.f64 (pow.f64 re 6) 120))))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(-.f64 (fma.f64 1/2 (/.f64 (/.f64 im (/.f64 (log.f64 10) im)) (*.f64 re re)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 (/.f64 1/6 (*.f64 (log.f64 10) (pow.f64 re 6))) (pow.f64 im 6)))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))","(+.f64 (*.f64 (/.f64 im (/.f64 (log.f64 10) im)) (+.f64 (/.f64 (*.f64 (*.f64 im im) -1/4) (pow.f64 re 4)) (/.f64 1/2 (*.f64 re re)))) (-.f64 (*.f64 (/.f64 1/6 (*.f64 (log.f64 10) (pow.f64 re 6))) (pow.f64 im 6)) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))","(/.f64 (log.f64 re) (log.f64 10))","(neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (/.f64 (log.f64 re) (log.f64 10)))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 10) (*.f64 re re)))))","(-.f64 (*.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re)))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(fma.f64 1/2 (/.f64 (/.f64 im (/.f64 (log.f64 10) im)) (*.f64 re re)) (/.f64 (log.f64 re) (log.f64 10)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (/.f64 (log.f64 re) (log.f64 10))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 10) (*.f64 re re))) (*.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (pow.f64 re 4)))))","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(fma.f64 1/2 (/.f64 (/.f64 im (/.f64 (log.f64 10) im)) (*.f64 re re)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (/.f64 (log.f64 re) (log.f64 10))))","(+.f64 (*.f64 (/.f64 im (/.f64 (log.f64 10) im)) (+.f64 (/.f64 (*.f64 (*.f64 im im) -1/4) (pow.f64 re 4)) (/.f64 1/2 (*.f64 re re)))) (/.f64 (log.f64 re) (log.f64 10)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4)))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (log.f64 10) (pow.f64 re 6)))) (/.f64 (log.f64 re) (log.f64 10)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 10) (*.f64 re re))) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (pow.f64 re 4)) (*.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (log.f64 10) (pow.f64 re 6)))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (log.f64 10)) (/.f64 im (*.f64 re re))) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 (/.f64 1/720 (log.f64 10)) (/.f64 (pow.f64 im 6) (/.f64 (pow.f64 re 6) 120))))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))","(fma.f64 1/2 (/.f64 (/.f64 im (/.f64 (log.f64 10) im)) (*.f64 re re)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (fma.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (log.f64 10) (pow.f64 re 6))) (/.f64 (log.f64 re) (log.f64 10)))))","(+.f64 (*.f64 (/.f64 im (/.f64 (log.f64 10) im)) (+.f64 (/.f64 (*.f64 (*.f64 im im) -1/4) (pow.f64 re 4)) (/.f64 1/2 (*.f64 re re)))) (fma.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (log.f64 10) (pow.f64 re 6))) (/.f64 (log.f64 re) (log.f64 10))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))","(/.f64 (log.f64 im) (log.f64 10))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (*.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im)))))","(fma.f64 1/2 (/.f64 (/.f64 (/.f64 (*.f64 re re) im) im) (log.f64 10)) (/.f64 (log.f64 im) (log.f64 10)))","(fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (/.f64 (log.f64 im) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 (/.f64 (/.f64 (*.f64 re re) im) im) (log.f64 10)) (/.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (log.f64 10))) (pow.f64 im 4))))","(+.f64 (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (/.f64 (log.f64 im) (log.f64 10))) (/.f64 -1/4 (/.f64 (pow.f64 im 4) (/.f64 (pow.f64 re 4) (log.f64 10)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (*.f64 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 10) (pow.f64 im 6)))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (fma.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 10) (pow.f64 im 6))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))))))","(+.f64 (fma.f64 1/2 (/.f64 (/.f64 (/.f64 (*.f64 re re) im) im) (log.f64 10)) (/.f64 (log.f64 im) (log.f64 10))) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (pow.f64 im 4)) (*.f64 (/.f64 1/6 (pow.f64 im 6)) (/.f64 (pow.f64 re 6) (log.f64 10)))))","(+.f64 (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (/.f64 (log.f64 im) (log.f64 10))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (log.f64 10)) (pow.f64 im 6)))))","(+.f64 (*.f64 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (+.f64 (/.f64 (log.f64 im) (log.f64 10)) (*.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (log.f64 10)) (pow.f64 im 6)))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)) (*.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im)))))","(-.f64 (*.f64 1/2 (/.f64 (/.f64 (/.f64 (*.f64 re re) im) im) (log.f64 10))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(-.f64 (*.f64 (/.f64 (*.f64 re re) (log.f64 10)) (/.f64 1/2 (*.f64 im im))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))))","(-.f64 (fma.f64 1/2 (/.f64 (/.f64 (/.f64 (*.f64 re re) im) im) (log.f64 10)) (/.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (log.f64 10))) (pow.f64 im 4))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(-.f64 (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (/.f64 -1/4 (/.f64 (pow.f64 im 4) (/.f64 (pow.f64 re 4) (log.f64 10))))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 10) (pow.f64 im 6)))))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))) (/.f64 (*.f64 1/720 (*.f64 (pow.f64 re 6) 120)) (*.f64 (log.f64 10) (pow.f64 im 6))))))","(-.f64 (fma.f64 1/2 (/.f64 (/.f64 (/.f64 (*.f64 re re) im) im) (log.f64 10)) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (pow.f64 im 4)) (/.f64 (*.f64 (*.f64 1/720 (pow.f64 re 6)) 120) (*.f64 (log.f64 10) (pow.f64 im 6))))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(-.f64 (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (log.f64 10)) (pow.f64 im 6))))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))","(+.f64 (*.f64 (/.f64 (/.f64 (*.f64 re re) (log.f64 10)) (*.f64 im im)) (+.f64 1/2 (/.f64 (*.f64 (*.f64 re re) -1/4) (*.f64 im im)))) (-.f64 (*.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (log.f64 10)) (pow.f64 im 6))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))"]],"stop":[["node limit",1]],"time":54.97998046875,"type":"simplify"},{"compiler":[[4477,3410]],"time":53.3251953125,"type":"eval"},{"alts":[["(/.f64 (/.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) (pow.f64 (log.f64 10) 1/4)) (pow.f64 (log.f64 10) 1/4))","fresh",0.4994125976844202],["(/.f64 (pow.f64 (log.f64 10) -1/2) (/.f64 (sqrt.f64 (log.f64 10)) (log.f64 (hypot.f64 re im))))","fresh",0.5459175293053261],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))","done",0.5254288086106522],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))","done",0.5748825195368841],["(neg.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 1/10)))","fresh",0.6276550781475362],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))","next",0.37728500976844204]],"compiler":[[20,18],[15,13],[16,14],[9,7],[10,8],[31,26],[20,18],[15,13],[10,8],[31,26]],"count":[[204,6]],"kept":[{"done":[1,1],"fresh":[7,1],"new":[195,3],"picked":[1,1]}],"min-error":[0],"time":35.031982421875,"type":"prune"},{"compiler":[[127,96]],"locations":[["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))",0.26953125,true],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))",0.33203125,true],["(pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)",0.46875,true],["(pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))",3.8078958669808074,true]],"time":77.16796875,"type":"localize"},{"count":[[4,96]],"series":[["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))","im","-inf",2.73193359375],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))","im","inf",2.073974609375],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))","im","0",1.9111328125],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))","re","-inf",1.619140625],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))","re","inf",1.87890625],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))","re","0",2.133056640625],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))","im","-inf",6.35498046875],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))","im","inf",5.385009765625],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))","im","0",4.7060546875],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))","re","-inf",2.630126953125],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))","re","inf",6.302978515625],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))","re","0",3.885986328125],["(pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)","im","-inf",1.47802734375],["(pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)","im","inf",3.22998046875],["(pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)","im","0",2.587158203125],["(pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)","re","-inf",1.5498046875],["(pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)","re","inf",4.35986328125],["(pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)","re","0",3.405029296875],["(pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))","im","-inf",0.60400390625],["(pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))","im","inf",0.89794921875],["(pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))","im","0",0.85205078125],["(pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))","re","-inf",0.60595703125],["(pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))","re","inf",0.909912109375],["(pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))","re","0",1.18603515625]],"time":65.248046875,"type":"series"},{"count":[[4,193]],"egraph":[[2,4908,64,0.033260541],[1,402,64,0.0076167909999999995],[0,19,64,0.000563083]],"inputs":[["(pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))","(pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)","(+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))","(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (cbrt.f64 (exp.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 4)) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))) (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) (sqrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 (pow.f64 (log.f64 10) -1/2)) (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 re im)) 2) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (cbrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))))) (cbrt.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))) (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) 1/6)) (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))))) (cbrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))))))) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))) (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 4)) (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) 1/6) (*.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) 1/6) (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))))) (cbrt.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (/.f64 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (log.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (cbrt.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 10) -1/2)) (log.f64 (pow.f64 (hypot.f64 re im) (cbrt.f64 (/.f64 1 (log.f64 10))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 10) -1/4) (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 3) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 3)) (/.f64 1 (-.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)) (*.f64 2 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (/.f64 1 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) 1/2) (*.f64 2 (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 (log.f64 10) -1/2) 1/2 (*.f64 (pow.f64 (log.f64 10) -1/2) 1/2)) (log.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 (hypot.f64 re im)) 1) (pow.f64 (log.f64 10) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (*.f64 (pow.f64 (log.f64 10) -1/2) 1/2)) (log.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 (hypot.f64 re im)) (cbrt.f64 (/.f64 1 (log.f64 10)))) (cbrt.f64 (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/4)) (pow.f64 (log.f64 10) -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)) (*.f64 2 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2))) (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 3) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 3) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 3)) (-.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)) (*.f64 2 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 3) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 3)) (+.f64 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2) (-.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (*.f64 2 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 3) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 3))) (neg.f64 (-.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)) (*.f64 2 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (neg.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2) (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2)) (-.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))) (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))) (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))) (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))) (/.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))) (/.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 1)) (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) (+.f64 1 (expm1.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 1)) (+.f64 1 (expm1.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) 2) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (+.f64 1 (expm1.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 1 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 1 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) 2) (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) 2) (cbrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) 2) (*.f64 (cbrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) 2) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (pow.f64 (cbrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) 2) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) 2) (cbrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (*.f64 (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) 2) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (sqrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (-.f64 (sqrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) 2)) (cbrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))) 1) (*.f64 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))))) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2)))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sqrt.f64 (log.f64 10)) (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (/.f64 (sqrt.f64 (log.f64 10)) (cbrt.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (/.f64 (sqrt.f64 (log.f64 10)) (sqrt.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 3) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 3)) (*.f64 (sqrt.f64 (log.f64 10)) (-.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)) (*.f64 2 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (*.f64 (sqrt.f64 (log.f64 10)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (neg.f64 (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 3) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 3)) 1) (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)) (*.f64 2 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) 1) (*.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 3) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 3)) -1) (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)) (*.f64 2 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2))) (neg.f64 (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) -1) (*.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (neg.f64 (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 3) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 3))) (*.f64 (neg.f64 (sqrt.f64 (log.f64 10))) (-.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)) (*.f64 2 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (*.f64 (neg.f64 (sqrt.f64 (log.f64 10))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (pow.f64 (log.f64 10) 1/4)) (pow.f64 (log.f64 10) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))) 3) (pow.f64 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))) 3)) (fma.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))) (-.f64 (*.f64 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10)))) (*.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10)))) (*.f64 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))) (-.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) 1) (sqrt.f64 (log.f64 10)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (cbrt.f64 (log.f64 10))) (cbrt.f64 (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 3) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 3)) (pow.f64 (log.f64 10) -1/2)) (-.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)) (*.f64 2 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (pow.f64 (log.f64 10) -1/2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (neg.f64 (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) -1) (neg.f64 (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 3) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 3))) (-.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) 2) (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2)) (*.f64 2 (pow.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) 2) (log.f64 10)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10)))) (exp.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) 3) (pow.f64 (log.f64 10) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) 3) (pow.f64 (pow.f64 (log.f64 10) -1/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 10) -1/2) 3) (pow.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 10)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log.f64 10) -1/2) (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (pow.f64 (log.f64 10) -1/2) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (pow.f64 (log.f64 10) -1/2) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) 2) (*.f64 (cbrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (pow.f64 (log.f64 10) -1/2)) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 10) -1/2)) (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 10) -1/2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) 2) (*.f64 (cbrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (pow.f64 (log.f64 10) -1/2)) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (*.f64 (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (pow.f64 (log.f64 10) -1/2)) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log.f64 10) -1/4) (*.f64 (pow.f64 (log.f64 10) -1/4) (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log.f64 10) -1/4) (*.f64 (pow.f64 (log.f64 10) -1/4) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (*.f64 (sqrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (pow.f64 (log.f64 10) -1/2)) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))) 1 (*.f64 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10)))) (cbrt.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))) (cbrt.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10)))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10)))) (cbrt.f64 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))) (cbrt.f64 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10)))) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10)))) (sqrt.f64 (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10)))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10)))) (sqrt.f64 (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10)))) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (pow.f64 (log.f64 10) -1/4)) (*.f64 (sqrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (pow.f64 (log.f64 10) -1/4)) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (pow.f64 (log.f64 10) -1/4)) (*.f64 (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (pow.f64 (log.f64 10) -1/4)) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (log.f64 10) -1/4) (sqrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))) (*.f64 (pow.f64 (log.f64 10) -1/4) (sqrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (log.f64 10) -1/4) (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (*.f64 (pow.f64 (log.f64 10) -1/4) (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (cbrt.f64 (/.f64 1 (log.f64 10)))) (cbrt.f64 (pow.f64 (log.f64 10) -1/2)) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (pow.f64 (log.f64 10) -1/4)) (pow.f64 (log.f64 10) -1/4) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (cbrt.f64 (/.f64 1 (log.f64 10)))) (cbrt.f64 (pow.f64 (log.f64 10) -1/2)) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (pow.f64 (log.f64 10) -1/4)) (pow.f64 (log.f64 10) -1/4) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) 2) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (pow.f64 (cbrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) 2)) (cbrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (sqrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))))) (sqrt.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))))) (/.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) 2)) (cbrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))))) (sqrt.f64 (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (/.f64 (*.f64 2/3 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 10))))))))"]],"rules":[["egg-rr",80],["egg-rr",71],["egg-rr",20],["egg-rr",22]],"stop":[["node limit",1]],"time":75.077880859375,"type":"rewrite"},{"count":[[289,383]],"egraph":[[1,3308,29893,0.020385249],[0,925,31303,0.005028833]],"inputs":[["(pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (pow.f64 im 2)))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (pow.f64 im 2)))) (+.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (*.f64 (pow.f64 re 4) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (pow.f64 im 2)))) (+.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (*.f64 (pow.f64 re 4) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 (pow.f64 re 6) (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (pow.f64 re 4))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (pow.f64 re 4)) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)))))) (pow.f64 re 6)))))","(exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (pow.f64 re 4))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (pow.f64 re 6)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (pow.f64 re 4)))))","(pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))","(+.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (pow.f64 im 4))) (+.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(+.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (pow.f64 im 4))) (+.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6))))) (pow.f64 im 6))))))","(exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 2)) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 2)) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 2)) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4)) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (pow.f64 im 6)))))","(exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 2)) (pow.f64 im 2)))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4)) (+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 2)) (pow.f64 im 2))))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4)) (+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (pow.f64 im 6)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 2)) (pow.f64 im 2)))))))","(pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)","(+.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))))","(+.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 re 4))))","(+.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2))))))))) (pow.f64 re 6)) (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 re 4)))))","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)","(+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 re 4)))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)) (pow.f64 re 6))))) (+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 re 6)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 re 4)))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))))))","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)","(+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 re 4)))) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 re 6)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 re 4)))) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)) (pow.f64 re 6))))))))))","(pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)","(+.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))))) (pow.f64 im 4)) (+.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))))) (pow.f64 im 4)) (+.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))) (pow.f64 im 6)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))))))","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 im 4)))) (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))) (pow.f64 im 6)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 im 4)))) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))) (+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)) (pow.f64 im 6))))))))))","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3))","(+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 im 4)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 im 4)))) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))) (pow.f64 im 6)))) (+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)) (pow.f64 im 6))))))))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)))","(+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2))))) (pow.f64 re 2))))","(+.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 re 4)) (+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2))))) (pow.f64 re 2)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2))))))))))) (+.f64 (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6)))) (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))))))) (*.f64 1/720 (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2)))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6)))) (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)))))))))) (pow.f64 re 6)) (+.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 re 4)) (+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2))))) (pow.f64 re 2))))))","(+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)))","(+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 re 4))) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 re 4))))))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 re 4))) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 re 4))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))))))) (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 im 2))))))) (pow.f64 re 6))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))))) (+.f64 (*.f64 -40 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (*.f64 (pow.f64 1 1/3) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (pow.f64 re 6))))))))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 24 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 re 4))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10)))) (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (pow.f64 re 4))) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))))))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 -240 (*.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 im 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 2) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))))) (*.f64 2/3 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3)))))) (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (pow.f64 re 6))) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 24 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 re 4))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 im 2) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))))) (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (pow.f64 re 6))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10)))) (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (pow.f64 re 4))) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))))))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)))","(+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (+.f64 (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2))))) (pow.f64 im 2))))","(+.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))))) (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))))))) (pow.f64 im 4)) (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (+.f64 (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2))))) (pow.f64 im 2)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))))) (pow.f64 re 2))))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))))) (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))))) (*.f64 1/720 (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 2))) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6)))))))) (pow.f64 im 6)) (+.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))))) (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))))))) (pow.f64 im 4)) (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (+.f64 (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2))))) (pow.f64 im 2))))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3)) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))))))))) (pow.f64 im 4))))))))","(+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2))))))))))) (+.f64 (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))) (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10))))))))))))) (pow.f64 im 6))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3)) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 -40 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) (*.f64 (pow.f64 1 1/3) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))) (*.f64 240 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))))))) (pow.f64 im 6))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))))))))) (pow.f64 im 4))))))))))","(+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))))))))) (pow.f64 im 4))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4))) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3)))))))","(+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))))) (+.f64 (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10))))))) (pow.f64 re 2))))) (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))))) (pow.f64 im 6))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))))) (pow.f64 im 6))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))))))))) (pow.f64 im 4))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4))) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3)))))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2))))) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2))))) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 re 4))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3))))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 (pow.f64 im 2) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))))))) (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2)))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))))) (*.f64 1/720 (+.f64 (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6)))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2))))))))))) (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 im 2))))))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2))))) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 re 4))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2)))) (pow.f64 re 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10)))))) (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (pow.f64 re 4))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2)))) (pow.f64 re 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))))) (+.f64 (*.f64 -40 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (*.f64 (pow.f64 1 1/3) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)))))) (*.f64 1/720 (+.f64 (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))))))) (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 im 2))))))))) (pow.f64 re 6))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10)))))) (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (pow.f64 re 4))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2)))) (pow.f64 re 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2)))) (pow.f64 re 2))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10)))) (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))))) (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (pow.f64 re 4)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2)))) (pow.f64 re 2)))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10)))) (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))))) (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (pow.f64 re 4)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 im 2) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))))) (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)))))) (*.f64 1/720 (+.f64 (*.f64 -240 (*.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 im 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 2) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))))) (*.f64 2/3 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3)))))) (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2)))) (pow.f64 re 2))))))","(*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10))))","(+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2))))) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10)))))","(+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))))) (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))))))) (pow.f64 im 4))) (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2))))) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))))) (pow.f64 re 2))))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))))) (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))))) (*.f64 1/720 (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 2))) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6)))))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))))) (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))))))) (pow.f64 im 4))) (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2))))) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10))))","(+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2)))) (pow.f64 im 2))))","(+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10))))))))))) (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10))))))) (pow.f64 im 4)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2)))) (pow.f64 im 2)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 -40 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) (*.f64 (pow.f64 1 1/3) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))) (*.f64 240 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))))))) (*.f64 1/720 (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2))))))))))) (+.f64 (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))) (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10))))))))))))))) (pow.f64 im 6))) (+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10))))))))))) (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10))))))) (pow.f64 im 4)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2)))) (pow.f64 im 2))))))","(*.f64 (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10))))","(+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2)))) (pow.f64 im 2))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))))) (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))))))))))) (pow.f64 im 4))) (+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2)))) (pow.f64 im 2)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (*.f64 1/720 (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))))) (+.f64 (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10))))))) (pow.f64 re 2))))) (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))))))) (pow.f64 im 6))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))))) (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))))))))))) (pow.f64 im 4))) (+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2)))) (pow.f64 im 2))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (pow.f64 im 2)))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 re re) (*.f64 im im)) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (pow.f64 im 2)))) (+.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (*.f64 (pow.f64 re 4) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))))) (fma.f64 (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 4)) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 re re) (*.f64 im im)) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (+.f64 (*.f64 (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 re 4)) 1) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (pow.f64 im 2)))) (+.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (*.f64 (pow.f64 re 4) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 (pow.f64 re 6) (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))))) (fma.f64 (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 4)) (fma.f64 (pow.f64 re 6) (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6))) (*.f64 1/48 (*.f64 (/.f64 1 (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 re 4)) (*.f64 (pow.f64 re 6) (+.f64 (*.f64 (/.f64 1 (pow.f64 im 6)) (+.f64 (*.f64 1/6 (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 re re) (*.f64 im im)) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))))","(exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))","(exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re)))))","(pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re)))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (*.f64 re re) (*.f64 im im))))))","(+.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) re)))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (pow.f64 re 4))))","(+.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (*.f64 re re) (*.f64 im im)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (pow.f64 re 4) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))))))","(+.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) re))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (pow.f64 re 4)) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (pow.f64 re 4)) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)))))) (pow.f64 re 6)))))","(+.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (*.f64 re re) (*.f64 im im)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (pow.f64 re 4) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))))) (/.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (pow.f64 re 6))))","(+.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) re))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (pow.f64 re 4)) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (pow.f64 re 6)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))))))","(exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))","(exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))","(pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (*.f64 re re) (*.f64 im im))))))","(+.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))))))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (pow.f64 re 4))))","(+.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (*.f64 re re) (*.f64 im im)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (pow.f64 re 4) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))))))","(+.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (pow.f64 re 4)) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (pow.f64 re 6)) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (pow.f64 re 4)))))","(+.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (*.f64 re re) (*.f64 im im)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (pow.f64 re 4) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))))) (/.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (/.f64 (pow.f64 re 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))))","(+.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (pow.f64 re 4)) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))))) (*.f64 (/.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 re 6)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))))))","(pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))","(+.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (*.f64 re re) (*.f64 im im))))))","(+.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 re re)) (*.f64 im im)))))","(+.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (pow.f64 im 4))) (+.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (pow.f64 im 4) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (+.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (*.f64 re re) (*.f64 im im)))))))","(+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 im 4) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))))) 1) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 re re)) (*.f64 im im)))))","(+.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (pow.f64 im 4))) (+.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6))))) (pow.f64 im 6))))))","(fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (pow.f64 im 4) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (+.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (*.f64 re re) (*.f64 im im)))) (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (pow.f64 im 6) (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 6)))))))))","(+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 im 4) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))))) 1) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 re re)) (*.f64 im im))) (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (pow.f64 im 6) (+.f64 (*.f64 (/.f64 1 (pow.f64 re 6)) (+.f64 (*.f64 1/6 (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 re 6))))))))","(exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))","(exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))","(pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im)))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 2)) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (*.f64 im im) (*.f64 re re))))))","(+.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) im)))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 2)) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4))))","(+.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (*.f64 im im) (*.f64 re re)))) (/.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4))))","(+.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (pow.f64 im 4)) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))))))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 2)) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4)) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (pow.f64 im 6)))))","(+.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (*.f64 im im) (*.f64 re re)))) (/.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4))) (/.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (pow.f64 im 6))))","(+.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (pow.f64 im 4)) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (pow.f64 im 6)) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))))))","(exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))","(exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))","(pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im)))","(+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 2)) (pow.f64 im 2)))))","(+.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (*.f64 im im) (*.f64 re re))))))","(+.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) im)))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4)) (+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 2)) (pow.f64 im 2))))))","(+.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (pow.f64 im 4) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (*.f64 im im) (*.f64 re re))))))","(+.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) im)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (pow.f64 im 4)) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4)) (+.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (pow.f64 im 6)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 2)) (pow.f64 im 2)))))))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (pow.f64 im 4) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))))) (+.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (*.f64 im im) (*.f64 re re))))) (/.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (pow.f64 im 6)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (pow.f64 im 4)) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (+.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) im)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (pow.f64 im 6)) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))))))","(pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))","(cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))))","(+.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) (*.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))))))","(+.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))))))","(+.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 re 4))))","(+.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im)))) (*.f64 (pow.f64 re 4) (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))))))","(+.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im)))) (*.f64 (pow.f64 re 4) (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))))))))","(+.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2))))))))) (pow.f64 re 6)) (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 re 4)))))","(+.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im)))) (fma.f64 (fma.f64 1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 im im)))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (-.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6))) (*.f64 1/48 (*.f64 (/.f64 1 (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 im im))))))))) (pow.f64 re 6) (*.f64 (pow.f64 re 4) (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))))))))))","(+.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im)))) (fma.f64 (fma.f64 1/9 (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 im im)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (-.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 1 (pow.f64 im 6)) (+.f64 (*.f64 1/6 (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6))) (/.f64 (*.f64 (*.f64 1/3 (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 im im))))))) (pow.f64 re 6) (*.f64 (pow.f64 re 4) (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12)))))))))","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))","(cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))","(+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))))","(+.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2)) (*.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))))))","(+.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2)) (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im)))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 re 4)))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))))","(+.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2)) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re)))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 re 4))) (*.f64 1/36 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2)) (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))))","(+.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2)) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im)))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12)) (pow.f64 re 4))) (*.f64 1/36 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2)) (/.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (pow.f64 re 4)))))))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)) (pow.f64 re 6))))) (+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 re 6)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 re 4)))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))))))","(fma.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (/.f64 (pow.f64 re 6) (*.f64 im im))))) (+.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2)) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (/.f64 (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re)))))))))) (pow.f64 re 6))) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re)))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 re 4))) (*.f64 1/36 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2)) (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))))))))","(fma.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (/.f64 (pow.f64 re 6) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12)))))) (+.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2)) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (-.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12)))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re)))))))) (pow.f64 re 6))) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im)))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12)) (pow.f64 re 4))) (*.f64 1/36 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2)) (/.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (pow.f64 re 4)))))))))","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))","(cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2))","(+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))))","(+.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) (*.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)))))","(+.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2)) (*.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2)))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 re 4)))) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))))))","(+.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (/.f64 (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 re 4))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (*.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)))))))","(+.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2)) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12)) (pow.f64 re 4))) (fma.f64 1/36 (*.f64 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (pow.f64 re 4)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2))) (*.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2)))))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 re 6)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 re 4)))) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)) (pow.f64 re 6))))))))))","(+.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (/.f64 (-.f64 (*.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))))) (pow.f64 re 6))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (/.f64 (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 re 4))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 10) (pow.f64 re 4))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (*.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (/.f64 (pow.f64 re 6) (*.f64 im im)))))))))))","(+.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2)) (+.f64 (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (+.f64 (/.f64 (-.f64 (*.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))))))) (pow.f64 re 6)) (/.f64 (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12)) (pow.f64 re 4)))) (fma.f64 1/36 (*.f64 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (pow.f64 re 4)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2))) (*.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12)) (pow.f64 re 6)) (*.f64 im im)))))))))","(pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))","(cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))))","(+.f64 (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) (*.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)))))","(+.f64 (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))))) (pow.f64 im 4)) (+.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))))))","(fma.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))) (pow.f64 im 4) (+.f64 (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) (*.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))))))","(fma.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))) (pow.f64 im 4) (+.f64 (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10))))))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))))) (pow.f64 im 4)) (+.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))) (pow.f64 im 6)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2))))))))","(fma.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))) (pow.f64 im 4) (+.f64 (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) (fma.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (*.f64 re re))))))) (*.f64 1/9 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (*.f64 re re))))) (pow.f64 im 6) (*.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)))))))","(fma.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))) (pow.f64 im 4) (+.f64 (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 1 (pow.f64 re 6)) (+.f64 (*.f64 1/6 (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 re 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (*.f64 re re))))))) (*.f64 1/9 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (*.f64 re re))))) (pow.f64 im 6) (*.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))))))))","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))","(cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3))","(fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2)))","(fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 im 4)))) (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3))))","(fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (fma.f64 1/36 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2)) (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2)))))","(fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (fma.f64 1/36 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2)) (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))) (pow.f64 im 6)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 im 4)))) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))) (+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)) (pow.f64 im 6))))))))))","(fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (/.f64 (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))) (pow.f64 im 6))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 im 4))) (fma.f64 1/36 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2)) (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))) (+.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2)) (*.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (/.f64 (pow.f64 im 6) (*.f64 re re)))))))))))","(fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (+.f64 (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))) (+.f64 (/.f64 (-.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))) (pow.f64 im 6)) (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 im 4)))) (fma.f64 1/36 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2)) (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4)))) (+.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2)) (*.f64 1/9 (/.f64 (*.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))) (/.f64 (pow.f64 im 6) (*.f64 re re))))))))","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))","(cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3))","(fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)))","(fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2)))","(+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 im 4)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3))))","(fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (/.f64 (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 im 4))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)))))","(fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 im 4))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2)))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 im 4)))) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))) (pow.f64 im 6)))) (+.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)) (pow.f64 im 6))))))))))","(fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (/.f64 (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 im 4))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (/.f64 (-.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))) (pow.f64 im 6))) (+.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) (*.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (/.f64 (pow.f64 im 6) (*.f64 re re)))))))))))","(fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 im 4))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 10) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (-.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im)))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))) (pow.f64 im 6))) (+.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2)) (*.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 im 6)) (*.f64 re re))))))))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)))","(+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (log.f64 (cbrt.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))))","(+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2))))) (pow.f64 re 2))))","(+.f64 (log.f64 (cbrt.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 (*.f64 re re) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (*.f64 im im))) 1/2))))","(+.f64 (*.f64 (*.f64 re re) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) 1/2)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 re 4)) (+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2))))) (pow.f64 re 2)))))","(fma.f64 (*.f64 1/24 (+.f64 (fma.f64 24 (*.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)))) (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) -4/3)) (fma.f64 8 (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) -1/3)))) (pow.f64 re 4) (+.f64 (log.f64 (cbrt.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 (*.f64 re re) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (*.f64 im im))) 1/2)))))","(fma.f64 (*.f64 1/24 (+.f64 (fma.f64 24 (*.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))))) (cbrt.f64 (/.f64 1 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (/.f64 -4/3 (*.f64 (log.f64 10) (pow.f64 im 4)))) (fma.f64 8 (/.f64 (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12)) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 -1/3 (*.f64 (log.f64 10) (pow.f64 im 4)))))) (pow.f64 re 4) (+.f64 (*.f64 (*.f64 re re) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) 1/2)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2))))))))))) (+.f64 (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6)))) (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))))))) (*.f64 1/720 (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2)))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6)))) (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)))))))))) (pow.f64 re 6)) (+.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 re 4)) (+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2))))) (pow.f64 re 2))))))","(fma.f64 (*.f64 1/720 (+.f64 (fma.f64 720 (*.f64 (fma.f64 1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 im im)))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (-.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6))) (*.f64 1/48 (*.f64 (/.f64 1 (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 im im))))))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)))) (fma.f64 80/9 (*.f64 (/.f64 1 (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (*.f64 im im))))))) (fma.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6))) (*.f64 1/48 (*.f64 (/.f64 1 (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 im im)))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (fma.f64 10/9 (*.f64 (/.f64 1 (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 im im))))))))) (pow.f64 re 6) (fma.f64 (*.f64 1/24 (+.f64 (fma.f64 24 (*.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)))) (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) -4/3)) (fma.f64 8 (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) -1/3)))) (pow.f64 re 4) (+.f64 (log.f64 (cbrt.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 (*.f64 re re) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (*.f64 im im))) 1/2))))))","(fma.f64 (*.f64 1/720 (+.f64 (fma.f64 720 (*.f64 (fma.f64 1/9 (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 im im)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (-.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 1 (pow.f64 im 6)) (+.f64 (*.f64 1/6 (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6))) (/.f64 (*.f64 (*.f64 1/3 (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 im im))))))) (cbrt.f64 (/.f64 1 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (fma.f64 80/9 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)) (*.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))))) (*.f64 im im))))))) (fma.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 1 (pow.f64 im 6)) (+.f64 (*.f64 1/6 (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6))) (/.f64 (*.f64 (*.f64 1/3 (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 im im)))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (fma.f64 10/9 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)) (/.f64 (*.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12)))) (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 im im))))))) (pow.f64 re 6) (fma.f64 (*.f64 1/24 (+.f64 (fma.f64 24 (*.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))))) (cbrt.f64 (/.f64 1 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (/.f64 -4/3 (*.f64 (log.f64 10) (pow.f64 im 4)))) (fma.f64 8 (/.f64 (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12)) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 -1/3 (*.f64 (log.f64 10) (pow.f64 im 4)))))) (pow.f64 re 4) (+.f64 (*.f64 (*.f64 re re) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) 1/2)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im)))))))","(+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)))","(+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))))","(*.f64 1/3 (+.f64 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 2 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))))))","(+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) 1/2)))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 2 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) 1/2))","(+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 re 4))) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 re 4))))))))","(+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 1/24 (/.f64 (fma.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 (*.f64 1/36 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (/.f64 (pow.f64 im 4) (log.f64 10))))) (*.f64 -4/3 (/.f64 (pow.f64 im 4) (log.f64 10)))) (pow.f64 re 4)) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (*.f64 1/24 (/.f64 (fma.f64 8 (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re)))))) (*.f64 -1/3 (/.f64 (pow.f64 im 4) (log.f64 10)))) (pow.f64 re 4))))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 2 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (fma.f64 1/24 (/.f64 (fma.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 (*.f64 1/36 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (/.f64 (pow.f64 im 4) (log.f64 10))))) (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -4/3)) (pow.f64 re 4)) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (*.f64 1/24 (/.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re)))) (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -1/3)) (pow.f64 re 4)))))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 re 4))) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 re 4))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))))))) (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 im 2))))))) (pow.f64 re 6))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))))) (+.f64 (*.f64 -40 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (*.f64 (pow.f64 1 1/3) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (pow.f64 re 6))))))))))","(+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 1/24 (/.f64 (fma.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 (*.f64 1/36 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (/.f64 (pow.f64 im 4) (log.f64 10))))) (*.f64 -4/3 (/.f64 (pow.f64 im 4) (log.f64 10)))) (pow.f64 re 4)) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 1/24 (/.f64 (fma.f64 8 (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re)))))) (*.f64 -1/3 (/.f64 (pow.f64 im 4) (log.f64 10)))) (pow.f64 re 4)) (*.f64 1/720 (+.f64 (/.f64 (fma.f64 80/9 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))))))) (*.f64 1/9 (*.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (*.f64 im im) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))))))) (*.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 (*.f64 1/36 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (/.f64 (pow.f64 im 4) (log.f64 10)))))))))) (pow.f64 re 6)) (/.f64 (fma.f64 240 (/.f64 (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re)))))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re)))))) (fma.f64 -40 (*.f64 (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (*.f64 im im))) (*.f64 1 (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 10/9))) (pow.f64 re 6))))))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 2 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (fma.f64 1/24 (/.f64 (fma.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 (*.f64 1/36 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (/.f64 (pow.f64 im 4) (log.f64 10))))) (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -4/3)) (pow.f64 re 4)) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (fma.f64 1/24 (/.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re)))) (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -1/3)) (pow.f64 re 4)) (*.f64 1/720 (+.f64 (/.f64 (fma.f64 80/9 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (-.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12)))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))))))))) (*.f64 1/9 (*.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (*.f64 im im) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12))))))) (*.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 (*.f64 1/36 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (/.f64 (pow.f64 im 4) (log.f64 10)))))))))) (pow.f64 re 6)) (/.f64 (fma.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12)))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re)))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re)))) (fma.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12))))) (*.f64 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 10/9))) (pow.f64 re 6)))))))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))","(+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))))","(*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re))))))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))))","(fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re))))))) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re)))))))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 24 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 re 4))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10)))) (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (pow.f64 re 4))) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))))))","(fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 1/24 (/.f64 (fma.f64 24 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))))) (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)))) (*.f64 -4/3 (/.f64 (pow.f64 im 4) (log.f64 10)))) (pow.f64 re 4)) (fma.f64 1/24 (/.f64 (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 8 (/.f64 (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (pow.f64 re 4)) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re))))))) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (fma.f64 1/24 (/.f64 (fma.f64 24 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12))) (*.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2)))) (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -4/3)) (pow.f64 re 4)) (fma.f64 1/24 (/.f64 (fma.f64 -1/3 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 8 (/.f64 (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))))) (pow.f64 re 4)) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re)))))))))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 -240 (*.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 im 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 2) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))))) (*.f64 2/3 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3)))))) (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (pow.f64 re 6))) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 im 2) (pow.f64 re 2)))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 24 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 re 4))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 im 2) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))))) (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (pow.f64 re 6))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10)))) (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (pow.f64 re 4))) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))))))))","(fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (fma.f64 1/720 (/.f64 (fma.f64 -240 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))))) (*.f64 (*.f64 im im) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)))))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (fma.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (-.f64 (*.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))))))))) (*.f64 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 80/9))) (pow.f64 re 6)) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 1/24 (/.f64 (fma.f64 24 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))))) (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)))) (*.f64 -4/3 (/.f64 (pow.f64 im 4) (log.f64 10)))) (pow.f64 re 4)) (fma.f64 1/720 (/.f64 (+.f64 (*.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))))))) (fma.f64 240 (/.f64 (-.f64 (*.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 10/9))) (pow.f64 re 6)) (fma.f64 1/24 (/.f64 (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 8 (/.f64 (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (pow.f64 re 4)) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))))))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re))))))) (fma.f64 1/720 (/.f64 (fma.f64 -240 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12))) (*.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2))))) (*.f64 (*.f64 im im) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2)))))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2))) (fma.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12)))) (*.f64 (*.f64 2/3 (-.f64 (*.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))))))))) (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (*.f64 (*.f64 80/9 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (pow.f64 im 6)))) (pow.f64 re 6)) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) (fma.f64 1/24 (/.f64 (fma.f64 24 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12))) (*.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2)))) (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -4/3)) (pow.f64 re 4)) (fma.f64 1/720 (/.f64 (fma.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 im im) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12)))) (fma.f64 240 (/.f64 (-.f64 (*.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))) (*.f64 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 10/9))) (pow.f64 re 6)) (fma.f64 1/24 (/.f64 (fma.f64 -1/3 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 8 (/.f64 (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))))) (pow.f64 re 4)) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re)))))))))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)))","(+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (log.f64 (cbrt.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (+.f64 (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2))))) (pow.f64 im 2))))","(+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (*.f64 im im) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (*.f64 re re))) 1/2))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)))) (*.f64 (*.f64 im im) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) 1/2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))))) (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))))))) (pow.f64 im 4)) (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (+.f64 (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2))))) (pow.f64 im 2)))))","(fma.f64 (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) -1/3)) (fma.f64 -4/3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 24 (*.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)))))))) (pow.f64 im 4) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (*.f64 im im) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (*.f64 re re))) 1/2)))))","(fma.f64 (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 -1/3 (*.f64 (log.f64 10) (pow.f64 re 4)))) (+.f64 (/.f64 -4/3 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 24 (*.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))) (cbrt.f64 (/.f64 1 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))))))))) (pow.f64 im 4) (+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)))) (*.f64 (*.f64 im im) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) 1/2))))","(+.f64 (*.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))))) (pow.f64 re 2))))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))))) (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))))) (*.f64 1/720 (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 2))) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6)))))))) (pow.f64 im 6)) (+.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))))) (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))))))) (pow.f64 im 4)) (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (+.f64 (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2))))) (pow.f64 im 2))))))","(fma.f64 (*.f64 1/720 (+.f64 (fma.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))) (*.f64 re re)))) (fma.f64 720 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (*.f64 re re))))))) (*.f64 1/9 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (*.f64 re re))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))) 80/9))) (+.f64 (*.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (*.f64 (*.f64 re re) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (fma.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (*.f64 re re)))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))) 10/9))))) (pow.f64 im 6) (fma.f64 (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) -1/3)) (fma.f64 -4/3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 24 (*.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)))))))) (pow.f64 im 4) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (*.f64 im im) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (*.f64 re re))) 1/2))))))","(fma.f64 (*.f64 1/720 (+.f64 (fma.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))) (*.f64 re re)))) (fma.f64 720 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 1 (pow.f64 re 6)) (+.f64 (*.f64 1/6 (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 re 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (*.f64 re re))))))) (*.f64 1/9 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (*.f64 re re))))) (cbrt.f64 (/.f64 1 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (/.f64 (*.f64 80/9 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (pow.f64 re 6)))) (fma.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (*.f64 (*.f64 re re) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))))) (fma.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 1 (pow.f64 re 6)) (+.f64 (*.f64 1/6 (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 re 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (*.f64 re re)))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) 10/9))))) (pow.f64 im 6) (fma.f64 (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 -1/3 (*.f64 (log.f64 10) (pow.f64 re 4)))) (+.f64 (/.f64 -4/3 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 24 (*.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))) (cbrt.f64 (/.f64 1 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))))))))) (pow.f64 im 4) (+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)))) (*.f64 (*.f64 im im) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) 1/2)))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3)))","(+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))))","(*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im))))))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3)))))","(fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im))))))) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im)))))))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3)) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))))))))) (pow.f64 im 4))))))))","(fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (+.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))))) (*.f64 1/24 (+.f64 (/.f64 (fma.f64 8 (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))) (*.f64 -1/3 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 im 4)) (/.f64 (+.f64 (*.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10))) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))))))))) (pow.f64 im 4)))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im))))))) (+.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im)))))) (*.f64 1/24 (+.f64 (/.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im)))) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) -1/3)) (pow.f64 im 4)) (/.f64 (fma.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10)) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)))))))) (pow.f64 im 4))))))","(+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2))))))))))) (+.f64 (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))) (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10))))))))))))) (pow.f64 im 6))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3)) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 -40 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) (*.f64 (pow.f64 1 1/3) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))) (*.f64 240 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))))))) (pow.f64 im 6))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))))))))) (pow.f64 im 4))))))))))","(fma.f64 1/720 (/.f64 (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (fma.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))))))) (fma.f64 80/9 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))))))) (pow.f64 im 6)) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (+.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))))) (fma.f64 1/24 (/.f64 (fma.f64 8 (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))) (*.f64 -1/3 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 im 4)) (fma.f64 1/720 (/.f64 (fma.f64 -40 (*.f64 (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (*.f64 re re))) (*.f64 1 (sqrt.f64 (/.f64 1 (log.f64 10))))) (fma.f64 10/9 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 240 (/.f64 (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))))) (pow.f64 im 6)) (*.f64 1/24 (/.f64 (+.f64 (*.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10))) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))))))))) (pow.f64 im 4)))))))))","(fma.f64 1/720 (/.f64 (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (fma.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))) (-.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)))))))))) (fma.f64 80/9 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))))))) (pow.f64 im 6)) (+.f64 (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im))))))) (+.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im)))))) (fma.f64 1/24 (/.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im)))) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) -1/3)) (pow.f64 im 4)) (fma.f64 1/720 (/.f64 (fma.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (*.f64 re re)))) (fma.f64 10/9 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))))))) (pow.f64 im 6)) (*.f64 1/24 (/.f64 (fma.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10)) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)))))))) (pow.f64 im 4))))))))","(+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3)))","(+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))))","(*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im)))) (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im)))))))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3)))))","(fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im)))))) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 1/3 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im))))))))","(+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))))))))) (pow.f64 im 4))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4))) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3)))))))","(fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 1/24 (/.f64 (+.f64 (*.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10))) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))))) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))) (pow.f64 im 4)) (fma.f64 1/24 (/.f64 (fma.f64 8 (/.f64 (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/3 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 im 4)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im)))))) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 1/24 (/.f64 (fma.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10)) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))) (pow.f64 im 4)) (fma.f64 1/24 (/.f64 (fma.f64 8 (/.f64 (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im)))) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) -1/3)) (pow.f64 im 4)) (*.f64 1/3 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im))))))))))","(+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))))) (+.f64 (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10))))))) (pow.f64 re 2))))) (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))))) (pow.f64 im 6))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))))) (pow.f64 im 6))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))))))))) (pow.f64 im 4))) (+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10))))) (pow.f64 im 4))) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3)))))))))","(fma.f64 1/720 (/.f64 (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (-.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))))))))) (*.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))))))))) (fma.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))))) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))) (*.f64 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 80/9))) (pow.f64 im 6)) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 1/720 (/.f64 (fma.f64 240 (/.f64 (-.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (+.f64 (*.f64 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 10/9) (*.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (*.f64 re re))))))) (pow.f64 im 6)) (fma.f64 1/24 (/.f64 (+.f64 (*.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10))) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))))) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))) (pow.f64 im 4)) (fma.f64 1/24 (/.f64 (fma.f64 8 (/.f64 (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/3 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 im 4)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))))))))))","(fma.f64 1/720 (/.f64 (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (-.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im)))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)))))))) (*.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)))))))) (fma.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))) (*.f64 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 80/9))) (pow.f64 im 6)) (+.f64 (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im)))))) (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 1/720 (/.f64 (fma.f64 240 (/.f64 (-.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im)))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im)))) (fma.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 re re)))) (*.f64 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 10/9))) (pow.f64 im 6)) (fma.f64 1/24 (/.f64 (fma.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10)) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))) (pow.f64 im 4)) (fma.f64 1/24 (/.f64 (fma.f64 8 (/.f64 (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im)))) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) -1/3)) (pow.f64 im 4)) (*.f64 1/3 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im))))))))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (log.f64 (cbrt.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im)))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2))))) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)))))","(fma.f64 (*.f64 (*.f64 re re) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (*.f64 im im))) 1/2)) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (log.f64 (cbrt.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 re re) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) 1/2)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2))))) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 re 4))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3))))))","(fma.f64 (*.f64 (*.f64 re re) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (*.f64 im im))) 1/2)) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (pow.f64 re 4) (*.f64 1/24 (+.f64 (fma.f64 24 (*.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)))) (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) -4/3)) (fma.f64 8 (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) -1/3))))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (log.f64 (cbrt.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 re re) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) 1/2)) (+.f64 (*.f64 (pow.f64 re 4) (*.f64 1/24 (+.f64 (fma.f64 24 (*.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))))) (cbrt.f64 (/.f64 1 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (/.f64 -4/3 (*.f64 (log.f64 10) (pow.f64 im 4)))) (fma.f64 8 (/.f64 (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12)) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 -1/3 (*.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im)))))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 (pow.f64 im 2) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))))))) (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2)))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))))) (*.f64 1/720 (+.f64 (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6)))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2))))))))))) (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 im 2))))))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 2))))) (pow.f64 re 2)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (pow.f64 re 4))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3)) (log.f64 (pow.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)))))))","(fma.f64 (*.f64 (pow.f64 re 6) (*.f64 1/720 (+.f64 (fma.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6))) (*.f64 1/48 (*.f64 (/.f64 1 (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 im im)))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (fma.f64 10/9 (*.f64 (/.f64 1 (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 im im))))))) (fma.f64 80/9 (*.f64 (/.f64 1 (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (fma.f64 720 (*.f64 (fma.f64 1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 im im)))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (-.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6))) (*.f64 1/48 (*.f64 (/.f64 1 (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 im im))))))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)))) (*.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (*.f64 im im)))))))))) (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (*.f64 (*.f64 re re) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (*.f64 im im))) 1/2)) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (pow.f64 re 4) (*.f64 1/24 (+.f64 (fma.f64 24 (*.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4)))))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)))) (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) -4/3)) (fma.f64 8 (/.f64 (+.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 -1/12 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))) -1/3))))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (log.f64 (cbrt.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))))))))","(fma.f64 (*.f64 (pow.f64 re 6) (*.f64 1/720 (+.f64 (fma.f64 720 (*.f64 (fma.f64 1/9 (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 im im)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (-.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 1 (pow.f64 im 6)) (+.f64 (*.f64 1/6 (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6))) (/.f64 (*.f64 (*.f64 1/3 (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 im im))))))) (cbrt.f64 (/.f64 1 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (fma.f64 80/9 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)) (*.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))))) (*.f64 im im))))))) (fma.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 1 (pow.f64 im 6)) (+.f64 (*.f64 1/6 (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 6))) (/.f64 (*.f64 (*.f64 1/3 (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 im im)))) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (fma.f64 10/9 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)) (/.f64 (*.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12)))) (*.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 im im)))))))) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 re re) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) 1/2)) (+.f64 (*.f64 (pow.f64 re 4) (*.f64 1/24 (+.f64 (fma.f64 24 (*.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12))))) (cbrt.f64 (/.f64 1 (pow.f64 im (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (/.f64 -4/3 (*.f64 (log.f64 10) (pow.f64 im 4)))) (fma.f64 8 (/.f64 (fma.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (pow.f64 im 4)) (log.f64 10)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 im 4))) -1/12)) (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 -1/3 (*.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 im))))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2)))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 1/3 (+.f64 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 2 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10)))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2)))) (pow.f64 re 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) 1/2) (*.f64 re re)) (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 1/3 (+.f64 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 2 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) 1/2)))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10)))))) (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (pow.f64 re 4))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2)))) (pow.f64 re 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re)))))) (*.f64 -1/3 (/.f64 (pow.f64 im 4) (log.f64 10)))) (fma.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 (*.f64 1/36 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (/.f64 (pow.f64 im 4) (log.f64 10))))) (*.f64 -4/3 (/.f64 (pow.f64 im 4) (log.f64 10)))))) (pow.f64 re 4)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) 1/2) (*.f64 re re)) (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2)))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 2 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) 1/2)) (/.f64 (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re)))) (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -1/3)) (fma.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 (*.f64 1/36 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (/.f64 (pow.f64 im 4) (log.f64 10))))) (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -4/3)))) (pow.f64 re 4))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))))) (+.f64 (*.f64 -40 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (*.f64 (pow.f64 1 1/3) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)))))) (*.f64 1/720 (+.f64 (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))))))) (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 im 2))))))))) (pow.f64 re 6))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10)))))) (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (pow.f64 re 4))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2)))) (pow.f64 re 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 re))))) 2) 1/3)))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 1/720 (+.f64 (fma.f64 240 (/.f64 (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re)))))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re)))))) (fma.f64 -40 (*.f64 (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (*.f64 im im))) (*.f64 1 (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 10/9))) (fma.f64 80/9 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))))))) (*.f64 1/9 (*.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (*.f64 im im) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))))))) (*.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 (*.f64 1/36 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (/.f64 (pow.f64 im 4) (log.f64 10)))))))))))) (pow.f64 re 6)) (fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re)))))) (*.f64 -1/3 (/.f64 (pow.f64 im 4) (log.f64 10)))) (fma.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 (*.f64 1/36 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))) (/.f64 (pow.f64 im 4) (log.f64 10))))) (*.f64 -4/3 (/.f64 (pow.f64 im 4) (log.f64 10)))))) (pow.f64 re 4)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) 1/2) (*.f64 re re)) (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) 2))))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1/720 (/.f64 (pow.f64 re 6) (+.f64 (fma.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12)))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re)))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re)))) (fma.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12))))) (*.f64 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 10/9))) (fma.f64 80/9 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (-.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12)))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))))))))) (*.f64 1/9 (*.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (*.f64 im im) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12))))))) (*.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 (*.f64 1/36 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (/.f64 (pow.f64 im 4) (log.f64 10))))))))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 2 (*.f64 (neg.f64 (log.f64 re)) (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) 1/2)) (/.f64 (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re)))) (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -1/3)) (fma.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 re))))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) (/.f64 (log.f64 10) (pow.f64 im 4))) -1/12))) (*.f64 (*.f64 1/36 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 re))) 2))) (/.f64 (pow.f64 im 4) (log.f64 10))))) (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -4/3)))) (pow.f64 re 4)))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re)))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2)))) (pow.f64 re 2))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) 1/2) (*.f64 re re))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) 1/2) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re))))))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10)))) (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))))) (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (pow.f64 re 4)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2)))) (pow.f64 re 2)))))","(fma.f64 (/.f64 (*.f64 1/24 (+.f64 (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 8 (/.f64 (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (fma.f64 24 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))))) (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)))) (*.f64 -4/3 (/.f64 (pow.f64 im 4) (log.f64 10)))))) (pow.f64 re 4)) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) 1/2) (*.f64 re re)))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re)))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) 1/2)) (/.f64 1/24 (/.f64 (pow.f64 re 4) (+.f64 (fma.f64 -1/3 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 8 (/.f64 (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))))) (fma.f64 24 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12))) (*.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2)))) (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -4/3)))))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10)))) (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))))) (*.f64 1/24 (+.f64 (*.f64 24 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3))) (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))))) (pow.f64 re 4)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (pow.f64 im 2) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))))) (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)))))) (*.f64 1/720 (+.f64 (*.f64 -240 (*.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (/.f64 (pow.f64 im 4) (log.f64 10))))) (pow.f64 im 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 2) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))))))) (*.f64 2/3 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 4)) (log.f64 10)))) (pow.f64 im 2)))) (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) 1/3)))))) (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 1/3)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 2)))) (pow.f64 re 2))))))","(fma.f64 (/.f64 (*.f64 1/24 (+.f64 (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 8 (/.f64 (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (fma.f64 24 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))))) (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)))) (*.f64 -4/3 (/.f64 (pow.f64 im 4) (log.f64 10)))))) (pow.f64 re 4)) (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (/.f64 (*.f64 1/720 (+.f64 (+.f64 (*.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 im im) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))))))) (fma.f64 240 (/.f64 (-.f64 (*.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 10/9))) (fma.f64 -240 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))))) (*.f64 (*.f64 im im) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2)))))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (fma.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4))))))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))))) (-.f64 (*.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 10) (pow.f64 im 4)))))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))))))))) (*.f64 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 80/9))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) 2))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) 1/2) (*.f64 re re))))))","(fma.f64 (/.f64 1/24 (/.f64 (pow.f64 re 4) (+.f64 (fma.f64 -1/3 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 8 (/.f64 (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))))) (fma.f64 24 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12))) (*.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2)))) (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -4/3))))) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 re)))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 im (/.f64 (*.f64 re re) im))) 1/2)) (/.f64 (*.f64 1/720 (+.f64 (fma.f64 -240 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12))) (*.f64 1/36 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2))))) (*.f64 (*.f64 im im) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2)))))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) 2))) (fma.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12)))) (*.f64 (*.f64 2/3 (-.f64 (*.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))))))))) (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 re)))))))) (*.f64 (*.f64 80/9 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (pow.f64 im 6)))) (fma.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (*.f64 im im) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12)))) (fma.f64 240 (/.f64 (-.f64 (*.f64 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))) (fma.f64 1/3 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 im im)) (fma.f64 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re))) (log.f64 10)) (pow.f64 im 4)) -1/12))) (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 re)))) (*.f64 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 10/9))))) (pow.f64 re 6)))))","(*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (log.f64 (cbrt.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)))))","(+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2))))) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10)))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (*.f64 im im) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (*.f64 re re))) 1/2)))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)))) (*.f64 (*.f64 im im) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) 1/2))))","(+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))))) (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))))))) (pow.f64 im 4))) (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2))))) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(fma.f64 (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (log.f64 (cbrt.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))))) (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 4) (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) -1/3)) (fma.f64 -4/3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 24 (*.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (*.f64 re re))) 1/2)))))","(fma.f64 (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)))) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 im im) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) 1/2)) (*.f64 (pow.f64 im 4) (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 -1/3 (*.f64 (log.f64 10) (pow.f64 re 4)))) (+.f64 (/.f64 -4/3 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 24 (*.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))) (cbrt.f64 (/.f64 1 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10))))))))))))))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))))) (pow.f64 re 2))))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))))) (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))))) (*.f64 1/720 (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 2))) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6)))))))) (pow.f64 im 6)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1/3)) (log.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))))) (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2) 1) 1/3) (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) 1/3) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))))))) (pow.f64 im 4))) (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 2))))) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(fma.f64 (*.f64 (pow.f64 im 6) (*.f64 1/720 (+.f64 (fma.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))) (*.f64 re re)))) (fma.f64 720 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (*.f64 re re))))))) (*.f64 1/9 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (*.f64 re re))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2)))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))) 80/9))) (+.f64 (*.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (*.f64 (*.f64 re re) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (fma.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (*.f64 re re)))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))) 10/9)))))) (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (+.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (log.f64 (cbrt.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))))) (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 4) (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4)))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) -1/3)) (fma.f64 -4/3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 24 (*.f64 (fma.f64 1/36 (*.f64 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))) (cbrt.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (neg.f64 (*.f64 1/12 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))))))))) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) 2))))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (*.f64 re re))) 1/2))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (pow.f64 im 6) (*.f64 1/720 (+.f64 (fma.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))) (*.f64 re re)))) (fma.f64 720 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 1 (pow.f64 re 6)) (+.f64 (*.f64 1/6 (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 re 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (*.f64 re re))))))) (*.f64 1/9 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (*.f64 re re))))) (cbrt.f64 (/.f64 1 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))))) (/.f64 (*.f64 80/9 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (pow.f64 re 6)))) (fma.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (*.f64 (*.f64 re re) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))))) (fma.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 1 (pow.f64 re 6)) (+.f64 (*.f64 1/6 (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 re 6))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (*.f64 re re)))))) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) 10/9)))))) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 re)))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 im im) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) 1/2)) (*.f64 (pow.f64 im 4) (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10))))) (/.f64 -1/3 (*.f64 (log.f64 10) (pow.f64 re 4)))) (+.f64 (/.f64 -4/3 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 24 (*.f64 (fma.f64 1/36 (/.f64 (cbrt.f64 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))))) (fma.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)))) (*.f64 (/.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))) (cbrt.f64 (/.f64 1 (pow.f64 re (*.f64 2 (sqrt.f64 (/.f64 1 (log.f64 10))))))))))))))))","(*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im)))))))","(+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2)))) (pow.f64 im 2))))","(fma.f64 (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))))) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) 1/2) (*.f64 im im))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im)))))) (/.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) (/.f64 (*.f64 im im) 1/2))))","(+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10))))))))))) (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10))))))) (pow.f64 im 4)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2)))) (pow.f64 im 2)))))","(fma.f64 (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))))) (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (/.f64 (*.f64 1/24 (+.f64 (+.f64 (*.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10))) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))))))))) (fma.f64 8 (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))) (*.f64 -1/3 (/.f64 (pow.f64 re 4) (log.f64 10)))))) (pow.f64 im 4)) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) 1/2) (*.f64 im im)))))","(fma.f64 (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im)))))) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) (/.f64 (*.f64 im im) 1/2)) (/.f64 1/24 (/.f64 (pow.f64 im 4) (+.f64 (fma.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10)) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)))))))) (fma.f64 8 (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im)))) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) -1/3))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 -40 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) (*.f64 (pow.f64 1 1/3) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (+.f64 (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))) (*.f64 240 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))))))) (*.f64 1/720 (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 6)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2))))))))))) (+.f64 (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))) (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10))))))))))))))) (pow.f64 im 6))) (+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1/3)) (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) 2) 1) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10))))))))))) (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10))))))) (pow.f64 im 4)) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2)))) (pow.f64 im 2))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 1/720 (+.f64 (fma.f64 -40 (*.f64 (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (*.f64 re re))) (*.f64 1 (sqrt.f64 (/.f64 1 (log.f64 10))))) (fma.f64 10/9 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 240 (/.f64 (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (fma.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (-.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))))))) (fma.f64 80/9 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))))))))) (pow.f64 im 6)) (fma.f64 (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))))) (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (/.f64 (*.f64 1/24 (+.f64 (+.f64 (*.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10))) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))))) (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))))))))) (fma.f64 8 (/.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))) (*.f64 -1/3 (/.f64 (pow.f64 re 4) (log.f64 10)))))) (pow.f64 im 4)) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) 1/2) (*.f64 im im))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 1/720 (/.f64 (pow.f64 im 6) (+.f64 (fma.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (*.f64 re re)))) (fma.f64 10/9 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 240 (/.f64 (-.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))))))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (fma.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im)))))) (-.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)))))))))) (fma.f64 80/9 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)))))))))))))) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (neg.f64 (log.f64 im)))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) (/.f64 (*.f64 im im) 1/2)) (/.f64 1/24 (/.f64 (pow.f64 im 4) (+.f64 (fma.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10)) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) 2))) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 im))))) (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)))))))) (fma.f64 8 (/.f64 (fma.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (neg.f64 (log.f64 im)))) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) -1/3))))))))","(*.f64 (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im)))) (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im))))))))","(+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2)))) (pow.f64 im 2))))","(fma.f64 (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)))) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) 1/2) (*.f64 im im))))","(*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) (/.f64 (*.f64 im im) 1/2)) (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im)))) (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im)))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))))) (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))))))))))) (pow.f64 im 4))) (+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2)))) (pow.f64 im 2)))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/3 (/.f64 (pow.f64 re 4) (log.f64 10)))) (+.f64 (*.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10))) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))))) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))))) (pow.f64 im 4)) (fma.f64 (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)))) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) 1/2) (*.f64 im im)))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im)))) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) -1/3)) (fma.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10)) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))))) (pow.f64 im 4)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) (/.f64 (*.f64 im im) 1/2)) (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im)))) (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im))))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 240 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (+.f64 (*.f64 -40 (*.f64 (pow.f64 1 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))))) (*.f64 10/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (*.f64 1/720 (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))) (+.f64 (*.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 6)))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (pow.f64 re 2)))))))) (+.f64 (*.f64 -240 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10))))))) (pow.f64 re 2))))) (*.f64 80/9 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))))))) (pow.f64 im 6))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))) (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))))) (*.f64 1/24 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)) 1/3) (/.f64 (pow.f64 re 4) (log.f64 10)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 1/12 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (pow.f64 re 4)) (log.f64 10)))))))))))) (pow.f64 im 4))) (+.f64 (*.f64 (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 1/3)) (log.f64 (pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2) 1/3))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2))) (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 2)))) (pow.f64 im 2))))))","(fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 1/720 (+.f64 (fma.f64 240 (/.f64 (-.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (+.f64 (*.f64 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 10/9) (*.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (*.f64 re re))))))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (-.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))))))))) (*.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))))))))) (fma.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))))) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))) (*.f64 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 80/9))))) (pow.f64 im 6)) (fma.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4))))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/3 (/.f64 (pow.f64 re 4) (log.f64 10)))) (+.f64 (*.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10))) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))))) (+.f64 (*.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (*.f64 -1/12 (/.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (/.f64 (log.f64 10) (pow.f64 re 4)))))))))))) (pow.f64 im 4)) (fma.f64 (+.f64 (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) 2)))) (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) 1/2) (*.f64 im im))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 1/720 (/.f64 (pow.f64 im 6) (+.f64 (fma.f64 240 (/.f64 (-.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im)))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im)))) (fma.f64 -40 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 re re)))) (*.f64 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 10/9))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (-.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 1/48 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im)))) (fma.f64 1/216 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 re 6) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))))) (*.f64 1/3 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)))))))) (*.f64 1/9 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)))))))) (fma.f64 -240 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))) (*.f64 (*.f64 (pow.f64 re 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) 80/9)))))) (/.f64 (*.f64 1/24 (+.f64 (fma.f64 8 (/.f64 (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12)) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im)))) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) -1/3)) (fma.f64 -4/3 (/.f64 (pow.f64 re 4) (log.f64 10)) (*.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (fma.f64 1/36 (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (log.f64 (/.f64 -1 im)))))) (fma.f64 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (sqrt.f64 (/.f64 1 (log.f64 10))))) (log.f64 (/.f64 -1 im))) (/.f64 (log.f64 10) (pow.f64 re 4))) -1/12))))))))) (pow.f64 im 4)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 re re)) (/.f64 (*.f64 im im) 1/2)) (*.f64 1/3 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im)))) (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (neg.f64 (log.f64 (/.f64 -1 im))))))))))"]],"stop":[["node limit",1]],"time":209.4990234375,"type":"simplify"},{"compiler":[[54245,47087]],"time":665.092041015625,"type":"eval"},{"alts":[["(log.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2)))","next",0.12890625],["(+.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))))) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2)))))","fresh",0.30859375],["(/.f64 (/.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) (pow.f64 (log.f64 10) 1/4)) (pow.f64 (log.f64 10) 1/4))","fresh",0.4994125976844202],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))","done",0.5254288086106522],["(/.f64 (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (*.f64 (sqrt.f64 (log.f64 10)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))","fresh",0.5717164062950724],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))","done",0.37728500976844204]],"compiler":[[16,14],[48,40],[20,18],[16,14],[37,29],[31,26],[16,14],[48,40],[20,18],[37,29]],"count":[[457,6]],"kept":[{"done":[2,1],"fresh":[3,1],"new":[451,3],"picked":[1,1]}],"min-error":[0],"time":119.598876953125,"type":"prune"},{"compiler":[[50,37]],"locations":[["(pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))",3.304553089245351,true],["(pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))",3.8078958669808074,false]],"time":37.10302734375,"type":"localize"},{"count":[[1,24]],"series":[["(pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))","im","-inf",0.860107421875],["(pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))","im","inf",2.083984375],["(pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))","im","0",2.0400390625],["(pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))","re","-inf",0.9951171875],["(pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))","re","inf",2.0830078125],["(pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))","re","0",2.281005859375]],"time":10.653076171875,"type":"series"},{"count":[[1,18]],"egraph":[[2,2386,12,0.020802],[1,212,12,0.003541875],[0,10,20,0.000319125]],"inputs":[["(pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1))) (cbrt.f64 (pow.f64 (hypot.f64 re im) (*.f64 2 (pow.f64 (log.f64 10) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (*.f64 2 (pow.f64 (log.f64 10) -1)))) (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1))) (sqrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 (pow.f64 (log.f64 10) -1/2)) (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 (pow.f64 (log.f64 10) -1)) (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 re im)) 2) (pow.f64 (log.f64 10) -1)) (pow.f64 (cbrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1)) (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) 2)) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) (pow.f64 (log.f64 10) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (hypot.f64 re im) (*.f64 2 (pow.f64 (log.f64 10) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1)))))))"]],"rules":[["egg-rr",18]],"stop":[["node limit",1]],"time":38.806884765625,"type":"rewrite"},{"count":[[42,65]],"egraph":[[2,3851,3183,0.021063959],[1,988,3608,0.007283292],[0,304,3776,0.001586042]],"inputs":[["(exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 2)))) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 (-.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/8 (/.f64 1 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 im 4))))) (*.f64 (pow.f64 re 4) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10))))))) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 (+.f64 (*.f64 1/48 (/.f64 1 (*.f64 (pow.f64 (log.f64 10) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/48 (*.f64 (/.f64 (-.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 720 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6)))))) (+.f64 (*.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6)))) (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im 2)))))))))) (*.f64 (pow.f64 re 6) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10))))))) (+.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 (-.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/8 (/.f64 1 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 im 4))))) (*.f64 (pow.f64 re 4) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10))))))) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10))))))))","(exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))) (/.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -3 (/.f64 (pow.f64 im 4) (log.f64 10)))))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))))) (pow.f64 re 4))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))) (+.f64 (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (+.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -3 (/.f64 (pow.f64 im 4) (log.f64 10)))) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (*.f64 (+.f64 (*.f64 720 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)))))) (+.f64 (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 im 2)))) (*.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/48 (/.f64 (pow.f64 im 6) (pow.f64 (log.f64 10) 3)))))) (pow.f64 re 6)) (/.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -3 (/.f64 (pow.f64 im 4) (log.f64 10)))))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))))) (pow.f64 re 4)))))","(exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -3 (/.f64 (pow.f64 im 4) (log.f64 10)))))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))) (pow.f64 re 4)) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -3 (/.f64 (pow.f64 im 4) (log.f64 10)))))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))) (pow.f64 re 4)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (+.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -3 (/.f64 (pow.f64 im 4) (log.f64 10)))) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (*.f64 (+.f64 (*.f64 720 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)))))) (+.f64 (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 im 2)))) (*.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/48 (/.f64 (pow.f64 im 6) (pow.f64 (log.f64 10) 3))))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))) (pow.f64 re 6)) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))))))","(pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10))))","(+.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))))","(+.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 re 4)))) (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (-.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))))))))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2))))))","(+.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (+.f64 (*.f64 1/48 (/.f64 1 (*.f64 (pow.f64 (log.f64 10) 3) (pow.f64 re 6)))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6)))) (+.f64 (*.f64 720 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6)))))) (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (pow.f64 re 2)))))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (-.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))) (pow.f64 im 6))) (+.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 re 4)))) (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (-.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))))))))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))))))","(exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))) (pow.f64 re 2)) (*.f64 (log.f64 10) (pow.f64 im 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))) (pow.f64 re 2)) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2))) (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10))))))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))))) (pow.f64 im 4)) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))) (pow.f64 re 2)) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2))) (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10))))))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))))) (pow.f64 im 4)) (+.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))) (+.f64 (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (+.f64 (*.f64 24 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 re 2)))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))) (+.f64 (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 re 2)))) (*.f64 720 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))))))) (*.f64 1/48 (/.f64 (pow.f64 re 6) (pow.f64 (log.f64 10) 3)))))) (pow.f64 im 6)))))","(exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))) (*.f64 (log.f64 10) (pow.f64 im 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2))) (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10))))))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))) (pow.f64 im 4)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))) (*.f64 (log.f64 10) (pow.f64 im 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))) (+.f64 (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (+.f64 (*.f64 24 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 re 2)))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))) (+.f64 (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 re 2)))) (*.f64 720 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))))))) (*.f64 1/48 (/.f64 (pow.f64 re 6) (pow.f64 (log.f64 10) 3)))))) (pow.f64 im 6)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2))) (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10))))))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))) (pow.f64 im 4)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))) (*.f64 (log.f64 10) (pow.f64 im 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))))))"]],"method":["egg-herbie"],"outputs":[["(exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10)))))","(pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10))))","(exp.f64 (*.f64 (/.f64 1 (log.f64 10)) (log.f64 im)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 2)))) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (log.f64 10)) (/.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 im im))) (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (/.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (log.f64 10))) (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (/.f64 (exp.f64 (*.f64 (/.f64 1 (log.f64 10)) (log.f64 im))) (log.f64 10))) (exp.f64 (*.f64 (/.f64 1 (log.f64 10)) (log.f64 im))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 (-.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/8 (/.f64 1 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 im 4))))) (*.f64 (pow.f64 re 4) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10))))))) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (log.f64 10)) (/.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 im im))) (fma.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 24 (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (neg.f64 (/.f64 3 (*.f64 (log.f64 10) (pow.f64 im 4)))))) (/.f64 1/8 (*.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (*.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 4)) (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (/.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (log.f64 10))) (*.f64 (+.f64 (*.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 24 (fma.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4)))) (/.f64 -3 (*.f64 (log.f64 10) (pow.f64 im 4))))) (/.f64 1/8 (*.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (pow.f64 re 4)) 1) (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (/.f64 (exp.f64 (*.f64 (/.f64 1 (log.f64 10)) (log.f64 im))) (log.f64 10))) (*.f64 (+.f64 (*.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 3 (*.f64 (log.f64 10) (pow.f64 im 4))) (fma.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6 (/.f64 -3 (*.f64 (log.f64 10) (pow.f64 im 4)))))) (/.f64 1/8 (*.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (pow.f64 re 4)) 1) (exp.f64 (*.f64 (/.f64 1 (log.f64 10)) (log.f64 im)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10)))))) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (*.f64 (+.f64 (*.f64 1/48 (/.f64 1 (*.f64 (pow.f64 (log.f64 10) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/48 (*.f64 (/.f64 (-.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (pow.f64 im 2)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 720 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 6)))))) (+.f64 (*.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6)))) (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (pow.f64 im 2)))))))))) (*.f64 (pow.f64 re 6) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10))))))) (+.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 (-.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4)))))) (*.f64 3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 im 4))))) (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/8 (/.f64 1 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 im 4))))) (*.f64 (pow.f64 re 4) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10))))))) (exp.f64 (*.f64 (log.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10))))) (sqrt.f64 (/.f64 1 (log.f64 10))))))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (log.f64 10)) (/.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 im im))) (fma.f64 (+.f64 (/.f64 1/48 (*.f64 (pow.f64 (log.f64 10) 3) (pow.f64 im 6))) (fma.f64 1/48 (*.f64 (/.f64 (fma.f64 24 (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (neg.f64 (/.f64 3 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 im im)) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 (*.f64 1/720 (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 720 (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 6))) (*.f64 (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (/.f64 1 (pow.f64 im 6)))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 6)))) (fma.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 im 6))) (*.f64 (*.f64 -360 (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (*.f64 im im)))))))) (*.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 6)) (fma.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 24 (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 im 4))))) (neg.f64 (/.f64 3 (*.f64 (log.f64 10) (pow.f64 im 4)))))) (/.f64 1/8 (*.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (*.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 re 4)) (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))))))","(+.f64 (*.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (+.f64 (/.f64 (/.f64 1/48 (pow.f64 (log.f64 10) 3)) (pow.f64 im 6)) (fma.f64 1/48 (/.f64 (fma.f64 24 (fma.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4)))) (/.f64 -3 (*.f64 (log.f64 10) (pow.f64 im 4)))) (/.f64 (*.f64 im im) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (fma.f64 720 (fma.f64 1/6 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 6)) (fma.f64 1/48 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 im 6))))) (fma.f64 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)) 30 (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) -360) (fma.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4))))) (*.f64 im im)))) 1/720)))) (pow.f64 re 6)) (*.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 24 (fma.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4)))) (/.f64 -3 (*.f64 (log.f64 10) (pow.f64 im 4))))) (/.f64 1/8 (*.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (pow.f64 re 4)))) (fma.f64 1/2 (*.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (/.f64 (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (log.f64 10))) (pow.f64 (pow.f64 im (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (/.f64 (exp.f64 (*.f64 (/.f64 1 (log.f64 10)) (log.f64 im))) (log.f64 10))) (*.f64 (exp.f64 (*.f64 (/.f64 1 (log.f64 10)) (log.f64 im))) (+.f64 (+.f64 (*.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 3 (*.f64 (log.f64 10) (pow.f64 im 4))) (fma.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6 (/.f64 -3 (*.f64 (log.f64 10) (pow.f64 im 4)))))) (/.f64 1/8 (*.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (pow.f64 re 4)) 1) (*.f64 (+.f64 (/.f64 (/.f64 1/48 (pow.f64 (log.f64 10) 3)) (pow.f64 im 6)) (fma.f64 1/48 (*.f64 (/.f64 (+.f64 (/.f64 3 (*.f64 (log.f64 10) (pow.f64 im 4))) (fma.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6 (/.f64 -3 (*.f64 (log.f64 10) (pow.f64 im 4))))) im) (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) im)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (fma.f64 720 (fma.f64 (/.f64 1 (pow.f64 im 6)) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) 1/6) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 im 6)))) (fma.f64 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)) 30 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (fma.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 im 4)))) (*.f64 im im)) -360)))) 1/720)))) (pow.f64 re 6)))))","(exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))))","(exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10))))","(exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 10)))","(exp.f64 (/.f64 (log.f64 re) (log.f64 10)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))))","(fma.f64 1/2 (*.f64 (/.f64 (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))) (log.f64 10)) (/.f64 (*.f64 im im) (*.f64 re re))) (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 im im) (*.f64 re re)) (/.f64 (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 10))) (log.f64 10))) (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 10))))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (/.f64 (exp.f64 (/.f64 (log.f64 re) (log.f64 10))) (log.f64 10))) (exp.f64 (/.f64 (log.f64 re) (log.f64 10))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))) (/.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -3 (/.f64 (pow.f64 im 4) (log.f64 10)))))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))))) (pow.f64 re 4))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))) (log.f64 10)) (/.f64 (*.f64 im im) (*.f64 re re))) (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10))))) (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 24 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (/.f64 (*.f64 -3 (pow.f64 im 4)) (log.f64 10)))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (/.f64 (pow.f64 re 4) (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 im im) (*.f64 re re)) (/.f64 (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 10))) (log.f64 10))) (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 10)))) (*.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -3 (+.f64 (*.f64 3 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6)))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (pow.f64 re 4)) (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 10)))))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (/.f64 (exp.f64 (/.f64 (log.f64 re) (log.f64 10))) (log.f64 10))) (*.f64 (+.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) 0) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6))) (/.f64 (*.f64 1/8 (pow.f64 im 4)) (pow.f64 (log.f64 10) 2))) (pow.f64 re 4)) 1) (exp.f64 (/.f64 (log.f64 re) (log.f64 10)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10)))) (+.f64 (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (+.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -3 (/.f64 (pow.f64 im 4) (log.f64 10)))) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (*.f64 (+.f64 (*.f64 720 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)))))) (+.f64 (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 im 2)))) (*.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/48 (/.f64 (pow.f64 im 6) (pow.f64 (log.f64 10) 3)))))) (pow.f64 re 6)) (/.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -3 (/.f64 (pow.f64 im 4) (log.f64 10)))))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 10))))) (pow.f64 re 4)))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))) (log.f64 10)) (/.f64 (*.f64 im im) (*.f64 re re))) (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10))))) (+.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 24 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (/.f64 (*.f64 -3 (pow.f64 im 4)) (log.f64 10)))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (/.f64 (pow.f64 re 4) (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))))) (/.f64 (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 10)))) (/.f64 (pow.f64 re 6) (fma.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (*.f64 im im) (fma.f64 24 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (/.f64 (*.f64 -3 (pow.f64 im 4)) (log.f64 10))))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 720 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (fma.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))))) (*.f64 30 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (/.f64 (*.f64 1/48 (pow.f64 im 6)) (pow.f64 (log.f64 10) 3))))))))","(+.f64 (+.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 im im) (*.f64 re re)) (/.f64 (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 10))) (log.f64 10))) (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 10)))) (*.f64 (/.f64 (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 10))) (pow.f64 re 6)) (fma.f64 (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 (*.f64 im im) (fma.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -3 (+.f64 (*.f64 3 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6)))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 720 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))))) (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) -360) (*.f64 (*.f64 im im) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 4) -1/4)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) 30))))) (/.f64 (*.f64 1/48 (pow.f64 im 6)) (pow.f64 (log.f64 10) 3)))))) (*.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -3 (+.f64 (*.f64 3 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6)))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (pow.f64 re 4)) (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 10)))))","(+.f64 (fma.f64 1/2 (*.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (/.f64 (exp.f64 (/.f64 (log.f64 re) (log.f64 10))) (log.f64 10))) (*.f64 (+.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) 0) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6))) (/.f64 (*.f64 1/8 (pow.f64 im 4)) (pow.f64 (log.f64 10) 2))) (pow.f64 re 4)) 1) (exp.f64 (/.f64 (log.f64 re) (log.f64 10))))) (*.f64 (/.f64 (exp.f64 (/.f64 (log.f64 re) (log.f64 10))) (pow.f64 re 6)) (fma.f64 1/48 (*.f64 (*.f64 im im) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (+.f64 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) 0) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6)))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 720 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 (pow.f64 im 6) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) -360) (*.f64 (*.f64 im im) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 4) -1/4)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) 30))))) (*.f64 (/.f64 1/48 (pow.f64 (log.f64 10) 3)) (pow.f64 im 6))))))","(exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))","(exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))","(exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))))","(fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))) (/.f64 (*.f64 (log.f64 10) (*.f64 re re)) (*.f64 im im))) (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 im im) (*.f64 re re)) (/.f64 (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10))) (log.f64 10))) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10))))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (/.f64 (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10))) (log.f64 10))) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -3 (/.f64 (pow.f64 im 4) (log.f64 10)))))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))) (pow.f64 re 4)) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))))","(fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))) (/.f64 (*.f64 (log.f64 10) (*.f64 re re)) (*.f64 im im))) (+.f64 (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))) (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 24 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (/.f64 (*.f64 -3 (pow.f64 im 4)) (log.f64 10)))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (/.f64 (pow.f64 re 4) (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 im im) (*.f64 re re)) (/.f64 (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10))) (log.f64 10))) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10)))) (*.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -3 (+.f64 (*.f64 3 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6)))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (pow.f64 re 4)) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10)))))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (/.f64 (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10))) (log.f64 10))) (*.f64 (+.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) 0) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6))) (/.f64 (*.f64 1/8 (pow.f64 im 4)) (pow.f64 (log.f64 10) 2))) (pow.f64 re 4)) 1) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -3 (/.f64 (pow.f64 im 4) (log.f64 10)))))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))) (pow.f64 re 4)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (+.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4))))) (*.f64 -3 (/.f64 (pow.f64 im 4) (log.f64 10)))) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (*.f64 (+.f64 (*.f64 720 (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6)))))) (+.f64 (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (pow.f64 im 2)))) (*.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 im 6))))) (sqrt.f64 (/.f64 1 (log.f64 10))))) (*.f64 1/48 (/.f64 (pow.f64 im 6) (pow.f64 (log.f64 10) 3))))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))) (pow.f64 re 6)) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))))))","(fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))) (/.f64 (*.f64 (log.f64 10) (*.f64 re re)) (*.f64 im im))) (+.f64 (+.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 24 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (/.f64 (*.f64 -3 (pow.f64 im 4)) (log.f64 10)))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (/.f64 (pow.f64 re 4) (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10)))))) (/.f64 (fma.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (*.f64 im im) (fma.f64 24 (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))) (/.f64 (*.f64 -3 (pow.f64 im 4)) (log.f64 10))))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 720 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (fma.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 im im) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)))))) (*.f64 30 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))))))) (/.f64 (*.f64 1/48 (pow.f64 im 6)) (pow.f64 (log.f64 10) 3)))) (/.f64 (pow.f64 re 6) (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))))) (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 10))))))","(+.f64 (+.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 im im) (*.f64 re re)) (/.f64 (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10))) (log.f64 10))) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10)))) (*.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -3 (+.f64 (*.f64 3 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6)))) (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 10) 2)))) (pow.f64 re 4)) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10))))) (*.f64 (/.f64 (fma.f64 (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 (*.f64 im im) (fma.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) -3 (+.f64 (*.f64 3 (/.f64 (pow.f64 im 4) (log.f64 10))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6)))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 720 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 1/48 (*.f64 (pow.f64 im 6) (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (*.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10))))) (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) -360) (*.f64 (*.f64 im im) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 4) -1/4)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) 30))))) (/.f64 (*.f64 1/48 (pow.f64 im 6)) (pow.f64 (log.f64 10) 3)))) (pow.f64 re 6)) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10)))))","(+.f64 (*.f64 (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10))) (+.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) 0) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6))) (/.f64 (*.f64 1/8 (pow.f64 im 4)) (pow.f64 (log.f64 10) 2))) (pow.f64 re 4)) (/.f64 (fma.f64 1/48 (*.f64 (*.f64 im im) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (+.f64 (*.f64 (/.f64 (pow.f64 im 4) (log.f64 10)) 0) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 im 4)) -6)))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 720 (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 6) 120)) (fma.f64 -1/8 (/.f64 (pow.f64 im 6) (log.f64 10)) (*.f64 (pow.f64 im 6) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))))) (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) -360) (*.f64 (*.f64 im im) (fma.f64 1/8 (/.f64 (pow.f64 im 4) (log.f64 10)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 im 4) -1/4)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (pow.f64 im 6) 30))))) (*.f64 (/.f64 1/48 (pow.f64 (log.f64 10) 3)) (pow.f64 im 6)))) (pow.f64 re 6)))) (fma.f64 1/2 (*.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (/.f64 (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10))) (log.f64 10))) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 10)))))","(pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10))))","(+.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))))","(+.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 1/2 (/.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (*.f64 (log.f64 10) (*.f64 re re)) (*.f64 im im)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 im im) (log.f64 10)) (/.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 re re))) (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))))","(fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (log.f64 10)) (*.f64 (/.f64 im re) (/.f64 im re))) (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))))","(+.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 re 4)))) (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (-.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))))))))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2))))))","(+.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (pow.f64 im 4) (+.f64 (/.f64 1/8 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 re 4))) (*.f64 (*.f64 1/24 (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (*.f64 24 (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (/.f64 3 (*.f64 (log.f64 10) (pow.f64 re 4))))))) (*.f64 1/2 (/.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (*.f64 (log.f64 10) (*.f64 re re)) (*.f64 im im))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 im im) (log.f64 10)) (/.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 re re)))) (*.f64 (+.f64 (*.f64 (pow.f64 im 4) (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 24 (fma.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4)))) (/.f64 -3 (*.f64 (log.f64 10) (pow.f64 re 4))))) (/.f64 1/8 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 re 4))))) 1) (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (log.f64 10)) (*.f64 (/.f64 im re) (/.f64 im re)))) (*.f64 (+.f64 (*.f64 (pow.f64 im 4) (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (/.f64 3 (log.f64 10)) (pow.f64 re 4)) (fma.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6 (/.f64 -3 (*.f64 (log.f64 10) (pow.f64 re 4)))))) (/.f64 1/8 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 re 4))))) 1) (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (+.f64 (*.f64 1/48 (/.f64 1 (*.f64 (pow.f64 (log.f64 10) 3) (pow.f64 re 6)))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6)))) (+.f64 (*.f64 720 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6)))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 6)))))) (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4))))) (pow.f64 re 2)))))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (-.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4))))) (pow.f64 re 2)))))) (pow.f64 im 6))) (+.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 re 4)))) (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (-.f64 (*.f64 24 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 3 (/.f64 1 (*.f64 (log.f64 10) (pow.f64 re 4)))))))))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (pow.f64 im 2)) (*.f64 (log.f64 10) (pow.f64 re 2)))))))","(+.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (pow.f64 im 6) (+.f64 (/.f64 1/48 (*.f64 (pow.f64 (log.f64 10) 3) (pow.f64 re 6))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))) (fma.f64 720 (-.f64 (fma.f64 1/6 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 6))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 1 (pow.f64 re 6))))) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 6)))) (*.f64 -360 (/.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (*.f64 re re)))))) (*.f64 (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (/.f64 (-.f64 (*.f64 24 (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (/.f64 3 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 re re)))))) (fma.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 (pow.f64 im 4) (+.f64 (/.f64 1/8 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 re 4))) (*.f64 (*.f64 1/24 (sqrt.f64 (/.f64 1 (log.f64 10)))) (-.f64 (*.f64 24 (+.f64 (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (/.f64 1 (pow.f64 re 4)))))) (/.f64 3 (*.f64 (log.f64 10) (pow.f64 re 4))))))) (*.f64 1/2 (/.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (/.f64 (*.f64 (log.f64 10) (*.f64 re re)) (*.f64 im im)))))))","(+.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (*.f64 (pow.f64 im 6) (+.f64 (/.f64 1/48 (*.f64 (pow.f64 (log.f64 10) 3) (pow.f64 re 6))) (fma.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (/.f64 (fma.f64 24 (fma.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4)))) (/.f64 -3 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 re re))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (fma.f64 30 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (fma.f64 720 (fma.f64 1/6 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 6)) (fma.f64 1/48 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 re 6))))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (/.f64 (fma.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4)))) (*.f64 re re)) -360)))) 1/720))))) (*.f64 (pow.f64 im 4) (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 24 (fma.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 1/8 (*.f64 (log.f64 10) (pow.f64 re 4)))) (/.f64 -3 (*.f64 (log.f64 10) (pow.f64 re 4))))) (/.f64 1/8 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 re 4))))))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 im im) (log.f64 10)) (/.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (*.f64 re re))) (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10))))))","(+.f64 (*.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (+.f64 (+.f64 (*.f64 (pow.f64 im 6) (+.f64 (/.f64 1/48 (*.f64 (pow.f64 (log.f64 10) 3) (pow.f64 re 6))) (fma.f64 1/48 (*.f64 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 re re)) (+.f64 (/.f64 (/.f64 3 (log.f64 10)) (pow.f64 re 4)) (fma.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6 (/.f64 -3 (*.f64 (log.f64 10) (pow.f64 re 4)))))) (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 30 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (fma.f64 720 (fma.f64 (/.f64 1 (pow.f64 re 6)) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) 1/6) (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))))) (/.f64 -1/8 (*.f64 (log.f64 10) (pow.f64 re 6)))) (/.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) -360) (fma.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)))) (*.f64 re re))))))))) 1) (*.f64 (pow.f64 im 4) (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (/.f64 (/.f64 3 (log.f64 10)) (pow.f64 re 4)) (fma.f64 (/.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6 (/.f64 -3 (*.f64 (log.f64 10) (pow.f64 re 4)))))) (/.f64 1/8 (*.f64 (pow.f64 (log.f64 10) 2) (pow.f64 re 4))))))) (*.f64 1/2 (*.f64 (/.f64 (pow.f64 (pow.f64 re (sqrt.f64 (/.f64 1 (log.f64 10)))) (sqrt.f64 (/.f64 1 (log.f64 10)))) (log.f64 10)) (*.f64 (/.f64 im re) (/.f64 im re)))))","(exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))))","(exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 im)) (log.f64 10))))","(exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 im))) (log.f64 10)))","(exp.f64 (/.f64 (log.f64 im) (log.f64 10)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))) (pow.f64 re 2)) (*.f64 (log.f64 10) (pow.f64 im 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))))","(fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 im)) (log.f64 10)))) (/.f64 (*.f64 (log.f64 10) (*.f64 im im)) (*.f64 re re))) (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 im)) (log.f64 10)))))","(fma.f64 1/2 (*.f64 (/.f64 re (/.f64 (log.f64 10) re)) (/.f64 (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 im))) (log.f64 10))) (*.f64 im im))) (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 im))) (log.f64 10))))","(fma.f64 1/2 (*.f64 (/.f64 re (/.f64 (log.f64 10) re)) (/.f64 (exp.f64 (/.f64 (log.f64 im) (log.f64 10))) (*.f64 im im))) (exp.f64 (/.f64 (log.f64 im) (log.f64 10))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))) (pow.f64 re 2)) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2))) (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10))))))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))))) (pow.f64 im 4)) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))))))","(fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 im)) (log.f64 10)))) (/.f64 (*.f64 (log.f64 10) (*.f64 im im)) (*.f64 re re))) (+.f64 (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 im)) (log.f64 10)))) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2)) (*.f64 (*.f64 1/24 (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 24 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 (*.f64 1/8 (pow.f64 re 4)) (log.f64 10))) (/.f64 (*.f64 -3 (pow.f64 re 4)) (log.f64 10))))) (/.f64 (pow.f64 im 4) (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 im)) (log.f64 10))))))))","(+.f64 (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 im))) (log.f64 10))) (fma.f64 1/2 (*.f64 (/.f64 re (/.f64 (log.f64 10) re)) (/.f64 (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 im))) (log.f64 10))) (*.f64 im im))) (*.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10)) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6) (*.f64 3 (/.f64 (pow.f64 re 4) (log.f64 10)))))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2)))) (pow.f64 im 4)) (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 im))) (log.f64 10))))))","(fma.f64 1/2 (*.f64 (/.f64 re (/.f64 (log.f64 10) re)) (/.f64 (exp.f64 (/.f64 (log.f64 im) (log.f64 10))) (*.f64 im im))) (*.f64 (+.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) 0))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2)))) (pow.f64 im 4)) 1) (exp.f64 (/.f64 (log.f64 im) (log.f64 10)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))) (pow.f64 re 2)) (*.f64 (log.f64 10) (pow.f64 im 2)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2))) (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10))))))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10))))) (pow.f64 im 4)) (+.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 10)))) (+.f64 (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (+.f64 (*.f64 24 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 re 2)))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))) (+.f64 (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 re 2)))) (*.f64 720 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))))))) (*.f64 1/48 (/.f64 (pow.f64 re 6) (pow.f64 (log.f64 10) 3)))))) (pow.f64 im 6)))))","(fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 im)) (log.f64 10)))) (/.f64 (*.f64 (log.f64 10) (*.f64 im im)) (*.f64 re re))) (+.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 im)) (log.f64 10)))) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2)) (*.f64 (*.f64 1/24 (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 24 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 (*.f64 1/8 (pow.f64 re 4)) (log.f64 10))) (/.f64 (*.f64 -3 (pow.f64 re 4)) (log.f64 10))))) (/.f64 (pow.f64 im 4) (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 im)) (log.f64 10))))))) (/.f64 (exp.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 im)) (log.f64 10)))) (/.f64 (pow.f64 im 6) (fma.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (*.f64 re re) (fma.f64 24 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 (*.f64 1/8 (pow.f64 re 4)) (log.f64 10))) (/.f64 (*.f64 -3 (pow.f64 re 4)) (log.f64 10))))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (fma.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 (*.f64 1/8 (pow.f64 re 4)) (log.f64 10))))) (*.f64 720 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (pow.f64 re 6)))))))) (/.f64 (*.f64 1/48 (pow.f64 re 6)) (pow.f64 (log.f64 10) 3))))))))","(+.f64 (+.f64 (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 im))) (log.f64 10))) (fma.f64 1/2 (*.f64 (/.f64 re (/.f64 (log.f64 10) re)) (/.f64 (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 im))) (log.f64 10))) (*.f64 im im))) (*.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10)) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6) (*.f64 3 (/.f64 (pow.f64 re 4) (log.f64 10)))))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2)))) (pow.f64 im 4)) (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 im))) (log.f64 10)))))) (*.f64 (/.f64 (exp.f64 (/.f64 (neg.f64 (neg.f64 (log.f64 im))) (log.f64 10))) (pow.f64 im 6)) (fma.f64 1/48 (*.f64 (*.f64 re re) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (fma.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10)) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6) (*.f64 3 (/.f64 (pow.f64 re 4) (log.f64 10))))))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (fma.f64 720 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120))))) (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))))))))) (*.f64 1/48 (/.f64 (pow.f64 re 6) (pow.f64 (log.f64 10) 3)))))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 re (/.f64 (log.f64 10) re)) (/.f64 (exp.f64 (/.f64 (log.f64 im) (log.f64 10))) (*.f64 im im))) (*.f64 (+.f64 (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) 0))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2)))) (pow.f64 im 4)) 1) (exp.f64 (/.f64 (log.f64 im) (log.f64 10))))) (*.f64 (/.f64 (exp.f64 (/.f64 (log.f64 im) (log.f64 10))) (pow.f64 im 6)) (fma.f64 1/48 (*.f64 (*.f64 re re) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) 0)))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (fma.f64 720 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 (pow.f64 re 6) 120) 1/720)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 (*.f64 re re) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)))) -360))))) (*.f64 (/.f64 1/48 (pow.f64 (log.f64 10) 3)) (pow.f64 re 6))))))","(exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))","(exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))","(exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))) (*.f64 (log.f64 10) (pow.f64 im 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (log.f64 10)) (/.f64 (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))) (*.f64 im im))) (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10)))) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2))) (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10))))))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))) (pow.f64 im 4)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))) (*.f64 (log.f64 10) (pow.f64 im 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (log.f64 10)) (/.f64 (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))) (*.f64 im im))) (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2)) (*.f64 (*.f64 1/24 (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 24 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 (*.f64 1/8 (pow.f64 re 4)) (log.f64 10))) (/.f64 (*.f64 -3 (pow.f64 re 4)) (log.f64 10))))) (/.f64 (pow.f64 im 4) (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10)))) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10)))) (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10)) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6) (*.f64 3 (/.f64 (pow.f64 re 4) (log.f64 10)))))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2)))) (/.f64 (pow.f64 im 4) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10))))))","(+.f64 (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10))) (*.f64 (/.f64 (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10))) (*.f64 im im)) (+.f64 (*.f64 1/2 (/.f64 re (/.f64 (log.f64 10) re))) (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) 0))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2)))) (*.f64 im im)))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))) (+.f64 (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (+.f64 (*.f64 24 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 re 2)))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6))) (+.f64 (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))) (pow.f64 re 2)))) (*.f64 720 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10))) (+.f64 (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)))))))))) (*.f64 1/48 (/.f64 (pow.f64 re 6) (pow.f64 (log.f64 10) 3)))))) (pow.f64 im 6)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2))) (*.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 24 (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10))))) (*.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10))))))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))) (pow.f64 im 4)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))) (*.f64 (log.f64 10) (pow.f64 im 2)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))))))","(+.f64 (+.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (log.f64 10)) (/.f64 (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))) (*.f64 im im))) (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2)) (*.f64 (*.f64 1/24 (sqrt.f64 (/.f64 1 (log.f64 10)))) (fma.f64 24 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 (*.f64 1/8 (pow.f64 re 4)) (log.f64 10))) (/.f64 (*.f64 -3 (pow.f64 re 4)) (log.f64 10))))) (/.f64 (pow.f64 im 4) (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))))) (/.f64 (exp.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10)))) (/.f64 (pow.f64 im 6) (fma.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (*.f64 (*.f64 re re) (fma.f64 24 (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 (*.f64 1/8 (pow.f64 re 4)) (log.f64 10))) (/.f64 (*.f64 -3 (pow.f64 re 4)) (log.f64 10))))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (fma.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (/.f64 (*.f64 1/8 (pow.f64 re 4)) (log.f64 10))))) (*.f64 720 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120)) (*.f64 (*.f64 1/48 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3)))) (pow.f64 re 6)))))))) (/.f64 (*.f64 1/48 (pow.f64 re 6)) (pow.f64 (log.f64 10) 3)))))))","(+.f64 (+.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (*.f64 (log.f64 10) (*.f64 im im))) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10)))) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10)))) (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10)) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6) (*.f64 3 (/.f64 (pow.f64 re 4) (log.f64 10)))))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2)))) (/.f64 (pow.f64 im 4) (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10)))))) (*.f64 (/.f64 (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10))) (pow.f64 im 6)) (fma.f64 1/48 (*.f64 (*.f64 re re) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (fma.f64 -3 (/.f64 (pow.f64 re 4) (log.f64 10)) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6) (*.f64 3 (/.f64 (pow.f64 re 4) (log.f64 10))))))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (fma.f64 720 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (*.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (pow.f64 re 6) 120))))) (*.f64 -360 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 re re) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 1/8 (/.f64 (pow.f64 re 4) (log.f64 10)))))))))) (*.f64 1/48 (/.f64 (pow.f64 re 6) (pow.f64 (log.f64 10) 3)))))))","(+.f64 (+.f64 (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10))) (*.f64 (/.f64 (exp.f64 (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 10))) (*.f64 im im)) (+.f64 (*.f64 1/2 (/.f64 re (/.f64 (log.f64 10) re))) (/.f64 (fma.f64 1/24 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) 0))) (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 10) 2)))) (*.f64 im im))))) (/.f64 (fma.f64 1/48 (*.f64 (*.f64 re re) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (+.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) -6) (*.f64 (/.f64 (pow.f64 re 4) (log.f64 10)) 0)))) (fma.f64 1/720 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (fma.f64 30 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (fma.f64 720 (fma.f64 -1/8 (/.f64 (pow.f64 re 6) (log.f64 10)) (fma.f64 1/48 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (log.f64 10) 3))) (pow.f64 re 6)) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 (pow.f64 re 6) 120) 1/720)))) (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (*.f64 (*.f64 (*.f64 re re) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (log.f64 10))) (pow.f64 re 4)) (*.f64 (/.f64 1/8 (log.f64 10)) (pow.f64 re 4)))) -360))))) (*.f64 (/.f64 1/48 (pow.f64 (log.f64 10) 3)) (pow.f64 re 6)))) (*.f64 (pow.f64 im 6) (exp.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 10))))))"]],"stop":[["node limit",1]],"time":58.363037109375,"type":"simplify"},{"compiler":[[8773,7602]],"time":112.175048828125,"type":"eval"},{"alts":[["(/.f64 (/.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) (pow.f64 (log.f64 10) 1/4)) (pow.f64 (log.f64 10) 1/4))","fresh",0.4994125976844202],["(log.f64 (pow.f64 (*.f64 (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2))) (pow.f64 (log.f64 10) -1/2)))","fresh",0.12109375],["(log.f64 (pow.f64 (expm1.f64 (log1p.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (pow.f64 (log.f64 10) -1/2)))","fresh",0.2578125],["(+.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))))) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2)))))","fresh",0.30859375],["(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))","done",0.37728500976844204]],"compiler":[[20,18],[27,21],[18,16],[48,40],[31,26]],"count":[[139,5]],"kept":[{"done":[2,1],"fresh":[3,2],"new":[133,2],"picked":[1,0]}],"min-error":[0],"time":18.22900390625,"type":"prune"},{"accuracy":[0.12109375],"baseline":[0.12109375],"branch":[["re",0.12109375,1],["im",0.12109375,1],["(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 10))",0.12109375,1],["(log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im))))",0.12109375,1],["(sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))",0.12109375,1],["(+.f64 (*.f64 re re) (*.f64 im im))",0.12109375,1],["(*.f64 re re)",0.12109375,1],["(*.f64 im im)",0.12109375,1]],"compiler":[[3,2],[3,2],[14,10],[11,7],[10,6],[9,5],[5,3],[5,3],[327,225]],"count":[[18,1]],"inputs":[["(log.f64 (pow.f64 (*.f64 (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2))) (pow.f64 (log.f64 10) -1/2)))","(log.f64 (pow.f64 (expm1.f64 (log1p.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)))) (pow.f64 (log.f64 10) -1/2)))","(log.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2)))","(+.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))) (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2))))) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (log.f64 10) -1/2)))))","(/.f64 (*.f64 (*.f64 (pow.f64 (log.f64 10) -1/2) (log.f64 (hypot.f64 re im))) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))) (*.f64 (sqrt.f64 (log.f64 10)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))","(/.f64 (/.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))) (pow.f64 (log.f64 10) 1/4)) (pow.f64 (log.f64 10) 1/4))","(/.f64 (pow.f64 (log.f64 10) -1/2) (/.f64 (sqrt.f64 (log.f64 10)) (log.f64 (hypot.f64 re im))))","(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 10) -1/2))))))","(expm1.f64 (log1p.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))","(*.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) 1) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (log.f64 10)))","(neg.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 1/10)))","(*.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))","(*.f64 (/.f64 1 (sqrt.f64 (log.f64 10))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 10))))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) 1) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (log.f64 10)))","(pow.f64 (/.f64 (log.f64 10) (log.f64 (hypot.f64 re im))) -1)","(*.f64 (pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))) 2) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))))","(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 10))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 10))"]],"link":["."],"name":["math.log10 on complex, real part"],"oracle":[43.47245163559991],"outputs":[["(log.f64 (pow.f64 (*.f64 (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2))) (pow.f64 (log.f64 10) -1/2)))"]],"time":47.2119140625,"times":[["re",6.197998046875],["im",6.041015625],["(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 10))",5.0927734375],["(log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im))))",5.14599609375],["(sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))",4.883056640625],["(+.f64 (*.f64 re re) (*.f64 im im))",4.998046875],["(*.f64 re re)",4.442138671875],["(*.f64 im im)",4.068115234375]],"type":"regimes"},{"compiler":[[27,21]],"egraph":[[0,13,40,1.8417e-5]],"inputs":[["(log.f64 (pow.f64 (*.f64 (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2))) (pow.f64 (log.f64 10) -1/2)))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (pow.f64 (*.f64 (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2)) (pow.f64 (sqrt.f64 (hypot.f64 re im)) (pow.f64 (log.f64 10) -1/2))) (pow.f64 (log.f64 10) -1/2)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.53515625,"type":"simplify"},{"time":0.016845703125,"type":"soundness"},{"compiler":[[27,21],[27,21],[27,21]],"remove-preprocessing":[["(sort re im)"]],"time":16.283203125,"type":"end"}]