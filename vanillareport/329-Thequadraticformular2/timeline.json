[{"compiler":[[21,15]],"method":["search"],"sampling":[[12,0.29058954069728316,0.52852191630177,0.1808885430009468],[11,0.22037998724022145,0.629935715739748,0.1496842970200305],[10,0.15602122990458156,0.7098965960658461,0.13408217402957234],[9,0.10141379943797801,0.8113103955038241,0.08727580505819788],[8,0.062408491961832624,0.8737188874656567,0.06387262057251064],[7,0.0,0.9361273794274894,0.06387262057251064],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":143.1669921875,"type":"analyze"},{"outcomes":[["body",256,"invalid",84.45458984375,1595],["body",4096,"valid",93.83349609375,389],["body",1024,"valid",112.837890625,780],["body",512,"valid",37.016357421875,374],["body",256,"valid",307.935302734375,5562],["body",2048,"valid",220.55224609375,1151]],"time":865.697021484375,"type":"sample"},{"compiler":[[20,14]],"egraph":[[0,3,3,2.333e-6],[6,6572,88,0.038776667],[5,2849,88,0.023670917],[4,1483,88,0.009808708999999999],[3,784,88,0.0043879999999999995],[2,308,96,0.001750625],[1,115,96,0.000585667],[0,39,104,0.00016775]],"inputs":[["0","1","2"],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 4 (*.f64 b c))))) (*.f64 2 b))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 c a))))) (*.f64 2 c))","(/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 4 (*.f64 a b))))) (*.f64 2 a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 a 2))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (*.f64 a 2))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 a 2))","(*.f64 -1/2 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) a))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))))","(*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (/.f64 -1/2 a))","(/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 4 (*.f64 b c))))) (*.f64 2 b))","(/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 4 (*.f64 b c))))) (*.f64 b 2))","(/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (fma.f64 a a (*.f64 (*.f64 b c) -4)))) (*.f64 b 2))","(*.f64 -1/2 (/.f64 (+.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))) b))","(*.f64 (/.f64 -1/2 b) (+.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))))","(*.f64 (+.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))) (/.f64 -1/2 b))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 c a))))) (*.f64 2 c))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 c 2))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (*.f64 c 2))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 c 2))","(*.f64 -1/2 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) c))","(/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 4 (*.f64 a b))))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 4 (*.f64 b a))))) (*.f64 a 2))","(/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (fma.f64 c c (*.f64 (*.f64 b a) -4)))) (*.f64 a 2))","(*.f64 -1/2 (/.f64 (+.f64 c (sqrt.f64 (fma.f64 c c (*.f64 (*.f64 b a) -4)))) a))","(*.f64 (/.f64 -1/2 a) (+.f64 c (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c)))))","(*.f64 (+.f64 c (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c)))) (/.f64 -1/2 a))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":64.114990234375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[14,7713,22,0.089216834],[13,7681,22,0.081943792],[12,7586,22,0.07357425100000001],[11,7460,22,0.06516187600000001],[10,6487,22,0.056731334],[9,4757,22,0.044423167],[8,3697,22,0.033282917],[7,3006,22,0.023553167],[6,1793,22,0.01511475],[5,840,22,0.006971625],[4,461,22,0.003100958],[3,259,22,0.001471875],[2,100,24,0.000657083],[1,38,24,0.000240833],[0,15,26,7.8875e-5]],"inputs":[["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 -4 (*.f64 a c))))) (*.f64 a 2))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (*.f64 a 2))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 a 2))","(*.f64 -1/2 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) a))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))","(*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (/.f64 -1/2 a))","(*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (/.f64 -1/2 a))"]],"stop":[["node limit",1]],"time":101.296142578125,"type":"simplify"},{"compiler":[[35,23]],"time":0.488037109375,"type":"eval"},{"alts":[["(*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (/.f64 -1/2 a))","fresh",34.063683985282246],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","next",34.0148828873389]],"compiler":[[18,12],[20,14],[18,12],[20,14]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[33.977746485282246],"time":1.52294921875,"type":"prune"},{"compiler":[[73,32]],"locations":[["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))",0.08984375,true],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))",0.6361625099398125,true],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))",0.8046875000000001,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))",24.12928135050271,true]],"time":13.87890625,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","c","-inf",2.77490234375],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","c","inf",0.583984375],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","c","0",0.31005859375],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","a","-inf",0.4560546875],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","a","inf",0.739013671875],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","a","0",0.282958984375],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","b","-inf",0.462890625],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","b","inf",0.385986328125],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","b","0",0.98095703125],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","c","-inf",0.364013671875],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","c","inf",0.5830078125],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","c","0",0.220947265625],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","a","-inf",0.35009765625],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","a","inf",0.40185546875],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","a","0",0.24609375],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","b","-inf",0.4228515625],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","b","inf",0.280029296875],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","b","0",0.3330078125],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","c","-inf",0.203125],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","c","inf",0.286865234375],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","c","0",0.305908203125],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","a","-inf",0.203125],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","a","inf",0.300048828125],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","a","0",0.3330078125],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","b","-inf",0.166015625],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","b","inf",0.277099609375],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","b","0",0.31201171875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","c","-inf",0.55810546875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","c","inf",0.65087890625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","c","0",0.3720703125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","a","-inf",0.4140625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","a","inf",0.591064453125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","a","0",0.404052734375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","b","-inf",0.3359375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","b","inf",0.47900390625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","b","0",0.921142578125]],"time":17.822998046875,"type":"series"},{"count":[[4,394]],"egraph":[[2,5126,59,0.034013542],[1,347,62,0.0068685000000000005],[0,15,74,0.000419583]],"inputs":[["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2))) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) 1/2) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64))) (sqrt.f64 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16))) (hypot.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 (*.f64 a c) -4)) b)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a c) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4)) (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 4 (*.f64 a c) (*.f64 b b)) (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (fma.f64 4 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64))) (neg.f64 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16))) (neg.f64 (fma.f64 4 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 a c) -4) 3)) (+.f64 (pow.f64 b 4) (-.f64 (*.f64 (*.f64 (*.f64 a c) -4) (*.f64 (*.f64 a c) -4)) (*.f64 (*.f64 b b) (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3) (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 3)) (+.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2) (-.f64 (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (*.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (*.f64 (*.f64 (*.f64 a c) -4) (*.f64 (*.f64 a c) -4))) (-.f64 (*.f64 b b) (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))) (-.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (pow.f64 (pow.f64 (exp.f64 c) a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 b) b) (+.f64 1 (expm1.f64 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (+.f64 1 (expm1.f64 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (exp.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 b) b) (/.f64 1 (pow.f64 (pow.f64 (exp.f64 c) a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (/.f64 1 (pow.f64 (pow.f64 (exp.f64 c) a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (exp.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (exp.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (*.f64 a c) -4)) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 c) a) 4)) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (*.f64 a c) -4)) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 c) a) 4)) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 (*.f64 a (neg.f64 c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 a c) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (sqrt.f64 (*.f64 a c))) (neg.f64 (*.f64 2 (sqrt.f64 (*.f64 a c)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (neg.f64 c)) 4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 4 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 a) (neg.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 a c) -4)) (cbrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (*.f64 (*.f64 a c) -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))) (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (*.f64 a c) -4)) (sqrt.f64 (*.f64 (*.f64 a c) -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 2 (sqrt.f64 (*.f64 a c)))) (*.f64 2 (sqrt.f64 (*.f64 a c))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16))) (cbrt.f64 (*.f64 4 (*.f64 a c))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 4 a)) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 c) a (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (*.f64 a c)) 2)) (cbrt.f64 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (sqrt.f64 (*.f64 a c))) (sqrt.f64 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3)) (fma.f64 b b (-.f64 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (exp.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (/.f64 1 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (*.f64 (exp.f64 b) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (neg.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (/.f64 1/2 a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b (/.f64 1/2 a)) (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) 2) (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) (sqrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1/2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) a) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) 1) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 1) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (*.f64 a 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (cbrt.f64 (*.f64 4 (*.f64 a a)))) (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (*.f64 a 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 a 2))) (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (sqrt.f64 (*.f64 a 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (sqrt.f64 (*.f64 a 2))) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (*.f64 a 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (/.f64 a (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3) (pow.f64 (*.f64 a 2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (/.f64 1/2 a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b (/.f64 1/2 a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b (/.f64 1/2 a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 1/2 a))) (cbrt.f64 (*.f64 b (/.f64 1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 1/2 a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 b (/.f64 1/2 a))) (sqrt.f64 (*.f64 b (/.f64 1/2 a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (/.f64 b 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 b (cbrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a 2))) (/.f64 b (sqrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) 2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 a) (/.f64 b 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a 2)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a 2)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 b (cbrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a 2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a 2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (sqrt.f64 (*.f64 a 2))) (/.f64 b (sqrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))))"]],"rules":[["egg-rr",65],["egg-rr",108],["egg-rr",192],["egg-rr",29]],"stop":[["node limit",1]],"time":84.97509765625,"type":"rewrite"},{"count":[[478,447]],"egraph":[[3,5079,1433,0.021135792],[2,973,1516,0.008537333000000001],[1,288,1609,0.0020799160000000002],[0,91,1703,0.000503458]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 (/.f64 a b) c) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) b)","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3)) (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) b))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (neg.f64 b))","(-.f64 (*.f64 (/.f64 c (/.f64 b a)) 2) b)","(-.f64 (/.f64 (*.f64 a 2) (/.f64 b c)) b)","(-.f64 (*.f64 (/.f64 2 b) (*.f64 c a)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b)))","(-.f64 (*.f64 2 (+.f64 (/.f64 c (/.f64 b a)) (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))))) b)","(-.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))) b)","(-.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) 4 (-.f64 (*.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c)))) b)))","(fma.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4 (-.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))) b))","(-.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))) (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 (/.f64 a b) c) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) b)","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3)) (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) b))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 (/.f64 a b) c) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) b)","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3)) (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (*.f64 b -2))","(fma.f64 b -2 (/.f64 (*.f64 a 2) (/.f64 b c)))","(fma.f64 b -2 (*.f64 (/.f64 2 b) (*.f64 c a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (*.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))))","(fma.f64 b -2 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (fma.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))) (fma.f64 b -2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4)))","(+.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))) (fma.f64 b -2 (*.f64 (/.f64 4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 (*.f64 -2 a) (/.f64 b c))","(*.f64 (/.f64 -2 b) (*.f64 c a))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (/.f64 c (/.f64 b a)) (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(*.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))))","(*.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 -2 (*.f64 c c)) (*.f64 a a)) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (pow.f64 b 7)) (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -10) (pow.f64 b 7)))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (*.f64 b -2))","(fma.f64 b -2 (/.f64 (*.f64 a 2) (/.f64 b c)))","(fma.f64 b -2 (*.f64 (/.f64 2 b) (*.f64 c a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (*.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))))","(fma.f64 b -2 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (fma.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))) (fma.f64 b -2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4)))","(+.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))) (fma.f64 b -2 (*.f64 (/.f64 4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (*.f64 b -2))","(fma.f64 b -2 (/.f64 (*.f64 a 2) (/.f64 b c)))","(fma.f64 b -2 (*.f64 (/.f64 2 b) (*.f64 c a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (*.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))))","(fma.f64 b -2 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (fma.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))) (fma.f64 b -2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4)))","(+.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))) (fma.f64 b -2 (*.f64 (/.f64 4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -1 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (neg.f64 b) a) (/.f64 c b))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (+.f64 (/.f64 (neg.f64 b) a) (/.f64 c b)) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)))","(-.f64 (+.f64 (/.f64 c b) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))) (/.f64 b a))","(-.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (+.f64 (/.f64 c b) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (/.f64 (neg.f64 b) a))))","(+.f64 (/.f64 c b) (+.f64 (-.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (-.f64 (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b)) (/.f64 b a)))","(fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (-.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)) (/.f64 b a)))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(/.f64 (neg.f64 c) b)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(*.f64 -1 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (/.f64 c b)))","(-.f64 (/.f64 (neg.f64 c) b) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(neg.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))","(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (-.f64 (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 c b)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(-.f64 (/.f64 (pow.f64 c 3) (/.f64 (/.f64 (pow.f64 b 5) (*.f64 a a)) -2)) (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))","(-.f64 (*.f64 a (-.f64 (/.f64 (*.f64 -2 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) a)) (/.f64 c (/.f64 (pow.f64 b 3) c)))) (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 -2 (*.f64 c c)) (*.f64 a a)) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (-.f64 (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 c b))) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(fma.f64 (/.f64 -1/4 (pow.f64 b 7)) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) a) (-.f64 (/.f64 (pow.f64 c 3) (/.f64 (/.f64 (pow.f64 b 5) (*.f64 a a)) -2)) (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))))","(-.f64 (fma.f64 -2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -5) (*.f64 a (pow.f64 b 7)))) (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))","(*.f64 -1 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (neg.f64 b) a) (/.f64 c b))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (+.f64 (/.f64 (neg.f64 b) a) (/.f64 c b)) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)))","(-.f64 (+.f64 (/.f64 c b) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))) (/.f64 b a))","(-.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (+.f64 (/.f64 c b) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (/.f64 (neg.f64 b) a))))","(+.f64 (/.f64 c b) (+.f64 (-.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (-.f64 (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b)) (/.f64 b a)))","(fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (-.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)) (/.f64 b a)))","(*.f64 -1 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (neg.f64 b) a) (/.f64 c b))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (+.f64 (/.f64 (neg.f64 b) a) (/.f64 c b)) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)))","(-.f64 (+.f64 (/.f64 c b) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))) (/.f64 b a))","(-.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (+.f64 (/.f64 c b) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (/.f64 (neg.f64 b) a))))","(+.f64 (/.f64 c b) (+.f64 (-.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (-.f64 (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b)) (/.f64 b a)))","(fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (-.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)) (/.f64 b a)))"]],"stop":[["node limit",1]],"time":54.80908203125,"type":"simplify"},{"compiler":[[12736,7125]],"time":118.8759765625,"type":"eval"},{"alts":[["(/.f64 (neg.f64 b) a)","fresh",42.696244571949826],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (*.f64 a c)) 2)) (cbrt.f64 (*.f64 a c)) (*.f64 b b)))) (*.f64 2 a))","fresh",34.046796656875784],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","fresh",34.13146136783383],["(*.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))","fresh",47.72523078696411],["(/.f64 (/.f64 (neg.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 2 a))","fresh",47.5824726299316],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","next",33.99581671392451],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",50.416469274163745],["(expm1.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))","fresh",52.00062370746032],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a))","fresh",47.71513327706766],["(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","fresh",42.893314866714526],["(/.f64 (neg.f64 c) b)","fresh",40.88560856170871],["(pow.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 3) 1/3)","fresh",59.38397246314769],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",42.832209063377846]],"compiler":[[7,5],[27,17],[21,15],[32,22],[31,19],[19,13],[14,10],[19,14],[32,22],[16,10],[7,5],[21,16],[10,6],[7,5],[27,17],[21,15],[32,22],[31,19],[19,13],[14,10],[19,14],[32,22],[16,10],[7,5],[21,16],[10,6]],"count":[[449,13]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[447,13],"picked":[1,0]}],"min-error":[4.933209464644097],"time":128.155029296875,"type":"prune"},{"compiler":[[64,31]],"locations":[["(fma.f64 (*.f64 -4 c) a (*.f64 b b))",0.0078125,true],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))",0.08984375,true],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b))))",0.6361625099398125,true],["(sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))",24.12928135050271,true]],"time":13.823974609375,"type":"localize"},{"count":[[4,84]],"series":[["(fma.f64 (*.f64 -4 c) a (*.f64 b b))","b","-inf",0.16015625],["(fma.f64 (*.f64 -4 c) a (*.f64 b b))","b","inf",0.149169921875],["(fma.f64 (*.f64 -4 c) a (*.f64 b b))","b","0",0.2451171875],["(fma.f64 (*.f64 -4 c) a (*.f64 b b))","a","-inf",0.27099609375],["(fma.f64 (*.f64 -4 c) a (*.f64 b b))","a","inf",0.2490234375],["(fma.f64 (*.f64 -4 c) a (*.f64 b b))","a","0",0.23291015625],["(fma.f64 (*.f64 -4 c) a (*.f64 b b))","c","-inf",0.2529296875],["(fma.f64 (*.f64 -4 c) a (*.f64 b b))","c","inf",0.264892578125],["(fma.f64 (*.f64 -4 c) a (*.f64 b b))","c","0",0.239013671875],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","a","-inf",0.318115234375],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","a","inf",0.31982421875],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","a","0",0.18798828125],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","c","-inf",0.285888671875],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","c","inf",0.26904296875],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","c","0",0.203857421875],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","b","-inf",0.234130859375],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","b","inf",0.222900390625],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","b","0",0.23388671875],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b))))","a","-inf",0.25],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b))))","a","inf",0.277099609375],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b))))","a","0",0.18701171875],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b))))","c","-inf",0.264892578125],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b))))","c","inf",0.254150390625],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b))))","c","0",0.2041015625],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b))))","b","-inf",0.23388671875],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b))))","b","inf",0.2099609375],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b))))","b","0",0.2109375],["(sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))","b","-inf",0.199951171875],["(sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))","b","inf",0.2099609375],["(sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))","b","0",0.31103515625],["(sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))","a","-inf",0.27392578125],["(sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))","a","inf",0.281005859375],["(sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))","a","0",0.2119140625],["(sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))","c","-inf",0.300048828125],["(sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))","c","inf",0.30908203125],["(sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))","c","0",0.288818359375]],"time":9.280029296875,"type":"series"},{"count":[[4,250]],"egraph":[[2,4302,59,0.029917917000000002],[1,305,62,0.005838333],[0,14,66,0.000383833]],"inputs":[["(sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))","(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b))))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) 2) 1/2) (pow.f64 (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (*.f64 (sqrt.f64 (*.f64 -4 c)) (sqrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 c a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 (sqrt.f64 (*.f64 -4 c)) (sqrt.f64 a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))) (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 -4 (*.f64 c a) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (/.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 -4 (*.f64 c a) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b)))) (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 c a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 3/2)) (fma.f64 b b (fma.f64 -4 (*.f64 c a) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 -4 (*.f64 c a) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 c a) (*.f64 b b)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 3)) (fma.f64 b b (-.f64 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (*.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))) (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 b b (fma.f64 -4 (*.f64 c a) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b)))) (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 c a) (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (/.f64 1 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (*.f64 (exp.f64 b) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1 (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1 (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1 (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4) (neg.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 -4 (*.f64 c a) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 -4 (*.f64 c a) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 -4 (*.f64 c a) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (/.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b)) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (/.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (/.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b)) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))) (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (sqrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4)) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4)) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4)) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (/.f64 1/2 a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (/.f64 1/2 a))) (cbrt.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (/.f64 1/2 a))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (/.f64 1/2 a)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b (/.f64 1/2 a)) (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))) (sqrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (*.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (/.f64 1 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1/2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 a a))) (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (sqrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) a) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) a) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) 1) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 1) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (sqrt.f64 (+.f64 a a))) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (sqrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (/.f64 a (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 3) (pow.f64 (+.f64 a a) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 2 (/.f64 a (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) 3) (pow.f64 (+.f64 a a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (/.f64 1/2 a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b (/.f64 1/2 a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b (/.f64 1/2 a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 1/2 a))) (cbrt.f64 (*.f64 b (/.f64 1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 1/2 a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 b (/.f64 1/2 a))) (sqrt.f64 (*.f64 b (/.f64 1/2 a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (/.f64 b 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) 2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 a) (/.f64 b 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (+.f64 a a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (+.f64 a a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (/.f64 b (cbrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (/.f64 b (cbrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 a a))) (/.f64 b (sqrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (+.f64 a a))) (/.f64 (cbrt.f64 b) (sqrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (+.f64 a a))) (/.f64 (sqrt.f64 b) (sqrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (sqrt.f64 (+.f64 a a))) (/.f64 b (sqrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (/.f64 1/2 a))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 -4 (*.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (*.f64 c a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -4 (*.f64 c a) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -4 (*.f64 c a)) 1) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)))) (cbrt.f64 (exp.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -4 (*.f64 c a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -4 (*.f64 c a) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (pow.f64 (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) 2) (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4) (*.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4) 3) (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -4 (*.f64 c a)) 3) (pow.f64 (*.f64 b b) 3)) (fma.f64 (*.f64 -4 (*.f64 c a)) (*.f64 -4 (*.f64 c a)) (-.f64 (pow.f64 b 4) (*.f64 (*.f64 -4 (*.f64 c a)) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 -4 (*.f64 c a)) (*.f64 -4 (*.f64 c a))) (pow.f64 b 4)) (fma.f64 -4 (*.f64 c a) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 -4 (*.f64 c a))) (exp.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 -4 (*.f64 c a))) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 b b)) (exp.f64 (*.f64 -4 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (exp.f64 (*.f64 -4 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -4 (*.f64 c a))) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -4 (*.f64 c a) (*.f64 b b))) 1))))))"]],"rules":[["egg-rr",37],["egg-rr",70],["egg-rr",113],["egg-rr",30]],"stop":[["node limit",1]],"time":69.205810546875,"type":"rewrite"},{"count":[[334,303]],"egraph":[[3,5087,1433,0.0214935],[2,973,1516,0.008568041],[1,288,1609,0.002091625],[0,91,1703,0.000508708]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(fma.f64 -2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) b)","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 b (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(fma.f64 -2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) b)","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 b (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(fma.f64 -2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) b)","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 b (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (neg.f64 b))","(-.f64 (*.f64 (*.f64 (/.f64 c b) a) 2) b)","(-.f64 (*.f64 (*.f64 a (/.f64 c b)) 2) b)","(-.f64 (/.f64 c (/.f64 (/.f64 b a) 2)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b)))","(-.f64 (*.f64 2 (+.f64 (*.f64 (/.f64 c b) a) (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)))) b)","(-.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))) b)","(-.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) 4 (-.f64 (/.f64 (*.f64 (*.f64 2 (*.f64 c c)) (*.f64 a a)) (pow.f64 b 3)) b)))","(fma.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4 (-.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))) b))","(-.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))) (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (*.f64 b -2))","(fma.f64 b -2 (*.f64 (*.f64 a (/.f64 c b)) 2))","(fma.f64 b -2 (/.f64 c (/.f64 (/.f64 b a) 2)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (/.f64 (*.f64 (*.f64 2 (*.f64 c c)) (*.f64 a a)) (pow.f64 b 3))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))))","(fma.f64 b -2 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (fma.f64 2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))) (fma.f64 b -2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4)))","(+.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))) (fma.f64 b -2 (*.f64 (/.f64 4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(*.f64 -2 (*.f64 (/.f64 c b) a))","(*.f64 (/.f64 c b) (*.f64 -2 a))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (*.f64 (/.f64 c b) a) (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a))))","(*.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))))","(*.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (pow.f64 b 7)) (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -10) (pow.f64 b 7)))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (*.f64 b -2))","(fma.f64 b -2 (*.f64 (*.f64 a (/.f64 c b)) 2))","(fma.f64 b -2 (/.f64 c (/.f64 (/.f64 b a) 2)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (/.f64 (*.f64 (*.f64 2 (*.f64 c c)) (*.f64 a a)) (pow.f64 b 3))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))))","(fma.f64 b -2 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (fma.f64 2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))) (fma.f64 b -2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4)))","(+.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))) (fma.f64 b -2 (*.f64 (/.f64 4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (*.f64 b -2))","(fma.f64 b -2 (*.f64 (*.f64 a (/.f64 c b)) 2))","(fma.f64 b -2 (/.f64 c (/.f64 (/.f64 b a) 2)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (/.f64 (*.f64 (*.f64 2 (*.f64 c c)) (*.f64 a a)) (pow.f64 b 3))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))))","(fma.f64 b -2 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (fma.f64 2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))) (fma.f64 b -2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4)))","(+.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))) (fma.f64 b -2 (*.f64 (/.f64 4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (neg.f64 (/.f64 b a)) (/.f64 c b))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (+.f64 (neg.f64 (/.f64 b a)) (/.f64 c b)) (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)))","(+.f64 (-.f64 (/.f64 c b) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)) (/.f64 b a))","(fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (+.f64 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)) (/.f64 c b)) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (neg.f64 (/.f64 b a))))","(+.f64 (/.f64 c b) (+.f64 (-.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b))) (/.f64 b a))","(fma.f64 2 (*.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) a)) a) (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (-.f64 (/.f64 c b) (/.f64 b a))))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(*.f64 -1 (+.f64 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)) (/.f64 c b)))","(-.f64 (neg.f64 (/.f64 c b)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(neg.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))","(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (-.f64 (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 c b)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(-.f64 (/.f64 (pow.f64 c 3) (/.f64 (/.f64 (pow.f64 b 5) (*.f64 a a)) -2)) (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))","(-.f64 (*.f64 a (-.f64 (/.f64 (*.f64 -2 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) a)) (/.f64 (*.f64 c c) (pow.f64 b 3)))) (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)) (fma.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (-.f64 (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 c b))) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(fma.f64 (/.f64 -1/4 (pow.f64 b 7)) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) a) (-.f64 (/.f64 (pow.f64 c 3) (/.f64 (/.f64 (pow.f64 b 5) (*.f64 a a)) -2)) (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))))","(-.f64 (fma.f64 -2 (*.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) a)) a) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -5) (*.f64 a (pow.f64 b 7)))) (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (neg.f64 (/.f64 b a)) (/.f64 c b))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (+.f64 (neg.f64 (/.f64 b a)) (/.f64 c b)) (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)))","(+.f64 (-.f64 (/.f64 c b) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)) (/.f64 b a))","(fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (+.f64 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)) (/.f64 c b)) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (neg.f64 (/.f64 b a))))","(+.f64 (/.f64 c b) (+.f64 (-.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b))) (/.f64 b a))","(fma.f64 2 (*.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) a)) a) (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (-.f64 (/.f64 c b) (/.f64 b a))))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (neg.f64 (/.f64 b a)) (/.f64 c b))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (+.f64 (neg.f64 (/.f64 b a)) (/.f64 c b)) (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)))","(+.f64 (-.f64 (/.f64 c b) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)) (/.f64 b a))","(fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (+.f64 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)) (/.f64 c b)) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (neg.f64 (/.f64 b a))))","(+.f64 (/.f64 c b) (+.f64 (-.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b))) (/.f64 b a))","(fma.f64 2 (*.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) a)) a) (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (-.f64 (/.f64 c b) (/.f64 b a))))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))"]],"stop":[["node limit",1]],"time":50.716064453125,"type":"simplify"},{"compiler":[[7531,4299]],"time":76.7099609375,"type":"eval"},{"alts":[["(/.f64 (-.f64 (neg.f64 b) (-.f64 (/.f64 c (/.f64 (/.f64 b a) 2)) b)) (*.f64 2 a))","fresh",56.11619263505283],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","next",34.13146136783383],["(/.f64 (neg.f64 b) a)","fresh",42.696244571949826],["(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","fresh",42.893314866714526],["(*.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))","fresh",47.72523078696411],["(/.f64 (/.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 c a) (*.f64 b b)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (*.f64 2 a))","fresh",46.91355976502609],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","done",33.99581671392451],["(expm1.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))","fresh",52.00062370746032],["(/.f64 (neg.f64 c) b)","fresh",40.88560856170871],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))))","fresh",44.47152618038673],["(pow.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 3) 1/3)","fresh",59.38397246314769],["(/.f64 (-.f64 (neg.f64 b) (hypot.f64 (*.f64 (sqrt.f64 (*.f64 -4 c)) (sqrt.f64 a)) b)) (*.f64 2 a))","fresh",45.64276949506297],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) a))","fresh",47.683675115332456]],"compiler":[[19,13],[21,15],[7,5],[16,10],[32,22],[31,18],[19,13],[19,14],[7,5],[39,27],[21,16],[19,14],[32,22],[19,13],[21,15],[7,5],[16,10],[32,22],[31,18],[19,14],[7,5],[39,27],[21,16],[19,14],[32,22]],"count":[[316,13]],"kept":[{"done":[0,0],"fresh":[12,6],"new":[303,6],"picked":[1,1]}],"min-error":[2.1138003483170693],"time":69.864990234375,"type":"prune"},{"compiler":[[80,44]],"locations":[["(hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))",0.0078125,true],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))",0.1875,true],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))",5.318594835137044,true],["(sqrt.f64 (*.f64 (*.f64 a c) -4))",12.792204809447512,true]],"time":16.569091796875,"type":"localize"},{"count":[[4,11]],"series":[["(hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))","c","-inf",0.77685546875],["(hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))","c","inf",0.941162109375],["(hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))","c","0",0.43408203125],["(hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))","a","-inf",0.739990234375],["(hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))","a","inf",0.828857421875],["(hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))","a","0",0.4150390625],["(hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))","b","-inf",0.27392578125],["(hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))","b","inf",0.31298828125],["(hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))","b","0",0.221923828125],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))","c","-inf",0.740966796875],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))","c","inf",0.802978515625],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))","c","0",0.385009765625],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))","a","-inf",0.71484375],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))","a","inf",0.76806640625],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))","a","0",0.389892578125],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))","b","-inf",0.25],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))","b","inf",0.280029296875],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))","b","0",0.510986328125],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","c","-inf",2.760009765625],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","c","inf",4.47998046875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","c","0",1.10888671875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","a","-inf",2.757080078125],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","a","inf",3.357177734375],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","a","0",0.968017578125],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","b","-inf",0.81884765625],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","b","inf",1.72998046875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","b","0",0.52587890625],["(sqrt.f64 (*.f64 (*.f64 a c) -4))","c","-inf",0.39306640625],["(sqrt.f64 (*.f64 (*.f64 a c) -4))","c","inf",0.337890625],["(sqrt.f64 (*.f64 (*.f64 a c) -4))","c","0",0.527099609375],["(sqrt.f64 (*.f64 (*.f64 a c) -4))","a","-inf",0.7841796875],["(sqrt.f64 (*.f64 (*.f64 a c) -4))","a","inf",0.360107421875],["(sqrt.f64 (*.f64 (*.f64 a c) -4))","a","0",0.678955078125]],"time":31.880859375,"type":"series"},{"count":[[4,322]],"egraph":[[2,4219,64,0.031060583],[1,342,64,0.006119125],[0,16,66,0.000473625]],"inputs":[["(sqrt.f64 (*.f64 (*.f64 a c) -4))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))","(hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))) (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) (cbrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 -4) (sqrt.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a) (sqrt.f64 (*.f64 c -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a) (pow.f64 (*.f64 c -4) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/4) (pow.f64 (*.f64 a (*.f64 c -4)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a c)) (sqrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 2)) (sqrt.f64 (cbrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 2) 1/2) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (*.f64 c -4)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 a (*.f64 c -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) (*.f64 -1/2 (/.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (/.f64 1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 -1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) 1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) -1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (/.f64 -1/2 a) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/2 (/.f64 b a)) 1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))) (cbrt.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 -1/2 (/.f64 b a) 0) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) (pow.f64 (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) 2) (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) (sqrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -1/2 (/.f64 b a)) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) 3)) (fma.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 -1/2 (/.f64 b a)) (-.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 -1/2 (/.f64 b a)) (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 -1/2 (/.f64 b a))) (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 -1/2 (/.f64 b a))) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (exp.f64 (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (exp.f64 (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -1/2 (/.f64 b a))) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 a (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) 3)) (+.f64 0 (fma.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)) (*.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (sqrt.f64 a)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 2) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 3) (pow.f64 (/.f64 1/2 a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 3) (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (cbrt.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))"]],"rules":[["egg-rr",22],["egg-rr",38],["egg-rr",232],["egg-rr",30]],"stop":[["node limit",1]],"time":109.815185546875,"type":"rewrite"},{"count":[[333,333]],"egraph":[[5,4347,52,0.024314957999999998],[4,954,52,0.010405167],[3,184,52,0.002295875],[2,76,52,0.000619],[1,38,52,0.00025775],[0,16,52,9.3625e-5]],"inputs":[["(*.f64 -1 (/.f64 b a))","(/.f64 (-.f64 (*.f64 -1/2 b) (*.f64 1/2 b)) a)","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (/.f64 b a)))","(*.f64 1/2 (/.f64 b a))","(*.f64 -1/2 (/.f64 b a))","(*.f64 1/2 (/.f64 b a))","(*.f64 1/2 (/.f64 b a))","b","(*.f64 -1 b)","b","b"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(/.f64 (-.f64 (*.f64 -1/2 b) (*.f64 1/2 b)) a)","(/.f64 (neg.f64 b) a)","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (/.f64 b a)))","(/.f64 (neg.f64 b) a)","(*.f64 1/2 (/.f64 b a))","(/.f64 (*.f64 b 1/2) a)","(/.f64 b (/.f64 a 1/2))","(*.f64 (/.f64 b a) 1/2)","(*.f64 -1/2 (/.f64 b a))","(*.f64 (/.f64 b a) -1/2)","(*.f64 b (/.f64 -1/2 a))","(*.f64 1/2 (/.f64 b a))","(/.f64 (*.f64 b 1/2) a)","(/.f64 b (/.f64 a 1/2))","(*.f64 (/.f64 b a) 1/2)","(*.f64 1/2 (/.f64 b a))","(/.f64 (*.f64 b 1/2) a)","(/.f64 b (/.f64 a 1/2))","(*.f64 (/.f64 b a) 1/2)","b","(*.f64 -1 b)","(neg.f64 b)","b","b"]],"stop":[["node limit",1]],"time":42.00390625,"type":"simplify"},{"compiler":[[17675,11794]],"time":177.472900390625,"type":"eval"},{"alts":[["(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","fresh",42.893314866714526],["(/.f64 (-.f64 (neg.f64 b) (-.f64 (/.f64 c (/.f64 (/.f64 b a) 2)) b)) (*.f64 2 a))","fresh",56.11619263505283],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","done",33.99581671392451],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (/.f64 1 (/.f64 a (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))))","fresh",34.642556230883294],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (exp.f64 (log.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))) (/.f64 1/2 a))))","fresh",35.27681392840895],["(expm1.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))","fresh",52.00062370746032],["(+.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))","fresh",36.11074427999325],["(/.f64 (neg.f64 b) a)","fresh",42.696244571949826],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (*.f64 (sqrt.f64 a) (sqrt.f64 (*.f64 c -4)))) (/.f64 1/2 a))))","fresh",46.47197019735984],["(/.f64 (neg.f64 c) b)","fresh",40.88560856170871],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))","next",34.24071404209582],["(+.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))","fresh",36.02759475390852],["(pow.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 3) 1/3)","fresh",59.38397246314769],["(/.f64 (-.f64 (neg.f64 b) (hypot.f64 (*.f64 (sqrt.f64 (*.f64 -4 c)) (sqrt.f64 a)) b)) (*.f64 2 a))","fresh",45.64276949506297]],"compiler":[[16,10],[19,13],[19,13],[23,17],[23,17],[19,14],[67,45],[7,5],[22,16],[7,5],[24,18],[80,57],[21,16],[19,14],[16,10],[19,13],[23,17],[23,17],[19,14],[67,45],[7,5],[22,16],[7,5],[24,18],[80,57],[21,16],[19,14]],"count":[[346,14]],"kept":[{"done":[1,1],"fresh":[11,6],"new":[333,7],"picked":[1,0]}],"min-error":[2.1098940978296077],"time":57.951171875,"type":"prune"},{"compiler":[[109,76]],"locations":[["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))",0.1875,true],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)",0.4825364258319565,true],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))",5.318594835137044,true],["(sqrt.f64 (*.f64 a (*.f64 c -4)))",12.792204809447512,true]],"time":27.14599609375,"type":"localize"},{"count":[[4,27]],"series":[["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))","c","-inf",0.205078125],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))","c","inf",1.466064453125],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))","c","0",0.223876953125],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))","a","-inf",0.240966796875],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))","a","inf",0.233154296875],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))","a","0",0.239013671875],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))","b","-inf",0.26904296875],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))","b","inf",0.2978515625],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))","b","0",0.630126953125],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)","c","-inf",0.217041015625],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)","c","inf",0.208984375],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)","c","0",0.198974609375],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)","a","-inf",0.19482421875],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)","a","inf",0.25],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)","a","0",0.19189453125],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))","c","-inf",2.298095703125],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))","c","inf",5.943115234375],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))","c","0",19.423828125],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))","a","-inf",2.9140625],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))","a","inf",10.701171875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))","a","0",20.39404296875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))","b","-inf",3.9169921875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))","b","inf",0.79296875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))","b","0",1.321044921875],["(sqrt.f64 (*.f64 a (*.f64 c -4)))","c","-inf",0.25],["(sqrt.f64 (*.f64 a (*.f64 c -4)))","c","inf",0.22900390625],["(sqrt.f64 (*.f64 a (*.f64 c -4)))","c","0",0.259033203125],["(sqrt.f64 (*.f64 a (*.f64 c -4)))","a","-inf",0.221923828125],["(sqrt.f64 (*.f64 a (*.f64 c -4)))","a","inf",0.262939453125],["(sqrt.f64 (*.f64 a (*.f64 c -4)))","a","0",0.29296875]],"time":74.865966796875,"type":"series"},{"count":[[4,341]],"egraph":[[2,4738,61,0.034788875],[1,412,61,0.0072485],[0,19,63,0.000578667]],"inputs":[["(sqrt.f64 (*.f64 a (*.f64 c -4)))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))","(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)","(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))) (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/6) (cbrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) (pow.f64 (*.f64 a (*.f64 c -4)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 a (*.f64 c -4)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/6)) (cbrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1/6) (*.f64 (pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1/6) (cbrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 c -4)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a) (sqrt.f64 (*.f64 c -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/4) (pow.f64 (*.f64 a (*.f64 c -4)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 2)) (pow.f64 (*.f64 a (*.f64 c -4)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a c)) (sqrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 2) 1/2) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a c) 1/2) (sqrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 a (*.f64 c -4)))) 3) (pow.f64 (*.f64 a (*.f64 c -4)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1/6) 3) (pow.f64 (pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 1) (pow.f64 (*.f64 a (*.f64 c -4)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) (cbrt.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))))) (cbrt.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) (pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1/6)) (pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (*.f64 c -4)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 a (*.f64 c -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) (*.f64 -1/2 (/.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (/.f64 1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 -1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) 1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) -1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (/.f64 -1/2 a) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/2 (/.f64 b a)) 1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (pow.f64 (cbrt.f64 (/.f64 1/2 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) (cbrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 -1/2 (/.f64 b a) 0) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) 2) (cbrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (sqrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -1/2 (/.f64 b a)) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) 3)) (fma.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 -1/2 (/.f64 b a)) (-.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))) (*.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 -1/2 (/.f64 b a)) (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 -1/2 (/.f64 b a))) (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 -1/2 (/.f64 b a))) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)) (exp.f64 (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) (exp.f64 (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -1/2 (/.f64 b a))) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))) (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/6) (cbrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) (pow.f64 (*.f64 a (*.f64 c -4)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 a (*.f64 c -4)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/6)) (cbrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1/6) (*.f64 (pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1/6) (cbrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 c -4)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a) (sqrt.f64 (*.f64 c -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/4) (pow.f64 (*.f64 a (*.f64 c -4)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 2)) (pow.f64 (*.f64 a (*.f64 c -4)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a c)) (sqrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 2) 1/2) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a c) 1/2) (sqrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 a (*.f64 c -4)))) 3) (pow.f64 (*.f64 a (*.f64 c -4)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1/6) 3) (pow.f64 (pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) 1) (pow.f64 (*.f64 a (*.f64 c -4)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) (cbrt.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))))) (cbrt.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 a (*.f64 c -4))) (pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1/6)) (pow.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 a (*.f64 c -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (*.f64 c -4)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 a (*.f64 c -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))) (cbrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 a (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) 3)) (+.f64 0 (fma.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)) (*.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b)))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2) (sqrt.f64 a)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) -1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) -1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) 1) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 a (*.f64 c -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 3) (pow.f64 (/.f64 1/2 a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 3) (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (/.f64 1/2 a))) 1))))))"]],"rules":[["egg-rr",38],["egg-rr",33],["egg-rr",232],["egg-rr",38]],"stop":[["node limit",1]],"time":121.072021484375,"type":"rewrite"},{"count":[[368,324]],"egraph":[[4,3752,500,0.021441500000000002],[3,1235,604,0.009127333],[2,396,692,0.003132667],[1,149,780,0.0010378750000000002],[0,55,908,0.000313]],"inputs":[["(*.f64 -1 (/.f64 b a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 1/2 (/.f64 b a))","(*.f64 -1/2 (/.f64 b a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 1/2 (/.f64 b a))","(*.f64 (/.f64 b a) 1/2)","(/.f64 b (/.f64 a 1/2))","(*.f64 b (/.f64 1/2 a))","(*.f64 -1/2 (/.f64 b a))","(*.f64 (/.f64 b a) -1/2)","(*.f64 b (/.f64 -1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))) (/.f64 1 a)))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b))) a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))) (/.f64 1 a)))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b))) a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))) (/.f64 1 a)))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b))) a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))) (/.f64 1 a)))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b))) a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))) (/.f64 1 a)))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b))) a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))) (/.f64 1 a)))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b))) a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))) (/.f64 1 a)))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b))) a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))) (/.f64 1 a)))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b))) a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))"]],"stop":[["node limit",1]],"time":47.199951171875,"type":"simplify"},{"compiler":[[17734,11751]],"time":175.791015625,"type":"eval"},{"alts":[["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (/.f64 1 (/.f64 a (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))))","fresh",34.642556230883294],["(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","fresh",42.893314866714526],["(+.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))","fresh",36.02759475390852],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 c -4)) (sqrt.f64 a))) 3)) (/.f64 1/2 a))))","fresh",46.52113656689647],["(/.f64 (-.f64 (neg.f64 b) (hypot.f64 (*.f64 (sqrt.f64 (*.f64 -4 c)) (sqrt.f64 a)) b)) (*.f64 2 a))","fresh",45.64276949506297],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))) (/.f64 1/2 a))))","fresh",47.323566581299964],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","done",33.99581671392451],["(/.f64 (neg.f64 b) a)","fresh",42.696244571949826],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (*.f64 (sqrt.f64 a) (sqrt.f64 (*.f64 c -4)))) (/.f64 1/2 a))))","fresh",46.47197019735984],["(+.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))","fresh",36.11074427999325],["(/.f64 (neg.f64 c) b)","fresh",40.88560856170871],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))) (/.f64 1/2 a))))","fresh",49.37883896601852]],"compiler":[[23,17],[16,10],[80,57],[25,19],[19,14],[31,25],[19,13],[7,5],[22,16],[67,45],[7,5],[31,25]],"count":[[338,12]],"kept":[{"done":[1,1],"fresh":[12,5],"new":[324,6],"picked":[1,0]}],"min-error":[0.36406167031014186],"time":51.010986328125,"type":"prune"},{"accuracy":[9.167358440729588],"baseline":[33.99581671392451],"branch":[["a",25.665858884191834,4],["b",9.167358440729588,3],["c",23.455652551868234,8],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))",11.015308530732067,5]],"compiler":[[4,3],[4,3],[4,3],[20,14],[781,471]],"count":[[34,3]],"inputs":[["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (/.f64 1 (/.f64 a (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 c -4)) (sqrt.f64 a))) 3)) (/.f64 1/2 a))))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))) (/.f64 1/2 a))))","(/.f64 (neg.f64 b) a)","(+.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))) (/.f64 1/2 a))))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (/.f64 1 (/.f64 a (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) 1/2)))))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (exp.f64 (log.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))))) (/.f64 1/2 a))))","(+.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b) (pow.f64 (cbrt.f64 a) 2)))))","(/.f64 (neg.f64 b) a)","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (*.f64 (sqrt.f64 a) (sqrt.f64 (*.f64 c -4)))) (/.f64 1/2 a))))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 a (*.f64 c -4)))) 3)) (/.f64 1/2 a))))","(+.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 c -4))) b))))))","(/.f64 (-.f64 (neg.f64 b) (-.f64 (/.f64 c (/.f64 (/.f64 b a) 2)) b)) (*.f64 2 a))","(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","(/.f64 (/.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 c a) (*.f64 b b)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) (*.f64 2 a))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))) b) (*.f64 a -2))))","(/.f64 (-.f64 (neg.f64 b) (hypot.f64 (*.f64 (sqrt.f64 (*.f64 -4 c)) (sqrt.f64 a)) b)) (*.f64 2 a))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) 2) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 c a)))))) a))","(/.f64 (neg.f64 b) a)","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (*.f64 a c)) 2)) (cbrt.f64 (*.f64 a c)) (*.f64 b b)))) (*.f64 2 a))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","(*.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))","(/.f64 (/.f64 (neg.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","(expm1.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))","(*.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a))","(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","(/.f64 (neg.f64 c) b)","(pow.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 3) 1/3)","(-.f64 (/.f64 c b) (/.f64 b a))","(*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (/.f64 -1/2 a))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))"]],"link":["."],"name":["The quadratic formula (r2)"],"oracle":[64.0],"outputs":[["(/.f64 (neg.f64 c) b)","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a))","(/.f64 (neg.f64 b) a)"]],"time":183.928955078125,"times":[["a",37.989013671875],["b",28.7919921875],["c",75.154052734375],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))",28.884033203125]],"type":"regimes"},{"bstep":[[2.329454310736128e+91,1.8504212049992524e+92,27.0400390625],[-6.127554384708505e-102,-6.631186446250369e-112,34.94189453125]],"compiler":[[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[22,16],[4,3]],"method":["binary-search","binary-search"],"time":62.3359375,"type":"bsearch"},{"compiler":[[35,22]],"egraph":[[6,77,48,0.000619625],[5,76,48,0.00050975],[4,73,48,0.00040654199999999997],[3,66,48,0.000311208],[2,51,48,0.000215417],[1,38,48,0.000125],[0,24,48,6.125e-5]],"inputs":[["(if (<=.f64 b -1814149116270455/2707685248164858261307045101702230179137145581421695874189921465443966120903931272499975005961073806735733604454495675614232576) (/.f64 (neg.f64 c) b) (if (<=.f64 b 23999999999999998290993008004600824449156145842508731967840435135103407572234726474654941184) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a)) (/.f64 (neg.f64 b) a)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b -1814149116270455/2707685248164858261307045101702230179137145581421695874189921465443966120903931272499975005961073806735733604454495675614232576) (/.f64 (neg.f64 c) b) (if (<=.f64 b 23999999999999998290993008004600824449156145842508731967840435135103407572234726474654941184) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 c) a (*.f64 b b)))) (*.f64 2 a)) (/.f64 (neg.f64 b) a)))","(if (<=.f64 b -1814149116270455/2707685248164858261307045101702230179137145581421695874189921465443966120903931272499975005961073806735733604454495675614232576) (/.f64 (neg.f64 c) b) (if (<=.f64 b 23999999999999998290993008004600824449156145842508731967840435135103407572234726474654941184) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 c -4) a (*.f64 b b)))) (*.f64 a 2)) (/.f64 (neg.f64 b) a)))"]],"stop":[["fuel",1],["saturated",1]],"time":9.92919921875,"type":"simplify"},{"time":0.02392578125,"type":"soundness"},{"compiler":[[35,22]],"remove-preprocessing":[[]],"time":13.10888671875,"type":"end"}]