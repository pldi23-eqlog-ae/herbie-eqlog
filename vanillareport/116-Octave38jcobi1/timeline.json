[{"compiler":[[22,16]],"method":["search"],"sampling":[[12,0.5357092508347705,0.0260585657088086,0.4382321834564209],[11,0.5272059293929487,0.034561887150630355,0.4382321834564209],[10,0.5101992865093052,0.05156853003427386,0.4382321834564209],[9,0.49374124500900507,0.06802657153457403,0.4382321834564209],[8,0.46082516200840473,0.10094265453517437,0.4382321834564209],[7,0.43010348454117775,0.13166433200240135,0.4382321834564209],[6,0.3686601296067238,0.19310768693685532,0.4382321834564209],[5,0.31599439680576324,0.24577341973781586,0.4382321834564209],[4,0.21066293120384216,0.35110488533973694,0.4382321834564209],[3,0.14044195413589478,0.4213258624076843,0.4382321834564209],[2,0.0,0.5617678165435791,0.4382321834564209],[1,0.0,0.5617678165435791,0.4382321834564209],[0,0.0,0.5617678165435791,0.4382321834564209]],"time":17.044189453125,"type":"analyze"},{"outcomes":[["body",512,"valid",51.427001953125,611],["body",1024,"valid",125.7353515625,1050],["body",2048,"valid",16.17626953125,102],["body",256,"valid",292.225341796875,6493]],"time":494.4228515625,"type":"sample"},{"compiler":[[15,11]],"egraph":[[0,2,2,1.917e-6],[8,5489,34,0.037581209000000004],[7,2067,34,0.021062917],[6,861,34,0.008219334],[5,404,34,0.0032469589999999998],[4,203,38,0.0014468749999999998],[3,109,38,0.0006799169999999999],[2,64,38,0.0003385],[1,39,38,0.000172084],[0,17,38,7.5084e-5]],"inputs":[["0","1"],["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)","(/.f64 (+.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 beta alpha) 2)) 1) 2)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)","(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 alpha (+.f64 beta 2))) 1) 2)","(+.f64 1/2 (/.f64 (-.f64 beta alpha) (fma.f64 2 (+.f64 beta alpha) 4)))","(/.f64 (+.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 beta alpha) 2)) 1) 2)","(/.f64 (+.f64 1 (/.f64 (-.f64 alpha beta) (+.f64 alpha (+.f64 beta 2)))) 2)","(-.f64 (/.f64 (/.f64 (-.f64 alpha beta) (+.f64 alpha (+.f64 beta 2))) 2) -1/2)","(+.f64 1/2 (/.f64 (-.f64 alpha beta) (fma.f64 2 (+.f64 beta alpha) 4)))","(fma.f64 (/.f64 (-.f64 beta alpha) (+.f64 beta (+.f64 alpha 2))) -1/2 1/2)"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":60.926025390625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[10,7454,17,0.041271958],[9,3685,17,0.030629667],[8,1581,17,0.014762376],[7,756,17,0.007033126000000001],[6,449,17,0.0034401680000000004],[5,240,17,0.001789584],[4,119,19,0.0008776260000000001],[3,67,19,0.00045029300000000005],[2,40,19,0.00023937600000000002],[1,23,19,0.000124167],[0,11,19,5.1792e-5]],"inputs":[["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)","(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 alpha (+.f64 beta 2))) 1) 2)","(-.f64 (/.f64 (/.f64 (-.f64 beta alpha) (+.f64 alpha (+.f64 beta 2))) 2) -1/2)","(+.f64 1/2 (/.f64 (-.f64 beta alpha) (fma.f64 (+.f64 beta alpha) 2 4)))","(fma.f64 (/.f64 (-.f64 alpha beta) (+.f64 beta (+.f64 alpha 2))) -1/2 1/2)","(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)"]],"stop":[["node limit",1]],"time":52.56103515625,"type":"simplify"},{"compiler":[[27,18]],"time":0.448974609375,"type":"eval"},{"alts":[["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)","next",15.652698386118857]],"compiler":[[14,10],[14,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[15.652698386118857],"time":1.379150390625,"type":"prune"},{"compiler":[[39,22]],"locations":[["(/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))",0.04296875,true],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)",2.3495017957535977,true]],"time":8.414794921875,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))","alpha","-inf",0.22021484375],["(/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))","alpha","inf",0.251953125],["(/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))","alpha","0",0.287841796875],["(/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))","beta","-inf",0.278076171875],["(/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))","beta","inf",0.265869140625],["(/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))","beta","0",0.52001953125],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)","alpha","-inf",0.490966796875],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)","alpha","inf",0.696044921875],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)","alpha","0",0.760009765625],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)","beta","-inf",0.620849609375],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)","beta","inf",0.64501953125],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)","beta","0",0.864990234375]],"time":6.153076171875,"type":"series"},{"count":[[2,84]],"egraph":[[2,3791,30,0.029430167],[1,262,30,0.0051635],[0,11,30,0.000384]],"inputs":[["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)","(/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (/.f64 (*.f64 (-.f64 beta alpha) -1/2) (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 beta alpha) -1/2) (-.f64 -2 (+.f64 beta alpha))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (-.f64 beta alpha) -1/2) (-.f64 -2 (+.f64 beta alpha))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) 2) (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 (-.f64 beta alpha) -1/2) (-.f64 -2 (+.f64 beta alpha))) 3) 1/8) (+.f64 (pow.f64 (/.f64 (*.f64 (-.f64 beta alpha) -1/2) (-.f64 -2 (+.f64 beta alpha))) 2) (-.f64 1/4 (*.f64 (/.f64 (*.f64 (-.f64 beta alpha) -1/2) (-.f64 -2 (+.f64 beta alpha))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (-.f64 beta alpha) -1/2) (-.f64 -2 (+.f64 beta alpha))) 2) 1/4) (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 beta (-.f64 -2 (+.f64 beta alpha))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 beta (-.f64 -2 (+.f64 beta alpha))) (/.f64 alpha (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 beta alpha) (/.f64 1 (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) 2) (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2) (*.f64 (cbrt.f64 (-.f64 beta alpha)) (/.f64 1 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) (sqrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 beta alpha)) (*.f64 (sqrt.f64 (-.f64 beta alpha)) (/.f64 1 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 beta alpha)) (/.f64 1 (neg.f64 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -2 (+.f64 beta alpha))) (-.f64 beta alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2)) (/.f64 (-.f64 beta alpha) (cbrt.f64 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (/.f64 (-.f64 beta alpha) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2) 1) (/.f64 (cbrt.f64 (-.f64 beta alpha)) (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 beta alpha)) 1) (/.f64 (sqrt.f64 (-.f64 beta alpha)) (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2)) (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2)) (/.f64 (sqrt.f64 (-.f64 beta alpha)) (cbrt.f64 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (/.f64 (cbrt.f64 (-.f64 beta alpha)) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 beta alpha) (-.f64 (pow.f64 (-.f64 -2 beta) 3) (pow.f64 alpha 3))) (fma.f64 alpha (-.f64 -2 (-.f64 beta alpha)) (pow.f64 (-.f64 -2 beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 beta alpha) (-.f64 (pow.f64 (-.f64 -2 beta) 2) (*.f64 alpha alpha))) (-.f64 -2 (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 beta alpha) 3) (pow.f64 (-.f64 -2 (+.f64 beta alpha)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 beta alpha) (neg.f64 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 beta alpha) 3) (pow.f64 (-.f64 -2 (+.f64 beta alpha)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 beta (/.f64 1 (-.f64 -2 (+.f64 beta alpha))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 beta (-.f64 -2 (+.f64 beta alpha))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 beta (-.f64 -2 (+.f64 beta alpha)))) 2) (cbrt.f64 (/.f64 beta (-.f64 -2 (+.f64 beta alpha)))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 beta (-.f64 -2 (+.f64 beta alpha)))) (sqrt.f64 (/.f64 beta (-.f64 -2 (+.f64 beta alpha)))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2)) (/.f64 beta (cbrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (/.f64 beta (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 -2 (+.f64 beta alpha))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 -2 (+.f64 beta alpha))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 beta (-.f64 (pow.f64 (-.f64 -2 beta) 3) (pow.f64 alpha 3))) (fma.f64 alpha (-.f64 -2 (-.f64 beta alpha)) (pow.f64 (-.f64 -2 beta) 2)) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 beta (-.f64 (pow.f64 (-.f64 -2 beta) 2) (*.f64 alpha alpha))) (-.f64 -2 (-.f64 beta alpha)) (neg.f64 (/.f64 alpha (-.f64 -2 (+.f64 beta alpha)))))))))"]],"rules":[["egg-rr",57],["egg-rr",27]],"stop":[["node limit",1]],"time":53.01708984375,"type":"rewrite"},{"count":[[132,151]],"egraph":[[2,2155,1729,0.016318666],[1,588,1861,0.004005791],[0,169,2041,0.000824]],"inputs":[["(+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha)))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4)))))) (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))))))","1","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) 1)","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) 1))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) (+.f64 1 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 3))))))","1","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) 1)","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) (+.f64 1 (*.f64 1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) (+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2))))))","(+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))","(+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4))))) (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(/.f64 alpha (+.f64 2 alpha))","(+.f64 (/.f64 alpha (+.f64 2 alpha)) (*.f64 -1 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))))","(+.f64 (/.f64 alpha (+.f64 2 alpha)) (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4)))))) (+.f64 (/.f64 alpha (+.f64 2 alpha)) (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))))))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (+.f64 2 alpha)) (pow.f64 beta 2))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3))))) 1)","-1","(-.f64 (/.f64 alpha beta) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta))))","(-.f64 (+.f64 (/.f64 alpha beta) (*.f64 -1 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2)))) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3)) (+.f64 (/.f64 alpha beta) (*.f64 -1 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2))))) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta))))","(*.f64 -1 (/.f64 beta (+.f64 beta 2)))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha) (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2)))))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4)))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))))","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))))","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))","(+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 alpha 2))))","(fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2)","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha)))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (*.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)))))","(+.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2) (*.f64 beta (*.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) 1/2)))","(+.f64 1/2 (fma.f64 1/2 (+.f64 (/.f64 beta (+.f64 alpha 2)) (/.f64 (*.f64 alpha beta) (pow.f64 (+.f64 alpha 2) 2))) (/.f64 alpha (/.f64 (+.f64 alpha 2) -1/2))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) (*.f64 1/2 (*.f64 (*.f64 beta beta) (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2)))) (fma.f64 1/2 (*.f64 beta (*.f64 beta (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))))) (/.f64 -1/2 (/.f64 (+.f64 alpha 2) alpha)))))","(+.f64 1/2 (+.f64 (/.f64 alpha (/.f64 (+.f64 alpha 2) -1/2)) (*.f64 1/2 (*.f64 beta (+.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 beta (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2)))))))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4)))))) (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (fma.f64 1/2 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 4)))) (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) (*.f64 1/2 (*.f64 (*.f64 beta beta) (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2)))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2)))) (fma.f64 1/2 (*.f64 (pow.f64 beta 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 4)))) (fma.f64 1/2 (*.f64 beta (*.f64 beta (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))))) (/.f64 -1/2 (/.f64 (+.f64 alpha 2) alpha))))))","(+.f64 1/2 (+.f64 (fma.f64 1/2 (*.f64 (pow.f64 beta 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 4)))) (/.f64 alpha (/.f64 (+.f64 alpha 2) -1/2))) (*.f64 1/2 (*.f64 beta (+.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 beta (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2)))))))))","1","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) 1)","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) 1)","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) 1)","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) 1))","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (fma.f64 -1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) (/.f64 (*.f64 beta beta) (+.f64 alpha 2))) 1))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (fma.f64 -1/2 (*.f64 (/.f64 (+.f64 alpha 2) (*.f64 beta beta)) (-.f64 (-.f64 -2 alpha) alpha)) 1))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (fma.f64 1/2 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) (*.f64 beta beta)) (+.f64 alpha 2)) 1))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) (+.f64 1 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 3))))))","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (fma.f64 -1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) (/.f64 (*.f64 beta beta) (+.f64 alpha 2))) (+.f64 1 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 alpha 2) 2) (/.f64 (pow.f64 beta 3) (-.f64 (neg.f64 alpha) (+.f64 alpha 2))))))))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (fma.f64 -1/2 (*.f64 (/.f64 (+.f64 alpha 2) (*.f64 beta beta)) (-.f64 (-.f64 -2 alpha) alpha)) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (+.f64 alpha 2) 2) (pow.f64 beta 3)) (-.f64 (-.f64 -2 alpha) alpha)) 1)))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (+.f64 alpha 2) beta)) (fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 alpha 2) 2))) 1)))","1","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) 1)","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) 1)","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) 1)","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) (+.f64 1 (*.f64 1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2)))))","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (fma.f64 -1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) (/.f64 (*.f64 beta beta) (+.f64 alpha 2))) 1))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (fma.f64 -1/2 (*.f64 (/.f64 (+.f64 alpha 2) (*.f64 beta beta)) (-.f64 (-.f64 -2 alpha) alpha)) 1))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (fma.f64 1/2 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) (*.f64 beta beta)) (+.f64 alpha 2)) 1))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) (+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2))))))","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (fma.f64 -1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) (/.f64 (*.f64 beta beta) (+.f64 alpha 2))) (+.f64 1 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 alpha 2) 2) (/.f64 (pow.f64 beta 3) (-.f64 (neg.f64 alpha) (+.f64 alpha 2))))))))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (fma.f64 -1/2 (*.f64 (/.f64 (+.f64 alpha 2) (*.f64 beta beta)) (-.f64 (-.f64 -2 alpha) alpha)) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (+.f64 alpha 2) 2) (pow.f64 beta 3)) (-.f64 (-.f64 -2 alpha) alpha)) 1)))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (+.f64 alpha 2) beta)) (fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 alpha 2) 2))) 1)))","(+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))","(+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 2 beta))))","(fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)","(+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))","(+.f64 1/2 (fma.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (*.f64 1/2 (/.f64 beta (+.f64 2 beta)))))","(+.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2) (*.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 alpha)))","(+.f64 1/2 (fma.f64 -1/2 (+.f64 (/.f64 alpha (+.f64 2 beta)) (*.f64 (/.f64 beta (pow.f64 (+.f64 2 beta) 2)) alpha)) (*.f64 -1/2 (/.f64 beta (-.f64 -2 beta)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) (+.f64 1/2 (fma.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (*.f64 1/2 (/.f64 beta (+.f64 2 beta))))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) (+.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2) (*.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 alpha))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)) (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (+.f64 1/2 (fma.f64 -1/2 (+.f64 (/.f64 alpha (+.f64 2 beta)) (*.f64 (/.f64 beta (pow.f64 (+.f64 2 beta) 2)) alpha)) (*.f64 -1/2 (/.f64 beta (-.f64 -2 beta))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4))))) (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) (+.f64 1/2 (fma.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (fma.f64 -1/2 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))) (*.f64 1/2 (/.f64 beta (+.f64 2 beta)))))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))))) (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)) (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (+.f64 (*.f64 -1/2 (+.f64 (+.f64 (/.f64 alpha (+.f64 2 beta)) (*.f64 (/.f64 beta (pow.f64 (+.f64 2 beta) 2)) alpha)) (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))))) (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha))","(*.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(*.f64 (/.f64 1/2 alpha) (+.f64 (+.f64 beta beta) 2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(fma.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 2 beta))))","(fma.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 2 beta)) (*.f64 (/.f64 1/2 alpha) (+.f64 (+.f64 beta beta) 2)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))))))","(fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 2 beta))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 2 beta))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 4) (pow.f64 (+.f64 2 beta) 3))) (*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2)))))))","(fma.f64 -1/2 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 2 beta)) (fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (/.f64 (*.f64 (*.f64 -1/2 (pow.f64 (+.f64 2 beta) 3)) (+.f64 beta (+.f64 2 beta))) (pow.f64 alpha 4))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 (+.f64 2 beta) (/.f64 (pow.f64 (+.f64 2 beta) 3) (*.f64 alpha alpha))))))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha))","(*.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(*.f64 (/.f64 1/2 alpha) (+.f64 (+.f64 beta beta) 2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(fma.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 2 beta))))","(fma.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 2 beta)) (*.f64 (/.f64 1/2 alpha) (+.f64 (+.f64 beta beta) 2)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))))))","(fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 2 beta))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 2 beta))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 4) (pow.f64 (+.f64 2 beta) 3))) (*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2)))))))","(fma.f64 -1/2 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 2 beta)) (fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (/.f64 (*.f64 (*.f64 -1/2 (pow.f64 (+.f64 2 beta) 3)) (+.f64 beta (+.f64 2 beta))) (pow.f64 alpha 4))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 (+.f64 2 beta) (/.f64 (pow.f64 (+.f64 2 beta) 3) (*.f64 alpha alpha))))))","(/.f64 alpha (+.f64 2 alpha))","(/.f64 alpha (+.f64 alpha 2))","(+.f64 (/.f64 alpha (+.f64 2 alpha)) (*.f64 -1 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))))","(+.f64 (/.f64 alpha (+.f64 alpha 2)) (neg.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2))))))","(fma.f64 (neg.f64 beta) (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (/.f64 alpha (+.f64 alpha 2)))","(-.f64 (/.f64 alpha (+.f64 alpha 2)) (+.f64 (/.f64 beta (+.f64 alpha 2)) (/.f64 (*.f64 alpha beta) (pow.f64 (+.f64 alpha 2) 2))))","(+.f64 (/.f64 alpha (+.f64 2 alpha)) (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))))","(+.f64 (/.f64 alpha (+.f64 alpha 2)) (*.f64 -1 (+.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (*.f64 (*.f64 beta beta) (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2)))))))","(fma.f64 -1 (fma.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 beta (*.f64 beta (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2)))))) (/.f64 alpha (+.f64 alpha 2)))","(-.f64 (/.f64 alpha (+.f64 alpha 2)) (*.f64 beta (+.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 beta (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2)))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4)))))) (+.f64 (/.f64 alpha (+.f64 2 alpha)) (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))))))","(fma.f64 -1 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 4)))) (+.f64 (/.f64 alpha (+.f64 alpha 2)) (*.f64 -1 (+.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (*.f64 (*.f64 beta beta) (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2))))))))","(-.f64 (fma.f64 -1 (fma.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 beta (*.f64 beta (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2)))))) (/.f64 alpha (+.f64 alpha 2))) (*.f64 (pow.f64 beta 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 4)))))","(-.f64 (-.f64 (/.f64 alpha (+.f64 alpha 2)) (*.f64 beta (+.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 beta (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))))))) (*.f64 (pow.f64 beta 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 4)))))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) 1)","(fma.f64 -1 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) -1)","(fma.f64 -1 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) -1)","(+.f64 -1 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (+.f64 2 alpha)) (pow.f64 beta 2))) 1)","(+.f64 (fma.f64 -1 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) (/.f64 (*.f64 beta beta) (+.f64 alpha 2)))) -1)","(+.f64 -1 (-.f64 (*.f64 (/.f64 (+.f64 alpha 2) (*.f64 beta beta)) (-.f64 (-.f64 -2 alpha) alpha)) (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta)))","(+.f64 -1 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (+.f64 -1 (/.f64 (+.f64 alpha 2) beta))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (+.f64 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) (/.f64 (*.f64 beta beta) (+.f64 alpha 2))) (neg.f64 (/.f64 (pow.f64 (+.f64 alpha 2) 2) (/.f64 (pow.f64 beta 3) (-.f64 (neg.f64 alpha) (+.f64 alpha 2))))))) -1)","(+.f64 -1 (-.f64 (-.f64 (*.f64 (/.f64 (+.f64 alpha 2) (*.f64 beta beta)) (-.f64 (-.f64 -2 alpha) alpha)) (*.f64 (/.f64 (pow.f64 (+.f64 alpha 2) 2) (pow.f64 beta 3)) (-.f64 (-.f64 -2 alpha) alpha))) (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta)))","(+.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (+.f64 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (*.f64 beta beta)) (-.f64 (+.f64 alpha 2) (/.f64 (pow.f64 (+.f64 alpha 2) 2) beta))) -1))","-1","(-.f64 (/.f64 alpha beta) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta))))","(fma.f64 -1 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) -1)","(fma.f64 -1 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) -1)","(+.f64 -1 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta))","(-.f64 (+.f64 (/.f64 alpha beta) (*.f64 -1 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2)))) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta))))","(+.f64 (fma.f64 -1 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) (/.f64 (*.f64 beta beta) (+.f64 alpha 2)))) -1)","(+.f64 -1 (-.f64 (*.f64 (/.f64 (+.f64 alpha 2) (*.f64 beta beta)) (-.f64 (-.f64 -2 alpha) alpha)) (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta)))","(+.f64 -1 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (+.f64 -1 (/.f64 (+.f64 alpha 2) beta))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3)) (+.f64 (/.f64 alpha beta) (*.f64 -1 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2))))) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta))))","(+.f64 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 alpha 2) 2))) (-.f64 (+.f64 (/.f64 alpha beta) (neg.f64 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 (*.f64 beta beta) (+.f64 alpha 2))))) (+.f64 1 (/.f64 (+.f64 -2 (neg.f64 alpha)) beta))))","(+.f64 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) (pow.f64 beta 3)) (pow.f64 (+.f64 alpha 2) 2)) (+.f64 (*.f64 (/.f64 (+.f64 alpha 2) (*.f64 beta beta)) (-.f64 (-.f64 -2 alpha) alpha)) (-.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) 1)))","(+.f64 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) (pow.f64 beta 3)) (pow.f64 (+.f64 alpha 2) 2)) (+.f64 -1 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (+.f64 -1 (/.f64 (+.f64 alpha 2) beta)))))","(*.f64 -1 (/.f64 beta (+.f64 beta 2)))","(neg.f64 (/.f64 beta (+.f64 2 beta)))","(/.f64 (neg.f64 beta) (+.f64 2 beta))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha))","(fma.f64 -1 (/.f64 beta (+.f64 2 beta)) (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))))","(-.f64 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (/.f64 beta (+.f64 2 beta)))","(-.f64 (+.f64 (/.f64 alpha (+.f64 2 beta)) (*.f64 (/.f64 beta (pow.f64 (+.f64 2 beta) 2)) alpha)) (/.f64 beta (+.f64 2 beta)))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha) (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2)))))","(fma.f64 -1 (/.f64 beta (+.f64 2 beta)) (fma.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) alpha (neg.f64 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))))))","(-.f64 (-.f64 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (/.f64 beta (+.f64 2 beta))) (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))))","(-.f64 (-.f64 (+.f64 (/.f64 alpha (+.f64 2 beta)) (*.f64 (/.f64 beta (pow.f64 (+.f64 2 beta) 2)) alpha)) (/.f64 beta (+.f64 2 beta))) (*.f64 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)) (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4)))))))","(fma.f64 -1 (/.f64 beta (+.f64 2 beta)) (fma.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) alpha (fma.f64 -1 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))))))","(-.f64 (fma.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (-.f64 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))) (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))))) (/.f64 beta (+.f64 2 beta)))","(-.f64 (fma.f64 alpha (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (*.f64 (*.f64 alpha alpha) (-.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4))) alpha) (/.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta))))) (/.f64 beta (+.f64 2 beta)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 1 (neg.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(-.f64 1 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(-.f64 1 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))))","(+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (+.f64 1 (neg.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha))))","(+.f64 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 2 beta)) (-.f64 1 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha)))","(+.f64 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) (+.f64 (/.f64 (+.f64 2 beta) alpha) -1)) 1)","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))))","(+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (+.f64 1 (*.f64 -1 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))))","(+.f64 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 2 beta)) (-.f64 (-.f64 1 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (/.f64 (+.f64 beta (+.f64 2 beta)) alpha)))","(+.f64 (-.f64 1 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2))) (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) (+.f64 -1 (/.f64 (+.f64 2 beta) alpha))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 1 (neg.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(-.f64 1 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(-.f64 1 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))))","(+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (+.f64 1 (neg.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha))))","(+.f64 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 2 beta)) (-.f64 1 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha)))","(+.f64 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) (+.f64 (/.f64 (+.f64 2 beta) alpha) -1)) 1)","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))))","(+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (+.f64 1 (*.f64 -1 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))))","(+.f64 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 2 beta)) (-.f64 (-.f64 1 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (/.f64 (+.f64 beta (+.f64 2 beta)) alpha)))","(+.f64 (-.f64 1 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2))) (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) (+.f64 -1 (/.f64 (+.f64 2 beta) alpha))))"]],"stop":[["node limit",1]],"time":41.18603515625,"type":"simplify"},{"compiler":[[3967,2705]],"time":44.179931640625,"type":"eval"},{"alts":[["(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","fresh",15.686341442534967],["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 2 beta))))","fresh",46.38825741486265],["(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)","next",15.65280063692237]],"compiler":[[16,12],[38,25],[16,12],[16,12],[38,25],[16,12]],"count":[[152,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[151,3],"picked":[1,0]}],"min-error":[0.030344470018659867],"time":31.278076171875,"type":"prune"},{"compiler":[[53,26]],"locations":[["(/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))",0.01953125,true],["(pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1)",0.12890625,true],["(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)",2.349501795374902,true]],"time":9.8759765625,"type":"localize"},{"count":[[3,72]],"series":[["(/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))","alpha","-inf",0.199951171875],["(/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))","alpha","inf",0.27294921875],["(/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))","alpha","0",0.340087890625],["(/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))","beta","-inf",0.247802734375],["(/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))","beta","inf",0.278076171875],["(/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))","beta","0",0.286865234375],["(pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1)","alpha","-inf",0.406005859375],["(pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1)","alpha","inf",0.3740234375],["(pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1)","alpha","0",0.55908203125],["(pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1)","beta","-inf",0.378173828125],["(pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1)","beta","inf",0.386962890625],["(pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1)","beta","0",0.7080078125],["(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)","alpha","-inf",2.281982421875],["(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)","alpha","inf",2.13720703125],["(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)","alpha","0",1.31201171875],["(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)","beta","-inf",0.77099609375],["(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)","beta","inf",0.748046875],["(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)","beta","0",2.0859375]],"time":14.221923828125,"type":"series"},{"count":[[3,197]],"egraph":[[2,4109,43,0.031968876],[1,300,43,0.005778500999999999],[0,13,49,0.000457167]],"inputs":[["(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)","(pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1)","(/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (/.f64 -1/2 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1/2 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1/2 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))) (cbrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) 2) (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 -1/2 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) 3) 1/8) (fma.f64 (/.f64 -1/2 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 -1/2 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) (-.f64 1/4 (*.f64 (/.f64 -1/2 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 -1/2 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 -1/2 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) -1/4) (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 beta (-.f64 -2 (+.f64 beta alpha))) (/.f64 alpha (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 beta alpha) (/.f64 1 (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) 2) (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) (sqrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 -2 (+.f64 beta alpha)) -1) (pow.f64 (/.f64 1 (-.f64 beta alpha)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) 2) -1) (pow.f64 (cbrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) -1) (pow.f64 (sqrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2) 1) (/.f64 (cbrt.f64 (-.f64 beta alpha)) (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 beta alpha)) 1) (/.f64 (sqrt.f64 (-.f64 beta alpha)) (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2)) (/.f64 (-.f64 beta alpha) (cbrt.f64 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2)) (/.f64 (cbrt.f64 (-.f64 beta alpha)) (cbrt.f64 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2)) (/.f64 (sqrt.f64 (-.f64 beta alpha)) (cbrt.f64 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (/.f64 (-.f64 beta alpha) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (/.f64 (cbrt.f64 (-.f64 beta alpha)) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 beta alpha)) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (/.f64 (sqrt.f64 (-.f64 beta alpha)) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -2 (+.f64 beta alpha))) (-.f64 beta alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 beta alpha) (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 -2 (+.f64 beta alpha)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 beta alpha) (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 -2 (+.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (-.f64 -2 (+.f64 beta alpha)))) (neg.f64 (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2) (/.f64 (-.f64 -2 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 beta alpha)) (/.f64 (-.f64 -2 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 beta alpha)) (neg.f64 (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (*.f64 (-.f64 -2 (+.f64 beta alpha)) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (*.f64 (-.f64 -2 (+.f64 beta alpha)) (+.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) (sqrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 beta alpha) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha)))) (sqrt.f64 (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 beta alpha) 1) (-.f64 -2 (+.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 -2 (+.f64 beta alpha))) (/.f64 1 (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 beta alpha) (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2)) (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) 2)) (cbrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 beta alpha) 3) (pow.f64 (-.f64 -2 (+.f64 beta alpha)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (sqrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 1 (-.f64 beta alpha)) (+.f64 beta alpha)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 beta alpha))) (+.f64 beta alpha) (*.f64 (/.f64 1 (-.f64 beta alpha)) (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 1 (-.f64 beta alpha)) (+.f64 beta alpha)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 beta alpha))) (+.f64 beta alpha) (*.f64 (/.f64 1 (-.f64 beta alpha)) (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 1 (-.f64 beta alpha)) (+.f64 beta alpha)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 beta alpha))) (+.f64 beta alpha) (*.f64 (/.f64 1 (-.f64 beta alpha)) (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 1 (-.f64 beta alpha)) (+.f64 beta alpha)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 beta alpha))) (+.f64 beta alpha) (*.f64 (/.f64 1 (-.f64 beta alpha)) (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (*.f64 (/.f64 1 (-.f64 beta alpha)) (+.f64 beta alpha)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 beta alpha))) (+.f64 beta alpha) (*.f64 (/.f64 1 (-.f64 beta alpha)) (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (*.f64 (/.f64 1 (-.f64 beta alpha)) (+.f64 beta alpha)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 beta alpha))) (+.f64 beta alpha) (*.f64 (/.f64 1 (-.f64 beta alpha)) (+.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)) 1))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) 1 (*.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)) 1))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) 1 (*.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)) 1))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) 1 (*.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)) 1))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) 1 (*.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)) 1))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) 1 (*.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)) 1))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) 1 (*.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (*.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))) (cbrt.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 (-.f64 beta alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha)))))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha))) (*.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha)))))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha))) (*.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha)))))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha))) (*.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha)))))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha))) (*.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha)))))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha))) (*.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (*.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha)))))) (fma.f64 (neg.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha))) (*.f64 (/.f64 (+.f64 beta alpha) (sqrt.f64 (-.f64 beta alpha))) (/.f64 1 (sqrt.f64 (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1) (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1) (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1) (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1) (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1) (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1) (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (-.f64 beta alpha)) (/.f64 (sqrt.f64 (+.f64 beta alpha)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha)))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))) (/.f64 (sqrt.f64 (+.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha))) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha))) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha))) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha))) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha))) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha)))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha))) (*.f64 (/.f64 (cbrt.f64 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 beta alpha)) 2) (sqrt.f64 (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (*.f64 (+.f64 beta alpha) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha)))))) (fma.f64 (neg.f64 (+.f64 beta alpha)) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (*.f64 (+.f64 beta alpha) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (*.f64 (+.f64 beta alpha) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha)))))) (fma.f64 (neg.f64 (+.f64 beta alpha)) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (*.f64 (+.f64 beta alpha) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (+.f64 beta alpha) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha)))))) (fma.f64 (neg.f64 (+.f64 beta alpha)) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (*.f64 (+.f64 beta alpha) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (+.f64 beta alpha) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha)))))) (fma.f64 (neg.f64 (+.f64 beta alpha)) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (*.f64 (+.f64 beta alpha) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (*.f64 (+.f64 beta alpha) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha)))))) (fma.f64 (neg.f64 (+.f64 beta alpha)) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (*.f64 (+.f64 beta alpha) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (*.f64 (+.f64 beta alpha) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha)))))) (fma.f64 (neg.f64 (+.f64 beta alpha)) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (*.f64 (+.f64 beta alpha) (/.f64 (+.f64 beta alpha) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (*.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))))) (fma.f64 (neg.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta))) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (*.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))))) (fma.f64 (neg.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta))) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))))) (fma.f64 (neg.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta))) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (*.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))))) (fma.f64 (neg.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta))) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (*.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))))) (fma.f64 (neg.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta))) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (*.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))))) (fma.f64 (neg.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta))) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (/.f64 (+.f64 beta alpha) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -2 (-.f64 beta alpha)) (/.f64 (+.f64 beta alpha) (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (-.f64 -2 beta) (-.f64 beta alpha)) (/.f64 alpha (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -2 (+.f64 beta alpha)) (/.f64 1 (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) 2) (cbrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2) (*.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) (/.f64 1 (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) (sqrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 -2 (+.f64 beta alpha))) (*.f64 (sqrt.f64 (-.f64 -2 (+.f64 beta alpha))) (/.f64 1 (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 -2 (+.f64 beta alpha))) (/.f64 1 (neg.f64 (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 beta alpha)) (-.f64 -2 (+.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2) 1) (/.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 -2 (+.f64 beta alpha))) 1) (/.f64 (sqrt.f64 (-.f64 -2 (+.f64 beta alpha))) (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (/.f64 (-.f64 -2 (+.f64 beta alpha)) (cbrt.f64 (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (cbrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 -2 (+.f64 beta alpha))) (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2)) (/.f64 (sqrt.f64 (-.f64 -2 (+.f64 beta alpha))) (cbrt.f64 (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 beta alpha))) (/.f64 (-.f64 -2 (+.f64 beta alpha)) (sqrt.f64 (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) 2) (sqrt.f64 (-.f64 beta alpha))) (/.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta alpha))) (sqrt.f64 (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (neg.f64 (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 -2 (+.f64 beta alpha)) 3) (pow.f64 (-.f64 beta alpha) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (/.f64 1 (-.f64 beta alpha)) (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -2 (-.f64 beta alpha)) (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha)))) (cbrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (sqrt.f64 (/.f64 -2 (-.f64 beta alpha))) (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -2 (-.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (fma.f64 alpha (+.f64 beta alpha) (*.f64 beta beta)) (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -2 (-.f64 (*.f64 beta beta) (*.f64 alpha alpha))) (+.f64 beta alpha) (neg.f64 (/.f64 (+.f64 beta alpha) (-.f64 beta alpha))))))))"]],"rules":[["egg-rr",121],["egg-rr",50],["egg-rr",26]],"stop":[["node limit",1]],"time":75.989013671875,"type":"rewrite"},{"count":[[269,312]],"egraph":[[2,6228,4052,0.028715917],[1,1402,4459,0.011173167000000001],[0,374,5134,0.002034083]],"inputs":[["(+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))","(+.f64 1/2 (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (pow.f64 alpha 2))) (pow.f64 (+.f64 2 alpha) 2)))))","(+.f64 1/2 (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (pow.f64 alpha 2))) (pow.f64 (+.f64 2 alpha) 2))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) 2)) (pow.f64 (+.f64 2 alpha) 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2))))))))","(+.f64 1/2 (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (pow.f64 alpha 2))) (pow.f64 (+.f64 2 alpha) 2))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 beta 3) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 alpha) 3)))) (*.f64 alpha (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (+.f64 2 alpha))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (pow.f64 alpha 3))) (pow.f64 (+.f64 2 alpha) 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 4))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) 2)) (pow.f64 (+.f64 2 alpha) 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2)))))))))","1","(+.f64 1 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) beta)))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) beta)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha)) (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2)) (pow.f64 beta 2)))))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2) alpha) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha)) (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) (pow.f64 alpha 2))))) (pow.f64 beta 3))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) beta)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha)) (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2)) (pow.f64 beta 2))))))","1","(+.f64 1 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) beta)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) beta)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2)) (pow.f64 beta 2)))))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2) alpha)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) (+.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2)))) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) (pow.f64 alpha 2))))) (pow.f64 beta 3))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) beta)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2)) (pow.f64 beta 2))))))","(+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (pow.f64 (+.f64 beta 2) 2)))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2))))) (pow.f64 (+.f64 beta 2) 2))) (/.f64 (*.f64 (pow.f64 beta 3) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3))) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (pow.f64 (+.f64 beta 2) 2))))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 (*.f64 (pow.f64 beta 2) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (pow.f64 (+.f64 beta 2) 2))) (*.f64 -1 (/.f64 (*.f64 beta (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2))))) (pow.f64 (+.f64 beta 2) 2))) (/.f64 (*.f64 (pow.f64 beta 3) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3))))) (+.f64 beta 2))))) (pow.f64 alpha 3))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2))))) (pow.f64 (+.f64 beta 2) 2))) (/.f64 (*.f64 (pow.f64 beta 3) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3))) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (pow.f64 (+.f64 beta 2) 2)))))))","(*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2))))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 -1 (*.f64 beta (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2))) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 3)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2))) (+.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 3) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 -1 (*.f64 beta (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2))) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))))) (pow.f64 alpha 4))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 -1 (*.f64 beta (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2))) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 3))))))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (pow.f64 alpha 2))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (pow.f64 alpha 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 beta (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 (+.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))))) (pow.f64 alpha 3)))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 3) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 (+.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 -1 (*.f64 beta (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))))) (pow.f64 alpha 4))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 beta (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 (+.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))))) (pow.f64 alpha 3))))))","(/.f64 alpha (+.f64 2 alpha))","(+.f64 (/.f64 alpha (+.f64 2 alpha)) (*.f64 -1 (/.f64 (*.f64 beta (*.f64 (pow.f64 alpha 2) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (pow.f64 (+.f64 2 alpha) 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) 2)) (pow.f64 (+.f64 2 alpha) 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2))))) (+.f64 (/.f64 alpha (+.f64 2 alpha)) (*.f64 -1 (/.f64 (*.f64 beta (*.f64 (pow.f64 alpha 2) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (pow.f64 (+.f64 2 alpha) 2)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) 2)) (pow.f64 (+.f64 2 alpha) 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2))))) (+.f64 (/.f64 alpha (+.f64 2 alpha)) (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (*.f64 (pow.f64 alpha 2) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (pow.f64 (+.f64 2 alpha) 2))) (*.f64 -1 (*.f64 (pow.f64 beta 3) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (pow.f64 alpha 3))) (pow.f64 (+.f64 2 alpha) 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 4))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 alpha) 3)))) (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) alpha)) (+.f64 2 alpha))))))))))","-1","(-.f64 (+.f64 (*.f64 2 (/.f64 1 beta)) (/.f64 alpha beta)) (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1))","(-.f64 (+.f64 (/.f64 alpha beta) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha)) (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2)) (pow.f64 beta 2))) (*.f64 2 (/.f64 1 beta)))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1))","(-.f64 (+.f64 (/.f64 alpha beta) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha)) (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2)) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2) alpha) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha)) (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) (pow.f64 alpha 2))))) (pow.f64 beta 3))) (*.f64 2 (/.f64 1 beta))))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) beta)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2)) (pow.f64 beta 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) beta))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) (+.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2))) (pow.f64 beta 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2)) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2) alpha) (pow.f64 beta 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) beta)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) (pow.f64 alpha 2)) (pow.f64 beta 3))))))) 1)","(*.f64 -1 (/.f64 beta (+.f64 beta 2)))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (/.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (pow.f64 (+.f64 beta 2) 2)))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2))))) (pow.f64 (+.f64 beta 2) 2))) (/.f64 (*.f64 (pow.f64 beta 3) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3))) (pow.f64 alpha 2))) (/.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (pow.f64 (+.f64 beta 2) 2))))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (pow.f64 beta 2) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (pow.f64 (+.f64 beta 2) 2))) (*.f64 -1 (/.f64 (*.f64 beta (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2))))) (pow.f64 (+.f64 beta 2) 2))) (/.f64 (*.f64 (pow.f64 beta 3) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3))))) (+.f64 beta 2))))) (pow.f64 alpha 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2))))) (pow.f64 (+.f64 beta 2) 2))) (/.f64 (*.f64 (pow.f64 beta 3) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3))) (pow.f64 alpha 2))) (/.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (pow.f64 (+.f64 beta 2) 2)))))","1","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) alpha)) 1) (/.f64 beta alpha))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) alpha)) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2))))) (/.f64 beta alpha))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) alpha)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 -1 (*.f64 beta (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2))) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2)))))) (/.f64 beta alpha))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2))) (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 3))) (+.f64 1 (+.f64 (/.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 -1 (/.f64 (*.f64 beta (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (pow.f64 alpha 3))))))))","(/.f64 (+.f64 2 alpha) alpha)","(+.f64 1 (+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))) (*.f64 2 (/.f64 1 alpha))))","(+.f64 1 (+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))) (+.f64 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 2 (/.f64 1 alpha)))))","(+.f64 (*.f64 (pow.f64 beta 3) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 4))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3))))) (+.f64 1 (+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))) (+.f64 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 2 (/.f64 1 alpha))))))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) beta)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) beta)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha) (pow.f64 beta 2)))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) beta)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha) (pow.f64 beta 2))) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) (pow.f64 alpha 2)) (pow.f64 beta 3))))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta)) (+.f64 (/.f64 alpha beta) 1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 beta 2))) (+.f64 (/.f64 alpha beta) 1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) (pow.f64 alpha 2)) (pow.f64 beta 3)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 beta 2)))) (+.f64 (/.f64 alpha beta) 1))","(*.f64 -1 (/.f64 (+.f64 beta 2) beta))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (*.f64 -1 (/.f64 (+.f64 beta 2) beta)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (pow.f64 alpha 2)) beta)) (*.f64 -1 (/.f64 (+.f64 beta 2) beta))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (pow.f64 alpha 2)) beta)) (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) beta)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (pow.f64 alpha 3)) (pow.f64 beta 2))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))","(+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 alpha 2))))","(fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2)","(+.f64 1/2 (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (pow.f64 alpha 2))) (pow.f64 (+.f64 2 alpha) 2)))))","(+.f64 1/2 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) (*.f64 1/2 (/.f64 (*.f64 (*.f64 beta (*.f64 alpha alpha)) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))) (pow.f64 (+.f64 alpha 2) 2)))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 (/.f64 beta (pow.f64 (+.f64 alpha 2) 2)) (*.f64 (*.f64 alpha alpha) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)))) (/.f64 -1/2 (/.f64 (+.f64 alpha 2) alpha))))","(+.f64 1/2 (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 alpha 2)) (/.f64 (pow.f64 (+.f64 alpha 2) 2) beta)) (/.f64 -1/2 (/.f64 (+.f64 alpha 2) alpha))))","(+.f64 1/2 (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (pow.f64 alpha 2))) (pow.f64 (+.f64 2 alpha) 2))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) 2)) (pow.f64 (+.f64 2 alpha) 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2))))))))","(+.f64 1/2 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) (*.f64 1/2 (+.f64 (/.f64 (*.f64 (*.f64 beta (*.f64 alpha alpha)) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))) (pow.f64 (+.f64 alpha 2) 2)) (*.f64 (*.f64 beta beta) (fma.f64 -1 (/.f64 (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2) (/.f64 (pow.f64 (+.f64 alpha 2) 3) (pow.f64 alpha 3))) (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 (pow.f64 (+.f64 alpha 2) 2) (*.f64 alpha alpha)))))))))","(+.f64 1/2 (fma.f64 1/2 (+.f64 (*.f64 (*.f64 beta beta) (-.f64 (*.f64 (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (pow.f64 (+.f64 alpha 2) 2)) (*.f64 alpha alpha)) (*.f64 (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 alpha 2) 3)) (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2)))) (*.f64 (/.f64 beta (pow.f64 (+.f64 alpha 2) 2)) (*.f64 (*.f64 alpha alpha) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))))) (/.f64 -1/2 (/.f64 (+.f64 alpha 2) alpha))))","(+.f64 1/2 (fma.f64 1/2 (+.f64 (*.f64 (*.f64 beta beta) (-.f64 (/.f64 (+.f64 2 (*.f64 (/.f64 2 (pow.f64 alpha 3)) (*.f64 alpha alpha))) (pow.f64 (+.f64 alpha 2) 2)) (/.f64 (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2) (pow.f64 (/.f64 (+.f64 alpha 2) alpha) 3)))) (/.f64 (+.f64 2 (*.f64 alpha 2)) (/.f64 (pow.f64 (+.f64 alpha 2) 2) beta))) (/.f64 -1/2 (/.f64 (+.f64 alpha 2) alpha))))","(+.f64 1/2 (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (pow.f64 alpha 2))) (pow.f64 (+.f64 2 alpha) 2))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 beta 3) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 alpha) 3)))) (*.f64 alpha (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (+.f64 2 alpha))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (pow.f64 alpha 3))) (pow.f64 (+.f64 2 alpha) 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 4))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) 2)) (pow.f64 (+.f64 2 alpha) 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2)))))))))","(+.f64 1/2 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 beta (*.f64 alpha alpha)) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))) (pow.f64 (+.f64 alpha 2) 2)) (*.f64 1/2 (+.f64 (*.f64 (pow.f64 beta 3) (fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2) (/.f64 (pow.f64 (+.f64 alpha 2) 3) (pow.f64 alpha 3))) (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 (pow.f64 (+.f64 alpha 2) 2) (*.f64 alpha alpha)))) (/.f64 (+.f64 alpha 2) (*.f64 alpha (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))))) (fma.f64 -1 (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 (pow.f64 (+.f64 alpha 2) 3) (*.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) (pow.f64 alpha 3)))) (/.f64 (+.f64 (/.f64 2 (pow.f64 alpha 3)) (/.f64 2 (pow.f64 alpha 4))) (/.f64 (pow.f64 (+.f64 alpha 2) 2) (*.f64 alpha alpha)))))) (*.f64 (*.f64 beta beta) (fma.f64 -1 (/.f64 (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2) (/.f64 (pow.f64 (+.f64 alpha 2) 3) (pow.f64 alpha 3))) (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 (pow.f64 (+.f64 alpha 2) 2) (*.f64 alpha alpha))))))))))","(+.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2) (*.f64 1/2 (+.f64 (*.f64 (/.f64 beta (pow.f64 (+.f64 alpha 2) 2)) (*.f64 (*.f64 alpha alpha) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)))) (fma.f64 (pow.f64 beta 3) (-.f64 (-.f64 (/.f64 (+.f64 (/.f64 2 (pow.f64 alpha 3)) (/.f64 2 (pow.f64 alpha 4))) (/.f64 (pow.f64 (+.f64 alpha 2) 2) (*.f64 alpha alpha))) (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 (pow.f64 (+.f64 alpha 2) 3) (*.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) (pow.f64 alpha 3))))) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (pow.f64 (+.f64 alpha 2) 2)) (*.f64 alpha alpha)) (*.f64 (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 alpha 2) 3)) (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2))) (+.f64 alpha 2)) (*.f64 alpha (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))))) (*.f64 (*.f64 beta beta) (-.f64 (*.f64 (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (pow.f64 (+.f64 alpha 2) 2)) (*.f64 alpha alpha)) (*.f64 (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 alpha 2) 3)) (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2))))))))","(+.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2) (*.f64 1/2 (+.f64 (/.f64 (+.f64 2 (*.f64 alpha 2)) (/.f64 (pow.f64 (+.f64 alpha 2) 2) beta)) (fma.f64 (pow.f64 beta 3) (-.f64 (-.f64 (/.f64 (+.f64 (/.f64 2 (pow.f64 alpha 3)) (/.f64 2 (pow.f64 alpha 4))) (/.f64 (pow.f64 (+.f64 alpha 2) 2) (*.f64 alpha alpha))) (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 (pow.f64 (+.f64 alpha 2) 3) (*.f64 alpha (+.f64 2 (*.f64 alpha 2)))))) (*.f64 (/.f64 (-.f64 (/.f64 (+.f64 2 (*.f64 (/.f64 2 (pow.f64 alpha 3)) (*.f64 alpha alpha))) (pow.f64 (+.f64 alpha 2) 2)) (/.f64 (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2) (pow.f64 (/.f64 (+.f64 alpha 2) alpha) 3))) (+.f64 alpha 2)) (fma.f64 alpha (/.f64 2 (*.f64 alpha alpha)) 2))) (*.f64 (*.f64 beta beta) (-.f64 (/.f64 (+.f64 2 (*.f64 (/.f64 2 (pow.f64 alpha 3)) (*.f64 alpha alpha))) (pow.f64 (+.f64 alpha 2) 2)) (/.f64 (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2) (pow.f64 (/.f64 (+.f64 alpha 2) alpha) 3))))))))","1","(+.f64 1 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) beta)))","(+.f64 1 (*.f64 -1/2 (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) beta)))","(fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) beta)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha)) (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2)) (pow.f64 beta 2)))))","(+.f64 1 (fma.f64 -1/2 (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) beta) (*.f64 1/2 (/.f64 (fma.f64 -1 (*.f64 alpha (+.f64 2 (-.f64 alpha (neg.f64 alpha)))) (pow.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) 2)) (*.f64 beta beta)))))","(+.f64 (fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) 1) (*.f64 (/.f64 1/2 beta) (/.f64 (fma.f64 (-.f64 (-.f64 -2 alpha) alpha) alpha (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2)) beta)))","(+.f64 (fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) 1) (*.f64 (/.f64 1/2 beta) (/.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) beta)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2) alpha) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha)) (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) (pow.f64 alpha 2))))) (pow.f64 beta 3))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) beta)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha)) (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2)) (pow.f64 beta 2))))))","(+.f64 1 (fma.f64 1/2 (/.f64 (fma.f64 (pow.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) 2) alpha (*.f64 -1 (+.f64 (*.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) (fma.f64 -1 (*.f64 alpha (+.f64 2 (-.f64 alpha (neg.f64 alpha)))) (pow.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) 2))) (*.f64 (*.f64 alpha alpha) (+.f64 2 (-.f64 alpha (neg.f64 alpha))))))) (pow.f64 beta 3)) (fma.f64 -1/2 (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) beta) (*.f64 1/2 (/.f64 (fma.f64 -1 (*.f64 alpha (+.f64 2 (-.f64 alpha (neg.f64 alpha)))) (pow.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) 2)) (*.f64 beta beta))))))","(+.f64 1 (fma.f64 1/2 (/.f64 (fma.f64 alpha (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2) (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 (fma.f64 (-.f64 (-.f64 -2 alpha) alpha) alpha (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2)) (*.f64 alpha alpha)))) (pow.f64 beta 3)) (fma.f64 1/2 (/.f64 (fma.f64 (-.f64 (-.f64 -2 alpha) alpha) alpha (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2)) (*.f64 beta beta)) (/.f64 (+.f64 -1 (*.f64 (+.f64 alpha alpha) -1/2)) beta))))","(+.f64 1 (fma.f64 1/2 (/.f64 (fma.f64 alpha (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2) (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 alpha alpha)))) (pow.f64 beta 3)) (fma.f64 1/2 (/.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 beta beta)) (/.f64 (+.f64 -1 (*.f64 (+.f64 alpha alpha) -1/2)) beta))))","1","(+.f64 1 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) beta)))","(+.f64 1 (/.f64 (*.f64 1/2 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha)) beta))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) 1)","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) beta)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2)) (pow.f64 beta 2)))))","(+.f64 1 (*.f64 1/2 (+.f64 (/.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) beta) (/.f64 (fma.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) alpha (pow.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) 2)) (*.f64 beta beta)))))","(fma.f64 1/2 (+.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 beta beta))) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2) alpha)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) (+.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2)))) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) (pow.f64 alpha 2))))) (pow.f64 beta 3))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) beta)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2)) (pow.f64 beta 2))))))","(+.f64 1 (fma.f64 -1/2 (/.f64 (fma.f64 -1 (*.f64 alpha (pow.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) 2)) (*.f64 -1 (+.f64 (*.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) (fma.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) alpha (pow.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) 2))) (*.f64 (*.f64 alpha alpha) (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha))))) (pow.f64 beta 3)) (*.f64 1/2 (+.f64 (/.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) beta) (/.f64 (fma.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) alpha (pow.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) 2)) (*.f64 beta beta))))))","(+.f64 (fma.f64 1/2 (+.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 beta beta))) 1) (/.f64 -1/2 (/.f64 (pow.f64 beta 3) (-.f64 (*.f64 (neg.f64 (-.f64 (-.f64 -2 alpha) alpha)) (+.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 alpha alpha))) (*.f64 alpha (pow.f64 (-.f64 (-.f64 -2 alpha) alpha) 2))))))","(+.f64 1 (fma.f64 1/2 (+.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 beta beta))) (*.f64 -1/2 (/.f64 (fma.f64 (+.f64 alpha (+.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 alpha alpha)) (*.f64 alpha (neg.f64 (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2)))) (pow.f64 beta 3)))))","(+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))","(+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta)))","(fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)","(+.f64 1/2 (+.f64 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (pow.f64 (+.f64 beta 2) 2)))))","(+.f64 1/2 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) (*.f64 -1/2 (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta)))))))))","(+.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2) (/.f64 (*.f64 (*.f64 beta beta) -1/2) (/.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) alpha) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))))))","(+.f64 1/2 (fma.f64 -1/2 (/.f64 (*.f64 alpha (*.f64 beta (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)))) (pow.f64 (+.f64 2 beta) 2)) (/.f64 (*.f64 1/2 beta) (+.f64 2 beta))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2))))) (pow.f64 (+.f64 beta 2) 2))) (/.f64 (*.f64 (pow.f64 beta 3) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3))) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (pow.f64 (+.f64 beta 2) 2))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 (*.f64 alpha alpha) (fma.f64 -1 (/.f64 beta (/.f64 (pow.f64 (+.f64 2 beta) 2) (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))))) (/.f64 (pow.f64 beta 3) (/.f64 (pow.f64 (+.f64 2 beta) 3) (pow.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) 2))))) (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) (*.f64 -1/2 (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 (*.f64 alpha alpha) (-.f64 (*.f64 (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (*.f64 (/.f64 beta (pow.f64 (+.f64 2 beta) 2)) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta)))))) (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 (*.f64 beta beta) -1/2) (/.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) alpha) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 (*.f64 alpha alpha) (-.f64 (*.f64 (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (/.f64 (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)) (pow.f64 (+.f64 2 beta) 2)))) (fma.f64 -1/2 (/.f64 (*.f64 alpha (*.f64 beta (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)))) (pow.f64 (+.f64 2 beta) 2)) (/.f64 (*.f64 1/2 beta) (+.f64 2 beta)))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 (*.f64 (pow.f64 beta 2) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (pow.f64 (+.f64 beta 2) 2))) (*.f64 -1 (/.f64 (*.f64 beta (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2))))) (pow.f64 (+.f64 beta 2) 2))) (/.f64 (*.f64 (pow.f64 beta 3) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3))))) (+.f64 beta 2))))) (pow.f64 alpha 3))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2))))) (pow.f64 (+.f64 beta 2) 2))) (/.f64 (*.f64 (pow.f64 beta 3) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3))) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (pow.f64 (+.f64 beta 2) 2)))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 (+.f64 2 beta) 3) (pow.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) 2))) (*.f64 -1 (+.f64 (/.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) (pow.f64 (+.f64 2 beta) 2)) (/.f64 (*.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta)))) (fma.f64 -1 (/.f64 beta (/.f64 (pow.f64 (+.f64 2 beta) 2) (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))))) (/.f64 (pow.f64 beta 3) (/.f64 (pow.f64 (+.f64 2 beta) 3) (pow.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) 2))))) (+.f64 2 beta)))))) (fma.f64 1/2 (*.f64 (*.f64 alpha alpha) (fma.f64 -1 (/.f64 beta (/.f64 (pow.f64 (+.f64 2 beta) 2) (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))))) (/.f64 (pow.f64 beta 3) (/.f64 (pow.f64 (+.f64 2 beta) 3) (pow.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) 2))))) (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) (*.f64 -1/2 (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta)))))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 (pow.f64 alpha 3) (-.f64 (-.f64 (*.f64 (/.f64 (*.f64 beta beta) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (/.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) (pow.f64 (+.f64 2 beta) 2))) (*.f64 (/.f64 beta (+.f64 2 beta)) (*.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) (-.f64 (*.f64 (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (*.f64 (/.f64 beta (pow.f64 (+.f64 2 beta) 2)) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))))))))) (fma.f64 1/2 (*.f64 (*.f64 alpha alpha) (-.f64 (*.f64 (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (*.f64 (/.f64 beta (pow.f64 (+.f64 2 beta) 2)) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta)))))) (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 (*.f64 beta beta) -1/2) (/.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) alpha) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta)))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 (pow.f64 alpha 3) (-.f64 (*.f64 (/.f64 (*.f64 beta beta) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (+.f64 (/.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) (pow.f64 (+.f64 2 beta) 2)) (/.f64 (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)) (/.f64 (+.f64 2 beta) (-.f64 (*.f64 (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (/.f64 (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)) (pow.f64 (+.f64 2 beta) 2)))))))) (fma.f64 1/2 (*.f64 (*.f64 alpha alpha) (-.f64 (*.f64 (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (/.f64 (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)) (pow.f64 (+.f64 2 beta) 2)))) (fma.f64 -1/2 (/.f64 (*.f64 alpha (*.f64 beta (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)))) (pow.f64 (+.f64 2 beta) 2)) (/.f64 (*.f64 1/2 beta) (+.f64 2 beta))))))","(*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha))","(*.f64 -1/2 (/.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) alpha))","(/.f64 (*.f64 -1/2 (-.f64 (fma.f64 beta -1 -2) beta)) alpha)","(/.f64 (*.f64 -1/2 (-.f64 (-.f64 -2 beta) beta)) alpha)","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2))))","(fma.f64 -1/2 (/.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) alpha) (/.f64 (*.f64 1/2 (fma.f64 -1 (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta))))) (*.f64 alpha alpha)))","(fma.f64 -1/2 (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha) (/.f64 (*.f64 -1/2 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (-.f64 (fma.f64 beta -1 -2) beta) beta))) (*.f64 alpha alpha)))","(fma.f64 1/2 (/.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)) (*.f64 alpha alpha)) (/.f64 (*.f64 -1/2 (-.f64 (-.f64 -2 beta) beta)) alpha))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 -1 (*.f64 beta (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2))) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 3)))))","(fma.f64 -1/2 (/.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) alpha) (*.f64 1/2 (+.f64 (/.f64 (fma.f64 -1 (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))) (*.f64 alpha alpha)) (/.f64 (fma.f64 -1 (*.f64 (*.f64 beta beta) (-.f64 (neg.f64 (+.f64 2 beta)) beta)) (fma.f64 -1 (*.f64 beta (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2)) (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (fma.f64 -1 (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta))))))) (pow.f64 alpha 3)))))","(fma.f64 -1/2 (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha) (fma.f64 1/2 (/.f64 (-.f64 (-.f64 (*.f64 (neg.f64 (-.f64 (fma.f64 beta -1 -2) beta)) (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (-.f64 (fma.f64 beta -1 -2) beta) beta))) (*.f64 beta (pow.f64 (-.f64 (fma.f64 beta -1 -2) beta) 2))) (*.f64 (*.f64 beta beta) (-.f64 (fma.f64 beta -1 -2) beta))) (pow.f64 alpha 3)) (/.f64 (*.f64 -1/2 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (-.f64 (fma.f64 beta -1 -2) beta) beta))) (*.f64 alpha alpha))))","(fma.f64 1/2 (+.f64 (/.f64 (neg.f64 (+.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (*.f64 beta beta) (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)))) (*.f64 beta (pow.f64 (-.f64 (-.f64 -2 beta) beta) 2)))) (pow.f64 alpha 3)) (/.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)) (*.f64 alpha alpha))) (/.f64 (*.f64 -1/2 (-.f64 (-.f64 -2 beta) beta)) alpha))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2))) (+.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 3) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 -1 (*.f64 beta (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2))) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))))) (pow.f64 alpha 4))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 -1 (*.f64 beta (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2))) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 3))))))","(fma.f64 1/2 (/.f64 (fma.f64 -1 (*.f64 (*.f64 beta beta) (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2)) (fma.f64 beta (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (fma.f64 -1 (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta))))) (fma.f64 -1 (*.f64 (pow.f64 beta 3) (-.f64 (neg.f64 (+.f64 2 beta)) beta)) (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (fma.f64 -1 (*.f64 (*.f64 beta beta) (-.f64 (neg.f64 (+.f64 2 beta)) beta)) (fma.f64 -1 (*.f64 beta (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2)) (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (fma.f64 -1 (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta))))))))))) (pow.f64 alpha 4)) (fma.f64 -1/2 (/.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) alpha) (*.f64 1/2 (+.f64 (/.f64 (fma.f64 -1 (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))) (*.f64 alpha alpha)) (/.f64 (fma.f64 -1 (*.f64 (*.f64 beta beta) (-.f64 (neg.f64 (+.f64 2 beta)) beta)) (fma.f64 -1 (*.f64 beta (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2)) (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (fma.f64 -1 (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta))))))) (pow.f64 alpha 3))))))","(fma.f64 1/2 (/.f64 (-.f64 (fma.f64 beta (*.f64 (neg.f64 (-.f64 (fma.f64 beta -1 -2) beta)) (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (-.f64 (fma.f64 beta -1 -2) beta) beta))) (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (neg.f64 (pow.f64 beta 3)) (-.f64 (-.f64 (*.f64 (neg.f64 (-.f64 (fma.f64 beta -1 -2) beta)) (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (-.f64 (fma.f64 beta -1 -2) beta) beta))) (*.f64 beta (pow.f64 (-.f64 (fma.f64 beta -1 -2) beta) 2))) (*.f64 (*.f64 beta beta) (-.f64 (fma.f64 beta -1 -2) beta)))))) (*.f64 (*.f64 beta beta) (pow.f64 (-.f64 (fma.f64 beta -1 -2) beta) 2))) (pow.f64 alpha 4)) (fma.f64 -1/2 (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha) (fma.f64 1/2 (/.f64 (-.f64 (-.f64 (*.f64 (neg.f64 (-.f64 (fma.f64 beta -1 -2) beta)) (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (-.f64 (fma.f64 beta -1 -2) beta) beta))) (*.f64 beta (pow.f64 (-.f64 (fma.f64 beta -1 -2) beta) 2))) (*.f64 (*.f64 beta beta) (-.f64 (fma.f64 beta -1 -2) beta))) (pow.f64 alpha 3)) (/.f64 (*.f64 -1/2 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (-.f64 (fma.f64 beta -1 -2) beta) beta))) (*.f64 alpha alpha)))))","(fma.f64 1/2 (/.f64 (+.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (*.f64 (*.f64 beta beta) (+.f64 beta (+.f64 2 beta))) (+.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (*.f64 beta beta) (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)))) (*.f64 beta (pow.f64 (-.f64 (-.f64 -2 beta) beta) 2))))) (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (*.f64 beta (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta))) (pow.f64 beta 3)))) (pow.f64 alpha 4)) (fma.f64 1/2 (+.f64 (/.f64 (neg.f64 (+.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (*.f64 beta beta) (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)))) (*.f64 beta (pow.f64 (-.f64 (-.f64 -2 beta) beta) 2)))) (pow.f64 alpha 3)) (/.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)) (*.f64 alpha alpha))) (/.f64 (*.f64 -1/2 (-.f64 (-.f64 -2 beta) beta)) alpha)))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(/.f64 (*.f64 1/2 (-.f64 beta (neg.f64 (+.f64 2 beta)))) alpha)","(/.f64 (*.f64 1/2 (+.f64 beta (+.f64 2 beta))) alpha)","(*.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (pow.f64 alpha 2))))","(*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (fma.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (-.f64 (neg.f64 (+.f64 2 beta)) beta) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))) (*.f64 alpha alpha))))","(*.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (neg.f64 beta) (+.f64 beta (+.f64 2 beta)))) (*.f64 alpha alpha))))","(*.f64 1/2 (+.f64 (/.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)) (*.f64 alpha alpha)) (/.f64 (+.f64 beta (+.f64 2 beta)) alpha)))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (pow.f64 alpha 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 beta (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 (+.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))))) (pow.f64 alpha 3)))))","(fma.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (fma.f64 1/2 (/.f64 (fma.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (-.f64 (neg.f64 (+.f64 2 beta)) beta) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))) (*.f64 alpha alpha)) (*.f64 -1/2 (/.f64 (fma.f64 -1 (*.f64 beta (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (-.f64 beta (neg.f64 (+.f64 2 beta))))) (fma.f64 (*.f64 beta beta) (-.f64 (neg.f64 (+.f64 2 beta)) beta) (neg.f64 (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (fma.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (-.f64 (neg.f64 (+.f64 2 beta)) beta) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))))))) (pow.f64 alpha 3)))))","(fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (neg.f64 beta) (+.f64 beta (+.f64 2 beta)))) (*.f64 alpha alpha))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (*.f64 beta beta) (neg.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (neg.f64 beta) (+.f64 beta (+.f64 2 beta))))))) (*.f64 beta (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 beta (+.f64 2 beta))))) (pow.f64 alpha 3))))","(fma.f64 1/2 (+.f64 (/.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)) (*.f64 alpha alpha)) (/.f64 (+.f64 beta (+.f64 2 beta)) alpha)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (*.f64 beta beta) (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)))) (*.f64 beta (pow.f64 (-.f64 (-.f64 -2 beta) beta) 2))) (pow.f64 alpha 3))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 3) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 (+.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 -1 (*.f64 beta (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))))) (pow.f64 alpha 4))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 beta (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 (+.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))))) (pow.f64 alpha 3))))))","(fma.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (fma.f64 1/2 (/.f64 (fma.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (-.f64 (neg.f64 (+.f64 2 beta)) beta) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))) (*.f64 alpha alpha)) (fma.f64 1/2 (/.f64 (fma.f64 -1 (*.f64 (pow.f64 beta 3) (-.f64 (neg.f64 (+.f64 2 beta)) beta)) (fma.f64 (fma.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (-.f64 (neg.f64 (+.f64 2 beta)) beta) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))) (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)) (fma.f64 (*.f64 beta beta) (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (-.f64 beta (neg.f64 (+.f64 2 beta)))) (neg.f64 (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (fma.f64 -1 (*.f64 beta (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (-.f64 beta (neg.f64 (+.f64 2 beta))))) (fma.f64 (*.f64 beta beta) (-.f64 (neg.f64 (+.f64 2 beta)) beta) (neg.f64 (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (fma.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (-.f64 (neg.f64 (+.f64 2 beta)) beta) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta))))))))))))) (pow.f64 alpha 4)) (*.f64 -1/2 (/.f64 (fma.f64 -1 (*.f64 beta (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (-.f64 beta (neg.f64 (+.f64 2 beta))))) (fma.f64 (*.f64 beta beta) (-.f64 (neg.f64 (+.f64 2 beta)) beta) (neg.f64 (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (fma.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (-.f64 (neg.f64 (+.f64 2 beta)) beta) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))))))) (pow.f64 alpha 3))))))","(fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (neg.f64 beta) (+.f64 beta (+.f64 2 beta)))) (*.f64 alpha alpha))) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (*.f64 (*.f64 beta beta) (+.f64 beta (+.f64 2 beta))) (neg.f64 (-.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (*.f64 beta beta) (neg.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (neg.f64 beta) (+.f64 beta (+.f64 2 beta))))))) (*.f64 beta (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 beta (+.f64 2 beta)))))))) (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (neg.f64 (pow.f64 beta 3)) (*.f64 beta (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (neg.f64 beta) (+.f64 beta (+.f64 2 beta)))))))) (pow.f64 alpha 4)) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (*.f64 beta beta) (neg.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (neg.f64 beta) (+.f64 beta (+.f64 2 beta))))))) (*.f64 beta (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 beta (+.f64 2 beta))))) (pow.f64 alpha 3)))))","(fma.f64 1/2 (+.f64 (/.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)) (*.f64 alpha alpha)) (/.f64 (+.f64 beta (+.f64 2 beta)) alpha)) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (*.f64 (*.f64 beta beta) (+.f64 beta (+.f64 2 beta))) (+.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (*.f64 beta beta) (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)))) (*.f64 beta (pow.f64 (-.f64 (-.f64 -2 beta) beta) 2))))) (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (*.f64 beta (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta))) (pow.f64 beta 3)))) (pow.f64 alpha 4)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (*.f64 beta beta) (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)))) (*.f64 beta (pow.f64 (-.f64 (-.f64 -2 beta) beta) 2))) (pow.f64 alpha 3)))))","(/.f64 alpha (+.f64 2 alpha))","(/.f64 alpha (+.f64 alpha 2))","(+.f64 (/.f64 alpha (+.f64 2 alpha)) (*.f64 -1 (/.f64 (*.f64 beta (*.f64 (pow.f64 alpha 2) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (pow.f64 (+.f64 2 alpha) 2))))","(+.f64 (/.f64 alpha (+.f64 alpha 2)) (neg.f64 (/.f64 (*.f64 (*.f64 beta (*.f64 alpha alpha)) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))) (pow.f64 (+.f64 alpha 2) 2))))","(-.f64 (/.f64 alpha (+.f64 alpha 2)) (*.f64 (/.f64 beta (pow.f64 (+.f64 alpha 2) 2)) (*.f64 (*.f64 alpha alpha) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)))))","(-.f64 (/.f64 alpha (+.f64 alpha 2)) (/.f64 (+.f64 2 (*.f64 alpha 2)) (/.f64 (pow.f64 (+.f64 alpha 2) 2) beta)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) 2)) (pow.f64 (+.f64 2 alpha) 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2))))) (+.f64 (/.f64 alpha (+.f64 2 alpha)) (*.f64 -1 (/.f64 (*.f64 beta (*.f64 (pow.f64 alpha 2) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (pow.f64 (+.f64 2 alpha) 2)))))","(fma.f64 -1 (*.f64 (*.f64 beta beta) (fma.f64 -1 (/.f64 (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2) (/.f64 (pow.f64 (+.f64 alpha 2) 3) (pow.f64 alpha 3))) (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 (pow.f64 (+.f64 alpha 2) 2) (*.f64 alpha alpha))))) (+.f64 (/.f64 alpha (+.f64 alpha 2)) (neg.f64 (/.f64 (*.f64 (*.f64 beta (*.f64 alpha alpha)) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))) (pow.f64 (+.f64 alpha 2) 2)))))","(fma.f64 (*.f64 (neg.f64 beta) beta) (-.f64 (*.f64 (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (pow.f64 (+.f64 alpha 2) 2)) (*.f64 alpha alpha)) (*.f64 (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 alpha 2) 3)) (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2))) (-.f64 (/.f64 alpha (+.f64 alpha 2)) (*.f64 (/.f64 beta (pow.f64 (+.f64 alpha 2) 2)) (*.f64 (*.f64 alpha alpha) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))))))","(fma.f64 (*.f64 (neg.f64 beta) beta) (-.f64 (/.f64 (+.f64 2 (*.f64 (/.f64 2 (pow.f64 alpha 3)) (*.f64 alpha alpha))) (pow.f64 (+.f64 alpha 2) 2)) (/.f64 (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2) (pow.f64 (/.f64 (+.f64 alpha 2) alpha) 3))) (-.f64 (/.f64 alpha (+.f64 alpha 2)) (/.f64 (+.f64 2 (*.f64 alpha 2)) (/.f64 (pow.f64 (+.f64 alpha 2) 2) beta))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) 2)) (pow.f64 (+.f64 2 alpha) 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2))))) (+.f64 (/.f64 alpha (+.f64 2 alpha)) (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (*.f64 (pow.f64 alpha 2) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (pow.f64 (+.f64 2 alpha) 2))) (*.f64 -1 (*.f64 (pow.f64 beta 3) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (pow.f64 alpha 3))) (pow.f64 (+.f64 2 alpha) 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 4))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3)))) (pow.f64 alpha 2)) (pow.f64 (+.f64 2 alpha) 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 alpha) 3)))) (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) alpha)) (+.f64 2 alpha))))))))))","(fma.f64 -1 (*.f64 (*.f64 beta beta) (fma.f64 -1 (/.f64 (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2) (/.f64 (pow.f64 (+.f64 alpha 2) 3) (pow.f64 alpha 3))) (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 (pow.f64 (+.f64 alpha 2) 2) (*.f64 alpha alpha))))) (+.f64 (/.f64 alpha (+.f64 alpha 2)) (*.f64 -1 (+.f64 (/.f64 (*.f64 (*.f64 beta (*.f64 alpha alpha)) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))) (pow.f64 (+.f64 alpha 2) 2)) (*.f64 (pow.f64 beta 3) (fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2) (/.f64 (pow.f64 (+.f64 alpha 2) 3) (pow.f64 alpha 3))) (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 (pow.f64 (+.f64 alpha 2) 2) (*.f64 alpha alpha)))) (/.f64 (+.f64 alpha 2) (*.f64 alpha (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))))) (fma.f64 -1 (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 (pow.f64 (+.f64 alpha 2) 3) (*.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) (pow.f64 alpha 3)))) (/.f64 (+.f64 (/.f64 2 (pow.f64 alpha 3)) (/.f64 2 (pow.f64 alpha 4))) (/.f64 (pow.f64 (+.f64 alpha 2) 2) (*.f64 alpha alpha))))))))))","(-.f64 (-.f64 (-.f64 (/.f64 alpha (+.f64 alpha 2)) (*.f64 (/.f64 beta (pow.f64 (+.f64 alpha 2) 2)) (*.f64 (*.f64 alpha alpha) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))))) (*.f64 (pow.f64 beta 3) (-.f64 (-.f64 (/.f64 (+.f64 (/.f64 2 (pow.f64 alpha 3)) (/.f64 2 (pow.f64 alpha 4))) (/.f64 (pow.f64 (+.f64 alpha 2) 2) (*.f64 alpha alpha))) (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 (pow.f64 (+.f64 alpha 2) 3) (*.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) (pow.f64 alpha 3))))) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (pow.f64 (+.f64 alpha 2) 2)) (*.f64 alpha alpha)) (*.f64 (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 alpha 2) 3)) (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2))) (+.f64 alpha 2)) (*.f64 alpha (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha))))))) (*.f64 (*.f64 beta beta) (-.f64 (*.f64 (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (pow.f64 (+.f64 alpha 2) 2)) (*.f64 alpha alpha)) (*.f64 (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 alpha 2) 3)) (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2)))))","(-.f64 (fma.f64 (*.f64 (neg.f64 beta) beta) (-.f64 (/.f64 (+.f64 2 (*.f64 (/.f64 2 (pow.f64 alpha 3)) (*.f64 alpha alpha))) (pow.f64 (+.f64 alpha 2) 2)) (/.f64 (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2) (pow.f64 (/.f64 (+.f64 alpha 2) alpha) 3))) (-.f64 (/.f64 alpha (+.f64 alpha 2)) (/.f64 (+.f64 2 (*.f64 alpha 2)) (/.f64 (pow.f64 (+.f64 alpha 2) 2) beta)))) (*.f64 (pow.f64 beta 3) (-.f64 (-.f64 (/.f64 (+.f64 (/.f64 2 (pow.f64 alpha 3)) (/.f64 2 (pow.f64 alpha 4))) (/.f64 (pow.f64 (+.f64 alpha 2) 2) (*.f64 alpha alpha))) (/.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 (pow.f64 (+.f64 alpha 2) 3) (*.f64 alpha (+.f64 2 (*.f64 alpha 2)))))) (*.f64 (/.f64 (-.f64 (/.f64 (+.f64 2 (*.f64 (/.f64 2 (pow.f64 alpha 3)) (*.f64 alpha alpha))) (pow.f64 (+.f64 alpha 2) 2)) (/.f64 (pow.f64 (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) 2) (pow.f64 (/.f64 (+.f64 alpha 2) alpha) 3))) (+.f64 alpha 2)) (fma.f64 alpha (/.f64 2 (*.f64 alpha alpha)) 2)))))","-1","(-.f64 (+.f64 (*.f64 2 (/.f64 1 beta)) (/.f64 alpha beta)) (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1))","(+.f64 (/.f64 2 beta) (-.f64 (/.f64 alpha beta) (fma.f64 -1 (/.f64 alpha beta) 1)))","(+.f64 (/.f64 2 beta) (-.f64 (/.f64 alpha beta) (-.f64 1 (/.f64 alpha beta))))","(+.f64 (/.f64 2 beta) (+.f64 (/.f64 alpha beta) (+.f64 -1 (/.f64 alpha beta))))","(-.f64 (+.f64 (/.f64 alpha beta) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha)) (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2)) (pow.f64 beta 2))) (*.f64 2 (/.f64 1 beta)))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1))","(+.f64 (/.f64 alpha beta) (-.f64 (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 alpha (+.f64 2 (-.f64 alpha (neg.f64 alpha)))) (pow.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) 2)) (*.f64 beta beta)) (/.f64 2 beta)) (fma.f64 -1 (/.f64 alpha beta) 1)))","(+.f64 (-.f64 (/.f64 2 beta) (/.f64 (fma.f64 (-.f64 (-.f64 -2 alpha) alpha) alpha (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2)) (*.f64 beta beta))) (-.f64 (/.f64 alpha beta) (-.f64 1 (/.f64 alpha beta))))","(+.f64 (/.f64 alpha beta) (+.f64 (+.f64 (/.f64 2 beta) (-.f64 (/.f64 alpha beta) (/.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 beta beta)))) -1))","(-.f64 (+.f64 (/.f64 alpha beta) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha)) (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2)) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2) alpha) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha)) (pow.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) 2)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) (pow.f64 alpha 2))))) (pow.f64 beta 3))) (*.f64 2 (/.f64 1 beta))))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1))","(+.f64 (/.f64 alpha beta) (-.f64 (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 alpha (+.f64 2 (-.f64 alpha (neg.f64 alpha)))) (pow.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) 2)) (*.f64 beta beta)) (fma.f64 -1 (/.f64 (fma.f64 (pow.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) 2) alpha (*.f64 -1 (+.f64 (*.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) (fma.f64 -1 (*.f64 alpha (+.f64 2 (-.f64 alpha (neg.f64 alpha)))) (pow.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) 2))) (*.f64 (*.f64 alpha alpha) (+.f64 2 (-.f64 alpha (neg.f64 alpha))))))) (pow.f64 beta 3)) (/.f64 2 beta))) (fma.f64 -1 (/.f64 alpha beta) 1)))","(+.f64 (-.f64 (-.f64 (/.f64 2 beta) (/.f64 (fma.f64 alpha (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2) (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 (fma.f64 (-.f64 (-.f64 -2 alpha) alpha) alpha (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2)) (*.f64 alpha alpha)))) (pow.f64 beta 3))) (/.f64 (fma.f64 (-.f64 (-.f64 -2 alpha) alpha) alpha (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2)) (*.f64 beta beta))) (-.f64 (/.f64 alpha beta) (-.f64 1 (/.f64 alpha beta))))","(+.f64 (-.f64 (/.f64 2 beta) (+.f64 (/.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 beta beta)) (/.f64 (fma.f64 alpha (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2) (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 alpha alpha)))) (pow.f64 beta 3)))) (+.f64 (/.f64 alpha beta) (+.f64 -1 (/.f64 alpha beta))))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) beta)) 1)","(fma.f64 -1 (/.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) beta) -1)","(fma.f64 -1 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) -1)","(+.f64 -1 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2)) (pow.f64 beta 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) beta))) 1)","(+.f64 (neg.f64 (/.f64 (fma.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) alpha (pow.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) 2)) (*.f64 beta beta))) (fma.f64 -1 (/.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) beta) -1))","(fma.f64 -1 (+.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 beta beta))) -1)","(-.f64 (+.f64 -1 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta)) (/.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 beta beta)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) (+.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2))) (pow.f64 beta 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2)) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) 2) alpha) (pow.f64 beta 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) beta)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) (pow.f64 alpha 2)) (pow.f64 beta 3))))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) (/.f64 (pow.f64 beta 3) (fma.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) alpha (pow.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) 2)))) (fma.f64 -1 (/.f64 (fma.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) alpha (pow.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) 2)) (*.f64 beta beta)) (fma.f64 -1 (/.f64 (pow.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) 2) (/.f64 (pow.f64 beta 3) alpha)) (*.f64 -1 (+.f64 (/.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) beta) (/.f64 (-.f64 (+.f64 -2 (neg.f64 alpha)) alpha) (/.f64 (pow.f64 beta 3) (*.f64 alpha alpha)))))))) -1)","(+.f64 -1 (-.f64 (-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (-.f64 (-.f64 -2 alpha) alpha) 2)) (/.f64 (pow.f64 beta 3) alpha)) (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta)) (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (/.f64 (pow.f64 beta 3) (*.f64 alpha alpha)))) (/.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 beta beta))) (/.f64 (+.f64 (*.f64 alpha (pow.f64 (-.f64 (-.f64 -2 alpha) alpha) 2)) (pow.f64 (-.f64 (-.f64 -2 alpha) alpha) 3)) (pow.f64 beta 3))))","(-.f64 (+.f64 (-.f64 (+.f64 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) (pow.f64 beta 3)) (*.f64 alpha alpha)) (-.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (*.f64 (/.f64 (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2) (pow.f64 beta 3)) alpha))) (/.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 alpha (-.f64 (-.f64 -2 alpha) alpha))) (*.f64 beta beta))) -1) (/.f64 (+.f64 (*.f64 alpha (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2)) (pow.f64 (-.f64 (-.f64 -2 alpha) alpha) 3)) (pow.f64 beta 3)))","(*.f64 -1 (/.f64 beta (+.f64 beta 2)))","(neg.f64 (/.f64 beta (+.f64 2 beta)))","(/.f64 (neg.f64 beta) (+.f64 2 beta))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (/.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (pow.f64 (+.f64 beta 2) 2)))","(fma.f64 -1 (/.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta)))))))","(-.f64 (/.f64 (*.f64 beta beta) (/.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) alpha) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))))) (/.f64 beta (+.f64 2 beta)))","(-.f64 (/.f64 (*.f64 alpha (*.f64 beta (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)))) (pow.f64 (+.f64 2 beta) 2)) (/.f64 beta (+.f64 2 beta)))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2))))) (pow.f64 (+.f64 beta 2) 2))) (/.f64 (*.f64 (pow.f64 beta 3) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3))) (pow.f64 alpha 2))) (/.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (pow.f64 (+.f64 beta 2) 2))))","(fma.f64 -1 (/.f64 beta (+.f64 2 beta)) (fma.f64 -1 (*.f64 (*.f64 alpha alpha) (fma.f64 -1 (/.f64 beta (/.f64 (pow.f64 (+.f64 2 beta) 2) (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))))) (/.f64 (pow.f64 beta 3) (/.f64 (pow.f64 (+.f64 2 beta) 3) (pow.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) 2))))) (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))))))))","(-.f64 (-.f64 (/.f64 (*.f64 beta beta) (/.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) alpha) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))))) (*.f64 (*.f64 alpha alpha) (-.f64 (*.f64 (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (*.f64 (/.f64 beta (pow.f64 (+.f64 2 beta) 2)) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))))))) (/.f64 beta (+.f64 2 beta)))","(-.f64 (-.f64 (/.f64 (*.f64 alpha (*.f64 beta (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)))) (pow.f64 (+.f64 2 beta) 2)) (/.f64 beta (+.f64 2 beta))) (*.f64 (*.f64 alpha alpha) (-.f64 (*.f64 (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (/.f64 (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)) (pow.f64 (+.f64 2 beta) 2)))))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (pow.f64 beta 2) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (pow.f64 (+.f64 beta 2) 2))) (*.f64 -1 (/.f64 (*.f64 beta (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2))))) (pow.f64 (+.f64 beta 2) 2))) (/.f64 (*.f64 (pow.f64 beta 3) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3))))) (+.f64 beta 2))))) (pow.f64 alpha 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2))))) (pow.f64 (+.f64 beta 2) 2))) (/.f64 (*.f64 (pow.f64 beta 3) (pow.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) 2)) (pow.f64 (+.f64 beta 2) 3))) (pow.f64 alpha 2))) (/.f64 (*.f64 (pow.f64 beta 2) (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (pow.f64 (+.f64 beta 2) 2)))))","(fma.f64 -1 (/.f64 beta (+.f64 2 beta)) (fma.f64 -1 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 (+.f64 2 beta) 3) (pow.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) 2))) (*.f64 -1 (+.f64 (/.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) (pow.f64 (+.f64 2 beta) 2)) (/.f64 (*.f64 (*.f64 beta (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta)))) (fma.f64 -1 (/.f64 beta (/.f64 (pow.f64 (+.f64 2 beta) 2) (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))))) (/.f64 (pow.f64 beta 3) (/.f64 (pow.f64 (+.f64 2 beta) 3) (pow.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) 2))))) (+.f64 2 beta)))))) (fma.f64 -1 (*.f64 (*.f64 alpha alpha) (fma.f64 -1 (/.f64 beta (/.f64 (pow.f64 (+.f64 2 beta) 2) (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))))) (/.f64 (pow.f64 beta 3) (/.f64 (pow.f64 (+.f64 2 beta) 3) (pow.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) 2))))) (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta)))))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 beta beta) (/.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) alpha) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))))) (*.f64 (*.f64 alpha alpha) (-.f64 (*.f64 (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (*.f64 (/.f64 beta (pow.f64 (+.f64 2 beta) 2)) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))))))) (*.f64 (pow.f64 alpha 3) (-.f64 (-.f64 (*.f64 (/.f64 (*.f64 beta beta) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (/.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) (pow.f64 (+.f64 2 beta) 2))) (*.f64 (/.f64 beta (+.f64 2 beta)) (*.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) (-.f64 (*.f64 (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (*.f64 (/.f64 beta (pow.f64 (+.f64 2 beta) 2)) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta)))))))))) (/.f64 beta (+.f64 2 beta)))","(-.f64 (-.f64 (/.f64 (*.f64 alpha (*.f64 beta (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)))) (pow.f64 (+.f64 2 beta) 2)) (*.f64 (*.f64 alpha alpha) (-.f64 (*.f64 (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (/.f64 (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)) (pow.f64 (+.f64 2 beta) 2))))) (+.f64 (/.f64 beta (+.f64 2 beta)) (*.f64 (pow.f64 alpha 3) (-.f64 (*.f64 (/.f64 (*.f64 beta beta) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (+.f64 (/.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) (pow.f64 (+.f64 2 beta) 2)) (/.f64 (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)) (/.f64 (+.f64 2 beta) (-.f64 (*.f64 (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 2 beta) 3)) (pow.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) 2)) (/.f64 (+.f64 1 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 beta beta)) beta)) (pow.f64 (+.f64 2 beta) 2))))))))))","1","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) alpha)) 1) (/.f64 beta alpha))","(-.f64 (fma.f64 -1 (/.f64 (+.f64 2 beta) alpha) 1) (/.f64 beta alpha))","(-.f64 1 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) alpha)) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2))))) (/.f64 beta alpha))","(-.f64 (+.f64 (fma.f64 -1 (/.f64 (+.f64 2 beta) alpha) 1) (neg.f64 (/.f64 (fma.f64 -1 (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))) (*.f64 alpha alpha)))) (/.f64 beta alpha))","(+.f64 (-.f64 1 (/.f64 (neg.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (-.f64 (fma.f64 beta -1 -2) beta) beta))) (*.f64 alpha alpha))) (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha))","(+.f64 1 (-.f64 (/.f64 (-.f64 (-.f64 -2 beta) beta) alpha) (/.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)) (*.f64 alpha alpha))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) alpha)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (+.f64 (*.f64 -1 (*.f64 beta (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2))) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) 2)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2)))))) (/.f64 beta alpha))","(-.f64 (+.f64 (fma.f64 -1 (/.f64 (+.f64 2 beta) alpha) 1) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 (*.f64 beta beta) (-.f64 (neg.f64 (+.f64 2 beta)) beta)) (fma.f64 -1 (*.f64 beta (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2)) (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (fma.f64 -1 (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta))))))) (pow.f64 alpha 3)) (neg.f64 (/.f64 (fma.f64 -1 (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))) (*.f64 alpha alpha))))) (/.f64 beta alpha))","(+.f64 (-.f64 (-.f64 1 (/.f64 (-.f64 (-.f64 (*.f64 (neg.f64 (-.f64 (fma.f64 beta -1 -2) beta)) (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (-.f64 (fma.f64 beta -1 -2) beta) beta))) (*.f64 beta (pow.f64 (-.f64 (fma.f64 beta -1 -2) beta) 2))) (*.f64 (*.f64 beta beta) (-.f64 (fma.f64 beta -1 -2) beta))) (pow.f64 alpha 3))) (/.f64 (neg.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (-.f64 (fma.f64 beta -1 -2) beta) beta))) (*.f64 alpha alpha))) (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha))","(+.f64 (+.f64 1 (-.f64 (/.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (+.f64 (-.f64 (-.f64 -2 beta) beta) beta)) (*.f64 alpha alpha)) (/.f64 (neg.f64 (+.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (*.f64 beta beta) (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)))) (*.f64 beta (pow.f64 (-.f64 (-.f64 -2 beta) beta) 2)))) (pow.f64 alpha 3)))) (/.f64 (-.f64 (-.f64 -2 beta) beta) alpha))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(-.f64 (fma.f64 -1 (/.f64 (+.f64 2 beta) alpha) 1) (/.f64 beta alpha))","(-.f64 1 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2))) (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))))","(-.f64 (+.f64 (fma.f64 -1 (/.f64 (+.f64 2 beta) alpha) 1) (neg.f64 (/.f64 (fma.f64 -1 (pow.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) 2) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))) (*.f64 alpha alpha)))) (/.f64 beta alpha))","(+.f64 (-.f64 1 (/.f64 (neg.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (-.f64 (fma.f64 beta -1 -2) beta) beta))) (*.f64 alpha alpha))) (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha))","(+.f64 1 (-.f64 (/.f64 (-.f64 (-.f64 -2 beta) beta) alpha) (/.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta)) (*.f64 alpha alpha))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 3))) (+.f64 1 (+.f64 (/.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)))) (pow.f64 alpha 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 -1 (/.f64 (*.f64 beta (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta))) (pow.f64 alpha 3))))))))","(fma.f64 -1 (/.f64 (fma.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (-.f64 (neg.f64 (+.f64 2 beta)) beta) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))) (/.f64 (pow.f64 alpha 3) (-.f64 (neg.f64 (+.f64 2 beta)) beta))) (+.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 beta beta) (-.f64 (neg.f64 (+.f64 2 beta)) beta)) (pow.f64 alpha 3))) (fma.f64 -1 (/.f64 (fma.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (-.f64 (neg.f64 (+.f64 2 beta)) beta) (neg.f64 (*.f64 beta (-.f64 (neg.f64 (+.f64 2 beta)) beta)))) (*.f64 alpha alpha)) (*.f64 -1 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 beta (/.f64 (pow.f64 alpha 3) (*.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) (-.f64 beta (neg.f64 (+.f64 2 beta)))))))))))","(-.f64 (+.f64 1 (+.f64 (-.f64 (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha) (/.f64 beta (/.f64 (pow.f64 alpha 3) (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 beta (+.f64 2 beta)))))) (-.f64 (*.f64 (/.f64 (*.f64 beta beta) (pow.f64 alpha 3)) (-.f64 (fma.f64 beta -1 -2) beta)) (/.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (neg.f64 beta) (+.f64 beta (+.f64 2 beta)))) (*.f64 alpha alpha))))) (/.f64 (*.f64 (-.f64 (fma.f64 beta -1 -2) beta) (+.f64 (neg.f64 beta) (+.f64 beta (+.f64 2 beta)))) (/.f64 (pow.f64 alpha 3) (-.f64 (fma.f64 beta -1 -2) beta))))","(+.f64 (+.f64 (-.f64 (/.f64 (-.f64 (-.f64 -2 beta) beta) alpha) (*.f64 (/.f64 beta (pow.f64 alpha 3)) (neg.f64 (pow.f64 (-.f64 (-.f64 -2 beta) beta) 2)))) (fma.f64 (/.f64 (*.f64 beta beta) (pow.f64 alpha 3)) (-.f64 (-.f64 -2 beta) beta) (/.f64 (*.f64 (-.f64 (-.f64 -2 beta) beta) (+.f64 (-.f64 (-.f64 -2 beta) beta) beta)) (*.f64 alpha alpha)))) (+.f64 1 (/.f64 (*.f64 (+.f64 beta (+.f64 2 beta)) (*.f64 (-.f64 (-.f64 -2 beta) beta) (-.f64 (+.f64 beta (+.f64 2 beta)) beta))) (pow.f64 alpha 3))))","(/.f64 (+.f64 2 alpha) alpha)","(/.f64 (+.f64 alpha 2) alpha)","(+.f64 1 (+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))) (*.f64 2 (/.f64 1 alpha))))","(+.f64 1 (fma.f64 beta (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) (/.f64 2 alpha)))","(+.f64 1 (+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))) (+.f64 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 2 (/.f64 1 alpha)))))","(+.f64 1 (fma.f64 beta (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 2 alpha))))","(+.f64 (*.f64 (pow.f64 beta 3) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 4))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3))))) (+.f64 1 (+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))) (+.f64 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 2 (/.f64 1 alpha))))))","(fma.f64 (pow.f64 beta 3) (+.f64 (/.f64 2 (pow.f64 alpha 3)) (/.f64 2 (pow.f64 alpha 4))) (+.f64 1 (fma.f64 beta (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 2 alpha)))))","(+.f64 (fma.f64 beta (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 alpha)) (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 2 (pow.f64 alpha 3))) (/.f64 2 alpha))) (fma.f64 (pow.f64 beta 3) (+.f64 (/.f64 2 (pow.f64 alpha 3)) (/.f64 2 (pow.f64 alpha 4))) 1))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) beta)) 1)","(fma.f64 -1 (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) beta) -1)","(+.f64 -1 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) beta)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha) (pow.f64 beta 2)))) 1)","(+.f64 (*.f64 -1 (+.f64 (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) beta) (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) (/.f64 (*.f64 beta beta) alpha)))) -1)","(+.f64 -1 (+.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 alpha beta))))","(+.f64 -1 (fma.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 alpha beta) (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) beta)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) alpha) (pow.f64 beta 2))) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 alpha) (*.f64 -1 alpha)) (pow.f64 alpha 2)) (pow.f64 beta 3))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) beta) (*.f64 -1 (+.f64 (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) (/.f64 (*.f64 beta beta) alpha)) (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) (/.f64 (pow.f64 beta 3) (*.f64 alpha alpha)))))) -1)","(+.f64 -1 (+.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (+.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (/.f64 (pow.f64 beta 3) (*.f64 alpha alpha))) (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 alpha beta)))))","(+.f64 (fma.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 alpha beta) (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta)) (fma.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (pow.f64 beta 3)) (*.f64 alpha alpha) -1))","-1","(-.f64 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta)) (+.f64 (/.f64 alpha beta) 1))","(fma.f64 -1 (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) beta) -1)","(+.f64 -1 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 beta 2))) (+.f64 (/.f64 alpha beta) 1))","(+.f64 (*.f64 -1 (+.f64 (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) beta) (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) (/.f64 (*.f64 beta beta) alpha)))) -1)","(+.f64 -1 (+.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 alpha beta))))","(+.f64 -1 (fma.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 alpha beta) (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) (pow.f64 alpha 2)) (pow.f64 beta 3)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (+.f64 2 alpha)) alpha) alpha) (pow.f64 beta 2)))) (+.f64 (/.f64 alpha beta) 1))","(+.f64 (fma.f64 -1 (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) beta) (*.f64 -1 (+.f64 (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) (/.f64 (*.f64 beta beta) alpha)) (/.f64 (+.f64 2 (-.f64 alpha (neg.f64 alpha))) (/.f64 (pow.f64 beta 3) (*.f64 alpha alpha)))))) -1)","(+.f64 -1 (+.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (+.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (/.f64 (pow.f64 beta 3) (*.f64 alpha alpha))) (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 alpha beta)))))","(+.f64 (fma.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 alpha beta) (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta)) (fma.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (pow.f64 beta 3)) (*.f64 alpha alpha) -1))","(*.f64 -1 (/.f64 (+.f64 beta 2) beta))","(/.f64 (neg.f64 (+.f64 2 beta)) beta)","(/.f64 (fma.f64 beta -1 -2) beta)","(/.f64 (-.f64 -2 beta) beta)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (*.f64 -1 (/.f64 (+.f64 beta 2) beta)))","(fma.f64 -1 (*.f64 alpha (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta)))) (/.f64 (neg.f64 (+.f64 2 beta)) beta))","(neg.f64 (fma.f64 alpha (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) (/.f64 (+.f64 2 beta) beta)))","(fma.f64 alpha (+.f64 (neg.f64 (/.f64 1 beta)) (/.f64 (-.f64 -2 beta) (*.f64 beta beta))) (/.f64 (-.f64 -2 beta) beta))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (pow.f64 alpha 2)) beta)) (*.f64 -1 (/.f64 (+.f64 beta 2) beta))))","(fma.f64 -1 (*.f64 alpha (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta)))) (fma.f64 -1 (/.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) (/.f64 beta (*.f64 alpha alpha))) (/.f64 (neg.f64 (+.f64 2 beta)) beta)))","(-.f64 (-.f64 (/.f64 (fma.f64 beta -1 -2) beta) (/.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) (/.f64 beta (*.f64 alpha alpha)))) (*.f64 alpha (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta)))))","(-.f64 (/.f64 (+.f64 (neg.f64 (/.f64 1 beta)) (/.f64 (-.f64 -2 beta) (*.f64 beta beta))) (/.f64 beta (*.f64 alpha alpha))) (fma.f64 alpha (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) (/.f64 (+.f64 2 beta) beta)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) alpha)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (pow.f64 alpha 2)) beta)) (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) beta)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 1 beta) (*.f64 -1 (/.f64 (+.f64 beta 2) (pow.f64 beta 2)))) (pow.f64 alpha 3)) (pow.f64 beta 2))))))","(fma.f64 -1 (*.f64 alpha (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta)))) (fma.f64 -1 (/.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) (/.f64 beta (*.f64 alpha alpha))) (*.f64 -1 (+.f64 (/.f64 (+.f64 2 beta) beta) (/.f64 (-.f64 (/.f64 1 beta) (/.f64 (neg.f64 (+.f64 2 beta)) (*.f64 beta beta))) (/.f64 (*.f64 beta beta) (pow.f64 alpha 3)))))))","(-.f64 (-.f64 (-.f64 (/.f64 (fma.f64 beta -1 -2) beta) (/.f64 (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) (/.f64 beta (*.f64 alpha alpha)))) (/.f64 (pow.f64 alpha 3) (/.f64 (*.f64 beta beta) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta)))))) (*.f64 alpha (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta)))))","(-.f64 (-.f64 (/.f64 (+.f64 (neg.f64 (/.f64 1 beta)) (/.f64 (-.f64 -2 beta) (*.f64 beta beta))) (/.f64 beta (*.f64 alpha alpha))) (fma.f64 alpha (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))) (/.f64 (+.f64 2 beta) beta))) (/.f64 (pow.f64 alpha 3) (/.f64 (*.f64 beta beta) (+.f64 (/.f64 1 beta) (/.f64 (+.f64 2 beta) (*.f64 beta beta))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)))","(+.f64 1 (neg.f64 (/.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) alpha)))","(-.f64 1 (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha))","(+.f64 1 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha))))","(+.f64 1 (*.f64 -1 (+.f64 (/.f64 beta (/.f64 (*.f64 alpha alpha) (-.f64 (neg.f64 (+.f64 2 beta)) beta))) (/.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) alpha))))","(-.f64 (-.f64 1 (*.f64 (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha) (/.f64 beta alpha))) (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha))","(+.f64 1 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 beta alpha))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)))))","(+.f64 1 (fma.f64 -1 (/.f64 beta (/.f64 (*.f64 alpha alpha) (-.f64 (neg.f64 (+.f64 2 beta)) beta))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (*.f64 beta beta) (-.f64 (neg.f64 (+.f64 2 beta)) beta)) (pow.f64 alpha 3)) (/.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) alpha)))))","(+.f64 (-.f64 (/.f64 (neg.f64 (-.f64 (fma.f64 beta -1 -2) beta)) alpha) (*.f64 (/.f64 (*.f64 beta beta) (pow.f64 alpha 3)) (-.f64 (fma.f64 beta -1 -2) beta))) (-.f64 1 (*.f64 (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha) (/.f64 beta alpha))))","(+.f64 1 (+.f64 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 beta alpha))) (/.f64 (*.f64 (*.f64 beta beta) (+.f64 beta (+.f64 2 beta))) (pow.f64 alpha 3))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)))","(+.f64 1 (neg.f64 (/.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) alpha)))","(-.f64 1 (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha))","(+.f64 1 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha))))","(+.f64 1 (*.f64 -1 (+.f64 (/.f64 beta (/.f64 (*.f64 alpha alpha) (-.f64 (neg.f64 (+.f64 2 beta)) beta))) (/.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) alpha))))","(-.f64 (-.f64 1 (*.f64 (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha) (/.f64 beta alpha))) (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha))","(+.f64 1 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 beta alpha))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 beta (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (+.f64 beta 2)) beta)) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (+.f64 beta 2)) beta) alpha)))))","(+.f64 1 (fma.f64 -1 (/.f64 beta (/.f64 (*.f64 alpha alpha) (-.f64 (neg.f64 (+.f64 2 beta)) beta))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (*.f64 beta beta) (-.f64 (neg.f64 (+.f64 2 beta)) beta)) (pow.f64 alpha 3)) (/.f64 (-.f64 (neg.f64 (+.f64 2 beta)) beta) alpha)))))","(+.f64 (-.f64 (/.f64 (neg.f64 (-.f64 (fma.f64 beta -1 -2) beta)) alpha) (*.f64 (/.f64 (*.f64 beta beta) (pow.f64 alpha 3)) (-.f64 (fma.f64 beta -1 -2) beta))) (-.f64 1 (*.f64 (/.f64 (-.f64 (fma.f64 beta -1 -2) beta) alpha) (/.f64 beta alpha))))","(+.f64 1 (+.f64 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 beta alpha))) (/.f64 (*.f64 (*.f64 beta beta) (+.f64 beta (+.f64 2 beta))) (pow.f64 alpha 3))))"]],"stop":[["node limit",1]],"time":76.238037109375,"type":"simplify"},{"compiler":[[14598,8149]],"time":126.0830078125,"type":"eval"},{"alts":[["(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","next",15.686341442534967],["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 2 beta))))","fresh",46.38825741486265],["(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)","done",15.65280063692237]],"compiler":[[16,12],[38,25],[16,12],[16,12],[38,25]],"count":[[315,3]],"kept":[{"done":[0,0],"fresh":[2,1],"new":[312,1],"picked":[1,1]}],"min-error":[0.030344470018659867],"time":98.426025390625,"type":"prune"},{"compiler":[[66,33]],"locations":[["(exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))",0.00390625,true],["(/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))",0.04296875,true],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)",2.3495017957535977,true],["(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))",2.4453200738087006,true]],"time":13.89794921875,"type":"localize"},{"count":[[4,96]],"series":[["(exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))","alpha","-inf",0.468017578125],["(exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))","alpha","inf",0.56298828125],["(exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))","alpha","0",0.81494140625],["(exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))","beta","-inf",0.632080078125],["(exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))","beta","inf",0.64990234375],["(exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))","beta","0",0.8671875],["(/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))","alpha","-inf",0.18310546875],["(/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))","alpha","inf",0.199951171875],["(/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))","alpha","0",0.212890625],["(/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))","beta","-inf",0.2060546875],["(/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))","beta","inf",0.185791015625],["(/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))","beta","0",0.234130859375],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)","alpha","-inf",0.220947265625],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)","alpha","inf",0.23583984375],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)","alpha","0",0.219970703125],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)","beta","-inf",0.201904296875],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)","beta","inf",0.18603515625],["(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)","beta","0",0.241943359375],["(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","alpha","-inf",0.251953125],["(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","alpha","inf",0.26904296875],["(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","alpha","0",0.22900390625],["(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","beta","-inf",0.239013671875],["(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","beta","inf",0.22802734375],["(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","beta","0",0.342041015625]],"time":8.58203125,"type":"series"},{"count":[[4,316]],"egraph":[[2,3890,66,0.030499291999999997],[1,280,66,0.005305209],[0,13,66,0.000423875]],"inputs":[["(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)","(/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha)))","(exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))) (*.f64 1/3 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) (*.f64 2 (*.f64 1/3 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) (*.f64 1/2 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 2) (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/2 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) 3) 1/8) (fma.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) (-.f64 1/4 (*.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) -1/4) (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 beta alpha) (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) -1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))) 2) (*.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))) -1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (sqrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))) -1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) 1 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2)) (cbrt.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2))) (cbrt.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2)) (sqrt.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2)) 1/2)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))) (*.f64 1/3 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) (*.f64 2 (*.f64 1/3 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) (*.f64 1/2 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 2) (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/2 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) 3) 1/8) (fma.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) (-.f64 1/4 (*.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2) -1/4) (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (sqrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))) alpha (*.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1))) (fma.f64 (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) 1 (*.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1) (*.f64 (/.f64 (cbrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) 1) (*.f64 (/.f64 (sqrt.f64 alpha) (-.f64 (-.f64 -2 beta) alpha)) (/.f64 (sqrt.f64 alpha) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 alpha (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (cbrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (*.f64 (/.f64 (sqrt.f64 alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 alpha) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 alpha (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (*.f64 (/.f64 (cbrt.f64 alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4)) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (*.f64 (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (/.f64 alpha (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2)))))) (fma.f64 (neg.f64 (+.f64 (+.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 (+.f64 (+.f64 -2 beta) alpha) (/.f64 alpha (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 beta alpha) (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))) 2) (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2) (*.f64 (cbrt.f64 (-.f64 beta alpha)) (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 beta alpha)) (*.f64 (sqrt.f64 (-.f64 beta alpha)) (/.f64 1 (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 beta alpha)) (/.f64 1 (neg.f64 (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (-.f64 beta alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (-.f64 beta alpha) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (-.f64 beta alpha) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2) 1) (/.f64 (cbrt.f64 (-.f64 beta alpha)) (-.f64 (-.f64 -2 beta) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 beta alpha)) 1) (/.f64 (sqrt.f64 (-.f64 beta alpha)) (-.f64 (-.f64 -2 beta) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 beta alpha)) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 (-.f64 beta alpha)) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 beta alpha)) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 (-.f64 beta alpha)) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 beta alpha) (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 beta alpha) (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (-.f64 -2 beta) alpha) (-.f64 beta alpha)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 beta alpha) (neg.f64 (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 beta alpha) 3) (pow.f64 (-.f64 (-.f64 -2 beta) alpha) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 beta (/.f64 1 (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha)))) (cbrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (sqrt.f64 (/.f64 beta (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 beta (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 beta (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) 1) (/.f64 (cbrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 beta) 1) (/.f64 (sqrt.f64 beta) (-.f64 (-.f64 -2 beta) alpha)) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (cbrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 beta) (pow.f64 (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha)) 2)) (/.f64 (sqrt.f64 beta) (cbrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 beta) 2) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (cbrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (/.f64 (sqrt.f64 beta) (sqrt.f64 (-.f64 (-.f64 -2 beta) alpha))) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 beta (-.f64 -8 (pow.f64 (+.f64 beta alpha) 3))) (fma.f64 (+.f64 beta alpha) (+.f64 (+.f64 -2 beta) alpha) 4) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 beta (-.f64 4 (pow.f64 (+.f64 beta alpha) 2))) (+.f64 (+.f64 -2 beta) alpha) (neg.f64 (/.f64 alpha (-.f64 (-.f64 -2 beta) alpha))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))) (cbrt.f64 (exp.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (log.f64 (cbrt.f64 (exp.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))) (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))) (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))) 2) (cbrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))) (sqrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2)) (exp.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 2)) (cbrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))) (sqrt.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2))))))))"]],"rules":[["egg-rr",23],["egg-rr",224],["egg-rr",31],["egg-rr",38]],"stop":[["node limit",1]],"time":100.241943359375,"type":"rewrite"},{"count":[[412,395]],"egraph":[[2,3901,4236,0.021135501],[1,1007,4545,0.007384834],[0,295,4984,0.001525292]],"inputs":[["(+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha)))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4)))))) (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))))))","1","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) 1)","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) 1))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) (+.f64 1 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 3))))))","1","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) 1)","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) (+.f64 1 (*.f64 1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) (+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2))))))","(+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))","(+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4))))) (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha)))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4)))))) (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))))))","1","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) 1)","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) 1))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) (+.f64 1 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 3))))))","1","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) 1)","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) (+.f64 1 (*.f64 1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) (+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2))))))","(+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))","(+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4))))) (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(/.f64 alpha (+.f64 2 alpha))","(+.f64 (/.f64 alpha (+.f64 2 alpha)) (*.f64 -1 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))))","(+.f64 (/.f64 alpha (+.f64 2 alpha)) (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4)))))) (+.f64 (/.f64 alpha (+.f64 2 alpha)) (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))))))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (+.f64 2 alpha)) (pow.f64 beta 2))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3))))) 1)","-1","(-.f64 (/.f64 alpha beta) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta))))","(-.f64 (+.f64 (/.f64 alpha beta) (*.f64 -1 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2)))) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3)) (+.f64 (/.f64 alpha beta) (*.f64 -1 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2))))) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta))))","(*.f64 -1 (/.f64 beta (+.f64 beta 2)))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha) (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2)))))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4)))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))))","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))))","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))))","(exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha)))))","(+.f64 (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))) (*.f64 1/2 (*.f64 beta (*.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha)))))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) 2)) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 (pow.f64 beta 2) (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))))) (+.f64 (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))) (*.f64 1/2 (*.f64 beta (*.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))))))))","(+.f64 (*.f64 (pow.f64 beta 3) (*.f64 (+.f64 (*.f64 1/48 (pow.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) 3)) (+.f64 (*.f64 1/2 (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4))))) (*.f64 1/4 (*.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))))) (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))))) (+.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) 2)) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 (pow.f64 beta 2) (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))))) (+.f64 (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))) (*.f64 1/2 (*.f64 beta (*.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha)))))))))))","(exp.f64 1)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (exp.f64 1)) beta)) (exp.f64 1))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)))) (*.f64 1/8 (pow.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) 2))) (exp.f64 1)) (pow.f64 beta 2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (exp.f64 1)) beta)) (exp.f64 1)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (*.f64 (+.f64 2 alpha) (pow.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) 2))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)))) (*.f64 1/48 (pow.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) 3)))) (exp.f64 1)) (pow.f64 beta 3)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)))) (*.f64 1/8 (pow.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) 2))) (exp.f64 1)) (pow.f64 beta 2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (exp.f64 1)) beta)) (exp.f64 1))))","(exp.f64 1)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (exp.f64 1)) beta)) (exp.f64 1))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (exp.f64 1)) beta)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha))) (*.f64 1/8 (pow.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) 2))) (exp.f64 1)) (pow.f64 beta 2)) (exp.f64 1)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (exp.f64 1)) beta)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha))) (*.f64 1/8 (pow.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) 2))) (exp.f64 1)) (pow.f64 beta 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) 2) (+.f64 2 alpha))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (pow.f64 (+.f64 2 alpha) 2))) (*.f64 1/48 (pow.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) 3)))) (exp.f64 1)) (pow.f64 beta 3))) (exp.f64 1))))","(exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))","(+.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (*.f64 -1/2 (*.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (+.f64 beta 2))) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) 2))) (*.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (pow.f64 alpha 2))) (+.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (*.f64 -1/2 (*.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) 3)) (+.f64 (*.f64 -1/2 (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4)))) (*.f64 -1/4 (/.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) 2) (+.f64 beta 2))))) (*.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (pow.f64 alpha 3))) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (+.f64 beta 2))) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) 2))) (*.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (pow.f64 alpha 2))) (+.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (*.f64 -1/2 (*.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha))))))","1","(+.f64 1 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 2) (pow.f64 alpha 2))))))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 2) (pow.f64 alpha 2))) (+.f64 (*.f64 1/48 (/.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 3) (pow.f64 alpha 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 2) (+.f64 beta 2)) (pow.f64 alpha 3))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))))))","1","(+.f64 1 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 2) (pow.f64 alpha 2))))))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 2) (+.f64 beta 2))) (+.f64 (*.f64 -1/2 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2))) (*.f64 -1/48 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 3)))) (pow.f64 alpha 3))) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 2) (pow.f64 alpha 2)))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))","(+.f64 1/2 (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2)))","(fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2)","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha)))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2)))) (*.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)))))","(+.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2) (*.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 1/2 beta)))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) (*.f64 (*.f64 1/2 (*.f64 beta beta)) (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2)))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2)))) (fma.f64 1/2 (*.f64 (*.f64 beta beta) (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2)))) (*.f64 -1/2 (/.f64 alpha (+.f64 alpha 2))))))","(+.f64 1/2 (+.f64 (/.f64 alpha (/.f64 (+.f64 alpha 2) -1/2)) (*.f64 1/2 (*.f64 beta (+.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))) beta))))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4)))))) (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (fma.f64 1/2 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 4)))) (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) (*.f64 (*.f64 1/2 (*.f64 beta beta)) (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2)))) (fma.f64 1/2 (*.f64 (pow.f64 beta 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 4)))) (fma.f64 1/2 (*.f64 (*.f64 beta beta) (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2)))) (*.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)))))))","(+.f64 1/2 (+.f64 (fma.f64 (*.f64 1/2 (pow.f64 beta 3)) (+.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 4))) (/.f64 alpha (/.f64 (+.f64 alpha 2) -1/2))) (*.f64 1/2 (*.f64 beta (+.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))) beta))))))","1","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) 1)","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) 1)","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) 1)","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) 1))","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (fma.f64 -1/2 (/.f64 (+.f64 alpha 2) (/.f64 (*.f64 beta beta) (-.f64 (neg.f64 alpha) (+.f64 alpha 2)))) 1))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (+.f64 alpha 2) beta)) 1))","(+.f64 1 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (+.f64 1/2 (/.f64 -1/2 (/.f64 beta (+.f64 alpha 2))))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) (+.f64 1 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 3))))))","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (fma.f64 -1/2 (/.f64 (+.f64 alpha 2) (/.f64 (*.f64 beta beta) (-.f64 (neg.f64 alpha) (+.f64 alpha 2)))) (+.f64 1 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 alpha 2) 2) (/.f64 (pow.f64 beta 3) (-.f64 (neg.f64 alpha) (+.f64 alpha 2))))))))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (+.f64 alpha 2) beta)) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (pow.f64 beta 3)) (pow.f64 (+.f64 alpha 2) 2)) 1)))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (pow.f64 beta 3)) (pow.f64 (+.f64 alpha 2) 2)) 1) (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (+.f64 1/2 (/.f64 -1/2 (/.f64 beta (+.f64 alpha 2))))))","1","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) 1)","(fma.f64 -1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) beta) 1)","(fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) 1)","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) (+.f64 1 (*.f64 1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2)))))","(+.f64 (fma.f64 -1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) beta) 1) (*.f64 1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 (*.f64 beta beta) (+.f64 alpha 2)))))","(fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (fma.f64 1/2 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (/.f64 (+.f64 alpha 2) beta)) 1))","(fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (fma.f64 1/2 (*.f64 (/.f64 (+.f64 alpha 2) (*.f64 beta beta)) (+.f64 alpha (+.f64 alpha 2))) 1))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) (+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2))))))","(+.f64 (fma.f64 -1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) beta) 1) (fma.f64 -1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 alpha 2) 2))) (*.f64 1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 (*.f64 beta beta) (+.f64 alpha 2))))))","(+.f64 (fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) 1) (fma.f64 1/2 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (/.f64 (+.f64 alpha 2) beta)) (/.f64 (*.f64 (*.f64 -1/2 (pow.f64 (+.f64 alpha 2) 2)) (+.f64 alpha (+.f64 alpha 2))) (pow.f64 beta 3))))","(+.f64 (fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) 1) (fma.f64 1/2 (*.f64 (/.f64 (+.f64 alpha 2) (*.f64 beta beta)) (+.f64 alpha (+.f64 alpha 2))) (/.f64 (*.f64 (*.f64 -1/2 (pow.f64 (+.f64 alpha 2) 2)) (+.f64 alpha (+.f64 alpha 2))) (pow.f64 beta 3))))","(+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))","(+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta)))","(fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)","(+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))","(+.f64 1/2 (fma.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (/.f64 (*.f64 1/2 beta) (+.f64 2 beta))))","(+.f64 1/2 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) (*.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))))))","(+.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2) (*.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 alpha)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) (+.f64 1/2 (fma.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (/.f64 (*.f64 1/2 beta) (+.f64 2 beta)))))","(+.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) (*.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))))) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) 1/2))","(fma.f64 1/2 (*.f64 (/.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2) (*.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 alpha))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4))))) (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) (+.f64 1/2 (fma.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (fma.f64 -1/2 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))) (/.f64 (*.f64 1/2 beta) (+.f64 2 beta))))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))))) (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))","(fma.f64 1/2 (*.f64 (/.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 alpha (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))))) (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha))","(*.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(*.f64 (/.f64 1/2 alpha) (+.f64 (+.f64 beta beta) 2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(fma.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (*.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))","(fma.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2)) (*.f64 (/.f64 1/2 alpha) (+.f64 (+.f64 beta beta) 2)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))))))","(fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (*.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 4) (pow.f64 (+.f64 2 beta) 3))) (*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2)))))))","(fma.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (pow.f64 alpha 4)) (pow.f64 (+.f64 2 beta) 3)))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 (+.f64 2 beta) (/.f64 (pow.f64 (+.f64 2 beta) 3) (*.f64 alpha alpha))))))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha))","(*.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(*.f64 (/.f64 1/2 alpha) (+.f64 (+.f64 beta beta) 2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(fma.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (*.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))","(fma.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2)) (*.f64 (/.f64 1/2 alpha) (+.f64 (+.f64 beta beta) 2)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))))))","(fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (*.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 4) (pow.f64 (+.f64 2 beta) 3))) (*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2)))))))","(fma.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (pow.f64 alpha 4)) (pow.f64 (+.f64 2 beta) 3)))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 (+.f64 2 beta) (/.f64 (pow.f64 (+.f64 2 beta) 3) (*.f64 alpha alpha))))))","(+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))","(+.f64 1/2 (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2)))","(fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2)","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha)))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2)))) (*.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)))))","(+.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2) (*.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 1/2 beta)))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) (*.f64 (*.f64 1/2 (*.f64 beta beta)) (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2)))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2)))) (fma.f64 1/2 (*.f64 (*.f64 beta beta) (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2)))) (*.f64 -1/2 (/.f64 alpha (+.f64 alpha 2))))))","(+.f64 1/2 (+.f64 (/.f64 alpha (/.f64 (+.f64 alpha 2) -1/2)) (*.f64 1/2 (*.f64 beta (+.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))) beta))))))","(+.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4)))))) (+.f64 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))) (*.f64 1/2 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (fma.f64 1/2 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 4)))) (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) (*.f64 (*.f64 1/2 (*.f64 beta beta)) (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2))))))))","(+.f64 1/2 (fma.f64 1/2 (*.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2)))) (fma.f64 1/2 (*.f64 (pow.f64 beta 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 4)))) (fma.f64 1/2 (*.f64 (*.f64 beta beta) (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2)))) (*.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)))))))","(+.f64 1/2 (+.f64 (fma.f64 (*.f64 1/2 (pow.f64 beta 3)) (+.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 4))) (/.f64 alpha (/.f64 (+.f64 alpha 2) -1/2))) (*.f64 1/2 (*.f64 beta (+.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))) beta))))))","1","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) 1)","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) 1)","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) 1)","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) 1))","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (fma.f64 -1/2 (/.f64 (+.f64 alpha 2) (/.f64 (*.f64 beta beta) (-.f64 (neg.f64 alpha) (+.f64 alpha 2)))) 1))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (+.f64 alpha 2) beta)) 1))","(+.f64 1 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (+.f64 1/2 (/.f64 -1/2 (/.f64 beta (+.f64 alpha 2))))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) (+.f64 1 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 3))))))","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (fma.f64 -1/2 (/.f64 (+.f64 alpha 2) (/.f64 (*.f64 beta beta) (-.f64 (neg.f64 alpha) (+.f64 alpha 2)))) (+.f64 1 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 alpha 2) 2) (/.f64 (pow.f64 beta 3) (-.f64 (neg.f64 alpha) (+.f64 alpha 2))))))))","(fma.f64 1/2 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (+.f64 alpha 2) beta)) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (pow.f64 beta 3)) (pow.f64 (+.f64 alpha 2) 2)) 1)))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (pow.f64 beta 3)) (pow.f64 (+.f64 alpha 2) 2)) 1) (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (+.f64 1/2 (/.f64 -1/2 (/.f64 beta (+.f64 alpha 2))))))","1","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) 1)","(fma.f64 -1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) beta) 1)","(fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) 1)","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) (+.f64 1 (*.f64 1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2)))))","(+.f64 (fma.f64 -1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) beta) 1) (*.f64 1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 (*.f64 beta beta) (+.f64 alpha 2)))))","(fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (fma.f64 1/2 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (/.f64 (+.f64 alpha 2) beta)) 1))","(fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (fma.f64 1/2 (*.f64 (/.f64 (+.f64 alpha 2) (*.f64 beta beta)) (+.f64 alpha (+.f64 alpha 2))) 1))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) beta)) (+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2))))))","(+.f64 (fma.f64 -1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) beta) 1) (fma.f64 -1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 alpha 2) 2))) (*.f64 1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 (*.f64 beta beta) (+.f64 alpha 2))))))","(+.f64 (fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) 1) (fma.f64 1/2 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (/.f64 (+.f64 alpha 2) beta)) (/.f64 (*.f64 (*.f64 -1/2 (pow.f64 (+.f64 alpha 2) 2)) (+.f64 alpha (+.f64 alpha 2))) (pow.f64 beta 3))))","(+.f64 (fma.f64 -1/2 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) 1) (fma.f64 1/2 (*.f64 (/.f64 (+.f64 alpha 2) (*.f64 beta beta)) (+.f64 alpha (+.f64 alpha 2))) (/.f64 (*.f64 (*.f64 -1/2 (pow.f64 (+.f64 alpha 2) 2)) (+.f64 alpha (+.f64 alpha 2))) (pow.f64 beta 3))))","(+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))","(+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta)))","(fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)","(+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))","(+.f64 1/2 (fma.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (/.f64 (*.f64 1/2 beta) (+.f64 2 beta))))","(+.f64 1/2 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) (*.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))))))","(+.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2) (*.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 alpha)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) (+.f64 1/2 (fma.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (/.f64 (*.f64 1/2 beta) (+.f64 2 beta)))))","(+.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) (*.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))))) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) 1/2))","(fma.f64 1/2 (*.f64 (/.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2) (*.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 alpha))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (+.f64 1/2 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4))))) (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) (+.f64 1/2 (fma.f64 -1/2 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (fma.f64 -1/2 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))) (/.f64 (*.f64 1/2 beta) (+.f64 2 beta))))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))))) (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))","(fma.f64 1/2 (*.f64 (/.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta)) (*.f64 alpha alpha)) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 alpha (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))))) (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha))","(*.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(*.f64 (/.f64 1/2 alpha) (+.f64 (+.f64 beta beta) 2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(fma.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (*.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))","(fma.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2)) (*.f64 (/.f64 1/2 alpha) (+.f64 (+.f64 beta beta) 2)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))))))","(fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (*.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 4) (pow.f64 (+.f64 2 beta) 3))) (*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2)))))))","(fma.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (pow.f64 alpha 4)) (pow.f64 (+.f64 2 beta) 3)))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 (+.f64 2 beta) (/.f64 (pow.f64 (+.f64 2 beta) 3) (*.f64 alpha alpha))))))","(*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))","(*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha))","(*.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(*.f64 (/.f64 1/2 alpha) (+.f64 (+.f64 beta beta) 2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(fma.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (*.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))","(fma.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2)) (*.f64 (/.f64 1/2 alpha) (+.f64 (+.f64 beta beta) 2)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))))))","(fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (*.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 4) (pow.f64 (+.f64 2 beta) 3))) (*.f64 1/2 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2)))))))","(fma.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 1/2 (+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (pow.f64 alpha 4)) (pow.f64 (+.f64 2 beta) 3)))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 (+.f64 2 beta) (/.f64 (pow.f64 (+.f64 2 beta) 3) (*.f64 alpha alpha))))))","(/.f64 alpha (+.f64 2 alpha))","(/.f64 alpha (+.f64 alpha 2))","(+.f64 (/.f64 alpha (+.f64 2 alpha)) (*.f64 -1 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))))","(+.f64 (/.f64 alpha (+.f64 alpha 2)) (neg.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2))))))","(-.f64 (/.f64 alpha (+.f64 alpha 2)) (*.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2)))))","(+.f64 (/.f64 alpha (+.f64 2 alpha)) (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))))","(+.f64 (/.f64 alpha (+.f64 alpha 2)) (*.f64 -1 (+.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (*.f64 (*.f64 beta beta) (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2)))))))","(fma.f64 -1 (fma.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 (*.f64 beta beta) (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))))) (/.f64 alpha (+.f64 alpha 2)))","(-.f64 (/.f64 alpha (+.f64 alpha 2)) (*.f64 beta (+.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))) beta))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4)))))) (+.f64 (/.f64 alpha (+.f64 2 alpha)) (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))))) (*.f64 -1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))))))","(fma.f64 -1 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 4)))) (+.f64 (/.f64 alpha (+.f64 alpha 2)) (*.f64 -1 (+.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (*.f64 (*.f64 beta beta) (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2))))))))","(-.f64 (fma.f64 -1 (fma.f64 beta (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 (*.f64 beta beta) (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))))) (/.f64 alpha (+.f64 alpha 2))) (*.f64 (pow.f64 beta 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 4)))))","(-.f64 (fma.f64 (neg.f64 (pow.f64 beta 3)) (+.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 4))) (/.f64 alpha (+.f64 alpha 2))) (*.f64 beta (+.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))) beta))))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) 1)","(fma.f64 -1 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) -1)","(fma.f64 -1 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) -1)","(+.f64 -1 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (+.f64 2 alpha)) (pow.f64 beta 2))) 1)","(+.f64 (fma.f64 -1 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (/.f64 (+.f64 alpha 2) (/.f64 (*.f64 beta beta) (-.f64 (neg.f64 alpha) (+.f64 alpha 2))))) -1)","(+.f64 -1 (-.f64 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (+.f64 alpha 2) beta)) (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta)))","(+.f64 -1 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (+.f64 -1 (/.f64 (+.f64 alpha 2) beta))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) beta)) (+.f64 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (+.f64 (/.f64 (+.f64 alpha 2) (/.f64 (*.f64 beta beta) (-.f64 (neg.f64 alpha) (+.f64 alpha 2)))) (neg.f64 (/.f64 (pow.f64 (+.f64 alpha 2) 2) (/.f64 (pow.f64 beta 3) (-.f64 (neg.f64 alpha) (+.f64 alpha 2))))))) -1)","(+.f64 -1 (-.f64 (-.f64 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (+.f64 alpha 2) beta)) (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta)) (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (pow.f64 beta 3)) (pow.f64 (+.f64 alpha 2) 2))))","(+.f64 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) (*.f64 beta beta)) (-.f64 (+.f64 alpha 2) (/.f64 (pow.f64 (+.f64 alpha 2) 2) beta))) (+.f64 -1 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta)))","-1","(-.f64 (/.f64 alpha beta) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta))))","(fma.f64 -1 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) -1)","(fma.f64 -1 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) -1)","(+.f64 -1 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta))","(-.f64 (+.f64 (/.f64 alpha beta) (*.f64 -1 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2)))) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta))))","(+.f64 (fma.f64 -1 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) beta) (/.f64 (+.f64 alpha 2) (/.f64 (*.f64 beta beta) (-.f64 (neg.f64 alpha) (+.f64 alpha 2))))) -1)","(+.f64 -1 (-.f64 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (+.f64 alpha 2) beta)) (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta)))","(+.f64 -1 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (+.f64 -1 (/.f64 (+.f64 alpha 2) beta))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 beta 3)) (+.f64 (/.f64 alpha beta) (*.f64 -1 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha)) (pow.f64 beta 2))))) (+.f64 1 (*.f64 -1 (/.f64 (+.f64 2 alpha) beta))))","(+.f64 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 (pow.f64 beta 3) (pow.f64 (+.f64 alpha 2) 2))) (+.f64 (/.f64 alpha beta) (-.f64 (neg.f64 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 (*.f64 beta beta) (+.f64 alpha 2)))) (+.f64 1 (/.f64 (+.f64 -2 (neg.f64 alpha)) beta)))))","(+.f64 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) (pow.f64 beta 3)) (pow.f64 (+.f64 alpha 2) 2)) (+.f64 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (/.f64 (+.f64 alpha 2) beta)) (-.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) 1)))","(+.f64 (*.f64 (/.f64 (pow.f64 (+.f64 alpha 2) 2) (pow.f64 beta 3)) (+.f64 alpha (+.f64 alpha 2))) (+.f64 -1 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (+.f64 -1 (/.f64 (+.f64 alpha 2) beta)))))","(*.f64 -1 (/.f64 beta (+.f64 beta 2)))","(neg.f64 (/.f64 beta (+.f64 2 beta)))","(/.f64 (neg.f64 beta) (+.f64 2 beta))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha))","(fma.f64 -1 (/.f64 beta (+.f64 2 beta)) (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))))","(-.f64 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (/.f64 beta (+.f64 2 beta)))","(-.f64 (*.f64 alpha (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (/.f64 beta (+.f64 2 beta)))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha) (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2)))))","(fma.f64 -1 (/.f64 beta (+.f64 2 beta)) (fma.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) alpha (neg.f64 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))))))","(-.f64 (-.f64 (*.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)))) (/.f64 beta (+.f64 2 beta)))","(-.f64 (-.f64 (*.f64 alpha (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) (/.f64 beta (+.f64 2 beta))) (*.f64 (/.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta)) (*.f64 alpha alpha)))","(+.f64 (*.f64 -1 (/.f64 beta (+.f64 beta 2))) (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2))) (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4)))))))","(fma.f64 -1 (/.f64 beta (+.f64 2 beta)) (fma.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) alpha (fma.f64 -1 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))) (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))))))","(-.f64 (fma.f64 alpha (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (-.f64 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4)))) (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (/.f64 (+.f64 2 beta) (*.f64 alpha alpha))))) (/.f64 beta (+.f64 2 beta)))","(-.f64 (fma.f64 alpha (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (*.f64 (*.f64 alpha alpha) (-.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4))) alpha) (/.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta))))) (/.f64 beta (+.f64 2 beta)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 1 (neg.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(-.f64 1 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(-.f64 1 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))))","(+.f64 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) 1) (neg.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (-.f64 1 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha)))","(+.f64 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) (+.f64 (/.f64 (+.f64 2 beta) alpha) -1)) 1)","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))))","(+.f64 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) 1) (*.f64 -1 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha))))","(+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (-.f64 (-.f64 1 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (/.f64 (+.f64 beta (+.f64 2 beta)) alpha)))","(+.f64 (-.f64 1 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2))) (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) (+.f64 -1 (/.f64 (+.f64 2 beta) alpha))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 1 (neg.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(-.f64 1 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha))","(-.f64 1 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha))))","(+.f64 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) 1) (neg.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (-.f64 1 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha)))","(+.f64 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) (+.f64 (/.f64 (+.f64 2 beta) alpha) -1)) 1)","(+.f64 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))))","(+.f64 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) 1) (*.f64 -1 (+.f64 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha))))","(+.f64 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (-.f64 (-.f64 1 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta))))) (/.f64 (+.f64 beta (+.f64 2 beta)) alpha)))","(+.f64 (-.f64 1 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2))) (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) (+.f64 -1 (/.f64 (+.f64 2 beta) alpha))))","(exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha)))))","(exp.f64 (+.f64 1/2 (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2))))","(exp.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2))","(+.f64 (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))) (*.f64 1/2 (*.f64 beta (*.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha)))))))))","(+.f64 (exp.f64 (+.f64 1/2 (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2)))) (*.f64 1/2 (*.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (exp.f64 (+.f64 1/2 (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2)))))))","(fma.f64 1/2 (*.f64 beta (*.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (exp.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2)))) (exp.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2)))","(*.f64 (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 1/2 beta)) 1) (exp.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) 2)) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 (pow.f64 beta 2) (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))))) (+.f64 (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))) (*.f64 1/2 (*.f64 beta (*.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))))))))","(fma.f64 (fma.f64 1/8 (pow.f64 (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2))) 2) (*.f64 1/2 (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2))))) (*.f64 (*.f64 beta beta) (exp.f64 (+.f64 1/2 (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2))))) (+.f64 (exp.f64 (+.f64 1/2 (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2)))) (*.f64 1/2 (*.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (exp.f64 (+.f64 1/2 (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2))))))))","(+.f64 (*.f64 1/2 (*.f64 beta (*.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (exp.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2))))) (*.f64 (+.f64 (*.f64 (*.f64 beta beta) (fma.f64 1/2 (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) 2)))) 1) (exp.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2))))","(*.f64 (exp.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2)) (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 1/2 beta)) (+.f64 (*.f64 (*.f64 beta beta) (fma.f64 1/2 (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) 2)))) 1)))","(+.f64 (*.f64 (pow.f64 beta 3) (*.f64 (+.f64 (*.f64 1/48 (pow.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) 3)) (+.f64 (*.f64 1/2 (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4))))) (*.f64 1/4 (*.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))))) (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))))) (+.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) 2)) (*.f64 1/2 (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 (pow.f64 beta 2) (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))))) (+.f64 (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha))))) (*.f64 1/2 (*.f64 beta (*.f64 (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)))) (exp.f64 (+.f64 1/2 (*.f64 -1/2 (/.f64 alpha (+.f64 2 alpha)))))))))))","(fma.f64 (pow.f64 beta 3) (*.f64 (exp.f64 (+.f64 1/2 (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2)))) (fma.f64 1/48 (pow.f64 (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2))) 3) (fma.f64 1/2 (-.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 4))) (*.f64 1/4 (*.f64 (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2))) (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2)))))))) (fma.f64 (fma.f64 1/8 (pow.f64 (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2))) 2) (*.f64 1/2 (-.f64 (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 3)) (/.f64 1 (pow.f64 (+.f64 alpha 2) 2))))) (*.f64 (*.f64 beta beta) (exp.f64 (+.f64 1/2 (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2))))) (+.f64 (exp.f64 (+.f64 1/2 (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2)))) (*.f64 1/2 (*.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 (neg.f64 alpha) (pow.f64 (+.f64 alpha 2) 2)))) (exp.f64 (+.f64 1/2 (/.f64 (*.f64 -1/2 alpha) (+.f64 alpha 2)))))))))","(+.f64 (fma.f64 1/2 (*.f64 beta (*.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (exp.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2)))) (exp.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2))) (*.f64 (exp.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2)) (+.f64 (*.f64 (pow.f64 beta 3) (fma.f64 1/48 (pow.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) 3) (fma.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) 1/4) (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))) (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 4))))))) (*.f64 (*.f64 beta beta) (fma.f64 1/2 (fma.f64 -1 (/.f64 alpha (pow.f64 (+.f64 alpha 2) 3)) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) 2)))))))","(+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) (*.f64 1/2 beta)) 1) (exp.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2))) (*.f64 (exp.f64 (fma.f64 -1/2 (/.f64 alpha (+.f64 alpha 2)) 1/2)) (*.f64 (*.f64 beta beta) (+.f64 (*.f64 beta (fma.f64 1/48 (pow.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) 3) (fma.f64 1/2 (+.f64 (/.f64 1 (pow.f64 (+.f64 alpha 2) 3)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 4))) (*.f64 (*.f64 1/4 (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2)))) (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))))))) (fma.f64 1/2 (*.f64 (+.f64 (/.f64 alpha (+.f64 alpha 2)) 1) (/.f64 -1 (pow.f64 (+.f64 alpha 2) 2))) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 1 (+.f64 alpha 2)) (/.f64 alpha (pow.f64 (+.f64 alpha 2) 2))) 2)))))))","(exp.f64 1)","(E.f64)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (exp.f64 1)) beta)) (exp.f64 1))","(fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) (/.f64 beta (E.f64))) (E.f64))","(fma.f64 1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (E.f64)) (E.f64))","(fma.f64 1/2 (*.f64 (/.f64 (E.f64) beta) (-.f64 (-.f64 -2 alpha) alpha)) (E.f64))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)))) (*.f64 1/8 (pow.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) 2))) (exp.f64 1)) (pow.f64 beta 2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (exp.f64 1)) beta)) (exp.f64 1)))","(+.f64 (fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) (/.f64 beta (E.f64))) (E.f64)) (/.f64 (fma.f64 -1/2 (*.f64 (+.f64 alpha 2) (-.f64 (neg.f64 alpha) (+.f64 alpha 2))) (*.f64 1/8 (pow.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) 2))) (/.f64 (*.f64 beta beta) (E.f64))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (E.f64)) (E.f64)) (*.f64 (/.f64 (fma.f64 -1/2 (*.f64 (+.f64 alpha 2) (-.f64 (-.f64 -2 alpha) alpha)) (*.f64 1/8 (pow.f64 (-.f64 (-.f64 -2 alpha) alpha) 2))) (*.f64 beta beta)) (E.f64)))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (E.f64) beta) (-.f64 (-.f64 -2 alpha) alpha)) (E.f64)) (*.f64 (/.f64 (/.f64 (E.f64) beta) beta) (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 (*.f64 -1/2 (+.f64 alpha 2)) (*.f64 (-.f64 (-.f64 -2 alpha) alpha) 1/8)))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (*.f64 (+.f64 2 alpha) (pow.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) 2))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)))) (*.f64 1/48 (pow.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) 3)))) (exp.f64 1)) (pow.f64 beta 3)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)))) (*.f64 1/8 (pow.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) 2))) (exp.f64 1)) (pow.f64 beta 2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (exp.f64 1)) beta)) (exp.f64 1))))","(+.f64 (+.f64 (fma.f64 1/2 (/.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) (/.f64 beta (E.f64))) (E.f64)) (/.f64 (fma.f64 -1/2 (*.f64 (+.f64 alpha 2) (-.f64 (neg.f64 alpha) (+.f64 alpha 2))) (*.f64 1/8 (pow.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) 2))) (/.f64 (*.f64 beta beta) (E.f64)))) (/.f64 (fma.f64 -1/4 (*.f64 (+.f64 alpha 2) (pow.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) 2)) (fma.f64 1/2 (*.f64 (pow.f64 (+.f64 alpha 2) 2) (-.f64 (neg.f64 alpha) (+.f64 alpha 2))) (*.f64 1/48 (pow.f64 (-.f64 (neg.f64 alpha) (+.f64 alpha 2)) 3)))) (/.f64 (pow.f64 beta 3) (E.f64))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (-.f64 -2 alpha) alpha) beta) (E.f64)) (E.f64)) (+.f64 (*.f64 (/.f64 (fma.f64 -1/2 (*.f64 (+.f64 alpha 2) (-.f64 (-.f64 -2 alpha) alpha)) (*.f64 1/8 (pow.f64 (-.f64 (-.f64 -2 alpha) alpha) 2))) (*.f64 beta beta)) (E.f64)) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (+.f64 alpha 2) (pow.f64 (-.f64 (-.f64 -2 alpha) alpha) 2)) (fma.f64 1/2 (*.f64 (pow.f64 (+.f64 alpha 2) 2) (-.f64 (-.f64 -2 alpha) alpha)) (*.f64 1/48 (pow.f64 (-.f64 (-.f64 -2 alpha) alpha) 3)))) (pow.f64 beta 3)) (E.f64))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (E.f64) beta) (-.f64 (-.f64 -2 alpha) alpha)) (E.f64)) (*.f64 (E.f64) (+.f64 (/.f64 (*.f64 (-.f64 (-.f64 -2 alpha) alpha) (+.f64 (*.f64 -1/2 (+.f64 alpha 2)) (*.f64 (-.f64 (-.f64 -2 alpha) alpha) 1/8))) (*.f64 beta beta)) (/.f64 (fma.f64 -1/4 (*.f64 (+.f64 alpha 2) (pow.f64 (-.f64 (-.f64 -2 alpha) alpha) 2)) (fma.f64 1/2 (*.f64 (pow.f64 (+.f64 alpha 2) 2) (-.f64 (-.f64 -2 alpha) alpha)) (*.f64 1/48 (pow.f64 (-.f64 (-.f64 -2 alpha) alpha) 3)))) (pow.f64 beta 3)))))","(exp.f64 1)","(E.f64)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (exp.f64 1)) beta)) (exp.f64 1))","(fma.f64 -1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 beta (E.f64))) (E.f64))","(fma.f64 -1/2 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (E.f64)) (E.f64))","(fma.f64 -1/2 (*.f64 (/.f64 (E.f64) beta) (+.f64 alpha (+.f64 alpha 2))) (E.f64))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (exp.f64 1)) beta)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha))) (*.f64 1/8 (pow.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) 2))) (exp.f64 1)) (pow.f64 beta 2)) (exp.f64 1)))","(fma.f64 -1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 beta (E.f64))) (+.f64 (E.f64) (/.f64 (fma.f64 1/2 (*.f64 (+.f64 alpha 2) (-.f64 alpha (+.f64 -2 (neg.f64 alpha)))) (*.f64 1/8 (pow.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) 2))) (/.f64 (*.f64 beta beta) (E.f64)))))","(+.f64 (E.f64) (fma.f64 -1/2 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (E.f64)) (*.f64 (/.f64 (E.f64) beta) (/.f64 (fma.f64 1/2 (*.f64 (+.f64 alpha 2) (+.f64 alpha (+.f64 alpha 2))) (*.f64 1/8 (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2))) beta))))","(fma.f64 -1/2 (*.f64 (/.f64 (E.f64) beta) (+.f64 alpha (+.f64 alpha 2))) (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 alpha (+.f64 alpha 2)) (+.f64 (*.f64 (+.f64 alpha 2) 1/2) (*.f64 (+.f64 alpha (+.f64 alpha 2)) 1/8))) (*.f64 beta beta)) 1) (E.f64)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (exp.f64 1)) beta)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (+.f64 2 alpha))) (*.f64 1/8 (pow.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) 2))) (exp.f64 1)) (pow.f64 beta 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) 2) (+.f64 2 alpha))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) (pow.f64 (+.f64 2 alpha) 2))) (*.f64 1/48 (pow.f64 (-.f64 alpha (*.f64 -1 (+.f64 2 alpha))) 3)))) (exp.f64 1)) (pow.f64 beta 3))) (exp.f64 1))))","(fma.f64 -1/2 (/.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) (/.f64 beta (E.f64))) (+.f64 (/.f64 (fma.f64 1/2 (*.f64 (+.f64 alpha 2) (-.f64 alpha (+.f64 -2 (neg.f64 alpha)))) (*.f64 1/8 (pow.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) 2))) (/.f64 (*.f64 beta beta) (E.f64))) (fma.f64 -1 (/.f64 (fma.f64 1/4 (*.f64 (+.f64 alpha 2) (pow.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) 2)) (fma.f64 1/2 (*.f64 (pow.f64 (+.f64 alpha 2) 2) (-.f64 alpha (+.f64 -2 (neg.f64 alpha)))) (*.f64 1/48 (pow.f64 (-.f64 alpha (+.f64 -2 (neg.f64 alpha))) 3)))) (/.f64 (pow.f64 beta 3) (E.f64))) (E.f64))))","(+.f64 (-.f64 (E.f64) (*.f64 (/.f64 (fma.f64 1/4 (*.f64 (+.f64 alpha 2) (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2)) (fma.f64 1/2 (*.f64 (pow.f64 (+.f64 alpha 2) 2) (+.f64 alpha (+.f64 alpha 2))) (*.f64 1/48 (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 3)))) (pow.f64 beta 3)) (E.f64))) (fma.f64 -1/2 (*.f64 (/.f64 (+.f64 alpha (+.f64 alpha 2)) beta) (E.f64)) (*.f64 (/.f64 (E.f64) beta) (/.f64 (fma.f64 1/2 (*.f64 (+.f64 alpha 2) (+.f64 alpha (+.f64 alpha 2))) (*.f64 1/8 (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 2))) beta))))","(+.f64 (*.f64 (E.f64) (-.f64 (/.f64 (*.f64 (+.f64 alpha (+.f64 alpha 2)) (+.f64 (*.f64 (+.f64 alpha 2) 1/2) (*.f64 (+.f64 alpha (+.f64 alpha 2)) 1/8))) (*.f64 beta beta)) (/.f64 (fma.f64 1/4 (*.f64 (+.f64 alpha 2) (pow.f64 (-.f64 (-.f64 -2 alpha) alpha) 2)) (fma.f64 1/2 (*.f64 (pow.f64 (+.f64 alpha 2) 2) (+.f64 alpha (+.f64 alpha 2))) (*.f64 1/48 (pow.f64 (+.f64 alpha (+.f64 alpha 2)) 3)))) (pow.f64 beta 3)))) (fma.f64 -1/2 (*.f64 (/.f64 (E.f64) beta) (+.f64 alpha (+.f64 alpha 2))) (E.f64)))","(exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2)))))","(exp.f64 (+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta))))","(exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2))","(+.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (*.f64 -1/2 (*.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha))))","(+.f64 (exp.f64 (+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta)))) (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta)))) (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) alpha)))","(fma.f64 -1/2 (*.f64 alpha (*.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))) (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))","(*.f64 (+.f64 (*.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 alpha)) 1) (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (+.f64 beta 2))) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) 2))) (*.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (pow.f64 alpha 2))) (+.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (*.f64 -1/2 (*.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)))))","(fma.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta)) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) 2))) (*.f64 (*.f64 alpha alpha) (exp.f64 (+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta))))) (+.f64 (exp.f64 (+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta)))) (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta)))) (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) alpha))))","(fma.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta)) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) 2))) (*.f64 alpha (*.f64 alpha (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))) (fma.f64 -1/2 (*.f64 alpha (*.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))) (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2))))","(+.f64 (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)) (*.f64 (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)) (+.f64 (*.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 alpha)) (*.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta)) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) 2))) (*.f64 alpha alpha)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) 3)) (+.f64 (*.f64 -1/2 (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4)))) (*.f64 -1/4 (/.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) 2) (+.f64 beta 2))))) (*.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (pow.f64 alpha 3))) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (+.f64 beta 2))) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) 2))) (*.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (pow.f64 alpha 2))) (+.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (*.f64 -1/2 (*.f64 (exp.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 beta (+.f64 beta 2))))) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha))))))","(fma.f64 (fma.f64 -1/48 (pow.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) 3) (fma.f64 -1/2 (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4))) (*.f64 -1/4 (/.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) 2) (+.f64 2 beta))))) (*.f64 (pow.f64 alpha 3) (exp.f64 (+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta))))) (fma.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta)) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) 2))) (*.f64 (*.f64 alpha alpha) (exp.f64 (+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta))))) (+.f64 (exp.f64 (+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta)))) (*.f64 -1/2 (*.f64 (*.f64 (exp.f64 (+.f64 1/2 (/.f64 (*.f64 1/2 beta) (+.f64 2 beta)))) (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2)))) alpha)))))","(fma.f64 (fma.f64 -1/48 (pow.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) 3) (fma.f64 -1/2 (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4))) (*.f64 -1/4 (/.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) 2) (+.f64 2 beta))))) (*.f64 (pow.f64 alpha 3) (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2))) (fma.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta)) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) 2))) (*.f64 alpha (*.f64 alpha (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))) (fma.f64 -1/2 (*.f64 alpha (*.f64 (+.f64 (/.f64 1 (+.f64 2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))) (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)))))","(+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 alpha)) 1) (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2))) (*.f64 (exp.f64 (fma.f64 1/2 (/.f64 beta (+.f64 2 beta)) 1/2)) (+.f64 (*.f64 (*.f64 alpha alpha) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) (+.f64 2 beta)) (*.f64 1/8 (pow.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) 2)))) (*.f64 (pow.f64 alpha 3) (fma.f64 -1/48 (pow.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) 3) (fma.f64 -1/2 (+.f64 (/.f64 1 (pow.f64 (+.f64 2 beta) 3)) (/.f64 beta (pow.f64 (+.f64 2 beta) 4))) (*.f64 (/.f64 -1/4 (+.f64 2 beta)) (pow.f64 (+.f64 (/.f64 -1 (-.f64 -2 beta)) (/.f64 beta (pow.f64 (+.f64 2 beta) 2))) 2))))))))","1","(+.f64 1 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 1 (*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(fma.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) 1)","(fma.f64 1/2 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 2) (pow.f64 alpha 2))))))","(+.f64 1 (fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) 2) (*.f64 alpha alpha))))))","(+.f64 1 (fma.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 beta (+.f64 2 beta)) 2) (*.f64 alpha alpha))))))","(+.f64 1 (fma.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2)) (fma.f64 1/2 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) (*.f64 (/.f64 1/8 (*.f64 alpha alpha)) (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)))))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 2) (pow.f64 alpha 2))) (+.f64 (*.f64 1/48 (/.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 3) (pow.f64 alpha 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 2) (+.f64 beta 2)) (pow.f64 alpha 3))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))))))","(+.f64 1 (fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (fma.f64 1/8 (/.f64 (pow.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) 2) (*.f64 alpha alpha)) (fma.f64 1/48 (/.f64 (pow.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) 3) (pow.f64 alpha 3)) (fma.f64 -1/4 (/.f64 (pow.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) 2) (/.f64 (pow.f64 alpha 3) (+.f64 2 beta))) (*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))))))))))","(+.f64 1 (fma.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 beta (+.f64 2 beta)) 2) (*.f64 alpha alpha)) (fma.f64 1/48 (/.f64 (pow.f64 (+.f64 beta (+.f64 2 beta)) 3) (pow.f64 alpha 3)) (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (+.f64 beta (+.f64 2 beta)))) (*.f64 -1/4 (/.f64 (pow.f64 (+.f64 beta (+.f64 2 beta)) 2) (/.f64 (pow.f64 alpha 3) (+.f64 2 beta))))))))))","(+.f64 1 (fma.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2)) (fma.f64 1/2 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2) (*.f64 alpha alpha)) (fma.f64 1/48 (pow.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) 3) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2) (pow.f64 alpha 3)) (+.f64 2 beta)) (*.f64 (/.f64 1/2 (pow.f64 alpha 3)) (*.f64 (pow.f64 (+.f64 2 beta) 2) (+.f64 (+.f64 beta beta) 2)))))))))","1","(+.f64 1 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)))","(+.f64 1 (*.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha)))","(fma.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) 1)","(fma.f64 1/2 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 2) (pow.f64 alpha 2))))))","(+.f64 1 (fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) 2) (*.f64 alpha alpha))))))","(+.f64 1 (fma.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 beta (+.f64 2 beta)) 2) (*.f64 alpha alpha))))))","(+.f64 1 (fma.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2)) (fma.f64 1/2 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) (*.f64 (/.f64 1/8 (*.f64 alpha alpha)) (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)))))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) alpha)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 2) (+.f64 beta 2))) (+.f64 (*.f64 -1/2 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2))) (*.f64 -1/48 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 3)))) (pow.f64 alpha 3))) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) 2) (pow.f64 alpha 2)))))))","(+.f64 1 (fma.f64 -1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 1/2 (/.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) alpha) (fma.f64 -1 (/.f64 (fma.f64 1/4 (*.f64 (+.f64 2 beta) (pow.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) 2)) (fma.f64 -1/2 (*.f64 (pow.f64 (+.f64 2 beta) 2) (-.f64 beta (neg.f64 (+.f64 2 beta)))) (*.f64 -1/48 (pow.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) 3)))) (pow.f64 alpha 3)) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 beta (neg.f64 (+.f64 2 beta))) 2) (*.f64 alpha alpha)))))))","(+.f64 1 (fma.f64 -1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))) (fma.f64 1/2 (/.f64 (+.f64 beta (+.f64 2 beta)) alpha) (-.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 beta (+.f64 2 beta)) 2) (*.f64 alpha alpha))) (/.f64 (fma.f64 1/4 (*.f64 (+.f64 2 beta) (pow.f64 (+.f64 beta (+.f64 2 beta)) 2)) (fma.f64 -1/2 (*.f64 (pow.f64 (+.f64 2 beta) 2) (+.f64 beta (+.f64 2 beta))) (*.f64 -1/48 (pow.f64 (+.f64 beta (+.f64 2 beta)) 3)))) (pow.f64 alpha 3))))))","(+.f64 1 (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2)) (fma.f64 1/2 (/.f64 (+.f64 (+.f64 beta beta) 2) alpha) (*.f64 (/.f64 1/8 (*.f64 alpha alpha)) (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)))) (/.f64 (fma.f64 1/4 (*.f64 (+.f64 2 beta) (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) (fma.f64 -1/2 (*.f64 (pow.f64 (+.f64 2 beta) 2) (+.f64 (+.f64 beta beta) 2)) (*.f64 -1/48 (pow.f64 (+.f64 (+.f64 beta beta) 2) 3)))) (pow.f64 alpha 3))))"]],"stop":[["node limit",1]],"time":71.887939453125,"type":"simplify"},{"compiler":[[20287,14078]],"time":200.129150390625,"type":"eval"},{"alts":[["(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","done",15.686341442534967],["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","next",46.38825741486265],["(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)","done",15.65280063692237]],"compiler":[[16,12],[38,25],[16,12],[38,25]],"count":[[398,3]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[395,1],"picked":[1,1]}],"min-error":[0.030344470018659867],"time":130.323974609375,"type":"prune"},{"compiler":[[144,80]],"locations":[["(*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))",0.06640625,true],["(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))",1.3428855435063474,true],["(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))",2.7539573493550153,true],["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))",11.562500000000002,true]],"time":28.016845703125,"type":"localize"},{"count":[[4,96]],"series":[["(*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))","alpha","-inf",0.25],["(*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))","alpha","inf",0.33203125],["(*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))","alpha","0",0.367919921875],["(*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))","beta","-inf",0.276123046875],["(*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))","beta","inf",0.27783203125],["(*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))","beta","0",0.315185546875],["(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","alpha","-inf",0.14697265625],["(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","alpha","inf",0.239990234375],["(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","alpha","0",0.2900390625],["(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","beta","-inf",0.291015625],["(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","beta","inf",0.324951171875],["(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","beta","0",0.3310546875],["(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","alpha","-inf",0.153076171875],["(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","alpha","inf",0.254150390625],["(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","alpha","0",0.85498046875],["(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","beta","-inf",0.252197265625],["(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","beta","inf",0.298095703125],["(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","beta","0",0.31201171875],["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","alpha","-inf",0.39501953125],["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","alpha","inf",0.501953125],["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","alpha","0",0.759033203125],["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","beta","-inf",2.058837890625],["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","beta","inf",0.6279296875],["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","beta","0",0.958984375]],"time":11.30517578125,"type":"series"},{"count":[[4,137]],"egraph":[[2,7052,89,0.042797458],[1,466,89,0.009277833],[0,20,104,0.000598583]],"inputs":[["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))) (*.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha))) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha))) 1) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))) (pow.f64 (cbrt.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))) 2) (cbrt.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))) (sqrt.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha))) 3) (pow.f64 (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))) 3)) (+.f64 (*.f64 (*.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha))) (*.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)))) (-.f64 (pow.f64 (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))) 2) (*.f64 (*.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha))) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha))) (*.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)))) (pow.f64 (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))) 2)) (-.f64 (*.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha))) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (fma.f64 2 beta 2) (/.f64 -1/2 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 2 beta) (*.f64 (+.f64 2 beta) (pow.f64 alpha -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 2 beta) 2) (pow.f64 alpha -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 (pow.f64 alpha -2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 beta) 4)) (*.f64 (pow.f64 (cbrt.f64 (+.f64 2 beta)) 2) (pow.f64 alpha -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 2 beta) alpha) (/.f64 (+.f64 2 beta) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 2 beta) alpha) (*.f64 (/.f64 (+.f64 2 beta) alpha) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 2 beta) 2)) (/.f64 1 (*.f64 alpha (neg.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 alpha -2) (pow.f64 (+.f64 2 beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 alpha) (/.f64 (pow.f64 (+.f64 2 beta) 2) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) alpha) (/.f64 1 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 2 beta) 1) (*.f64 (+.f64 2 beta) (pow.f64 alpha -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 2 beta) (cbrt.f64 (pow.f64 alpha 4))) (/.f64 (+.f64 2 beta) (pow.f64 (cbrt.f64 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 2 beta) 4)) alpha) (/.f64 (pow.f64 (cbrt.f64 (+.f64 2 beta)) 2) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 2 beta) 4)) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 2 beta)) 2) (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 alpha 4))) (/.f64 (pow.f64 (+.f64 2 beta) 2) (pow.f64 (cbrt.f64 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 2 beta) 4)) (cbrt.f64 (pow.f64 alpha 4))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 alpha alpha) (pow.f64 (+.f64 2 beta) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha (neg.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 2 beta) (pow.f64 alpha -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2))) 2) (cbrt.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 2 beta)) 2) (*.f64 (cbrt.f64 (+.f64 2 beta)) (pow.f64 alpha -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 2 beta) alpha) (/.f64 1 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 2 beta)) alpha) (/.f64 (sqrt.f64 (+.f64 2 beta)) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 2 beta)) (*.f64 (sqrt.f64 (+.f64 2 beta)) (pow.f64 alpha -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 beta) -2) (/.f64 1 (*.f64 alpha (neg.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 alpha -2) (+.f64 2 beta))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 alpha) (/.f64 (+.f64 2 beta) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 2 beta)) 2) alpha) (/.f64 (cbrt.f64 (+.f64 2 beta)) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 alpha 4))) (/.f64 (+.f64 2 beta) (pow.f64 (cbrt.f64 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 2 beta)) 2) 1) (/.f64 (cbrt.f64 (+.f64 2 beta)) (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 2 beta)) 1) (/.f64 (sqrt.f64 (+.f64 2 beta)) (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 2 beta)) 2) (cbrt.f64 (pow.f64 alpha 4))) (cbrt.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 2 beta)) (cbrt.f64 (pow.f64 alpha 4))) (/.f64 (sqrt.f64 (+.f64 2 beta)) (pow.f64 (cbrt.f64 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (+.f64 2 beta)) alpha) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha (neg.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (pow.f64 alpha 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 2 beta)) (pow.f64 alpha -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 2 beta) 3) (pow.f64 (*.f64 alpha alpha) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 2 beta) (pow.f64 alpha -2))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 2 beta 2) alpha) (*.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) (/.f64 (fma.f64 2 beta 2) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 2 beta 2) alpha) (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) (/.f64 (fma.f64 2 beta 2) alpha)) (/.f64 (fma.f64 2 beta 2) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)) (/.f64 (fma.f64 2 beta 2) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 alpha (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (fma.f64 2 beta 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 alpha (fma.f64 2 beta 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 3)) (*.f64 (/.f64 alpha (fma.f64 2 beta 2)) (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) (-.f64 1 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) -1) (*.f64 (/.f64 alpha (fma.f64 2 beta 2)) (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (fma.f64 2 beta 2)) alpha)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (fma.f64 2 beta 2))) (neg.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 3)) 1) (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) (-.f64 1 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2))) (/.f64 alpha (fma.f64 2 beta 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) -1) 1) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) -1) (/.f64 alpha (fma.f64 2 beta 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 3)) (fma.f64 2 beta 2)) (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) (-.f64 1 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2))) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) -1) (fma.f64 2 beta 2)) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) -1) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 3)) (neg.f64 (fma.f64 2 beta 2))) (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) (-.f64 1 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2))) (neg.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) -1) (neg.f64 (fma.f64 2 beta 2))) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) -1) (neg.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 3))) (*.f64 alpha (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) (-.f64 1 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 2 beta 2)) (+.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 3))) (*.f64 (neg.f64 alpha) (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) (-.f64 1 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) -1)) (*.f64 alpha (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 2 beta 2)) (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) -1)) (*.f64 (neg.f64 alpha) (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (fma.f64 2 beta 2)) 1) alpha)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (fma.f64 2 beta 2)) (pow.f64 (cbrt.f64 alpha) 2)) (cbrt.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (fma.f64 2 beta 2)) (sqrt.f64 alpha)) (sqrt.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 3)) (/.f64 (fma.f64 2 beta 2) alpha)) (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) (-.f64 1 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) -1) (/.f64 (fma.f64 2 beta 2) alpha)) (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 2 beta 2)) (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1)) (neg.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (neg.f64 (fma.f64 2 beta 2))) (neg.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (+.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 3))) (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) (-.f64 1 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 4) (pow.f64 alpha 4)) -1)) (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (/.f64 (fma.f64 2 beta 2) alpha)) (hypot.f64 1 (/.f64 (+.f64 2 beta) alpha))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 (fma.f64 2 beta 2) alpha)) (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) 3) (pow.f64 (/.f64 (fma.f64 2 beta 2) alpha) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 2 beta 2) alpha) 3) (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2) 1) (/.f64 (fma.f64 2 beta 2) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log1p.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)) (log.f64 (/.f64 (fma.f64 2 beta 2) alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (log1p.f64 (pow.f64 (/.f64 (+.f64 2 beta) alpha) 2)) (log.f64 (/.f64 (fma.f64 2 beta 2) alpha))) 1))))))"]],"rules":[["egg-rr",44],["egg-rr",34],["egg-rr",36],["egg-rr",23]],"stop":[["node limit",1]],"time":74.0908203125,"type":"rewrite"},{"count":[[233,208]],"egraph":[[3,5563,2348,0.023887291999999997],[2,1264,2441,0.010510875],[1,384,2661,0.002851167],[0,116,2761,0.000668]],"inputs":[["(-.f64 (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (+.f64 (*.f64 beta (-.f64 (*.f64 1/2 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha))) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (+.f64 (*.f64 beta (-.f64 (*.f64 1/2 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha)))) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (+.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (+.f64 (*.f64 beta (-.f64 (*.f64 1/2 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha))))) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))","(+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))","(+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (+.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (*.f64 beta (-.f64 (*.f64 1/2 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2)))))))","(-.f64 (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (+.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (+.f64 (*.f64 beta (-.f64 (*.f64 1/2 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))) (/.f64 1 alpha))))) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))","(+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))","(+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (+.f64 (*.f64 -1 (*.f64 beta (+.f64 (*.f64 1/2 (-.f64 (*.f64 -2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2)))))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))))","(-.f64 (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (+.f64 (*.f64 -1 (*.f64 beta (+.f64 (*.f64 1/2 (-.f64 (*.f64 -2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2)))))) (+.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha))))) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2)))))","(*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2)))))","(*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2)))))","(/.f64 4 (pow.f64 alpha 2))","(+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 2))) (*.f64 4 (/.f64 beta (pow.f64 alpha 2))))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 2))) (*.f64 4 (/.f64 beta (pow.f64 alpha 2)))))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 2))) (*.f64 4 (/.f64 beta (pow.f64 alpha 2)))))","(/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (*.f64 4 (/.f64 beta (pow.f64 alpha 2))))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (+.f64 (*.f64 4 (/.f64 beta (pow.f64 alpha 2))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (+.f64 (*.f64 4 (/.f64 beta (pow.f64 alpha 2))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))))","(/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (*.f64 4 (/.f64 beta (pow.f64 alpha 2))))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (+.f64 (*.f64 4 (/.f64 beta (pow.f64 alpha 2))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (+.f64 (*.f64 4 (/.f64 beta (pow.f64 alpha 2))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 2 (pow.f64 alpha 2))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(/.f64 beta (pow.f64 alpha 2))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(/.f64 beta (pow.f64 alpha 2))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha))","(+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)))","(+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3)))))","(+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))))))","(*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))))","(+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3)))))","(+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))))))","(*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3)))))) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3)))))","(+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3)))))) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))))))","(/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 4 (pow.f64 alpha 3)) (-.f64 (/.f64 1 alpha) (/.f64 2 (*.f64 alpha alpha))))","(+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 1 alpha) (/.f64 -2 (*.f64 alpha alpha))))","(+.f64 (+.f64 (/.f64 4 (pow.f64 alpha 3)) (/.f64 1 alpha)) (/.f64 -2 (*.f64 alpha alpha)))","(-.f64 (+.f64 (*.f64 beta (-.f64 (*.f64 1/2 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha))) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (fma.f64 beta (-.f64 (*.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3)))) (/.f64 3 (*.f64 alpha alpha))) (+.f64 (/.f64 4 (pow.f64 alpha 3)) (/.f64 1 alpha))) (/.f64 2 (*.f64 alpha alpha)))","(+.f64 (+.f64 (/.f64 1 alpha) (fma.f64 beta (fma.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (/.f64 -3 (*.f64 alpha alpha))) (/.f64 4 (pow.f64 alpha 3)))) (/.f64 -2 (*.f64 alpha alpha)))","(+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 1 alpha) (fma.f64 beta (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 (/.f64 -3 alpha) alpha))) (/.f64 -2 (*.f64 alpha alpha)))))","(+.f64 (/.f64 1 alpha) (+.f64 (fma.f64 beta (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 -3 (*.f64 alpha alpha)))) (/.f64 4 (pow.f64 alpha 3))) (/.f64 -2 (*.f64 alpha alpha))))","(-.f64 (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (+.f64 (*.f64 beta (-.f64 (*.f64 1/2 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha)))) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (fma.f64 (*.f64 beta beta) (-.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 1 (*.f64 alpha alpha))) (fma.f64 beta (-.f64 (*.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3)))) (/.f64 3 (*.f64 alpha alpha))) (+.f64 (/.f64 4 (pow.f64 alpha 3)) (/.f64 1 alpha)))) (/.f64 2 (*.f64 alpha alpha)))","(+.f64 (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (+.f64 (/.f64 1 alpha) (fma.f64 beta (fma.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (/.f64 -3 (*.f64 alpha alpha))) (/.f64 4 (pow.f64 alpha 3))))) (/.f64 -2 (*.f64 alpha alpha)))","(+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (fma.f64 beta (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 (/.f64 -3 alpha) alpha))) (/.f64 1 alpha)) (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (/.f64 -2 (*.f64 alpha alpha)))))","(+.f64 (+.f64 (/.f64 4 (pow.f64 alpha 3)) (/.f64 1 alpha)) (fma.f64 beta (fma.f64 beta (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 -3 (*.f64 alpha alpha))))) (/.f64 -2 (*.f64 alpha alpha))))","(-.f64 (+.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (+.f64 (*.f64 beta (-.f64 (*.f64 1/2 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha))))) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (-.f64 (fma.f64 (*.f64 beta beta) (-.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 1 (*.f64 alpha alpha))) (fma.f64 beta (-.f64 (*.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3)))) (/.f64 3 (*.f64 alpha alpha))) (+.f64 (/.f64 4 (pow.f64 alpha 3)) (/.f64 1 alpha)))) (/.f64 2 (*.f64 alpha alpha))))","(+.f64 (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (+.f64 (/.f64 1 alpha) (fma.f64 beta (fma.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (/.f64 -3 (*.f64 alpha alpha))) (/.f64 4 (pow.f64 alpha 3))))) (-.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 2 (*.f64 alpha alpha))))","(+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (+.f64 (/.f64 1 alpha) (fma.f64 beta (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 (/.f64 -3 alpha) alpha))) (pow.f64 (/.f64 beta alpha) 3))) (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (/.f64 -2 (*.f64 alpha alpha)))))","(+.f64 (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 1 alpha) (pow.f64 (/.f64 beta alpha) 3))) (fma.f64 beta (fma.f64 beta (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 -3 (*.f64 alpha alpha))))) (/.f64 -2 (*.f64 alpha alpha))))","(/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))","(pow.f64 (/.f64 beta alpha) 3)","(+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))","(fma.f64 (*.f64 beta beta) (-.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 1 (*.f64 alpha alpha))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))","(fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))","(fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (pow.f64 (/.f64 beta alpha) 3))","(+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (+.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (*.f64 beta (-.f64 (*.f64 1/2 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2)))))))","(+.f64 (fma.f64 (*.f64 beta beta) (-.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 1 (*.f64 alpha alpha))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 beta (-.f64 (*.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3)))) (/.f64 3 (*.f64 alpha alpha)))))","(fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (fma.f64 beta (fma.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (/.f64 -3 (*.f64 alpha alpha))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))))","(fma.f64 beta (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 (/.f64 -3 alpha) alpha))) (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (pow.f64 (/.f64 beta alpha) 3)))","(+.f64 (pow.f64 (/.f64 beta alpha) 3) (*.f64 beta (fma.f64 beta (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 -3 (*.f64 alpha alpha)))))))","(-.f64 (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (+.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (+.f64 (*.f64 beta (-.f64 (*.f64 1/2 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))) (/.f64 1 alpha))))) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (-.f64 (fma.f64 (*.f64 beta beta) (-.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 1 (*.f64 alpha alpha))) (fma.f64 beta (-.f64 (*.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3)))) (/.f64 3 (*.f64 alpha alpha))) (+.f64 (/.f64 4 (pow.f64 alpha 3)) (/.f64 1 alpha)))) (/.f64 2 (*.f64 alpha alpha))))","(+.f64 (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (+.f64 (/.f64 1 alpha) (fma.f64 beta (fma.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (/.f64 -3 (*.f64 alpha alpha))) (/.f64 4 (pow.f64 alpha 3))))) (-.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 2 (*.f64 alpha alpha))))","(+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (+.f64 (/.f64 1 alpha) (fma.f64 beta (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 (/.f64 -3 alpha) alpha))) (pow.f64 (/.f64 beta alpha) 3))) (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (/.f64 -2 (*.f64 alpha alpha)))))","(+.f64 (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 1 alpha) (pow.f64 (/.f64 beta alpha) 3))) (fma.f64 beta (fma.f64 beta (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 -3 (*.f64 alpha alpha))))) (/.f64 -2 (*.f64 alpha alpha))))","(/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))","(pow.f64 (/.f64 beta alpha) 3)","(+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))","(fma.f64 (*.f64 beta beta) (-.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 1 (*.f64 alpha alpha))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))","(fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))","(fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (pow.f64 (/.f64 beta alpha) 3))","(+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (+.f64 (*.f64 -1 (*.f64 beta (+.f64 (*.f64 1/2 (-.f64 (*.f64 -2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2)))))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))))","(+.f64 (fma.f64 (*.f64 beta beta) (-.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 1 (*.f64 alpha alpha))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 beta (-.f64 (*.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3)))) (/.f64 3 (*.f64 alpha alpha)))))","(fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (fma.f64 beta (fma.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (/.f64 -3 (*.f64 alpha alpha))) (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))))","(fma.f64 beta (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 (/.f64 -3 alpha) alpha))) (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (pow.f64 (/.f64 beta alpha) 3)))","(+.f64 (pow.f64 (/.f64 beta alpha) 3) (*.f64 beta (fma.f64 beta (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 -3 (*.f64 alpha alpha)))))))","(-.f64 (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 5 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 (pow.f64 alpha 2)))) (+.f64 (*.f64 -1 (*.f64 beta (+.f64 (*.f64 1/2 (-.f64 (*.f64 -2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2)))))) (+.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha))))) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (-.f64 (fma.f64 (*.f64 beta beta) (-.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 1 (*.f64 alpha alpha))) (fma.f64 beta (-.f64 (*.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3)))) (/.f64 3 (*.f64 alpha alpha))) (+.f64 (/.f64 4 (pow.f64 alpha 3)) (/.f64 1 alpha)))) (/.f64 2 (*.f64 alpha alpha))))","(+.f64 (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (+.f64 (/.f64 1 alpha) (fma.f64 beta (fma.f64 1/2 (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (/.f64 -3 (*.f64 alpha alpha))) (/.f64 4 (pow.f64 alpha 3))))) (-.f64 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 2 (*.f64 alpha alpha))))","(+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (+.f64 (/.f64 1 alpha) (fma.f64 beta (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 (/.f64 -3 alpha) alpha))) (pow.f64 (/.f64 beta alpha) 3))) (fma.f64 (*.f64 beta beta) (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (/.f64 -2 (*.f64 alpha alpha)))))","(+.f64 (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 1 alpha) (pow.f64 (/.f64 beta alpha) 3))) (fma.f64 beta (fma.f64 beta (+.f64 (/.f64 5 (pow.f64 alpha 3)) (/.f64 -1 (*.f64 alpha alpha))) (+.f64 (/.f64 4 (pow.f64 alpha 3)) (+.f64 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 -3 (*.f64 alpha alpha))))) (/.f64 -2 (*.f64 alpha alpha))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))","(*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))))","(*.f64 1/2 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))))","(*.f64 (/.f64 (+.f64 1 (*.f64 1 beta)) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2))","(*.f64 (/.f64 (+.f64 1 beta) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))","(fma.f64 1/2 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))) (*.f64 -1/2 (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (/.f64 (+.f64 2 beta) alpha))))","(fma.f64 1/2 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))) (/.f64 (*.f64 (+.f64 1 beta) -1) (*.f64 (/.f64 alpha (+.f64 2 beta)) alpha)))","(*.f64 (/.f64 (+.f64 2 beta) (/.f64 (*.f64 alpha alpha) (fma.f64 2 beta 2))) (+.f64 (/.f64 1/2 (/.f64 alpha (+.f64 2 beta))) -1/2))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2)))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha) (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))))","(fma.f64 1/2 (/.f64 (fma.f64 2 beta 2) alpha) (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))) (*.f64 -1/2 (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (/.f64 (+.f64 2 beta) alpha)))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (/.f64 (*.f64 (+.f64 1 beta) -1) (*.f64 (/.f64 alpha (+.f64 2 beta)) alpha)))","(+.f64 (*.f64 (/.f64 (+.f64 2 beta) (/.f64 (*.f64 alpha alpha) (fma.f64 2 beta 2))) (+.f64 (/.f64 1/2 (/.f64 alpha (+.f64 2 beta))) -1/2)) (/.f64 (+.f64 1 beta) alpha))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2)))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha) (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))))","(fma.f64 1/2 (/.f64 (fma.f64 2 beta 2) alpha) (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))) (*.f64 -1/2 (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (/.f64 (+.f64 2 beta) alpha)))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (/.f64 (*.f64 (+.f64 1 beta) -1) (*.f64 (/.f64 alpha (+.f64 2 beta)) alpha)))","(+.f64 (*.f64 (/.f64 (+.f64 2 beta) (/.f64 (*.f64 alpha alpha) (fma.f64 2 beta 2))) (+.f64 (/.f64 1/2 (/.f64 alpha (+.f64 2 beta))) -1/2)) (/.f64 (+.f64 1 beta) alpha))","(*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha))","(*.f64 1/2 (/.f64 (fma.f64 2 beta 2) alpha))","(/.f64 (+.f64 1 (*.f64 1 beta)) alpha)","(/.f64 (+.f64 1 beta) alpha)","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))","(fma.f64 1/2 (/.f64 (fma.f64 2 beta 2) alpha) (*.f64 -1/2 (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (/.f64 (+.f64 2 beta) alpha))))","(fma.f64 1/2 (/.f64 (fma.f64 2 beta 2) alpha) (/.f64 (*.f64 (+.f64 1 beta) -1) (*.f64 (/.f64 alpha (+.f64 2 beta)) alpha)))","(*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (+.f64 (/.f64 (*.f64 (+.f64 2 beta) -1/2) alpha) 1/2))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2)))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha) (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))))","(fma.f64 1/2 (/.f64 (fma.f64 2 beta 2) alpha) (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))) (*.f64 -1/2 (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (/.f64 (+.f64 2 beta) alpha)))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (/.f64 (*.f64 (+.f64 1 beta) -1) (*.f64 (/.f64 alpha (+.f64 2 beta)) alpha)))","(+.f64 (*.f64 (/.f64 (+.f64 2 beta) (/.f64 (*.f64 alpha alpha) (fma.f64 2 beta 2))) (+.f64 (/.f64 1/2 (/.f64 alpha (+.f64 2 beta))) -1/2)) (/.f64 (+.f64 1 beta) alpha))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2)))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha) (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))))","(fma.f64 1/2 (/.f64 (fma.f64 2 beta 2) alpha) (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))) (*.f64 -1/2 (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (/.f64 (+.f64 2 beta) alpha)))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (/.f64 (*.f64 (+.f64 1 beta) -1) (*.f64 (/.f64 alpha (+.f64 2 beta)) alpha)))","(+.f64 (*.f64 (/.f64 (+.f64 2 beta) (/.f64 (*.f64 alpha alpha) (fma.f64 2 beta 2))) (+.f64 (/.f64 1/2 (/.f64 alpha (+.f64 2 beta))) -1/2)) (/.f64 (+.f64 1 beta) alpha))","(*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha))","(*.f64 1/2 (/.f64 (fma.f64 2 beta 2) alpha))","(/.f64 (+.f64 1 (*.f64 1 beta)) alpha)","(/.f64 (+.f64 1 beta) alpha)","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta)))))","(fma.f64 1/2 (/.f64 (fma.f64 2 beta 2) alpha) (*.f64 -1/2 (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (/.f64 (+.f64 2 beta) alpha))))","(fma.f64 1/2 (/.f64 (fma.f64 2 beta 2) alpha) (/.f64 (*.f64 (+.f64 1 beta) -1) (*.f64 (/.f64 alpha (+.f64 2 beta)) alpha)))","(*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (+.f64 (/.f64 (*.f64 (+.f64 2 beta) -1/2) alpha) 1/2))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2)))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha) (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))))","(fma.f64 1/2 (/.f64 (fma.f64 2 beta 2) alpha) (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))) (*.f64 -1/2 (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (/.f64 (+.f64 2 beta) alpha)))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (/.f64 (*.f64 (+.f64 1 beta) -1) (*.f64 (/.f64 alpha (+.f64 2 beta)) alpha)))","(+.f64 (*.f64 (/.f64 (+.f64 2 beta) (/.f64 (*.f64 alpha alpha) (fma.f64 2 beta 2))) (+.f64 (/.f64 1/2 (/.f64 alpha (+.f64 2 beta))) -1/2)) (/.f64 (+.f64 1 beta) alpha))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2)))))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) alpha) (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (*.f64 alpha alpha) (+.f64 2 beta))))))","(fma.f64 1/2 (/.f64 (fma.f64 2 beta 2) alpha) (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))) (*.f64 -1/2 (*.f64 (/.f64 (fma.f64 2 beta 2) alpha) (/.f64 (+.f64 2 beta) alpha)))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (fma.f64 2 beta 2) alpha)) (/.f64 (*.f64 (+.f64 1 beta) -1) (*.f64 (/.f64 alpha (+.f64 2 beta)) alpha)))","(+.f64 (*.f64 (/.f64 (+.f64 2 beta) (/.f64 (*.f64 alpha alpha) (fma.f64 2 beta 2))) (+.f64 (/.f64 1/2 (/.f64 alpha (+.f64 2 beta))) -1/2)) (/.f64 (+.f64 1 beta) alpha))","(/.f64 4 (pow.f64 alpha 2))","(/.f64 4 (*.f64 alpha alpha))","(+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 2))) (*.f64 4 (/.f64 beta (pow.f64 alpha 2))))","(fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 4 (*.f64 alpha alpha)))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 2))) (*.f64 4 (/.f64 beta (pow.f64 alpha 2)))))","(+.f64 (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 4 (*.f64 alpha alpha))))","(+.f64 (/.f64 4 (*.f64 alpha alpha)) (fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 beta (/.f64 (*.f64 alpha alpha) beta))))","(+.f64 (/.f64 4 (*.f64 alpha alpha)) (*.f64 (/.f64 beta alpha) (+.f64 (/.f64 4 alpha) (/.f64 beta alpha))))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 2))) (*.f64 4 (/.f64 beta (pow.f64 alpha 2)))))","(+.f64 (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 4 (*.f64 alpha alpha))))","(+.f64 (/.f64 4 (*.f64 alpha alpha)) (fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 beta (/.f64 (*.f64 alpha alpha) beta))))","(+.f64 (/.f64 4 (*.f64 alpha alpha)) (*.f64 (/.f64 beta alpha) (+.f64 (/.f64 4 alpha) (/.f64 beta alpha))))","(/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (*.f64 beta beta) (*.f64 alpha alpha))","(/.f64 beta (/.f64 (*.f64 alpha alpha) beta))","(*.f64 (/.f64 beta alpha) (/.f64 beta alpha))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (*.f64 4 (/.f64 beta (pow.f64 alpha 2))))","(+.f64 (*.f64 4 (/.f64 beta (*.f64 alpha alpha))) (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)))","(fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 beta (/.f64 (*.f64 alpha alpha) beta)))","(*.f64 (/.f64 beta alpha) (+.f64 (/.f64 4 alpha) (/.f64 beta alpha)))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (+.f64 (*.f64 4 (/.f64 beta (pow.f64 alpha 2))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))))","(+.f64 (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 4 (*.f64 alpha alpha))))","(+.f64 (/.f64 4 (*.f64 alpha alpha)) (fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 beta (/.f64 (*.f64 alpha alpha) beta))))","(+.f64 (/.f64 4 (*.f64 alpha alpha)) (*.f64 (/.f64 beta alpha) (+.f64 (/.f64 4 alpha) (/.f64 beta alpha))))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (+.f64 (*.f64 4 (/.f64 beta (pow.f64 alpha 2))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))))","(+.f64 (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 4 (*.f64 alpha alpha))))","(+.f64 (/.f64 4 (*.f64 alpha alpha)) (fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 beta (/.f64 (*.f64 alpha alpha) beta))))","(+.f64 (/.f64 4 (*.f64 alpha alpha)) (*.f64 (/.f64 beta alpha) (+.f64 (/.f64 4 alpha) (/.f64 beta alpha))))","(/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (*.f64 beta beta) (*.f64 alpha alpha))","(/.f64 beta (/.f64 (*.f64 alpha alpha) beta))","(*.f64 (/.f64 beta alpha) (/.f64 beta alpha))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (*.f64 4 (/.f64 beta (pow.f64 alpha 2))))","(+.f64 (*.f64 4 (/.f64 beta (*.f64 alpha alpha))) (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)))","(fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 beta (/.f64 (*.f64 alpha alpha) beta)))","(*.f64 (/.f64 beta alpha) (+.f64 (/.f64 4 alpha) (/.f64 beta alpha)))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (+.f64 (*.f64 4 (/.f64 beta (pow.f64 alpha 2))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))))","(+.f64 (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 4 (*.f64 alpha alpha))))","(+.f64 (/.f64 4 (*.f64 alpha alpha)) (fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 beta (/.f64 (*.f64 alpha alpha) beta))))","(+.f64 (/.f64 4 (*.f64 alpha alpha)) (*.f64 (/.f64 beta alpha) (+.f64 (/.f64 4 alpha) (/.f64 beta alpha))))","(+.f64 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2)) (+.f64 (*.f64 4 (/.f64 beta (pow.f64 alpha 2))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))))","(+.f64 (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 4 (*.f64 alpha alpha))))","(+.f64 (/.f64 4 (*.f64 alpha alpha)) (fma.f64 4 (/.f64 beta (*.f64 alpha alpha)) (/.f64 beta (/.f64 (*.f64 alpha alpha) beta))))","(+.f64 (/.f64 4 (*.f64 alpha alpha)) (*.f64 (/.f64 beta alpha) (+.f64 (/.f64 4 alpha) (/.f64 beta alpha))))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha))","(/.f64 2 (pow.f64 alpha 2))","(/.f64 2 (*.f64 alpha alpha))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 beta (*.f64 alpha alpha)))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 beta (*.f64 alpha alpha)))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 beta (*.f64 alpha alpha)))","(/.f64 beta (pow.f64 alpha 2))","(/.f64 beta (*.f64 alpha alpha))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 beta (*.f64 alpha alpha)))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 beta (*.f64 alpha alpha)))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 beta (*.f64 alpha alpha)))","(/.f64 beta (pow.f64 alpha 2))","(/.f64 beta (*.f64 alpha alpha))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 beta (*.f64 alpha alpha)))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 beta (*.f64 alpha alpha)))","(+.f64 (/.f64 beta (pow.f64 alpha 2)) (*.f64 2 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 2 (*.f64 alpha alpha)) (/.f64 beta (*.f64 alpha alpha)))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(/.f64 (+.f64 beta 2) (pow.f64 alpha 2))","(/.f64 (+.f64 2 beta) (*.f64 alpha alpha))","(*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha))","(*.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha))","(/.f64 2 (/.f64 alpha (+.f64 1 (/.f64 4 (*.f64 alpha alpha)))))","(/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha)","(+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (*.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha)))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (/.f64 2 (/.f64 alpha (+.f64 1 (/.f64 4 (*.f64 alpha alpha))))))","(+.f64 (/.f64 8 (/.f64 (pow.f64 alpha 3) beta)) (*.f64 (+.f64 1 beta) (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha)))","(+.f64 (/.f64 (*.f64 beta 8) (pow.f64 alpha 3)) (*.f64 (+.f64 1 beta) (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha)))","(+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3)))))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 (*.f64 10 (*.f64 beta beta)) (pow.f64 alpha 3))))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 (*.f64 (*.f64 10 beta) beta) (pow.f64 alpha 3))))","(fma.f64 10 (*.f64 (/.f64 beta (pow.f64 alpha 3)) beta) (+.f64 (/.f64 8 (/.f64 (pow.f64 alpha 3) beta)) (*.f64 (+.f64 1 beta) (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha))))","(+.f64 (*.f64 (+.f64 1 beta) (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha)) (*.f64 (/.f64 beta (*.f64 alpha alpha)) (+.f64 (/.f64 8 alpha) (/.f64 (*.f64 beta 10) alpha))))","(+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))))))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 (*.f64 10 (*.f64 beta beta)) (pow.f64 alpha 3)))))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 (*.f64 (*.f64 10 beta) beta) (pow.f64 alpha 3)))))","(+.f64 (*.f64 (+.f64 1 beta) (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha)) (fma.f64 beta (/.f64 8 (pow.f64 alpha 3)) (fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 alpha 3) 10)))))","(fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (+.f64 (*.f64 (+.f64 1 beta) (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha)) (*.f64 (/.f64 beta (*.f64 alpha alpha)) (+.f64 (/.f64 8 alpha) (/.f64 (*.f64 beta 10) alpha)))))","(*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))","(*.f64 2 (pow.f64 (/.f64 beta alpha) 3))","(+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))))","(fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 (*.f64 10 (*.f64 beta beta)) (pow.f64 alpha 3)))","(fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 (*.f64 (*.f64 10 beta) beta) (pow.f64 alpha 3)))","(fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 alpha 3) 10)))","(fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (*.f64 (/.f64 10 (pow.f64 alpha 3)) (*.f64 beta beta)))","(+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3)))))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 (*.f64 10 (*.f64 beta beta)) (pow.f64 alpha 3))))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 (*.f64 (*.f64 10 beta) beta) (pow.f64 alpha 3))))","(fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (fma.f64 beta (+.f64 (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 alpha 3) 10))))","(fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (fma.f64 beta (+.f64 (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (*.f64 (/.f64 10 (pow.f64 alpha 3)) (*.f64 beta beta))))","(+.f64 (*.f64 beta (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3))))) (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))))))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 (*.f64 10 (*.f64 beta beta)) (pow.f64 alpha 3)))))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 (*.f64 (*.f64 10 beta) beta) (pow.f64 alpha 3)))))","(+.f64 (*.f64 (+.f64 1 beta) (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha)) (fma.f64 beta (/.f64 8 (pow.f64 alpha 3)) (fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 alpha 3) 10)))))","(fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (+.f64 (*.f64 (+.f64 1 beta) (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha)) (*.f64 (/.f64 beta (*.f64 alpha alpha)) (+.f64 (/.f64 8 alpha) (/.f64 (*.f64 beta 10) alpha)))))","(*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)))","(*.f64 2 (pow.f64 (/.f64 beta alpha) 3))","(+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))))","(fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 (*.f64 10 (*.f64 beta beta)) (pow.f64 alpha 3)))","(fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 (*.f64 (*.f64 10 beta) beta) (pow.f64 alpha 3)))","(fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 alpha 3) 10)))","(fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (*.f64 (/.f64 10 (pow.f64 alpha 3)) (*.f64 beta beta)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3)))))) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3)))))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 (*.f64 10 (*.f64 beta beta)) (pow.f64 alpha 3))))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 (*.f64 (*.f64 10 beta) beta) (pow.f64 alpha 3))))","(fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (fma.f64 beta (+.f64 (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 alpha 3) 10))))","(fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (fma.f64 beta (+.f64 (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (*.f64 (/.f64 10 (pow.f64 alpha 3)) (*.f64 beta beta))))","(+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (+.f64 (*.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3))) (+.f64 (*.f64 -1 (*.f64 beta (-.f64 (*.f64 -2 (/.f64 (+.f64 1 (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))) alpha)) (*.f64 8 (/.f64 1 (pow.f64 alpha 3)))))) (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))))))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 (*.f64 10 (*.f64 beta beta)) (pow.f64 alpha 3)))))","(fma.f64 beta (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (/.f64 8 (pow.f64 alpha 3))) (fma.f64 2 (/.f64 (+.f64 1 (/.f64 4 (*.f64 alpha alpha))) alpha) (fma.f64 2 (/.f64 (pow.f64 beta 3) (pow.f64 alpha 3)) (/.f64 (*.f64 (*.f64 10 beta) beta) (pow.f64 alpha 3)))))","(+.f64 (*.f64 (+.f64 1 beta) (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha)) (fma.f64 beta (/.f64 8 (pow.f64 alpha 3)) (fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (/.f64 (*.f64 beta beta) (/.f64 (pow.f64 alpha 3) 10)))))","(fma.f64 2 (pow.f64 (/.f64 beta alpha) 3) (+.f64 (*.f64 (+.f64 1 beta) (/.f64 (+.f64 2 (/.f64 8 (*.f64 alpha alpha))) alpha)) (*.f64 (/.f64 beta (*.f64 alpha alpha)) (+.f64 (/.f64 8 alpha) (/.f64 (*.f64 beta 10) alpha)))))","(/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))","(/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2)))","(/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2)))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (fma.f64 2 (/.f64 beta alpha) (/.f64 2 alpha)))","(fma.f64 2 (+.f64 (/.f64 1 alpha) (/.f64 beta alpha)) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))))","(fma.f64 2 (/.f64 beta alpha) (fma.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2) (/.f64 2 alpha)))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (fma.f64 2 (/.f64 beta alpha) (/.f64 2 alpha)))","(fma.f64 2 (+.f64 (/.f64 1 alpha) (/.f64 beta alpha)) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))))","(fma.f64 2 (/.f64 beta alpha) (fma.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2) (/.f64 2 alpha)))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (fma.f64 2 (/.f64 beta alpha) (/.f64 2 alpha)))","(fma.f64 2 (+.f64 (/.f64 1 alpha) (/.f64 beta alpha)) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))))","(fma.f64 2 (/.f64 beta alpha) (fma.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2) (/.f64 2 alpha)))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(/.f64 (fma.f64 2 beta 2) alpha)","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (fma.f64 2 (/.f64 beta alpha) (/.f64 2 alpha)))","(fma.f64 2 (+.f64 (/.f64 1 alpha) (/.f64 beta alpha)) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))))","(fma.f64 2 (/.f64 beta alpha) (fma.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2) (/.f64 2 alpha)))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (fma.f64 2 (/.f64 beta alpha) (/.f64 2 alpha)))","(fma.f64 2 (+.f64 (/.f64 1 alpha) (/.f64 beta alpha)) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))))","(fma.f64 2 (/.f64 beta alpha) (fma.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2) (/.f64 2 alpha)))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (fma.f64 2 (/.f64 beta alpha) (/.f64 2 alpha)))","(fma.f64 2 (+.f64 (/.f64 1 alpha) (/.f64 beta alpha)) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))))","(fma.f64 2 (/.f64 beta alpha) (fma.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2) (/.f64 2 alpha)))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(/.f64 (fma.f64 2 beta 2) alpha)","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (fma.f64 2 (/.f64 beta alpha) (/.f64 2 alpha)))","(fma.f64 2 (+.f64 (/.f64 1 alpha) (/.f64 beta alpha)) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))))","(fma.f64 2 (/.f64 beta alpha) (fma.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2) (/.f64 2 alpha)))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (fma.f64 2 (/.f64 beta alpha) (/.f64 2 alpha)))","(fma.f64 2 (+.f64 (/.f64 1 alpha) (/.f64 beta alpha)) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))))","(fma.f64 2 (/.f64 beta alpha) (fma.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2) (/.f64 2 alpha)))","(+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (/.f64 (+.f64 2 (*.f64 2 beta)) (/.f64 (pow.f64 alpha 3) (pow.f64 (+.f64 2 beta) 2))) (fma.f64 2 (/.f64 beta alpha) (/.f64 2 alpha)))","(fma.f64 2 (+.f64 (/.f64 1 alpha) (/.f64 beta alpha)) (/.f64 (pow.f64 (+.f64 2 beta) 2) (/.f64 (pow.f64 alpha 3) (fma.f64 2 beta 2))))","(fma.f64 2 (/.f64 beta alpha) (fma.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 alpha 3)) (pow.f64 (+.f64 2 beta) 2) (/.f64 2 alpha)))"]],"stop":[["node limit",1]],"time":58.744140625,"type":"simplify"},{"compiler":[[8455,5800]],"time":83.77294921875,"type":"eval"},{"alts":[["(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","done",15.686341442534967],["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","done",46.38825741486265],["(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)","done",15.65280063692237]],"compiler":[[16,12],[38,25],[16,12]],"count":[[211,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[208,0],"picked":[1,1]}],"min-error":[0.030344470018659867],"time":36.923095703125,"type":"prune"},{"accuracy":[0.03163293782406456],"baseline":[15.652698386118857],"branch":[["alpha",3.5271151266143614,2],["beta",14.486640086190123,3],["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)",0.03163293782406456,2],["(+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1)",0.03163293782406456,2],["(/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))",0.03163293782406456,2]],"compiler":[[3,2],[3,2],[15,11],[13,9],[11,7],[141,87]],"count":[[7,2]],"inputs":[["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","(log.f64 (exp.f64 (fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 beta alpha))) -1/2 1/2)))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 alpha alpha)) (+.f64 2 beta))))","(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)","(fma.f64 (/.f64 (-.f64 beta alpha) (-.f64 (-.f64 -2 beta) alpha)) -1/2 1/2)","(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)"]],"link":["."],"name":["Octave 3.8, jcobi/1"],"oracle":[62.020843211717924],"outputs":[["(fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2))))","(fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2)"]],"time":34.677978515625,"times":[["alpha",7.712158203125],["beta",11.05908203125],["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)",3.5419921875],["(+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1)",4.630126953125],["(/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))",5.243896484375]],"type":"regimes"},{"bstep":[[-0.999999996022413,-0.9982759268895075,0.092041015625]],"compiler":[[9,8],[11,7]],"method":["left-value"],"time":0.204833984375,"type":"bsearch"},{"compiler":[[64,41]],"egraph":[[5,71,91,0.00042124899999999995],[4,70,91,0.00034695799999999997],[3,66,91,0.000270708],[2,58,91,0.000195583],[1,49,91,0.000125125],[0,35,91,5.9958e-5]],"inputs":[["(if (<=.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) -8998192055486251/9007199254740992) (fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2)))) (fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) -8998192055486251/9007199254740992) (fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 2 beta) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 (+.f64 beta beta) 2) alpha)) (*.f64 -1/2 (*.f64 (/.f64 (+.f64 2 beta) (*.f64 alpha alpha)) (+.f64 (+.f64 beta beta) 2)))) (fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2))","(if (<=.f64 (/.f64 (-.f64 beta alpha) (+.f64 2 (+.f64 beta alpha))) -8998192055486251/9007199254740992) (fma.f64 1/2 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 beta 2) 2) (*.f64 alpha alpha)) 1) (/.f64 (+.f64 2 (+.f64 beta beta)) alpha)) (*.f64 -1/2 (*.f64 (+.f64 2 (+.f64 beta beta)) (/.f64 (+.f64 beta 2) (*.f64 alpha alpha))))) (fma.f64 (pow.f64 (/.f64 (-.f64 -2 (+.f64 beta alpha)) (-.f64 beta alpha)) -1) -1/2 1/2))"]],"stop":[["done",1],["saturated",1]],"time":9.9091796875,"type":"simplify"},{"time":0.02099609375,"type":"soundness"},{"compiler":[[64,41]],"remove-preprocessing":[[]],"time":19.643798828125,"type":"end"}]