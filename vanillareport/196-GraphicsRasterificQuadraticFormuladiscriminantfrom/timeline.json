[{"compiler":[[13,9]],"method":["search"],"sampling":[[12,0.3705504210233812,0.3783514825186103,0.2510980964580085],[11,0.3120424598091631,0.448561035975672,0.2393965042151649],[10,0.2496339678473305,0.5148700586851191,0.23549597346755036],[9,0.18722547588549787,0.6396870426087844,0.17308748150571773],[8,0.12481698392366525,0.7176976575610752,0.15748535851525958],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":80.47900390625,"type":"analyze"},{"outcomes":[["body",256,"invalid",48.4462890625,1217],["body",256,"valid",330.44970703125,8256]],"time":387.56591796875,"type":"sample"},{"compiler":[[12,8]],"egraph":[[1,3,3,8.042e-6],[0,3,3,7.042e-6],[11,2179,44,0.027651374],[10,2179,44,0.022956916],[9,2161,44,0.019318458],[8,1753,44,0.015614833000000002],[7,1134,44,0.010930333],[6,884,44,0.006934958],[5,642,44,0.004533499],[4,456,44,0.002819874],[3,296,44,0.001662082],[2,133,44,0.000821874],[1,55,44,0.000310541],[0,19,52,9.5583e-5]],"inputs":[["0","1","2"],["(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))","(-.f64 (*.f64 y y) (*.f64 (*.f64 x 4) z))","(-.f64 (*.f64 z z) (*.f64 (*.f64 y 4) x))","(-.f64 (*.f64 x x) (*.f64 (*.f64 z 4) y))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","1"],["(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))","(-.f64 (*.f64 x x) (*.f64 y (*.f64 4 z)))","(fma.f64 x x (*.f64 y (*.f64 z -4)))","(fma.f64 x x (*.f64 z (*.f64 y -4)))","(-.f64 (*.f64 y y) (*.f64 (*.f64 x 4) z))","(-.f64 (*.f64 y y) (*.f64 x (*.f64 4 z)))","(fma.f64 y y (*.f64 z (*.f64 x -4)))","(fma.f64 x (*.f64 z -4) (*.f64 y y))","(fma.f64 y y (*.f64 -4 (*.f64 x z)))","(-.f64 (*.f64 z z) (*.f64 (*.f64 y 4) x))","(-.f64 (*.f64 z z) (*.f64 y (*.f64 x 4)))","(fma.f64 z z (*.f64 y (*.f64 x -4)))","(fma.f64 x (*.f64 y -4) (*.f64 z z))","(-.f64 (*.f64 x x) (*.f64 (*.f64 z 4) y))","(-.f64 (*.f64 x x) (*.f64 y (*.f64 4 z)))","(fma.f64 x x (*.f64 y (*.f64 z -4)))","(fma.f64 x x (*.f64 z (*.f64 y -4)))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort y z)"]],"time":52.43310546875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[11,948,11,0.012346874999999998],[10,936,11,0.010411166999999999],[9,836,11,0.00840525],[8,588,11,0.006260708],[7,442,11,0.004286375],[6,343,11,0.0028854580000000005],[5,236,11,0.0018930000000000002],[4,164,11,0.001150208],[3,107,11,0.000690916],[2,50,11,0.00035020799999999996],[1,19,11,0.0001485],[0,9,13,4.775e-5]],"inputs":[["(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))","(fma.f64 x x (*.f64 z (*.f64 y -4)))","(fma.f64 x x (*.f64 y (*.f64 z -4)))"]],"stop":[["saturated",1]],"time":22.837890625,"type":"simplify"},{"compiler":[[20,12]],"time":0.363037109375,"type":"eval"},{"alts":[["(fma.f64 x x (*.f64 y (*.f64 z -4)))","next",0.00390625]],"compiler":[[11,7],[11,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.00390625],"time":0.866943359375,"type":"prune"},{"compiler":[[23,13]],"locations":[["(fma.f64 x x (*.f64 y (*.f64 z -4)))",0.00390625,true]],"time":5.47509765625,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 x x (*.f64 y (*.f64 z -4)))","z","-inf",0.508056640625],["(fma.f64 x x (*.f64 y (*.f64 z -4)))","z","inf",0.348876953125],["(fma.f64 x x (*.f64 y (*.f64 z -4)))","z","0",0.31298828125],["(fma.f64 x x (*.f64 y (*.f64 z -4)))","y","-inf",0.257080078125],["(fma.f64 x x (*.f64 y (*.f64 z -4)))","y","inf",0.3388671875],["(fma.f64 x x (*.f64 y (*.f64 z -4)))","y","0",0.51611328125],["(fma.f64 x x (*.f64 y (*.f64 z -4)))","x","-inf",0.387939453125],["(fma.f64 x x (*.f64 y (*.f64 z -4)))","x","inf",0.450927734375],["(fma.f64 x x (*.f64 y (*.f64 z -4)))","x","0",0.56201171875]],"time":3.803955078125,"type":"series"},{"count":[[1,21]],"egraph":[[2,1856,11,0.018430583],[1,160,11,0.0025634580000000002],[0,8,11,0.000209916]],"inputs":[["(fma.f64 x x (*.f64 y (*.f64 z -4)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 z -4)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (*.f64 y (*.f64 z -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x x) 1) (*.f64 y (*.f64 z -4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 x x (*.f64 y (*.f64 z -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x x (*.f64 y (*.f64 z -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x x (*.f64 y (*.f64 z -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x x (*.f64 y (*.f64 z -4)))) (pow.f64 (cbrt.f64 (fma.f64 x x (*.f64 y (*.f64 z -4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x x (*.f64 y (*.f64 z -4)))) 2) (cbrt.f64 (fma.f64 x x (*.f64 y (*.f64 z -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 x (sqrt.f64 (*.f64 y (*.f64 z -4)))) (hypot.f64 x (sqrt.f64 (*.f64 y (*.f64 z -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x x) 3) (pow.f64 (*.f64 y (*.f64 z -4)) 3)) (+.f64 (*.f64 (*.f64 x x) (*.f64 x x)) (-.f64 (pow.f64 (*.f64 y (*.f64 z -4)) 2) (*.f64 (*.f64 x x) (*.f64 y (*.f64 z -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x x) (*.f64 x x)) (pow.f64 (*.f64 y (*.f64 z -4)) 2)) (-.f64 (*.f64 x x) (*.f64 y (*.f64 z -4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x x (*.f64 y (*.f64 z -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (*.f64 y (*.f64 z -4))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x x (*.f64 y (*.f64 z -4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 x (sqrt.f64 (*.f64 y (*.f64 z -4)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x x (*.f64 y (*.f64 z -4))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x x (*.f64 y (*.f64 z -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y (*.f64 z -4))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x x (*.f64 y (*.f64 z -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x x (*.f64 y (*.f64 z -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x x (*.f64 y (*.f64 z -4)))))))))"]],"rules":[["egg-rr",21]],"stop":[["node limit",1]],"time":36.780029296875,"type":"rewrite"},{"count":[[57,27]],"egraph":[[22,7304,348,0.111426959],[21,6363,348,0.096716626],[20,6329,348,0.083016001],[19,6257,348,0.073255001],[18,5979,348,0.064878376],[17,5687,348,0.057265043],[16,5295,348,0.050221418000000004],[15,4460,348,0.043190168],[14,3778,348,0.035565168],[13,3212,348,0.028875335000000002],[12,2729,348,0.023229085000000003],[11,2336,348,0.018345418000000002],[10,2041,348,0.01418696],[9,1833,348,0.01087746],[8,1649,348,0.008141126],[7,1465,348,0.0058785420000000005],[6,597,348,0.003569625],[5,178,348,0.001753292],[4,85,348,0.0008786670000000001],[3,56,348,0.000532584],[2,39,348,0.000340375],[1,20,348,0.00019575000000000001],[0,10,402,8.3125e-5]],"inputs":[["(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -4 (*.f64 y z))","(*.f64 (*.f64 -4 y) z)","(*.f64 z (*.f64 -4 y))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(*.f64 -4 (*.f64 y z))","(*.f64 (*.f64 -4 y) z)","(*.f64 z (*.f64 -4 y))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(*.f64 -4 (*.f64 y z))","(*.f64 (*.f64 -4 y) z)","(*.f64 z (*.f64 -4 y))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(*.f64 -4 (*.f64 y z))","(*.f64 (*.f64 -4 y) z)","(*.f64 z (*.f64 -4 y))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(*.f64 -4 (*.f64 y z))","(*.f64 (*.f64 -4 y) z)","(*.f64 z (*.f64 -4 y))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (*.f64 (*.f64 -4 y) z) (*.f64 x x))","(fma.f64 -4 (*.f64 y z) (*.f64 x x))","(fma.f64 z (*.f64 -4 y) (*.f64 x x))"]],"stop":[["node limit",1]],"time":136.72900390625,"type":"simplify"},{"compiler":[[325,189]],"time":4.114013671875,"type":"eval"},{"alts":[["(fma.f64 z (*.f64 -4 y) (*.f64 x x))","next",0]],"compiler":[[11,7],[11,7]],"count":[[28,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[27,1],"picked":[1,0]}],"min-error":[0],"time":4.23388671875,"type":"prune"},{"compiler":[[21,10]],"time":4.8662109375,"type":"localize"},{"compiler":[[3,3]],"time":0.08984375,"type":"eval"},{"alts":[["(fma.f64 z (*.f64 -4 y) (*.f64 x x))","done",0]],"compiler":[[11,7]],"count":[[1,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[0],"time":0.5029296875,"type":"prune"},{"accuracy":[0],"baseline":[0.0],"branch":[["x",0,1],["y",0,1],["z",0,1],["(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))",0,1],["(*.f64 x x)",0,1],["(*.f64 (*.f64 y 4) z)",0,1],["(*.f64 y 4)",0,1]],"compiler":[[4,3],[4,3],[4,3],[12,8],[6,4],[8,6],[6,5],[28,15]],"count":[[3,1]],"inputs":[["(fma.f64 z (*.f64 -4 y) (*.f64 x x))","(fma.f64 x x (*.f64 y (*.f64 z -4)))","(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))"]],"link":["."],"name":["Graphics.Rasterific.QuadraticFormula:discriminant from Rasterific-0.6.1"],"oracle":[0.00390625],"outputs":[["(fma.f64 z (*.f64 -4 y) (*.f64 x x))"]],"time":21.43408203125,"times":[["x",3.028076171875],["y",2.865966796875],["z",2.920166015625],["(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))",3.23486328125],["(*.f64 x x)",2.5498046875],["(*.f64 (*.f64 y 4) z)",2.98193359375],["(*.f64 y 4)",3.025146484375]],"type":"regimes"},{"compiler":[[11,7]],"egraph":[[1,9,11,2.8875e-5],[0,8,11,1.775e-5]],"inputs":[["(fma.f64 z (*.f64 -4 y) (*.f64 x x))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 z (*.f64 -4 y) (*.f64 x x))"]],"stop":[["done",1],["saturated",1]],"time":8.1650390625,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[11,7],[11,7],[11,7]],"remove-preprocessing":[["(sort y z)"]],"time":9.154052734375,"type":"end"}]