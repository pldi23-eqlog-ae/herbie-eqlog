[{"compiler":[[51,37]],"method":["search"],"sampling":[[12,1.3338401913477714e-5,1.9054859876396735e-6,0.9999847561120988],[11,1.3338401913477714e-5,1.9054859876396735e-6,0.9999847561120988],[10,1.3338401913477714e-5,1.9054859876396735e-6,0.9999847561120988],[9,1.1432915925838041e-5,3.810971975279347e-6,0.9999847561120988],[8,1.1432915925838041e-5,3.810971975279347e-6,0.9999847561120988],[7,1.1432915925838041e-5,3.810971975279347e-6,0.9999847561120988],[6,7.621943950558694e-6,7.621943950558694e-6,0.9999847561120989],[5,7.621943950558694e-6,7.621943950558694e-6,0.9999847561120989],[4,7.621943950558694e-6,7.621943950558694e-6,0.9999847561120989],[3,0.0,1.5243887901117388e-5,0.9999847561120989],[2,0.0,1.5243887901117388e-5,0.9999847561120989],[1,0.0,1.5243887901117388e-5,0.9999847561120989],[0,0.0,1.5243887901117388e-5,0.9999847561120989]],"time":59.85498046875,"type":"analyze"},{"outcomes":[["body",256,"valid",803.787841796875,8256]],"time":811.197021484375,"type":"sample"},{"compiler":[[28,20]],"egraph":[[0,3,3,2.167e-6],[4,6968,132,0.026788749],[3,2106,132,0.013368999000000001],[2,449,140,0.0033561660000000003],[1,127,140,0.000767541],[0,43,156,0.000195166]],"inputs":[["0","1","2"],["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","(*.f64 (sin.f64 (*.f64 (*.f64 ux 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 uy) (*.f64 uy maxCos)) (+.f64 (-.f64 1 uy) (*.f64 uy maxCos))))))","(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux)) (+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux))))))","(*.f64 (sin.f64 (*.f64 (*.f64 maxCos 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux uy)) (+.f64 (-.f64 1 ux) (*.f64 ux uy))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (fma.f64 ux maxCos (-.f64 1 ux))))))","(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (fma.f64 (-.f64 (fma.f64 ux maxCos 1) ux) (neg.f64 (-.f64 (fma.f64 ux maxCos 1) ux)) 1)))","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (-.f64 (fma.f64 ux maxCos 1) ux) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (sin.f64 (*.f64 (*.f64 ux 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 uy) (*.f64 uy maxCos)) (+.f64 (-.f64 1 uy) (*.f64 uy maxCos))))))","(*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 2 ux))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 uy) (*.f64 uy maxCos)) (+.f64 (-.f64 1 uy) (*.f64 uy maxCos))))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 ux (PI.f64)))) (sqrt.f64 (-.f64 1 (*.f64 (fma.f64 uy maxCos (-.f64 1 uy)) (fma.f64 uy maxCos (-.f64 1 uy))))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (PI.f64) ux))) (sqrt.f64 (-.f64 1 (*.f64 (-.f64 (fma.f64 uy maxCos 1) uy) (-.f64 (fma.f64 uy maxCos 1) uy)))))","(*.f64 (sin.f64 (*.f64 ux (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (-.f64 (fma.f64 uy maxCos 1) uy) (-.f64 uy (fma.f64 uy maxCos 1)) 1)))","(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux)) (+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux))))))","(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (*.f64 ux maxCos) (-.f64 1 maxCos)) (+.f64 (*.f64 ux maxCos) (-.f64 1 maxCos))))))","(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (fma.f64 ux maxCos (-.f64 1 maxCos)) (fma.f64 ux maxCos (-.f64 1 maxCos))))))","(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (fma.f64 (-.f64 (fma.f64 ux maxCos 1) maxCos) (+.f64 -1 (*.f64 (-.f64 1 ux) maxCos)) 1)))","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (-.f64 (fma.f64 ux maxCos 1) maxCos) (-.f64 maxCos (fma.f64 ux maxCos 1)) 1)))","(*.f64 (sin.f64 (*.f64 (*.f64 maxCos 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux uy)) (+.f64 (-.f64 1 ux) (*.f64 ux uy))))))","(*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 2 maxCos))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 uy ux)) (+.f64 (-.f64 1 ux) (*.f64 uy ux))))))","(*.f64 (sin.f64 (*.f64 maxCos (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 1 (*.f64 (fma.f64 uy ux (-.f64 1 ux)) (fma.f64 uy ux (-.f64 1 ux))))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (PI.f64) maxCos))) (sqrt.f64 (-.f64 1 (*.f64 (-.f64 (fma.f64 uy ux 1) ux) (-.f64 (fma.f64 uy ux 1) ux)))))","(*.f64 (sin.f64 (*.f64 maxCos (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 uy ux (-.f64 1 ux)) (-.f64 ux (fma.f64 uy ux 1)) 1)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":51.89599609375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[4,3167,33,0.017680292],[3,572,33,0.005004000000000001],[2,128,35,0.00100375],[1,41,35,0.000272417],[0,17,39,8.6e-5]],"inputs":[["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (fma.f64 ux maxCos (-.f64 1 ux))))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 1 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (fma.f64 ux maxCos (-.f64 1 ux))))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (-.f64 (fma.f64 ux maxCos 1) ux) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))"]],"stop":[["node limit",1]],"time":29.024169921875,"type":"simplify"},{"compiler":[[50,35]],"time":0.69189453125,"type":"eval"},{"alts":[["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","next",12.108595554258091],["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","fresh",12.152283556089811]],"compiler":[[25,19],[28,20],[25,19],[28,20]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[11.764019166168174],"time":1.875,"type":"prune"},{"compiler":[[93,60]],"locations":[["(sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))",0.27145255115753775,true],["(*.f64 uy (*.f64 2 (PI.f64)))",0.27734375,true],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))",0.3203125,true],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)",12.92514240433941,true]],"time":24.72998046875,"type":"localize"},{"count":[[4,72]],"series":[["(sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))","uy","-inf",0.169189453125],["(sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))","uy","inf",0.14697265625],["(sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))","uy","0",0.260009765625],["(*.f64 uy (*.f64 2 (PI.f64)))","uy","-inf",0.236083984375],["(*.f64 uy (*.f64 2 (PI.f64)))","uy","inf",0.39697265625],["(*.f64 uy (*.f64 2 (PI.f64)))","uy","0",0.40283203125],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","maxCos","-inf",1.028076171875],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","maxCos","inf",1.15087890625],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","maxCos","0",1.39501953125],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","ux","-inf",1.18994140625],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","ux","inf",1.030029296875],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","ux","0",1.763916015625],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","uy","-inf",0.428955078125],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","uy","inf",0.8388671875],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","uy","0",1.2021484375],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","maxCos","-inf",0.47802734375],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","maxCos","inf",0.709228515625],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","maxCos","0",0.47412109375],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","ux","-inf",0.76611328125],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","ux","inf",0.52099609375],["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","ux","0",0.779052734375]],"time":16.236083984375,"type":"series"},{"count":[[4,78]],"egraph":[[2,4582,70,0.033823708],[1,358,70,0.006427833],[0,17,70,0.00043625]],"inputs":[["(fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 uy (*.f64 2 (PI.f64)))","(sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) (pow.f64 (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) 2) (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 1/4) (*.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 1/4) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 1/4)) (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 3) 1) (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (-.f64 1 (*.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) -1) (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) (pow.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1) 3/2) (pow.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 uy (*.f64 2 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 uy (*.f64 2 (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 uy (*.f64 2 (PI.f64))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 uy (*.f64 2 (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 2 (PI.f64)) 3) (pow.f64 uy 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 uy (*.f64 2 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 uy (*.f64 2 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (sin.f64 (*.f64 (PI.f64) uy)) (cos.f64 (*.f64 (PI.f64) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2) (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) (sqrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 1))))))"]],"rules":[["egg-rr",20],["egg-rr",15],["egg-rr",15],["egg-rr",28]],"stop":[["node limit",1]],"time":61.495849609375,"type":"rewrite"},{"count":[[150,143]],"egraph":[[2,2479,2528,0.017191875000000002],[1,721,2849,0.0047419590000000005],[0,213,3126,0.001070334]],"inputs":[["(*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))","(+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))","(+.f64 1 (+.f64 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))) (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))","(+.f64 1 (+.f64 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))) (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (+.f64 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))) (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(+.f64 (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) maxCos) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) maxCos) (+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) maxCos) (+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(+.f64 (*.f64 -1 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 (-.f64 ux 1) ux)) (*.f64 ux (+.f64 (*.f64 -1 ux) 1))))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (+.f64 (*.f64 -1 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 (-.f64 ux 1) ux)) (*.f64 ux (+.f64 (*.f64 -1 ux) 1))))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (+.f64 (*.f64 -1 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 (-.f64 ux 1) ux)) (*.f64 ux (+.f64 (*.f64 -1 ux) 1))))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1))))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1))))))","(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))) (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))) (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux)))))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))) (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (pow.f64 ux 2)))))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (pow.f64 ux 2)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 maxCos (*.f64 (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 maxCos (*.f64 (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (pow.f64 maxCos 2) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))))) 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 maxCos (*.f64 (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))) 3))) (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)))) 2)) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (pow.f64 maxCos 2) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))))) 2)))))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos))","(*.f64 ux (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos))","(*.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)))","(*.f64 ux (*.f64 2 (-.f64 1 maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos)))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (+.f64 maxCos -2))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos)))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (+.f64 maxCos -2))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos)))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (+.f64 maxCos -2))))","(*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2)))","(*.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)))","(*.f64 (+.f64 -1 maxCos) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))))","(*.f64 (*.f64 ux ux) (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos)))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (+.f64 maxCos -2))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos)))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (+.f64 maxCos -2))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (-.f64 1 maxCos) (pow.f64 ux 2))) (*.f64 ux (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos)))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (+.f64 maxCos -2))))","(*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos))))","(*.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)))","(*.f64 (+.f64 -1 maxCos) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))))","(*.f64 (*.f64 ux ux) (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos)))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (+.f64 maxCos -2))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos)))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (+.f64 maxCos -2))))","(+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))","(fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 ux (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos)))","(fma.f64 ux (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (*.f64 (+.f64 -1 maxCos) (*.f64 ux (*.f64 ux (-.f64 1 maxCos)))))","(*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (+.f64 maxCos -2))))","(+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))","(+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1)))","(fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)","(+.f64 1 (+.f64 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))) (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))","(+.f64 1 (fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (*.f64 (+.f64 ux -1) (-.f64 1 ux))))","(+.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 2 (*.f64 (+.f64 ux -1) (*.f64 ux maxCos))))","(+.f64 1 (+.f64 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))) (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (fma.f64 (+.f64 ux -1) (fma.f64 -1 ux 1) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))))","(fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))","(-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 maxCos (+.f64 (*.f64 (*.f64 ux ux) maxCos) (*.f64 ux (*.f64 2 (-.f64 1 ux))))))","(+.f64 1 (+.f64 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux))) (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (fma.f64 (+.f64 ux -1) (fma.f64 -1 ux 1) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))))","(fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))","(-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 maxCos (+.f64 (*.f64 (*.f64 ux ux) maxCos) (*.f64 ux (*.f64 2 (-.f64 1 ux))))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))","(*.f64 (*.f64 ux ux) (*.f64 (neg.f64 maxCos) maxCos))","(*.f64 (neg.f64 ux) (*.f64 ux (*.f64 maxCos maxCos)))","(+.f64 (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) maxCos) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) maxCos (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))","(-.f64 (*.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux))) (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))","(*.f64 maxCos (-.f64 (*.f64 (+.f64 ux -1) (-.f64 ux (neg.f64 ux))) (*.f64 (*.f64 ux ux) maxCos)))","(+.f64 (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) maxCos) (+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (fma.f64 (+.f64 ux -1) (fma.f64 -1 ux 1) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))))","(fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))","(-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 maxCos (+.f64 (*.f64 (*.f64 ux ux) maxCos) (*.f64 ux (*.f64 2 (-.f64 1 ux))))))","(+.f64 (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) maxCos) (+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (fma.f64 (+.f64 ux -1) (fma.f64 -1 ux 1) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))))","(fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))","(-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 maxCos (+.f64 (*.f64 (*.f64 ux ux) maxCos) (*.f64 ux (*.f64 2 (-.f64 1 ux))))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))","(*.f64 (*.f64 ux ux) (*.f64 (neg.f64 maxCos) maxCos))","(*.f64 (neg.f64 ux) (*.f64 ux (*.f64 maxCos maxCos)))","(+.f64 (*.f64 -1 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 (-.f64 ux 1) ux)) (*.f64 ux (+.f64 (*.f64 -1 ux) 1))))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) maxCos (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))","(-.f64 (*.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux))) (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos)))","(*.f64 maxCos (-.f64 (*.f64 (+.f64 ux -1) (-.f64 ux (neg.f64 ux))) (*.f64 (*.f64 ux ux) maxCos)))","(+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (+.f64 (*.f64 -1 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 (-.f64 ux 1) ux)) (*.f64 ux (+.f64 (*.f64 -1 ux) 1))))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (fma.f64 (+.f64 ux -1) (fma.f64 -1 ux 1) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))))","(fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))","(-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 maxCos (+.f64 (*.f64 (*.f64 ux ux) maxCos) (*.f64 ux (*.f64 2 (-.f64 1 ux))))))","(+.f64 1 (+.f64 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)) (+.f64 (*.f64 -1 (*.f64 maxCos (+.f64 (*.f64 -1 (*.f64 (-.f64 ux 1) ux)) (*.f64 ux (+.f64 (*.f64 -1 ux) 1))))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 maxCos (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (fma.f64 (+.f64 ux -1) (fma.f64 -1 ux 1) (neg.f64 (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))))","(fma.f64 maxCos (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 (*.f64 ux ux) (*.f64 maxCos maxCos))))","(-.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) (*.f64 maxCos (+.f64 (*.f64 (*.f64 ux ux) maxCos) (*.f64 ux (*.f64 2 (-.f64 1 ux))))))","(*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1))))","(*.f64 2 (*.f64 uy (*.f64 (PI.f64) (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)))))","(*.f64 2 (*.f64 uy (*.f64 (PI.f64) (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)))))","(*.f64 (*.f64 uy (PI.f64)) (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) 2))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))))","(fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 uy (*.f64 (PI.f64) (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (fma.f64 2 (*.f64 uy (PI.f64)) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (fma.f64 2 (*.f64 uy (PI.f64)) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3)))))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1))))))","(fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (fma.f64 4/15 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 2 (*.f64 uy (*.f64 (PI.f64) (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)))))))","(+.f64 (*.f64 2 (*.f64 uy (*.f64 (PI.f64) (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1))))) (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))))))","(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))))))","(fma.f64 -8/315 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (fma.f64 4/15 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 2 (*.f64 uy (*.f64 (PI.f64) (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1))))))))","(+.f64 (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))))) (*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (+.f64 (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (+.f64 (+.f64 (*.f64 uy (*.f64 (PI.f64) 2)) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 (pow.f64 (PI.f64) 7) (*.f64 -8/315 (pow.f64 uy 7))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (+.f64 1 (*.f64 ux maxCos))) (+.f64 1 (*.f64 ux (+.f64 maxCos -1))) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 ux (fma.f64 ux maxCos 1)) (fma.f64 ux (+.f64 -1 maxCos) 1) 1)) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))","(*.f64 ux (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))) (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 1/2 (*.f64 (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))) (*.f64 1/2 (*.f64 (*.f64 2 (-.f64 1 maxCos)) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))) (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux)))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (*.f64 -1/8 (*.f64 (/.f64 (pow.f64 (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos) 2) (/.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 1/2 (*.f64 (*.f64 (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))) (*.f64 -1/8 (*.f64 (*.f64 (/.f64 (pow.f64 (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3))))))))","(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))) (*.f64 1/2 (*.f64 (*.f64 2 (-.f64 1 maxCos)) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 -1 maxCos) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (*.f64 (/.f64 (pow.f64 (*.f64 2 (-.f64 1 maxCos)) 2) ux) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) -1/8)))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 1 maxCos) (-.f64 maxCos 1))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (-.f64 1 maxCos)))) (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 1 (*.f64 -1 (-.f64 maxCos 1))) maxCos) 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (pow.f64 ux 2)))))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos) 2) (/.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (*.f64 1/16 (*.f64 (/.f64 (pow.f64 (-.f64 (+.f64 1 (neg.f64 (+.f64 maxCos -1))) maxCos) 3) (/.f64 (*.f64 ux ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))))))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 1/2 (*.f64 (*.f64 (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))) (fma.f64 -1/8 (*.f64 (*.f64 (/.f64 (pow.f64 (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (*.f64 1/16 (*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (/.f64 (pow.f64 (+.f64 (-.f64 1 maxCos) (-.f64 1 maxCos)) 3) ux)) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 5) (pow.f64 (-.f64 1 maxCos) 5)))))))))","(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))) (*.f64 1/2 (*.f64 (*.f64 2 (-.f64 1 maxCos)) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))))) (fma.f64 1/16 (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (/.f64 (*.f64 ux ux) (pow.f64 (*.f64 2 (-.f64 1 maxCos)) 3))) (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 -1 maxCos) 5)) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 -1 maxCos) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (*.f64 (/.f64 (pow.f64 (*.f64 2 (-.f64 1 maxCos)) 2) ux) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) -1/8))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(*.f64 (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))) (neg.f64 (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(*.f64 (neg.f64 ux) (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 maxCos (-.f64 (neg.f64 (-.f64 1 maxCos)) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(-.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))) (*.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (-.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 maxCos (-.f64 (neg.f64 (-.f64 1 maxCos)) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 maxCos (-.f64 (neg.f64 (-.f64 1 maxCos)) 1)) 2) (/.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))) (*.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (-.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))))","(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (-.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 -1 maxCos) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) ux) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2)) 1/8)))","(+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (pow.f64 ux 2)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (/.f64 (pow.f64 (+.f64 maxCos (-.f64 (neg.f64 (-.f64 1 maxCos)) 1)) 3) (/.f64 (*.f64 ux ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 maxCos (-.f64 (neg.f64 (-.f64 1 maxCos)) 1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 maxCos (-.f64 (neg.f64 (-.f64 1 maxCos)) 1)) 2) (/.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (pow.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) 3) (*.f64 ux ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))) (*.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (-.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 -1 maxCos) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 -1 (+.f64 maxCos (+.f64 -1 maxCos))) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))))))","(fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 -1 maxCos) 5)) (pow.f64 (-.f64 1 maxCos) 5))) (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (*.f64 ux ux)) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3))) (+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (-.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)))))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 -1 maxCos) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) ux) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2)) 1/8))))","(*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 maxCos (*.f64 (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))) (*.f64 maxCos (*.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))))","(fma.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)) (*.f64 1/2 (*.f64 maxCos (*.f64 (*.f64 (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (+.f64 (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))) (*.f64 2 (*.f64 (+.f64 ux -1) (*.f64 ux maxCos))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 maxCos (*.f64 (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (pow.f64 maxCos 2) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))))) 2))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))) (*.f64 maxCos (*.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (fma.f64 (sqrt.f64 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))) (*.f64 (*.f64 maxCos maxCos) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))))) 2))))))))","(fma.f64 1/2 (*.f64 maxCos (*.f64 (*.f64 (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))) (fma.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))) 2)) (*.f64 maxCos (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))))","(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))) (+.f64 (*.f64 (*.f64 2 (*.f64 (+.f64 ux -1) (*.f64 ux maxCos))) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (*.f64 (+.f64 ux -1) (-.f64 ux (neg.f64 ux))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))) 2)) (*.f64 (*.f64 maxCos maxCos) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 maxCos (*.f64 (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))) 3))) (*.f64 (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))) (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (+.f64 (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1))) (*.f64 (-.f64 ux 1) ux)))) 2)) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (*.f64 (pow.f64 maxCos 2) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (-.f64 ux 1) (+.f64 (*.f64 -1 ux) 1))))) (+.f64 (*.f64 (-.f64 ux 1) ux) (*.f64 -1 (*.f64 ux (+.f64 (*.f64 -1 ux) 1)))))) 2)))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))) (*.f64 maxCos (*.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))) 3))) (*.f64 (*.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))))) 2))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 maxCos 3)))) (fma.f64 (sqrt.f64 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))) (*.f64 (*.f64 maxCos maxCos) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 (+.f64 ux -1) ux (*.f64 (neg.f64 ux) (fma.f64 -1 ux 1))) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 ux -1) (fma.f64 -1 ux 1))))))) 2)))))))))","(fma.f64 1/2 (*.f64 maxCos (*.f64 (*.f64 (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) 3))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))) 2)) (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 maxCos 3)) (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux))))) (fma.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (-.f64 (*.f64 ux (+.f64 ux -1)) (fma.f64 ux (neg.f64 ux) ux)) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))) 2)) (*.f64 maxCos (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))))","(+.f64 (fma.f64 -1/4 (*.f64 (*.f64 (*.f64 (*.f64 (+.f64 ux -1) (-.f64 ux (neg.f64 ux))) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1) 3)))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (pow.f64 maxCos 3))) (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (*.f64 (+.f64 ux -1) (-.f64 ux (neg.f64 ux))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))) 2))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1)))) (+.f64 (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (*.f64 (+.f64 ux -1) (-.f64 ux (neg.f64 ux))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 (+.f64 ux -1) (-.f64 1 ux) 1))))) 2)) (*.f64 (*.f64 maxCos maxCos) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))) (*.f64 (*.f64 2 (*.f64 (+.f64 ux -1) (*.f64 ux maxCos))) (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 uy (*.f64 (PI.f64) 2))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(fma.f64 2 (*.f64 uy (PI.f64)) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(fma.f64 2 (*.f64 uy (PI.f64)) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (fma.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (fma.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (PI.f64) 7) (*.f64 -8/315 (pow.f64 uy 7))))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))"]],"stop":[["node limit",1]],"time":50.026123046875,"type":"simplify"},{"compiler":[[5369,3907]],"time":61.31298828125,"type":"eval"},{"alts":[["(*.f64 (log1p.f64 (expm1.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","fresh",12.108563765188965],["(*.f64 (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sin.f64 1))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","fresh",17.100684391097207],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (exp.f64 (log1p.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)))))))","fresh",12.13616607666654],["(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))))))","fresh",17.092665600152273],["(*.f64 (sin.f64 (expm1.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","fresh",12.101060698682733],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","next",0.5523200997009194],["(*.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 3) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","fresh",12.098983799532588],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 (exp.f64 (log1p.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) 1)))","fresh",12.412665599254133],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (+.f64 maxCos -2))))))","fresh",0.5607963692378036],["(*.f64 (sin.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","fresh",16.92193534636601],["(pow.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 2)","fresh",14.276617665278538],["(pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 3)","fresh",12.114367132689942],["(*.f64 (sin.f64 (pow.f64 (cbrt.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3)) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","fresh",12.116051087638748],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 3) 1) (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (-.f64 1 (*.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 1))))))","fresh",12.127766048759144]],"compiler":[[27,21],[42,34],[26,20],[114,84],[27,21],[40,33],[28,22],[29,23],[28,21],[27,21],[28,22],[28,22],[28,22],[73,52],[27,21],[42,34],[26,20],[114,84],[27,21],[40,33],[28,22],[29,23],[28,21],[27,21],[28,22],[28,22],[28,22],[73,52]],"count":[[145,14]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[143,14],"picked":[1,0]}],"min-error":[0.4351325997009195],"time":30.9990234375,"type":"prune"},{"compiler":[[211,163]],"locations":[["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))",0.0859375,true],["(sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))",0.27145255115753775,false],["(*.f64 uy (*.f64 2 (PI.f64)))",0.27734375,false],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))",0.3203125,true]],"time":47.15087890625,"type":"localize"},{"count":[[2,36]],"series":[["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))","ux","-inf",0.43603515625],["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))","ux","inf",0.458984375],["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))","ux","0",0.591064453125],["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))","maxCos","-inf",0.430908203125],["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))","maxCos","inf",0.94384765625],["(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))","maxCos","0",0.56201171875],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","-inf",0.869873046875],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","inf",1.06787109375],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","0",1.208984375],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","-inf",1.6181640625],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","inf",0.968017578125],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","0",2.704833984375],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","-inf",0.453857421875],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","inf",1.181884765625],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","0",1.14404296875]],"time":15.1259765625,"type":"series"},{"count":[[2,42]],"egraph":[[1,557,52,0.010672290999999999],[0,25,90,0.000636208]],"inputs":[["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) 2) (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) 3) (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 3/2) (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 uy 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) (cbrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) (cbrt.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 1/4) (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) 2) 1/2) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)) 3) (pow.f64 (*.f64 ux (+.f64 maxCos maxCos)) 3))) (sqrt.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 2) (*.f64 (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)) (*.f64 ux (+.f64 maxCos maxCos))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) (sqrt.f64 (*.f64 ux (+.f64 maxCos maxCos))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 ux (+.f64 maxCos maxCos))) (sqrt.f64 (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 1))))))"]],"rules":[["egg-rr",27],["egg-rr",15]],"stop":[["node limit",1]],"time":30.63720703125,"type":"rewrite"},{"count":[[78,100]],"egraph":[[3,7937,2489,0.031342543],[2,2338,2489,0.015331876],[1,617,2870,0.004219584],[0,186,3332,0.000912417]],"inputs":[["(*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))","(+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))))","(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (pow.f64 ux 2)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))) (*.f64 1/2 (*.f64 (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 1/2 (*.f64 (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux)","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3) (pow.f64 ux 2)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux)) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3) (pow.f64 ux 2)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))","(*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1)))))))","(*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux))))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (*.f64 2 (*.f64 uy (PI.f64))))","(+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))","(fma.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1)))))) (*.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))","(+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))))","(fma.f64 4/15 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (fma.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1)))))) (*.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))))","(fma.f64 4/15 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))))))","(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","(fma.f64 -8/315 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (fma.f64 4/15 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (fma.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1)))))) (*.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))))","(+.f64 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))) (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (+.f64 (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (+.f64 (+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (*.f64 ux (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))","(fma.f64 1/2 (*.f64 maxCos (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))","(fma.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux))) (*.f64 (*.f64 1/2 maxCos) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux))))))))","(fma.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 (*.f64 1/2 maxCos) (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))","(fma.f64 1/2 (*.f64 maxCos (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (fma.f64 1/2 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos maxCos)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))))))","(+.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))) (+.f64 (*.f64 1/2 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))))) (*.f64 (*.f64 (*.f64 1/2 (*.f64 maxCos maxCos)) (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(+.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (+.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (*.f64 ux (+.f64 -2 (*.f64 2 ux))))) (*.f64 (*.f64 maxCos maxCos) (neg.f64 (*.f64 (+.f64 (*.f64 ux ux) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) 1/2)) 2)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(fma.f64 1/2 (*.f64 maxCos (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (fma.f64 -1/4 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (*.f64 (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)) 3))))) (fma.f64 1/2 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos maxCos)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))))","(+.f64 (+.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))) (+.f64 (*.f64 1/2 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))))) (*.f64 (*.f64 (*.f64 1/2 (*.f64 maxCos maxCos)) (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) 2)) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))) (*.f64 (pow.f64 maxCos 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux)) 3))))) -1/4)))","(+.f64 (fma.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 (*.f64 1/2 maxCos) (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) 1/2)) 2)) (+.f64 (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 maxCos (*.f64 maxCos (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))))) 1/2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (*.f64 (pow.f64 maxCos 3) (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 ux (-.f64 2 ux)) 3))))) -1/4))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/2 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 (+.f64 maxCos -1) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 ux (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)))) (fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/2 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 (+.f64 maxCos -1) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (pow.f64 ux 2)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 ux (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)))) (fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3) (/.f64 (*.f64 ux ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 -1/2 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 3) (*.f64 ux ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(+.f64 (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 (+.f64 maxCos -1) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 5)) (pow.f64 (-.f64 1 maxCos) 5))) (/.f64 (*.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3) -1/16) (/.f64 (*.f64 ux ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(*.f64 ux (neg.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(-.f64 (*.f64 1/2 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))) (*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) 1/2) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 ux (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(-.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 1/8 (*.f64 1/2 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))) (*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))","(fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 1/8 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) 1/2) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux)))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 ux (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3) (/.f64 (*.f64 ux ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 1/8 (fma.f64 1/2 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))) (-.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (*.f64 (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 3) (*.f64 ux ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) 1/16)) (*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))))","(+.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 1/8 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) 1/2) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux))))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 5)) (pow.f64 (-.f64 1 maxCos) 5))) (*.f64 (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3) (*.f64 ux ux)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) 1/16)))","(sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))","(sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))","(sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))","(sqrt.f64 (*.f64 ux (-.f64 2 ux)))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))) (*.f64 1/2 (*.f64 (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(+.f64 (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))) (*.f64 maxCos (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))))))","(fma.f64 (*.f64 (*.f64 1/2 maxCos) (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux))))","(fma.f64 (*.f64 (*.f64 1/2 maxCos) (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 1/2 (*.f64 (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))))","(+.f64 (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))) (*.f64 1/2 (+.f64 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (*.f64 maxCos maxCos) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))) (*.f64 maxCos (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))) (+.f64 (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) 2)) (*.f64 maxCos maxCos)) (*.f64 maxCos (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 maxCos (+.f64 (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) 1/2)) 2)) maxCos) (*.f64 ux (+.f64 -2 (*.f64 2 ux)))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))))))","(+.f64 (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))) (fma.f64 1/2 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (*.f64 maxCos maxCos) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))) (*.f64 maxCos (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))))) (*.f64 -1/4 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (pow.f64 maxCos 3)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)) 3)))))))))","(+.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))) (+.f64 (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) 2)) (*.f64 maxCos maxCos)) (*.f64 maxCos (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) 2)) (*.f64 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (*.f64 (pow.f64 maxCos 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux)) 3))))) -1/4))))","(+.f64 (fma.f64 (*.f64 (*.f64 1/2 maxCos) (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) 1/2)) 2)) (+.f64 (*.f64 (*.f64 maxCos (*.f64 maxCos (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 1/2) (*.f64 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (*.f64 (pow.f64 maxCos 3) (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 ux (-.f64 2 ux)) 3))))) -1/4))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux)","(*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))","(*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) ux (*.f64 -1/2 (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))))))","(fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 (+.f64 maxCos -1) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2) ux)) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) ux (*.f64 -1/2 (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 2) ux)) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux)) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 (+.f64 maxCos -1) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3) (pow.f64 ux 2)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2) ux)) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) ux (fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3) (*.f64 ux ux))) (*.f64 -1/2 (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 2) ux)) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (fma.f64 -1/2 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 3) (*.f64 ux ux)))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux)) (fma.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (fma.f64 -1/2 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 5)) (pow.f64 (-.f64 1 maxCos) 5))) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3) (*.f64 ux ux)))))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux))","(neg.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))))","(*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux)))","(fma.f64 1/2 (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))) (neg.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))))","(-.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 1/2)) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(fma.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) 1/2) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux))))","(fma.f64 1/2 (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2) ux)) (neg.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))))))","(-.f64 (fma.f64 1/2 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 2) ux) 1/8))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(-.f64 (fma.f64 1/2 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux) 1/8))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) ux))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) ux)) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3) (pow.f64 ux 2)))))))","(fma.f64 1/2 (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2) ux)) (fma.f64 -1 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3) (*.f64 ux ux)))))))","(fma.f64 1/2 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 2) ux)) (-.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 3) (*.f64 ux ux)) 1/16)) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(fma.f64 1/2 (*.f64 (+.f64 maxCos (+.f64 maxCos -2)) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2) ux)) (fma.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 5)) (pow.f64 (-.f64 1 maxCos) 5))) (/.f64 (*.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3) 1/16) (*.f64 ux ux)) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux)))))"]],"stop":[["node limit",1]],"time":69.90478515625,"type":"simplify"},{"compiler":[[6803,4981]],"time":72.490234375,"type":"eval"},{"alts":[["(*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 (PI.f64) uy)) (cos.f64 (*.f64 (PI.f64) uy)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5865188790062456],["(*.f64 (sin.f64 (exp.f64 (log.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",1.5546071577444907],["(*.f64 (pow.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) 1/3) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",4.244031023794676],["(*.f64 (sin.f64 (pow.f64 (cbrt.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.8874376959063379],["(*.f64 (pow.f64 (sqrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",3.183682836757684],["(pow.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 2)","fresh",14.276617665278538],["(*.f64 (log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",11.459438382419325],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 3) 1) (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (-.f64 1 (*.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 1))))))","fresh",12.127766048759144],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","next",0.5499463396336491],["(*.f64 (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sin.f64 1))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",11.795925887434818],["(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","fresh",7.517947638845872],["(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","fresh",0.7813612530664423],["(*.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 3) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.8577655274958697],["(pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 3)","fresh",12.114367132689942],["(*.f64 (log.f64 (exp.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",11.453317130103995]],"compiler":[[45,35],[42,35],[44,37],[43,36],[43,36],[28,22],[44,37],[73,52],[45,38],[57,48],[162,131],[184,149],[43,36],[28,22],[42,35],[45,35],[42,35],[44,37],[43,36],[43,36],[28,22],[44,37],[73,52],[45,38],[57,48],[162,131],[184,149],[43,36],[28,22],[42,35]],"count":[[159,15]],"kept":[{"done":[0,0],"fresh":[13,3],"new":[145,12],"picked":[1,0]}],"min-error":[0.13057544079740221],"time":40.831787109375,"type":"prune"},{"compiler":[[244,192]],"locations":[["(*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3))",0.2421875,true],["(sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3))))",0.27145255115753775,true],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))",0.3203125,true],["(pow.f64 (*.f64 2 (PI.f64)) 3)",1.0,true]],"time":57.302001953125,"type":"localize"},{"count":[[4,48]],"series":[["(*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3))","uy","-inf",0.30908203125],["(*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3))","uy","inf",0.43017578125],["(*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3))","uy","0",0.878173828125],["(sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3))))","uy","-inf",0.156982421875],["(sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3))))","uy","inf",0.147216796875],["(sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3))))","uy","0",0.214111328125],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","-inf",0.375],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","inf",0.34521484375],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","0",0.43505859375],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","-inf",0.364990234375],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","inf",0.365966796875],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","0",0.4150390625],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","-inf",0.576171875],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","inf",0.2919921875],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","0",0.493896484375]],"time":6.162109375,"type":"series"},{"count":[[4,74]],"egraph":[[1,653,61,0.012319875],[0,29,80,0.000776375]],"inputs":[["(pow.f64 (*.f64 2 (PI.f64)) 3)","(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3))))","(*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 8 (pow.f64 (PI.f64) 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (PI.f64) (*.f64 4 (pow.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 2 (*.f64 4 (pow.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (PI.f64)) (*.f64 4 (pow.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 8 (pow.f64 (PI.f64) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 8 (pow.f64 (PI.f64) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (*.f64 2 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2) (*.f64 (cbrt.f64 (*.f64 2 (PI.f64))) (*.f64 4 (pow.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 2 (PI.f64))) (*.f64 (sqrt.f64 (*.f64 2 (PI.f64))) (*.f64 4 (pow.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 3) 8)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 2 (PI.f64)) 3/2) (pow.f64 (*.f64 2 (PI.f64)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2) 3) (*.f64 2 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 2 (PI.f64))) 3) (pow.f64 (sqrt.f64 (*.f64 2 (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) 2) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (PI.f64)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) 1) (*.f64 2 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (sqrt.f64 (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 2 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 2 (PI.f64)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 8) (pow.f64 (PI.f64) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 8 (pow.f64 (PI.f64) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 8 (pow.f64 (PI.f64) 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 8 (pow.f64 (PI.f64) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 8 (pow.f64 (PI.f64) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (*.f64 2 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 2 (PI.f64)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) 2) (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) 3) (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1))) 3/2) (pow.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) (sqrt.f64 (fma.f64 (+.f64 maxCos maxCos) ux (*.f64 (*.f64 ux ux) (fma.f64 maxCos maxCos -1)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))) 2) (cbrt.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))) (sqrt.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) uy) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) uy) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 2 (PI.f64)) uy) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) uy) 3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) uy) 3/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) uy) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) uy) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) uy) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) uy) 3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 8 (pow.f64 (PI.f64) 3)) 3) (pow.f64 (pow.f64 uy 3) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 uy 3) 3) (pow.f64 (*.f64 8 (pow.f64 (PI.f64) 3)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) uy) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) uy) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (*.f64 (*.f64 2 (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (*.f64 2 (PI.f64)) uy))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) 3))))))"]],"rules":[["egg-rr",16],["egg-rr",17],["egg-rr",15],["egg-rr",26]],"stop":[["node limit",1]],"time":36.81005859375,"type":"rewrite"},{"count":[[122,124]],"egraph":[[3,6321,2051,0.028087376],[2,1926,2079,0.012715126],[1,526,2356,0.0036065840000000004],[0,163,2697,0.000799959]],"inputs":[["(*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))","(+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))))","(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (pow.f64 ux 2)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64)))))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))","(*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1)))))))","(*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (*.f64 2 (*.f64 uy (PI.f64))))","(*.f64 (*.f64 uy (PI.f64)) (*.f64 2 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1)))))))","(*.f64 (*.f64 uy (PI.f64)) (*.f64 2 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos)))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))","(fma.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1)))))) (*.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))","(*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (fma.f64 2 (*.f64 uy (PI.f64)) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (fma.f64 (*.f64 -4/3 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3) (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (fma.f64 (*.f64 -4/3 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3) (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))))","(fma.f64 4/15 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (fma.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1)))))) (*.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))))","(fma.f64 4/15 (*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (fma.f64 2 (*.f64 uy (PI.f64)) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 (*.f64 -4/3 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 (*.f64 -4/3 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))))))","(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","(fma.f64 -8/315 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (fma.f64 4/15 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (fma.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1)))))) (*.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))))","(+.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (fma.f64 2 (*.f64 uy (PI.f64)) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))) (*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (fma.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 (PI.f64) 7) -8/315)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (fma.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 (PI.f64) 7) -8/315))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (fma.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 (PI.f64) 7) -8/315))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))","(*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))","(*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))","(*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))","(*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (neg.f64 (*.f64 (*.f64 uy (PI.f64)) (cbrt.f64 -8)))))","(*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (cbrt.f64 -8))))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 (cbrt.f64 -8) (*.f64 uy (neg.f64 (PI.f64))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (sin.f64 (*.f64 (cbrt.f64 -8) (*.f64 uy (neg.f64 (PI.f64))))))","(*.f64 (sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (neg.f64 (*.f64 (*.f64 uy (PI.f64)) (cbrt.f64 -8)))))","(*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (cbrt.f64 -8))))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 (cbrt.f64 -8) (*.f64 uy (neg.f64 (PI.f64))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (sin.f64 (*.f64 (cbrt.f64 -8) (*.f64 uy (neg.f64 (PI.f64))))))","(*.f64 (sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (neg.f64 (*.f64 (*.f64 uy (PI.f64)) (cbrt.f64 -8)))))","(*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (cbrt.f64 -8))))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 (cbrt.f64 -8) (*.f64 uy (neg.f64 (PI.f64))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (sin.f64 (*.f64 (cbrt.f64 -8) (*.f64 uy (neg.f64 (PI.f64))))))","(*.f64 (sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (neg.f64 (*.f64 (*.f64 uy (PI.f64)) (cbrt.f64 -8)))))","(*.f64 (sqrt.f64 (fma.f64 (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (-.f64 1 maxCos) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (neg.f64 ux)))) (neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (cbrt.f64 -8))))))","(*.f64 (sqrt.f64 (fma.f64 (-.f64 1 maxCos) (*.f64 (+.f64 maxCos -1) (*.f64 ux ux)) (*.f64 2 (*.f64 (neg.f64 ux) (+.f64 maxCos -1))))) (sin.f64 (*.f64 (cbrt.f64 -8) (*.f64 uy (neg.f64 (PI.f64))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (sin.f64 (*.f64 (cbrt.f64 -8) (*.f64 uy (neg.f64 (PI.f64))))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))","(*.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 2 ux (*.f64 ux (neg.f64 ux)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))","(fma.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))))) (*.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))","(fma.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 2 ux (*.f64 ux (neg.f64 ux)))) (*.f64 1/2 (*.f64 (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (fma.f64 2 ux (*.f64 ux (neg.f64 ux)))))))))","(fma.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 (*.f64 (*.f64 maxCos (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))","(fma.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))))) (fma.f64 1/2 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (*.f64 maxCos maxCos)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))))))","(+.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 2 ux (*.f64 ux (neg.f64 ux))))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 ux (*.f64 ux (neg.f64 ux))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) maxCos))) (*.f64 (*.f64 1/2 (*.f64 maxCos (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 ux (*.f64 ux (neg.f64 ux))))) (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) 1/2)) 2))))))","(+.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))) (+.f64 (neg.f64 (*.f64 (+.f64 (*.f64 ux ux) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 2)) (*.f64 maxCos (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (*.f64 (*.f64 maxCos (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(+.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (-.f64 (*.f64 (*.f64 maxCos (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (+.f64 (*.f64 ux ux) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 2)) (*.f64 maxCos (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(fma.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))))) (fma.f64 -1/4 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))) (pow.f64 maxCos 3)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)) 3))))) (fma.f64 1/2 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (*.f64 maxCos maxCos)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))))","(+.f64 (+.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 2 ux (*.f64 ux (neg.f64 ux))))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 ux (*.f64 ux (neg.f64 ux))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) maxCos))) (*.f64 (*.f64 1/2 (*.f64 maxCos (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 ux (*.f64 ux (neg.f64 ux))))) (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) 1/2)) 2)))))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 ux (*.f64 ux (neg.f64 ux))))) (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) 1/2)) 2)) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))) (*.f64 (pow.f64 maxCos 3) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 ux (*.f64 ux (neg.f64 ux))) 3))))) -1/4)))","(+.f64 (fma.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 (*.f64 (*.f64 maxCos (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 2)) (+.f64 (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 maxCos maxCos) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))))) 1/2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (*.f64 (pow.f64 maxCos 3) (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 ux (-.f64 2 ux)) 3))))) -1/4))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64)))))","(*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 -1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (/.f64 ux (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)))) (fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64)))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 2))) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (/.f64 (pow.f64 (+.f64 -2 (+.f64 maxCos maxCos)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 -1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) ux))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (pow.f64 ux 2)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (/.f64 ux (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)))) (fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))) (fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3) (/.f64 (*.f64 ux ux) (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64)))))) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 2))) (fma.f64 -1/2 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 5)) (pow.f64 (-.f64 1 maxCos) 5))) (*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 3) ux)) -1/16)))))","(+.f64 (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (/.f64 (pow.f64 (+.f64 -2 (+.f64 maxCos maxCos)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 -1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 5)) (pow.f64 (-.f64 1 maxCos) 5))) (*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux ux)) (pow.f64 (+.f64 -2 (+.f64 maxCos maxCos)) 3)) -1/16)))","(+.f64 (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (/.f64 (pow.f64 (+.f64 -2 (+.f64 maxCos maxCos)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 -1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 5)) (pow.f64 (-.f64 1 maxCos) 5))) (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) 8) (*.f64 ux ux))) -1/16)))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))))","(*.f64 (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (neg.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux (neg.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64)))))))","(-.f64 (*.f64 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))) (*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (*.f64 1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))) (*.f64 ux (neg.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (/.f64 ux (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))))))","(-.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 2))) 1/8 (*.f64 (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))) (*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))","(fma.f64 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (/.f64 (pow.f64 (+.f64 -2 (+.f64 maxCos maxCos)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 1/8 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (*.f64 1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(fma.f64 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (/.f64 (pow.f64 (+.f64 -2 (+.f64 maxCos maxCos)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 1/8 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))) (*.f64 ux (neg.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)))) (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))) (/.f64 ux (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64))))) (fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3) (/.f64 (*.f64 ux ux) (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64)))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 (*.f64 2 uy) (PI.f64)))))))))","(fma.f64 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 2))) 1/8 (-.f64 (fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (*.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) ux) (/.f64 (pow.f64 (+.f64 (+.f64 maxCos -1) (+.f64 maxCos -1)) 3) ux)) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 5)) (pow.f64 (-.f64 1 maxCos) 5))) 1/16))) (*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(+.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (/.f64 (pow.f64 (+.f64 -2 (+.f64 maxCos maxCos)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 1/8 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (-.f64 (*.f64 1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))) (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 5)) (pow.f64 (-.f64 1 maxCos) 5))) (*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 ux ux)) (pow.f64 (+.f64 -2 (+.f64 maxCos maxCos)) 3)) 1/16)))","(fma.f64 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 3)) (pow.f64 (-.f64 1 maxCos) 3))) (*.f64 (/.f64 (pow.f64 (+.f64 -2 (+.f64 maxCos maxCos)) 2) ux) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 1/8 (fma.f64 (sqrt.f64 (/.f64 (/.f64 1 (pow.f64 (+.f64 maxCos -1) 5)) (pow.f64 (-.f64 1 maxCos) 5))) (*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (/.f64 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) 8) (*.f64 ux ux))) 1/16) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 1/2 (*.f64 2 (*.f64 (+.f64 maxCos -1) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))) (*.f64 ux (neg.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (*.f64 2 uy) (PI.f64))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(fma.f64 2 (*.f64 uy (PI.f64)) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(fma.f64 (*.f64 -4/3 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3) (*.f64 2 (*.f64 uy (PI.f64))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 (*.f64 -4/3 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (fma.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (*.f64 (*.f64 -8/315 (pow.f64 uy 7)) (pow.f64 (PI.f64) 7)))))","(fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (fma.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 (PI.f64) 7) -8/315)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 (*.f64 2 uy) (PI.f64)))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 (*.f64 2 uy) (PI.f64)))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 (*.f64 2 uy) (PI.f64)))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 (*.f64 2 uy) (PI.f64)))","(sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64)))))","(sin.f64 (neg.f64 (*.f64 (*.f64 uy (PI.f64)) (cbrt.f64 -8))))","(neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (cbrt.f64 -8)))))","(sin.f64 (*.f64 (cbrt.f64 -8) (*.f64 uy (neg.f64 (PI.f64)))))","(sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64)))))","(sin.f64 (neg.f64 (*.f64 (*.f64 uy (PI.f64)) (cbrt.f64 -8))))","(neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (cbrt.f64 -8)))))","(sin.f64 (*.f64 (cbrt.f64 -8) (*.f64 uy (neg.f64 (PI.f64)))))","(sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64)))))","(sin.f64 (neg.f64 (*.f64 (*.f64 uy (PI.f64)) (cbrt.f64 -8))))","(neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (cbrt.f64 -8)))))","(sin.f64 (*.f64 (cbrt.f64 -8) (*.f64 uy (neg.f64 (PI.f64)))))","(sin.f64 (*.f64 -1 (*.f64 (cbrt.f64 -8) (*.f64 uy (PI.f64)))))","(sin.f64 (neg.f64 (*.f64 (*.f64 uy (PI.f64)) (cbrt.f64 -8))))","(neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (cbrt.f64 -8)))))","(sin.f64 (*.f64 (cbrt.f64 -8) (*.f64 uy (neg.f64 (PI.f64)))))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 8 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 8 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 8 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 8 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 8 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 8 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 8 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 8 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 8 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 8 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 8 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 8 (pow.f64 uy 3)) (pow.f64 (PI.f64) 3))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))"]],"stop":[["node limit",1]],"time":61.751953125,"type":"simplify"},{"compiler":[[5961,4537]],"time":66.431884765625,"type":"eval"},{"alts":[["(*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 (PI.f64) uy)) (cos.f64 (*.f64 (PI.f64) uy)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5865188790062456],["(*.f64 (sin.f64 (exp.f64 (log.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",1.5546071577444907],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","next",0.5336575700967651],["(*.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 3) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.8577655274958697],["(*.f64 (sin.f64 (cbrt.f64 (exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",1.7361657478913997],["(*.f64 (pow.f64 (sqrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",3.183682836757684],["(*.f64 (exp.f64 (log.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",3.9556959993446443],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (exp.f64 (*.f64 3 (log.f64 (*.f64 2 (PI.f64)))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.9550057192884268],["(pow.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 2)","fresh",14.276617665278538],["(*.f64 (log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",11.459438382419325],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 3) 1) (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (-.f64 1 (*.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 1))))))","fresh",12.127766048759144],["(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","fresh",7.517947638845872],["(*.f64 (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sin.f64 1))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",11.795925887434818],["(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","fresh",0.7813612530664423],["(*.f64 (sin.f64 (pow.f64 (cbrt.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.8874376959063379],["(pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 3)","fresh",12.114367132689942]],"compiler":[[45,35],[42,35],[57,48],[43,36],[45,38],[43,36],[42,35],[47,40],[28,22],[44,37],[73,52],[162,131],[57,48],[184,149],[43,36],[28,22],[45,35],[42,35],[57,48],[43,36],[45,38],[43,36],[42,35],[47,40],[28,22],[44,37],[73,52],[162,131],[57,48],[184,149],[43,36],[28,22]],"count":[[139,16]],"kept":[{"done":[0,0],"fresh":[14,11],"new":[124,5],"picked":[1,0]}],"min-error":[0.1009466810289602],"time":44.531982421875,"type":"prune"},{"compiler":[[335,267]],"locations":[["(cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))",0.1015625,true],["(*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64)))))",0.2421875,true],["(sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64)))))))",0.27145255115753775,true],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))",0.3203125,true]],"time":82.605224609375,"type":"localize"},{"count":[[4,60]],"series":[["(cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))","uy","-inf",1.400146484375],["(cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))","uy","inf",0.39990234375],["(cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))","uy","0",1.465087890625],["(*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64)))))","uy","-inf",0.26416015625],["(*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64)))))","uy","inf",0.568115234375],["(*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64)))))","uy","0",4.259033203125],["(sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64)))))))","uy","-inf",0.178955078125],["(sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64)))))))","uy","inf",0.18017578125],["(sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64)))))))","uy","0",0.3291015625],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","-inf",0.7060546875],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","inf",0.85205078125],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","ux","0",8.10302734375],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","-inf",0.839111328125],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","inf",0.879150390625],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","maxCos","0",9.077880859375],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","-inf",0.60302734375],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","inf",0.60595703125],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","uy","0",28.173828125]],"time":59.4208984375,"type":"series"},{"count":[[4,69]],"egraph":[[1,769,66,0.012668459],[0,35,126,0.000907667]],"inputs":[["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64)))))))","(*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64)))))","(cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 3) (pow.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos))) 3/2) (pow.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 -1 maxCos)) (*.f64 ux (+.f64 maxCos maxCos)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 2)) (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) (sqrt.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 uy 3) 3) (pow.f64 (pow.f64 (*.f64 (PI.f64) 2) 3) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (*.f64 (PI.f64) 2) 3) 3) (pow.f64 (pow.f64 uy 3) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 (PI.f64) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 uy (*.f64 (PI.f64) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 2) uy)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 uy (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 2) (cbrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 (*.f64 (PI.f64) 2) (cbrt.f64 (*.f64 (PI.f64) 2))) 2))) (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (*.f64 uy (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 2) 1/3) (cbrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3)) 1/3) (pow.f64 (sqrt.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 (*.f64 (PI.f64) 2) (cbrt.f64 (*.f64 (PI.f64) 2))) 2)) 1/3) (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 uy) (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 uy (*.f64 (PI.f64) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 uy (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 uy (*.f64 (PI.f64) 2)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 1))))))"]],"rules":[["egg-rr",23],["egg-rr",15],["egg-rr",16],["egg-rr",15]],"stop":[["node limit",1]],"time":38.51904296875,"type":"rewrite"},{"count":[[129,121]],"egraph":[[3,6575,2682,0.029869709],[2,2248,2710,0.014005376],[1,579,3000,0.004194917],[0,180,3370,0.000927667]],"inputs":[["(*.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(+.f64 (*.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))","(+.f64 (*.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))) (+.f64 (*.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))))","(+.f64 (*.f64 -1/5040 (*.f64 (*.f64 (pow.f64 (cbrt.f64 2) 7) (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 (cbrt.f64 4) 7) (pow.f64 (PI.f64) 7)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))) (+.f64 (*.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","(*.f64 (sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64))))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64))))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64))))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64))))))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)))))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5))))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 (cbrt.f64 2) 7) (*.f64 (pow.f64 (cbrt.f64 4) 7) (pow.f64 (PI.f64) 7))))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5))))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))))","(sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))))","(sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))))","(sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))))","(sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))))","(sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))))","(sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))))","(sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))))","(sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 -1 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))","(*.f64 -1 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))","(*.f64 -1 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))","(*.f64 -1 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (*.f64 ux ux) (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 ux (+.f64 maxCos -1))))) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))","(+.f64 (*.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))","(fma.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (*.f64 ux ux) (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 ux (+.f64 maxCos -1))))) (fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3)))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3)))))","(+.f64 (*.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))) (+.f64 (*.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))))))","(fma.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (fma.f64 1/120 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5))))) (*.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))))","(fma.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (*.f64 (cbrt.f64 4) (PI.f64)) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))))) (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (*.f64 1/120 (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5))))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (*.f64 ux ux) (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 ux (+.f64 maxCos -1))))) (fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (fma.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 uy 5))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (fma.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 uy 5))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3))))))","(+.f64 (*.f64 -1/5040 (*.f64 (*.f64 (pow.f64 (cbrt.f64 2) 7) (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 (cbrt.f64 4) 7) (pow.f64 (PI.f64) 7)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))) (+.f64 (*.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","(fma.f64 -1/5040 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 (cbrt.f64 2) 7) (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 (cbrt.f64 4) 7) (pow.f64 (PI.f64) 7))))) (fma.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (fma.f64 1/120 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5))))) (*.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))))","(+.f64 (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (*.f64 1/120 (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5))))))) (*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (*.f64 -1/5040 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (cbrt.f64 4) 7)) (*.f64 (pow.f64 (PI.f64) 7) (pow.f64 (cbrt.f64 2) 7)))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (*.f64 ux ux) (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 ux (+.f64 maxCos -1))))) (fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (fma.f64 -1/5040 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (cbrt.f64 4) 7)) (*.f64 (pow.f64 (PI.f64) 7) (pow.f64 (cbrt.f64 2) 7))) (fma.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 uy 5))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (fma.f64 -1/5040 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (cbrt.f64 4) 7)) (*.f64 (pow.f64 (PI.f64) 7) (pow.f64 (cbrt.f64 2) 7))) (fma.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 uy 5))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3)))))))","(*.f64 (sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 1 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (*.f64 ux ux) (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 ux (+.f64 maxCos -1))))) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))","(*.f64 (sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 1 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (*.f64 ux ux) (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 ux (+.f64 maxCos -1))))) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))","(*.f64 (sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 1 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (*.f64 ux ux) (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 ux (+.f64 maxCos -1))))) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))","(*.f64 (sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (*.f64 1 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (*.f64 ux ux) (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 ux (+.f64 maxCos -1))))) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64))))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (neg.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (PI.f64) (cbrt.f64 -4)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (sin.f64 (*.f64 (*.f64 uy (cbrt.f64 2)) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 -4))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (*.f64 ux ux) (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 ux (+.f64 maxCos -1))))) (neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (*.f64 (cbrt.f64 2) (cbrt.f64 -4)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (*.f64 (cbrt.f64 2) (cbrt.f64 -4)))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64))))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (neg.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (PI.f64) (cbrt.f64 -4)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (sin.f64 (*.f64 (*.f64 uy (cbrt.f64 2)) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 -4))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (*.f64 ux ux) (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 ux (+.f64 maxCos -1))))) (neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (*.f64 (cbrt.f64 2) (cbrt.f64 -4)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (*.f64 (cbrt.f64 2) (cbrt.f64 -4)))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64))))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (neg.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (PI.f64) (cbrt.f64 -4)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (sin.f64 (*.f64 (*.f64 uy (cbrt.f64 2)) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 -4))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (*.f64 ux ux) (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 ux (+.f64 maxCos -1))))) (neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (*.f64 (cbrt.f64 2) (cbrt.f64 -4)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (*.f64 (cbrt.f64 2) (cbrt.f64 -4)))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))) (sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64))))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (+.f64 1 (neg.f64 maxCos))) (neg.f64 (*.f64 ux (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1))))) (sin.f64 (neg.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (PI.f64) (cbrt.f64 -4)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 (*.f64 ux ux) (-.f64 1 maxCos)) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (neg.f64 ux)))) (sin.f64 (*.f64 (*.f64 uy (cbrt.f64 2)) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 -4))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (*.f64 ux ux) (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 2 (*.f64 ux (+.f64 maxCos -1))))) (neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (*.f64 (cbrt.f64 2) (cbrt.f64 -4)))))))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (*.f64 (cbrt.f64 2) (cbrt.f64 -4)))))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))","(fma.f64 1/2 (*.f64 maxCos (*.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))","(fma.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux))) (*.f64 1/2 (*.f64 (*.f64 maxCos (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux))))))))","(fma.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 1/2 maxCos) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 ux (+.f64 -2 (*.f64 2 ux)))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux))))))","(fma.f64 1/2 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 maxCos maxCos)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (fma.f64 1/2 (*.f64 maxCos (*.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux))))))","(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))) (+.f64 (*.f64 (*.f64 1/2 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 maxCos maxCos))) (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) 2))) (*.f64 (*.f64 1/2 maxCos) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)))))))","(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))) (+.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 ux (+.f64 -2 (*.f64 2 ux))))) (neg.f64 (*.f64 (+.f64 (*.f64 ux ux) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))) 2)) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 maxCos maxCos)))))))","(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))) (-.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 ux (+.f64 -2 (*.f64 2 ux))))) (*.f64 (+.f64 (*.f64 ux ux) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) 1/2)) 2)) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 maxCos maxCos))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(fma.f64 1/2 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 maxCos maxCos)) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (fma.f64 1/2 (*.f64 maxCos (*.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) (fma.f64 -1/4 (*.f64 (-.f64 (neg.f64 (*.f64 ux ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux))) (sqrt.f64 (/.f64 1 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))) 2)) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (fma.f64 -2 ux (*.f64 2 (*.f64 ux ux)))) (pow.f64 maxCos 3)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)) 3))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (fma.f64 -1 (*.f64 ux ux) (*.f64 2 ux)))))))","(+.f64 (fma.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux))) (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) 2)) (*.f64 (*.f64 (pow.f64 maxCos 3) (*.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (*.f64 ux ux)) 3))))) -1/4))) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))) (+.f64 (*.f64 (*.f64 1/2 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 maxCos maxCos))) (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 1/2 (*.f64 (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (*.f64 ux ux)))))) 2))) (*.f64 (*.f64 1/2 maxCos) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (fma.f64 2 (*.f64 ux ux) (*.f64 ux -2)))))))","(+.f64 (fma.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 ux (neg.f64 ux)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))) 2)) (pow.f64 maxCos 3)) (*.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 ux (-.f64 2 ux)) 3))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))) (+.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 ux (+.f64 -2 (*.f64 2 ux))))) (neg.f64 (*.f64 (+.f64 (*.f64 ux ux) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))) 2)) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 maxCos maxCos)))))))","(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))) (-.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))) (-.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 ux (+.f64 -2 (*.f64 2 ux))))) (*.f64 (+.f64 (*.f64 ux ux) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) 1/2)) 2)) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 maxCos maxCos))))) (*.f64 (+.f64 (*.f64 ux ux) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) 1/2)) 2)) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 ux (+.f64 -2 (*.f64 2 ux)))) (*.f64 (pow.f64 maxCos 3) (sqrt.f64 (/.f64 1 (pow.f64 (*.f64 ux (-.f64 2 ux)) 3))))) -1/4))))","(*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))","(*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))","(*.f64 ux (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))","(fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)) ux)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (pow.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) 2))))))","(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2))))) (*.f64 (*.f64 -1/8 (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)))) (+.f64 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (/.f64 (*.f64 ux ux) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3)))) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)) ux))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (/.f64 (*.f64 ux ux) (pow.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) 3)))) (fma.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (pow.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) 2)))))))","(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2))))) (+.f64 (*.f64 (*.f64 -1/8 (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3) ux)) -1/16))))","(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2))))) (+.f64 (*.f64 (*.f64 -1/8 (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2))) (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3))))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (/.f64 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) 8) (*.f64 ux ux))) -1/16))))","(*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))","(neg.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))","(*.f64 (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (neg.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))","(fma.f64 -1 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))","(-.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) 1/2)) (*.f64 ux (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2)) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))","(fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)) ux)) (fma.f64 -1 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))))","(fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (pow.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) 2))) 1/8 (-.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) 1/2)) (*.f64 ux (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2))) 1/8 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(fma.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2)) 1/8) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2)) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux)))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 2)) ux))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (-.f64 maxCos 1) (+.f64 1 (*.f64 -1 maxCos))))) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (-.f64 maxCos 1) 5) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 5)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1) 3)) (pow.f64 ux 2)))))))","(fma.f64 1/8 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 3)))) (/.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 2)) ux)) (fma.f64 -1 (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos)))) (*.f64 ux (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (+.f64 1 (neg.f64 maxCos))))) (*.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (+.f64 1 (neg.f64 maxCos)) 5)))) (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (/.f64 (*.f64 ux ux) (pow.f64 (+.f64 (fma.f64 -1 (+.f64 1 (neg.f64 maxCos)) maxCos) -1) 3)))) 1/16))))","(fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (pow.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) 2))) 1/8 (-.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))) (*.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (/.f64 (*.f64 ux ux) (pow.f64 (+.f64 maxCos (-.f64 (+.f64 maxCos -1) 1)) 3))) 1/16))) (*.f64 ux (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos)))))))","(+.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2))) 1/8 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (-.f64 (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2))) (*.f64 ux (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))))) (*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (/.f64 (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 3) ux)) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) 1/16)))","(fma.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (pow.f64 (-.f64 1 maxCos) 3)))) (*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) ux) (pow.f64 (+.f64 maxCos (+.f64 maxCos -2)) 2)) 1/8) (+.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (/.f64 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) 8) (*.f64 ux ux))) (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 maxCos -1) 5) (pow.f64 (-.f64 1 maxCos) 5)))) 1/16)) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))))) (+.f64 maxCos (+.f64 maxCos -2)) (*.f64 (sqrt.f64 (*.f64 (+.f64 maxCos -1) (-.f64 1 maxCos))) (neg.f64 ux))))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5))))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))","(fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (fma.f64 1/120 (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))))","(fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (*.f64 1/120 (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)))))))","(fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (fma.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 uy 5))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3)))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64)))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 (cbrt.f64 2) 7) (*.f64 (pow.f64 (cbrt.f64 4) 7) (pow.f64 (PI.f64) 7))))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5))))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))))","(fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (fma.f64 -1/5040 (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 (cbrt.f64 2) 7) (*.f64 (pow.f64 (cbrt.f64 4) 7) (pow.f64 (PI.f64) 7)))) (fma.f64 1/120 (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))))","(fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (fma.f64 -1/5040 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (cbrt.f64 4) 7)) (*.f64 (pow.f64 (PI.f64) 7) (pow.f64 (cbrt.f64 2) 7))) (fma.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (*.f64 1/120 (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5))))))))","(fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (fma.f64 -1/5040 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (cbrt.f64 4) 7)) (*.f64 (pow.f64 (PI.f64) 7) (pow.f64 (cbrt.f64 2) 7))) (fma.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 uy 5))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3))))))","(sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))))","(sin.f64 (*.f64 1 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))))","(sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))","(sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))))","(sin.f64 (*.f64 1 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))))","(sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))","(sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))))","(sin.f64 (*.f64 1 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))))","(sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))","(sin.f64 (*.f64 (pow.f64 1 1/9) (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))))","(sin.f64 (*.f64 1 (*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))))","(sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))","(sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))))","(sin.f64 (neg.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (PI.f64) (cbrt.f64 -4))))))","(sin.f64 (*.f64 (*.f64 uy (cbrt.f64 2)) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 -4)))))","(neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (*.f64 (cbrt.f64 2) (cbrt.f64 -4))))))","(sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))))","(sin.f64 (neg.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (PI.f64) (cbrt.f64 -4))))))","(sin.f64 (*.f64 (*.f64 uy (cbrt.f64 2)) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 -4)))))","(neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (*.f64 (cbrt.f64 2) (cbrt.f64 -4))))))","(sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))))","(sin.f64 (neg.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (PI.f64) (cbrt.f64 -4))))))","(sin.f64 (*.f64 (*.f64 uy (cbrt.f64 2)) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 -4)))))","(neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (*.f64 (cbrt.f64 2) (cbrt.f64 -4))))))","(sin.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/9) (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))))","(sin.f64 (neg.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (PI.f64) (cbrt.f64 -4))))))","(sin.f64 (*.f64 (*.f64 uy (cbrt.f64 2)) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 -4)))))","(neg.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) (*.f64 (cbrt.f64 2) (cbrt.f64 -4))))))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) 8)","(*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 (PI.f64) 3) 8))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) 8)","(*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 (PI.f64) 3) 8))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) 8)","(*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 (PI.f64) 3) 8))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) 8)","(*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 (PI.f64) 3) 8))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) 8)","(*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 (PI.f64) 3) 8))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) 8)","(*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 (PI.f64) 3) 8))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) 8)","(*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 (PI.f64) 3) 8))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) 8)","(*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 (PI.f64) 3) 8))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) 8)","(*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 (PI.f64) 3) 8))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) 8)","(*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 (PI.f64) 3) 8))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) 8)","(*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 (PI.f64) 3) 8))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 8 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))","(*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) 8)","(*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 (PI.f64) 3) 8))","(*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 uy 3) 8))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 -1 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))","(neg.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (PI.f64) (cbrt.f64 -4)))))","(*.f64 (*.f64 uy (cbrt.f64 2)) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 -4))))","(*.f64 uy (*.f64 (cbrt.f64 -4) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 2)))))","(*.f64 -1 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))","(neg.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (PI.f64) (cbrt.f64 -4)))))","(*.f64 (*.f64 uy (cbrt.f64 2)) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 -4))))","(*.f64 uy (*.f64 (cbrt.f64 -4) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 2)))))","(*.f64 -1 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))","(neg.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (PI.f64) (cbrt.f64 -4)))))","(*.f64 (*.f64 uy (cbrt.f64 2)) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 -4))))","(*.f64 uy (*.f64 (cbrt.f64 -4) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 2)))))","(*.f64 -1 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 -4) (PI.f64)))))","(neg.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (PI.f64) (cbrt.f64 -4)))))","(*.f64 (*.f64 uy (cbrt.f64 2)) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 -4))))","(*.f64 uy (*.f64 (cbrt.f64 -4) (neg.f64 (*.f64 (PI.f64) (cbrt.f64 2)))))"]],"stop":[["node limit",1]],"time":68.85302734375,"type":"simplify"},{"compiler":[[6229,4886]],"time":69.796875,"type":"eval"},{"alts":[["(*.f64 (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sin.f64 1))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",11.795925887434818],["(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (fma.f64 -1/5040 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (cbrt.f64 4) 7)) (*.f64 (pow.f64 (PI.f64) 7) (pow.f64 (cbrt.f64 2) 7))) (fma.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 uy 5))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3)))))))","fresh",7.715446240952569],["(*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 (PI.f64) uy)) (cos.f64 (*.f64 (PI.f64) uy)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.5865188790062456],["(*.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 2)) (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.6305214669222238],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","done",0.5336575700967651],["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (exp.f64 (*.f64 3 (log.f64 (*.f64 2 (PI.f64)))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",0.9550057192884268],["(pow.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 2)","fresh",14.276617665278538],["(*.f64 (log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","fresh",11.459438382419325],["(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 3) 1) (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (-.f64 1 (*.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 1))))))","fresh",12.127766048759144],["(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","fresh",7.517947638845872],["(+.f64 (*.f64 -1/5040 (*.f64 (*.f64 (pow.f64 (cbrt.f64 2) 7) (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 (cbrt.f64 4) 7) (pow.f64 (PI.f64) 7)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))) (+.f64 (*.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","fresh",7.680393905873768],["(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))) (-.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 ux (+.f64 -2 (*.f64 2 ux))))) (*.f64 (+.f64 (*.f64 ux ux) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) 1/2)) 2)) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 maxCos maxCos))))))","fresh",1.0632480786515537],["(pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 3)","fresh",12.114367132689942]],"compiler":[[57,48],[79,62],[45,35],[51,42],[57,48],[47,40],[28,22],[44,37],[73,52],[162,131],[186,155],[92,72],[28,22]],"count":[[137,13]],"kept":[{"done":[0,0],"fresh":[15,8],"new":[121,4],"picked":[1,1]}],"min-error":[0.0853216810289602],"time":29.073974609375,"type":"prune"},{"accuracy":[0.533657570096765],"baseline":[0.5336575700967651],"branch":[["ux",0.533657570096765,1],["uy",0.5336575700967651,1],["maxCos",0.533657570096765,1],["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))",0.533657570096765,1],["(sin.f64 (*.f64 (*.f64 uy 2) (PI.f64)))",0.533657570096765,1],["(*.f64 (*.f64 uy 2) (PI.f64))",0.5336575700967651,1],["(*.f64 uy 2)",0.5336575700967651,1],["(sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)))))",0.533657570096765,1],["(-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))",0.533657570096765,1],["(*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)))",0.5336575700967651,1],["(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))",0.5336575700967651,1]],"compiler":[[4,3],[4,3],[4,3],[28,20],[9,8],[8,7],[6,5],[21,14],[20,13],[18,11],[10,7],[2045,1585]],"count":[[37,1]],"inputs":[["(*.f64 (sqrt.f64 (fma.f64 (+.f64 maxCos -1) (*.f64 ux (-.f64 ux (*.f64 ux maxCos))) (*.f64 2 (-.f64 ux (*.f64 ux maxCos))))) (fma.f64 (cbrt.f64 2) (*.f64 uy (*.f64 (cbrt.f64 4) (PI.f64))) (fma.f64 -1/5040 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (cbrt.f64 4) 7)) (*.f64 (pow.f64 (PI.f64) 7) (pow.f64 (cbrt.f64 2) 7))) (fma.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 uy 5))) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -4/3 (pow.f64 uy 3)))))))","(*.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))) 2)) (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 (PI.f64) 2))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(+.f64 (*.f64 -1/5040 (*.f64 (*.f64 (pow.f64 (cbrt.f64 2) 7) (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 (cbrt.f64 4) 7) (pow.f64 (PI.f64) 7)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1)))))) (+.f64 (*.f64 1/120 (*.f64 (*.f64 (pow.f64 (cbrt.f64 2) 5) (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 (cbrt.f64 4) 5) (pow.f64 (PI.f64) 5)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","(+.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux))))) (-.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 ux (+.f64 -2 (*.f64 2 ux))))) (*.f64 (+.f64 (*.f64 ux ux) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 ux (-.f64 2 ux)))) (*.f64 (*.f64 ux (+.f64 -2 (*.f64 2 ux))) 1/2)) 2)) (*.f64 (sin.f64 (*.f64 uy (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 maxCos maxCos))))))","(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (sin.f64 (cbrt.f64 (exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 2 (PI.f64)) uy)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (exp.f64 (log.f64 (sin.f64 (*.f64 (*.f64 2 (PI.f64)) uy)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (exp.f64 (*.f64 3 (log.f64 (*.f64 2 (PI.f64)))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","(*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 (PI.f64) uy)) (cos.f64 (*.f64 (PI.f64) uy)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (sin.f64 (exp.f64 (log.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (pow.f64 (pow.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3) 1/3) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (sin.f64 (pow.f64 (cbrt.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (pow.f64 (sqrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 2) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (*.f64 2 (PI.f64)) 3)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sin.f64 1))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))) (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 ux (-.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos))) maxCos) 1))))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 maxCos (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (+.f64 (*.f64 -1/4 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 3) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2)))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1 (pow.f64 ux 2)) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))) (+.f64 (*.f64 -2 ux) (*.f64 2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 ux 2)) (*.f64 2 ux)))))))","(*.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 3) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (log.f64 (exp.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (log1p.f64 (expm1.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sin.f64 1))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (exp.f64 (log1p.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)))))))","(+.f64 (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))) (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (+.f64 (*.f64 (-.f64 ux (+.f64 1 (*.f64 maxCos ux))) (+.f64 1 (*.f64 (-.f64 maxCos 1) ux))) 1)))))))","(*.f64 (sin.f64 (expm1.f64 (log1p.f64 (*.f64 uy (*.f64 2 (PI.f64)))))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64))))) 3) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (-.f64 (exp.f64 (log1p.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1))) 1)))","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (*.f64 ux (-.f64 (*.f64 (*.f64 (+.f64 -1 maxCos) (-.f64 1 maxCos)) ux) (+.f64 maxCos (+.f64 maxCos -2))))))","(*.f64 (sin.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (PI.f64)) 2) uy))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(pow.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 2)","(pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))) 3)","(*.f64 (sin.f64 (pow.f64 (cbrt.f64 (*.f64 uy (*.f64 2 (PI.f64)))) 3)) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 3) 1) (fma.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) (-.f64 1 (*.f64 (*.f64 (fma.f64 ux (+.f64 maxCos -1) 1) (-.f64 ux (fma.f64 ux maxCos 1))) 1))))))","(*.f64 (sin.f64 (*.f64 uy (*.f64 2 (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 ux (-.f64 maxCos 1) 1) (-.f64 ux (fma.f64 ux maxCos 1)) 1)))","(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))"]],"link":["."],"name":["UniformSampleCone, y"],"oracle":[23.15637740785303],"outputs":[["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))"]],"time":158.26904296875,"times":[["ux",10.370849609375],["uy",10.48681640625],["maxCos",10.22412109375],["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))",10.7861328125],["(sin.f64 (*.f64 (*.f64 uy 2) (PI.f64)))",10.60009765625],["(*.f64 (*.f64 uy 2) (PI.f64))",10.606201171875],["(*.f64 uy 2)",11.715087890625],["(sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)))))",10.614013671875],["(-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))",10.660888671875],["(*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)))",10.656982421875],["(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))",10.616943359375]],"type":"regimes"},{"compiler":[[49,40]],"egraph":[[10,286,74,0.002897415],[9,282,74,0.002489082],[8,269,74,0.002076957],[7,245,74,0.0016646649999999999],[6,209,74,0.001254332],[5,167,74,0.000906249],[4,126,74,0.000629166],[3,94,74,0.00041479099999999997],[2,75,74,0.000249166],[1,58,74,0.000142666],[0,35,82,6.8e-5]],"inputs":[["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 2 (PI.f64))) 2)) (cbrt.f64 (*.f64 2 (PI.f64))))))) (sqrt.f64 (+.f64 (*.f64 (-.f64 maxCos 1) (*.f64 (pow.f64 ux 2) (+.f64 1 (*.f64 -1 maxCos)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 maxCos (*.f64 -1 (+.f64 1 (*.f64 -1 maxCos)))) 1) ux)))))","(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) 2)))))) (sqrt.f64 (+.f64 (*.f64 (+.f64 maxCos -1) (*.f64 (pow.f64 ux 2) (+.f64 1 (neg.f64 maxCos)))) (neg.f64 (*.f64 ux (+.f64 (+.f64 maxCos (neg.f64 (+.f64 1 (neg.f64 maxCos)))) -1))))))","(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) 2)))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 maxCos -1) (*.f64 (pow.f64 ux 2) (-.f64 1 maxCos))) (*.f64 ux (+.f64 -1 (-.f64 maxCos (-.f64 1 maxCos)))))))","(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) 2)))))) (sqrt.f64 (-.f64 (*.f64 (*.f64 (pow.f64 ux 2) (-.f64 1 maxCos)) (+.f64 maxCos -1)) (*.f64 ux (+.f64 -1 (+.f64 maxCos (+.f64 maxCos -1)))))))","(*.f64 (sin.f64 (cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) (*.f64 (*.f64 4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) 2)))))) (sqrt.f64 (+.f64 (*.f64 (*.f64 (pow.f64 ux 2) (-.f64 1 maxCos)) (+.f64 maxCos -1)) (*.f64 ux (-.f64 1 (+.f64 maxCos (+.f64 maxCos -1)))))))"]],"stop":[["fuel",1],["saturated",1]],"time":13.213134765625,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[49,40]],"remove-preprocessing":[[]],"time":19.75390625,"type":"end"}]