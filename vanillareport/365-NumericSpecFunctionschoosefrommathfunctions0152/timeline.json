[{"compiler":[[11,7]],"method":["search"],"sampling":[[12,0.28473874457586135,0.6572394309730498,0.05802182445108883],[11,0.25353449859494503,0.7059960653182316,0.04046943608682341],[10,0.19502653738072695,0.7645040265324496,0.04046943608682341],[9,0.031204245980916312,0.9517295024179475,0.017066251601136173],[8,0.031204245980916312,0.9673316254084057,0.0014641286106780171],[7,0.0,0.998535871389322,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":102.9609375,"type":"analyze"},{"outcomes":[["body",256,"invalid",40.90771484375,1082],["body",256,"valid",314.72119140625,8256]],"time":364.583984375,"type":"sample"},{"compiler":[[10,6]],"egraph":[[0,3,3,2.208e-6],[20,4378,32,0.10686041500000001],[19,4378,32,0.08975283200000002],[18,4373,32,0.08113491500000002],[17,4329,32,0.07318587400000001],[16,4314,32,0.06533404000000001],[15,4230,32,0.057263165000000005],[14,4117,32,0.048988790000000004],[13,2946,32,0.040906332000000004],[12,2946,32,0.032291999],[11,2943,32,0.026016166],[10,2894,32,0.019739374],[9,2329,32,0.013372874],[8,1426,32,0.008048916],[7,263,32,0.003514041],[6,202,32,0.001718999],[5,191,40,0.001324874],[4,170,40,0.000983458],[3,130,40,0.000672874],[2,82,40,0.000391041],[1,46,40,0.000201458],[0,16,40,7.6833e-5]],"inputs":[["0","1","2"],["(/.f64 (*.f64 x (+.f64 y z)) z)","(/.f64 (*.f64 y (+.f64 x z)) z)","(/.f64 (*.f64 z (+.f64 y x)) x)","(/.f64 (*.f64 x (+.f64 z y)) y)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (*.f64 x (+.f64 y z)) z)","(/.f64 x (/.f64 z (+.f64 y z)))","(*.f64 (/.f64 x z) (+.f64 y z))","(*.f64 (+.f64 y z) (/.f64 x z))","(*.f64 x (/.f64 (+.f64 y z) z))","(fma.f64 x (/.f64 y z) x)","(/.f64 (*.f64 y (+.f64 x z)) z)","(*.f64 (/.f64 y z) (+.f64 x z))","(*.f64 (+.f64 x z) (/.f64 y z))","(*.f64 y (/.f64 (+.f64 x z) z))","(fma.f64 x (/.f64 y z) y)","(/.f64 (*.f64 z (+.f64 y x)) x)","(/.f64 z (/.f64 x (+.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 x y))","(*.f64 (+.f64 x y) (/.f64 z x))","(*.f64 z (/.f64 (+.f64 x y) x))","(fma.f64 y (/.f64 z x) z)","(fma.f64 z (/.f64 y x) z)","(/.f64 (*.f64 x (+.f64 z y)) y)","(/.f64 x (/.f64 y (+.f64 y z)))","(*.f64 (/.f64 x y) (+.f64 y z))","(*.f64 (+.f64 y z) (/.f64 x y))","(*.f64 x (/.f64 (+.f64 y z) y))","(fma.f64 z (/.f64 x y) x)"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":131.2470703125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[20,7888,8,0.060148414],[19,7637,8,0.054142997],[18,7438,8,0.047722581],[17,7149,8,0.041580663999999996],[16,6834,8,0.035745039],[15,6128,8,0.030522456],[14,1606,8,0.024474748],[13,1601,8,0.013241873000000001],[12,1596,8,0.011213039000000001],[11,1583,8,0.009201248],[10,1446,8,0.007156081],[9,1188,8,0.00522979],[8,257,8,0.002997457],[7,75,8,0.000967207],[6,60,8,0.000637207],[5,56,10,0.000507457],[4,50,10,0.00038941499999999994],[3,41,10,0.00027924899999999997],[2,28,10,0.00017920799999999998],[1,17,10,0.000104041],[0,7,10,4.3583e-5]],"inputs":[["(/.f64 (*.f64 x (+.f64 y z)) z)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 x (+.f64 y z)) z)","(*.f64 (/.f64 x z) (+.f64 y z))","(*.f64 (+.f64 y z) (/.f64 x z))","(*.f64 x (/.f64 (+.f64 y z) z))","(fma.f64 y (/.f64 x z) x)","(fma.f64 x (/.f64 y z) x)"]],"stop":[["node limit",1]],"time":72.22412109375,"type":"simplify"},{"compiler":[[16,8]],"time":0.31298828125,"type":"eval"},{"alts":[["(fma.f64 x (/.f64 y z) x)","next",3.30859375],["(/.f64 (*.f64 x (+.f64 y z)) z)","fresh",10.988984066735751]],"compiler":[[9,5],[10,6],[9,5],[10,6]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.03125],"time":1.117919921875,"type":"prune"},{"compiler":[[15,5]],"locations":[["(fma.f64 x (/.f64 y z) x)",3.104803643213747,true]],"time":3.455078125,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 x (/.f64 y z) x)","z","-inf",0.30810546875],["(fma.f64 x (/.f64 y z) x)","z","inf",0.60107421875],["(fma.f64 x (/.f64 y z) x)","z","0",0.326171875],["(fma.f64 x (/.f64 y z) x)","y","-inf",0.3759765625],["(fma.f64 x (/.f64 y z) x)","y","inf",0.382080078125],["(fma.f64 x (/.f64 y z) x)","y","0",0.496826171875],["(fma.f64 x (/.f64 y z) x)","x","-inf",0.443115234375],["(fma.f64 x (/.f64 y z) x)","x","inf",0.48193359375],["(fma.f64 x (/.f64 y z) x)","x","0",0.618896484375]],"time":4.14501953125,"type":"series"},{"count":[[1,21]],"egraph":[[2,1624,8,0.016226917],[1,124,8,0.002119334],[0,6,8,0.000140209]],"inputs":[["(fma.f64 x (/.f64 y z) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x y) z) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 x (/.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (/.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (/.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (/.f64 y z) x)) (sqrt.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 x y) z) 3) (pow.f64 x 3)) (+.f64 (*.f64 (/.f64 (*.f64 x y) z) (/.f64 (*.f64 x y) z)) (-.f64 (*.f64 x x) (*.f64 (/.f64 (*.f64 x y) z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x y) z) (/.f64 (*.f64 x y) z)) (*.f64 x x)) (-.f64 (/.f64 (*.f64 x y) z) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (/.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (/.f64 y z) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (/.f64 y z) x)))))))"]],"rules":[["egg-rr",21]],"stop":[["node limit",1]],"time":33.27294921875,"type":"rewrite"},{"count":[[57,28]],"egraph":[[9,1138,264,0.017370124],[8,1133,264,0.014784374],[7,1119,264,0.012193582],[6,940,264,0.009443416],[5,688,264,0.006564583000000001],[4,371,264,0.003313916],[3,181,264,0.001339374],[2,77,264,0.000593166],[1,36,324,0.000263291],[0,16,324,0.000106166]],"inputs":[["(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 (/.f64 y z) x)","(*.f64 y (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 (/.f64 y z) x)","(*.f64 y (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 (/.f64 y z) x)","(*.f64 y (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(fma.f64 (/.f64 y z) x x)","(fma.f64 y (/.f64 x z) x)"]],"stop":[["saturated",1]],"time":33.117919921875,"type":"simplify"},{"compiler":[[287,83]],"time":2.6689453125,"type":"eval"},{"alts":[["(fma.f64 y (/.f64 x z) x)","fresh",5.9973962147273],["(fma.f64 x (/.f64 y z) x)","done",3.30859375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))","next",3.9520265625901474],["(+.f64 x (/.f64 (*.f64 x y) z))","fresh",4.770903951396483]],"compiler":[[9,5],[9,5],[20,9],[10,6],[9,5],[20,9],[10,6]],"count":[[30,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[28,3],"picked":[1,1]}],"min-error":[0.00390625],"time":5.2431640625,"type":"prune"},{"compiler":[[49,12]],"locations":[["(cbrt.f64 (fma.f64 x (/.f64 y z) x))",0.1015625,true],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))",0.26171875,true],["(pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)",0.5241012695368841,true],["(fma.f64 x (/.f64 y z) x)",3.104803643213747,false]],"time":7.94189453125,"type":"localize"},{"count":[[3,60]],"series":[["(cbrt.f64 (fma.f64 x (/.f64 y z) x))","z","-inf",0.31591796875],["(cbrt.f64 (fma.f64 x (/.f64 y z) x))","z","inf",0.326904296875],["(cbrt.f64 (fma.f64 x (/.f64 y z) x))","z","0",0.217041015625],["(cbrt.f64 (fma.f64 x (/.f64 y z) x))","y","-inf",0.219970703125],["(cbrt.f64 (fma.f64 x (/.f64 y z) x))","y","inf",0.2421875],["(cbrt.f64 (fma.f64 x (/.f64 y z) x))","y","0",0.3671875],["(cbrt.f64 (fma.f64 x (/.f64 y z) x))","x","-inf",0.239990234375],["(cbrt.f64 (fma.f64 x (/.f64 y z) x))","x","inf",0.22412109375],["(cbrt.f64 (fma.f64 x (/.f64 y z) x))","x","0",0.4501953125],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))","z","-inf",1.074951171875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))","z","inf",0.218017578125],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))","z","0",0.23193359375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))","y","-inf",0.22802734375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))","y","inf",0.221923828125],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))","y","0",0.242919921875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))","x","-inf",0.2890625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))","x","inf",0.2919921875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))","x","0",0.32080078125],["(pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)","z","-inf",1.403076171875],["(pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)","z","inf",0.948974609375],["(pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)","z","0",0.31396484375],["(pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)","y","-inf",0.370849609375],["(pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)","y","inf",0.379150390625],["(pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)","y","0",1.281005859375],["(pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)","x","-inf",0.34619140625],["(pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)","x","inf",0.40185546875],["(pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)","x","0",0.590087890625]],"time":12.151123046875,"type":"series"},{"count":[[3,53]],"egraph":[[2,2277,31,0.020723417],[1,210,31,0.003333584],[0,10,31,0.000276417]],"inputs":[["(pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))","(cbrt.f64 (fma.f64 x (/.f64 y z) x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (/.f64 y z) x)) (pow.f64 (fma.f64 x (/.f64 y z) x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 1/6) (sqrt.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 2)) (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 x (/.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (/.f64 z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (/.f64 z y)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 x (/.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 x (/.f64 z y)) 3) (pow.f64 x 3)) (+.f64 (*.f64 (/.f64 x (/.f64 z y)) (/.f64 x (/.f64 z y))) (-.f64 (*.f64 x x) (*.f64 (/.f64 x (/.f64 z y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (/.f64 z y)) (/.f64 x (/.f64 z y))) (*.f64 x x)) (-.f64 (/.f64 x (/.f64 z y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (/.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (/.f64 y z) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 y z) x)))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 2) (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 1/6) (pow.f64 (fma.f64 x (/.f64 y z) x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 x (/.f64 y z) x)) 1/3) (pow.f64 (sqrt.f64 (fma.f64 x (/.f64 y z) x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (/.f64 y z) x) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))))"]],"rules":[["egg-rr",20],["egg-rr",17],["egg-rr",16]],"stop":[["node limit",1]],"time":43.122802734375,"type":"rewrite"},{"count":[[113,84]],"egraph":[[3,7486,1438,0.026286958],[2,1887,1441,0.013460958],[1,493,1509,0.003593374],[0,148,1717,0.000791833]],"inputs":[["(pow.f64 (pow.f64 x 2) 1/3)","(+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))))","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 1 (pow.f64 z 2)))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 1 (pow.f64 z 2)))))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z)))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (/.f64 1 (pow.f64 z 3)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 3)) (pow.f64 (pow.f64 x 7) 1/3))))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 x 2) (pow.f64 z 3)))))) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 1 (pow.f64 z 2)))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 1 (pow.f64 z 2)))))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))))))","(pow.f64 (pow.f64 x 2) 1/3)","(+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))))))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (pow.f64 x 7) 1/3)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (pow.f64 y 3)))) (pow.f64 z 3)))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 x 2)) (pow.f64 z 3)))))))))","(pow.f64 (pow.f64 x 2) 1/3)","(+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))))))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (pow.f64 y 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (pow.f64 x 7) 1/3))))) (pow.f64 (/.f64 1 x) 1/3))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (*.f64 (pow.f64 y 3) (pow.f64 x 2))))) (pow.f64 z 3)))))))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(pow.f64 x 1/3)","(+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 11)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 11)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (/.f64 1 (pow.f64 z 3)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 3)) (pow.f64 (pow.f64 x 7) 1/3)))))))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z))))))","(pow.f64 x 1/3)","(+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 11)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 11)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (pow.f64 x 7) 1/3)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (pow.f64 y 3)))) (pow.f64 z 3)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z))))))","(pow.f64 x 1/3)","(+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 11)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 11)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (pow.f64 y 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (pow.f64 x 7) 1/3))))) (pow.f64 z 3)) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))))","(+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z))))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)) (cbrt.f64 (*.f64 x x)))","(fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 x 10) 1/18) (/.f64 (/.f64 z y) (pow.f64 (pow.f64 x 10) 1/18))) (cbrt.f64 (*.f64 x x)))","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 1 (pow.f64 z 2)))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 1 (pow.f64 z 2)))))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z)))))","(fma.f64 (*.f64 y y) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 1 (*.f64 z z))) -1/9) (+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)))))","(fma.f64 (*.f64 y y) (/.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) -1/9) (*.f64 z z)) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)) (cbrt.f64 (*.f64 x x))))","(fma.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 -1/9 (*.f64 z z))) (fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 x 10) 1/18) (/.f64 (/.f64 z y) (pow.f64 (pow.f64 x 10) 1/18))) (cbrt.f64 (*.f64 x x))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (/.f64 1 (pow.f64 z 3)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 3)) (pow.f64 (pow.f64 x 7) 1/3))))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 x 2) (pow.f64 z 3)))))) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 1 (pow.f64 z 2)))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 1 (pow.f64 z 2)))))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))))))","(fma.f64 (pow.f64 y 3) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 x 7)) (/.f64 1 (pow.f64 z 3))) (*.f64 -2/9 (*.f64 (cbrt.f64 (pow.f64 x 7)) (/.f64 1 (pow.f64 z 3)))))) (*.f64 -2/27 (/.f64 (*.f64 x x) (pow.f64 z 3)))) (fma.f64 (*.f64 y y) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 1 (*.f64 z z))) -1/9) (+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z))))))","(fma.f64 (pow.f64 y 3) (fma.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 x))) (*.f64 (/.f64 (cbrt.f64 (pow.f64 x 7)) (pow.f64 z 3)) -5/27) (*.f64 -2/27 (/.f64 x (/.f64 (pow.f64 z 3) x)))) (fma.f64 (*.f64 y y) (/.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) -1/9) (*.f64 z z)) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)) (cbrt.f64 (*.f64 x x)))))","(fma.f64 y (*.f64 y (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 -1/9 (*.f64 z z)))) (fma.f64 (pow.f64 y 3) (fma.f64 (/.f64 -5/27 (/.f64 (pow.f64 z 3) (cbrt.f64 (pow.f64 x 7)))) (*.f64 -2/3 (cbrt.f64 (/.f64 1 x))) (*.f64 -2/27 (/.f64 (*.f64 x x) (pow.f64 z 3)))) (fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 x 10) 1/18) (/.f64 (/.f64 z y) (pow.f64 (pow.f64 x 10) 1/18))) (cbrt.f64 (*.f64 x x)))))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))))","(+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z))))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)) (cbrt.f64 (*.f64 x x)))","(fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 x 10) 1/18) (/.f64 (/.f64 z y) (pow.f64 (pow.f64 x 10) 1/18))) (cbrt.f64 (*.f64 x x)))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))))))","(fma.f64 (*.f64 y y) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 1 (*.f64 z z))) -1/9) (+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)))))","(fma.f64 (*.f64 y y) (/.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) -1/9) (*.f64 z z)) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)) (cbrt.f64 (*.f64 x x))))","(fma.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 -1/9 (*.f64 z z))) (fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 x 10) 1/18) (/.f64 (/.f64 z y) (pow.f64 (pow.f64 x 10) 1/18))) (cbrt.f64 (*.f64 x x))))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (pow.f64 x 7) 1/3)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (pow.f64 y 3)))) (pow.f64 z 3)))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 x 2)) (pow.f64 z 3)))))))))","(fma.f64 1/9 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 (*.f64 y y) (*.f64 z z))) (fma.f64 -2/9 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 (*.f64 y y) (*.f64 z z))) (+.f64 (cbrt.f64 (*.f64 x x)) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7)))) (*.f64 1/27 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))))) (pow.f64 z 3))) (*.f64 -2/27 (/.f64 (*.f64 (*.f64 x x) (pow.f64 y 3)) (pow.f64 z 3))))))))","(+.f64 (+.f64 (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)) (cbrt.f64 (*.f64 x x))) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (*.f64 (/.f64 y z) (/.f64 y z))) -1/9)) (fma.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))) -5/27)) (pow.f64 z 3)) (*.f64 -2/27 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (*.f64 x x)))))","(+.f64 (fma.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 -1/9 (*.f64 z z))) (fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 x 10) 1/18) (/.f64 (/.f64 z y) (pow.f64 (pow.f64 x 10) 1/18))) (cbrt.f64 (*.f64 x x)))) (fma.f64 -2/3 (*.f64 (/.f64 (cbrt.f64 (/.f64 1 x)) (pow.f64 z 3)) (*.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))) -5/27)) (*.f64 (pow.f64 y 3) (*.f64 -2/27 (/.f64 (*.f64 x x) (pow.f64 z 3))))))","(+.f64 (cbrt.f64 (*.f64 x x)) (fma.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) -1/9) (fma.f64 -2/3 (*.f64 (/.f64 (cbrt.f64 (/.f64 1 x)) (pow.f64 z 3)) (*.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))) -5/27)) (fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 x 10) 1/18) (/.f64 (/.f64 z y) (pow.f64 (pow.f64 x 10) 1/18))) (*.f64 -2/27 (/.f64 x (/.f64 (pow.f64 (/.f64 z y) 3) x)))))))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))))","(+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z))))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)) (cbrt.f64 (*.f64 x x)))","(fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 x 10) 1/18) (/.f64 (/.f64 z y) (pow.f64 (pow.f64 x 10) 1/18))) (cbrt.f64 (*.f64 x x)))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))))))","(fma.f64 (*.f64 y y) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 1 (*.f64 z z))) -1/9) (+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)))))","(fma.f64 (*.f64 y y) (/.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) -1/9) (*.f64 z z)) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)) (cbrt.f64 (*.f64 x x))))","(fma.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 -1/9 (*.f64 z z))) (fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 x 10) 1/18) (/.f64 (/.f64 z y) (pow.f64 (pow.f64 x 10) 1/18))) (cbrt.f64 (*.f64 x x))))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 14)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 10)) 1/9) (/.f64 y z))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (pow.f64 y 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (pow.f64 x 7) 1/3))))) (pow.f64 (/.f64 1 x) 1/3))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (*.f64 (pow.f64 y 3) (pow.f64 x 2))))) (pow.f64 z 3)))))))","(fma.f64 1/9 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 (*.f64 y y) (*.f64 z z))) (fma.f64 -2/9 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 (*.f64 y y) (*.f64 z z))) (+.f64 (cbrt.f64 (*.f64 x x)) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)) (neg.f64 (/.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 -1/27 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))) (*.f64 2/9 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7)))))) (*.f64 2/27 (*.f64 (*.f64 x x) (pow.f64 y 3)))) (pow.f64 z 3)))))))","(+.f64 (-.f64 (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 x 10) 1/18) (pow.f64 (pow.f64 x 10) 1/18)) (/.f64 y z)) (cbrt.f64 (*.f64 x x))) (/.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))) 5/27)) (*.f64 (*.f64 x (*.f64 x (pow.f64 y 3))) 2/27)) (pow.f64 z 3))) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (*.f64 (/.f64 y z) (/.f64 y z))) -1/9))","(-.f64 (fma.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (pow.f64 x 14) 1/18) (pow.f64 (pow.f64 x 14) 1/18)) (/.f64 -1/9 (*.f64 z z))) (fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 x 10) 1/18) (/.f64 (/.f64 z y) (pow.f64 (pow.f64 x 10) 1/18))) (cbrt.f64 (*.f64 x x)))) (/.f64 (fma.f64 (pow.f64 y 3) (*.f64 (*.f64 x x) 2/27) (*.f64 (*.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))) 5/27) (*.f64 -2/3 (cbrt.f64 (/.f64 1 x))))) (pow.f64 z 3)))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 (/.f64 y z) x)","(*.f64 x (/.f64 y z))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 (/.f64 y z) x)","(*.f64 x (/.f64 y z))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 (/.f64 y z) x)","(*.f64 x (/.f64 y z))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(pow.f64 x 1/3)","(cbrt.f64 x)","(+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z))))","(+.f64 (cbrt.f64 x) (*.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18)))))","(fma.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))) (cbrt.f64 x))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 11)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z)))))","(fma.f64 -1/9 (*.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (+.f64 (cbrt.f64 x) (*.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))))))","(fma.f64 -1/9 (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (fma.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))) (cbrt.f64 x)))","(fma.f64 (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18)) (/.f64 (*.f64 y 1/3) z) (fma.f64 (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18)) (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) -1/9) (cbrt.f64 x)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 11)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (/.f64 1 (pow.f64 z 3)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 3)) (pow.f64 (pow.f64 x 7) 1/3)))))))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z))))))","(fma.f64 -1/9 (*.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (+.f64 (cbrt.f64 x) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) (*.f64 (pow.f64 y 3) (fma.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 x 7)) (/.f64 1 (pow.f64 z 3))) (*.f64 -2/9 (*.f64 (cbrt.f64 (pow.f64 x 7)) (/.f64 1 (pow.f64 z 3))))))) (*.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18)))))))","(+.f64 (fma.f64 -1/9 (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (fma.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))) (cbrt.f64 x))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) (*.f64 (*.f64 (pow.f64 y 3) (*.f64 (/.f64 (cbrt.f64 (pow.f64 x 7)) (pow.f64 z 3)) -5/27)) -1/3)))","(fma.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (fma.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))) (fma.f64 -1/3 (*.f64 (/.f64 -5/27 (/.f64 (pow.f64 z 3) (cbrt.f64 (pow.f64 x 7)))) (*.f64 (pow.f64 y 3) (cbrt.f64 (/.f64 (/.f64 1 x) x)))) (cbrt.f64 x))))","(pow.f64 x 1/3)","(cbrt.f64 x)","(+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z))))","(+.f64 (cbrt.f64 x) (*.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18)))))","(fma.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))) (cbrt.f64 x))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 11)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z)))))","(fma.f64 -1/9 (*.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (+.f64 (cbrt.f64 x) (*.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))))))","(fma.f64 -1/9 (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (fma.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))) (cbrt.f64 x)))","(fma.f64 (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18)) (/.f64 (*.f64 y 1/3) z) (fma.f64 (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18)) (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) -1/9) (cbrt.f64 x)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 11)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (pow.f64 x 7) 1/3)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (pow.f64 y 3)))) (pow.f64 z 3)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z))))))","(fma.f64 -1/9 (*.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (+.f64 (cbrt.f64 x) (fma.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7)))) (*.f64 1/27 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))))) (pow.f64 z 3)) (cbrt.f64 (/.f64 1 (*.f64 x x)))) (*.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18)))))))","(+.f64 (fma.f64 -1/9 (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (fma.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))) (cbrt.f64 x))) (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))) -5/27) (pow.f64 z 3)) (*.f64 -1/3 (cbrt.f64 (/.f64 1 (*.f64 x x))))))","(fma.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (fma.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))) (fma.f64 (/.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))) (/.f64 (pow.f64 z 3) -5/27)) (*.f64 -1/3 (cbrt.f64 (/.f64 (/.f64 1 x) x))) (cbrt.f64 x))))","(pow.f64 x 1/3)","(cbrt.f64 x)","(+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z))))","(+.f64 (cbrt.f64 x) (*.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18)))))","(fma.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))) (cbrt.f64 x))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 11)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z)))))","(fma.f64 -1/9 (*.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (+.f64 (cbrt.f64 x) (*.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))))))","(fma.f64 -1/9 (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (fma.f64 1/3 (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18))) (cbrt.f64 x)))","(fma.f64 (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18)) (/.f64 (*.f64 y 1/3) z) (fma.f64 (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18)) (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) -1/9) (cbrt.f64 x)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 11)) 1/9) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (pow.f64 y 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (pow.f64 x 7) 1/3))))) (pow.f64 z 3)) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/9) (/.f64 y z))))))","(fma.f64 -1/9 (*.f64 (/.f64 (*.f64 y y) (*.f64 z z)) (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (+.f64 (cbrt.f64 x) (*.f64 1/3 (+.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) (/.f64 (fma.f64 -1/27 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))) (*.f64 2/9 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))))) (pow.f64 z 3))) (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18)))))))","(fma.f64 -1/9 (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18))) (fma.f64 1/3 (fma.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))) 5/27) (pow.f64 z 3)) (*.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18)))) (cbrt.f64 x)))","(fma.f64 1/3 (fma.f64 (/.f64 y z) (*.f64 (pow.f64 (pow.f64 x 7) 1/18) (pow.f64 (pow.f64 x 7) 1/18)) (*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) x)) (/.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 x 7))) (/.f64 (pow.f64 z 3) 5/27)))) (fma.f64 (*.f64 (pow.f64 (pow.f64 x 11) 1/18) (pow.f64 (pow.f64 x 11) 1/18)) (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) -1/9) (cbrt.f64 x)))"]],"stop":[["node limit",1]],"time":51.427001953125,"type":"simplify"},{"compiler":[[4867,2191]],"time":44.191162109375,"type":"eval"},{"alts":[["(fma.f64 y (/.f64 x z) x)","fresh",5.9973962147273],["(fma.f64 x (/.f64 y z) x)","done",3.30859375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","next",4.137554333284065],["(+.f64 (/.f64 (*.f64 y x) z) x)","fresh",4.770903951396483]],"compiler":[[9,5],[9,5],[23,12],[10,6],[9,5],[23,12],[10,6]],"count":[[176,4]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[172,2],"picked":[1,0]}],"min-error":[0],"time":28.701904296875,"type":"prune"},{"compiler":[[71,18]],"locations":[["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))",0.26171875,true],["(pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2)",0.5241012695368841,false],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3)",0.7303277832848187,true],["(fma.f64 x (/.f64 y z) x)",3.104803643213747,false]],"time":11.317138671875,"type":"localize"},{"count":[[2,72]],"series":[["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","z","-inf",0.154052734375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","z","inf",0.153076171875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","z","0",0.164794921875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","y","-inf",0.158203125],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","y","inf",0.17578125],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","y","0",0.151123046875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","x","-inf",0.16796875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","x","inf",0.177001953125],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","x","0",0.166015625],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3)","z","-inf",1.553955078125],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3)","z","inf",1.906005859375],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3)","z","0",1.699951171875],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3)","y","-inf",2.60009765625],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3)","y","inf",2.931884765625],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3)","y","0",1.64208984375],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3)","x","-inf",12.095947265625],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3)","x","inf",6.3837890625],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3)","x","0",16.056884765625]],"time":48.824951171875,"type":"series"},{"count":[[2,104]],"egraph":[[2,2707,18,0.025734791],[1,274,18,0.0040609159999999995],[0,13,18,0.000372583]],"inputs":[["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3)","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) (pow.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 1/18) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 1/18) 4) (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 1/18) 4)) (*.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))) (pow.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 1/18) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 1/18) (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 5/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 1/6) (pow.f64 (fma.f64 x (/.f64 y z) x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 5/6) (pow.f64 (fma.f64 x (/.f64 y z) x) 1/18))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 1/18) 4) 1) (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))) 2) (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (fma.f64 x (/.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 x (/.f64 y z) x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (fma.f64 x (/.f64 y z) x))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/6 (log.f64 (fma.f64 x (/.f64 y z) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 x (/.f64 y z) x)) 1) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 x (/.f64 y z) x)) 1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/9 (log.f64 (fma.f64 x (/.f64 y z) x))) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2/3 (log.f64 (fma.f64 x (/.f64 y z) x))) 1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/9 (log.f64 (fma.f64 x (/.f64 y z) x))) 3/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 1/3) (*.f64 2/3 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 1/9 (log.f64 (fma.f64 x (/.f64 y z) x))) 1) (*.f64 2/3 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 2/3 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))) (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 2/3 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))) (*.f64 (*.f64 1/9 (log.f64 (fma.f64 x (/.f64 y z) x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 1/9 (log.f64 (fma.f64 x (/.f64 y z) x))) 3/2) (*.f64 1/6 (log.f64 (fma.f64 x (/.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 1/6 (log.f64 (fma.f64 x (/.f64 y z) x))) (*.f64 (*.f64 1/9 (log.f64 (fma.f64 x (/.f64 y z) x))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 1/9 (log.f64 (fma.f64 x (/.f64 y z) x))) 3/2) (*.f64 (*.f64 1/9 (log.f64 (fma.f64 x (/.f64 y z) x))) 3/2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 x (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (/.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x (/.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (/.f64 y z)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 x (/.f64 y z) x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 x (/.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x (/.f64 y z) x)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x (/.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 x (/.f64 y z) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (/.f64 y z)) 3) (pow.f64 x 3)) (+.f64 (pow.f64 (*.f64 x (/.f64 y z)) 2) (-.f64 (*.f64 x x) (*.f64 (*.f64 x (/.f64 y z)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (/.f64 y z)) 2) (*.f64 x x)) (-.f64 (*.f64 x (/.f64 y z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (/.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 1/18) 4) 9/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (/.f64 y z) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 x (/.f64 y z) x))) 2)) (cbrt.f64 (log.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 x (/.f64 y z) x)))) (sqrt.f64 (log.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 x (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (pow.f64 (exp.f64 x) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 x) (/.f64 y z)) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (/.f64 y z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 x (/.f64 y z) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 x (/.f64 y z) x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 x (/.f64 y z) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 x (/.f64 y z) x)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 x (/.f64 y z) x)) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (fma.f64 x (/.f64 y z) x)) 1/3) (*.f64 2/3 (log.f64 (fma.f64 x (/.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 1) (*.f64 2/3 (log.f64 (fma.f64 x (/.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) (*.f64 (*.f64 2/3 (log.f64 (fma.f64 x (/.f64 y z) x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (fma.f64 x (/.f64 y z) x)) 1/3) (*.f64 (*.f64 2/3 (log.f64 (fma.f64 x (/.f64 y z) x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 1) (*.f64 (*.f64 2/3 (log.f64 (fma.f64 x (/.f64 y z) x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 2/3 (log.f64 (fma.f64 x (/.f64 y z) x))) 1) (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 2/3 (log.f64 (fma.f64 x (/.f64 y z) x))) (*.f64 (log.f64 (fma.f64 x (/.f64 y z) x)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 2/3 (log.f64 (fma.f64 x (/.f64 y z) x))) 1) (*.f64 (log.f64 (fma.f64 x (/.f64 y z) x)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 2/3 (log.f64 (fma.f64 x (/.f64 y z) x))) (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 2/3 (log.f64 (fma.f64 x (/.f64 y z) x))) 1) (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 x (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y z) x x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 x (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (/.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 x (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 x (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 x (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (/.f64 y z)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 y z))) 2) (cbrt.f64 (*.f64 x (/.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (/.f64 y z))) (sqrt.f64 (*.f64 x (/.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) (/.f64 1 z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (/.f64 y z)) 2)) (cbrt.f64 (/.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 (/.f64 y z))) (sqrt.f64 (/.f64 y z)) x)))))"]],"rules":[["egg-rr",63],["egg-rr",41]],"stop":[["node limit",1]],"time":51.030029296875,"type":"rewrite"},{"count":[[176,159]],"egraph":[[2,6471,3244,0.028000542],[1,1398,3656,0.012017792],[0,383,4392,0.002283958]],"inputs":[["(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (/.f64 y z))) (log.f64 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (/.f64 y z))) (log.f64 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (/.f64 y z))) (log.f64 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (/.f64 y z))) (log.f64 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (/.f64 y z)))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (/.f64 y z)))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (/.f64 y z)))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (/.f64 y z)))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1))))) 3)","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))","(+.f64 (*.f64 y (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 z) (pow.f64 x 1/3)))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 z) (pow.f64 x 1/3)))))) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))","(+.f64 (*.f64 y (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 z) (pow.f64 x 1/3)))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 z) (pow.f64 x 1/3)))))) (+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -4/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 2)) (pow.f64 x 1/3)))) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 2)) (pow.f64 x 1/3)))) (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 -8/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 2)))) (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 2)))))))))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (/.f64 (+.f64 (*.f64 -8/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 2)))) (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 2))))) z))) (+.f64 (*.f64 -8/729 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 3)) (pow.f64 x 1/3)))) (+.f64 (*.f64 68/2187 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 3)) (pow.f64 x 1/3)))) (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 136/2187 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 3)))) (*.f64 -8/729 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 3)))))))))) (+.f64 (*.f64 y (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 z) (pow.f64 x 1/3)))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 z) (pow.f64 x 1/3)))))) (+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -4/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 2)) (pow.f64 x 1/3)))) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 2)) (pow.f64 x 1/3)))) (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 -8/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 2)))) (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 2))))))))))))","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3)","(+.f64 (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z) y)) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z) y)) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3)))","(+.f64 (*.f64 2/81 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) (pow.f64 z 2)) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z) y)) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 z 2)) (*.f64 1/162 (pow.f64 z 2))) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3)) (pow.f64 y 2)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (pow.f64 z 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2))))))) (pow.f64 y 2)))))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (*.f64 z (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2)))))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (+.f64 (*.f64 -1/162 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (*.f64 1/4374 (pow.f64 z 3))))))) (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y))))))) (pow.f64 y 3)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 z 2)) (*.f64 1/162 (pow.f64 z 2))) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3)) (pow.f64 y 2)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 z 2)) (*.f64 1/162 (pow.f64 z 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z)) (pow.f64 y 3))) (+.f64 (*.f64 2/81 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) (pow.f64 z 2)) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z) y)) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z) y)) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) (*.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (pow.f64 z 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2)))))) z)) (pow.f64 y 3))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (pow.f64 z 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2))))))) (pow.f64 y 2)) (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) (+.f64 (*.f64 -1/162 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (*.f64 1/4374 (pow.f64 z 3))))) (pow.f64 y 3)))))))))))","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3)","(+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z)) (*.f64 -1/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z))) y)))","(+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 z 2)) (*.f64 1/162 (pow.f64 z 2))) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3)) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (pow.f64 z 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2))))))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z)) (*.f64 -1/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z))) y)) (*.f64 2/81 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) (pow.f64 z 2)) (pow.f64 y 2)))))))","(+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 z 2)) (*.f64 1/162 (pow.f64 z 2))) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3)) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (pow.f64 z 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2))))))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z)) (*.f64 -1/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z))) y)) (+.f64 (*.f64 2/81 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) (pow.f64 z 2)) (pow.f64 y 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 z 2)) (*.f64 1/162 (pow.f64 z 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z))) (+.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (*.f64 z (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2)))))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (*.f64 1/162 (pow.f64 z 3)) (*.f64 -1/4374 (pow.f64 z 3))))))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z))))))) (+.f64 (*.f64 -1/9 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) (*.f64 z (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (pow.f64 z 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2))))))))) (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (*.f64 1/162 (pow.f64 z 3)) (*.f64 -1/4374 (pow.f64 z 3)))))))) (pow.f64 y 3))))))))","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3)","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) y)) (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) y))) z) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) y)) (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) y))) z) (+.f64 (*.f64 (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) (pow.f64 y 2))) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) (pow.f64 y 2))) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) (+.f64 (*.f64 1/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 2))) (*.f64 -8/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 2))))))) (pow.f64 z 2)) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3)))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) y)) (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) y))) z) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 136/2187 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 3))) (*.f64 -8/729 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 3)))) (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z)))))) (+.f64 (*.f64 -8/729 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) (pow.f64 y 3))) (+.f64 (*.f64 68/2187 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) (pow.f64 y 3))) (*.f64 1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) (+.f64 (*.f64 1/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 2))) (*.f64 -8/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 2))))) y))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) (pow.f64 y 2))) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) (pow.f64 y 2))) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) (+.f64 (*.f64 1/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 2))) (*.f64 -8/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 2))))))) (pow.f64 z 2)) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 y z) (pow.f64 x 1/3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 y z) (pow.f64 x 1/3)))) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 y z) (pow.f64 x 1/3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 y z) (pow.f64 x 1/3)))) (+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (/.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (pow.f64 y 2))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) (pow.f64 z 2))) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (pow.f64 x 1/3)))) (*.f64 (/.f64 (+.f64 (*.f64 -1/18 (pow.f64 y 2)) (*.f64 1/162 (pow.f64 y 2))) (pow.f64 z 2)) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))))))))","(+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1/162 (pow.f64 y 3)) (*.f64 1/4374 (pow.f64 y 3)))) (pow.f64 z 3)) (pow.f64 x 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (/.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (pow.f64 y 2))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) (pow.f64 z 2))) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (pow.f64 x 1/3)))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 y z) (pow.f64 x 1/3)))) (+.f64 (*.f64 1/9 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (pow.f64 y 2))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) y) (pow.f64 z 3)) (pow.f64 (*.f64 1 x) 1/9))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1/162 (pow.f64 y 3)) (*.f64 1/4374 (pow.f64 y 3)))))) (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (*.f64 y (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2))))))) (pow.f64 z 3))) (+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 y z) (pow.f64 x 1/3)))) (+.f64 (*.f64 2/9 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 y 2)) (*.f64 1/162 (pow.f64 y 2))) y) (pow.f64 z 3)) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))) (*.f64 (/.f64 (+.f64 (*.f64 -1/18 (pow.f64 y 2)) (*.f64 1/162 (pow.f64 y 2))) (pow.f64 z 2)) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))))))))))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))","(+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 y (pow.f64 x 1/3)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 y (pow.f64 x 1/3))))) z)))","(+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (/.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (pow.f64 y 2))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 y (pow.f64 x 1/3)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 y (pow.f64 x 1/3))))) z)) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (pow.f64 x 1/3)))) (*.f64 (/.f64 (+.f64 (*.f64 -1/18 (pow.f64 y 2)) (*.f64 1/162 (pow.f64 y 2))) (pow.f64 z 2)) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))))))","(+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (/.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (pow.f64 y 2))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 y (pow.f64 x 1/3)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 y (pow.f64 x 1/3))))) z)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (*.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (pow.f64 y 2))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) y))) (+.f64 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1/4374 (pow.f64 y 3)) (*.f64 1/162 (pow.f64 y 3)))) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (+.f64 (*.f64 -2/9 (*.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 y 2)) (*.f64 1/162 (pow.f64 y 2))) y) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (*.f64 y (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 -1/4374 (pow.f64 y 3)) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (*.f64 1/162 (pow.f64 y 3))))))) (pow.f64 (*.f64 1 x) 1/9))))) (pow.f64 z 3))) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 -1/18 (pow.f64 y 2)) (*.f64 1/162 (pow.f64 y 2))) (pow.f64 z 2)) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (pow.f64 x 1/3)))))))))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (/.f64 y z))) (log.f64 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log1p.f64 (/.f64 y z)) (log.f64 x))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (/.f64 y z))) (log.f64 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log1p.f64 (/.f64 y z)) (log.f64 x))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (/.f64 y z))) (log.f64 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log1p.f64 (/.f64 y z)) (log.f64 x))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (/.f64 y z))) (log.f64 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log1p.f64 (/.f64 y z)) (log.f64 x))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (/.f64 y z)))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log1p.f64 (/.f64 y z)) (log.f64 x))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (/.f64 y z)))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log1p.f64 (/.f64 y z)) (log.f64 x))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (/.f64 y z)))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log1p.f64 (/.f64 y z)) (log.f64 x))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (/.f64 y z)))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log1p.f64 (/.f64 y z)) (log.f64 x))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (fma.f64 -1 (/.f64 y z) -1)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (fma.f64 (/.f64 y z) -1 -1)) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (-.f64 -1 (/.f64 y z))) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (fma.f64 -1 (/.f64 y z) -1)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (fma.f64 (/.f64 y z) -1 -1)) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (-.f64 -1 (/.f64 y z))) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (fma.f64 -1 (/.f64 y z) -1)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (fma.f64 (/.f64 y z) -1 -1)) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (-.f64 -1 (/.f64 y z))) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (fma.f64 -1 (/.f64 y z) -1)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (fma.f64 (/.f64 y z) -1 -1)) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (-.f64 -1 (/.f64 y z))) (log.f64 (/.f64 -1 x)))) 3)","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))","(*.f64 1 (cbrt.f64 x))","(cbrt.f64 x)","(+.f64 (*.f64 y (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 z) (pow.f64 x 1/3)))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 z) (pow.f64 x 1/3)))))) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))","(fma.f64 y (*.f64 (*.f64 1 (*.f64 (cbrt.f64 x) (/.f64 1 z))) 1/3) (*.f64 1 (cbrt.f64 x)))","(fma.f64 y (*.f64 1/3 (/.f64 (cbrt.f64 x) z)) (cbrt.f64 x))","(+.f64 (*.f64 y (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 z) (pow.f64 x 1/3)))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 z) (pow.f64 x 1/3)))))) (+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -4/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 2)) (pow.f64 x 1/3)))) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 2)) (pow.f64 x 1/3)))) (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 -8/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 2)))) (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 2)))))))))))","(fma.f64 y (*.f64 (*.f64 1 (*.f64 (cbrt.f64 x) (/.f64 1 z))) 1/3) (fma.f64 1 (cbrt.f64 x) (*.f64 (*.f64 y y) (+.f64 (+.f64 (*.f64 -4/81 (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 z z)))) (*.f64 2/81 (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 z z))))) (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 (*.f64 (/.f64 1 (*.f64 z z)) (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) -7/81))))))","(fma.f64 y (*.f64 1/3 (/.f64 (cbrt.f64 x) z)) (fma.f64 (*.f64 y y) (+.f64 (*.f64 (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (*.f64 z z))) -7/81) (*.f64 (/.f64 (cbrt.f64 x) (*.f64 z z)) -2/81)) (cbrt.f64 x)))","(fma.f64 y (*.f64 1/3 (/.f64 (cbrt.f64 x) z)) (fma.f64 (*.f64 y y) (+.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (/.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (*.f64 z z))) -7/81) (*.f64 (/.f64 (cbrt.f64 x) (*.f64 z z)) -2/81)) (cbrt.f64 x)))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (/.f64 (+.f64 (*.f64 -8/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 2)))) (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 2))))) z))) (+.f64 (*.f64 -8/729 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 3)) (pow.f64 x 1/3)))) (+.f64 (*.f64 68/2187 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 3)) (pow.f64 x 1/3)))) (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 136/2187 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 3)))) (*.f64 -8/729 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 3)))))))))) (+.f64 (*.f64 y (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 z) (pow.f64 x 1/3)))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 z) (pow.f64 x 1/3)))))) (+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -4/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 2)) (pow.f64 x 1/3)))) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 z 2)) (pow.f64 x 1/3)))) (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 -8/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 2)))) (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (/.f64 1 (pow.f64 z 2))))))))))))","(fma.f64 (pow.f64 y 3) (fma.f64 1/9 (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (*.f64 (*.f64 (/.f64 1 (*.f64 z z)) (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) -7/81) z)) (+.f64 (+.f64 (*.f64 -8/729 (*.f64 (cbrt.f64 x) (/.f64 1 (pow.f64 z 3)))) (*.f64 68/2187 (*.f64 (cbrt.f64 x) (/.f64 1 (pow.f64 z 3))))) (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (/.f64 1 (pow.f64 z 3))) 112/2187)))) (fma.f64 y (*.f64 (*.f64 1 (*.f64 (cbrt.f64 x) (/.f64 1 z))) 1/3) (fma.f64 1 (cbrt.f64 x) (*.f64 (*.f64 y y) (+.f64 (+.f64 (*.f64 -4/81 (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 z z)))) (*.f64 2/81 (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 z z))))) (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 (*.f64 (/.f64 1 (*.f64 z z)) (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) -7/81)))))))","(fma.f64 (pow.f64 y 3) (fma.f64 1/9 (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (*.f64 z z))) -7/81) z) (+.f64 (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) 112/2187) (pow.f64 z 3))) (*.f64 (/.f64 (cbrt.f64 x) (pow.f64 z 3)) 44/2187))) (fma.f64 y (*.f64 1/3 (/.f64 (cbrt.f64 x) z)) (fma.f64 (*.f64 y y) (+.f64 (*.f64 (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (*.f64 z z))) -7/81) (*.f64 (/.f64 (cbrt.f64 x) (*.f64 z z)) -2/81)) (cbrt.f64 x))))","(fma.f64 (pow.f64 y 3) (+.f64 (*.f64 (/.f64 (cbrt.f64 x) (pow.f64 z 3)) 44/2187) (*.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (+.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) 112/2187) (pow.f64 z 3)) (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (*.f64 z z)) (/.f64 z -7/81)) 1/9)))) (fma.f64 y (*.f64 1/3 (/.f64 (cbrt.f64 x) z)) (fma.f64 (*.f64 y y) (+.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (/.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (*.f64 z z))) -7/81) (*.f64 (/.f64 (cbrt.f64 x) (*.f64 z z)) -2/81)) (cbrt.f64 x))))","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3)","(+.f64 (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z) y)) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z) y)) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3)))","(fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3) (/.f64 y z)) (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3) (/.f64 y z)) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3)))","(+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) (*.f64 (/.f64 z (/.f64 y (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) 1/3))","(+.f64 (*.f64 2/81 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) (pow.f64 z 2)) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z) y)) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 z 2)) (*.f64 1/162 (pow.f64 z 2))) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3)) (pow.f64 y 2)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (pow.f64 z 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2))))))) (pow.f64 y 2)))))))","(fma.f64 2/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3) (/.f64 (*.f64 y y) (*.f64 z z))) (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3) (/.f64 y z)) (fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3) (/.f64 y z)) (+.f64 (+.f64 (/.f64 (*.f64 (*.f64 z z) -4/81) (/.f64 (*.f64 y y) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3))) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3)) (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) (/.f64 (*.f64 y y) (fma.f64 1/81 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 2)) (*.f64 2 (*.f64 (*.f64 (*.f64 z z) -4/81) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 2))))))))))","(fma.f64 2/81 (/.f64 (*.f64 z z) (/.f64 (*.f64 y y) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) (+.f64 (+.f64 (/.f64 (+.f64 (*.f64 1/81 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) (*.f64 2 (*.f64 (*.f64 z z) (*.f64 -4/81 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))))) (*.f64 y y)) (+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) (*.f64 (/.f64 (*.f64 -4/81 (*.f64 z z)) (*.f64 y y)) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3)))) (*.f64 (/.f64 z (/.f64 y (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) 1/3)))","(fma.f64 2/81 (/.f64 (*.f64 z z) (/.f64 (*.f64 y y) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) (+.f64 (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) (*.f64 y y)) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 x z)) (log.f64 y)) 2/9)) (+.f64 (*.f64 1/81 (*.f64 z z)) (*.f64 2 (*.f64 -4/81 (*.f64 z z)))))) (*.f64 (+.f64 (/.f64 (*.f64 -4/81 (*.f64 z z)) (*.f64 y y)) 1) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) (*.f64 (/.f64 z (/.f64 y (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) 1/3)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (*.f64 z (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2)))))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (+.f64 (*.f64 -1/162 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (*.f64 1/4374 (pow.f64 z 3))))))) (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y))))))) (pow.f64 y 3)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 z 2)) (*.f64 1/162 (pow.f64 z 2))) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3)) (pow.f64 y 2)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 z 2)) (*.f64 1/162 (pow.f64 z 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z)) (pow.f64 y 3))) (+.f64 (*.f64 2/81 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) (pow.f64 z 2)) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z) y)) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) z) y)) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) (*.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (pow.f64 z 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2)))))) z)) (pow.f64 y 3))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (pow.f64 z 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 2) (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2))))))) (pow.f64 y 2)) (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 x z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) 3) (+.f64 (*.f64 -1/162 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (*.f64 1/4374 (pow.f64 z 3))))) (pow.f64 y 3)))))))))))","(+.f64 (/.f64 (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 2) (*.f64 z (*.f64 (*.f64 z z) -4/81))) (*.f64 2 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 2) (fma.f64 -1/162 (pow.f64 z 3) (*.f64 (pow.f64 z 3) 163/4374))))) (/.f64 (pow.f64 y 3) (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))))) (+.f64 (+.f64 (/.f64 (*.f64 (*.f64 z z) -4/81) (/.f64 (*.f64 y y) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3))) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3)) (fma.f64 2/9 (/.f64 (*.f64 (*.f64 z z) -4/81) (/.f64 (pow.f64 y 3) (*.f64 z (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3)))) (fma.f64 2/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3) (/.f64 (*.f64 y y) (*.f64 z z))) (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3) (/.f64 y z)) (fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3) (/.f64 y z)) (fma.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) (/.f64 (pow.f64 y 3) (*.f64 z (fma.f64 1/81 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 2)) (*.f64 2 (*.f64 (*.f64 (*.f64 z z) -4/81) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 2))))))) (+.f64 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) (/.f64 (*.f64 y y) (fma.f64 1/81 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 2)) (*.f64 2 (*.f64 (*.f64 (*.f64 z z) -4/81) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 2)))))) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3) (/.f64 (pow.f64 y 3) (fma.f64 -1/162 (pow.f64 z 3) (*.f64 (pow.f64 z 3) 163/4374))))))))))))","(+.f64 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) (/.f64 (pow.f64 y 3) (fma.f64 2 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 2) (*.f64 (pow.f64 z 3) 68/2187)) (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 2) (*.f64 (*.f64 (pow.f64 z 3) -4/81) 2/9))))) (+.f64 (fma.f64 2/9 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) (*.f64 (pow.f64 z 3) -4/81)) (pow.f64 y 3)) (fma.f64 2/81 (/.f64 (*.f64 z z) (/.f64 (*.f64 y y) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) (+.f64 (+.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) (pow.f64 y 3)) (*.f64 (pow.f64 z 3) 68/2187)) (fma.f64 1/9 (/.f64 (+.f64 (*.f64 1/81 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) (*.f64 2 (*.f64 (*.f64 z z) (*.f64 -4/81 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))))) (/.f64 (pow.f64 y 3) z)) (/.f64 (+.f64 (*.f64 1/81 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) (*.f64 2 (*.f64 (*.f64 z z) (*.f64 -4/81 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))))) (*.f64 y y)))) (*.f64 (/.f64 z (/.f64 y (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) 1/3)))) (+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) (*.f64 (/.f64 (*.f64 -4/81 (*.f64 z z)) (*.f64 y y)) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3)))))","(+.f64 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) (/.f64 (pow.f64 y 3) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 x z)) (log.f64 y)) 2/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 z 3) -4/81)) (*.f64 2 (*.f64 (pow.f64 z 3) 68/2187)))))) (+.f64 (fma.f64 2/9 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) (*.f64 (pow.f64 z 3) -4/81)) (pow.f64 y 3)) (fma.f64 2/81 (/.f64 (*.f64 z z) (/.f64 (*.f64 y y) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) (+.f64 (fma.f64 1/9 (*.f64 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) (pow.f64 y 3)) (*.f64 z (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 x z)) (log.f64 y)) 2/9)) (+.f64 (*.f64 1/81 (*.f64 z z)) (*.f64 2 (*.f64 -4/81 (*.f64 z z))))))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) (*.f64 y y)) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 x z)) (log.f64 y)) 2/9)) (+.f64 (*.f64 1/81 (*.f64 z z)) (*.f64 2 (*.f64 -4/81 (*.f64 z z)))))) (*.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) y) 3) (*.f64 (pow.f64 z 3) 68/2187)))) (*.f64 (/.f64 z (/.f64 y (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))) 1/3)))) (*.f64 (+.f64 (/.f64 (*.f64 -4/81 (*.f64 z z)) (*.f64 y y)) 1) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))))","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)","(+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z)) (*.f64 -1/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z))) y)))","(+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3) (neg.f64 (/.f64 (*.f64 (*.f64 z (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3)) -1/3) y)))","(-.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3) (/.f64 (*.f64 z (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)) (/.f64 y -1/3)))","(+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 z 2)) (*.f64 1/162 (pow.f64 z 2))) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3)) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (pow.f64 z 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2))))))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z)) (*.f64 -1/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z))) y)) (*.f64 2/81 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) (pow.f64 z 2)) (pow.f64 y 2)))))))","(+.f64 (+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3) (/.f64 (*.f64 (*.f64 z z) -4/81) (/.f64 (*.f64 y y) (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3)))) (+.f64 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) (/.f64 (*.f64 y y) (fma.f64 1/81 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 2)) (*.f64 (*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 2)) (*.f64 (*.f64 z z) -4/81))))) (fma.f64 -1 (/.f64 (*.f64 (*.f64 z (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3)) -1/3) y) (*.f64 2/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3) (/.f64 (*.f64 y y) (*.f64 z z)))))))","(+.f64 (+.f64 (/.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 z z) (*.f64 -4/81 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)))) (*.f64 1/81 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)))) (*.f64 y y)) (-.f64 (*.f64 (/.f64 2/81 y) (/.f64 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)) y)) (/.f64 (*.f64 z (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)) (/.f64 y -1/3)))) (+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3) (*.f64 (/.f64 (*.f64 -4/81 (*.f64 z z)) y) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3) y))))","(+.f64 (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) y) (/.f64 (*.f64 (exp.f64 (*.f64 (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y))) 2/9)) (+.f64 (*.f64 1/81 (*.f64 z z)) (*.f64 2 (*.f64 -4/81 (*.f64 z z))))) y)) (fma.f64 2/81 (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3) y) (/.f64 (*.f64 z z) y)) (/.f64 (*.f64 1/3 (*.f64 z (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3))) y))) (*.f64 (+.f64 (/.f64 (*.f64 -4/81 (*.f64 z z)) (*.f64 y y)) 1) (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)))","(+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 z 2)) (*.f64 1/162 (pow.f64 z 2))) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3)) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (pow.f64 z 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2))))))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z)) (*.f64 -1/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z))) y)) (+.f64 (*.f64 2/81 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) (pow.f64 z 2)) (pow.f64 y 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 z 2)) (*.f64 1/162 (pow.f64 z 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) z))) (+.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (*.f64 z (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2)))))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (*.f64 1/162 (pow.f64 z 3)) (*.f64 -1/4374 (pow.f64 z 3))))))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z))))))) (+.f64 (*.f64 -1/9 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) (*.f64 z (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (pow.f64 z 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 2) (+.f64 (*.f64 1/162 (pow.f64 z 2)) (*.f64 -1/18 (pow.f64 z 2))))))))) (*.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 (/.f64 x z)))))) 3) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (*.f64 1/162 (pow.f64 z 3)) (*.f64 -1/4374 (pow.f64 z 3)))))))) (pow.f64 y 3))))))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3) (+.f64 (+.f64 (/.f64 (*.f64 (*.f64 z z) -4/81) (/.f64 (*.f64 y y) (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3))) (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) (/.f64 (*.f64 y y) (fma.f64 1/81 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 2)) (*.f64 (*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 2)) (*.f64 (*.f64 z z) -4/81)))))) (fma.f64 -1 (/.f64 (*.f64 (*.f64 z (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3)) -1/3) y) (fma.f64 2/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3) (/.f64 (*.f64 y y) (*.f64 z z))) (neg.f64 (/.f64 (fma.f64 -2/9 (*.f64 (*.f64 (*.f64 z z) -4/81) (*.f64 z (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3))) (fma.f64 (fma.f64 -2/9 (*.f64 (*.f64 z (*.f64 (*.f64 z z) -4/81)) (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 2)) (*.f64 (*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 2)) (fma.f64 -1/27 (pow.f64 z 3) (*.f64 (pow.f64 z 3) 13/2187)))) (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) (fma.f64 -1/9 (*.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) (*.f64 z (fma.f64 1/81 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 2)) (*.f64 (*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 2)) (*.f64 (*.f64 z z) -4/81))))) (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 (/.f64 x z))))) 3) (fma.f64 -1/27 (pow.f64 z 3) (*.f64 (pow.f64 z 3) 13/2187)))))) (pow.f64 y 3)))))))","(+.f64 (+.f64 (-.f64 (*.f64 (/.f64 2/81 y) (/.f64 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)) y)) (/.f64 (fma.f64 -2/9 (*.f64 (*.f64 (pow.f64 z 3) -4/81) (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)) (fma.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) (fma.f64 2 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 2) (*.f64 (pow.f64 z 3) -68/2187)) (*.f64 (*.f64 (pow.f64 z 3) -4/81) (*.f64 -2/9 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 2)))) (fma.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3) (*.f64 (pow.f64 z 3) -68/2187) (*.f64 -1/9 (*.f64 z (+.f64 (*.f64 2 (*.f64 (*.f64 z z) (*.f64 -4/81 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)))) (*.f64 1/81 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3))))))))) (pow.f64 y 3))) (-.f64 (/.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 z z) (*.f64 -4/81 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)))) (*.f64 1/81 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)))) (*.f64 y y)) (/.f64 (*.f64 z (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)) (/.f64 y -1/3)))) (+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3) (*.f64 (/.f64 (*.f64 -4/81 (*.f64 z z)) y) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3) y))))","(+.f64 (+.f64 (-.f64 (*.f64 (/.f64 2/81 y) (/.f64 (*.f64 (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)) y)) (/.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) (+.f64 (*.f64 (exp.f64 (*.f64 (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y))) 2/9)) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 z 3) -4/81)) (*.f64 2 (*.f64 (pow.f64 z 3) -68/2187)))) (*.f64 -1/9 (*.f64 z (*.f64 (exp.f64 (*.f64 (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y))) 2/9)) (+.f64 (*.f64 1/81 (*.f64 z z)) (*.f64 2 (*.f64 -4/81 (*.f64 z z))))))))) (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3) (+.f64 (*.f64 (pow.f64 z 3) -68/2187) (*.f64 (*.f64 (*.f64 -2/9 (*.f64 z z)) -4/81) z)))) (pow.f64 y 3))) (fma.f64 (/.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) y) (/.f64 (*.f64 (exp.f64 (*.f64 (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y))) 2/9)) (+.f64 (*.f64 1/81 (*.f64 z z)) (*.f64 2 (*.f64 -4/81 (*.f64 z z))))) y) (/.f64 (*.f64 1/3 (*.f64 z (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3))) y))) (*.f64 (+.f64 (/.f64 (*.f64 -4/81 (*.f64 z z)) (*.f64 y y)) 1) (pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (/.f64 (neg.f64 x) z)) (log.f64 (/.f64 -1 y)))) 3)))","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (neg.f64 (neg.f64 (log.f64 y))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3)","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) y)) (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) y))) z) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3))","(fma.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 3) y) 1/3) z (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 3))","(fma.f64 z (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) 1/3) y) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) y)) (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) y))) z) (+.f64 (*.f64 (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) (pow.f64 y 2))) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) (pow.f64 y 2))) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) (+.f64 (*.f64 1/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 2))) (*.f64 -8/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 2))))))) (pow.f64 z 2)) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3)))","(fma.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 3) y) 1/3) z (fma.f64 (fma.f64 2/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 3) (*.f64 y y)) (fma.f64 -4/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 3) (*.f64 y y)) (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 2) (*.f64 y y)) -7/81)))) (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 3)))","(fma.f64 z (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) 1/3) y) (fma.f64 (*.f64 z z) (+.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 2) -7/81) (*.f64 y y))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) (*.f64 y y)) -2/81)) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3)))","(fma.f64 z (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) 1/3) y) (fma.f64 (*.f64 z z) (+.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 x z)) (log.f64 y)) 2/9)) -7/81) (*.f64 y y))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) (*.f64 y y)) -2/81)) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3)))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) y)) (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) y))) z) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 136/2187 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 3))) (*.f64 -8/729 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 3)))) (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z)))))) (+.f64 (*.f64 -8/729 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) (pow.f64 y 3))) (+.f64 (*.f64 68/2187 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) (pow.f64 y 3))) (*.f64 1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) (+.f64 (*.f64 1/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 2))) (*.f64 -8/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 2))))) y))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) (pow.f64 y 2))) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3) (pow.f64 y 2))) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) (+.f64 (*.f64 1/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 2))) (*.f64 -8/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 2) (pow.f64 y 2))))))) (pow.f64 z 2)) (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (*.f64 y x)) (*.f64 -1 (log.f64 z))))) 3))))","(fma.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 3) y) 1/3) z (fma.f64 (fma.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 2) (pow.f64 y 3)) 112/2187) (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) (fma.f64 -8/729 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 3) (pow.f64 y 3)) (fma.f64 68/2187 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 3) (pow.f64 y 3)) (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) (/.f64 y (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 2) (*.f64 y y)) -7/81))))))) (pow.f64 z 3) (fma.f64 (fma.f64 2/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 3) (*.f64 y y)) (fma.f64 -4/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 3) (*.f64 y y)) (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 2) (*.f64 y y)) -7/81)))) (*.f64 z z) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (*.f64 y x)) (neg.f64 (log.f64 z)))) 3))))","(fma.f64 z (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) 1/3) y) (fma.f64 (pow.f64 z 3) (fma.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 2) 112/2187) (pow.f64 y 3)) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 1/9) (/.f64 y (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 2) -7/81) (*.f64 y y)))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) (pow.f64 y 3)) 44/2187))) (fma.f64 (*.f64 z z) (+.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 2) -7/81) (*.f64 y y))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) (*.f64 y y)) -2/81)) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))))","(fma.f64 z (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) 1/3) y) (fma.f64 (pow.f64 z 3) (fma.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 x z)) (log.f64 y)) 2/9)) 112/2187) (pow.f64 y 3)) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 1/9) (/.f64 y (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 x z)) (log.f64 y)) 2/9)) -7/81) (*.f64 y y)))) (*.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) y) 3) 44/2187))) (fma.f64 (*.f64 z z) (+.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 x z)) (log.f64 y)) 2/9)) -7/81) (*.f64 y y))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3) (*.f64 y y)) -2/81)) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (/.f64 x z)) (log.f64 y))) 3))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))","(*.f64 1 (cbrt.f64 x))","(cbrt.f64 x)","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 y z) (pow.f64 x 1/3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 y z) (pow.f64 x 1/3)))) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))))","(+.f64 (+.f64 (*.f64 1/9 (*.f64 (/.f64 y z) (cbrt.f64 x))) (*.f64 2/9 (*.f64 (/.f64 y z) (cbrt.f64 x)))) (*.f64 1 (cbrt.f64 x)))","(+.f64 (cbrt.f64 x) (*.f64 (*.f64 (/.f64 y z) (cbrt.f64 x)) 1/3))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 y z) (pow.f64 x 1/3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 y z) (pow.f64 x 1/3)))) (+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (/.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (pow.f64 y 2))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) (pow.f64 z 2))) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (pow.f64 x 1/3)))) (*.f64 (/.f64 (+.f64 (*.f64 -1/18 (pow.f64 y 2)) (*.f64 1/162 (pow.f64 y 2))) (pow.f64 z 2)) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))))))))","(+.f64 (+.f64 (*.f64 1/9 (*.f64 (/.f64 y z) (cbrt.f64 x))) (*.f64 2/9 (*.f64 (/.f64 y z) (cbrt.f64 x)))) (fma.f64 1 (cbrt.f64 x) (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (fma.f64 1/81 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (*.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (*.f64 (*.f64 y y) -4/81))) (*.f64 z z)) (fma.f64 (/.f64 (*.f64 (*.f64 y y) -4/81) (*.f64 z z)) (*.f64 1 (cbrt.f64 x)) (*.f64 2/81 (/.f64 (*.f64 (*.f64 y y) (cbrt.f64 x)) (*.f64 z z)))))))","(+.f64 (+.f64 (cbrt.f64 x) (*.f64 (*.f64 (/.f64 y z) (cbrt.f64 x)) 1/3)) (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (fma.f64 2 (*.f64 (*.f64 (*.f64 y (pow.f64 (*.f64 x x) 1/18)) (*.f64 y (pow.f64 (*.f64 x x) 1/18))) -4/81) (*.f64 (*.f64 y y) (*.f64 (*.f64 1/81 (pow.f64 (*.f64 x x) 1/18)) (pow.f64 (*.f64 x x) 1/18)))) (*.f64 z z)) (fma.f64 (cbrt.f64 x) (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) -4/81)) (*.f64 2/81 (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) (cbrt.f64 x)))))))","(+.f64 (+.f64 (cbrt.f64 x) (*.f64 (*.f64 (/.f64 y z) (cbrt.f64 x)) 1/3)) (fma.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (/.f64 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (+.f64 (*.f64 1/81 (*.f64 y y)) (*.f64 2 (*.f64 y (*.f64 y -4/81))))) (*.f64 z z)) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 2/81 (*.f64 (/.f64 y z) (/.f64 y z))) (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) -4/81))))))","(+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1/162 (pow.f64 y 3)) (*.f64 1/4374 (pow.f64 y 3)))) (pow.f64 z 3)) (pow.f64 x 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (/.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (pow.f64 y 2))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) (pow.f64 z 2))) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (pow.f64 x 1/3)))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 y z) (pow.f64 x 1/3)))) (+.f64 (*.f64 1/9 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (pow.f64 y 2))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) y) (pow.f64 z 3)) (pow.f64 (*.f64 1 x) 1/9))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1/162 (pow.f64 y 3)) (*.f64 1/4374 (pow.f64 y 3)))))) (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (*.f64 y (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2))))))) (pow.f64 z 3))) (+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 y z) (pow.f64 x 1/3)))) (+.f64 (*.f64 2/9 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 y 2)) (*.f64 1/162 (pow.f64 y 2))) y) (pow.f64 z 3)) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))) (*.f64 (/.f64 (+.f64 (*.f64 -1/18 (pow.f64 y 2)) (*.f64 1/162 (pow.f64 y 2))) (pow.f64 z 2)) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))))))))))))","(fma.f64 1 (/.f64 (*.f64 (fma.f64 1/27 (pow.f64 y 3) (*.f64 (pow.f64 y 3) -13/2187)) (cbrt.f64 x)) (pow.f64 z 3)) (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (fma.f64 1/81 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (*.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (*.f64 (*.f64 y y) -4/81))) (*.f64 z z)) (+.f64 (+.f64 (*.f64 2/81 (/.f64 (*.f64 (*.f64 y y) (cbrt.f64 x)) (*.f64 z z))) (*.f64 1/9 (*.f64 (/.f64 y z) (cbrt.f64 x)))) (fma.f64 1/9 (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (fma.f64 1/81 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (*.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (*.f64 (*.f64 y y) -4/81))) (/.f64 (pow.f64 z 3) y))) (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (fma.f64 2 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (fma.f64 1/27 (pow.f64 y 3) (*.f64 (pow.f64 y 3) -13/2187))) (*.f64 2/9 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) y) (*.f64 (*.f64 y y) -4/81)))) (pow.f64 z 3)) (fma.f64 1 (cbrt.f64 x) (+.f64 (*.f64 2/9 (*.f64 (/.f64 y z) (cbrt.f64 x))) (fma.f64 2/9 (*.f64 (*.f64 1 (cbrt.f64 x)) (/.f64 (*.f64 (*.f64 y y) -4/81) (/.f64 (pow.f64 z 3) y))) (*.f64 (*.f64 1 (cbrt.f64 x)) (/.f64 (*.f64 (*.f64 y y) -4/81) (*.f64 z z)))))))))))","(fma.f64 (/.f64 (*.f64 (pow.f64 y 3) 68/2187) (pow.f64 z 3)) (cbrt.f64 x) (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (fma.f64 2 (*.f64 (*.f64 (*.f64 y (pow.f64 (*.f64 x x) 1/18)) (*.f64 y (pow.f64 (*.f64 x x) 1/18))) -4/81) (*.f64 (*.f64 y y) (*.f64 (*.f64 1/81 (pow.f64 (*.f64 x x) 1/18)) (pow.f64 (*.f64 x x) 1/18)))) (*.f64 z z)) (fma.f64 2/81 (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) (cbrt.f64 x))) (fma.f64 1/9 (*.f64 (/.f64 y z) (cbrt.f64 x)) (+.f64 (+.f64 (fma.f64 2/9 (*.f64 (/.f64 y z) (cbrt.f64 x)) (cbrt.f64 x)) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (pow.f64 y 3) -4/81) (pow.f64 z 3))) (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) -4/81))))) (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (+.f64 (/.f64 (*.f64 1/9 (fma.f64 2 (*.f64 (*.f64 (*.f64 y (pow.f64 (*.f64 x x) 1/18)) (*.f64 y (pow.f64 (*.f64 x x) 1/18))) -4/81) (*.f64 (*.f64 y y) (*.f64 (*.f64 1/81 (pow.f64 (*.f64 x x) 1/18)) (pow.f64 (*.f64 x x) 1/18))))) (/.f64 (pow.f64 z 3) y)) (/.f64 (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (*.f64 (pow.f64 y 3) -4/81)) (*.f64 2 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (*.f64 (pow.f64 y 3) 68/2187)))) (pow.f64 z 3)))))))))","(fma.f64 (/.f64 (*.f64 (pow.f64 y 3) 68/2187) (pow.f64 z 3)) (cbrt.f64 x) (fma.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (/.f64 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (+.f64 (*.f64 1/81 (*.f64 y y)) (*.f64 2 (*.f64 y (*.f64 y -4/81))))) (*.f64 z z)) (+.f64 (+.f64 (+.f64 (*.f64 2/9 (*.f64 (cbrt.f64 x) (+.f64 (/.f64 y z) (/.f64 (*.f64 (pow.f64 y 3) -4/81) (pow.f64 z 3))))) (*.f64 (cbrt.f64 x) (+.f64 (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) -4/81)) 1))) (*.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (+.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (+.f64 (*.f64 (*.f64 (pow.f64 y 3) 68/2187) 2) (*.f64 (*.f64 (pow.f64 y 3) -4/81) 2/9))) (pow.f64 z 3)) (/.f64 (*.f64 1/9 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (+.f64 (*.f64 1/81 (*.f64 y y)) (*.f64 2 (*.f64 y (*.f64 y -4/81)))))) (/.f64 (pow.f64 z 3) y))))) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 1/9 (/.f64 y z)) (*.f64 2/81 (*.f64 (/.f64 y z) (/.f64 y z))))))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))","(*.f64 1 (cbrt.f64 x))","(cbrt.f64 x)","(+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 y (pow.f64 x 1/3)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 y (pow.f64 x 1/3))))) z)))","(fma.f64 1 (cbrt.f64 x) (neg.f64 (/.f64 (*.f64 (*.f64 1 (*.f64 y (cbrt.f64 x))) -1/3) z)))","(-.f64 (cbrt.f64 x) (/.f64 (*.f64 y (cbrt.f64 x)) (/.f64 z -1/3)))","(+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (/.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (pow.f64 y 2))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 y (pow.f64 x 1/3)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 y (pow.f64 x 1/3))))) z)) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (pow.f64 x 1/3)))) (*.f64 (/.f64 (+.f64 (*.f64 -1/18 (pow.f64 y 2)) (*.f64 1/162 (pow.f64 y 2))) (pow.f64 z 2)) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))))))","(fma.f64 1 (cbrt.f64 x) (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (fma.f64 1/81 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (*.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (*.f64 (*.f64 y y) -4/81))) (*.f64 z z)) (fma.f64 -1 (/.f64 (*.f64 (*.f64 1 (*.f64 y (cbrt.f64 x))) -1/3) z) (fma.f64 (/.f64 (*.f64 (*.f64 y y) -4/81) (*.f64 z z)) (*.f64 1 (cbrt.f64 x)) (*.f64 2/81 (/.f64 (*.f64 (*.f64 y y) (cbrt.f64 x)) (*.f64 z z)))))))","(+.f64 (cbrt.f64 x) (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (fma.f64 2 (*.f64 (*.f64 (*.f64 y (pow.f64 (*.f64 x x) 1/18)) (*.f64 y (pow.f64 (*.f64 x x) 1/18))) -4/81) (*.f64 (*.f64 y y) (*.f64 (*.f64 1/81 (pow.f64 (*.f64 x x) 1/18)) (pow.f64 (*.f64 x x) 1/18)))) (*.f64 z z)) (-.f64 (fma.f64 (cbrt.f64 x) (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) -4/81)) (*.f64 2/81 (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) (cbrt.f64 x))))) (/.f64 (*.f64 y (cbrt.f64 x)) (/.f64 z -1/3)))))","(+.f64 (+.f64 (cbrt.f64 x) (fma.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (/.f64 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (+.f64 (*.f64 1/81 (*.f64 y y)) (*.f64 2 (*.f64 y (*.f64 y -4/81))))) (*.f64 z z)) (/.f64 (*.f64 1/3 (*.f64 y (cbrt.f64 x))) z))) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 2/81 (*.f64 (/.f64 y z) (/.f64 y z))) (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) -4/81)))))","(+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (/.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (pow.f64 y 2))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 y (pow.f64 x 1/3)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 y (pow.f64 x 1/3))))) z)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (*.f64 (+.f64 (*.f64 1/81 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (pow.f64 y 2))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) y))) (+.f64 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1/4374 (pow.f64 y 3)) (*.f64 1/162 (pow.f64 y 3)))) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (+.f64 (*.f64 -2/9 (*.f64 (*.f64 (+.f64 (*.f64 -1/18 (pow.f64 y 2)) (*.f64 1/162 (pow.f64 y 2))) y) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (*.f64 y (+.f64 (*.f64 1/162 (pow.f64 y 2)) (*.f64 -1/18 (pow.f64 y 2)))))) (*.f64 2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9) (+.f64 (*.f64 -1/4374 (pow.f64 y 3)) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (*.f64 1/162 (pow.f64 y 3))))))) (pow.f64 (*.f64 1 x) 1/9))))) (pow.f64 z 3))) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 -1/18 (pow.f64 y 2)) (*.f64 1/162 (pow.f64 y 2))) (pow.f64 z 2)) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (pow.f64 x 1/3)))))))))","(fma.f64 1 (cbrt.f64 x) (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (fma.f64 1/81 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (*.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (*.f64 (*.f64 y y) -4/81))) (*.f64 z z)) (fma.f64 -1 (/.f64 (*.f64 (*.f64 1 (*.f64 y (cbrt.f64 x))) -1/3) z) (fma.f64 -1 (/.f64 (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 y (fma.f64 1/81 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (*.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (*.f64 (*.f64 y y) -4/81))))) (fma.f64 (fma.f64 -1/27 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 13/2187)) (*.f64 1 (cbrt.f64 x)) (fma.f64 -2/9 (*.f64 (*.f64 (*.f64 y y) -4/81) (*.f64 y (*.f64 1 (cbrt.f64 x)))) (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (fma.f64 -2/9 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) y) (*.f64 (*.f64 y y) -4/81)) (*.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18))) (fma.f64 -1/4374 (pow.f64 y 3) (*.f64 (pow.f64 y 3) -5/162)))))))) (pow.f64 z 3)) (fma.f64 (/.f64 (*.f64 (*.f64 y y) -4/81) (*.f64 z z)) (*.f64 1 (cbrt.f64 x)) (*.f64 2/81 (/.f64 (*.f64 (*.f64 y y) (cbrt.f64 x)) (*.f64 z z))))))))","(+.f64 (cbrt.f64 x) (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (/.f64 (fma.f64 2 (*.f64 (*.f64 (*.f64 y (pow.f64 (*.f64 x x) 1/18)) (*.f64 y (pow.f64 (*.f64 x x) 1/18))) -4/81) (*.f64 (*.f64 y y) (*.f64 (*.f64 1/81 (pow.f64 (*.f64 x x) 1/18)) (pow.f64 (*.f64 x x) 1/18)))) (*.f64 z z)) (-.f64 (-.f64 (fma.f64 (cbrt.f64 x) (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) -4/81)) (*.f64 2/81 (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) (cbrt.f64 x))))) (/.f64 (fma.f64 -1/9 (*.f64 (fma.f64 2 (*.f64 (*.f64 (*.f64 y (pow.f64 (*.f64 x x) 1/18)) (*.f64 y (pow.f64 (*.f64 x x) 1/18))) -4/81) (*.f64 (*.f64 y y) (*.f64 (*.f64 1/81 (pow.f64 (*.f64 x x) 1/18)) (pow.f64 (*.f64 x x) 1/18)))) (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)))) (+.f64 (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (fma.f64 2 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (*.f64 (pow.f64 y 3) -68/2187)) (*.f64 (*.f64 (pow.f64 y 3) -4/81) (*.f64 (*.f64 -2/9 (pow.f64 (*.f64 x x) 1/18)) (pow.f64 (*.f64 x x) 1/18))))) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 (pow.f64 y 3) -68/2187) (*.f64 -2/9 (*.f64 (pow.f64 y 3) -4/81)))))) (pow.f64 z 3))) (/.f64 (*.f64 y (cbrt.f64 x)) (/.f64 z -1/3)))))","(+.f64 (cbrt.f64 x) (+.f64 (-.f64 (fma.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (/.f64 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (+.f64 (*.f64 1/81 (*.f64 y y)) (*.f64 2 (*.f64 y (*.f64 y -4/81))))) (*.f64 z z)) (/.f64 (*.f64 1/3 (*.f64 y (cbrt.f64 x))) z)) (/.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (*.f64 (pow.f64 y 3) -68/2187) (*.f64 -2/9 (*.f64 (pow.f64 y 3) -4/81)))) (*.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (+.f64 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 y 3) -4/81)) (*.f64 2 (*.f64 (pow.f64 y 3) -68/2187)))) (*.f64 (*.f64 y (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) (+.f64 (*.f64 1/81 (*.f64 y y)) (*.f64 2 (*.f64 y (*.f64 y -4/81)))))) -1/9)))) (pow.f64 z 3))) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 2/81 (*.f64 (/.f64 y z) (/.f64 y z))) (/.f64 (*.f64 y y) (/.f64 (*.f64 z z) -4/81))))))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (/.f64 (*.f64 y x) z) x)","(*.f64 (+.f64 (/.f64 y z) 1) x)","(+.f64 x (*.f64 (/.f64 y z) x))"]],"stop":[["node limit",1]],"time":72.65283203125,"type":"simplify"},{"compiler":[[10218,5502]],"time":88.744140625,"type":"eval"},{"alts":[["(fma.f64 y (/.f64 x z) x)","fresh",5.9973962147273],["(fma.f64 x (/.f64 y z) x)","done",3.30859375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","done",4.137554333284065],["(+.f64 (/.f64 (*.f64 y x) z) x)","next",4.770903951396483]],"compiler":[[9,5],[9,5],[23,12],[10,6],[9,5],[10,6]],"count":[[248,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[244,0],"picked":[1,1]}],"min-error":[0],"time":43.009033203125,"type":"prune"},{"compiler":[[21,6]],"locations":[["(+.f64 (/.f64 (*.f64 y x) z) x)",0.01171875,true],["(/.f64 (*.f64 y x) z)",5.835038133963555,true]],"time":3.93798828125,"type":"localize"},{"count":[[2,18]],"series":[["(+.f64 (/.f64 (*.f64 y x) z) x)","z","-inf",0.16796875],["(+.f64 (/.f64 (*.f64 y x) z) x)","z","inf",0.14892578125],["(+.f64 (/.f64 (*.f64 y x) z) x)","z","0",0.16796875],["(+.f64 (/.f64 (*.f64 y x) z) x)","x","-inf",0.171142578125],["(+.f64 (/.f64 (*.f64 y x) z) x)","x","inf",0.1640625],["(+.f64 (/.f64 (*.f64 y x) z) x)","x","0",0.169921875],["(+.f64 (/.f64 (*.f64 y x) z) x)","y","-inf",0.157958984375],["(+.f64 (/.f64 (*.f64 y x) z) x)","y","inf",0.179931640625],["(+.f64 (/.f64 (*.f64 y x) z) x)","y","0",0.155029296875],["(/.f64 (*.f64 y x) z)","z","-inf",0.294921875],["(/.f64 (*.f64 y x) z)","z","inf",0.3388671875],["(/.f64 (*.f64 y x) z)","z","0",0.391845703125],["(/.f64 (*.f64 y x) z)","x","-inf",0.244140625],["(/.f64 (*.f64 y x) z)","x","inf",0.3740234375],["(/.f64 (*.f64 y x) z)","x","0",0.35400390625],["(/.f64 (*.f64 y x) z)","y","-inf",0.29296875],["(/.f64 (*.f64 y x) z)","y","inf",0.350830078125],["(/.f64 (*.f64 y x) z)","y","0",0.511962890625]],"time":4.7978515625,"type":"series"},{"count":[[2,76]],"egraph":[[2,2378,17,0.021185085],[1,156,17,0.0030040429999999996],[0,7,17,0.000162459]],"inputs":[["(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 y z) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (/.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 x (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 y (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y x) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 y z) x)) (pow.f64 (cbrt.f64 (*.f64 (/.f64 y z) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 y z) x)) 2) (cbrt.f64 (*.f64 (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 y x)) 2) (*.f64 (cbrt.f64 (*.f64 y x)) (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 y z) x)) (sqrt.f64 (*.f64 (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 y x)) (*.f64 (sqrt.f64 (*.f64 y x)) (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (neg.f64 x)) (/.f64 1 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y 1) (/.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y x)) 2) 1) (/.f64 (cbrt.f64 (*.f64 y x)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 y x)) 1) (/.f64 (sqrt.f64 (*.f64 y x)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (pow.f64 (cbrt.f64 z) 2)) (/.f64 x (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (cbrt.f64 z) 2)) (/.f64 y (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 z) 2)) (/.f64 (*.f64 y x) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y x)) 2) (pow.f64 (cbrt.f64 z) 2)) (cbrt.f64 (*.f64 (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 y x)) (pow.f64 (cbrt.f64 z) 2)) (/.f64 (sqrt.f64 (*.f64 y x)) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (sqrt.f64 z)) (/.f64 x (sqrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (sqrt.f64 z)) (/.f64 y (sqrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 z)) (/.f64 (*.f64 y x) (sqrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y x)) 2) (sqrt.f64 z)) (/.f64 (cbrt.f64 (*.f64 y x)) (sqrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 y z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 y z) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 y z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 z y) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 y x) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 y z) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 y z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 y z) x)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 x (*.f64 (/.f64 y z) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 (/.f64 y z) x) 2) (-.f64 (*.f64 (/.f64 y z) x) x)) (/.f64 (*.f64 x x) (-.f64 (*.f64 (/.f64 y z) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x (*.f64 (/.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 x (*.f64 (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x (*.f64 (/.f64 y z) x))) (pow.f64 (cbrt.f64 (+.f64 x (*.f64 (/.f64 y z) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x (*.f64 (/.f64 y z) x))) 2) (cbrt.f64 (+.f64 x (*.f64 (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x (*.f64 (/.f64 y z) x))) (sqrt.f64 (+.f64 x (*.f64 (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (/.f64 y z) x) 3) (pow.f64 x 3)) (/.f64 1 (+.f64 (pow.f64 (*.f64 (/.f64 y z) x) 2) (*.f64 x (-.f64 x (*.f64 (/.f64 y z) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (/.f64 y z) x) 2) (*.f64 x x)) (/.f64 1 (-.f64 (*.f64 (/.f64 y z) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (*.f64 (/.f64 y z) x) 2) (*.f64 x (-.f64 x (*.f64 (/.f64 y z) x)))) (+.f64 (pow.f64 (*.f64 (/.f64 y z) x) 3) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (*.f64 (/.f64 y z) x) x) (-.f64 (pow.f64 (*.f64 (/.f64 y z) x) 2) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (/.f64 y z) x) 3) (pow.f64 x 3)) (+.f64 (pow.f64 (*.f64 (/.f64 y z) x) 2) (*.f64 x (-.f64 x (*.f64 (/.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (/.f64 y z) x) 3) (pow.f64 x 3)) (+.f64 (*.f64 x x) (-.f64 (pow.f64 (*.f64 (/.f64 y z) x) 2) (/.f64 x (/.f64 (/.f64 z y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (/.f64 y z) x) 2) (*.f64 x x)) (-.f64 (*.f64 (/.f64 y z) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (/.f64 y z) x) 3) (pow.f64 x 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 (/.f64 y z) x) 2) (*.f64 x (-.f64 x (*.f64 (/.f64 y z) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (/.f64 y z) x) 2) (*.f64 x x))) (neg.f64 (-.f64 (*.f64 (/.f64 y z) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y z) x) 2)) (-.f64 x (*.f64 (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x (*.f64 (/.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x (*.f64 (/.f64 y z) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x (*.f64 (/.f64 y z) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x (*.f64 (/.f64 y z) x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 x (*.f64 (/.f64 y z) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 x (*.f64 (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 x (*.f64 (/.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x (*.f64 (/.f64 y z) x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 x (*.f64 (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 x (*.f64 (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 x (*.f64 (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y x) (/.f64 1 z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (/.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 y z) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 y z) x)) 2) (cbrt.f64 (*.f64 (/.f64 y z) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (/.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 y z) x)) (sqrt.f64 (*.f64 (/.f64 y z) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (/.f64 y z) x))))))"]],"rules":[["egg-rr",35],["egg-rr",41]],"stop":[["node limit",1]],"time":43.135009765625,"type":"rewrite"},{"count":[[94,82]],"egraph":[[9,1137,120,0.017184166],[8,1132,120,0.014593957999999999],[7,1118,120,0.012018583],[6,940,120,0.009315208],[5,685,120,0.0064725419999999995],[4,369,120,0.003220958],[3,181,120,0.001263125],[2,73,120,0.000535083],[1,34,144,0.00022608299999999997],[0,15,144,8.7875e-5]],"inputs":[["x","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(/.f64 (*.f64 y x) z)","x","x"]],"method":["egg-herbie"],"outputs":[["x","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 x y) z)","(*.f64 x (/.f64 y z))","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 x y) z)","(*.f64 x (/.f64 y z))","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (+.f64 1 (/.f64 y z)) x)","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(fma.f64 y (/.f64 x z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(fma.f64 y (/.f64 x z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(fma.f64 y (/.f64 x z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(fma.f64 y (/.f64 x z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 y z)) 1) x))","(*.f64 x (+.f64 1 (/.f64 y z)))","(fma.f64 x (/.f64 y z) x)","(fma.f64 y (/.f64 x z) x)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 x y) z)","(*.f64 x (/.f64 y z))","x","x"]],"stop":[["saturated",1]],"time":30.379150390625,"type":"simplify"},{"compiler":[[1068,353]],"time":9.31298828125,"type":"eval"},{"alts":[["(fma.f64 y (/.f64 x z) x)","fresh",5.9973962147273],["(fma.f64 x (/.f64 y z) x)","done",3.30859375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","done",4.137554333284065],["(+.f64 (/.f64 (*.f64 y x) z) x)","done",4.770903951396483]],"compiler":[[9,5],[9,5],[23,12],[10,6]],"count":[[86,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[82,0],"picked":[1,1]}],"min-error":[0],"time":16.198974609375,"type":"prune"},{"accuracy":[0.07421875],"baseline":[3.30859375],"branch":[["x",1.145614990308557,3],["y",0.9996138022038404,3],["z",1.4768421789907493,3],["(/.f64 (*.f64 x (+.f64 y z)) z)",0.07421875,5]],"compiler":[[4,3],[4,3],[4,3],[10,6],[73,26]],"count":[[7,5]],"inputs":[["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x))) 3))","(+.f64 (/.f64 (*.f64 y x) z) x)","(fma.f64 y (/.f64 x z) x)","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 y z) x)) 2) (cbrt.f64 (fma.f64 x (/.f64 y z) x)))","(+.f64 x (/.f64 (*.f64 x y) z))","(fma.f64 x (/.f64 y z) x)","(/.f64 (*.f64 x (+.f64 y z)) z)"]],"link":["."],"name":["Numeric.SpecFunctions:choose from math-functions-0.1.5.2"],"oracle":[20.729185500261387],"outputs":[["(fma.f64 y (/.f64 x z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(fma.f64 x (/.f64 y z) x)","(+.f64 (/.f64 (*.f64 y x) z) x)","(fma.f64 x (/.f64 y z) x)"]],"time":50.763916015625,"times":[["x",11.216064453125],["y",11.134033203125],["z",11.077880859375],["(/.f64 (*.f64 x (+.f64 y z)) z)",15.964111328125]],"type":"regimes"},{"bstep":[[2.3361661163210003e+279,9.50983078015396e+285,0.028076171875],[-0.0,4.3056283097739826e-305,0.011962890625],[-2.0839480178557056e+153,-2.3471778408034216e+150,0.080078125],[{"type":"real","value":"-inf"},-2.341922098881268e+307,0.033935546875]],"compiler":[[6,5],[10,6]],"method":["left-value","left-value","left-value","left-value"],"time":0.257080078125,"type":"bsearch"},{"compiler":[[75,25]],"egraph":[[1,31,104,8.7166e-5],[0,27,104,4.8375e-5]],"inputs":[["(if (<=.f64 (/.f64 (*.f64 x (+.f64 y z)) z) -inf.0) (fma.f64 y (/.f64 x z) x) (if (<=.f64 (/.f64 (*.f64 x (+.f64 y z)) z) -1999999999999999999466806008246307489711078038236873372571680376048739359044847523345839519129134316887338757648057420040785188188258060440266031719514112) (+.f64 (/.f64 (*.f64 y x) z) x) (if (<=.f64 (/.f64 (*.f64 x (+.f64 y z)) z) 0) (fma.f64 x (/.f64 y z) x) (if (<=.f64 (/.f64 (*.f64 x (+.f64 y z)) z) 4000000000000000231893169099841575053063450274182800146420881542605552434876729747786197078273948066841364024075386945734369792731600736977538960220961495274192371301985298734861946818478880125907969025901056112837459751160597443375283341064029997118075293381498119460268929974272) (+.f64 (/.f64 (*.f64 y x) z) x) (fma.f64 x (/.f64 y z) x)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 (*.f64 x (+.f64 y z)) z) -inf.0) (fma.f64 y (/.f64 x z) x) (if (<=.f64 (/.f64 (*.f64 x (+.f64 y z)) z) -1999999999999999999466806008246307489711078038236873372571680376048739359044847523345839519129134316887338757648057420040785188188258060440266031719514112) (+.f64 (/.f64 (*.f64 y x) z) x) (if (<=.f64 (/.f64 (*.f64 x (+.f64 y z)) z) 0) (fma.f64 x (/.f64 y z) x) (if (<=.f64 (/.f64 (*.f64 x (+.f64 y z)) z) 4000000000000000231893169099841575053063450274182800146420881542605552434876729747786197078273948066841364024075386945734369792731600736977538960220961495274192371301985298734861946818478880125907969025901056112837459751160597443375283341064029997118075293381498119460268929974272) (+.f64 (/.f64 (*.f64 y x) z) x) (fma.f64 x (/.f64 y z) x)))))","(if (<=.f64 (/.f64 (*.f64 x (+.f64 y z)) z) -inf.0) (fma.f64 y (/.f64 x z) x) (if (<=.f64 (/.f64 (*.f64 x (+.f64 y z)) z) -1999999999999999999466806008246307489711078038236873372571680376048739359044847523345839519129134316887338757648057420040785188188258060440266031719514112) (+.f64 x (/.f64 (*.f64 x y) z)) (if (<=.f64 (/.f64 (*.f64 x (+.f64 y z)) z) 0) (fma.f64 x (/.f64 y z) x) (if (<=.f64 (/.f64 (*.f64 x (+.f64 y z)) z) 4000000000000000231893169099841575053063450274182800146420881542605552434876729747786197078273948066841364024075386945734369792731600736977538960220961495274192371301985298734861946818478880125907969025901056112837459751160597443375283341064029997118075293381498119460268929974272) (+.f64 x (/.f64 (*.f64 x y) z)) (fma.f64 x (/.f64 y z) x)))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.14697265625,"type":"simplify"},{"time":0.02294921875,"type":"soundness"},{"compiler":[[75,25]],"remove-preprocessing":[[]],"time":14.420166015625,"type":"end"}]