[{"compiler":[[12,9]],"method":["search"],"sampling":[[12,0.499755859375,0.499755859375,0.00048828125],[11,0.499755859375,0.499755859375,0.00048828125],[10,0.499755859375,0.499755859375,0.00048828125],[9,0.499755859375,0.499755859375,0.00048828125],[8,0.499755859375,0.499755859375,0.00048828125],[7,0.499755859375,0.499755859375,0.00048828125],[6,0.499755859375,0.499755859375,0.00048828125],[5,0.499755859375,0.499755859375,0.00048828125],[4,0.499755859375,0.499755859375,0.00048828125],[3,0.499755859375,0.499755859375,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":112.64794921875,"type":"analyze"},{"outcomes":[["body",512,"invalid",100.353759765625,827],["body",256,"invalid",55.91162109375,866],["body",8192,"exit",2582.7041015625,1596],["body",1024,"invalid",343.24267578125,1719],["body",512,"valid",304.35498046875,2031],["body",1024,"valid",1099.841552734375,4087],["body",2048,"valid",72.34619140625,180],["body",256,"valid",154.187255859375,1958]],"time":4728.72314453125,"type":"sample"},{"compiler":[[11,8]],"inputs":[["0"],["(*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 (neg.f64 x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 (neg.f64 x)))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))"]],"symmetry":[[]],"time":55.64599609375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 (neg.f64 x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 (neg.f64 x)))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))"]],"time":21.531982421875,"type":"simplify"},{"compiler":[[20,9]],"time":0.308837890625,"type":"eval"},{"alts":[["(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","next",60.32533452885785]],"compiler":[[10,6],[10,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[60.32533452885785],"time":0.855224609375,"type":"prune"},{"compiler":[[24,6]],"locations":[["(cos.f64 x)",0.015625,true],["(sqrt.f64 (cos.f64 x))",0.04296875,true],["(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))",0.7364228567785984,true],["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))",4.69978736585811,true]],"time":6.226806640625,"type":"localize"},{"count":[[4,12]],"series":[["(cos.f64 x)","x","-inf",0.16796875],["(cos.f64 x)","x","inf",0.140869140625],["(cos.f64 x)","x","0",0.19287109375],["(sqrt.f64 (cos.f64 x))","x","-inf",0.261962890625],["(sqrt.f64 (cos.f64 x))","x","inf",0.433837890625],["(sqrt.f64 (cos.f64 x))","x","0",0.26806640625],["(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","x","-inf",0.448974609375],["(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","x","inf",0.4931640625],["(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","x","0",0.594970703125],["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","x","-inf",0.195068359375],["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","x","inf",0.19287109375],["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","x","0",0.3310546875]],"time":3.88916015625,"type":"series"},{"count":[[4,142]],"inputs":[["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(sqrt.f64 (cos.f64 x))","(cos.f64 x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 0) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 1/2) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 0 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2/3) (cbrt.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (neg.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 0) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 1/2) (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) (*.f64 0 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))) (*.f64 1/2 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (exp.f64 x))) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))) (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 2/3) (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2/3) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 x)) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2/3) (exp.f64 x)) (cbrt.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (pow.f64 (exp.f64 x) 2/3)) (cbrt.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (neg.f64 x))) (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (cbrt.f64 (exp.f64 x))) (pow.f64 (cbrt.f64 (exp.f64 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (neg.f64 (exp.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (pow.f64 (exp.f64 x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (cbrt.f64 (exp.f64 x))) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 2/3) (cbrt.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 2/3) (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))) (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2/3)) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (cbrt.f64 (exp.f64 x))) 1) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 2/3)) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 2/3)) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (pow.f64 (exp.f64 x) 2/3)) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (cbrt.f64 (exp.f64 x))) 1) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (cbrt.f64 (exp.f64 x))) (neg.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (cbrt.f64 (exp.f64 x)))) (neg.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (neg.f64 (exp.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (cos.f64 x)) (*.f64 (sqrt.f64 (cos.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (cos.f64 x)) 0) (sqrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (cos.f64 x)) 1/2) (*.f64 (sqrt.f64 (cos.f64 x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (cos.f64 x)) (*.f64 0 (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (cos.f64 x))) (sqrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (cos.f64 x))) (*.f64 1/2 (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x))) (sqrt.f64 (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (cos.f64 x))) (cbrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 x)) (cbrt.f64 (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x)))) (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x)))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x)))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (cos.f64 x))) (fabs.f64 (cbrt.f64 (sqrt.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (cos.f64 x)))) (fabs.f64 (cbrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (cos.f64 x)) 0) (sqrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 x)) (pow.f64 (sqrt.f64 (cos.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (cos.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 x) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (cos.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (cos.f64 x))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 x) (*.f64 (cos.f64 x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 x) 0) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 x) 1/2) (*.f64 (cos.f64 x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 x) (*.f64 0 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 x)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cos.f64 x)) (*.f64 1/2 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (cos.f64 x))) (pow.f64 (cos.f64 x) 5/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (cos.f64 x))) (neg.f64 (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 x) 5/6) (cbrt.f64 (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x)))) (sqrt.f64 (sqrt.f64 (cos.f64 x)))) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x)))) (sqrt.f64 (sqrt.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x))) (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x))))) (*.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x))) (neg.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (cos.f64 x))) 1) (*.f64 (neg.f64 (sqrt.f64 (cos.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 x) 0) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 x) (pow.f64 (cos.f64 x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 x)) (pow.f64 (cos.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 x) 2/3) (cbrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 x) 3/4) (sqrt.f64 (sqrt.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x))) (pow.f64 (cos.f64 x) 3/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (cos.f64 x))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 3/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (cos.f64 x))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (cos.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 x)))))"]],"rules":[["egg-rr",38],["egg-rr",34],["egg-rr",46],["egg-rr",24]],"time":37.492919921875,"type":"rewrite"},{"count":[[154,161]],"inputs":[["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(+.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 -1 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (pow.f64 x 2))) (+.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 -1 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) x))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (+.f64 (*.f64 -1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 1/6 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (pow.f64 x 2))) (+.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 -1 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) x)))))","1","(+.f64 1 (*.f64 -1/4 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/4 (pow.f64 x 2)) (*.f64 -1/96 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -1/4 (pow.f64 x 2)) (+.f64 (*.f64 -1/96 (pow.f64 x 4)) (*.f64 -19/5760 (pow.f64 x 6)))))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6)))))"]],"method":["egg-herbie"],"outputs":[["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(+.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 -1 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) x)))","(fma.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) x (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (pow.f64 x 2))) (+.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 -1 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) x))))","(-.f64 (fma.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) x (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 (*.f64 (*.f64 x x) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) -1/2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (+.f64 (*.f64 -1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 1/6 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (pow.f64 x 2))) (+.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 -1 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) x)))))","(fma.f64 (neg.f64 (fma.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/3 (*.f64 (neg.f64 -1/2) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (pow.f64 x 3) (-.f64 (fma.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) x (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 (*.f64 (*.f64 x x) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) -1/2)))","1","(+.f64 1 (*.f64 -1/4 (pow.f64 x 2)))","(fma.f64 -1/4 (*.f64 x x) 1)","(+.f64 1 (+.f64 (*.f64 -1/4 (pow.f64 x 2)) (*.f64 -1/96 (pow.f64 x 4))))","(+.f64 1 (fma.f64 -1/96 (pow.f64 x 4) (*.f64 -1/4 (*.f64 x x))))","(+.f64 1 (+.f64 (*.f64 -1/4 (pow.f64 x 2)) (+.f64 (*.f64 -1/96 (pow.f64 x 4)) (*.f64 -19/5760 (pow.f64 x 6)))))","(+.f64 (fma.f64 -1/4 (*.f64 x x) 1) (fma.f64 -1/96 (pow.f64 x 4) (*.f64 -19/5760 (pow.f64 x 6))))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(fma.f64 -1/2 (*.f64 x x) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4))))","(+.f64 1 (fma.f64 1/24 (pow.f64 x 4) (*.f64 -1/2 (*.f64 x x))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6)))))","(+.f64 (fma.f64 -1/2 (*.f64 x x) 1) (fma.f64 1/24 (pow.f64 x 4) (*.f64 -1/720 (pow.f64 x 6))))"]],"time":48.7548828125,"type":"simplify"},{"compiler":[[2574,837]],"time":21.533203125,"type":"eval"},{"alts":[["(/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))","next",60.30826720928884],["(/.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 3) 1/3) (exp.f64 x))","fresh",60.32325354236478],["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","fresh",61.25118912085054]],"compiler":[[12,8],[14,10],[7,5],[12,8],[14,10],[7,5]],"count":[[162,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[161,3],"picked":[1,0]}],"min-error":[60.29073499306492],"time":58.25390625,"type":"prune"},{"compiler":[[35,18]],"locations":[["(cbrt.f64 (pow.f64 (cos.f64 x) 3/2))",0.02734375,true],["(pow.f64 (cos.f64 x) 3/2)",0.1015625,true],["(/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))",0.7364228567785984,true],["(fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))",4.69978736585811,true]],"time":12.738037109375,"type":"localize"},{"count":[[4,48]],"series":[["(cbrt.f64 (pow.f64 (cos.f64 x) 3/2))","x","-inf",0.322998046875],["(cbrt.f64 (pow.f64 (cos.f64 x) 3/2))","x","inf",0.324951171875],["(cbrt.f64 (pow.f64 (cos.f64 x) 3/2))","x","0",0.200927734375],["(pow.f64 (cos.f64 x) 3/2)","x","-inf",10.530029296875],["(pow.f64 (cos.f64 x) 3/2)","x","inf",15.083984375],["(pow.f64 (cos.f64 x) 3/2)","x","0",0.7099609375],["(/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))","x","-inf",0.278076171875],["(/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))","x","inf",0.31201171875],["(/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))","x","0",0.27197265625],["(fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))","x","-inf",0.213134765625],["(fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))","x","inf",0.18896484375],["(fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))","x","0",0.281982421875]],"time":28.970947265625,"type":"series"},{"count":[[4,119]],"inputs":[["(fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))","(/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))","(pow.f64 (cos.f64 x) 3/2)","(cbrt.f64 (pow.f64 (cos.f64 x) 3/2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (*.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 0) (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (*.f64 0 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) (neg.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) -1) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) -1) (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 0) (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) (*.f64 0 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (exp.f64 x))) (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) -1) (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) (/.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) -1) (/.f64 (neg.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (cbrt.f64 (neg.f64 (exp.f64 x)))) (/.f64 (neg.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) (cbrt.f64 (exp.f64 x))) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (neg.f64 (pow.f64 (exp.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) 1) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 x)) (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (neg.f64 x))) (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (exp.f64 x)) (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (pow.f64 (exp.f64 x) 2/3)) (cbrt.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x))) (pow.f64 (cbrt.f64 (exp.f64 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) -1) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -2) (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -2)) (/.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (exp.f64 x)) (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (pow.f64 (exp.f64 x) 2/3)) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) -1) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x))) (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (pow.f64 (exp.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (pow.f64 (exp.f64 x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x))) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x))) 1) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (pow.f64 (exp.f64 x) 2/3)) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x))) 1) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) -1) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (cbrt.f64 (exp.f64 x))) (neg.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x)))) (neg.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 x) 3/2) (*.f64 (pow.f64 (cos.f64 x) 3/2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 x) 3/2) 0) (pow.f64 (cos.f64 x) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 x) 3/2) (*.f64 0 (pow.f64 (cos.f64 x) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cos.f64 x) 3/2)) (pow.f64 (cos.f64 x) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cos.f64 x) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 x) 3/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cos.f64 x) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 x) 3/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (*.f64 (cbrt.f64 (cos.f64 x)) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cos.f64 x)) (cos.f64 x)) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cos.f64 x) 3/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cos.f64 x) 3/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 3/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 x) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cos.f64 x) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cos.f64 x) 3/2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)) 0) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)) (*.f64 0 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (cbrt.f64 (*.f64 (cbrt.f64 (cos.f64 x)) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 x) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 x) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 x)) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 x) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))))"]],"rules":[["egg-rr",17],["egg-rr",19],["egg-rr",58],["egg-rr",25]],"time":39.7509765625,"type":"rewrite"},{"count":[[167,142]],"inputs":[["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(+.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 -1 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (pow.f64 x 2))) (+.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 -1 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) x))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (+.f64 (*.f64 -1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 1/6 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (pow.f64 x 2))) (+.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 -1 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) x)))))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","1","(+.f64 1 (*.f64 -3/4 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 5/32 (pow.f64 x 4)) (*.f64 -3/4 (pow.f64 x 2))))","(+.f64 (*.f64 -19/1920 (pow.f64 x 6)) (+.f64 1 (+.f64 (*.f64 5/32 (pow.f64 x 4)) (*.f64 -3/4 (pow.f64 x 2)))))","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","1","(+.f64 1 (*.f64 -1/4 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/4 (pow.f64 x 2)) (*.f64 -1/96 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -1/4 (pow.f64 x 2)) (+.f64 (*.f64 -1/96 (pow.f64 x 4)) (*.f64 -19/5760 (pow.f64 x 6)))))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))"]],"method":["egg-herbie"],"outputs":[["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(+.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 -1 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) x)))","(fma.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) x (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (pow.f64 x 2))) (+.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 -1 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) x))))","(fma.f64 (*.f64 (neg.f64 -1/2) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 x x) (fma.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) x (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (+.f64 (*.f64 -1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 1/6 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (pow.f64 x 2))) (+.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (*.f64 -1 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) x)))))","(fma.f64 (neg.f64 (fma.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/3 (*.f64 (neg.f64 -1/2) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (pow.f64 x 3) (fma.f64 (*.f64 (neg.f64 -1/2) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 x x) (fma.f64 (neg.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) x (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","1","(+.f64 1 (*.f64 -3/4 (pow.f64 x 2)))","(fma.f64 -3/4 (*.f64 x x) 1)","(+.f64 1 (+.f64 (*.f64 5/32 (pow.f64 x 4)) (*.f64 -3/4 (pow.f64 x 2))))","(+.f64 1 (fma.f64 5/32 (pow.f64 x 4) (*.f64 -3/4 (*.f64 x x))))","(+.f64 (*.f64 -19/1920 (pow.f64 x 6)) (+.f64 1 (+.f64 (*.f64 5/32 (pow.f64 x 4)) (*.f64 -3/4 (pow.f64 x 2)))))","(+.f64 (fma.f64 -19/1920 (pow.f64 x 6) 1) (fma.f64 5/32 (pow.f64 x 4) (*.f64 -3/4 (*.f64 x x))))","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(pow.f64 (cos.f64 x) 3/2)","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(pow.f64 (cos.f64 x) 3/2)","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(pow.f64 (cos.f64 x) 3/2)","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(pow.f64 (cos.f64 x) 3/2)","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(pow.f64 (cos.f64 x) 3/2)","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(pow.f64 (cos.f64 x) 3/2)","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(pow.f64 (cos.f64 x) 3/2)","(sqrt.f64 (pow.f64 (cos.f64 x) 3))","(pow.f64 (cos.f64 x) 3/2)","1","(+.f64 1 (*.f64 -1/4 (pow.f64 x 2)))","(fma.f64 (*.f64 x x) -1/4 1)","(+.f64 1 (+.f64 (*.f64 -1/4 (pow.f64 x 2)) (*.f64 -1/96 (pow.f64 x 4))))","(+.f64 1 (fma.f64 -1/96 (pow.f64 x 4) (*.f64 -1/4 (*.f64 x x))))","(+.f64 1 (+.f64 (*.f64 -1/4 (pow.f64 x 2)) (+.f64 (*.f64 -1/96 (pow.f64 x 4)) (*.f64 -19/5760 (pow.f64 x 6)))))","(+.f64 (fma.f64 (*.f64 x x) -1/4 1) (fma.f64 -1/96 (pow.f64 x 4) (*.f64 -19/5760 (pow.f64 x 6))))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))","(sqrt.f64 (cos.f64 x))"]],"time":148.72216796875,"type":"simplify"},{"compiler":[[2647,1377]],"time":30.698974609375,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 3)","next",60.307398488892915],["(/.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 3) 1/3) (exp.f64 x))","fresh",60.32325354236478],["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","fresh",61.25118912085054]],"compiler":[[15,11],[14,10],[7,5],[15,11],[14,10],[7,5]],"count":[[145,3]],"kept":[{"done":[0,0],"fresh":[2,2],"new":[142,1],"picked":[1,0]}],"min-error":[60.28844998329648],"time":49.722900390625,"type":"prune"},{"compiler":[[62,33]],"locations":[["(pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 3)",0.03125,true],["(pow.f64 (cos.f64 x) 3/2)",0.1015625,false],["(/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))",0.7364228567785984,false],["(fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))",4.69978736585811,false]],"time":21.014892578125,"type":"localize"},{"count":[[1,12]],"series":[["(pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 3)","x","-inf",1.614013671875],["(pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 3)","x","inf",1.8330078125],["(pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 3)","x","0",3.365966796875]],"time":6.93212890625,"type":"series"},{"count":[[1,71]],"inputs":[["(pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 0) (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) (*.f64 0 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (exp.f64 x))) (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) -1) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) -1) (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) (/.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) -1) (/.f64 (neg.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) (cbrt.f64 (pow.f64 (exp.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (cbrt.f64 (pow.f64 (exp.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 x)) (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3) (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 4/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (neg.f64 x))) (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (pow.f64 (exp.f64 x) 2/3)) (cbrt.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (exp.f64 x)) (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 4/3) 2) (cbrt.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x))) (pow.f64 (cbrt.f64 (exp.f64 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -2) (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -2)) (/.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x))) (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (exp.f64 x)) (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (pow.f64 (exp.f64 x) 2/3)) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) -1) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (pow.f64 (exp.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x)))) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (neg.f64 (pow.f64 (exp.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) 1) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x)))) (/.f64 (neg.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 4/3) 2)) (cbrt.f64 (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (pow.f64 (exp.f64 x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (pow.f64 (exp.f64 x) 2/3)) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x))) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (pow.f64 (exp.f64 x) 2/3)) 1) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x))) 1) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) -1) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (cbrt.f64 (exp.f64 x))) (neg.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (pow.f64 (exp.f64 x) 2/3)) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (pow.f64 (exp.f64 x) 2/3)) 1) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x))) 1) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))) (neg.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x)))) (neg.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (cbrt.f64 (exp.f64 x)))) (neg.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (pow.f64 (exp.f64 x) 2/3))) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 3))))))"]],"rules":[["egg-rr",71]],"time":27.736083984375,"type":"rewrite"},{"count":[[83,81]],"inputs":[["(*.f64 (pow.f64 1 1/3) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13)) 1/9))) x) (*.f64 (pow.f64 1 1/3) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))","(+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 14)) 1/9)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (*.f64 2/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13)) 1/9))) x) (*.f64 (pow.f64 1 1/3) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/9) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 14)) 1/9))))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (+.f64 (*.f64 -1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (+.f64 (*.f64 1/6 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))))))) (pow.f64 1 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (+.f64 (*.f64 -1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (+.f64 (*.f64 1/6 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))))))) (pow.f64 (/.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3))))) (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 14)) 1/9)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (*.f64 2/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13)) 1/9))) x) (*.f64 (pow.f64 1 1/3) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 1 1/3) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13)) 1/9))) x) (*.f64 (pow.f64 1 1/3) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))","(fma.f64 (neg.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13) 1/9)) x (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))","(+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 14)) 1/9)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (*.f64 2/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13)) 1/9))) x) (*.f64 (pow.f64 1 1/3) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))","(fma.f64 (fma.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2))) (*.f64 1/9 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 14) 1/9))) (cbrt.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (fma.f64 -1/3 (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2)) (*.f64 2/9 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9)))) (*.f64 x x) (fma.f64 (neg.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13) 1/9)) x (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/9) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 14)) 1/9))))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (+.f64 (*.f64 -1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (+.f64 (*.f64 1/6 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))))))) (pow.f64 1 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (+.f64 (*.f64 -1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (+.f64 (*.f64 1/6 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))))))) (pow.f64 (/.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3))))) (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) 1/3) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 14)) 1/9)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))) (*.f64 2/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13)) 1/9))) x) (*.f64 (pow.f64 1 1/3) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))","(fma.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2))) (*.f64 1/9 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 14) 1/9)))) (-.f64 (+.f64 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (+.f64 -1/2 1/6)) (fma.f64 -1/27 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4) 1/9) (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2)))))) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2)))) (fma.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (fma.f64 2/9 (*.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 1/9) (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2))) (*.f64 (*.f64 -2/3 (-.f64 (+.f64 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (+.f64 -1/2 1/6)) (fma.f64 -1/27 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4) 1/9) (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2)))))) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2))) (cbrt.f64 (/.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4) 1/9) (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2)))))) (pow.f64 x 3) (fma.f64 (fma.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2))) (*.f64 1/9 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 14) 1/9))) (cbrt.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (fma.f64 -1/3 (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2)) (*.f64 2/9 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9)))) (*.f64 x x) (fma.f64 (neg.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 13) 1/9)) x (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x)))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))"]],"time":57.7919921875,"type":"simplify"},{"compiler":[[5482,2965]],"time":59.9619140625,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 3) 1/3)) 3)","fresh",60.306734719355035],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3))","next",60.30408600097734],["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","fresh",61.25118912085054]],"compiler":[[19,15],[30,20],[7,5],[19,15],[30,20],[7,5]],"count":[[202,3]],"kept":[{"done":[0,0],"fresh":[2,1],"new":[199,2],"picked":[1,0]}],"min-error":[60.28328620167583],"time":79.571044921875,"type":"prune"},{"compiler":[[119,66]],"locations":[["(pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)",0.17833338362814108,true],["(pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)",0.19665289646357184,true],["(/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))",0.7364228567785984,false],["(fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))",4.69978736585811,false]],"time":37.712890625,"type":"localize"},{"count":[[2,24]],"series":[["(pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)","x","-inf",9.682861328125],["(pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)","x","inf",9.657958984375],["(pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)","x","0",1.366943359375],["(pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)","x","-inf",21.837158203125],["(pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)","x","inf",10.899169921875],["(pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)","x","0",2.63818359375]],"time":56.2900390625,"type":"series"},{"count":[[2,67]],"inputs":[["(pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)","(pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3) 0) (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3) (*.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)) (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3) (*.f64 0 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3) 2/3) (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) 0) (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) (*.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) (*.f64 0 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x)))) (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (neg.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))) 4) (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))) (+.f64 2 3)) (cbrt.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (pow.f64 (cbrt.f64 (exp.f64 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (cbrt.f64 (pow.f64 (exp.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) (cbrt.f64 (pow.f64 (exp.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (/.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)) 2) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)) (cbrt.f64 (exp.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)) 2) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)) 1) (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)) 2) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (cbrt.f64 (pow.f64 (exp.f64 x) 2/3))) (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (/.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (exp.f64 x) 2/3))) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2)))))) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x))) 1) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))) (+.f64 2 3))) (cbrt.f64 (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))))) (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x))) 1) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (pow.f64 (exp.f64 x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3)) (neg.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) 2/3) (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2))))))"]],"rules":[["egg-rr",48],["egg-rr",19]],"time":31.218994140625,"type":"rewrite"},{"count":[[91,86]],"inputs":[["(pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9)","(+.f64 (*.f64 -7/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 11)) 1/9) x)) (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9))","(+.f64 (*.f64 -7/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 11)) 1/9) x)) (+.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/9) (*.f64 (+.f64 (*.f64 7/6 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (*.f64 -1/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8)) 1/9)))) (*.f64 49/162 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8)) 1/9))) (pow.f64 x 2)))))","(+.f64 (*.f64 -7/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 11)) 1/9) x)) (+.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/9) (*.f64 (+.f64 (*.f64 7/6 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (*.f64 -1/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8)) 1/9)))) (*.f64 49/162 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8)) 1/9))) (pow.f64 x 2))) (*.f64 (*.f64 (+.f64 (*.f64 7/18 (+.f64 (*.f64 -2/27 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/3)) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (+.f64 (*.f64 -1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (+.f64 (*.f64 1/6 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 5)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))))))) (+.f64 (*.f64 -49/54 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/9) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (*.f64 -1/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8)) 1/9))))) (*.f64 -343/4374 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/3)))) (pow.f64 x 3)) (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/9)))))","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) 1/3)","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) 1/3) x)) (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) 1/3))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) 1/3) (*.f64 (+.f64 2/9 (*.f64 1/3 (-.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) 1))) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) 1/3) x)) (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) 1/3)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) 1/3) (*.f64 (-.f64 (+.f64 (*.f64 -2/9 (-.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) 1)) (*.f64 1/9 (-.f64 (+.f64 (*.f64 -6 (/.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (*.f64 -6 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (+.f64 (*.f64 -1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 1/6 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) 2))) 4/81) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) 1/3) (*.f64 (+.f64 2/9 (*.f64 1/3 (-.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) 1))) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) 1/3) x)) (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) 1/3))))","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9)","(+.f64 (*.f64 -7/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 11)) 1/9) x)) (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9))","(fma.f64 -7/9 (*.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 11) 1/9) x) (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9))","(+.f64 (*.f64 -7/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 11)) 1/9) x)) (+.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/9) (*.f64 (+.f64 (*.f64 7/6 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (*.f64 -1/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8)) 1/9)))) (*.f64 49/162 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8)) 1/9))) (pow.f64 x 2)))))","(fma.f64 -7/9 (*.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 11) 1/9) x) (*.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9) (+.f64 (*.f64 (fma.f64 7/6 (fma.f64 -2/3 (/.f64 (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2)) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1/9 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8) 1/9))) (*.f64 49/162 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8) 1/9))) (*.f64 x x)) 1)))","(+.f64 (*.f64 -7/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 11)) 1/9) x)) (+.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/9) (*.f64 (+.f64 (*.f64 7/6 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (*.f64 -1/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8)) 1/9)))) (*.f64 49/162 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8)) 1/9))) (pow.f64 x 2))) (*.f64 (*.f64 (+.f64 (*.f64 7/18 (+.f64 (*.f64 -2/27 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/3)) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (+.f64 (*.f64 -1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (+.f64 (*.f64 1/6 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))))))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 5)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))))))))) (+.f64 (*.f64 -49/54 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/9) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17)) 1/9)) (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (*.f64 -1/9 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8)) 1/9))))) (*.f64 -343/4374 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) 1/3)))) (pow.f64 x 3)) (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) 1/9)))))","(+.f64 (fma.f64 -7/9 (*.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 11) 1/9) x) (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9)) (*.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9) (+.f64 (*.f64 (fma.f64 7/6 (fma.f64 -2/3 (/.f64 (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2)) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1/9 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8) 1/9))) (*.f64 49/162 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8) 1/9))) (*.f64 x x)) (*.f64 (fma.f64 (fma.f64 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4)) -2/27 (fma.f64 -2 (/.f64 (-.f64 (fma.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/3 (fma.f64 -1/27 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4) 1/9) (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2)))))) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2)) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -5) 1/9) (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2)))))) 7/18 (fma.f64 (*.f64 -49/54 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4) 1/9)) (fma.f64 -2/3 (/.f64 (fma.f64 1/3 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 17) 1/9) (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2)) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1/9 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 8) 1/9))) (*.f64 -343/4374 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 4))))) (pow.f64 x 3)))))","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (exp.f64 (*.f64 x 7))) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (exp.f64 (*.f64 x 7))) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (exp.f64 (*.f64 x 7))) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (exp.f64 (*.f64 x 7))) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (exp.f64 (*.f64 x 7))) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (exp.f64 (*.f64 x 7))) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (exp.f64 (*.f64 x 7))) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (pow.f64 (exp.f64 x) 7)) 1/9)","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) (exp.f64 (*.f64 x 7))) 1/9)","(pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) 1/3)","(cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) 1/3) x)) (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) 1/3))","(fma.f64 -2/3 (*.f64 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) x) (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) 1/3) (*.f64 (+.f64 2/9 (*.f64 1/3 (-.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) 1))) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) 1/3) x)) (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) 1/3)))","(fma.f64 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) (*.f64 (fma.f64 (fma.f64 -2 (/.f64 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) -1) 1/3 2/9) (*.f64 x x)) (fma.f64 -2/3 (*.f64 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) x) (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) 1/3) (*.f64 (-.f64 (+.f64 (*.f64 -2/9 (-.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) 1)) (*.f64 1/9 (-.f64 (+.f64 (*.f64 -6 (/.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (*.f64 -6 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (+.f64 (*.f64 -1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 1/6 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) 2))) 4/81) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) 1/3) (*.f64 (+.f64 2/9 (*.f64 1/3 (-.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/2 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) (*.f64 -1 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))))) 1))) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) 1/3) x)) (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) 1/3))))","(+.f64 (*.f64 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) (+.f64 (*.f64 (fma.f64 (fma.f64 -2 (/.f64 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) -1) -2/9 (fma.f64 1/9 (fma.f64 -6 (/.f64 (+.f64 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2) (fma.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/3 (*.f64 (neg.f64 -1/2) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))))) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) -2) -4/81)) (pow.f64 x 3)) (*.f64 (fma.f64 (fma.f64 -2 (/.f64 (*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) -1/2) (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))) -1) 1/3 2/9) (*.f64 x x)))) (fma.f64 -2/3 (*.f64 (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2)) x) (cbrt.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2))))","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) -2)))","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) -2)))","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) -2)))","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) -2)))","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) -2)))","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) -2)))","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) -2)))","(pow.f64 (/.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 2) (pow.f64 (exp.f64 x) -2)))"]],"time":106.2470703125,"type":"simplify"},{"compiler":[[11346,6478]],"time":119.44189453125,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 3) 1/3)) 3)","fresh",60.306734719355035],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3))","done",60.30408600097734],["(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","fresh",61.25118912085054],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9))","fresh",61.25892235844372]],"compiler":[[19,15],[30,20],[7,5],[26,18]],"count":[[271,4]],"kept":[{"done":[0,0],"fresh":[2,2],"new":[268,1],"picked":[1,1]}],"min-error":[60.28328620167583],"time":149.9931640625,"type":"prune"},{"accuracy":[60.30408600097741],"baseline":[60.30408600097734],"branch":[["x",60.304086000977485,1],["(*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 (neg.f64 x)))",60.30408600097741,1]],"compiler":[[2,1],[11,8],[136,69]],"count":[[9,1]],"inputs":[["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 7) 1/9))","(pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 3) 1/3)) 3)","(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3))","(pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 3)","(/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))","(/.f64 (pow.f64 (pow.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) 3) 1/3) (exp.f64 x))","(fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x)))","(/.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 x))","(*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 (neg.f64 x)))"]],"link":["."],"name":["expfmod"],"oracle":[61.2668251385314],"outputs":[["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3))"]],"time":8.73779296875,"times":[["x",4.2041015625],["(*.f64 (fmod.f64 (exp.f64 x) (sqrt.f64 (cos.f64 x))) (exp.f64 (neg.f64 x)))",2.10205078125]],"type":"regimes"},{"compiler":[[30,20]],"inputs":[["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (fmod.f64 (exp.f64 x) (cbrt.f64 (pow.f64 (cos.f64 x) 3/2))) (exp.f64 x))) 7/3))"]],"stop":[["fuel",1]],"time":20.739990234375,"type":"simplify"},{"time":0.01611328125,"type":"soundness"},{"compiler":[[30,20]],"remove-preprocessing":[[]],"time":14.9140625,"type":"end"}]