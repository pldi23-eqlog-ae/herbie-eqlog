[{"compiler":[[21,15]],"method":["search"],"sampling":[[12,0.29058954069728316,0.52852191630177,0.1808885430009468],[11,0.22037998724022145,0.629935715739748,0.1496842970200305],[10,0.15602122990458156,0.7098965960658461,0.13408217402957234],[9,0.10141379943797801,0.8113103955038241,0.08727580505819788],[8,0.062408491961832624,0.8737188874656567,0.06387262057251064],[7,0.0,0.9361273794274894,0.06387262057251064],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":148.043212890625,"type":"analyze"},{"outcomes":[["body",256,"invalid",88.203857421875,1580],["body",4096,"valid",102.114501953125,415],["body",512,"valid",38.98681640625,377],["body",1024,"valid",109.693115234375,743],["body",2048,"valid",224.713623046875,1155],["body",256,"valid",315.30810546875,5566]],"time":889.601806640625,"type":"sample"},{"compiler":[[20,14]],"inputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c)))) (*.f64 2 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a)))) (*.f64 2 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b)))) (*.f64 2 a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 c a)))) b) (/.f64 1/2 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c)))) (*.f64 2 b))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 a a (*.f64 -4 (*.f64 b c)))) a) (/.f64 1/2 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a)))) (*.f64 2 c))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 c a)))) b) (/.f64 1/2 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b)))) (*.f64 2 a))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 c c (*.f64 -4 (*.f64 a b)))) c) (/.f64 1/2 a))"]],"symmetry":[[]],"time":78.8310546875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))"]],"time":21.35107421875,"type":"simplify"},{"compiler":[[35,23]],"time":0.508056640625,"type":"eval"},{"alts":[["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","fresh",36.58907089947487],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","next",36.50359847605632]],"compiler":[[18,12],[20,14],[18,12],[20,14]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[36.48406722605632],"time":1.56298828125,"type":"prune"},{"compiler":[[73,38]],"locations":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))",0.0703125,true],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))",0.4180693557102868,true],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))",0.9960937500000001,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))",23.64914674034015,true]],"time":16.467041015625,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","c","-inf",0.375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","c","inf",0.58203125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","c","0",0.447021484375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","a","-inf",0.468017578125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","a","inf",0.76708984375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","a","0",0.428955078125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","b","-inf",0.31298828125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","b","inf",0.97900390625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","b","0",1.195068359375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","-inf",0.5478515625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","inf",0.419921875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","0",0.377197265625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","-inf",0.30517578125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","inf",0.302001953125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","0",0.39404296875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","-inf",0.248046875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","inf",0.408935546875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","0",0.281982421875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","c","-inf",0.216064453125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","c","inf",0.27490234375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","c","0",0.31787109375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","a","-inf",0.2041015625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","a","inf",0.31298828125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","a","0",0.343994140625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","b","-inf",0.174072265625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","b","inf",0.2900390625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","b","0",0.342041015625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","c","-inf",0.57080078125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","c","inf",0.633056640625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","c","0",0.39892578125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","a","-inf",0.43505859375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","a","inf",0.60791015625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","a","0",0.389892578125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","b","-inf",0.344970703125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","b","inf",0.489990234375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","b","0",0.9638671875]],"time":16.712890625,"type":"series"},{"count":[[4,291]],"inputs":[["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 1/2) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 0) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (-.f64 0 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 0))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 0) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 -4 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -4 a) c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 1/2) (*.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 0) (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) (*.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (*.f64 1/2 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) (*.f64 0 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -4 a) c) (*.f64 (neg.f64 (*.f64 b b)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 c (*.f64 4 a) (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 -4 a) c) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 c (*.f64 4 a) (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (*.f64 b b)) (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 c (*.f64 4 a) (neg.f64 (*.f64 b b))))) (pow.f64 (cbrt.f64 (fma.f64 c (*.f64 4 a) (neg.f64 (*.f64 b b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 c (*.f64 4 a) (neg.f64 (*.f64 b b)))) (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 c (*.f64 4 a) (neg.f64 (*.f64 b b)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) -1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 b 4)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (cbrt.f64 (*.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 0) (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 c (*.f64 4 a) (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 c (*.f64 4 a) (neg.f64 (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 -4 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 -4 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 (neg.f64 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 -4 a) c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 a) (neg.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 -4 a) c)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -4 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) (neg.f64 b) (*.f64 (*.f64 -4 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (*.f64 (cbrt.f64 (*.f64 b b)) (neg.f64 b)) (*.f64 (*.f64 -4 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 -4 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) b) (*.f64 (*.f64 -4 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 -4 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (*.f64 4 a) c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 b b)) (*.f64 (*.f64 -4 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (cbrt.f64 (*.f64 b b)) (*.f64 (*.f64 -4 a) c))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 0) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) -1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (-.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (+.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 (neg.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) 1 (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (neg.f64 b)) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 1/2) (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 0) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/2 a) (neg.f64 b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/2 a) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (*.f64 (/.f64 1/2 a) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a))) (*.f64 1/2 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a))) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) (*.f64 0 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 b) (/.f64 1/2 a)) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (/.f64 1/2 a)) (*.f64 (neg.f64 b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 -2 a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (+.f64 a a)) (/.f64 b (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 a a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 2)) (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 2)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 8)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) a) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (pow.f64 (cbrt.f64 (+.f64 a a)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 (/.f64 1/2 a))) (pow.f64 (cbrt.f64 (+.f64 a a)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (cbrt.f64 a)) (/.f64 1 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 1/2) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 1/2) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (sqrt.f64 1/2)) 1) (*.f64 (sqrt.f64 2) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 1/2)) 1) (*.f64 (cbrt.f64 4) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 2))) (*.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 (*.f64 a a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (cbrt.f64 a)) 1) (*.f64 (cbrt.f64 (*.f64 a a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 (/.f64 1/2 a))) 1) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) (*.f64 (sqrt.f64 2) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) (*.f64 (cbrt.f64 4) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 1/2)) (*.f64 a (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (sqrt.f64 1/2)) (*.f64 a (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (*.f64 -2 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) 1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 (/.f64 1/2 a))) (cbrt.f64 (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (+.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))) (cbrt.f64 (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 2)) (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))))) (cbrt.f64 (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 2)) (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (sqrt.f64 1/2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 1/2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a))) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 2))) (cbrt.f64 (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) (cbrt.f64 (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 8)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 2))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) a) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 2)) a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 2))) (cbrt.f64 (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 2))) (cbrt.f64 (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 (/.f64 1/2 a))) 1) (cbrt.f64 (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (sqrt.f64 1/2)) (/.f64 1 a)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 1 a)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 1/2)) (/.f64 1 a)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (pow.f64 (cbrt.f64 (+.f64 a a)) -2)) (cbrt.f64 (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) a) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 (+.f64 a a))) (neg.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 (/.f64 1/2 a))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 a a))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 a a))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 (/.f64 1/2 a))) 1) (cbrt.f64 (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (*.f64 a (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (*.f64 2 (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) -1) (*.f64 -2 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 1/2)) (*.f64 (cbrt.f64 4) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (*.f64 a (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (sqrt.f64 1/2)) (*.f64 (sqrt.f64 2) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (/.f64 -1/2 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) 3))))))"]],"rules":[["egg-rr",110],["egg-rr",53],["egg-rr",75],["egg-rr",53]],"time":50.614990234375,"type":"rewrite"},{"count":[[375,350]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(-.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(+.f64 (-.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(+.f64 (fma.f64 -2 b (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 (/.f64 -2 b) (pow.f64 (/.f64 c b) 2)) 2))) b) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 a a)) (pow.f64 b 3)) 2))) b) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(-.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (/.f64 c b)) (fma.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (neg.f64 (/.f64 b a))))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(-.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(-.f64 (+.f64 (/.f64 (+.f64 (neg.f64 c) (*.f64 -1/4 (*.f64 (pow.f64 a 3) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 (/.f64 -2 b) (pow.f64 (/.f64 c b) 2)) 2))))) b) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(-.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(-.f64 (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 a a)) (pow.f64 b 3)) 2))) (*.f64 a b)) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))"]],"time":292.929931640625,"type":"simplify"},{"compiler":[[8283,5101]],"time":90.468017578125,"type":"eval"},{"alts":[["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 1/2)) (*.f64 (cbrt.f64 4) a))","fresh",36.5980122455932],["(neg.f64 (/.f64 b a))","fresh",44.28435283123305],["(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 b))) (*.f64 2 a))","fresh",36.76022660130654],["(/.f64 (/.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))","fresh",36.73642860304607],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","fresh",39.0006113834149],["(/.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a)) (sqrt.f64 2))","next",36.54656722605632],["(neg.f64 (/.f64 c b))","fresh",38.18410318261545],["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))","fresh",36.57000472605632],["(/.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a) (cbrt.f64 2)) (cbrt.f64 4))","fresh",36.6839497455932],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",51.9783068867363],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",44.5361859610908]],"compiler":[[22,16],[7,5],[49,31],[25,15],[17,10],[22,16],[7,5],[18,12],[22,16],[14,10],[10,6],[22,16],[7,5],[49,31],[25,15],[17,10],[22,16],[7,5],[18,12],[22,16],[14,10],[10,6]],"count":[[352,11]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[350,11],"picked":[1,0]}],"min-error":[4.355728213836046],"time":110.241943359375,"type":"prune"},{"compiler":[[97,60]],"locations":[["(*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a))",0.29525375976844204,true],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)",0.4180693557102868,true],["(fma.f64 b b (*.f64 (*.f64 -4 a) c))",1.249986238027801,true],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))",23.64914674034015,true]],"time":23.51123046875,"type":"localize"},{"count":[[4,84]],"series":[["(*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a))","c","-inf",1.52001953125],["(*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a))","c","inf",0.638916015625],["(*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a))","c","0",1.027099609375],["(*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a))","a","-inf",0.553955078125],["(*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a))","a","inf",0.64599609375],["(*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a))","a","0",0.510009765625],["(*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a))","b","-inf",0.820068359375],["(*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a))","b","inf",0.6748046875],["(*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a))","b","0",0.65380859375],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)","c","-inf",0.2490234375],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)","c","inf",0.272216796875],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)","c","0",0.218994140625],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)","a","-inf",0.27294921875],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)","a","inf",0.243896484375],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)","a","0",0.2451171875],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)","b","-inf",0.192138671875],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)","b","inf",0.2548828125],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)","b","0",0.2080078125],["(fma.f64 b b (*.f64 (*.f64 -4 a) c))","c","-inf",0.181884765625],["(fma.f64 b b (*.f64 (*.f64 -4 a) c))","c","inf",0.152099609375],["(fma.f64 b b (*.f64 (*.f64 -4 a) c))","c","0",0.2431640625],["(fma.f64 b b (*.f64 (*.f64 -4 a) c))","a","-inf",0.156005859375],["(fma.f64 b b (*.f64 (*.f64 -4 a) c))","a","inf",0.15283203125],["(fma.f64 b b (*.f64 (*.f64 -4 a) c))","a","0",0.254150390625],["(fma.f64 b b (*.f64 (*.f64 -4 a) c))","b","-inf",0.299072265625],["(fma.f64 b b (*.f64 (*.f64 -4 a) c))","b","inf",0.224853515625],["(fma.f64 b b (*.f64 (*.f64 -4 a) c))","b","0",0.2890625],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))","c","-inf",0.261962890625],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))","c","inf",0.283935546875],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))","c","0",0.2080078125],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))","a","-inf",0.296875],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))","a","inf",0.2890625],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))","a","0",0.213134765625],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))","b","-inf",0.31591796875],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))","b","inf",0.241943359375],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))","b","0",0.419921875]],"time":14.19482421875,"type":"series"},{"count":[[4,227]],"inputs":[["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))","(fma.f64 b b (*.f64 (*.f64 -4 a) c))","(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)","(*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1/2) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c -4) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1/2) (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 0) (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 1/2 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 0 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 0) (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 c -4) a)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c -4) a) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (cbrt.f64 (*.f64 -4 a))) (cbrt.f64 (*.f64 (*.f64 a a) 16)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -4 a)) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 16)) c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 c -4) a) 1 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -4 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c -4) a) 2)) (cbrt.f64 (*.f64 (*.f64 c -4) a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (*.f64 (cbrt.f64 (*.f64 c c)) (*.f64 -4 a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 -4 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (*.f64 c -4) a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c -4) a (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 c -4) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (cbrt.f64 (*.f64 b b)) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) b) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 c -4) a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 0) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 0 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (+.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1 (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)) 1/2) (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)) 0) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)) (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a)) (*.f64 (sqrt.f64 1/2) (neg.f64 (/.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a))) (*.f64 1/2 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)) (*.f64 0 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a) (sqrt.f64 1/2)) (*.f64 (neg.f64 (/.f64 b a)) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) a) 2)) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 1/2) (cbrt.f64 a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 1/2)) (/.f64 (*.f64 (cbrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 1/2)) (/.f64 (*.f64 (sqrt.f64 (sqrt.f64 1/2)) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) a) 2))) (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) a))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (sqrt.f64 (sqrt.f64 1/2))) a) (sqrt.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) a) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (cbrt.f64 (sqrt.f64 1/2))) a) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (cbrt.f64 (sqrt.f64 1/2))) a) 1) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (cbrt.f64 (sqrt.f64 1/2))) a) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (cbrt.f64 a)) 1) (*.f64 (cbrt.f64 (*.f64 a a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) a) 2))) (cbrt.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 1/2) (cbrt.f64 a)) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a (neg.f64 (*.f64 a b)))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (pow.f64 (cbrt.f64 a) -2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) a) 2)) (sqrt.f64 1/2))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) a) 2)) (sqrt.f64 1/2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) a) 2)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (cbrt.f64 a)) (sqrt.f64 1/2)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a (neg.f64 (*.f64 a b))) (sqrt.f64 1/2)) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (sqrt.f64 1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (/.f64 (sqrt.f64 1/2) a)) 3))))))"]],"rules":[["egg-rr",67],["egg-rr",51],["egg-rr",64],["egg-rr",45]],"time":45.004150390625,"type":"rewrite"},{"count":[[311,285]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))))","(*.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a)) (*.f64 2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a)) (*.f64 2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a)) (*.f64 2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))))","(*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)) (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2)))) b)))))","(*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2)))) (*.f64 a b))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(-.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(+.f64 (-.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (pow.f64 (*.f64 c a) 4) (*.f64 -2 -2))) (pow.f64 b 7)) (+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(+.f64 (fma.f64 b -2 (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 c c)) (pow.f64 b 3)) 2))) b) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 a a)) (pow.f64 b 3)) 2))) b) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))","(/.f64 (*.f64 -2 (*.f64 c (sqrt.f64 1/2))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))","(*.f64 -2 (fma.f64 (*.f64 (*.f64 c c) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))))","(+.f64 (*.f64 -2 (fma.f64 (*.f64 (*.f64 c c) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c (sqrt.f64 1/2)) b))) (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (sqrt.f64 1/2)) (*.f64 a a)) -4) (pow.f64 b 5)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))))","(fma.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (pow.f64 (*.f64 c a) 4) (*.f64 -2 -2)))) (*.f64 a (pow.f64 b 7))) (+.f64 (*.f64 -2 (fma.f64 (*.f64 (*.f64 c c) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c (sqrt.f64 1/2)) b))) (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (sqrt.f64 1/2)) (*.f64 a a)) -4) (pow.f64 b 5))))","(*.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a)) (*.f64 2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))","(fma.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a) (/.f64 (*.f64 2 (*.f64 c (sqrt.f64 1/2))) b))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a)) (*.f64 2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))))","(fma.f64 (/.f64 (*.f64 (*.f64 c c) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3)) 2 (fma.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a) (/.f64 (*.f64 2 (*.f64 c (sqrt.f64 1/2))) b)))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a)) (*.f64 2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))))","(fma.f64 (/.f64 (*.f64 (*.f64 (pow.f64 c 3) (sqrt.f64 1/2)) (*.f64 a a)) (pow.f64 b 5)) 4 (fma.f64 (/.f64 (*.f64 (*.f64 c c) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3)) 2 (fma.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a) (/.f64 (*.f64 2 (*.f64 c (sqrt.f64 1/2))) b))))","(*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))","(/.f64 (*.f64 -2 (*.f64 c (sqrt.f64 1/2))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))","(*.f64 -2 (fma.f64 (*.f64 (*.f64 c c) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))))","(+.f64 (*.f64 -2 (fma.f64 (*.f64 (*.f64 c c) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c (sqrt.f64 1/2)) b))) (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (sqrt.f64 1/2)) (*.f64 a a)) -4) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)) (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2)))) b)))))","(fma.f64 (/.f64 (*.f64 (*.f64 c c) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3)) -2 (fma.f64 -4 (/.f64 (*.f64 (*.f64 (pow.f64 c 3) (sqrt.f64 1/2)) (*.f64 a a)) (pow.f64 b 5)) (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a 3) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 c c)) (pow.f64 b 3)) 2))))) (*.f64 -2 (*.f64 c (sqrt.f64 1/2)))) b)))","(*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))","(/.f64 (*.f64 -2 (*.f64 c (sqrt.f64 1/2))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))","(*.f64 -2 (fma.f64 (*.f64 (*.f64 c c) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b))))","(+.f64 (*.f64 -2 (fma.f64 (*.f64 (*.f64 c c) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c (sqrt.f64 1/2)) b))) (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (sqrt.f64 1/2)) (*.f64 a a)) -4) (pow.f64 b 5)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2)))) (*.f64 a b))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (sqrt.f64 1/2) (pow.f64 a 2))) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c (sqrt.f64 1/2)) b)))))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (*.f64 (sqrt.f64 1/2) (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 a a)) (pow.f64 b 3)) 2)))) (*.f64 a b)) (+.f64 (*.f64 -2 (fma.f64 (*.f64 (*.f64 c c) (*.f64 (sqrt.f64 1/2) a)) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c (sqrt.f64 1/2)) b))) (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (sqrt.f64 1/2)) (*.f64 a a)) -4) (pow.f64 b 5))))"]],"time":291.9189453125,"type":"simplify"},{"compiler":[[7937,5506]],"time":94.635986328125,"type":"eval"},{"alts":[["(/.f64 (*.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a)) (sqrt.f64 2))","fresh",44.40935283123305],["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))","next",36.57000472605632],["(/.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 b)) a)) (sqrt.f64 2))","fresh",37.695290496975986],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",44.5361859610908],["(/.f64 (/.f64 (*.f64 -2 (*.f64 c (sqrt.f64 1/2))) b) (sqrt.f64 2))","fresh",38.30519693261545],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 1/2)) (*.f64 (cbrt.f64 4) a))","fresh",36.5980122455932],["(neg.f64 (/.f64 b a))","fresh",44.28435283123305],["(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 b))) (*.f64 2 a))","fresh",36.76022660130654],["(/.f64 (/.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))","fresh",36.73642860304607],["(/.f64 (*.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (cbrt.f64 (sqrt.f64 1/2))) a) (cbrt.f64 1/2)) (sqrt.f64 2))","fresh",36.66117601513009],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","fresh",39.0006113834149],["(neg.f64 (/.f64 c b))","fresh",38.18410318261545],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",51.9783068867363],["(/.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 -4 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b))) b) a)) (sqrt.f64 2))","fresh",44.01006536800283]],"compiler":[[14,12],[18,12],[34,24],[10,6],[14,12],[22,16],[7,5],[49,31],[25,15],[26,20],[17,10],[7,5],[14,10],[28,20],[14,12],[18,12],[34,24],[10,6],[14,12],[22,16],[7,5],[49,31],[25,15],[26,20],[17,10],[7,5],[14,10],[28,20]],"count":[[296,14]],"kept":[{"done":[0,0],"fresh":[10,9],"new":[285,5],"picked":[1,0]}],"min-error":[4.355728213836046],"time":78.77392578125,"type":"prune"},{"compiler":[[62,36]],"locations":[["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))",0.1796875,true],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)",0.4180693557102868,false],["(fma.f64 b b (*.f64 (*.f64 -4 a) c))",1.249986238027801,false],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))",23.64914674034015,false]],"time":15.10693359375,"type":"localize"},{"count":[[1,16]],"series":[["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))","c","-inf",0.30517578125],["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))","c","inf",0.316162109375],["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))","c","0",0.221923828125],["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))","b","-inf",0.239013671875],["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))","b","inf",0.246826171875],["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))","b","0",0.26513671875],["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))","a","-inf",0.286865234375],["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))","a","inf",0.416015625],["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))","a","0",0.343017578125]],"time":2.7861328125,"type":"series"},{"count":[[1,77]],"inputs":[["(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/2 a) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 (/.f64 b -2) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 b -2) a) (*.f64 (/.f64 1/2 a) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 0) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 1/2) (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (/.f64 1/2 a) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (*.f64 1 (/.f64 (/.f64 b -2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a))) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) (*.f64 0 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a))) (*.f64 1/2 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 1/2 a) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 1) (*.f64 (/.f64 (/.f64 b -2) a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 2)) (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1/2 a) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (cbrt.f64 (/.f64 1/2 a))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/8 a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/2 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/2 a) (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (/.f64 (cbrt.f64 a) 1/2)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) -1/2) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) a)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) a)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (/.f64 (cbrt.f64 a) 1/2)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (cbrt.f64 (/.f64 1 a))) (*.f64 2 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 (sqrt.f64 2) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 (cbrt.f64 4) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 -2 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (/.f64 (cbrt.f64 a) 1/2)) 1) (*.f64 (cbrt.f64 (*.f64 a a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) -1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (/.f64 (cbrt.f64 a) 1/2)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 2)) (cbrt.f64 (*.f64 -1/2 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/8 a)) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -1/2 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (*.f64 2 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (cbrt.f64 (/.f64 1/8 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) a) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) a)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (pow.f64 (cbrt.f64 a) -2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) -1/2) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (/.f64 (cbrt.f64 a) 1/2)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) -1/2) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (/.f64 (cbrt.f64 a) 1/2)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (/.f64 (cbrt.f64 a) 1/2)) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (/.f64 (cbrt.f64 a) 1/2))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -1/2 (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 1/2 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1/2 a) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) -1/2) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (/.f64 -1/2 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1/2 a) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (/.f64 (/.f64 b -2) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (/.f64 1/2 a) (/.f64 (/.f64 b -2) a))))))"]],"rules":[["egg-rr",77]],"time":26.654052734375,"type":"rewrite"},{"count":[[93,97]],"inputs":[["(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(-.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(-.f64 (+.f64 (/.f64 (+.f64 (neg.f64 c) (*.f64 -1/4 (*.f64 (pow.f64 a 3) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 (/.f64 -2 b) (pow.f64 (/.f64 c b) 2)) 2))))) b) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(-.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (pow.f64 (*.f64 c a) 4) (*.f64 -2 -2))) (*.f64 a (pow.f64 b 7))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (/.f64 c b)) (fma.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (neg.f64 (/.f64 b a))))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(-.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(-.f64 (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 a a)) (pow.f64 b 3)) 2))) (*.f64 a b)) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))"]],"time":61.825927734375,"type":"simplify"},{"compiler":[[6763,4162]],"time":76.1201171875,"type":"eval"},{"alts":[["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","fresh",39.0006113834149],["(neg.f64 (/.f64 c b))","fresh",38.18410318261545],["(/.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 b)) a)) (sqrt.f64 2))","fresh",37.695290496975986],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",44.5361859610908],["(/.f64 (/.f64 (*.f64 -2 (*.f64 c (sqrt.f64 1/2))) b) (sqrt.f64 2))","fresh",38.30519693261545],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 1/2)) (*.f64 (cbrt.f64 4) a))","next",36.5980122455932],["(neg.f64 (/.f64 b a))","fresh",44.28435283123305],["(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 b))) (*.f64 2 a))","fresh",36.76022660130654],["(/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 (sqrt.f64 2) a))","fresh",36.6058247455932],["(/.f64 (*.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (cbrt.f64 (sqrt.f64 1/2))) a) (cbrt.f64 1/2)) (sqrt.f64 2))","fresh",36.66117601513009],["(*.f64 (*.f64 (/.f64 1/2 a) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)))","fresh",36.79022314299116],["(/.f64 (*.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a)) (sqrt.f64 2))","fresh",44.40935283123305],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",51.9783068867363],["(/.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 -4 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b))) b) a)) (sqrt.f64 2))","fresh",44.01006536800283]],"compiler":[[17,10],[7,5],[34,24],[10,6],[14,12],[22,16],[7,5],[49,31],[22,16],[26,20],[34,22],[14,12],[14,10],[28,20],[17,10],[7,5],[34,24],[10,6],[14,12],[22,16],[7,5],[49,31],[22,16],[26,20],[34,22],[14,12],[14,10],[28,20]],"count":[[310,14]],"kept":[{"done":[0,0],"fresh":[13,11],"new":[296,3],"picked":[1,0]}],"min-error":[4.355728213836046],"time":87.46484375,"type":"prune"},{"compiler":[[86,55]],"locations":[["(*.f64 (cbrt.f64 4) a)",0.40234375,true],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)",0.4180693557102868,false],["(fma.f64 b b (*.f64 (*.f64 -4 a) c))",1.249986238027801,false],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))",23.64914674034015,false]],"time":21.900146484375,"type":"localize"},{"count":[[1,12]],"series":[["(*.f64 (cbrt.f64 4) a)","a","-inf",0.2841796875],["(*.f64 (cbrt.f64 4) a)","a","inf",0.30908203125],["(*.f64 (cbrt.f64 4) a)","a","0",1.514892578125]],"time":2.15283203125,"type":"series"},{"count":[[1,27]],"inputs":[["(*.f64 (cbrt.f64 4) a)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (cbrt.f64 4) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 4) a) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (cbrt.f64 -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 4) a)) (pow.f64 (*.f64 (cbrt.f64 4) a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 4) a) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 4 a)) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 2/3) (cbrt.f64 (*.f64 4 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 16)) (*.f64 a (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 -4) a)) (neg.f64 (pow.f64 (*.f64 (cbrt.f64 4) a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 4)) (*.f64 (cbrt.f64 (cbrt.f64 16)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 16)) a) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (cbrt.f64 -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 -4) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cbrt.f64 4) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 4) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -4) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 a 3) 4) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 4) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 4) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 a 3) 4))))))"]],"rules":[["egg-rr",27]],"time":38.444091796875,"type":"rewrite"},{"count":[[39,27]],"inputs":[["(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))"]],"method":["egg-herbie"],"outputs":[["(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))","(*.f64 a (cbrt.f64 4))"]],"time":69.98388671875,"type":"simplify"},{"compiler":[[5953,4116]],"time":69.093994140625,"type":"eval"},{"alts":[["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","fresh",39.0006113834149],["(neg.f64 (/.f64 c b))","fresh",38.18410318261545],["(/.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 b)) a)) (sqrt.f64 2))","fresh",37.695290496975986],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",44.5361859610908],["(/.f64 (*.f64 (*.f64 -2 b) (cbrt.f64 1/2)) (*.f64 (cbrt.f64 4) a))","fresh",44.38200908123305],["(/.f64 (/.f64 (*.f64 -2 (*.f64 c (sqrt.f64 1/2))) b) (sqrt.f64 2))","fresh",38.30519693261545],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 1/2)) (*.f64 (cbrt.f64 4) a))","done",36.5980122455932],["(neg.f64 (/.f64 b a))","fresh",44.28435283123305],["(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 b))) (*.f64 2 a))","fresh",36.76022660130654],["(/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 (sqrt.f64 2) a))","fresh",36.6058247455932],["(/.f64 (*.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (cbrt.f64 (sqrt.f64 1/2))) a) (cbrt.f64 1/2)) (sqrt.f64 2))","fresh",36.66117601513009],["(*.f64 (*.f64 (/.f64 1/2 a) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)))","fresh",36.79022314299116],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",51.9783068867363],["(/.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 -4 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b))) b) a)) (sqrt.f64 2))","fresh",44.01006536800283]],"compiler":[[17,10],[7,5],[34,24],[10,6],[14,12],[14,12],[22,16],[7,5],[49,31],[22,16],[26,20],[34,22],[14,10],[28,20]],"count":[[240,14]],"kept":[{"done":[0,0],"fresh":[13,12],"new":[226,1],"picked":[1,1]}],"min-error":[4.355728213836046],"time":52.945068359375,"type":"prune"},{"accuracy":[8.107225346096225],"baseline":[36.50359847605632],"branch":[["a",29.050255610447863,7],["b",8.107225346096225,3],["c",27.062968398536455,10],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))",13.64992965080832,5]],"compiler":[[4,3],[4,3],[4,3],[20,14],[391,239]],"count":[[22,3]],"inputs":[["(/.f64 (*.f64 (*.f64 -2 b) (cbrt.f64 1/2)) (*.f64 (cbrt.f64 4) a))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(/.f64 (*.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 (sqrt.f64 2) a))","(*.f64 (*.f64 (/.f64 1/2 a) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)))","(/.f64 (*.f64 -2 (/.f64 (*.f64 (sqrt.f64 1/2) b) a)) (sqrt.f64 2))","(/.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 b)) a)) (sqrt.f64 2))","(/.f64 (/.f64 (*.f64 -2 (*.f64 c (sqrt.f64 1/2))) b) (sqrt.f64 2))","(/.f64 (*.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) (cbrt.f64 (sqrt.f64 1/2))) a) (cbrt.f64 1/2)) (sqrt.f64 2))","(/.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 -4 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b))) b) a)) (sqrt.f64 2))","(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) (cbrt.f64 1/2)) (*.f64 (cbrt.f64 4) a))","(neg.f64 (/.f64 b a))","(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (cbrt.f64 b))) (*.f64 2 a))","(/.f64 (/.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) 1/2) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(/.f64 (*.f64 (sqrt.f64 1/2) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a)) (sqrt.f64 2))","(neg.f64 (/.f64 c b))","(*.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))","(/.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b) a) (cbrt.f64 2)) (cbrt.f64 4))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","(-.f64 (/.f64 c b) (/.f64 b a))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))"]],"link":["."],"name":["Quadratic roots, full range"],"oracle":[63.386881799477855],"outputs":[["(-.f64 (/.f64 c b) (/.f64 b a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","(neg.f64 (/.f64 c b))"]],"time":165.234130859375,"times":[["a",46.14404296875],["b",26.153076171875],["c",65.153076171875],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))",20.5751953125]],"type":"regimes"},{"bstep":[[2.9845788666958835e-158,3.562433016429675e-154,25.675048828125],[-7.874177670516464e+119,-7.530477332140231e+119,0.10888671875]],"compiler":[[8,6],[21,15],[8,6],[21,15],[8,6],[21,15],[8,6],[21,15],[8,6],[21,15],[8,6],[21,15],[8,6],[21,15],[8,6],[21,15],[22,16],[4,3]],"method":["binary-search","binary-search"],"time":26.005859375,"type":"bsearch"},{"compiler":[[39,24]],"inputs":[["(if (<=.f64 b -759999999999999979068889404044414119041239708346509121831960244070684225772873732885932780325582234038583434362304331776) (-.f64 (/.f64 c b) (/.f64 b a)) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)) (neg.f64 (/.f64 c b))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b -759999999999999979068889404044414119041239708346509121831960244070684225772873732885932780325582234038583434362304331776) (-.f64 (/.f64 c b) (/.f64 b a)) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)) (neg.f64 (/.f64 c b))))","(if (<=.f64 b -759999999999999979068889404044414119041239708346509121831960244070684225772873732885932780325582234038583434362304331776) (-.f64 (/.f64 c b) (/.f64 b a)) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) (/.f64 1/2 a)) (neg.f64 (/.f64 c b))))"]],"stop":[["fuel",1]],"time":26.297119140625,"type":"simplify"},{"time":0.02294921875,"type":"soundness"},{"compiler":[[39,24]],"remove-preprocessing":[[]],"time":13.927978515625,"type":"end"}]