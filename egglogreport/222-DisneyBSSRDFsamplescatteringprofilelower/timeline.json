[{"compiler":[[27,21]],"method":["search"],"sampling":[[12,0.0017859600484253235,5.761161446533301e-5,0.9981564283371093],[11,0.0017859600484253235,5.761161446533301e-5,0.9981564283371093],[10,0.0017283484339599905,0.00011522322893066603,0.9981564283371094],[9,0.0017283484339599905,0.00011522322893066603,0.9981564283371094],[8,0.0016131252050293244,0.00023044645786133206,0.9981564283371094],[7,0.0016131252050293244,0.00023044645786133206,0.9981564283371094],[6,0.0013826787471679924,0.00046089291572266416,0.9981564283371093],[5,0.0013826787471679924,0.00046089291572266416,0.9981564283371093],[4,0.0009217858314453283,0.0009217858314453283,0.9981564283371094],[3,0.0009217858314453283,0.0009217858314453283,0.9981564283371094],[2,0.0,0.0018435716628906567,0.9981564283371094],[1,0.0,0.0018435716628906567,0.9981564283371094],[0,0.0,0.0018435716628906567,0.9981564283371094]],"time":12.23876953125,"type":"analyze"},{"outcomes":[["body",256,"valid",531.57080078125,8256]],"time":539.195068359375,"type":"sample"},{"compiler":[[12,10]],"inputs":[["0","1"],["(*.f64 s (log.f64 (/.f64 1 (-.f64 1 (*.f64 4 u)))))","(*.f64 u (log.f64 (/.f64 1 (-.f64 1 (*.f64 4 s)))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 s (log.f64 (/.f64 1 (-.f64 1 (*.f64 4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 u (log.f64 (/.f64 1 (-.f64 1 (*.f64 4 s)))))","(*.f64 (neg.f64 u) (log1p.f64 (*.f64 -4 s)))"]],"symmetry":[[]],"time":59.97802734375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 s (log.f64 (/.f64 1 (-.f64 1 (*.f64 4 u)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 s (log.f64 (/.f64 1 (-.f64 1 (*.f64 4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))"]],"time":17.866943359375,"type":"simplify"},{"compiler":[[19,15]],"time":0.4169921875,"type":"eval"},{"alts":[["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","next",0.24609375],["(*.f64 s (log.f64 (/.f64 1 (-.f64 1 (*.f64 4 u)))))","fresh",13.073227070665022]],"compiler":[[9,7],[12,10],[9,7],[12,10]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.23046875],"time":1.30517578125,"type":"prune"},{"compiler":[[21,13]],"locations":[["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))",0.24609375,true]],"time":7.762939453125,"type":"localize"},{"count":[[1,24]],"series":[["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","u","-inf",0.412109375],["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","u","inf",0.46484375],["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","u","0",0.445068359375],["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","s","-inf",0.22509765625],["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","s","inf",3.848876953125],["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","s","0",21.222900390625]],"time":26.72802734375,"type":"series"},{"count":[[1,50]],"inputs":[["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 9 (-.f64 9 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 9 (+.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 1 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 3 (-.f64 3 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 1 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 3 (+.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (*.f64 -4 u))) (*.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2/3) (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2/3) (neg.f64 s)) (cbrt.f64 (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 s)) (*.f64 (pow.f64 s 2/3) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 -4 u)) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (*.f64 -4 u))) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 s) (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (pow.f64 (log1p.f64 (*.f64 -4 u)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (neg.f64 (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 s 2/3) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2/3) (*.f64 (neg.f64 s) (cbrt.f64 (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (neg.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (neg.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 s) (*.f64 (neg.f64 (pow.f64 s 2/3)) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2/3)) (*.f64 s (cbrt.f64 (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 s 2/3)) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2/3)) (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2/3) (*.f64 0 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (+.f64 0 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (+.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2/3) (*.f64 0 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2/3) (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 (neg.f64 s))) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 s 2/3) (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 2 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))))"]],"rules":[["egg-rr",50]],"time":37.931884765625,"type":"rewrite"},{"count":[[74,75]],"inputs":[["(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 4 (*.f64 s u))","(+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2)))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (+.f64 (*.f64 8 (*.f64 s (pow.f64 u 2))) (*.f64 64 (*.f64 s (pow.f64 u 4))))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u)))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (*.f64 1/4 (/.f64 s u)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 4 (*.f64 s u))","(+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2))))","(fma.f64 4 (*.f64 s u) (*.f64 8 (*.f64 s (*.f64 u u))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2)))))","(fma.f64 (*.f64 64/3 s) (pow.f64 u 3) (fma.f64 4 (*.f64 s u) (*.f64 8 (*.f64 s (*.f64 u u)))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (+.f64 (*.f64 8 (*.f64 s (pow.f64 u 2))) (*.f64 64 (*.f64 s (pow.f64 u 4))))))","(fma.f64 (*.f64 s (pow.f64 u 3)) 64/3 (fma.f64 4 (*.f64 s u) (fma.f64 (*.f64 64 s) (pow.f64 u 4) (*.f64 8 (*.f64 s (*.f64 u u))))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(*.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4)))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))","(fma.f64 (/.f64 s u) 1/4 (*.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u))))","(fma.f64 1/32 (/.f64 s (*.f64 u u)) (fma.f64 (/.f64 s u) 1/4 (*.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4)))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))))","(fma.f64 1/32 (/.f64 s (*.f64 u u)) (fma.f64 1/192 (/.f64 s (pow.f64 u 3)) (fma.f64 (/.f64 s u) 1/4 (*.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4))))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(*.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u)))","(fma.f64 (/.f64 s u) 1/4 (*.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u))))","(fma.f64 1/32 (/.f64 s (*.f64 u u)) (fma.f64 (/.f64 s u) 1/4 (*.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (*.f64 1/4 (/.f64 s u)))))","(fma.f64 1/32 (/.f64 s (*.f64 u u)) (fma.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))) (fma.f64 1/192 (/.f64 s (pow.f64 u 3)) (/.f64 (*.f64 1/4 s) u))))"]],"time":79.31103515625,"type":"simplify"},{"compiler":[[1070,730]],"time":14.3330078125,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) 3)","fresh",0.7329128539792408],["(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","fresh",12.137577478336167],["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","done",0.24609375],["(/.f64 (-.f64 0 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 3)","next",0.309257519536884],["(*.f64 s (log.f64 (/.f64 1 (-.f64 1 (*.f64 4 u)))))","fresh",13.073227070665022],["(fma.f64 (*.f64 s (pow.f64 u 3)) 64/3 (fma.f64 4 (*.f64 s u) (fma.f64 (*.f64 64 s) (pow.f64 u 4) (*.f64 8 (*.f64 s (*.f64 u u))))))","fresh",9.472506229235986]],"compiler":[[12,10],[12,10],[9,7],[14,12],[12,10],[28,19],[12,10],[12,10],[14,12],[12,10],[28,19]],"count":[[77,6]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[75,4],"picked":[1,1]}],"min-error":[0.12109375],"time":13.30810546875,"type":"prune"},{"compiler":[[50,38]],"locations":[["(/.f64 (-.f64 0 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 3)",0.2421875,true],["(*.f64 s (log1p.f64 (*.f64 -4 u)))",0.24609375,true],["(*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))",0.27734375,true]],"time":17.86181640625,"type":"localize"},{"count":[[3,72]],"series":[["(/.f64 (-.f64 0 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 3)","u","-inf",0.22412109375],["(/.f64 (-.f64 0 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 3)","u","inf",0.2001953125],["(/.f64 (-.f64 0 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 3)","u","0",0.2021484375],["(/.f64 (-.f64 0 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 3)","s","-inf",0.162109375],["(/.f64 (-.f64 0 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 3)","s","inf",0.19287109375],["(/.f64 (-.f64 0 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 3)","s","0",0.166015625],["(*.f64 s (log1p.f64 (*.f64 -4 u)))","u","-inf",0.22607421875],["(*.f64 s (log1p.f64 (*.f64 -4 u)))","u","inf",0.238037109375],["(*.f64 s (log1p.f64 (*.f64 -4 u)))","u","0",0.2490234375],["(*.f64 s (log1p.f64 (*.f64 -4 u)))","s","-inf",0.153076171875],["(*.f64 s (log1p.f64 (*.f64 -4 u)))","s","inf",0.14892578125],["(*.f64 s (log1p.f64 (*.f64 -4 u)))","s","0",0.182861328125],["(*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))","u","-inf",0.265869140625],["(*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))","u","inf",0.376953125],["(*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))","u","0",0.2958984375],["(*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))","s","-inf",0.276123046875],["(*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))","s","inf",0.31298828125],["(*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))","s","0",0.344970703125]],"time":4.489990234375,"type":"series"},{"count":[[3,480]],"inputs":[["(*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(/.f64 (-.f64 0 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 3 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 (log1p.f64 (*.f64 -4 u))) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (*.f64 3 (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 9) (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) (*.f64 (*.f64 3 s) (cbrt.f64 (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (+.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (+.f64 0 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 -4 u)) (-.f64 0 (*.f64 -3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (-.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (-.f64 3 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 -4 u)) (-.f64 (*.f64 3 s) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -3 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -3 s) (neg.f64 (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -3 (log1p.f64 (*.f64 -4 u))) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -27 (*.f64 s (log1p.f64 (*.f64 -4 u))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) 0)) (+.f64 0 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) 0) (+.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (*.f64 0 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))))) (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) 0) (-.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 27 (*.f64 s (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 3) (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 3) (*.f64 (cbrt.f64 9) (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 27 (*.f64 s (log1p.f64 (*.f64 -4 u))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 9) (*.f64 s (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) 3) (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 0 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/3) 0 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (*.f64 s (log1p.f64 (*.f64 -4 u))) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1/3 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (log1p.f64 (*.f64 -4 u)) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/3) 0 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 3 (log1p.f64 (*.f64 -4 u))) s 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 27 (*.f64 s (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 3) (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 3)) (cbrt.f64 9) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 3) (*.f64 (cbrt.f64 9) (*.f64 s (log1p.f64 (*.f64 -4 u)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) 3) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3)) (sqrt.f64 3) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 3 s) (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 3 s) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 s (*.f64 3 (log1p.f64 (*.f64 -4 u))) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (*.f64 -4 u))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (log1p.f64 (*.f64 -4 u)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 -4 u)) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 s)) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 s) (*.f64 (cbrt.f64 (*.f64 s s)) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/3) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/3) (/.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 3) (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 27 3)) (/.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 s) (*.f64 (log1p.f64 (*.f64 -4 u)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (sqrt.f64 1/3)) (*.f64 (log1p.f64 (*.f64 -4 u)) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (cbrt.f64 1/3)) (/.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (cbrt.f64 (/.f64 27 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 27))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) s) (cbrt.f64 (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) (*.f64 s (cbrt.f64 (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 s s)) (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 s s)) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)) (cbrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) 1/3) (*.f64 3 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (sqrt.f64 1/3)) (*.f64 (*.f64 3 s) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (sqrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (sqrt.f64 1/3)) (cbrt.f64 (/.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 27))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 9)) (*.f64 (*.f64 3 s) (cbrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 3)) (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)) (cbrt.f64 (/.f64 27 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 27 9)) (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/3) (+.f64 0 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (+.f64 0 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/3) (+.f64 0 (/.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (cbrt.f64 (/.f64 1 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/3) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 3) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 27 3)) (*.f64 s (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (cbrt.f64 1/3)) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (sqrt.f64 1/3)) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 27))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) 3) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3)) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/3) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 3 s) (*.f64 (log1p.f64 (*.f64 -4 u)) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 1) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) 1) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 3 s) (/.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 9))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 (/.f64 27 9))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (/.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) 1) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (cbrt.f64 (cbrt.f64 9))) (pow.f64 (cbrt.f64 (cbrt.f64 9)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (neg.f64 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 1) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (sqrt.f64 (sqrt.f64 3))) (sqrt.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (cbrt.f64 (sqrt.f64 3))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 3) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 (cbrt.f64 9) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 (cbrt.f64 9) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 s (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 9) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 9) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 (cbrt.f64 9) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 9 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 9 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 9 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) -27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 9 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 9 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 9 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 27 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 27 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 27 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 27 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 27 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 27 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 27 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 27 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 27 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 -3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 -3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 -3 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3) (*.f64 -3 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 -3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 -3 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 3 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 3 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 (cbrt.f64 3) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 3))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 3) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 3) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 3) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 3) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 (cbrt.f64 3) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 (sqrt.f64 3) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 (sqrt.f64 3) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (sqrt.f64 3) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (sqrt.f64 3) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (sqrt.f64 3) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 27) 0) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3)) 0) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 3)) 0) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9) 0) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 9) (*.f64 s (log1p.f64 (*.f64 -4 u)))) 0) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 27) 0) (*.f64 3 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3) 0) (*.f64 3 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 3)) 0) (*.f64 3 (cbrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 9) 0) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 3) 0) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)) 0) (*.f64 3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 27) (*.f64 (sqrt.f64 3) 0)) (*.f64 (sqrt.f64 3) 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (sqrt.f64 3)) (*.f64 (sqrt.f64 3) 0)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 1) (*.f64 (sqrt.f64 3) 0)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) -3) (*.f64 (sqrt.f64 3) 0)) (*.f64 (sqrt.f64 3) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (cbrt.f64 3)) (*.f64 (sqrt.f64 3) 0)) (*.f64 (sqrt.f64 3) (cbrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 9) (*.f64 (sqrt.f64 3) 0)) (*.f64 (sqrt.f64 3) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (cbrt.f64 9)) (*.f64 (sqrt.f64 3) 0)) (*.f64 (sqrt.f64 3) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) 27) (*.f64 (cbrt.f64 9) 0)) (*.f64 (cbrt.f64 9) 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (sqrt.f64 3)) (*.f64 (cbrt.f64 9) 0)) (*.f64 (cbrt.f64 9) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) 1) (*.f64 (cbrt.f64 9) 0)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) -3) (*.f64 (cbrt.f64 9) 0)) (*.f64 (cbrt.f64 9) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (cbrt.f64 3)) (*.f64 (cbrt.f64 9) 0)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) 9) (*.f64 (cbrt.f64 9) 0)) (*.f64 (cbrt.f64 9) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) 3) (*.f64 (cbrt.f64 9) 0)) (*.f64 (cbrt.f64 9) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (cbrt.f64 9)) (*.f64 (cbrt.f64 9) 0)) (*.f64 (cbrt.f64 9) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) 27) (*.f64 -3 0)) (*.f64 -3 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3)) (*.f64 -3 0)) (*.f64 -3 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (*.f64 -3 0)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) -3) (*.f64 -3 0)) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 3)) (*.f64 -3 0)) (*.f64 -3 (cbrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) 9) (*.f64 -3 0)) -27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) 3) (*.f64 -3 0)) (*.f64 -3 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)) (*.f64 -3 0)) (*.f64 -3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3))) (*.f64 3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u)))) (*.f64 3 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) 3) (*.f64 (cbrt.f64 9) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) 3) (*.f64 -3 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (sqrt.f64 3) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3)) 0) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 3) (*.f64 (sqrt.f64 3) 0)) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 3) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 0 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/3) 0 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (*.f64 s (log1p.f64 (*.f64 -4 u))) (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1/3 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (log1p.f64 (*.f64 -4 u)) (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/3) 0 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (cbrt.f64 (/.f64 27 9)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/3) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 s (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 3 s) (*.f64 (log1p.f64 (*.f64 -4 u)) 1/3) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (sqrt.f64 3) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 3)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/3) (/.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 27 3)) (/.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 3 s) (cbrt.f64 1/3)) (/.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 9)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 3) (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 1/3 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 3 s) (sqrt.f64 1/3)) (*.f64 (log1p.f64 (*.f64 -4 u)) (sqrt.f64 1/3)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 27))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (sqrt.f64 1/3)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/3) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) (*.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 0) (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 27))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/3) (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/3) (/.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)) (cbrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 3)) (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (sqrt.f64 1/3)) (cbrt.f64 (/.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 27))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (sqrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/3) (+.f64 0 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (+.f64 0 -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/3) (+.f64 0 (/.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (*.f64 -4 u))) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 s (cbrt.f64 (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 s))) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 s)) (*.f64 (cbrt.f64 (*.f64 s s)) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -1/3) (/.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -3 s) (*.f64 (log1p.f64 (*.f64 -4 u)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 3)) (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 3 s) (sqrt.f64 1/3))) (*.f64 (log1p.f64 (*.f64 -4 u)) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 1/3)) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -3 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 27)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 3 s) (cbrt.f64 1/3))) (/.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 27 3))) (/.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3))) (cbrt.f64 (/.f64 27 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 -4 u)) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (*.f64 -4 u))) (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (neg.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (neg.f64 (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 s)) (neg.f64 (cbrt.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 s) (neg.f64 (*.f64 (cbrt.f64 (*.f64 s s)) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 s) (neg.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 3) (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (sqrt.f64 1/3)) (neg.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 27))) (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (cbrt.f64 1/3)) (neg.f64 (/.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 9))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) (neg.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 27 3)) (neg.f64 (/.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (neg.f64 (cbrt.f64 (/.f64 27 9))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3) (/.f64 1 9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (cbrt.f64 (/.f64 1 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (*.f64 0 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (+.f64 0 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/3) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 27))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/3) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u)))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) 1) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3) 1) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 1) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) 1) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (cbrt.f64 (cbrt.f64 9))) (pow.f64 (cbrt.f64 (cbrt.f64 9)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) (neg.f64 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3) 3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 1) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (sqrt.f64 (sqrt.f64 3))) (sqrt.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (cbrt.f64 (sqrt.f64 3))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3))) (*.f64 (cbrt.f64 9) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 (cbrt.f64 9) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 9) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 9) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 (cbrt.f64 9) (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 (cbrt.f64 9) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 9 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3))) (*.f64 9 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 9 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 9 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 9 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) -27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 9 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 9 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 9 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 27 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3))) (*.f64 27 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 27 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 27 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 27 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 27 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 27 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 27 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 27 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 27 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 -3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3))) -27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 -3 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 -3 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 -3 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 -3 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 -3 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 -3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3))) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 3) (*.f64 3 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 3 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 3 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 3) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3))) (*.f64 (cbrt.f64 3) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 3) (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 (cbrt.f64 3) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 3) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 3) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 3) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 (cbrt.f64 3) (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (sqrt.f64 3) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3))) (*.f64 (sqrt.f64 3) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (sqrt.f64 3) (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (sqrt.f64 3) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (sqrt.f64 3) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 (sqrt.f64 3) (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 (sqrt.f64 3) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 (cbrt.f64 9) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 (cbrt.f64 9) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 9) (*.f64 s (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 9) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 9) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 (cbrt.f64 9) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 9 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 9 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 9 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) -27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 9 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 9 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 9 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 27 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 27 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 27 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 27 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 27 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 27 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 27 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 27 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 27 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 -3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 -3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 -3 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 -3 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 -3 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 -3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 -3 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 3 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 3 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 (cbrt.f64 3) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 3))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 3) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 3) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 3) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 3) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (*.f64 (cbrt.f64 3) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 9)) (*.f64 (sqrt.f64 3) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)))) (*.f64 (sqrt.f64 3) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (sqrt.f64 3) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (sqrt.f64 3) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (sqrt.f64 3) (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3)) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u)))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3))) (*.f64 3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 3) (*.f64 -3 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/3)) 3) (*.f64 (cbrt.f64 9) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) -3) 3) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) 3) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 3) (neg.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 3 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (sqrt.f64 3) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))))) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)))) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (sqrt.f64 3) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 3) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/3) 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 2)) (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (*.f64 s (log1p.f64 (*.f64 -4 u))) (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1/3 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (log1p.f64 (*.f64 -4 u)) (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/3) 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))))"]],"rules":[["egg-rr",193],["egg-rr",199],["egg-rr",88]],"time":54.72509765625,"type":"rewrite"},{"count":[[552,554]],"inputs":[["(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -12 (*.f64 s u))","(+.f64 (*.f64 -24 (*.f64 s (pow.f64 u 2))) (*.f64 -12 (*.f64 s u)))","(+.f64 (*.f64 -24 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -64 (*.f64 s (pow.f64 u 3))) (*.f64 -12 (*.f64 s u))))","(+.f64 (*.f64 -24 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -192 (*.f64 s (pow.f64 u 4))) (+.f64 (*.f64 -64 (*.f64 s (pow.f64 u 3))) (*.f64 -12 (*.f64 s u)))))","(*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(+.f64 (*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 -3/4 (/.f64 s u)))","(+.f64 (*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (+.f64 (*.f64 -3/4 (/.f64 s u)) (*.f64 -3/32 (/.f64 s (pow.f64 u 2)))))","(+.f64 (*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (+.f64 (*.f64 -1/64 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -3/4 (/.f64 s u)) (*.f64 -3/32 (/.f64 s (pow.f64 u 2))))))","(*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(+.f64 (*.f64 -3/4 (/.f64 s u)) (*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))))","(+.f64 (*.f64 -3/4 (/.f64 s u)) (+.f64 (*.f64 -3/32 (/.f64 s (pow.f64 u 2))) (*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))))","(+.f64 (*.f64 -1/64 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -3/4 (/.f64 s u)) (+.f64 (*.f64 -3/32 (/.f64 s (pow.f64 u 2))) (*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))))))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1)))","(*.f64 -4 (*.f64 s u))","(+.f64 (*.f64 -8 (*.f64 s (pow.f64 u 2))) (*.f64 -4 (*.f64 s u)))","(+.f64 (*.f64 -8 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -4 (*.f64 s u)) (*.f64 -64/3 (*.f64 s (pow.f64 u 3)))))","(+.f64 (*.f64 -64 (*.f64 s (pow.f64 u 4))) (+.f64 (*.f64 -8 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -4 (*.f64 s u)) (*.f64 -64/3 (*.f64 s (pow.f64 u 3))))))","(*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))","(+.f64 (*.f64 -1/4 (/.f64 s u)) (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(+.f64 (*.f64 -1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1/4 (/.f64 s u)) (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))))","(+.f64 (*.f64 -1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1/4 (/.f64 s u)) (+.f64 (*.f64 -1/192 (/.f64 s (pow.f64 u 3))) (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))))","(*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))","(+.f64 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))) (*.f64 -1/4 (/.f64 s u)))","(+.f64 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))) (+.f64 (*.f64 -1/32 (/.f64 s (pow.f64 u 2))) (*.f64 -1/4 (/.f64 s u))))","(+.f64 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))) (+.f64 (*.f64 -1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1/4 (/.f64 s u)) (*.f64 -1/192 (/.f64 s (pow.f64 u 3))))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 4 (*.f64 s u))","(+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2)))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (+.f64 (*.f64 8 (*.f64 s (pow.f64 u 2))) (*.f64 64 (*.f64 s (pow.f64 u 4))))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u)))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (*.f64 1/4 (/.f64 s u)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)","(*.f64 -12 (*.f64 s u))","(+.f64 (*.f64 -24 (*.f64 s (pow.f64 u 2))) (*.f64 -12 (*.f64 s u)))","(fma.f64 -24 (*.f64 s (*.f64 u u)) (*.f64 -12 (*.f64 s u)))","(+.f64 (*.f64 -24 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -64 (*.f64 s (pow.f64 u 3))) (*.f64 -12 (*.f64 s u))))","(fma.f64 (*.f64 -24 s) (*.f64 u u) (fma.f64 (*.f64 -64 s) (pow.f64 u 3) (*.f64 -12 (*.f64 s u))))","(+.f64 (*.f64 -24 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -192 (*.f64 s (pow.f64 u 4))) (+.f64 (*.f64 -64 (*.f64 s (pow.f64 u 3))) (*.f64 -12 (*.f64 s u)))))","(fma.f64 (*.f64 -24 s) (*.f64 u u) (fma.f64 (*.f64 -192 s) (pow.f64 u 4) (fma.f64 (*.f64 -64 s) (pow.f64 u 3) (*.f64 -12 (*.f64 s u)))))","(*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(*.f64 3 (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))))","(+.f64 (*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 -3/4 (/.f64 s u)))","(fma.f64 3 (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))) (/.f64 (*.f64 -3/4 s) u))","(+.f64 (*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (+.f64 (*.f64 -3/4 (/.f64 s u)) (*.f64 -3/32 (/.f64 s (pow.f64 u 2)))))","(fma.f64 3 (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))) (fma.f64 -3/4 (/.f64 s u) (/.f64 (*.f64 -3/32 s) (*.f64 u u))))","(+.f64 (*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (+.f64 (*.f64 -1/64 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -3/4 (/.f64 s u)) (*.f64 -3/32 (/.f64 s (pow.f64 u 2))))))","(fma.f64 (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))) 3 (fma.f64 -1/64 (/.f64 s (pow.f64 u 3)) (fma.f64 -3/4 (/.f64 s u) (/.f64 (*.f64 -3/32 s) (*.f64 u u)))))","(*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(*.f64 3 (*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 (*.f64 -3/4 (/.f64 s u)) (*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))))","(fma.f64 -3/4 (/.f64 s u) (*.f64 3 (*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))))))","(+.f64 (*.f64 -3/4 (/.f64 s u)) (+.f64 (*.f64 -3/32 (/.f64 s (pow.f64 u 2))) (*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))))","(fma.f64 (/.f64 s u) -3/4 (fma.f64 -3/32 (/.f64 s (*.f64 u u)) (*.f64 3 (*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))))))","(+.f64 (*.f64 -1/64 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -3/4 (/.f64 s u)) (+.f64 (*.f64 -3/32 (/.f64 s (pow.f64 u 2))) (*.f64 3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))))))","(fma.f64 -1/64 (/.f64 s (pow.f64 u 3)) (fma.f64 (/.f64 s u) -3/4 (fma.f64 -3/32 (/.f64 s (*.f64 u u)) (*.f64 3 (*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))))))))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u))))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1)))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1)))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1)))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1)))","(*.f64 s (log1p.f64 (*.f64 -4 u)))","(*.f64 -4 (*.f64 s u))","(+.f64 (*.f64 -8 (*.f64 s (pow.f64 u 2))) (*.f64 -4 (*.f64 s u)))","(fma.f64 -8 (*.f64 s (*.f64 u u)) (*.f64 -4 (*.f64 s u)))","(+.f64 (*.f64 -8 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -4 (*.f64 s u)) (*.f64 -64/3 (*.f64 s (pow.f64 u 3)))))","(fma.f64 -8 (*.f64 s (*.f64 u u)) (fma.f64 (*.f64 -64/3 s) (pow.f64 u 3) (*.f64 -4 (*.f64 s u))))","(+.f64 (*.f64 -64 (*.f64 s (pow.f64 u 4))) (+.f64 (*.f64 -8 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -4 (*.f64 s u)) (*.f64 -64/3 (*.f64 s (pow.f64 u 3))))))","(fma.f64 -64 (*.f64 s (pow.f64 u 4)) (fma.f64 -8 (*.f64 s (*.f64 u u)) (fma.f64 (*.f64 -64/3 s) (pow.f64 u 3) (*.f64 -4 (*.f64 s u)))))","(*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))","(*.f64 s (+.f64 (log.f64 u) (log.f64 -4)))","(+.f64 (*.f64 -1/4 (/.f64 s u)) (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(fma.f64 -1/4 (/.f64 s u) (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))))","(+.f64 (*.f64 -1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1/4 (/.f64 s u)) (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))))","(fma.f64 (/.f64 s (*.f64 u u)) -1/32 (fma.f64 -1/4 (/.f64 s u) (*.f64 s (+.f64 (log.f64 u) (log.f64 -4)))))","(+.f64 (*.f64 -1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1/4 (/.f64 s u)) (+.f64 (*.f64 -1/192 (/.f64 s (pow.f64 u 3))) (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))))","(fma.f64 (/.f64 s (*.f64 u u)) -1/32 (fma.f64 -1/4 (/.f64 s u) (fma.f64 -1/192 (/.f64 s (pow.f64 u 3)) (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))))))","(*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))","(*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))))","(+.f64 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))) (*.f64 -1/4 (/.f64 s u)))","(fma.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))) (/.f64 (*.f64 -1/4 s) u))","(+.f64 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))) (+.f64 (*.f64 -1/32 (/.f64 s (pow.f64 u 2))) (*.f64 -1/4 (/.f64 s u))))","(fma.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))) (fma.f64 -1/32 (/.f64 s (*.f64 u u)) (/.f64 (*.f64 -1/4 s) u)))","(+.f64 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))) (+.f64 (*.f64 -1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1/4 (/.f64 s u)) (*.f64 -1/192 (/.f64 s (pow.f64 u 3))))))","(fma.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))) (fma.f64 (/.f64 s (*.f64 u u)) -1/32 (fma.f64 -1/4 (/.f64 s u) (/.f64 (*.f64 -1/192 s) (pow.f64 u 3)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 4 (*.f64 s u))","(+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2))))","(fma.f64 4 (*.f64 s u) (*.f64 8 (*.f64 s (*.f64 u u))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2)))))","(fma.f64 (*.f64 64/3 s) (pow.f64 u 3) (fma.f64 4 (*.f64 s u) (*.f64 8 (*.f64 s (*.f64 u u)))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (+.f64 (*.f64 8 (*.f64 s (pow.f64 u 2))) (*.f64 64 (*.f64 s (pow.f64 u 4))))))","(fma.f64 64/3 (*.f64 s (pow.f64 u 3)) (fma.f64 (*.f64 4 s) u (fma.f64 (*.f64 64 s) (pow.f64 u 4) (*.f64 8 (*.f64 s (*.f64 u u))))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(*.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4)))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))","(fma.f64 1/4 (/.f64 s u) (*.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u))))","(fma.f64 (/.f64 s (*.f64 u u)) 1/32 (fma.f64 1/4 (/.f64 s u) (*.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4)))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))))","(fma.f64 1/32 (/.f64 s (*.f64 u u)) (fma.f64 1/192 (/.f64 s (pow.f64 u 3)) (fma.f64 1/4 (/.f64 s u) (*.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4))))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(*.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u)))","(fma.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))) (/.f64 (*.f64 1/4 s) u))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u))))","(fma.f64 (/.f64 s (*.f64 u u)) 1/32 (fma.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))) (/.f64 (*.f64 1/4 s) u)))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (*.f64 1/4 (/.f64 s u)))))","(fma.f64 (/.f64 s (*.f64 u u)) 1/32 (fma.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))) (fma.f64 1/192 (/.f64 s (pow.f64 u 3)) (/.f64 (*.f64 1/4 s) u))))"]],"time":247.8330078125,"type":"simplify"},{"compiler":[[10571,8859]],"time":148.35888671875,"type":"eval"},{"alts":[["(/.f64 (-.f64 0 (*.f64 3 (*.f64 (*.f64 3 s) (*.f64 (log1p.f64 (*.f64 -4 u)) 1/3)))) 3)","fresh",0.5225563965266303],["(/.f64 (-.f64 0 (*.f64 (*.f64 3 (log1p.f64 (*.f64 -4 u))) s)) 3)","fresh",0.4043350586106521],["(/.f64 (-.f64 0 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3))) (sqrt.f64 3))","fresh",0.32326127930532605],["(*.f64 (neg.f64 (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) s))","fresh",0.45872885745286224],["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","done",0.24609375],["(/.f64 (-.f64 0 (*.f64 3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 1/3))) 3)","fresh",0.5108376465266304],["(/.f64 (-.f64 0 (*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 9)","next",0.28257753907376804],["(/.f64 (-.f64 0 (*.f64 3 (/.f64 (*.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 3) (sqrt.f64 3)))) 3)","fresh",0.4479675781475362],["(/.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (sqrt.f64 3))","fresh",0.4902725586106521],["(/.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 9) -3))","fresh",0.4775963379159782]],"compiler":[[18,16],[14,12],[16,14],[18,15],[9,7],[18,16],[14,12],[22,20],[16,14],[20,18],[18,16],[14,12],[16,14],[18,15],[18,16],[14,12],[22,20],[16,14],[20,18]],"count":[[560,10]],"kept":[{"done":[1,1],"fresh":[4,0],"new":[554,9],"picked":[1,0]}],"min-error":[0],"time":295.158203125,"type":"prune"},{"compiler":[[50,38]],"locations":[["(*.f64 s (log1p.f64 (*.f64 -4 u)))",0.24609375,false],["(/.f64 (-.f64 0 (*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 9)",0.25390625,true],["(*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))",0.2903200316206538,true]],"time":17.712890625,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (-.f64 0 (*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 9)","u","-inf",0.22705078125],["(/.f64 (-.f64 0 (*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 9)","u","inf",0.203857421875],["(/.f64 (-.f64 0 (*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 9)","u","0",0.202880859375],["(/.f64 (-.f64 0 (*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 9)","s","-inf",0.1640625],["(/.f64 (-.f64 0 (*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 9)","s","inf",0.1728515625],["(/.f64 (-.f64 0 (*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 9)","s","0",0.1689453125],["(*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))","u","-inf",0.27197265625],["(*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))","u","inf",0.325927734375],["(*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))","u","0",0.302001953125],["(*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))","s","-inf",0.27392578125],["(*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))","s","inf",0.320068359375],["(*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))","s","0",0.39794921875]],"time":3.234130859375,"type":"series"},{"count":[[2,289]],"inputs":[["(*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))","(/.f64 (-.f64 0 (*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 9)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 9 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 9 s) (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 9 (log1p.f64 (*.f64 -4 u))) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (*.f64 9 (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 9) (*.f64 (cbrt.f64 81) (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 81) (*.f64 s (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 81) (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) (*.f64 (*.f64 9 s) (cbrt.f64 (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) (+.f64 0 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (+.f64 0 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) (+.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (+.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) (-.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (-.f64 9 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 -4 u)) (-.f64 (*.f64 9 s) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 -4 u)) (-.f64 0 (*.f64 -9 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 s) (neg.f64 (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) -9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -9 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 (log1p.f64 (*.f64 -4 u))) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -729 (*.f64 s (log1p.f64 (*.f64 -4 u))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) 0)) (+.f64 0 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) 0) (+.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) (*.f64 0 (cbrt.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))))) (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) 0) (-.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 729 (*.f64 s (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) 9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 729 (*.f64 s (log1p.f64 (*.f64 -4 u))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) 9) (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3) 9) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 9) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 9 (log1p.f64 (*.f64 -4 u))) s 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 9 s) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 9) (*.f64 (cbrt.f64 81) (*.f64 s (log1p.f64 (*.f64 -4 u)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9)) (cbrt.f64 81) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 9 s) (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3) 3 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 729 (*.f64 s (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) 9) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 s (*.f64 9 (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (*.f64 s (log1p.f64 (*.f64 -4 u))) (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (log1p.f64 (*.f64 -4 u)) (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 9 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/9) 0 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 0 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 0 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1/9 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 0) (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) (*.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 3)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/9 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/9) (/.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -1/9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) 1/3) (/.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81)) (cbrt.f64 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 9)) (cbrt.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/9 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) 9) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (+.f64 0 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/9) (+.f64 0 (/.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (+.f64 0 -1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (-.f64 0 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 s) (*.f64 (log1p.f64 (*.f64 -4 u)) 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 729 9))) (/.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 9 s) (cbrt.f64 1/9))) (/.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9))) (cbrt.f64 (/.f64 729 81)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -9 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -1/9) (/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 3 s)) (*.f64 (log1p.f64 (*.f64 -4 u)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 3))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -3 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (*.f64 -4 u))) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 s)) (*.f64 (cbrt.f64 (*.f64 s s)) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 s (cbrt.f64 (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 s))) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 9 s) (neg.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) 1/9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 729 9)) (neg.f64 (/.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (neg.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 9))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 9 s) (cbrt.f64 1/9)) (neg.f64 (/.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 81))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)) (neg.f64 (cbrt.f64 (/.f64 729 81))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 9 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/3) -3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 s) (neg.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 3)) (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 -4 u)) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 s) (neg.f64 (*.f64 (cbrt.f64 (*.f64 s s)) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (*.f64 -4 u))) (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (neg.f64 (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (neg.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 s)) (neg.f64 (cbrt.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)) (cbrt.f64 (/.f64 1 81)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9) (/.f64 1 81))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (*.f64 0 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (+.f64 0 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9) 81)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 3)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/3 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/9) (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)) 1) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9) 1) 81)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) 1) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) (cbrt.f64 3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) -1) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) (neg.f64 (sqrt.f64 3))) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) (sqrt.f64 3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) (cbrt.f64 9)) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9) 9) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)) (neg.f64 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)) (cbrt.f64 (cbrt.f64 81))) (pow.f64 (cbrt.f64 (cbrt.f64 81)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)) 1) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9))) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 81 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) -729)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 81 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) 729)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 81 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) (*.f64 81 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 81 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9))) (*.f64 81 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 81 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)))) (*.f64 81 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 729 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 729 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 729 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 729 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 729 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) (*.f64 729 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 729 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9))) (*.f64 729 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 729 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)))) (*.f64 729 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 -9 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 -9 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 -9 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) (*.f64 -9 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 -9 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9))) -729)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 -9 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)))) (*.f64 -9 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 9) (*.f64 9 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 9 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) 81)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 9 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) (*.f64 9 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 9 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9))) 729)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 9 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)))) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9))) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 81) (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 81) -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 81) (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 81) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 (cbrt.f64 81) (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) (*.f64 (cbrt.f64 81) (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 81) (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9))) (*.f64 (cbrt.f64 81) 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 81) (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)))) (*.f64 (cbrt.f64 81) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 9) -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 9) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 (cbrt.f64 9) (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9))) (*.f64 (cbrt.f64 9) 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)))) (*.f64 (cbrt.f64 9) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 3 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 3 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 3 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 3 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) (*.f64 3 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 3 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9))) (*.f64 3 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 81 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) -729)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 81 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) 729)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 81 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 81)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 81 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) (*.f64 81 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 81 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))) (*.f64 81 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 729 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 729 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 729 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 729 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 729 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 729)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 729 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) (*.f64 729 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 729 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))) (*.f64 729 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 -9 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) 81)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 -9 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 -9 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 -9 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) (*.f64 -9 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 -9 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))) (*.f64 -9 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 9 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 9 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 9 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) (*.f64 9 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 9 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9))) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 81) (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 81) -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 81) (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 81) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 81) (*.f64 s (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 (cbrt.f64 81) (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) (*.f64 (cbrt.f64 81) (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 81) (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))) (*.f64 (cbrt.f64 81) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 9) -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 9) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 9))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 (cbrt.f64 9) (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))) (*.f64 (cbrt.f64 9) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 3 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 3 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 3 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 81)) (*.f64 3 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)))) (*.f64 3 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u)))) 81)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9))) (*.f64 9 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)) 729)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9)) 9) (*.f64 (cbrt.f64 81) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9) 9) 729)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -9 s) (log1p.f64 (*.f64 -4 u))) 9) 81)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) 9) 27)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 9) (*.f64 -9 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 9) (neg.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (*.f64 s (log1p.f64 (*.f64 -4 u))) (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (log1p.f64 (*.f64 -4 u)) (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 9 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/9) 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1/9 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))))"]],"rules":[["egg-rr",195],["egg-rr",94]],"time":40.47998046875,"type":"rewrite"},{"count":[[337,338]],"inputs":[["(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -36 (*.f64 s u))","(+.f64 (*.f64 -72 (*.f64 s (pow.f64 u 2))) (*.f64 -36 (*.f64 s u)))","(+.f64 (*.f64 -192 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -72 (*.f64 s (pow.f64 u 2))) (*.f64 -36 (*.f64 s u))))","(+.f64 (*.f64 -192 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -576 (*.f64 s (pow.f64 u 4))) (+.f64 (*.f64 -72 (*.f64 s (pow.f64 u 2))) (*.f64 -36 (*.f64 s u)))))","(*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 -9/4 (/.f64 s u)))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u))))","(+.f64 (*.f64 -3/64 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u)))))","(*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 -9/4 (/.f64 s u)))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u))))","(+.f64 (*.f64 -3/64 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 4 (*.f64 s u))","(+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2)))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (+.f64 (*.f64 8 (*.f64 s (pow.f64 u 2))) (*.f64 64 (*.f64 s (pow.f64 u 4))))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u)))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (*.f64 1/4 (/.f64 s u)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 -36 (*.f64 s u))","(+.f64 (*.f64 -72 (*.f64 s (pow.f64 u 2))) (*.f64 -36 (*.f64 s u)))","(fma.f64 -72 (*.f64 s (*.f64 u u)) (*.f64 -36 (*.f64 s u)))","(+.f64 (*.f64 -192 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -72 (*.f64 s (pow.f64 u 2))) (*.f64 -36 (*.f64 s u))))","(fma.f64 (*.f64 -192 s) (pow.f64 u 3) (fma.f64 -72 (*.f64 s (*.f64 u u)) (*.f64 -36 (*.f64 s u))))","(+.f64 (*.f64 -192 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -576 (*.f64 s (pow.f64 u 4))) (+.f64 (*.f64 -72 (*.f64 s (pow.f64 u 2))) (*.f64 -36 (*.f64 s u)))))","(fma.f64 (*.f64 -192 s) (pow.f64 u 3) (fma.f64 (*.f64 -576 s) (pow.f64 u 4) (fma.f64 -72 (*.f64 s (*.f64 u u)) (*.f64 -36 (*.f64 s u)))))","(*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(*.f64 9 (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 -9/4 (/.f64 s u)))","(fma.f64 9 (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))) (/.f64 (*.f64 -9/4 s) u))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u))))","(fma.f64 9 (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))) (fma.f64 -9/32 (/.f64 (/.f64 s u) u) (/.f64 (*.f64 -9/4 s) u)))","(+.f64 (*.f64 -3/64 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u)))))","(fma.f64 (/.f64 s (pow.f64 u 3)) -3/64 (fma.f64 9 (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))) (fma.f64 -9/32 (/.f64 (/.f64 s u) u) (/.f64 (*.f64 -9/4 s) u))))","(*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(*.f64 9 (*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 -9/4 (/.f64 s u)))","(fma.f64 9 (*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))) (/.f64 (*.f64 -9/4 s) u))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u))))","(fma.f64 9 (*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))) (fma.f64 -9/32 (/.f64 (/.f64 s u) u) (/.f64 (*.f64 -9/4 s) u)))","(+.f64 (*.f64 -3/64 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u)))))","(fma.f64 (/.f64 s (pow.f64 u 3)) -3/64 (fma.f64 9 (*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))) (fma.f64 -9/32 (/.f64 (/.f64 s u) u) (/.f64 (*.f64 -9/4 s) u))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 4 (*.f64 s u))","(+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2))))","(fma.f64 4 (*.f64 s u) (*.f64 8 (*.f64 s (*.f64 u u))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2)))))","(fma.f64 (*.f64 64/3 s) (pow.f64 u 3) (fma.f64 4 (*.f64 s u) (*.f64 8 (*.f64 s (*.f64 u u)))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (+.f64 (*.f64 8 (*.f64 s (pow.f64 u 2))) (*.f64 64 (*.f64 s (pow.f64 u 4))))))","(fma.f64 (*.f64 64/3 s) (pow.f64 u 3) (fma.f64 (*.f64 s u) 4 (fma.f64 (*.f64 64 s) (pow.f64 u 4) (*.f64 8 (*.f64 s (*.f64 u u))))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(*.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4)))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))","(fma.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4)) (/.f64 (*.f64 1/4 s) u))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u))))","(fma.f64 (/.f64 (/.f64 s u) u) 1/32 (fma.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4)) (/.f64 (*.f64 1/4 s) u)))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))))","(fma.f64 1/32 (/.f64 (/.f64 s u) u) (fma.f64 (/.f64 s (pow.f64 u 3)) 1/192 (fma.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4)) (/.f64 (*.f64 1/4 s) u))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(*.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u)))","(fma.f64 (/.f64 s u) 1/4 (*.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u))))","(fma.f64 (/.f64 (/.f64 s u) u) 1/32 (fma.f64 (/.f64 s u) 1/4 (*.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (*.f64 1/4 (/.f64 s u)))))","(fma.f64 1/32 (/.f64 (/.f64 s u) u) (fma.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))) (fma.f64 1/192 (/.f64 s (pow.f64 u 3)) (/.f64 (*.f64 1/4 s) u))))"]],"time":155.218994140625,"type":"simplify"},{"compiler":[[10537,8807]],"time":145.94287109375,"type":"eval"},{"alts":[["(/.f64 (-.f64 0 (*.f64 (*.f64 9 (log1p.f64 (*.f64 -4 u))) s)) 9)","fresh",0.39195253907376804],["(/.f64 (-.f64 0 (*.f64 729 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))) (*.f64 729 3))","fresh",0.4072838379159782],["(/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)","next",0.3912887695368841],["(/.f64 (-.f64 0 (*.f64 (*.f64 3 (log1p.f64 (*.f64 -4 u))) s)) 3)","fresh",0.4043350586106521],["(/.f64 (-.f64 0 (*.f64 9 (/.f64 (*.f64 3 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))) (sqrt.f64 3)))) 9)","fresh",0.4375763672213043],["(*.f64 (neg.f64 (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) s))","fresh",0.45872885745286224],["(*.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9))) (cbrt.f64 (/.f64 729 81)))","fresh",0.40662006837909415],["(*.f64 (neg.f64 (*.f64 s (cbrt.f64 (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)))","fresh",0.4307213379159782],["(*.f64 (/.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) 9) 3)","fresh",0.4167175781475362]],"compiler":[[14,12],[18,16],[12,10],[14,12],[22,20],[18,15],[17,15],[18,15],[15,13],[14,12],[18,16],[12,10],[14,12],[22,20],[18,15],[17,15],[18,15],[15,13]],"count":[[572,9]],"kept":[{"done":[1,0],"fresh":[8,2],"new":[562,7],"picked":[1,0]}],"min-error":[0],"time":312.048095703125,"type":"prune"},{"compiler":[[35,26]],"locations":[["(/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)",0.25390625,true],["(*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))",0.3515625,true]],"time":11.9169921875,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)","u","-inf",0.2001953125],["(/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)","u","inf",0.219970703125],["(/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)","u","0",0.177001953125],["(/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)","s","-inf",0.161865234375],["(/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)","s","inf",0.177978515625],["(/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)","s","0",0.1650390625],["(*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))","u","-inf",0.2109375],["(*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))","u","inf",0.197998046875],["(*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))","u","0",0.177001953125],["(*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))","s","-inf",0.18408203125],["(*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))","s","inf",0.173828125],["(*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))","s","0",0.237060546875]],"time":2.468017578125,"type":"series"},{"count":[[2,123]],"inputs":[["(*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))","(/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 0) (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (*.f64 0 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (*.f64 -4 u))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) (*.f64 9 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 9 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 (*.f64 9 s))) (cbrt.f64 (*.f64 (*.f64 s s) 81)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) 9) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 9 s) (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 9 s)) (*.f64 (cbrt.f64 (*.f64 (*.f64 s s) 81)) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (*.f64 (log1p.f64 (*.f64 -4 u)) 9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 9) (*.f64 (cbrt.f64 81) (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) (*.f64 (*.f64 9 s) (cbrt.f64 (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 s s) 81)) (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 (*.f64 9 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 s s) 81)) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 (*.f64 9 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 81) (*.f64 s (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) (*.f64 9 s)) (cbrt.f64 (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -9 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (*.f64 -4 u))) (*.f64 -9 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 s) (neg.f64 (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 0) (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) (*.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s)))) (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) (*.f64 0 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 9) (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s)))) (cbrt.f64 (pow.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) -1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 1/9) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 1/3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 2)) (cbrt.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 729 -9)) (/.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 9 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) -1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 9 s) (cbrt.f64 -1/9)) (/.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 9 s) (*.f64 (log1p.f64 (*.f64 -4 u)) -1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 -1/9)) (/.f64 (*.f64 9 s) (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -1/9) (/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -1/9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/9 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) -1/9) 9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/9 (*.f64 9 s)) (log1p.f64 (*.f64 -4 u)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 9 s) (cbrt.f64 81)) (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 -1/9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 81)) (*.f64 (*.f64 9 s) (cbrt.f64 -1/9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/9 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2)) -1/9) (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) -1/9) (*.f64 9 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81)) (cbrt.f64 -1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81)) (cbrt.f64 (/.f64 729 -9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 -1/9)) (cbrt.f64 (/.f64 1 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 2)) (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 2)) (cbrt.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -9 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) -1/9)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (/.f64 (*.f64 9 s) (cbrt.f64 81))) (cbrt.f64 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 (pow.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 2))) (cbrt.f64 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 (pow.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 2))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9 (/.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81))) (cbrt.f64 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 9 s) (/.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 81))) (cbrt.f64 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) -3) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 -9)) (neg.f64 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 81)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81)) (cbrt.f64 -9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 -1/9)) (cbrt.f64 (cbrt.f64 81))) (pow.f64 (cbrt.f64 (cbrt.f64 81)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 -1/9)) (cbrt.f64 9)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 1/3) (cbrt.f64 9)) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 1/3) -1) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 1/3) (neg.f64 (sqrt.f64 3))) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 1/3) (cbrt.f64 3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (/.f64 -9 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 -1/9))) (neg.f64 (cbrt.f64 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 1/3)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 -1/9)) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 9 s) (cbrt.f64 -1/9)) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (cbrt.f64 -1/9)) (*.f64 9 s)) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 2))) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -1/9) (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 729 -9)) (*.f64 s (log1p.f64 (*.f64 -4 u)))) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 -1/9)) 1) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 1/3) 1) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) (cbrt.f64 -1/9)) 1) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) 1/3) (sqrt.f64 3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -9 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) -1/9)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -9 s) (*.f64 (log1p.f64 (*.f64 -4 u)) -1/9)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u)))) -1/9))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -1/9 (*.f64 -9 (*.f64 s (log1p.f64 (*.f64 -4 u))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) (*.f64 -1/9 (*.f64 9 s))) 3))))))"]],"rules":[["egg-rr",80],["egg-rr",43]],"time":28.06396484375,"type":"rewrite"},{"count":[[171,173]],"inputs":[["(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -36 (*.f64 s u))","(+.f64 (*.f64 -72 (*.f64 s (pow.f64 u 2))) (*.f64 -36 (*.f64 s u)))","(+.f64 (*.f64 -192 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -72 (*.f64 s (pow.f64 u 2))) (*.f64 -36 (*.f64 s u))))","(+.f64 (*.f64 -192 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -576 (*.f64 s (pow.f64 u 4))) (+.f64 (*.f64 -72 (*.f64 s (pow.f64 u 2))) (*.f64 -36 (*.f64 s u)))))","(*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 -9/4 (/.f64 s u)))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u))))","(+.f64 (*.f64 -3/64 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u)))))","(*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 -9/4 (/.f64 s u)))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u))))","(+.f64 (*.f64 -3/64 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 4 (*.f64 s u))","(+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2)))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (+.f64 (*.f64 8 (*.f64 s (pow.f64 u 2))) (*.f64 64 (*.f64 s (pow.f64 u 4))))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u)))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (*.f64 1/4 (/.f64 s u)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 9 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 9)","(*.f64 -36 (*.f64 s u))","(+.f64 (*.f64 -72 (*.f64 s (pow.f64 u 2))) (*.f64 -36 (*.f64 s u)))","(fma.f64 -72 (*.f64 s (*.f64 u u)) (*.f64 -36 (*.f64 s u)))","(+.f64 (*.f64 -192 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -72 (*.f64 s (pow.f64 u 2))) (*.f64 -36 (*.f64 s u))))","(fma.f64 (*.f64 -192 s) (pow.f64 u 3) (fma.f64 -72 (*.f64 s (*.f64 u u)) (*.f64 -36 (*.f64 s u))))","(+.f64 (*.f64 -192 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -576 (*.f64 s (pow.f64 u 4))) (+.f64 (*.f64 -72 (*.f64 s (pow.f64 u 2))) (*.f64 -36 (*.f64 s u)))))","(fma.f64 (*.f64 -192 s) (pow.f64 u 3) (fma.f64 (*.f64 -576 s) (pow.f64 u 4) (fma.f64 -72 (*.f64 s (*.f64 u u)) (*.f64 -36 (*.f64 s u)))))","(*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(*.f64 9 (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 -9/4 (/.f64 s u)))","(fma.f64 9 (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))) (/.f64 (*.f64 -9/4 s) u))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u))))","(fma.f64 9 (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))) (fma.f64 -9/32 (/.f64 (/.f64 s u) u) (/.f64 (*.f64 -9/4 s) u)))","(+.f64 (*.f64 -3/64 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u)))))","(fma.f64 (/.f64 s (pow.f64 u 3)) -3/64 (fma.f64 9 (*.f64 s (+.f64 (log.f64 u) (log.f64 -4))) (fma.f64 -9/32 (/.f64 (/.f64 s u) u) (/.f64 (*.f64 -9/4 s) u))))","(*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(*.f64 9 (*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 -9/4 (/.f64 s u)))","(fma.f64 9 (*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))) (/.f64 (*.f64 -9/4 s) u))","(+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u))))","(fma.f64 9 (*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))) (fma.f64 -9/32 (/.f64 (/.f64 s u) u) (/.f64 (*.f64 -9/4 s) u)))","(+.f64 (*.f64 -3/64 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 9 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 -9/32 (/.f64 s (pow.f64 u 2))) (*.f64 -9/4 (/.f64 s u)))))","(fma.f64 (/.f64 s (pow.f64 u 3)) -3/64 (fma.f64 9 (*.f64 s (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))) (fma.f64 -9/32 (/.f64 (/.f64 s u) u) (/.f64 (*.f64 -9/4 s) u))))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 (*.f64 -4 u) 1))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 4 (*.f64 s u))","(+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2))))","(fma.f64 4 (*.f64 s u) (*.f64 8 (*.f64 s (*.f64 u u))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (*.f64 8 (*.f64 s (pow.f64 u 2)))))","(fma.f64 (*.f64 64/3 s) (pow.f64 u 3) (fma.f64 4 (*.f64 s u) (*.f64 8 (*.f64 s (*.f64 u u)))))","(+.f64 (*.f64 64/3 (*.f64 s (pow.f64 u 3))) (+.f64 (*.f64 4 (*.f64 s u)) (+.f64 (*.f64 8 (*.f64 s (pow.f64 u 2))) (*.f64 64 (*.f64 s (pow.f64 u 4))))))","(fma.f64 (*.f64 64/3 s) (pow.f64 u 3) (fma.f64 (*.f64 s u) 4 (fma.f64 (*.f64 64 s) (pow.f64 u 4) (*.f64 8 (*.f64 s (*.f64 u u))))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4))))","(*.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4)))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))","(fma.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4)) (/.f64 (*.f64 1/4 s) u))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u))))","(fma.f64 (/.f64 (/.f64 s u) u) 1/32 (fma.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4)) (/.f64 (*.f64 1/4 s) u)))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4)))) (*.f64 1/4 (/.f64 s u)))))","(fma.f64 1/32 (/.f64 (/.f64 s u) u) (fma.f64 (/.f64 s (pow.f64 u 3)) 1/192 (fma.f64 (neg.f64 s) (+.f64 (log.f64 u) (log.f64 -4)) (/.f64 (*.f64 1/4 s) u))))","(*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4))))","(*.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))))","(+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u)))","(fma.f64 (/.f64 s u) 1/4 (*.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (*.f64 1/4 (/.f64 s u))))","(fma.f64 (/.f64 (/.f64 s u) u) 1/32 (fma.f64 (/.f64 s u) 1/4 (*.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))))))","(+.f64 (*.f64 1/32 (/.f64 s (pow.f64 u 2))) (+.f64 (*.f64 -1 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4)))) (+.f64 (*.f64 1/192 (/.f64 s (pow.f64 u 3))) (*.f64 1/4 (/.f64 s u)))))","(fma.f64 1/32 (/.f64 (/.f64 s u) u) (fma.f64 (neg.f64 s) (-.f64 (log.f64 4) (neg.f64 (log.f64 (neg.f64 u)))) (fma.f64 1/192 (/.f64 s (pow.f64 u 3)) (/.f64 (*.f64 1/4 s) u))))"]],"time":151.221923828125,"type":"simplify"},{"compiler":[[2838,2191]],"time":41.162109375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)","done",0.3912887695368841],["(/.f64 (-.f64 0 (*.f64 (*.f64 3 (log1p.f64 (*.f64 -4 u))) s)) 3)","fresh",0.4043350586106521],["(/.f64 (-.f64 0 (*.f64 9 (/.f64 (*.f64 3 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))) (sqrt.f64 3)))) 9)","fresh",0.4375763672213043],["(*.f64 (neg.f64 (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) s))","fresh",0.45872885745286224],["(/.f64 (*.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) 9) s) -9)","fresh",0.39195253907376804],["(*.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9))) (cbrt.f64 (/.f64 729 81)))","fresh",0.40662006837909415],["(/.f64 (-.f64 0 (*.f64 729 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))) (*.f64 729 3))","fresh",0.4072838379159782],["(*.f64 (neg.f64 (*.f64 s (cbrt.f64 (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)))","fresh",0.4307213379159782],["(*.f64 (/.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) 9) 3)","fresh",0.4167175781475362]],"compiler":[[12,10],[14,12],[22,20],[18,15],[12,10],[17,15],[18,16],[18,15],[15,13]],"count":[[182,9]],"kept":[{"done":[0,0],"fresh":[8,7],"new":[173,1],"picked":[1,1]}],"min-error":[0],"time":35.260986328125,"type":"prune"},{"accuracy":[0.24609375],"baseline":[0.24609375],"branch":[["s",0.24609375,1],["u",0.24609375,1],["(*.f64 s (log.f64 (/.f64 1 (-.f64 1 (*.f64 4 u)))))",0.24609375,1],["(log.f64 (/.f64 1 (-.f64 1 (*.f64 4 u))))",0.24609375,1],["(/.f64 1 (-.f64 1 (*.f64 4 u)))",0.24609375,1],["(-.f64 1 (*.f64 4 u))",0.24609375,1],["(*.f64 4 u)",0.24609375,1]],"compiler":[[3,2],[3,2],[12,10],[10,9],[9,8],[7,6],[5,4],[327,271]],"count":[[23,1]],"inputs":[["(/.f64 (*.f64 (*.f64 (log1p.f64 (*.f64 -4 u)) 9) s) -9)","(/.f64 (-.f64 0 (*.f64 (*.f64 9 (log1p.f64 (*.f64 -4 u))) s)) 9)","(/.f64 (-.f64 0 (*.f64 729 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3))) (*.f64 729 3))","(/.f64 (*.f64 (*.f64 9 s) (log1p.f64 (*.f64 -4 u))) -9)","(/.f64 (-.f64 0 (*.f64 9 (/.f64 (*.f64 3 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3))) (sqrt.f64 3)))) 9)","(*.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (cbrt.f64 1/9))) (cbrt.f64 (/.f64 729 81)))","(*.f64 (neg.f64 (*.f64 s (cbrt.f64 (log1p.f64 (*.f64 -4 u))))) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)))","(*.f64 (/.f64 (neg.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) 3)) 9) 3)","(/.f64 (-.f64 0 (*.f64 3 (*.f64 (*.f64 3 s) (*.f64 (log1p.f64 (*.f64 -4 u)) 1/3)))) 3)","(/.f64 (-.f64 0 (*.f64 (*.f64 3 (log1p.f64 (*.f64 -4 u))) s)) 3)","(/.f64 (-.f64 0 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 3))) (sqrt.f64 3))","(*.f64 (neg.f64 (cbrt.f64 (log1p.f64 (*.f64 -4 u)))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 -4 u)) 2)) s))","(/.f64 (-.f64 0 (*.f64 3 (*.f64 (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))) 1/3))) 3)","(/.f64 (-.f64 0 (*.f64 9 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 9)","(/.f64 (-.f64 0 (*.f64 3 (/.f64 (*.f64 (*.f64 (*.f64 s (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) 3) (sqrt.f64 3)))) 3)","(/.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4 u))) (sqrt.f64 1/3)) (sqrt.f64 3))","(/.f64 (+.f64 0 (*.f64 (cbrt.f64 9) (*.f64 (*.f64 3 s) (log1p.f64 (*.f64 -4 u))))) (*.f64 (cbrt.f64 9) -3))","(pow.f64 (cbrt.f64 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))) 3)","(*.f64 -1 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4 u)))))","(/.f64 (-.f64 0 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 -4 u))))) 3)","(fma.f64 (*.f64 s (pow.f64 u 3)) 64/3 (fma.f64 4 (*.f64 s u) (fma.f64 (*.f64 64 s) (pow.f64 u 4) (*.f64 8 (*.f64 s (*.f64 u u))))))","(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))","(*.f64 s (log.f64 (/.f64 1 (-.f64 1 (*.f64 4 u)))))"]],"link":["."],"name":["Disney BSSRDF, sample scattering profile, lower"],"oracle":[20.78192167218377],"outputs":[["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))"]],"time":60.552978515625,"times":[["s",7.3291015625],["u",7.635009765625],["(*.f64 s (log.f64 (/.f64 1 (-.f64 1 (*.f64 4 u)))))",7.5400390625],["(log.f64 (/.f64 1 (-.f64 1 (*.f64 4 u))))",7.7978515625],["(/.f64 1 (-.f64 1 (*.f64 4 u)))",7.73486328125],["(-.f64 1 (*.f64 4 u))",7.89306640625],["(*.f64 4 u)",7.765869140625]],"type":"regimes"},{"compiler":[[9,7]],"inputs":[["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (neg.f64 s) (log1p.f64 (*.f64 -4 u)))"]],"stop":[["fuel",1]],"time":36.02099609375,"type":"simplify"},{"time":0.01708984375,"type":"soundness"},{"compiler":[[9,7]],"remove-preprocessing":[[]],"time":8.0078125,"type":"end"}]