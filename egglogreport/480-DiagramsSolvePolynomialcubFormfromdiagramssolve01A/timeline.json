[{"compiler":[[24,18]],"method":["search"],"sampling":[[12,0.0,0.9970738864512326,0.002926113548767373],[11,0.0,0.9970738864512326,0.002926113548767373],[10,0.0,0.9970738864512326,0.002926113548767373],[9,0.0,0.9970738864512326,0.002926113548767373],[8,0.0,0.9970738864512326,0.002926113548767373],[7,0.0,0.9970738864512326,0.002926113548767373],[6,0.0,0.9970738864512326,0.002926113548767373],[5,0.0,0.9970738864512326,0.002926113548767373],[4,0.0,0.9970738864512326,0.002926113548767373],[3,0.0,0.9970738864512326,0.002926113548767373],[2,0.0,0.9970738864512326,0.002926113548767373],[1,0.0,0.9970738864512326,0.002926113548767373],[0,0.0,0.9970738864512326,0.002926113548767373]],"time":222.326904296875,"type":"analyze"},{"outcomes":[["body",256,"invalid",195.287353515625,3125],["body",256,"valid",517.28173828125,8256]],"time":723.073974609375,"type":"sample"},{"compiler":[[23,17]],"inputs":[["0","1","2","3","4","5"],["(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 a 27) b))","(+.f64 (-.f64 (*.f64 y 2) (*.f64 (*.f64 (*.f64 x 9) z) t)) (*.f64 (*.f64 a 27) b))","(+.f64 (-.f64 (*.f64 z 2) (*.f64 (*.f64 (*.f64 y 9) x) t)) (*.f64 (*.f64 a 27) b))","(+.f64 (-.f64 (*.f64 t 2) (*.f64 (*.f64 (*.f64 y 9) z) x)) (*.f64 (*.f64 a 27) b))","(+.f64 (-.f64 (*.f64 a 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 x 27) b))","(+.f64 (-.f64 (*.f64 b 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 a 27) x))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 z 9) y) t)) (*.f64 (*.f64 a 27) b))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 t 9) z) y)) (*.f64 (*.f64 a 27) b))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 a 9) z) t)) (*.f64 (*.f64 y 27) b))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 b 9) z) t)) (*.f64 (*.f64 a 27) y))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) t) z)) (*.f64 (*.f64 a 27) b))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) a) t)) (*.f64 (*.f64 z 27) b))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) b) t)) (*.f64 (*.f64 a 27) z))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) a)) (*.f64 (*.f64 t 27) b))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) b)) (*.f64 (*.f64 a 27) t))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 b 27) a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4","5"],["(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 a 27) b))","(fma.f64 (*.f64 a 27) b (fma.f64 x 2 (*.f64 (neg.f64 (*.f64 y 9)) (*.f64 t z))))","(+.f64 (-.f64 (*.f64 y 2) (*.f64 (*.f64 (*.f64 x 9) z) t)) (*.f64 (*.f64 a 27) b))","(fma.f64 (*.f64 a 27) b (fma.f64 y 2 (*.f64 (neg.f64 (*.f64 x 9)) (*.f64 t z))))","(+.f64 (-.f64 (*.f64 z 2) (*.f64 (*.f64 (*.f64 y 9) x) t)) (*.f64 (*.f64 a 27) b))","(fma.f64 (*.f64 a 27) b (fma.f64 z 2 (*.f64 (neg.f64 (*.f64 y 9)) (*.f64 x t))))","(+.f64 (-.f64 (*.f64 t 2) (*.f64 (*.f64 (*.f64 y 9) z) x)) (*.f64 (*.f64 a 27) b))","(fma.f64 (*.f64 a 27) b (fma.f64 t 2 (*.f64 (neg.f64 (*.f64 y 9)) (*.f64 z x))))","(+.f64 (-.f64 (*.f64 a 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 x 27) b))","(fma.f64 b (*.f64 x 27) (fma.f64 a 2 (*.f64 (neg.f64 (*.f64 y 9)) (*.f64 t z))))","(+.f64 (-.f64 (*.f64 b 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 a 27) x))","(fma.f64 a (*.f64 x 27) (fma.f64 b 2 (*.f64 (neg.f64 (*.f64 y 9)) (*.f64 t z))))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 z 9) y) t)) (*.f64 (*.f64 a 27) b))","(fma.f64 (*.f64 a 27) b (fma.f64 x 2 (*.f64 (neg.f64 (*.f64 y 9)) (*.f64 t z))))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 t 9) z) y)) (*.f64 (*.f64 a 27) b))","(fma.f64 (*.f64 a 27) b (fma.f64 x 2 (*.f64 (neg.f64 y) (*.f64 (*.f64 t 9) z))))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 a 9) z) t)) (*.f64 (*.f64 y 27) b))","(fma.f64 (*.f64 y 27) b (fma.f64 x 2 (*.f64 (neg.f64 (*.f64 a 9)) (*.f64 t z))))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 b 9) z) t)) (*.f64 (*.f64 a 27) y))","(fma.f64 (*.f64 a 27) y (fma.f64 x 2 (*.f64 (neg.f64 t) (*.f64 (*.f64 b 9) z))))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) t) z)) (*.f64 (*.f64 a 27) b))","(fma.f64 (*.f64 a 27) b (fma.f64 x 2 (*.f64 (neg.f64 (*.f64 y 9)) (*.f64 t z))))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) a) t)) (*.f64 (*.f64 z 27) b))","(fma.f64 b (*.f64 z 27) (fma.f64 x 2 (*.f64 (neg.f64 t) (*.f64 (*.f64 y 9) a))))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) b) t)) (*.f64 (*.f64 a 27) z))","(fma.f64 a (*.f64 z 27) (fma.f64 x 2 (*.f64 (neg.f64 t) (*.f64 (*.f64 y 9) b))))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) a)) (*.f64 (*.f64 t 27) b))","(fma.f64 b (*.f64 t 27) (fma.f64 x 2 (*.f64 (neg.f64 (*.f64 y 9)) (*.f64 z a))))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) b)) (*.f64 (*.f64 a 27) t))","(fma.f64 a (*.f64 t 27) (fma.f64 x 2 (*.f64 (neg.f64 (*.f64 y 9)) (*.f64 z b))))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 b 27) a))","(fma.f64 (*.f64 a 27) b (fma.f64 x 2 (*.f64 (neg.f64 (*.f64 y 9)) (*.f64 t z))))"]],"symmetry":[[]],"time":108.576171875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 a 27) b))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 a 27) b))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))"]],"time":20.69384765625,"type":"simplify"},{"compiler":[[38,26]],"time":0.491943359375,"type":"eval"},{"alts":[["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","next",4.91796875],["(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 a 27) b))","fresh",4.92578125]],"compiler":[[21,15],[23,17],[21,15],[23,17]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[4.8828125],"time":1.60498046875,"type":"prune"},{"compiler":[[60,36]],"locations":[["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))",0.01953125,true],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))",0.140625,true],["(*.f64 (*.f64 -9 z) y)",0.203125,true],["(*.f64 (*.f64 (*.f64 -9 z) y) t)",7.8432918086654855,true]],"time":13.7041015625,"type":"localize"},{"count":[[4,192]],"series":[["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","t","-inf",0.19384765625],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","t","inf",0.177978515625],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","t","0",0.21484375],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","y","-inf",0.177001953125],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","y","inf",0.199951171875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","y","0",0.199951171875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","z","-inf",0.200927734375],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","z","inf",0.18408203125],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","z","0",0.233154296875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","b","-inf",0.18017578125],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","b","inf",0.17822265625],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","b","0",0.22216796875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","a","-inf",0.179931640625],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","a","inf",0.200927734375],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","a","0",0.240966796875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","x","-inf",0.324951171875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","x","inf",0.286865234375],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","x","0",0.43408203125],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","t","-inf",0.1748046875],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","t","inf",0.18798828125],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","t","0",0.223876953125],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","y","-inf",0.190185546875],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","y","inf",0.171142578125],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","y","0",0.2470703125],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","z","-inf",0.175048828125],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","z","inf",0.173828125],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","z","0",0.284912109375],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","b","-inf",0.35009765625],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","b","inf",0.3408203125],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","b","0",0.39501953125],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","a","-inf",0.321044921875],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","a","inf",0.31982421875],["(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","a","0",1.18994140625],["(*.f64 (*.f64 -9 z) y)","y","-inf",0.241943359375],["(*.f64 (*.f64 -9 z) y)","y","inf",0.392822265625],["(*.f64 (*.f64 -9 z) y)","y","0",0.330078125],["(*.f64 (*.f64 -9 z) y)","z","-inf",0.259033203125],["(*.f64 (*.f64 -9 z) y)","z","inf",0.43310546875],["(*.f64 (*.f64 -9 z) y)","z","0",0.76513671875],["(*.f64 (*.f64 (*.f64 -9 z) y) t)","t","-inf",0.293212890625],["(*.f64 (*.f64 (*.f64 -9 z) y) t)","t","inf",0.52197265625],["(*.f64 (*.f64 (*.f64 -9 z) y) t)","t","0",0.899169921875],["(*.f64 (*.f64 (*.f64 -9 z) y) t)","y","-inf",0.280029296875],["(*.f64 (*.f64 (*.f64 -9 z) y) t)","y","inf",0.43603515625],["(*.f64 (*.f64 (*.f64 -9 z) y) t)","y","0",0.60693359375],["(*.f64 (*.f64 (*.f64 -9 z) y) t)","z","-inf",0.452880859375],["(*.f64 (*.f64 (*.f64 -9 z) y) t)","z","inf",0.64599609375],["(*.f64 (*.f64 (*.f64 -9 z) y) t)","z","0",0.748046875]],"time":16.677001953125,"type":"series"},{"count":[[4,143]],"inputs":[["(*.f64 (*.f64 (*.f64 -9 z) y) t)","(*.f64 (*.f64 -9 z) y)","(fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) (*.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) 0) (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) (*.f64 0 (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (*.f64 -9 z) y) t)) (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -9 z) y)) (*.f64 (pow.f64 (*.f64 (*.f64 -9 z) y) 2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -9 z) y) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 (*.f64 -9 z) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 z) (*.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t)) (pow.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y t) (*.f64 -9 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) 2/3) (cbrt.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t -9) (*.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 -9 z) y))) (pow.f64 (*.f64 (*.f64 -9 z) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (*.f64 -9 z)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 -9 (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -9 z)) (*.f64 (pow.f64 (*.f64 -9 z) 2/3) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) (*.f64 (*.f64 -9 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 (*.f64 -9 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -9 (*.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 -9 z) y) (cbrt.f64 t)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -9 z) y) (*.f64 (*.f64 (*.f64 -9 z) y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -9 z) y) 0) (*.f64 (*.f64 -9 z) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -9 z) y) (*.f64 0 (*.f64 (*.f64 -9 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 -9 z) y)) (*.f64 (*.f64 -9 z) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (*.f64 (pow.f64 y 2/3) (*.f64 -9 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -9) (*.f64 (cbrt.f64 81) (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 z) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 -9 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -9 (*.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -9 z) y)) (pow.f64 (*.f64 (*.f64 -9 z) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z y) -9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 -9 z) y) 2/3) (cbrt.f64 (*.f64 (*.f64 -9 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y -9) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 -9 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -9 z)) (*.f64 (pow.f64 (*.f64 -9 z) 2/3) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (*.f64 -9 z))) (pow.f64 (*.f64 -9 z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -9 z) (cbrt.f64 y)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 -9 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 -9 z) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -9 z) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -9 z) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 -9 z) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 -9 z) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 -9 z) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 -9 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 -9 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 -9 z) y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 -9 z) y) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 27 (*.f64 a b)) (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) (*.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) 0) (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) (*.f64 0 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) (pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) 2/3) (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -9 (*.f64 (*.f64 z y) t) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y t) (*.f64 -9 z) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) 2/3) (cbrt.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t)) (pow.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) 2/3) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) (*.f64 (*.f64 -9 z) y)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (*.f64 (*.f64 -9 z) y) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 (*.f64 -9 z) t) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 -9 (*.f64 y t)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 -9 z) y)) (*.f64 (pow.f64 (*.f64 (*.f64 -9 z) y) 2/3) t) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -9 z)) (*.f64 (pow.f64 (*.f64 -9 z) 2/3) (*.f64 y t)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -9 z) (*.f64 y t) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t -9) (*.f64 z y) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (*.f64 -9 z)) y (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -9 z) y) t (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (*.f64 -9 z) y) (cbrt.f64 t)) (pow.f64 t 2/3) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 -9 z) y))) (pow.f64 (*.f64 (*.f64 -9 z) y) 2/3) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 27 (*.f64 a b))) (cbrt.f64 (pow.f64 (*.f64 27 (*.f64 a b)) 2)) (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 27 (*.f64 a b) (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (*.f64 a 27) (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a 27)) (*.f64 (pow.f64 (*.f64 a 27) 2/3) b) (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 27 b) (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a 27) (cbrt.f64 b)) (pow.f64 b 2/3) (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 (*.f64 -9 z) y) t) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) 1 (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 27 (*.f64 a b)) (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 27 (*.f64 a b)) 1 (*.f64 (*.f64 (*.f64 -9 z) y) t))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x x) (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 2 x (*.f64 27 (*.f64 a b))) (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x x) (*.f64 (*.f64 (*.f64 -9 z) y) t)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 27 (*.f64 a b)) (+.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) (*.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 0) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 x (*.f64 27 (*.f64 a b))) 1) (*.f64 (*.f64 (*.f64 -9 z) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) (*.f64 0 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -9 z) y) t) (fma.f64 2 x (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))) (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 2/3) (cbrt.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) 2/3) (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) (pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) 2/3) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 2)) (cbrt.f64 4) (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) 2) (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x x)) (cbrt.f64 (*.f64 4 (*.f64 x x))) (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 2)) (sqrt.f64 2) (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 x (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)) 1 (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x x) 1 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x x) (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))))))"]],"rules":[["egg-rr",37],["egg-rr",47],["egg-rr",28],["egg-rr",31]],"time":35.72900390625,"type":"rewrite"},{"count":[[335,156]],"inputs":[["(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y z))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 x x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 x x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(fma.f64 (*.f64 27 a) b (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(fma.f64 (*.f64 27 a) b (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(fma.f64 (*.f64 27 a) b (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))"]],"time":563.051025390625,"type":"simplify"},{"compiler":[[2960,1815]],"time":36.388916015625,"type":"eval"},{"alts":[["(fma.f64 x 2 (fma.f64 a (*.f64 27 b) (*.f64 (*.f64 (*.f64 -9 z) y) t)))","fresh",4.93359375],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 -9 (*.f64 y (*.f64 t z)))))","fresh",2.9116910310416335],["(fma.f64 x 2 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 3))","fresh",5.229370312590141],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 -9 z) y)) 3) t)))","fresh",5.057642639073514],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (cbrt.f64 -9) (*.f64 (cbrt.f64 81) (*.f64 z y))) t)))","fresh",4.949882519536884],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 y (*.f64 (*.f64 -9 z) t))))","fresh",2.9116910310416335],["(fma.f64 x 2 (fma.f64 (*.f64 y t) (*.f64 -9 z) (*.f64 27 (*.f64 a b))))","fresh",2.1930860230424227],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","next",2.179746032810865],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 z (*.f64 -9 y)) t)))","fresh",4.92578125]],"compiler":[[21,15],[21,15],[24,18],[24,18],[25,19],[21,15],[21,15],[21,15],[21,15],[21,15],[21,15],[24,18],[24,18],[25,19],[21,15],[21,15],[21,15],[21,15]],"count":[[158,9]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[156,9],"picked":[1,0]}],"min-error":[0.01953125],"time":53.441162109375,"type":"prune"},{"compiler":[[60,31]],"locations":[["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))",0.01953125,true],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))",0.140625,true],["(*.f64 -9 (*.f64 y t))",0.24735128162065376,true],["(*.f64 z (*.f64 -9 (*.f64 y t)))",4.309963122453408,true]],"time":12.575927734375,"type":"localize"},{"count":[[4,168]],"series":[["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","t","-inf",0.18701171875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","t","inf",0.41796875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","t","0",0.19287109375],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","y","-inf",0.1669921875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","y","inf",0.19482421875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","y","0",0.16796875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","z","-inf",0.16796875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","z","inf",0.19580078125],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","z","0",0.169921875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","b","-inf",0.192138671875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","b","inf",0.166015625],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","b","0",0.197021484375],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","a","-inf",0.1669921875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","a","inf",0.169921875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","a","0",0.195068359375],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","x","-inf",0.16796875],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","x","inf",0.2109375],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","x","0",0.173095703125],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","t","-inf",0.162109375],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","t","inf",0.180908203125],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","t","0",0.156982421875],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","y","-inf",0.18701171875],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","y","inf",0.1611328125],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","y","0",0.16015625],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","z","-inf",0.182861328125],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","z","inf",0.160888671875],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","z","0",0.183837890625],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","b","-inf",0.158935546875],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","b","inf",0.1640625],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","b","0",0.179931640625],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","a","-inf",0.160888671875],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","a","inf",0.19091796875],["(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","a","0",0.1640625],["(*.f64 -9 (*.f64 y t))","t","-inf",0.237060546875],["(*.f64 -9 (*.f64 y t))","t","inf",0.30517578125],["(*.f64 -9 (*.f64 y t))","t","0",0.322998046875],["(*.f64 -9 (*.f64 y t))","y","-inf",0.26806640625],["(*.f64 -9 (*.f64 y t))","y","inf",0.39501953125],["(*.f64 -9 (*.f64 y t))","y","0",0.43017578125],["(*.f64 z (*.f64 -9 (*.f64 y t)))","t","-inf",0.18603515625],["(*.f64 z (*.f64 -9 (*.f64 y t)))","t","inf",0.158935546875],["(*.f64 z (*.f64 -9 (*.f64 y t)))","t","0",0.173828125],["(*.f64 z (*.f64 -9 (*.f64 y t)))","y","-inf",0.159912109375],["(*.f64 z (*.f64 -9 (*.f64 y t)))","y","inf",0.160888671875],["(*.f64 z (*.f64 -9 (*.f64 y t)))","y","0",0.177978515625],["(*.f64 z (*.f64 -9 (*.f64 y t)))","z","-inf",0.156005859375],["(*.f64 z (*.f64 -9 (*.f64 y t)))","z","inf",0.161865234375],["(*.f64 z (*.f64 -9 (*.f64 y t)))","z","0",0.218994140625]],"time":10.126953125,"type":"series"},{"count":[[4,145]],"inputs":[["(*.f64 z (*.f64 -9 (*.f64 y t)))","(*.f64 -9 (*.f64 y t))","(fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) 0) (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) (*.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 z (*.f64 -9 (*.f64 y t)))) (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) (*.f64 0 (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 -9 (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 (*.f64 y t)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (*.f64 -9 (*.f64 y t)))) (pow.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) 2/3) (cbrt.f64 (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (*.f64 y t)) -9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (*.f64 -9 y)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z -9) (*.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z -9) y) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z -9) t) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -9 (*.f64 (*.f64 y t) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -9 (*.f64 y t))) (*.f64 (pow.f64 (*.f64 -9 (*.f64 y t)) 2/3) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y t) (*.f64 z -9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 y) (*.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (*.f64 -9 (*.f64 y t)))) (pow.f64 (*.f64 -9 (*.f64 y t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -9 (*.f64 y t)) (cbrt.f64 z)) (pow.f64 z 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z -9) (cbrt.f64 (*.f64 y t))) (pow.f64 (*.f64 y t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (*.f64 -9 (*.f64 y t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 z (*.f64 -9 (*.f64 y t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -9 (*.f64 y t)) 0) (*.f64 -9 (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -9 (*.f64 y t)) (*.f64 (*.f64 -9 (*.f64 y t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 -9 (*.f64 y t))) (*.f64 -9 (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -9 (*.f64 y t)) (*.f64 0 (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y t)) (*.f64 (pow.f64 (*.f64 y t) 2/3) -9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -9) (*.f64 (cbrt.f64 81) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -9 (*.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y t) -9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 y) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 t) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 t -9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 -9 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -9 (*.f64 y t))) (pow.f64 (*.f64 -9 (*.f64 y t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 -9 (*.f64 y t)) 2/3) (cbrt.f64 (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -9 y) (cbrt.f64 t)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -729 (*.f64 y t))) (pow.f64 (*.f64 y t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y t) (cbrt.f64 -9)) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -9 (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 (*.f64 y t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -9 (*.f64 y t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -9 (*.f64 y t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -9 (*.f64 y t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -9 (*.f64 y t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -9 (*.f64 y t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -9 (*.f64 y t)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 27 (*.f64 a b)) (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) 0) (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) (*.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) (*.f64 0 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) (pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) 2/3) (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -9 (*.f64 y t)) z (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z -9) t) y (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (*.f64 -9 (*.f64 y t))) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -9 (*.f64 y t))) (*.f64 (pow.f64 (*.f64 -9 (*.f64 y t)) 2/3) z) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (*.f64 -9 y)) t (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z -9) y) t (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y t) (*.f64 z -9) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (*.f64 -9 (*.f64 y t)))) (pow.f64 (*.f64 -9 (*.f64 y t)) 2/3) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z -9) (cbrt.f64 (*.f64 y t))) (pow.f64 (*.f64 y t) 2/3) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (*.f64 y t)) -9 (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) 2/3) (cbrt.f64 (*.f64 z (*.f64 -9 (*.f64 y t)))) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 -9 (*.f64 y t)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z (*.f64 -9 (*.f64 y t)))) (pow.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) 2/3) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -9 (*.f64 y t)) (cbrt.f64 z)) (pow.f64 z 2/3) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -9 (*.f64 (*.f64 y t) z) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -9 y) (*.f64 t z) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 27 (*.f64 a b) (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (*.f64 a 27) (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 27 b) (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a 27)) (*.f64 (pow.f64 (*.f64 a 27) 2/3) b) (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a 27) (cbrt.f64 b)) (pow.f64 b 2/3) (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 27 (*.f64 a b))) (cbrt.f64 (pow.f64 (*.f64 27 (*.f64 a b)) 2)) (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 z (*.f64 -9 (*.f64 y t)))) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) 1 (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (*.f64 -9 (*.f64 y t))) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 27 (*.f64 a b)) 1 (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 27 (*.f64 a b)) (*.f64 z (*.f64 -9 (*.f64 y t))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x x) (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x x) (*.f64 z (*.f64 -9 (*.f64 y t)))) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 2 (*.f64 27 (*.f64 a b))) (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 27 (*.f64 a b)) (+.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) 0) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) (*.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 2 (*.f64 27 (*.f64 a b))) 1) (*.f64 z (*.f64 -9 (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) (*.f64 0 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (*.f64 -9 (*.f64 y t))) (fma.f64 x 2 (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))) (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) 2/3) (cbrt.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x x)) (cbrt.f64 (*.f64 (*.f64 x x) 4)) (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 2)) (cbrt.f64 4) (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 2)) (sqrt.f64 2) (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) 2) (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) (pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) 2/3) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) 2/3) (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 x (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t))))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x x) 1 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x x) (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))) 1 (+.f64 x x))))))"]],"rules":[["egg-rr",37],["egg-rr",48],["egg-rr",28],["egg-rr",32]],"time":35.34912109375,"type":"rewrite"},{"count":[[313,157]],"inputs":[["(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 x x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 x x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(fma.f64 (*.f64 y (*.f64 t z)) -9 (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(fma.f64 (*.f64 y (*.f64 t z)) -9 (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(fma.f64 27 (*.f64 a b) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(fma.f64 27 (*.f64 a b) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(fma.f64 27 (*.f64 a b) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))"]],"time":492.031982421875,"type":"simplify"},{"compiler":[[2974,1660]],"time":33.968994140625,"type":"eval"},{"alts":[["(fma.f64 x 2 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 3))","fresh",5.229370312590141],["(fma.f64 x 2 (fma.f64 a (*.f64 27 b) (*.f64 z (*.f64 -9 (*.f64 y t)))))","fresh",2.199277282810865],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 -9 y) (*.f64 t z))))","fresh",2.906163540810075],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (cbrt.f64 -9) (*.f64 (cbrt.f64 81) (*.f64 z y))) t)))","fresh",4.949882519536884],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","next",2.1930860230424227],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (pow.f64 (cbrt.f64 (*.f64 z (*.f64 -9 (*.f64 y t)))) 3)))","fresh",2.346833679337495]],"compiler":[[24,18],[21,15],[21,15],[25,19],[21,15],[24,18],[24,18],[21,15],[21,15],[25,19],[21,15],[24,18]],"count":[[166,6]],"kept":[{"done":[0,0],"fresh":[8,2],"new":[157,4],"picked":[1,0]}],"min-error":[0.015625],"time":53.697021484375,"type":"prune"},{"compiler":[[56,27]],"locations":[["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))",0.01953125,true],["(*.f64 27 (*.f64 a b))",0.2987963011575378,true],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))",2.559480592230664,true]],"time":11.660888671875,"type":"localize"},{"count":[[3,132]],"series":[["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","b","-inf",0.17578125],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","b","inf",0.203125],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","b","0",0.18017578125],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","a","-inf",0.2060546875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","a","inf",0.177001953125],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","a","0",0.205810546875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","t","-inf",0.220947265625],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","t","inf",0.652099609375],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","t","0",0.1748046875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","y","-inf",0.178955078125],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","y","inf",0.2041015625],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","y","0",0.176025390625],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","z","-inf",0.2060546875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","z","inf",0.177978515625],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","z","0",0.203125],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","x","-inf",0.177001953125],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","x","inf",0.18603515625],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","x","0",0.35693359375],["(*.f64 27 (*.f64 a b))","b","-inf",0.20703125],["(*.f64 27 (*.f64 a b))","b","inf",0.251953125],["(*.f64 27 (*.f64 a b))","b","0",0.286865234375],["(*.f64 27 (*.f64 a b))","a","-inf",0.180908203125],["(*.f64 27 (*.f64 a b))","a","inf",0.260986328125],["(*.f64 27 (*.f64 a b))","a","0",0.31005859375],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","b","-inf",0.23291015625],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","b","inf",0.322021484375],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","b","0",1.7109375],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","a","-inf",0.213134765625],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","a","inf",0.330078125],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","a","0",0.447021484375],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","t","-inf",0.3017578125],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","t","inf",0.256103515625],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","t","0",0.3359375],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","y","-inf",0.302001953125],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","y","inf",0.260009765625],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","y","0",0.357177734375],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","z","-inf",0.31396484375],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","z","inf",0.3388671875],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","z","0",0.51611328125]],"time":12.297119140625,"type":"series"},{"count":[[3,120]],"inputs":[["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) 0) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) (*.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) (*.f64 0 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z -9) (*.f64 y t)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 27 (*.f64 a b)) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) (pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) 2/3) (cbrt.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z -9)) (*.f64 (pow.f64 (*.f64 z -9) 2/3) (*.f64 y t)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y t) (*.f64 z -9) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z -9) t) y (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -9 (*.f64 z (*.f64 y t)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 z -9) (*.f64 y t))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 z -9) (*.f64 y t)) 2)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 -9 (*.f64 y t)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z -9) (cbrt.f64 (*.f64 y t))) (pow.f64 (*.f64 y t) 2/3) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z -9) y) t (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a b) (sqrt.f64 27)) (sqrt.f64 27) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 19683 (*.f64 a b))) (pow.f64 (*.f64 a b) 2/3) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a b)) (*.f64 (pow.f64 (*.f64 a b) 2/3) 27) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b 27) a (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 27 (*.f64 a b)) 2/3) (cbrt.f64 (*.f64 27 (*.f64 a b))) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (*.f64 27 a) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 27 a) (cbrt.f64 b)) (pow.f64 b 2/3) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 27 a) b (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 b 27) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 27 (*.f64 a b))) (pow.f64 (*.f64 27 (*.f64 a b)) 2/3) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 27 (*.f64 a b) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a b) 27 (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 27) (*.f64 (*.f64 a b) (sqrt.f64 27)) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3 (*.f64 9 (*.f64 a b)) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 27 (*.f64 a b))) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a b) 3) 9 (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 z -9) (*.f64 y t)) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 27 (*.f64 a b)) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 27 (*.f64 a b)) 1 (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z -9) (*.f64 y t)) 1 (*.f64 27 (*.f64 a b)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 27 (*.f64 a b)) 0) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 27 (*.f64 a b)) (*.f64 (*.f64 27 (*.f64 a b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 27 (*.f64 a b))) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 27 (*.f64 a b)) (*.f64 0 (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 27 a) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 b (*.f64 27 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 b 27))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a b)) (*.f64 (pow.f64 (*.f64 a b) 2/3) 27))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b 27) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2/3) 27) (cbrt.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 27 (*.f64 a b))) (pow.f64 (*.f64 27 (*.f64 a b)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 27 (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a b) 27)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 27 (*.f64 a b)) 2/3) (cbrt.f64 (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 19683 (*.f64 a b))) (pow.f64 (*.f64 a b) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 27 a) (cbrt.f64 b)) (pow.f64 b 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a b) (sqrt.f64 27)) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 27) (*.f64 (*.f64 a b) (sqrt.f64 27)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a b) 2/3) (cbrt.f64 (*.f64 19683 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b 2/3) (*.f64 (*.f64 27 a) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 27 (*.f64 a b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 9 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 27 (*.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 9 (*.f64 a b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a b) 3) 9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 9 (*.f64 (*.f64 a b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 27 (*.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 27 (*.f64 a b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 27 (*.f64 a b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 27 (*.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 27 (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 27 (*.f64 a b)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 2 x (*.f64 (*.f64 z -9) (*.f64 y t))) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) 0) (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) (*.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))) (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) (*.f64 0 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 x (*.f64 (*.f64 z -9) (*.f64 y t))) 1) (*.f64 27 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x x) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 27 (*.f64 a b)) (fma.f64 2 x (*.f64 (*.f64 z -9) (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x x) (*.f64 27 (*.f64 a b))) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z -9) (*.f64 y t)) (+.f64 (*.f64 27 (*.f64 a b)) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))) (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) 2/3) (cbrt.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) 2) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x x)) (cbrt.f64 (*.f64 4 (*.f64 x x))) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 2)) (cbrt.f64 4) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 2)) (sqrt.f64 2) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) (pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) 2/3) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) 2/3) (cbrt.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 x (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b)))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x x) 1 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x x) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) 1 (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))) (+.f64 x x))))))"]],"rules":[["egg-rr",37],["egg-rr",35],["egg-rr",48]],"time":31.616943359375,"type":"rewrite"},{"count":[[252,131]],"inputs":[["(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 x x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 x x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(fma.f64 27 (*.f64 a b) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(fma.f64 27 (*.f64 a b) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(fma.f64 27 (*.f64 a b) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))"]],"time":393.1650390625,"type":"simplify"},{"compiler":[[2475,1279]],"time":27.0498046875,"type":"eval"},{"alts":[["(fma.f64 x 2 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 3))","fresh",5.229370312590141],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 -9 y) (*.f64 t z))))","fresh",2.906163540810075],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (cbrt.f64 -9) (*.f64 (cbrt.f64 81) (*.f64 z y))) t)))","fresh",4.949882519536884],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 9 (*.f64 (*.f64 a b) 3))))","fresh",2.2367185425793066],["(fma.f64 x 2 (fma.f64 3 (*.f64 9 (*.f64 a b)) (*.f64 (*.f64 z -9) (*.f64 y t))))","fresh",2.222714782810865],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","next",2.1930860230424227],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (pow.f64 (cbrt.f64 (*.f64 z (*.f64 -9 (*.f64 y t)))) 3)))","fresh",2.346833679337495]],"compiler":[[24,18],[21,15],[25,19],[23,17],[23,17],[21,15],[24,18],[24,18],[21,15],[25,19],[23,17],[23,17],[21,15],[24,18]],"count":[[137,7]],"kept":[{"done":[0,0],"fresh":[5,4],"new":[131,3],"picked":[1,0]}],"min-error":[0.0078125],"time":42.591064453125,"type":"prune"},{"compiler":[[56,31]],"locations":[["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))",0.01953125,true],["(*.f64 (*.f64 b 27) a)",0.2421875,true],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))",2.559480592230664,true]],"time":12.60595703125,"type":"localize"},{"count":[[3,156]],"series":[["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","a","-inf",0.166015625],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","a","inf",0.1669921875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","a","0",0.194091796875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","b","-inf",0.166015625],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","b","inf",0.194091796875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","b","0",0.1689453125],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","t","-inf",0.16796875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","t","inf",0.19482421875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","t","0",0.1689453125],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","y","-inf",0.197021484375],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","y","inf",0.16796875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","y","0",0.19482421875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","z","-inf",0.1689453125],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","z","inf",0.16796875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","z","0",0.19384765625],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","x","-inf",0.16796875],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","x","inf",0.19189453125],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","x","0",0.173095703125],["(*.f64 (*.f64 b 27) a)","a","-inf",0.138916015625],["(*.f64 (*.f64 b 27) a)","a","inf",0.162109375],["(*.f64 (*.f64 b 27) a)","a","0",0.13818359375],["(*.f64 (*.f64 b 27) a)","b","-inf",0.1669921875],["(*.f64 (*.f64 b 27) a)","b","inf",0.139892578125],["(*.f64 (*.f64 b 27) a)","b","0",0.140869140625],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","a","-inf",0.19189453125],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","a","inf",0.166015625],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","a","0",0.162109375],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","b","-inf",0.19287109375],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","b","inf",0.172119140625],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","b","0",0.189208984375],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","t","-inf",0.1630859375],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","t","inf",0.1728515625],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","t","0",0.158935546875],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","y","-inf",0.164794921875],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","y","inf",0.19091796875],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","y","0",0.162109375],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","z","-inf",0.174072265625],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","z","inf",0.169921875],["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","z","0",0.205078125]],"time":7.2509765625,"type":"series"},{"count":[[3,116]],"inputs":[["(fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))","(*.f64 (*.f64 b 27) a)","(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) 0) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) (*.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z -9) (*.f64 y t)) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) (*.f64 0 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 27 (*.f64 b a)) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) (pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) 2/3) (cbrt.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z -9) t) y (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z -9) (cbrt.f64 (*.f64 y t))) (pow.f64 (*.f64 y t) 2/3) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z -9)) (*.f64 (pow.f64 (*.f64 z -9) 2/3) (*.f64 y t)) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z -9) y) t (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -9 (*.f64 z (*.f64 y t)) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y t) (*.f64 z -9) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 -9 (*.f64 y t)) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 z -9) (*.f64 y t))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 z -9) (*.f64 y t)) 2)) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (pow.f64 b 2/3) (*.f64 27 a)) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 27 (*.f64 b a)) 2/3) (cbrt.f64 (*.f64 27 (*.f64 b a))) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 27 a) b (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 27 (*.f64 b a) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 27 (*.f64 b a))) (pow.f64 (*.f64 27 (*.f64 b a)) 2/3) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 (*.f64 b 27))) (pow.f64 (*.f64 b 27) 2/3) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 b 27) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) (*.f64 b 27)) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 b 27) (cbrt.f64 a)) (pow.f64 a 2/3) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b 27)) (*.f64 (pow.f64 (*.f64 b 27) 2/3) a) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b a) 27 (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (*.f64 27 a) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b 27) a (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 27 (*.f64 b a))) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 z -9) (*.f64 y t)) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z -9) (*.f64 y t)) 1 (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 27 (*.f64 b a)) 1 (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 27 (*.f64 b a)) (*.f64 (*.f64 z -9) (*.f64 y t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 27 (*.f64 b a)) 0) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 27 (*.f64 b a)) (*.f64 (*.f64 27 (*.f64 b a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 27 (*.f64 b a))) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 27 (*.f64 b a)) (*.f64 0 (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 b 27)) (*.f64 (pow.f64 (*.f64 b 27) 2/3) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 b) (*.f64 (pow.f64 b 2/3) (*.f64 27 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b 27) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 b 27))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 b (*.f64 27 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 27 a) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) (*.f64 b 27)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 b 2/3) (*.f64 27 a)) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 a 2/3) (*.f64 b 27)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 b 27) 2/3) a) (cbrt.f64 (*.f64 b 27)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 27 (*.f64 b a))) (pow.f64 (*.f64 27 (*.f64 b a)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 27 (*.f64 b a)) 2/3) (cbrt.f64 (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 b 27) (cbrt.f64 a)) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 (*.f64 b 27))) (pow.f64 (*.f64 b 27) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 27 (*.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b a) 27)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 b 27) 2/3) (*.f64 a (cbrt.f64 (*.f64 b 27))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 2/3) (*.f64 (*.f64 b 27) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 27 (*.f64 b a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 27 (*.f64 b a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 27 (*.f64 b a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 27 (*.f64 b a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 27 (*.f64 b a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 27 (*.f64 b a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 27 (*.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 27 (*.f64 b a)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 2 x (*.f64 (*.f64 z -9) (*.f64 y t))) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) 0) (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) (*.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x x) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 x (*.f64 (*.f64 z -9) (*.f64 y t))) 1) (*.f64 27 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))) (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) (*.f64 0 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 27 (*.f64 b a)) (fma.f64 2 x (*.f64 (*.f64 z -9) (*.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x x) (*.f64 27 (*.f64 b a))) (*.f64 (*.f64 z -9) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z -9) (*.f64 y t)) (+.f64 (*.f64 27 (*.f64 b a)) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))) (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) 2/3) (cbrt.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x x)) (cbrt.f64 (*.f64 4 (*.f64 x x))) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 2)) (sqrt.f64 2) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 2)) (cbrt.f64 4) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) 2) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) (pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) 2/3) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) 2/3) (cbrt.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 x (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a)))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x x) (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x x) 1 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) 1 (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 b a))) (+.f64 x x))))))"]],"rules":[["egg-rr",37],["egg-rr",33],["egg-rr",46]],"time":31.651123046875,"type":"rewrite"},{"count":[[272,128]],"inputs":[["(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b)))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 x x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 2 x)","(+.f64 x x)","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(fma.f64 27 (*.f64 a b) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(fma.f64 27 (*.f64 a b) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 27 (*.f64 a b)))","(fma.f64 27 (*.f64 a b) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 -9 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (*.f64 -9 (*.f64 y (*.f64 t z))))","(fma.f64 -9 (*.f64 y (*.f64 t z)) (+.f64 x x))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(*.f64 27 (*.f64 a b))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))","(+.f64 (*.f64 2 x) (+.f64 (*.f64 -9 (*.f64 y (*.f64 t z))) (*.f64 27 (*.f64 a b))))","(fma.f64 2 x (fma.f64 -9 (*.f64 y (*.f64 t z)) (*.f64 27 (*.f64 a b))))"]],"time":459.0859375,"type":"simplify"},{"compiler":[[2432,1276]],"time":27.7451171875,"type":"eval"},{"alts":[["(fma.f64 x 2 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 3))","fresh",5.229370312590141],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 -9 y) (*.f64 t z))))","fresh",2.906163540810075],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (cbrt.f64 -9) (*.f64 (cbrt.f64 81) (*.f64 z y))) t)))","fresh",4.949882519536884],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 9 (*.f64 (*.f64 a b) 3))))","fresh",2.2367185425793066],["(fma.f64 x 2 (fma.f64 3 (*.f64 9 (*.f64 a b)) (*.f64 (*.f64 z -9) (*.f64 y t))))","fresh",2.222714782810865],["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","done",2.1930860230424227],["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (pow.f64 (cbrt.f64 (*.f64 z (*.f64 -9 (*.f64 y t)))) 3)))","fresh",2.346833679337495]],"compiler":[[24,18],[21,15],[25,19],[23,17],[23,17],[21,15],[24,18]],"count":[[135,7]],"kept":[{"done":[0,0],"fresh":[6,6],"new":[128,0],"picked":[1,1]}],"min-error":[0.0078125],"time":35.18798828125,"type":"prune"},{"accuracy":[0.15625],"baseline":[2.179746032810865],"branch":[["x",2.179746032810865,1],["y",1.1460660310416333,2],["z",0.4274610230424227,3],["t",0.15625,4],["a",1.1702537597684421,3],["b",2.179746032810865,1],["(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 a 27) b))",0.18359375,3],["(-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) t))",0.18359375,3],["(*.f64 x 2)",2.179746032810865,1],["(*.f64 (*.f64 (*.f64 y 9) z) t)",0.18359375,3],["(*.f64 (*.f64 y 9) z)",0.17578125,3],["(*.f64 y 9)",1.1460660310416333,2],["(*.f64 (*.f64 a 27) b)",2.179746032810865,1],["(*.f64 a 27)",1.1702537597684421,3],["(*.f64 a 27)",1.1702537597684421,3]],"compiler":[[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[23,17],[17,13],[9,8],[13,10],[11,9],[9,8],[11,9],[9,8],[9,8],[295,176]],"count":[[18,4]],"inputs":[["(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 9 (*.f64 (*.f64 a b) 3))))","(fma.f64 x 2 (fma.f64 3 (*.f64 9 (*.f64 a b)) (*.f64 (*.f64 z -9) (*.f64 y t))))","(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","(fma.f64 x 2 (fma.f64 a (*.f64 27 b) (*.f64 z (*.f64 -9 (*.f64 y t)))))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 -9 y) (*.f64 t z))))","(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 27 (*.f64 a b))))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (pow.f64 (cbrt.f64 (*.f64 z (*.f64 -9 (*.f64 y t)))) 3)))","(fma.f64 x 2 (fma.f64 a (*.f64 27 b) (*.f64 (*.f64 (*.f64 -9 z) y) t)))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 -9 (*.f64 y (*.f64 t z)))))","(fma.f64 x 2 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) 3))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 -9 z) y)) 3) t)))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (cbrt.f64 -9) (*.f64 (cbrt.f64 81) (*.f64 z y))) t)))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 y (*.f64 (*.f64 -9 z) t))))","(fma.f64 x 2 (fma.f64 (*.f64 y t) (*.f64 -9 z) (*.f64 27 (*.f64 a b))))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 z (*.f64 -9 (*.f64 y t)))))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 z (*.f64 -9 y)) t)))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 a 27) b))"]],"link":["."],"name":["Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, A"],"oracle":[10.026517447137063],"outputs":[["(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t)))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 -9 y) (*.f64 t z))))","(fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a)))","(fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 z (*.f64 -9 y)) t)))"]],"time":220.510009765625,"times":[["x",6.0400390625],["y",17.198974609375],["z",17.05810546875],["t",22.43896484375],["a",17.02001953125],["b",6.205078125],["(+.f64 (-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) t)) (*.f64 (*.f64 a 27) b))",16.515869140625],["(-.f64 (*.f64 x 2) (*.f64 (*.f64 (*.f64 y 9) z) t))",18.98193359375],["(*.f64 x 2)",6.299072265625],["(*.f64 (*.f64 (*.f64 y 9) z) t)",13.783935546875],["(*.f64 (*.f64 y 9) z)",14.754150390625],["(*.f64 y 9)",17.158935546875],["(*.f64 (*.f64 a 27) b)",5.718994140625],["(*.f64 a 27)",17.116943359375],["(*.f64 a 27)",17.368896484375]],"type":"regimes"},{"bstep":[[2.3983417737447177e-22,1.1225064907464695e-11,12.616943359375],[-1.151809825705982e-299,-1.44633597539868e-301,12.966796875],[-3.1754747846449476e+20,-18888309753684595000.0,6.857177734375]],"compiler":[[22,16],[22,16],[22,16],[22,16],[25,19],[7,6]],"method":["binary-search","binary-search","binary-search"],"time":32.6650390625,"type":"bsearch"},{"compiler":[[78,51]],"inputs":[["(if (<=.f64 t -100000000000000000000) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) (if (<=.f64 t -4342364223755737/377003575316277553052632783947358479815640765734281611362288441560101396530857955835685848633641608981764089063400052322800846281248691448694119974860434438887084693231743502178167752441192448774799271819130974018130465379775860716808779827596916922071594850183201524526501846714374614008118077197384100897810808832) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 -9 y) (*.f64 t z)))) (if (<=.f64 t 6646139978924579/664613997892457936451903530140172288) (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 z (*.f64 -9 y)) t))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 t -100000000000000000000) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) (if (<=.f64 t -4342364223755737/377003575316277553052632783947358479815640765734281611362288441560101396530857955835685848633641608981764089063400052322800846281248691448694119974860434438887084693231743502178167752441192448774799271819130974018130465379775860716808779827596916922071594850183201524526501846714374614008118077197384100897810808832) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 -9 y) (*.f64 t z)))) (if (<=.f64 t 6646139978924579/664613997892457936451903530140172288) (fma.f64 x 2 (fma.f64 (*.f64 z -9) (*.f64 y t) (*.f64 (*.f64 b 27) a))) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 z (*.f64 -9 y)) t))))))","(if (<=.f64 t -100000000000000000000) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) (if (<=.f64 t -4342364223755737/377003575316277553052632783947358479815640765734281611362288441560101396530857955835685848633641608981764089063400052322800846281248691448694119974860434438887084693231743502178167752441192448774799271819130974018130465379775860716808779827596916922071594850183201524526501846714374614008118077197384100897810808832) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) (if (<=.f64 t 6646139978924579/664613997892457936451903530140172288) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))) (fma.f64 x 2 (fma.f64 (*.f64 a 27) b (*.f64 (*.f64 (*.f64 -9 z) y) t))))))"]],"stop":[["fuel",1]],"time":22.413818359375,"type":"simplify"},{"time":0.026123046875,"type":"soundness"},{"compiler":[[78,51]],"remove-preprocessing":[[]],"time":23.593994140625,"type":"end"}]