[{"compiler":[[13,9]],"method":["search"],"sampling":[[12,0.3705504210233812,0.3783514825186103,0.2510980964580085],[11,0.3120424598091631,0.448561035975672,0.2393965042151649],[10,0.2496339678473305,0.5148700586851191,0.23549597346755036],[9,0.18722547588549787,0.6396870426087844,0.17308748150571773],[8,0.12481698392366525,0.7176976575610752,0.15748535851525958],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":77.68896484375,"type":"analyze"},{"outcomes":[["body",256,"invalid",48.73046875,1217],["body",256,"valid",332.08349609375,8256]],"time":389.5791015625,"type":"sample"},{"compiler":[[12,8]],"inputs":[["0","1","2"],["(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))","(-.f64 (*.f64 y y) (*.f64 (*.f64 x 4) z))","(-.f64 (*.f64 z z) (*.f64 (*.f64 y 4) x))","(-.f64 (*.f64 x x) (*.f64 (*.f64 z 4) y))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(-.f64 (*.f64 y y) (*.f64 (*.f64 x 4) z))","(fma.f64 y y (*.f64 (*.f64 -4 z) x))","(-.f64 (*.f64 z z) (*.f64 (*.f64 y 4) x))","(fma.f64 z z (*.f64 y (*.f64 -4 x)))","(-.f64 (*.f64 x x) (*.f64 (*.f64 z 4) y))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))"]],"symmetry":[[]],"time":67.658935546875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))","(fma.f64 x x (*.f64 -4 (*.f64 z y)))"]],"time":19.110107421875,"type":"simplify"},{"compiler":[[20,12]],"time":0.36181640625,"type":"eval"},{"alts":[["(fma.f64 x x (*.f64 -4 (*.f64 z y)))","next",0.00390625]],"compiler":[[11,7],[11,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.00390625],"time":1.97412109375,"type":"prune"},{"compiler":[[23,10]],"locations":[["(fma.f64 x x (*.f64 -4 (*.f64 z y)))",0.00390625,true]],"time":4.908935546875,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 x x (*.f64 -4 (*.f64 z y)))","y","-inf",0.5048828125],["(fma.f64 x x (*.f64 -4 (*.f64 z y)))","y","inf",0.330078125],["(fma.f64 x x (*.f64 -4 (*.f64 z y)))","y","0",0.343994140625],["(fma.f64 x x (*.f64 -4 (*.f64 z y)))","z","-inf",0.237060546875],["(fma.f64 x x (*.f64 -4 (*.f64 z y)))","z","inf",0.345947265625],["(fma.f64 x x (*.f64 -4 (*.f64 z y)))","z","0",0.507080078125],["(fma.f64 x x (*.f64 -4 (*.f64 z y)))","x","-inf",0.386962890625],["(fma.f64 x x (*.f64 -4 (*.f64 z y)))","x","inf",0.44482421875],["(fma.f64 x x (*.f64 -4 (*.f64 z y)))","x","0",0.548095703125]],"time":3.763916015625,"type":"series"},{"count":[[1,46]],"inputs":[["(fma.f64 x x (*.f64 -4 (*.f64 z y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (*.f64 -4 (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (*.f64 z y)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x x (*.f64 -4 (*.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -4 (*.f64 z y)) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x x) (*.f64 4 (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y)))) (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y))) 2/3) (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y))))) (neg.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 4/3) (-.f64 (pow.f64 (*.f64 -4 (*.f64 z y)) 2/3) (*.f64 (pow.f64 x 2/3) (cbrt.f64 (*.f64 -4 (*.f64 z y)))))) (+.f64 (pow.f64 x 2/3) (cbrt.f64 (*.f64 -4 (*.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 -4 (*.f64 z y)) 2/3) (-.f64 (pow.f64 x 4/3) (*.f64 (cbrt.f64 (*.f64 -4 (*.f64 z y))) (pow.f64 x 2/3)))) (+.f64 (cbrt.f64 (*.f64 -4 (*.f64 z y))) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x x (*.f64 -4 (*.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 z y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x x (*.f64 -4 (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 4/3) (pow.f64 x 2/3) (*.f64 -4 (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (pow.f64 x 4/3) (*.f64 -4 (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 5) (*.f64 -4 (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 -4 y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 z y)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z y)) (*.f64 (pow.f64 (*.f64 z y) 2/3) -4) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 -4 (*.f64 z y)) 2/3) (cbrt.f64 (*.f64 -4 (*.f64 z y))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -64 (*.f64 z y))) (pow.f64 (*.f64 z y) 2/3) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -4 z) (cbrt.f64 y)) (pow.f64 y 2/3) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z y) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 -4 z) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 y) z (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 z) y (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -4 (*.f64 z y))) (pow.f64 (*.f64 -4 (*.f64 z y)) 2/3) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 z y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z y) -4 (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 4 (*.f64 z y)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x x) (*.f64 -4 (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) 1 (*.f64 -4 (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (*.f64 z y)) 1 (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -4 (*.f64 z y)) (*.f64 x x))))))"]],"rules":[["egg-rr",46]],"time":36.651123046875,"type":"rewrite"},{"count":[[82,51]],"inputs":[["(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(*.f64 -4 (*.f64 y z))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))","(+.f64 (pow.f64 x 2) (*.f64 -4 (*.f64 y z)))","(fma.f64 x x (*.f64 -4 (*.f64 y z)))"]],"time":108.27587890625,"type":"simplify"},{"compiler":[[599,296]],"time":8.14404296875,"type":"eval"},{"alts":[["(fma.f64 y (*.f64 -4 z) (*.f64 x x))","next",0]],"compiler":[[11,7],[11,7]],"count":[[52,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[51,1],"picked":[1,0]}],"min-error":[0],"time":9.072998046875,"type":"prune"},{"compiler":[[21,10]],"time":4.838134765625,"type":"localize"},{"compiler":[[3,3]],"time":0.0908203125,"type":"eval"},{"alts":[["(fma.f64 y (*.f64 -4 z) (*.f64 x x))","done",0]],"compiler":[[11,7]],"count":[[1,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[0],"time":0.489013671875,"type":"prune"},{"accuracy":[0],"baseline":[0.0],"branch":[["x",0,1],["y",0,1],["z",0,1],["(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))",0,1],["(*.f64 x x)",0,1],["(*.f64 (*.f64 y 4) z)",0,1],["(*.f64 y 4)",0,1]],"compiler":[[4,3],[4,3],[4,3],[12,8],[6,4],[8,6],[6,5],[28,15]],"count":[[3,1]],"inputs":[["(fma.f64 y (*.f64 -4 z) (*.f64 x x))","(fma.f64 x x (*.f64 -4 (*.f64 z y)))","(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))"]],"link":["."],"name":["Graphics.Rasterific.QuadraticFormula:discriminant from Rasterific-0.6.1"],"oracle":[0.00390625],"outputs":[["(fma.f64 y (*.f64 -4 z) (*.f64 x x))"]],"time":18.498046875,"times":[["x",2.55908203125],["y",2.638916015625],["z",2.43798828125],["(-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) z))",2.615966796875],["(*.f64 x x)",2.10107421875],["(*.f64 (*.f64 y 4) z)",2.525146484375],["(*.f64 y 4)",2.614990234375]],"type":"regimes"},{"compiler":[[11,7]],"inputs":[["(fma.f64 y (*.f64 -4 z) (*.f64 x x))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 y (*.f64 -4 z) (*.f64 x x))"]],"stop":[["done",1]],"time":33.9619140625,"type":"simplify"},{"time":0.01416015625,"type":"soundness"},{"compiler":[[11,7]],"remove-preprocessing":[[]],"time":8.322021484375,"type":"end"}]