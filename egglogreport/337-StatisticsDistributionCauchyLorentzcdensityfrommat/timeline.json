[{"compiler":[[15,11]],"method":["search"],"sampling":[[12,0.7918077417657514,0.19697680275453422,0.011215455479714365],[11,0.7176976575610752,0.27693768308063227,0.005364659358292556],[10,0.6552891655992426,0.34324670579007943,0.0014641286106780171],[9,0.6240849196183262,0.37445095177099574,0.0014641286106780171],[8,0.43685944373282837,0.5616764276564936,0.0014641286106780171],[7,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[6,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":54.50390625,"type":"analyze"},{"outcomes":[["body",256,"invalid",25.85009765625,554],["body",256,"valid",372.98486328125,8256]],"time":406.903076171875,"type":"sample"},{"compiler":[[14,10]],"inputs":[["0","1","2"],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 (/.f64 1 y) (*.f64 x (+.f64 1 (*.f64 z z))))","(/.f64 (/.f64 1 z) (*.f64 y (+.f64 1 (*.f64 x x))))","(/.f64 (/.f64 1 x) (*.f64 z (+.f64 1 (*.f64 y y))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 1 y) (*.f64 x (+.f64 1 (*.f64 z z))))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 1 z) (*.f64 y (+.f64 1 (*.f64 x x))))","(/.f64 1 (*.f64 z (*.f64 y (fma.f64 x x 1))))","(/.f64 (/.f64 1 x) (*.f64 z (+.f64 1 (*.f64 y y))))","(/.f64 1 (*.f64 x (*.f64 z (fma.f64 y y 1))))"]],"symmetry":[[]],"time":73.472900390625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))"]],"time":18.950927734375,"type":"simplify"},{"compiler":[[24,16]],"time":0.39306640625,"type":"eval"},{"alts":[["(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","fresh",7.711316390241195],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","next",6.811433675725763]],"compiler":[[13,9],[14,10],[13,9],[14,10]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[5.787029149023389],"time":1.323974609375,"type":"prune"},{"compiler":[[36,18]],"locations":[["(*.f64 y (+.f64 1 (*.f64 z z)))",3.5985245225457883,true],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))",4.4708827429498115,true]],"time":7.506103515625,"type":"localize"},{"count":[[2,60]],"series":[["(*.f64 y (+.f64 1 (*.f64 z z)))","z","-inf",0.1650390625],["(*.f64 y (+.f64 1 (*.f64 z z)))","z","inf",0.31201171875],["(*.f64 y (+.f64 1 (*.f64 z z)))","z","0",0.299072265625],["(*.f64 y (+.f64 1 (*.f64 z z)))","y","-inf",0.27197265625],["(*.f64 y (+.f64 1 (*.f64 z z)))","y","inf",0.31494140625],["(*.f64 y (+.f64 1 (*.f64 z z)))","y","0",0.220947265625],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","z","-inf",0.31298828125],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","z","inf",0.4580078125],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","z","0",0.89111328125],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","y","-inf",0.32080078125],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","y","inf",0.38916015625],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","y","0",0.837890625],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","x","-inf",0.56494140625],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","x","inf",0.511962890625],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","x","0",1.113037109375]],"time":7.203857421875,"type":"series"},{"count":[[2,185]],"inputs":[["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","(*.f64 y (+.f64 1 (*.f64 z z)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 0) (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) (*.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))) (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) (*.f64 0 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1 (*.f64 x (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 y) (fma.f64 z z 1))) (/.f64 -1 (*.f64 x (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 x) (fma.f64 (*.f64 y z) z y))) (/.f64 -1 (*.f64 x (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 x (fma.f64 (*.f64 y z) z y))) (/.f64 -1 (*.f64 x (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) (/.f64 0 (*.f64 x (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 (*.f64 x (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (*.f64 x (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 1 y) x) (cbrt.f64 (fma.f64 z z 1))) (/.f64 1 (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 2)) (cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))) (cbrt.f64 (/.f64 (pow.f64 x -2) (pow.f64 (fma.f64 (*.f64 y z) z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 1 x)) y) (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 z z 1)) (/.f64 (cbrt.f64 (pow.f64 x -2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 (/.f64 1 y) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 y) (fma.f64 z z 1)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 y) x) (/.f64 1 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 1/3)) (/.f64 (/.f64 1 x) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (/.f64 (/.f64 1 x) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 (/.f64 1 y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 z z 1)) (/.f64 (cbrt.f64 (/.f64 1 x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (*.f64 x (fma.f64 (*.f64 y z) z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 (*.f64 y z) z y)) (cbrt.f64 (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (fma.f64 z z 1)) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 x -2) (pow.f64 (fma.f64 (*.f64 y z) z y) 2))) (cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2))) (pow.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) y) (/.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 x) y) (/.f64 -1 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 1 x)) y) (cbrt.f64 (pow.f64 x -2))) (fma.f64 z z 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 2)) (cbrt.f64 (/.f64 (/.f64 1 y) x))) (cbrt.f64 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 -1 x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 -1 x) y) 1) (neg.f64 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 y) x)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 2))) (cbrt.f64 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 y) x)) (cbrt.f64 (/.f64 (pow.f64 x -2) (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))) (cbrt.f64 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 x) (/.f64 1 (fma.f64 z z 1))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 x) (fma.f64 z z 1)) (cbrt.f64 (*.f64 y y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 x) (fma.f64 z z 1)) -1) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 y) x) (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2))) (cbrt.f64 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 y) x) -1) (neg.f64 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (cbrt.f64 y)) (*.f64 (cbrt.f64 (*.f64 y y)) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (cbrt.f64 (fma.f64 z z 1))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 x) (fma.f64 z z 1)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (/.f64 1 y) x) (cbrt.f64 (fma.f64 z z 1))) (cbrt.f64 (fma.f64 z z 1))) (cbrt.f64 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (/.f64 1 y) x) (cbrt.f64 (fma.f64 z z 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z z 1))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z z 1))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (neg.f64 x) (fma.f64 (*.f64 y z) z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 x (fma.f64 (*.f64 y z) z y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 1 y) x) (cbrt.f64 (fma.f64 z z 1)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 x) y) (neg.f64 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 1 x) (fma.f64 z z 1))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 x) (*.f64 (neg.f64 y) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 y) x) (cbrt.f64 (fma.f64 z z 1))) (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (fma.f64 z z 1)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 y) (fma.f64 z z 1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 x (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))) (cbrt.f64 (pow.f64 x -2))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1 y) (fma.f64 z z 1)) (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 1/3)) (/.f64 1 x)) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 2)) (cbrt.f64 (/.f64 -1 x))) (cbrt.f64 (*.f64 (neg.f64 y) (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 2)) (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 1 x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 (/.f64 1 x) (cbrt.f64 y))) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 z z 1)) (cbrt.f64 (pow.f64 x -2))) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) 1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) 1) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (/.f64 1 y) x) (cbrt.f64 (fma.f64 z z 1))) 1) (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1 x) (fma.f64 z z 1)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 z z 1))) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2))) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 (/.f64 1 y) (fma.f64 z z 1))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 x)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 2))) (cbrt.f64 (*.f64 (neg.f64 y) (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 x)) (cbrt.f64 (/.f64 (pow.f64 x -2) (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))) (cbrt.f64 (*.f64 (neg.f64 y) (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 2))) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (cbrt.f64 (/.f64 (pow.f64 x -2) (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1 x) (cbrt.f64 y)) (/.f64 1 (fma.f64 z z 1))) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 y) (fma.f64 z z 1)) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 y) (fma.f64 z z 1)) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 y) (fma.f64 z z 1)) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 x) (fma.f64 z z 1)) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (*.f64 x (fma.f64 (*.f64 y z) z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 y) x) (+.f64 1 (pow.f64 z 6))) (/.f64 1 (-.f64 (pow.f64 z 4) (fma.f64 z z -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (*.f64 y (cbrt.f64 (fma.f64 z z 1)))) (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (*.f64 (fma.f64 z z 1) (cbrt.f64 y))) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) -1) (*.f64 (neg.f64 y) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 x) (cbrt.f64 (fma.f64 (*.f64 y z) z y))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (/.f64 1 y) x) (cbrt.f64 (fma.f64 z z 1))) 1) (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) 1) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x (fma.f64 (*.f64 y z) z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (neg.f64 x) (fma.f64 (*.f64 y z) z y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (neg.f64 (*.f64 (neg.f64 x) (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1 (*.f64 x (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (*.f64 x (fma.f64 (*.f64 y z) z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 x) (/.f64 (/.f64 1 y) (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 1 y) (fma.f64 z z 1)) (/.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 y (*.f64 y (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 z z)) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 y (*.f64 -1 (neg.f64 (*.f64 y (*.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 y z) z y) 0) (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y z) z y) (*.f64 (fma.f64 (*.f64 y z) z y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 y (*.f64 (neg.f64 (*.f64 y (*.f64 z z))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 y z) z y)) (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y z) z y) (*.f64 0 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 y) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (fma.f64 z z 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z z 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 z z 1) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (fma.f64 z z 1))) (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z z 1)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 y z) z y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 y) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2)) (*.f64 y (cbrt.f64 (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (fma.f64 z z 1)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (fma.f64 z z 1) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2)) y) (cbrt.f64 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 y) (fma.f64 z z 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (+.f64 (*.f64 (*.f64 z z) (cbrt.f64 y)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (+.f64 (cbrt.f64 y) (*.f64 (*.f64 z z) (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (neg.f64 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 z z 1)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 y) (fma.f64 z z 1))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (+.f64 1 (pow.f64 z 6))) (/.f64 1 (-.f64 (pow.f64 z 4) (fma.f64 z z -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (+.f64 1 (pow.f64 z 6))) (-.f64 (pow.f64 z 4) (fma.f64 z z -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 y z) z y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (+.f64 (neg.f64 (pow.f64 z 6)) -1)) (+.f64 (fma.f64 z z (neg.f64 (pow.f64 z 4))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 (pow.f64 z 6))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 z z 1) 2)) y)) (cbrt.f64 (-.f64 (pow.f64 z 4) (fma.f64 z z -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 z 6)) -1) y) (+.f64 (fma.f64 z z (neg.f64 (pow.f64 z 4))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (+.f64 1 (pow.f64 z 6))) 1) (-.f64 (pow.f64 z 4) (fma.f64 z z -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (+.f64 1 (pow.f64 z 6))) (cbrt.f64 (-.f64 (pow.f64 z 4) (fma.f64 z z -1)))) (pow.f64 (cbrt.f64 (-.f64 (pow.f64 z 4) (fma.f64 z z -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (+.f64 1 (pow.f64 z 6))) 1) (-.f64 (pow.f64 z 4) (fma.f64 z z -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (fma.f64 z z 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y (+.f64 1 (pow.f64 z 6)))) (+.f64 (fma.f64 z z (neg.f64 (pow.f64 z 4))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 y z) z y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 y) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (cbrt.f64 (*.f64 y y)) (*.f64 y (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 y) (*.f64 y (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 y) (*.f64 y (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) -1 (*.f64 y (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y z) z y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 z z)) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 z z) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 y z) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 (pow.f64 z 4)) y) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 (*.f64 z z))) (cbrt.f64 (pow.f64 z 4)) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z z) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z z) y y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y (*.f64 z z))) (cbrt.f64 (pow.f64 (*.f64 y (*.f64 z z)) 2)) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y 1 (*.f64 y (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 y (*.f64 y (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 y (*.f64 z z)) y)))))"]],"rules":[["egg-rr",64],["egg-rr",121]],"time":32.483154296875,"type":"rewrite"},{"count":[[245,208]],"inputs":[["(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","y","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (pow.f64 z 2))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (pow.f64 z 2))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(/.f64 (-.f64 1 (*.f64 z z)) (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (/.f64 (-.f64 1 (*.f64 z z)) (*.f64 y x)) (/.f64 (pow.f64 z 4) (*.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(+.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 z 6)) 1) (*.f64 y x)) (/.f64 (+.f64 (pow.f64 z 4) (neg.f64 (*.f64 z z))) (*.f64 y x)))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z))) (/.f64 -1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)) (/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z)))) (/.f64 -1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)) (/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z)))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 8) x)) (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 4) x))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z))) (/.f64 -1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)) (/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z)))) (/.f64 -1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)) (/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z)))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 8) x)) (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 4) x))))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","y","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (pow.f64 z 2))","(*.f64 (*.f64 y z) z)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (pow.f64 z 2))","(*.f64 (*.f64 y z) z)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)"]],"time":175.828857421875,"type":"simplify"},{"compiler":[[3493,1882]],"time":37.5,"type":"eval"},{"alts":[["(/.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (neg.f64 x))","fresh",4.49203523318137],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 (*.f64 y z) z y)) (cbrt.f64 (/.f64 1 x)))","fresh",24.64044618433929],["(/.f64 (/.f64 (/.f64 1 y) (fma.f64 z z 1)) x)","fresh",6.831628695262647],["(pow.f64 (*.f64 x (fma.f64 (*.f64 y z) z y)) -1)","fresh",4.744315400748485],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","next",4.4747889929498115],["(/.f64 (*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 1 x)) y)","fresh",7.012546855027128],["(/.f64 (/.f64 1 x) (fma.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 y) (*.f64 y (*.f64 z z))))","fresh",17.449526746453675]],"compiler":[[14,9],[19,13],[13,9],[13,8],[13,8],[15,11],[19,12],[14,9],[19,13],[13,9],[13,8],[13,8],[15,11],[19,12]],"count":[[210,7]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[208,7],"picked":[1,0]}],"min-error":[3.3582557064789964],"time":68.551025390625,"type":"prune"},{"compiler":[[29,11]],"locations":[["(fma.f64 (*.f64 y z) z y)",0.0546875,true],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))",4.4708827429498115,true]],"time":5.946044921875,"type":"localize"},{"count":[[2,60]],"series":[["(fma.f64 (*.f64 y z) z y)","z","-inf",0.30419921875],["(fma.f64 (*.f64 y z) z y)","z","inf",0.31494140625],["(fma.f64 (*.f64 y z) z y)","z","0",0.2451171875],["(fma.f64 (*.f64 y z) z y)","y","-inf",0.1650390625],["(fma.f64 (*.f64 y z) z y)","y","inf",0.162841796875],["(fma.f64 (*.f64 y z) z y)","y","0",0.14697265625],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","z","-inf",0.330810546875],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","z","inf",0.656982421875],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","z","0",0.281005859375],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","y","-inf",0.921142578125],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","y","inf",1.548095703125],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","y","0",0.704833984375],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","x","-inf",0.330078125],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","x","inf",0.406005859375],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","x","0",0.89697265625]],"time":7.611083984375,"type":"series"},{"count":[[2,125]],"inputs":[["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","(fma.f64 (*.f64 y z) z y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 0) (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) (*.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) (*.f64 0 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (fma.f64 (*.f64 y z) z y)) (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 x) (fma.f64 (*.f64 y z) z y))) (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 x (fma.f64 (*.f64 y z) z y))) (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) (/.f64 0 (*.f64 x (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (fma.f64 (*.f64 y z) z y))) (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 2/3) (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/3) (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) (/.f64 (/.f64 1 x) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 (*.f64 y z) z y)) (pow.f64 x -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)) (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) (*.f64 x (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x -1/3) -1) (*.f64 (pow.f64 x 2/3) (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (*.f64 (pow.f64 x 2/3) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 x -1/3)) (*.f64 (neg.f64 (fma.f64 (*.f64 y z) z y)) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) 1) (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) -1) (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 x) (neg.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (pow.f64 x -1/3)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) (/.f64 1 x)) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (pow.f64 x -2))) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 2/3) (pow.f64 x -1/3)) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 2/3) (neg.f64 (pow.f64 x -1/3))) (cbrt.f64 (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x -1/3) (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 2/3)) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x -1/3)) (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 2/3)) (cbrt.f64 (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x -1/3) (/.f64 1 (fma.f64 (*.f64 y z) z y))) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) 1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) 1) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) -1) (neg.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 x) (cbrt.f64 (fma.f64 (*.f64 y z) z y))) (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 (neg.f64 x))) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) -1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) 1) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (pow.f64 x 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3)) (*.f64 (neg.f64 x) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x -1/3) (*.f64 (pow.f64 x 2/3) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x -1/3) (*.f64 (fma.f64 (*.f64 y z) z y) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y)))) (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 x (fma.f64 (*.f64 y z) z y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (neg.f64 x) (fma.f64 (*.f64 y z) z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (*.f64 (neg.f64 x) (fma.f64 (*.f64 y z) z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 x (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 (fma.f64 (*.f64 y z) z y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 x (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (neg.f64 x) (fma.f64 (*.f64 y z) z y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x (fma.f64 (*.f64 y z) z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (*.f64 x (fma.f64 (*.f64 y z) z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (neg.f64 x) (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (neg.f64 (fma.f64 (*.f64 y z) z y)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (neg.f64 (*.f64 (neg.f64 x) (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 x) (/.f64 1 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y z) z) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 y (*.f64 (*.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (neg.f64 (*.f64 (*.f64 y z) z))) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 y z) z y) 0) (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y z) z y) (*.f64 (fma.f64 (*.f64 y z) z y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 (*.f64 y z) z)) -1) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 y z) z y)) (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y z) z y) (*.f64 0 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (+.f64 (*.f64 z z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (+.f64 1 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 (*.f64 y z) z y))) (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 y z) z y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 y z) z y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 y z) z y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y z) z y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (pow.f64 y 2/3) (*.f64 (*.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y 2/3) (cbrt.f64 y) (*.f64 (*.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 z z) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y z)) (*.f64 (pow.f64 (*.f64 y z) 2/3) z) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 y z) (cbrt.f64 z)) (pow.f64 z 2/3) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 y z) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 y z) z)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 y z) z) 2)) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 y) (*.f64 (*.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 y (*.f64 (*.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y 1 (*.f64 (*.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 y z) z) 1 y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 y z) z) y)))))"]],"rules":[["egg-rr",38],["egg-rr",87]],"time":30.79296875,"type":"rewrite"},{"count":[[185,150]],"inputs":[["(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","y","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (pow.f64 z 2))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (pow.f64 z 2))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(/.f64 (-.f64 1 (*.f64 z z)) (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (/.f64 (-.f64 1 (*.f64 z z)) (*.f64 y x)) (/.f64 (pow.f64 z 4) (*.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(+.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 z 6)) 1) (*.f64 y x)) (/.f64 (+.f64 (pow.f64 z 4) (neg.f64 (*.f64 z z))) (*.f64 y x)))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z))) (/.f64 -1 (*.f64 (*.f64 y (pow.f64 z 4)) x)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)) (/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z)))) (/.f64 -1 (*.f64 (*.f64 y (pow.f64 z 4)) x)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)) (/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z)))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 8) x)) (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 4) x))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z))) (/.f64 -1 (*.f64 (*.f64 y (pow.f64 z 4)) x)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)) (/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z)))) (/.f64 -1 (*.f64 (*.f64 y (pow.f64 z 4)) x)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)) (/.f64 1 (*.f64 (*.f64 y x) (*.f64 z z)))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 8) x)) (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 4) x))))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(fma.f64 y (*.f64 z z) y)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(fma.f64 y (*.f64 z z) y)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(fma.f64 y (*.f64 z z) y)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(fma.f64 y (*.f64 z z) y)","y","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (pow.f64 z 2))","(*.f64 (*.f64 y z) z)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (pow.f64 z 2))","(*.f64 (*.f64 y z) z)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)"]],"time":178.6318359375,"type":"simplify"},{"compiler":[[2398,1019]],"time":21.52001953125,"type":"eval"},{"alts":[["(*.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 (*.f64 y z) z y)) (cbrt.f64 (/.f64 1 x)))","fresh",24.64044618433929],["(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) 3)","fresh",4.7278141394764415],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","done",4.4747889929498115],["(pow.f64 (*.f64 x (fma.f64 (*.f64 y z) z y)) -1)","fresh",4.744315400748485],["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","next",4.49203523318137],["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","fresh",4.518421512486695],["(/.f64 (*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 1 x)) y)","fresh",7.012546855027128]],"compiler":[[19,13],[16,11],[13,8],[13,8],[13,8],[15,10],[15,11],[19,13],[16,11],[13,8],[13,8],[15,10],[15,11]],"count":[[157,7]],"kept":[{"done":[0,0],"fresh":[6,2],"new":[150,4],"picked":[1,1]}],"min-error":[3.3582557064789964],"time":44.85107421875,"type":"prune"},{"compiler":[[34,11]],"locations":[["(fma.f64 (*.f64 y z) z y)",0.0546875,false],["(/.f64 1 (fma.f64 (*.f64 y z) z y))",0.4127018553841443,true],["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)",4.336252033778658,true]],"time":5.958984375,"type":"localize"},{"count":[[2,60]],"series":[["(/.f64 1 (fma.f64 (*.f64 y z) z y))","z","-inf",0.214111328125],["(/.f64 1 (fma.f64 (*.f64 y z) z y))","z","inf",0.2861328125],["(/.f64 1 (fma.f64 (*.f64 y z) z y))","z","0",0.51904296875],["(/.f64 1 (fma.f64 (*.f64 y z) z y))","y","-inf",0.39794921875],["(/.f64 1 (fma.f64 (*.f64 y z) z y))","y","inf",0.27490234375],["(/.f64 1 (fma.f64 (*.f64 y z) z y))","y","0",0.40087890625],["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","x","-inf",0.1640625],["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","x","inf",0.18115234375],["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","x","0",0.157958984375],["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","z","-inf",0.22509765625],["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","z","inf",0.27197265625],["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","z","0",0.2080078125],["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","y","-inf",0.47705078125],["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","y","inf",0.174072265625],["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","y","0",0.212158203125]],"time":4.381103515625,"type":"series"},{"count":[[2,125]],"inputs":[["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","(/.f64 1 (fma.f64 (*.f64 y z) z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 0) (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) (*.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) (*.f64 0 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 x) (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x))) (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (fma.f64 (*.f64 y z) z y) x)) (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) (/.f64 0 (*.f64 (fma.f64 (*.f64 y z) z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 x)) (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 2/3) (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/3) (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2)) x) (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (pow.f64 x 2/3)) (pow.f64 x -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) (pow.f64 (cbrt.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) (cbrt.f64 (pow.f64 x 2/3))) (pow.f64 (cbrt.f64 (pow.f64 x 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) -1) (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x -1/3) (*.f64 (fma.f64 (*.f64 y z) z y) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3)) (*.f64 (neg.f64 x) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (*.f64 (pow.f64 x 2/3) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x -1/3) 1) (*.f64 (pow.f64 x 2/3) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x -1/3) -1) (*.f64 (pow.f64 x 2/3) (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 x) (neg.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3)) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x -1/3) (/.f64 1 (fma.f64 (*.f64 y z) z y))) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2))) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 2/3) (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 2/3) (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3)) (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 2/3)) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) (/.f64 1 x)) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 x) 1) (neg.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) 1) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (pow.f64 x 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2)) x)) (cbrt.f64 (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2)) x) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (cbrt.f64 (fma.f64 (*.f64 y z) z y))) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) -1) (neg.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 x) (cbrt.f64 (fma.f64 (*.f64 y z) z y))) (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 x) (cbrt.f64 (neg.f64 (fma.f64 (*.f64 y z) z y)))) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 x) -1) (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) 1) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 x -1/3)) (*.f64 (neg.f64 (fma.f64 (*.f64 y z) z y)) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) (*.f64 x (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x))) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (neg.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (fma.f64 (*.f64 y z) z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (neg.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (neg.f64 (fma.f64 (*.f64 y z) z y)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (neg.f64 x) (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (neg.f64 (neg.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 x) (/.f64 -1 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) 0) (/.f64 1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (*.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 1 (fma.f64 (*.f64 y z) z y))) (/.f64 1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (*.f64 0 (/.f64 1 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2)) (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3)) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2))) (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3)) -1) (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2)) -1) (cbrt.f64 (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2)) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2)))) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2))) (cbrt.f64 (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3)) (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (neg.f64 (fma.f64 (*.f64 y z) z y))) (neg.f64 (fma.f64 (*.f64 y z) z y))) (*.f64 (neg.f64 (fma.f64 (*.f64 y z) z y)) (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (fma.f64 (*.f64 y z) z y)) (fma.f64 (*.f64 y z) z y)) (*.f64 (neg.f64 (fma.f64 (*.f64 y z) z y)) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 y z) z y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -3))))))"]],"rules":[["egg-rr",38],["egg-rr",87]],"time":31.3779296875,"type":"rewrite"},{"count":[[185,162]],"inputs":[["(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) y)) (/.f64 (pow.f64 z 4) y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) y)) (/.f64 (pow.f64 z 4) y))))","(/.f64 1 (*.f64 y (pow.f64 z 2)))","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 2))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 8)))))","(/.f64 1 (*.f64 y (pow.f64 z 2)))","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 2))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 8)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(/.f64 (-.f64 1 (*.f64 z z)) (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (/.f64 (-.f64 1 (*.f64 z z)) (*.f64 y x)) (/.f64 (pow.f64 z 4) (*.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(+.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 z 6)) 1) (*.f64 y x)) (/.f64 (+.f64 (neg.f64 (*.f64 z z)) (pow.f64 z 4)) (*.f64 y x)))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z)) (/.f64 -1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (+.f64 (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z)) (/.f64 -1 (*.f64 y (*.f64 (pow.f64 z 4) x)))) (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)) (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 8) x)) (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 4) x))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z)) (/.f64 -1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (+.f64 (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z)) (/.f64 -1 (*.f64 y (*.f64 (pow.f64 z 4) x)))) (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)) (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 8) x)) (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 4) x))))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 1 y) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 1 y) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 1 y) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 1 y) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 1 y) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 1 y) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 1 y) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 1 y) (fma.f64 z z 1))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 (/.f64 1 y) (fma.f64 z z 1))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 (/.f64 1 y) (fma.f64 z z 1))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 (/.f64 1 y) (fma.f64 z z 1))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 (/.f64 1 y) (fma.f64 z z 1))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))","(/.f64 (-.f64 1 (*.f64 z z)) y)","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) y)) (/.f64 (pow.f64 z 4) y)))","(+.f64 (/.f64 (-.f64 1 (*.f64 z z)) y) (/.f64 (pow.f64 z 4) y))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) y)) (/.f64 (pow.f64 z 4) y))))","(+.f64 (/.f64 (+.f64 1 (neg.f64 (pow.f64 z 6))) y) (/.f64 (+.f64 (pow.f64 z 4) (neg.f64 (*.f64 z z))) y))","(/.f64 1 (*.f64 y (pow.f64 z 2)))","(/.f64 (/.f64 1 (*.f64 z z)) y)","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 2))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(+.f64 (/.f64 (/.f64 1 (*.f64 z z)) y) (/.f64 -1 (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(+.f64 (+.f64 (/.f64 (/.f64 1 (*.f64 z z)) y) (/.f64 -1 (*.f64 y (pow.f64 z 4)))) (/.f64 (/.f64 1 y) (pow.f64 z 6)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 8)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 (/.f64 1 (*.f64 z z)) y)) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (/.f64 (/.f64 1 y) (pow.f64 z 8))))","(/.f64 1 (*.f64 y (pow.f64 z 2)))","(/.f64 (/.f64 1 (*.f64 z z)) y)","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 2))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(+.f64 (/.f64 (/.f64 1 (*.f64 z z)) y) (/.f64 -1 (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(+.f64 (+.f64 (/.f64 (/.f64 1 (*.f64 z z)) y) (/.f64 -1 (*.f64 y (pow.f64 z 4)))) (/.f64 (/.f64 1 y) (pow.f64 z 6)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 8)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 (/.f64 1 (*.f64 z z)) y)) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (/.f64 (/.f64 1 y) (pow.f64 z 8))))"]],"time":191.696044921875,"type":"simplify"},{"compiler":[[3336,1450]],"time":30.56982421875,"type":"eval"},{"alts":[["(pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -1)","fresh",4.744315400748485],["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","done",4.49203523318137],["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","next",4.518421512486695],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","done",4.4747889929498115],["(/.f64 (*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 1 x)) y)","fresh",7.012546855027128],["(/.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2)) x) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))","fresh",18.115279780809388]],"compiler":[[13,8],[13,8],[15,10],[13,8],[15,11],[22,11],[13,8],[15,10],[15,11],[22,11]],"count":[[213,6]],"kept":[{"done":[1,1],"fresh":[5,2],"new":[206,2],"picked":[1,1]}],"min-error":[3.3582557064789964],"time":66.505126953125,"type":"prune"},{"compiler":[[39,15]],"locations":[["(fma.f64 (*.f64 y z) z y)",0.0546875,false],["(/.f64 -1 (fma.f64 (*.f64 y z) z y))",0.4127018553841443,true],["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))",4.365880793549719,true]],"time":7.51611328125,"type":"localize"},{"count":[[2,60]],"series":[["(/.f64 -1 (fma.f64 (*.f64 y z) z y))","z","-inf",0.22900390625],["(/.f64 -1 (fma.f64 (*.f64 y z) z y))","z","inf",0.25390625],["(/.f64 -1 (fma.f64 (*.f64 y z) z y))","z","0",0.281005859375],["(/.f64 -1 (fma.f64 (*.f64 y z) z y))","y","-inf",0.4208984375],["(/.f64 -1 (fma.f64 (*.f64 y z) z y))","y","inf",0.281982421875],["(/.f64 -1 (fma.f64 (*.f64 y z) z y))","y","0",0.40185546875],["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","x","-inf",0.1669921875],["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","x","inf",0.16796875],["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","x","0",0.176025390625],["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","z","-inf",0.2080078125],["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","z","inf",0.222900390625],["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","z","0",0.18603515625],["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","y","-inf",0.19384765625],["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","y","inf",0.174072265625],["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","y","0",0.2138671875]],"time":3.78076171875,"type":"series"},{"count":[[2,117]],"inputs":[["(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","(/.f64 -1 (fma.f64 (*.f64 y z) z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) (*.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 0) (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) (*.f64 0 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) (/.f64 0 (*.f64 (fma.f64 (*.f64 y z) z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (fma.f64 (*.f64 y z) z y) x)) (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 x))) (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -2)) (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 x)) (/.f64 (pow.f64 (cbrt.f64 x) -2) (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))) (/.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 (*.f64 y z) z y)) (pow.f64 (cbrt.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2) (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) -2) (neg.f64 (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (/.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2)) x) (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) (neg.f64 (pow.f64 (cbrt.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 x) -2)) (/.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 (*.f64 y z) z y)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 x) (neg.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 (*.f64 y z) z y)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (fma.f64 (*.f64 y z) z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -2)) (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -2)) (cbrt.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -2)) (pow.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 1/3))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) -1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (pow.f64 (cbrt.f64 x) -2) (neg.f64 (fma.f64 (*.f64 y z) z y)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (cbrt.f64 x) -2) (neg.f64 (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -2))) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 1/3)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -2))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 1 (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2)) x)) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2)) x) (cbrt.f64 (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 (*.f64 y z) z y)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) 1) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (neg.f64 (pow.f64 (cbrt.f64 x) -2))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 1/3)) (/.f64 1 x)) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2))) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 x) (cbrt.f64 (fma.f64 (*.f64 y z) z y))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 (*.f64 y z) z y)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y))) 1) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (*.f64 (fma.f64 (*.f64 y z) z y) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 1/3)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (pow.f64 x -3) (fma.f64 (*.f64 y z) z y)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 -1 x) (fma.f64 (*.f64 y z) z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) 0) (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) 0) (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (*.f64 0 (/.f64 -1 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -1 (fma.f64 (*.f64 y z) z y))) (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2) (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 1/3)) (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2)) (pow.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2))) (*.f64 (fma.f64 (*.f64 y z) z y) (pow.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 1/3)))) (*.f64 (fma.f64 (*.f64 y z) z y) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (neg.f64 (fma.f64 (*.f64 y z) z y))) (neg.f64 (fma.f64 (*.f64 y z) z y))) (*.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (fma.f64 (*.f64 y z) z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (neg.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2)) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2) (cbrt.f64 (neg.f64 (fma.f64 (*.f64 y z) z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) (neg.f64 1/3)) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (fma.f64 (*.f64 y z) z y)) (fma.f64 (*.f64 y z) z y)) (pow.f64 (fma.f64 (*.f64 y z) z y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (fma.f64 (*.f64 y z) z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 -1 (fma.f64 (*.f64 y z) z y)))))))"]],"rules":[["egg-rr",41],["egg-rr",76]],"time":27.814208984375,"type":"rewrite"},{"count":[[177,154]],"inputs":[["(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 -1 y)","(-.f64 (/.f64 (pow.f64 z 2) y) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) y)) (/.f64 (pow.f64 z 2) y)) (/.f64 1 y))","(-.f64 (+.f64 (/.f64 (pow.f64 z 6) y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) y)) (/.f64 (pow.f64 z 2) y))) (/.f64 1 y))","(/.f64 -1 (*.f64 y (pow.f64 z 2)))","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 2))))","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 8)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))))","(/.f64 -1 (*.f64 y (pow.f64 z 2)))","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 2))))","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 8)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(/.f64 (-.f64 1 (*.f64 z z)) (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (/.f64 (-.f64 1 (*.f64 z z)) (*.f64 y x)) (/.f64 (pow.f64 z 4) (*.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(+.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 z 6)) 1) (*.f64 y x)) (/.f64 (+.f64 (neg.f64 (*.f64 z z)) (pow.f64 z 4)) (*.f64 y x)))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z)) (/.f64 (/.f64 -1 y) (*.f64 (pow.f64 z 4) x)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (+.f64 (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z)) (/.f64 (/.f64 -1 y) (*.f64 (pow.f64 z 4) x))) (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)) (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 8) x)) (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 4) x))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z)) (/.f64 (/.f64 -1 y) (*.f64 (pow.f64 z 4) x)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (+.f64 (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z)) (/.f64 (/.f64 -1 y) (*.f64 (pow.f64 z 4) x))) (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 6) x)) (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 z z))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 8) x)) (/.f64 (/.f64 1 y) (*.f64 (pow.f64 z 4) x))))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 (/.f64 1 y) (*.f64 (fma.f64 z z 1) x))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 -1 y) (fma.f64 z z 1))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 -1 y) (fma.f64 z z 1))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 -1 y) (fma.f64 z z 1))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 -1 y) (fma.f64 z z 1))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 -1 y) (fma.f64 z z 1))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 -1 y) (fma.f64 z z 1))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 -1 y) (fma.f64 z z 1))","(/.f64 -1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 (/.f64 -1 y) (fma.f64 z z 1))","(/.f64 1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 (/.f64 -1 y) (fma.f64 z z 1))","(/.f64 1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 (/.f64 -1 y) (fma.f64 z z 1))","(/.f64 1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 (/.f64 -1 y) (fma.f64 z z 1))","(/.f64 1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 (/.f64 -1 y) (fma.f64 z z 1))","(/.f64 -1 y)","(-.f64 (/.f64 (pow.f64 z 2) y) (/.f64 1 y))","(/.f64 (fma.f64 z z -1) y)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) y)) (/.f64 (pow.f64 z 2) y)) (/.f64 1 y))","(/.f64 (+.f64 (neg.f64 (pow.f64 z 4)) (fma.f64 z z -1)) y)","(-.f64 (+.f64 (/.f64 (pow.f64 z 6) y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) y)) (/.f64 (pow.f64 z 2) y))) (/.f64 1 y))","(+.f64 (/.f64 (pow.f64 z 6) y) (/.f64 (+.f64 (neg.f64 (pow.f64 z 4)) (fma.f64 z z -1)) y))","(/.f64 -1 (*.f64 y (pow.f64 z 2)))","(/.f64 (/.f64 -1 (*.f64 z z)) y)","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 2))))","(+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (/.f64 (/.f64 -1 (*.f64 z z)) y))","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))))","(-.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 (/.f64 (/.f64 1 y) z) z)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 8)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (/.f64 (/.f64 1 y) (pow.f64 z 8))) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 (/.f64 (/.f64 1 y) z) z)))","(/.f64 -1 (*.f64 y (pow.f64 z 2)))","(/.f64 (/.f64 -1 (*.f64 z z)) y)","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 2))))","(+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (/.f64 (/.f64 -1 (*.f64 z z)) y))","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))))","(-.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 (/.f64 (/.f64 1 y) z) z)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 8)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (/.f64 (/.f64 1 y) (pow.f64 z 8))) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 (/.f64 (/.f64 1 y) z) z)))"]],"time":193.177001953125,"type":"simplify"},{"compiler":[[3526,1638]],"time":31.52294921875,"type":"eval"},{"alts":[["(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","done",4.49203523318137],["(*.f64 (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))) (/.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2)) x))","fresh",4.700840457855536],["(*.f64 (-.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 (/.f64 (/.f64 1 y) z) z))) (/.f64 -1 x))","fresh",31.97621143930434],["(pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -1)","fresh",4.744315400748485],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))) 3) (/.f64 -1 x))","fresh",4.7278905066977455],["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","done",4.4747889929498115],["(/.f64 (*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 1 x)) y)","fresh",7.012546855027128]],"compiler":[[13,8],[25,14],[30,22],[13,8],[18,13],[13,8],[15,11]],"count":[[204,7]],"kept":[{"done":[2,2],"fresh":[3,2],"new":[198,3],"picked":[1,0]}],"min-error":[3.241535007078904],"time":61.157958984375,"type":"prune"},{"accuracy":[4.474788992949811],"baseline":[4.4747889929498115],"branch":[["x",4.4747889929498115,1],["y",4.4747889929498115,1],["z",4.474788992949811,1],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))",4.4747889929498115,1],["(/.f64 1 x)",4.4747889929498115,1],["(*.f64 y (+.f64 1 (*.f64 z z)))",4.4747889929498115,1],["(+.f64 1 (*.f64 z z))",4.4747889929498115,1],["(*.f64 z z)",4.4747889929498115,1],["(*.f64 z z)",4.4747889929498115,1]],"compiler":[[4,3],[4,3],[4,3],[14,10],[6,5],[10,7],[8,6],[6,4],[6,4],[247,118]],"count":[[18,1]],"inputs":[["(*.f64 (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))) (/.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y z) z y)) -2)) x))","(*.f64 (-.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 (/.f64 (/.f64 1 y) z) z))) (/.f64 -1 x))","(*.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y))) 3) (/.f64 -1 x))","(pow.f64 (*.f64 (fma.f64 (*.f64 y z) z y) x) -1)","(/.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 y z) z y) -2)) x) (cbrt.f64 (fma.f64 (*.f64 y z) z y)))","(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))) 3)","(pow.f64 (*.f64 x (fma.f64 (*.f64 y z) z y)) -1)","(/.f64 (/.f64 1 (fma.f64 (*.f64 y z) z y)) x)","(*.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (/.f64 -1 x))","(/.f64 (/.f64 -1 (fma.f64 (*.f64 y z) z y)) (neg.f64 x))","(*.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 (*.f64 y z) z y)) (cbrt.f64 (/.f64 1 x)))","(/.f64 (/.f64 (/.f64 1 y) (fma.f64 z z 1)) x)","(pow.f64 (*.f64 x (fma.f64 (*.f64 y z) z y)) -1)","(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))","(/.f64 (*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 1 x)) y)","(/.f64 (/.f64 1 x) (fma.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 y) (*.f64 y (*.f64 z z))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))"]],"link":["."],"name":["Statistics.Distribution.CauchyLorentz:$cdensity from math-functions-0.1.5.2"],"oracle":[42.852775492358354],"outputs":[["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))"]],"time":50.612060546875,"times":[["x",6.131103515625],["y",6.049072265625],["z",5.9599609375],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))",4.463134765625],["(/.f64 1 x)",6.098876953125],["(*.f64 y (+.f64 1 (*.f64 z z)))",4.50390625],["(+.f64 1 (*.f64 z z))",4.2119140625],["(*.f64 z z)",4.248046875],["(*.f64 z z)",4.533935546875]],"type":"regimes"},{"compiler":[[13,8]],"inputs":[["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (/.f64 1 x) (fma.f64 (*.f64 y z) z y))"]],"stop":[["fuel",1]],"time":22.0478515625,"type":"simplify"},{"time":0.004150390625,"type":"soundness"},{"compiler":[[13,8]],"remove-preprocessing":[[]],"time":8.219970703125,"type":"end"}]