[{"compiler":[[23,20]],"method":["search"],"sampling":[[12,0.19609742076136172,0.054634107276797295,0.749268471961841],[11,0.18146328488364816,0.09170725150033832,0.7268294636160135],[10,0.17560963053256273,0.10146334208548069,0.7229270273819566],[9,0.14829257689416409,0.16390232183039188,0.687805101275444],[8,0.1404877044260502,0.17170719429850578,0.687805101275444],[7,0.09365846961736679,0.2809754088521004,0.6253661215305328],[6,0.062438979744911194,0.31219489872455597,0.6253661215305328],[5,0.0,0.49951183795928955,0.5004881620407104],[4,0.0,0.49951183795928955,0.5004881620407104],[3,0.0,0.49951183795928955,0.5004881620407104],[2,0.0,0.49951183795928955,0.5004881620407104],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":26.947998046875,"type":"analyze"},{"outcomes":[["body",256,"invalid",67.788818359375,1186],["body",256,"valid",482.01513671875,8256]],"time":558.4560546875,"type":"sample"},{"compiler":[[22,19]],"inputs":[["0","1"],["(*.f64 (-.f64 a (/.f64 1 3)) (+.f64 1 (*.f64 (/.f64 1 (sqrt.f64 (*.f64 9 (-.f64 a (/.f64 1 3))))) rand)))","(*.f64 (-.f64 rand (/.f64 1 3)) (+.f64 1 (*.f64 (/.f64 1 (sqrt.f64 (*.f64 9 (-.f64 rand (/.f64 1 3))))) a)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (-.f64 a (/.f64 1 3)) (+.f64 1 (*.f64 (/.f64 1 (sqrt.f64 (*.f64 9 (-.f64 a (/.f64 1 3))))) rand)))","(*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (*.f64 9 (+.f64 a -1/3))))))","(*.f64 (-.f64 rand (/.f64 1 3)) (+.f64 1 (*.f64 (/.f64 1 (sqrt.f64 (*.f64 9 (-.f64 rand (/.f64 1 3))))) a)))","(*.f64 (+.f64 rand -1/3) (+.f64 1 (/.f64 a (sqrt.f64 (*.f64 9 (+.f64 rand -1/3))))))"]],"symmetry":[[]],"time":68.026123046875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (-.f64 a (/.f64 1 3)) (+.f64 1 (*.f64 (/.f64 1 (sqrt.f64 (*.f64 9 (-.f64 a (/.f64 1 3))))) rand)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 a (/.f64 1 3)) (+.f64 1 (*.f64 (/.f64 1 (sqrt.f64 (*.f64 9 (-.f64 a (/.f64 1 3))))) rand)))","(*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))"]],"time":23.712890625,"type":"simplify"},{"compiler":[[35,29]],"time":0.5849609375,"type":"eval"},{"alts":[["(*.f64 (-.f64 a (/.f64 1 3)) (+.f64 1 (*.f64 (/.f64 1 (sqrt.f64 (*.f64 9 (-.f64 a (/.f64 1 3))))) rand)))","fresh",0.11556625976844201],["(*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))","next",0.09375]],"compiler":[[22,19],[15,12],[22,19],[15,12]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.07421875],"time":1.68408203125,"type":"prune"},{"compiler":[[49,37]],"locations":[["(fma.f64 a 9 -3)",0.05078125,true],["(*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))",0.08984375,true],["(/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))",0.2109375,true],["(sqrt.f64 (fma.f64 a 9 -3))",0.3671719272133847,true]],"time":12.70703125,"type":"localize"},{"count":[[4,38]],"series":[["(fma.f64 a 9 -3)","a","-inf",0.27490234375],["(fma.f64 a 9 -3)","a","inf",0.8388671875],["(fma.f64 a 9 -3)","a","0",0.194091796875],["(*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))","rand","-inf",0.31787109375],["(*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))","rand","inf",0.27197265625],["(*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))","rand","0",0.32421875],["(*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))","a","-inf",0.440185546875],["(*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))","a","inf",0.4189453125],["(*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))","a","0",0.529052734375],["(/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))","a","-inf",0.6669921875],["(/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))","a","inf",0.926025390625],["(/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))","a","0",0.596923828125],["(/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))","rand","-inf",0.30712890625],["(/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))","rand","inf",0.38916015625],["(/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))","rand","0",0.98095703125],["(sqrt.f64 (fma.f64 a 9 -3))","a","-inf",0.382080078125],["(sqrt.f64 (fma.f64 a 9 -3))","a","inf",0.509033203125],["(sqrt.f64 (fma.f64 a 9 -3))","a","0",0.505859375]],"time":9.1650390625,"type":"series"},{"count":[[4,312]],"inputs":[["(sqrt.f64 (fma.f64 a 9 -3))","(/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))","(*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))","(fma.f64 a 9 -3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) 0) (sqrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 a 9 -3)) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) 1/2) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 a 9 -3))) (sqrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 a 9 -3)) (*.f64 0 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 a 9 -3))) (*.f64 1/2 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 a 9 -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (neg.f64 (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (fabs.f64 (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 a 9 -3))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 a 9 -3)) 0) (sqrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 a 9 -3)) (pow.f64 (sqrt.f64 (fma.f64 a 9 -3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a 9 -3)) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 a 9 -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (fma.f64 a 9 -3)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a 9 -3) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a 9 -3) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 a 9 -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a 9 -3) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a 9 -3) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a 9 -3) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a 9 -3) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 a 9 -3)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 a 9 -3)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 a 9 -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 a 9 -3) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 0) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) (*.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 1/2) (*.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) (*.f64 0 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (*.f64 1/2 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (neg.f64 rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (neg.f64 rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 rand (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (pow.f64 (fma.f64 a 9 -3) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (cbrt.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 rand) (/.f64 (cbrt.f64 (*.f64 rand rand)) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 rand) (neg.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (cbrt.f64 (*.f64 rand rand)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 rand (pow.f64 (fma.f64 a 9 -3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) rand)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) (/.f64 rand (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4)) (/.f64 rand (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (neg.f64 rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 rand (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 rand (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (pow.f64 (fma.f64 a 9 -3) 1/8)) (pow.f64 (fma.f64 a 9 -3) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 rand (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 rand (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 rand) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 rand (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 rand (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (cbrt.f64 (neg.f64 rand))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (cbrt.f64 rand)) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4)) rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) rand) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (*.f64 rand rand))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (*.f64 rand rand))) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 rand (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 rand (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 rand (cbrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 rand)) (cbrt.f64 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3)))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 rand) (cbrt.f64 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3)))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 rand) (/.f64 (cbrt.f64 (*.f64 rand rand)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 rand) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (neg.f64 (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 rand (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 rand (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (cbrt.f64 (fma.f64 a 9 -3)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 a 9 -3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 rand (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 rand (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 rand -1) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 rand (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (neg.f64 (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (neg.f64 rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) -1/3) (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) a) (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 a (/.f64 (*.f64 a rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a (/.f64 (*.f64 a rand) (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a -1/3) (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1/3 (+.f64 a (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (+.f64 -1/3 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 -1/3 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 a -1/3) (/.f64 (*.f64 a rand) (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 a -1/3) (/.f64 (*.f64 rand a) (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (*.f64 rand -1/3) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 a -1/3) (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (*.f64 a rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 a -1/3) (/.f64 (*.f64 rand -1/3) (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (*.f64 rand a) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 (/.f64 (*.f64 a rand) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 rand -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 (/.f64 (*.f64 rand a) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 a rand) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 rand a) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 (/.f64 (*.f64 rand -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (+.f64 a (/.f64 (*.f64 a rand) (sqrt.f64 (fma.f64 a 9 -3))))) (*.f64 1 (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) -1/3)) (*.f64 1 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))))) (*.f64 1 (+.f64 a (/.f64 (*.f64 a rand) (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) a)) (*.f64 1 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) 0) (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) (*.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) 1/2) (*.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (*.f64 (+.f64 -1/3 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a (/.f64 (*.f64 a rand) (sqrt.f64 (fma.f64 a 9 -3)))) 1) (*.f64 (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1/3 (*.f64 (+.f64 a (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) -1/3) 1) (*.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))) 1) (*.f64 (+.f64 a (/.f64 (*.f64 a rand) (sqrt.f64 (fma.f64 a 9 -3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) a) 1) (*.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) -1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) (*.f64 0 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) (*.f64 1/2 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) 2)) (+.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (+.f64 a -1/3))) (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 a -1/3)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (+.f64 (/.f64 (*.f64 rand (cbrt.f64 (+.f64 a -1/3))) (sqrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (+.f64 a -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (+.f64 (cbrt.f64 (+.f64 a -1/3)) (/.f64 (*.f64 rand (cbrt.f64 (+.f64 a -1/3))) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) 2)) (cbrt.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 a -1/3) (cbrt.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)) (+.f64 a -1/3)) (/.f64 1 (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3))) (/.f64 1 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)) (+.f64 (pow.f64 a 3) -1/27)) (/.f64 1 (*.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 (pow.f64 a 3) -1/27)) (/.f64 1 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)) (+.f64 (pow.f64 a 3) -1/27)) (*.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)) (+.f64 (pow.f64 a 3) -1/27))) (*.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3))) 1) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)) (+.f64 (pow.f64 a 3) -1/27)) 1) (*.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 (pow.f64 a 3) -1/27)) (cbrt.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (pow.f64 (cbrt.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)) (+.f64 a -1/3)) (cbrt.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) (pow.f64 (cbrt.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1/27 (pow.f64 (+.f64 a (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))) 3)) (+.f64 1/9 (-.f64 (*.f64 (+.f64 a (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 a (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))))) (*.f64 -1/3 (+.f64 a (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (neg.f64 rand) (+.f64 (pow.f64 a 3) -1/27)) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (neg.f64 (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (neg.f64 rand) (+.f64 (pow.f64 a 3) -1/27)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (+.f64 (pow.f64 a 3) -1/27))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (neg.f64 rand)) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (*.f64 (neg.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3)))) (neg.f64 (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (neg.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3)))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (neg.f64 rand)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (neg.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 (pow.f64 a 3) -1/27))) (*.f64 (neg.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 a -1/3) rand) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (neg.f64 (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 rand (+.f64 (pow.f64 a 3) -1/27)) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (*.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (neg.f64 (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 rand (+.f64 (pow.f64 a 3) -1/27)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (+.f64 (pow.f64 a 3) -1/27))) (*.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 (+.f64 a -1/3) rand)) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) (neg.f64 (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) rand) (sqrt.f64 (fma.f64 a 9 -3))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (neg.f64 (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) rand) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (*.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))) (neg.f64 (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) rand) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 (pow.f64 a 3) -1/27))) (*.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) rand) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (+.f64 (pow.f64 a 3) -1/27))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 (+.f64 a -1/3) rand)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 (pow.f64 a 3) -1/27))) (neg.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 a -1/3) rand) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 (pow.f64 a 3) -1/27))) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (neg.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (+.f64 (pow.f64 a 3) -1/27) (neg.f64 rand)))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (neg.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (neg.f64 (*.f64 (+.f64 a -1/3) rand)))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 rand (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3)))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (+.f64 (pow.f64 a 3) -1/27) rand))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (sqrt.f64 (fma.f64 a 9 -3))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (+.f64 a -1/3) rand))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (neg.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (neg.f64 rand) (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (neg.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (/.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) rand) (sqrt.f64 (fma.f64 a 9 -3))))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (neg.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (*.f64 (+.f64 (pow.f64 a 3) -1/27) (neg.f64 rand)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (neg.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (neg.f64 (*.f64 (+.f64 a -1/3) rand)))) (neg.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (*.f64 rand (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (*.f64 (+.f64 (pow.f64 a 3) -1/27) rand))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (sqrt.f64 (fma.f64 a 9 -3))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (*.f64 (+.f64 a -1/3) rand))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (neg.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (*.f64 (neg.f64 rand) (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (neg.f64 (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (/.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) rand) (sqrt.f64 (fma.f64 a 9 -3))))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)))) (neg.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)) (+.f64 (pow.f64 a 3) -1/27))) (neg.f64 (*.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)) (+.f64 a -1/3)) (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 (pow.f64 a 3) -1/27)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)) (+.f64 a -1/3))) (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 (pow.f64 a 3) -1/27))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (neg.f64 (+.f64 (pow.f64 a 3) -1/27))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 a -1/3) (+.f64 -1 (neg.f64 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)))) (+.f64 (-.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) 2)) (+.f64 a -1/3))) (cbrt.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 a 3) -1/27)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) (cbrt.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3))) (+.f64 a -1/3)) (+.f64 (-.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)) (+.f64 a -1/3)) 1) (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 (pow.f64 a 3) -1/27)) 1) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 (pow.f64 a 3) -1/27)) 1) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)) (+.f64 a -1/3)) 1) (-.f64 (+.f64 1 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) 3)) (+.f64 a -1/3))) (+.f64 (-.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 (pow.f64 a 3) -1/27))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 a -1/3)) (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 a -1/3) (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 a -1/3) 1 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/3 1 (+.f64 a (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 -1/3 (+.f64 a (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/9) (cbrt.f64 -1/3) (+.f64 a (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -1/3) (cbrt.f64 1/9) (+.f64 a (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 1/3 (+.f64 a (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (+.f64 a -1/3)) -1 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 a -1/3)) (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 a 3) -1/27) (/.f64 1 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (cbrt.f64 (+.f64 a -1/3)) (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a 1 (+.f64 -1/3 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 a) (+.f64 -1/3 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 a) (+.f64 -1/3 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 a (+.f64 -1/3 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 a a)) (+.f64 -1/3 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) a (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) -1/3 (*.f64 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 a -1/3) rand) (pow.f64 (fma.f64 a 9 -3) -1/2) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (*.f64 (cbrt.f64 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (+.f64 a -1/3)) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))) 2)) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 a -1/3) (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 rand (cbrt.f64 (+.f64 a -1/3))) (sqrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 a -1/3) (cbrt.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))) (cbrt.f64 (/.f64 (*.f64 rand rand) (fma.f64 a 9 -3))) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 a -1/3)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) rand) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/3 (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 a (/.f64 (*.f64 a rand) (sqrt.f64 (fma.f64 a 9 -3)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a 9) -3)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -3 (*.f64 a 9))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 a 9 -3) 0) (fma.f64 a 9 -3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 a 9 -3) (*.f64 (fma.f64 a 9 -3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 a 9 -3) 1/2) (*.f64 (fma.f64 a 9 -3) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 a 9 -3)) (fma.f64 a 9 -3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 a 9 -3) (*.f64 0 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 a 9 -3)) (*.f64 1/2 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) (pow.f64 (fma.f64 a 9 -3) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 a 9 -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a 9 -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 a 9 -3)) (sqrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 a 9 -3) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) (sqrt.f64 (pow.f64 (fma.f64 a 9 -3) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) -1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 a 9) 3) -27) (/.f64 1 (+.f64 (*.f64 (*.f64 a a) 81) (*.f64 -3 (-.f64 -3 (*.f64 a 9))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a 9 -3) 0) (fma.f64 a 9 -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a 9 -3) (pow.f64 (fma.f64 a 9 -3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) 2)) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a 9 -3)) (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (+.f64 (*.f64 a 3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (+.f64 -1 (*.f64 a 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 a 9 -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 a 9) 3) -27) (+.f64 9 (-.f64 (*.f64 (*.f64 a a) 81) (*.f64 -3 (*.f64 a 9)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 a 9) 3) -27) (+.f64 (*.f64 (*.f64 a a) 81) (*.f64 -3 (-.f64 -3 (*.f64 a 9)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 a 9) 3) -27)) (neg.f64 (+.f64 (*.f64 (*.f64 a a) 81) (*.f64 -3 (-.f64 -3 (*.f64 a 9))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 a 9) 3) -27) 1) (+.f64 (*.f64 (*.f64 a a) 81) (*.f64 -3 (-.f64 -3 (*.f64 a 9)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 a 9 -3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a 9 -3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a 9 -3) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a 9 -3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a 9 -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a 9 -3) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a 9 -3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a 9 -3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a 9 -3) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a 9 -3) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a 9 -3) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 a 9 -3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 a 9 -3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 a 9 -3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 a 9 -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a 9 -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 -3 (*.f64 a 9))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -3 1 (*.f64 a 9))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -3) (cbrt.f64 9) (*.f64 a 9))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 9) (cbrt.f64 -3) (*.f64 a 9))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 (*.f64 a a) 729)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 9)) (cbrt.f64 81) -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a 9)) (cbrt.f64 (*.f64 (*.f64 a a) 81)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 9 a -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a 9) -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a 9) 1 -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 3 (*.f64 a 9))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a 3) 3 -3)))))"]],"rules":[["egg-rr",62],["egg-rr",147],["egg-rr",57],["egg-rr",46]],"time":55.0419921875,"type":"rewrite"},{"count":[[350,324]],"inputs":[["(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","a","a","(-.f64 a 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","-3","(-.f64 (*.f64 9 a) 3)","(-.f64 (*.f64 9 a) 3)","(-.f64 (*.f64 9 a) 3)","(*.f64 9 a)","(-.f64 (*.f64 9 a) 3)","(-.f64 (*.f64 9 a) 3)","(-.f64 (*.f64 9 a) 3)","(*.f64 9 a)","(-.f64 (*.f64 9 a) 3)","(-.f64 (*.f64 9 a) 3)","(-.f64 (*.f64 9 a) 3)"]],"method":["egg-herbie"],"outputs":[["(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","a","a","(-.f64 a 1/3)","(+.f64 a -1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","-3","(-.f64 (*.f64 9 a) 3)","(fma.f64 9 a -3)","(-.f64 (*.f64 9 a) 3)","(fma.f64 9 a -3)","(-.f64 (*.f64 9 a) 3)","(fma.f64 9 a -3)","(*.f64 9 a)","(-.f64 (*.f64 9 a) 3)","(fma.f64 9 a -3)","(-.f64 (*.f64 9 a) 3)","(fma.f64 9 a -3)","(-.f64 (*.f64 9 a) 3)","(fma.f64 9 a -3)","(*.f64 9 a)","(-.f64 (*.f64 9 a) 3)","(fma.f64 9 a -3)","(-.f64 (*.f64 9 a) 3)","(fma.f64 9 a -3)","(-.f64 (*.f64 9 a) 3)","(fma.f64 9 a -3)"]],"time":147.786865234375,"type":"simplify"},{"compiler":[[7885,6151]],"time":104.964111328125,"type":"eval"},{"alts":[["(*.f64 (+.f64 a -1/3) (+.f64 1 (*.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) rand)))","fresh",0.12337875976844201],["(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))","fresh",0.09212875976844201],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) 3)","fresh",0.7189791016639131],["(fma.f64 a (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))","next",0.0859375]],"compiler":[[16,13],[16,12],[18,15],[24,19],[16,13],[16,12],[18,15],[24,19]],"count":[[326,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[324,4],"picked":[1,0]}],"min-error":[0],"time":157.430908203125,"type":"prune"},{"compiler":[[78,60]],"locations":[["(/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))",0.2109375,false],["(/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))",0.28125,true],["(*.f64 -1/3 rand)",0.33203125,true],["(sqrt.f64 (fma.f64 a 9 -3))",0.3671719272133847,false]],"time":20.251953125,"type":"localize"},{"count":[[2,12]],"series":[["(/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))","a","-inf",0.412109375],["(/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))","a","inf",0.44287109375],["(/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))","a","0",0.3701171875],["(/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))","rand","-inf",0.302001953125],["(/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))","rand","inf",0.26904296875],["(/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))","rand","0",0.35693359375],["(*.f64 -1/3 rand)","rand","-inf",0.927978515625],["(*.f64 -1/3 rand)","rand","inf",0.322998046875],["(*.f64 -1/3 rand)","rand","0",0.318115234375]],"time":3.839111328125,"type":"series"},{"count":[[2,122]],"inputs":[["(*.f64 -1/3 rand)","(/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/3 rand) 1/2) (*.f64 (*.f64 -1/3 rand) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/3 rand) 0) (*.f64 -1/3 rand))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 rand) (*.f64 (*.f64 -1/3 rand) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 -1/3 rand)) (*.f64 1/2 (*.f64 -1/3 rand)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 -1/3 rand)) (*.f64 -1/3 rand))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 rand) (*.f64 0 (*.f64 -1/3 rand)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 1/3 rand))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -1/3 rand)) (cbrt.f64 (*.f64 1/9 (*.f64 rand rand))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/9 (*.f64 rand rand))) (cbrt.f64 (*.f64 -1/3 rand)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -1/27 rand)) (cbrt.f64 (*.f64 rand rand)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 rand (cbrt.f64 -1/3)) (cbrt.f64 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 rand) (cbrt.f64 (*.f64 (*.f64 rand rand) -1/27)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -1/3) (*.f64 (cbrt.f64 1/9) rand))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 rand)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 rand -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -1/3 rand))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/3 rand) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 1/3 rand))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 rand rand)) (cbrt.f64 (*.f64 -1/27 rand)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/3 rand) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/9) (*.f64 rand (cbrt.f64 -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 rand rand) -1/27)) (cbrt.f64 rand))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/9) rand) (cbrt.f64 -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 rand) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/3 rand)) (neg.f64 (cbrt.f64 (*.f64 1/9 (*.f64 rand rand)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (neg.f64 rand))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/3 rand) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/3 rand) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/3 rand) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/3 rand) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 rand (/.f64 1 -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -1/3 rand)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -1/3 rand) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -1/3 rand) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -1/3 rand)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -1/3 rand)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1/3 rand))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -1/3 rand) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) 1/2) (*.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) 0) (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) (*.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))) (*.f64 1/2 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) (*.f64 0 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (*.f64 1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 rand (/.f64 -1/3 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (/.f64 (*.f64 1/9 (*.f64 rand rand)) (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 1/9 (*.f64 rand rand)) (fma.f64 a 9 -3))) (cbrt.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/3 rand) (neg.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/3 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 rand (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/3 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 rand (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 -1/3 rand)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (cbrt.f64 (*.f64 1/9 (*.f64 rand rand))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -1/3 rand)) (/.f64 (cbrt.f64 (*.f64 1/9 (*.f64 rand rand))) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 rand (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 -1/3 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 rand (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (/.f64 -1/27 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/3 rand) (pow.f64 (fma.f64 a 9 -3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) (*.f64 -1/3 rand))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4)) (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) (/.f64 (*.f64 -1/3 rand) (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 1/9 (*.f64 rand rand))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (cbrt.f64 (*.f64 -1/3 rand)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 1/9 (*.f64 rand rand))) (sqrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (*.f64 -1/3 rand)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1/27 (fma.f64 a 9 -3))) (/.f64 rand (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/3 (sqrt.f64 (fma.f64 a 9 -3))) rand)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/3 rand) (cbrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 rand (cbrt.f64 (fma.f64 a 9 -3))) (/.f64 -1/3 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) (*.f64 1/3 rand))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/3 rand) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (pow.f64 (fma.f64 a 9 -3) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 rand (/.f64 (sqrt.f64 (fma.f64 a 9 -3)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (pow.f64 (fma.f64 a 9 -3) 1/8)) (pow.f64 (fma.f64 a 9 -3) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/3 rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 rand) (/.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 rand) (neg.f64 (/.f64 (sqrt.f64 (fma.f64 a 9 -3)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/3 rand) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/3 rand) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 1/9 (*.f64 rand rand)) (fma.f64 a 9 -3))) (cbrt.f64 (*.f64 1/3 rand))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 1/9 (*.f64 rand rand)) (fma.f64 a 9 -3))) (cbrt.f64 (*.f64 -1/3 rand))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 rand (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) -1/3) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 rand (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) -1/3) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4)) (*.f64 -1/3 rand)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1/3 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) rand) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (*.f64 1/9 (*.f64 rand rand)))) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) (*.f64 -1/3 rand)) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 -1/3 rand)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (*.f64 1/9 (*.f64 rand rand)))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1/3 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 rand (cbrt.f64 (/.f64 -1/27 (fma.f64 a 9 -3)))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/3 (/.f64 rand (cbrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -1/3 rand)) (/.f64 (cbrt.f64 (*.f64 1/9 (*.f64 rand rand))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 1/3 rand)) (cbrt.f64 (/.f64 (*.f64 1/9 (*.f64 rand rand)) (fma.f64 a 9 -3)))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -1/3 rand)) (cbrt.f64 (/.f64 (*.f64 1/9 (*.f64 rand rand)) (fma.f64 a 9 -3)))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/3 (/.f64 rand (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -1/3 rand) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/3 rand) (cbrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 rand (/.f64 -1/3 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -1/3 rand) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -1/3 rand) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (cbrt.f64 (fma.f64 a 9 -3)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 a 9 -3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/3 rand) -1) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/3 rand) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/3 rand) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (neg.f64 (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 -1/3 rand) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (neg.f64 (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3))) 3))))))"]],"rules":[["egg-rr",84],["egg-rr",38]],"time":27.876953125,"type":"rewrite"},{"count":[[134,124]],"inputs":[["(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 (*.f64 -1/3 rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 (*.f64 -1/3 rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 (*.f64 -1/3 rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 (*.f64 -1/3 rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 (*.f64 -1/3 rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 (*.f64 -1/3 rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 (*.f64 -1/3 rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 (*.f64 -1/3 rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 (*.f64 -1/3 rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 (*.f64 -1/3 rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 (*.f64 -1/3 rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(*.f64 -1/3 (*.f64 rand (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3)))))","(*.f64 (*.f64 -1/3 rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))"]],"time":50.89599609375,"type":"simplify"},{"compiler":[[7863,6209]],"time":106.220947265625,"type":"eval"},{"alts":[["(fma.f64 a (+.f64 1 (*.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) rand)) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))","fresh",0.11166000976844201],["(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))","next",0.09212875976844201],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) 3)","fresh",0.7189791016639131],["(fma.f64 a (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))","done",0.0859375]],"compiler":[[25,20],[16,12],[18,15],[24,19],[25,20],[16,12],[18,15]],"count":[[279,4]],"kept":[{"done":[0,0],"fresh":[3,2],"new":[275,1],"picked":[1,1]}],"min-error":[0],"time":139.41796875,"type":"prune"},{"compiler":[[42,31]],"locations":[["(fma.f64 a 9 -3)",0.05078125,false],["(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))",0.0859375,true],["(/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))",0.30078125,true],["(sqrt.f64 (fma.f64 a 9 -3))",0.3671719272133847,false]],"time":10.88720703125,"type":"localize"},{"count":[[2,14]],"series":[["(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))","a","-inf",0.39697265625],["(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))","a","inf",0.35888671875],["(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))","a","0",0.4560546875],["(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))","rand","-inf",0.324951171875],["(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))","rand","inf",0.258056640625],["(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))","rand","0",0.39599609375],["(/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))","a","-inf",0.59912109375],["(/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))","a","inf",0.54296875],["(/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))","a","0",0.69287109375]],"time":4.169921875,"type":"series"},{"count":[[2,148]],"inputs":[["(/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))","(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) -1/3) (*.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) a) (*.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (*.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) 1/2) (*.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) 0) (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 (pow.f64 (fma.f64 a 9 -3) -1/2)) (*.f64 a (pow.f64 (fma.f64 a 9 -3) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (pow.f64 (fma.f64 a 9 -3) -1/2)) (*.f64 -1/3 (pow.f64 (fma.f64 a 9 -3) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (*.f64 0 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))) (*.f64 1/2 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 1/3 a) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (-.f64 1/3 a) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 1/3 a) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 a -1/3) 2) (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 a -1/3) 2) (fma.f64 a 9 -3))) (cbrt.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1/3 a) (neg.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 a -1/3)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 a -1/3)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 a -1/3) (pow.f64 (fma.f64 a 9 -3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) (/.f64 (+.f64 a -1/3) (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4)) (/.f64 (+.f64 a -1/3) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) (-.f64 1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (sqrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (+.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 a -1/3) (cbrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1/3 a) (sqrt.f64 (fma.f64 a 9 -3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (/.f64 (cbrt.f64 (+.f64 a -1/3)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 a -1/3) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (pow.f64 (fma.f64 a 9 -3) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 a 3) -1/27) (/.f64 1 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 a 3) -1/27) (sqrt.f64 (fma.f64 a 9 -3))) (/.f64 1 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (pow.f64 (fma.f64 a 9 -3) 1/8)) (pow.f64 (fma.f64 a 9 -3) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1/3 a) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (pow.f64 a 3) -1/27) (sqrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (pow.f64 (cbrt.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) 1) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) -1) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) 1) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) -1) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4)) (neg.f64 (+.f64 (pow.f64 a 3) -1/27))) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4)) (+.f64 (pow.f64 a 3) -1/27)) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) (neg.f64 (+.f64 (pow.f64 a 3) -1/27))) (*.f64 (cbrt.f64 (fma.f64 a 9 -3)) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) (+.f64 (pow.f64 a 3) -1/27)) (*.f64 (cbrt.f64 (fma.f64 a 9 -3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (+.f64 (pow.f64 a 3) -1/27))) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (neg.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1/3 a) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 a 3) -1/27) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 a -1/3) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 a 3) -1/27) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) (neg.f64 (+.f64 (pow.f64 a 3) -1/27))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 a -1/3) 2) (fma.f64 a 9 -3))) (cbrt.f64 (+.f64 a -1/3))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 a -1/3) 2) (fma.f64 a 9 -3))) (cbrt.f64 (-.f64 1/3 a))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 a 9 -3) (neg.f64 1/4)) (+.f64 a -1/3)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 a -1/3)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2))) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) (+.f64 a -1/3)) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (neg.f64 (pow.f64 (fma.f64 a 9 -3) -1/2))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (pow.f64 (fma.f64 a 9 -3) -1/2)) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 a -1/3)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 a -1/3) (cbrt.f64 (fma.f64 a 9 -3))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 a 3) -1/27)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 a -1/3)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 a -1/3) 2) (fma.f64 a 9 -3)))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1/3 a)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 a -1/3) 2) (fma.f64 a 9 -3)))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 a -1/3) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (pow.f64 a 3) -1/27) (sqrt.f64 (fma.f64 a 9 -3))) 1) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 a -1/3) -1) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 a -1/3) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1/3 a) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (neg.f64 (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (pow.f64 a 3) -1/27) (sqrt.f64 (fma.f64 a 9 -3))) 1) (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 a -1/3) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) 1) (cbrt.f64 (fma.f64 a 9 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 a -1/3) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (cbrt.f64 (fma.f64 a 9 -3)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 a 9 -3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 a 3) -1/27) (/.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 a 3) -1/27) (*.f64 (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 a -1/3) (cbrt.f64 (sqrt.f64 (fma.f64 a 9 -3))))) (neg.f64 (cbrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (pow.f64 a 3) -1/27) (sqrt.f64 (fma.f64 a 9 -3)))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 1/3 a) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 1/3 a) (sqrt.f64 (fma.f64 a 9 -3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) rand a) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) (*.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) 1/2) (*.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) 0) (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) rand a) 1) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) (*.f64 0 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))) (*.f64 1/2 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))) (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 rand (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a -1/3) (/.f64 (*.f64 rand (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) rand -1/3) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (fma.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) rand -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1/3 (fma.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) rand a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) rand -1/3) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))) (cbrt.f64 (pow.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) 2)) (cbrt.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) rand a) 3) -1/27) (+.f64 (*.f64 (fma.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) rand a) (fma.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) rand a)) (-.f64 1/9 (*.f64 (fma.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) rand a) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 rand (+.f64 a -1/3)) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (neg.f64 (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 rand (+.f64 a -1/3)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (sqrt.f64 (fma.f64 a 9 -3)) (+.f64 (pow.f64 a 3) -1/27))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 rand (-.f64 1/3 a)) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) (neg.f64 (+.f64 (pow.f64 a 3) -1/27)))) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 rand (-.f64 1/3 a)) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 (pow.f64 a 3) -1/27))) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 rand (-.f64 1/3 a)))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/27)) (sqrt.f64 (fma.f64 a 9 -3))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (*.f64 rand (+.f64 a -1/3)))) (*.f64 (neg.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (*.f64 rand (-.f64 1/3 a)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (neg.f64 (sqrt.f64 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 a 3) -1/27) (sqrt.f64 (fma.f64 a 9 -3))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (*.f64 rand (+.f64 a -1/3)))) (*.f64 (+.f64 1/9 (*.f64 a (+.f64 a 1/3))) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (-.f64 1/3 a) (/.f64 (*.f64 rand (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (cbrt.f64 (+.f64 a -1/3)) (/.f64 (*.f64 rand (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 a 3) -1/27) (/.f64 1 (+.f64 1/9 (*.f64 a (+.f64 a 1/3)))) (/.f64 (*.f64 rand (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 a -1/3)) (cbrt.f64 (pow.f64 (+.f64 a -1/3) 2)) (/.f64 (*.f64 rand (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 rand (cbrt.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 a -1/3) 2) (fma.f64 a 9 -3))) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 rand) (/.f64 (*.f64 (cbrt.f64 (*.f64 rand rand)) (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 rand (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 rand (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3))) 2)) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) rand (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 rand (+.f64 a -1/3)) (pow.f64 (fma.f64 a 9 -3) -1/2) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 a -1/3) (/.f64 (*.f64 rand (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 a -1/3) 1 (/.f64 (*.f64 rand (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 rand (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 rand (+.f64 a -1/3)) (sqrt.f64 (fma.f64 a 9 -3))) 1 (+.f64 a -1/3))))))"]],"rules":[["egg-rr",51],["egg-rr",97]],"time":35.304931640625,"type":"rewrite"},{"count":[[162,155]],"inputs":[["(-.f64 a 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","a","a"]],"method":["egg-herbie"],"outputs":[["(-.f64 a 1/3)","(+.f64 a -1/3)","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))","(*.f64 (*.f64 (+.f64 a -1/3) rand) (sqrt.f64 (/.f64 1 (fma.f64 9 a -3))))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","(-.f64 (+.f64 a (*.f64 (*.f64 (-.f64 a 1/3) rand) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 9 a) 3))))) 1/3)","(*.f64 (+.f64 a -1/3) (+.f64 (*.f64 rand (sqrt.f64 (/.f64 1 (fma.f64 9 a -3)))) 1))","a","a"]],"time":67.30615234375,"type":"simplify"},{"compiler":[[5855,4509]],"time":82.751953125,"type":"eval"},{"alts":[["(fma.f64 a (+.f64 1 (*.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) rand)) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))","next",0.11166000976844201],["(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))","done",0.09212875976844201],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) 3)","fresh",0.7189791016639131],["(fma.f64 a (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))","done",0.0859375]],"compiler":[[25,20],[16,12],[18,15],[24,19],[25,20],[18,15]],"count":[[270,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[266,0],"picked":[1,1]}],"min-error":[0],"time":107.724853515625,"type":"prune"},{"compiler":[[88,69]],"locations":[["(/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))",0.28125,false],["(*.f64 -1/3 rand)",0.33203125,false],["(sqrt.f64 (fma.f64 a 9 -3))",0.3671719272133847,false],["(pow.f64 (fma.f64 a 9 -3) -1/2)",0.37106523131253805,true]],"time":32.195068359375,"type":"localize"},{"count":[[1,8]],"series":[["(pow.f64 (fma.f64 a 9 -3) -1/2)","a","-inf",0.509033203125],["(pow.f64 (fma.f64 a 9 -3) -1/2)","a","inf",0.52685546875],["(pow.f64 (fma.f64 a 9 -3) -1/2)","a","0",0.51611328125]],"time":1.6220703125,"type":"series"},{"count":[[1,19]],"inputs":[["(pow.f64 (fma.f64 a 9 -3) -1/2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (fma.f64 a 9 -3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) (cbrt.f64 (/.f64 1 (fma.f64 a 9 -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (fma.f64 a 9 -3))) (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 a 9 -3) -1/2))) (neg.f64 (cbrt.f64 (/.f64 1 (fma.f64 a 9 -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 a 9 -3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a 9 -3) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (fma.f64 a 9 -3) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) 3))))))"]],"rules":[["egg-rr",19]],"time":34.37890625,"type":"rewrite"},{"count":[[27,35]],"inputs":[["(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) a)) (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) a)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) (pow.f64 a 2)))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) a)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) (+.f64 (*.f64 5/432 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) (pow.f64 a 3))) (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) (pow.f64 a 2))))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a))))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) a)))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) a)) (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (pow.f64 a 2)))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) a)) (+.f64 (*.f64 5/432 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (pow.f64 a 3))) (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (pow.f64 a 2))))))"]],"method":["egg-herbie"],"outputs":[["(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9))))","(pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 a) (log.f64 9)))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) a)) (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))))","(fma.f64 1/6 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 a) (log.f64 9))) a) (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 a) (log.f64 9))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) a)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) (pow.f64 a 2)))))","(fma.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 a) (log.f64 9))) a) 1/6 (fma.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 a) (log.f64 9))) (*.f64 a a)) 1/24 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 a) (log.f64 9)))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) a)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) (+.f64 (*.f64 5/432 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) (pow.f64 a 3))) (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 9)))) (pow.f64 a 2))))))","(+.f64 (fma.f64 1/6 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 a) (log.f64 9))) a) (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 a) (log.f64 9)))) (fma.f64 5/432 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 a) (log.f64 9))) (pow.f64 a 3)) (/.f64 (*.f64 1/24 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 a) (log.f64 9)))) (*.f64 a a))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a))))))","(pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -9) (neg.f64 (log.f64 (neg.f64 a)))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) a)))","(fma.f64 1/6 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -9) (neg.f64 (log.f64 (neg.f64 a))))) a) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -9) (neg.f64 (log.f64 (neg.f64 a))))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) a)) (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (pow.f64 a 2)))))","(+.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -9) (neg.f64 (log.f64 (neg.f64 a))))) (fma.f64 1/6 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -9) (neg.f64 (log.f64 (neg.f64 a))))) a) (/.f64 (*.f64 1/24 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -9) (neg.f64 (log.f64 (neg.f64 a)))))) (*.f64 a a))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) a)) (+.f64 (*.f64 5/432 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (pow.f64 a 3))) (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -9) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (pow.f64 a 2))))))","(+.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -9) (neg.f64 (log.f64 (neg.f64 a))))) (fma.f64 1/6 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -9) (neg.f64 (log.f64 (neg.f64 a))))) a) (fma.f64 5/432 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -9) (neg.f64 (log.f64 (neg.f64 a))))) (pow.f64 a 3)) (/.f64 (*.f64 1/24 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -9) (neg.f64 (log.f64 (neg.f64 a)))))) (*.f64 a a)))))"]],"time":36.43603515625,"type":"simplify"},{"compiler":[[6313,5039]],"time":86.234130859375,"type":"eval"},{"alts":[["(fma.f64 a (+.f64 1 (*.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) rand)) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))","done",0.11166000976844201],["(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))","done",0.09212875976844201],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) 3)","fresh",0.7189791016639131],["(fma.f64 a (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))","done",0.0859375]],"compiler":[[25,20],[16,12],[18,15],[24,19]],"count":[[209,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[205,0],"picked":[1,1]}],"min-error":[0],"time":74.31787109375,"type":"prune"},{"accuracy":[0.0859375],"baseline":[0.0859375],"branch":[["a",0.0859375,1],["rand",0.0859375,1],["(*.f64 (-.f64 a (/.f64 1 3)) (+.f64 1 (*.f64 (/.f64 1 (sqrt.f64 (*.f64 9 (-.f64 a (/.f64 1 3))))) rand)))",0.0859375,1],["(-.f64 a (/.f64 1 3))",0.0859375,1]],"compiler":[[3,2],[3,2],[22,19],[7,6],[124,98]],"count":[[7,1]],"inputs":[["(fma.f64 a (+.f64 1 (*.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) rand)) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))","(*.f64 (+.f64 a -1/3) (+.f64 1 (*.f64 (pow.f64 (fma.f64 a 9 -3) -1/2) rand)))","(fma.f64 rand (/.f64 (+.f64 a -1/3) (sqrt.f64 (fma.f64 a 9 -3))) (+.f64 a -1/3))","(pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))) 3)","(fma.f64 a (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))","(*.f64 (+.f64 a -1/3) (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))))","(*.f64 (-.f64 a (/.f64 1 3)) (+.f64 1 (*.f64 (/.f64 1 (sqrt.f64 (*.f64 9 (-.f64 a (/.f64 1 3))))) rand)))"]],"link":["."],"name":["Octave 3.8, oct_fill_randg"],"oracle":[0.8133928712007971],"outputs":[["(fma.f64 a (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))"]],"time":17.342041015625,"times":[["a",3.532958984375],["rand",3.609130859375],["(*.f64 (-.f64 a (/.f64 1 3)) (+.f64 1 (*.f64 (/.f64 1 (sqrt.f64 (*.f64 9 (-.f64 a (/.f64 1 3))))) rand)))",3.89208984375],["(-.f64 a (/.f64 1 3))",3.6611328125]],"type":"regimes"},{"compiler":[[24,19]],"inputs":[["(fma.f64 a (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 a (+.f64 1 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3)))) (+.f64 -1/3 (/.f64 (*.f64 -1/3 rand) (sqrt.f64 (fma.f64 a 9 -3)))))","(+.f64 (fma.f64 (/.f64 rand (sqrt.f64 (fma.f64 a 9 -3))) a a) (fma.f64 rand (/.f64 -1/3 (sqrt.f64 (fma.f64 a 9 -3))) -1/3))"]],"stop":[["fuel",1]],"time":23.0869140625,"type":"simplify"},{"time":0.01611328125,"type":"soundness"},{"compiler":[[24,19]],"remove-preprocessing":[[]],"time":13.008056640625,"type":"end"}]