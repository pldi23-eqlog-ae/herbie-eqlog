[{"compiler":[[42,27]],"method":["search"],"sampling":[[12,0.3905406411049057,0.42857081589414747,0.1808885430009468],[11,0.3373959096686576,0.5129197933113119,0.1496842970200305],[10,0.2827884792020541,0.5831293467683736,0.13408217402957234],[9,0.18332494513788333,0.7293992498039188,0.08727580505819788],[8,0.12481698392366525,0.8113103955038241,0.06387262057251064],[7,0.062408491961832624,0.8737188874656567,0.06387262057251064],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":179.820068359375,"type":"analyze"},{"outcomes":[["body",256,"invalid",123.908935546875,1605],["body",256,"valid",671.466064453125,8256]],"time":804.953857421875,"type":"sample"},{"compiler":[[41,26]],"inputs":[["0","1","2"],["(if (>=.f64 b 0) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)) (/.f64 (*.f64 2 c) (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))))","(if (>=.f64 a 0) (/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c)))) (*.f64 2 b)) (/.f64 (*.f64 2 c) (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c))))))","(if (>=.f64 b 0) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a)))) (*.f64 2 c)) (/.f64 (*.f64 2 a) (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a))))))","(if (>=.f64 c 0) (/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b)))) (*.f64 2 a)) (/.f64 (*.f64 2 b) (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(if (>=.f64 b 0) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)) (/.f64 (*.f64 2 c) (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))))","(if (>=.f64 b 0) (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (neg.f64 (*.f64 (*.f64 4 c) a))))) (/.f64 1/2 a)) (/.f64 (*.f64 2 c) (-.f64 (sqrt.f64 (fma.f64 b b (neg.f64 (*.f64 (*.f64 4 c) a)))) b)))","(if (>=.f64 a 0) (/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c)))) (*.f64 2 b)) (/.f64 (*.f64 2 c) (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c))))))","(if (>=.f64 a 0) (*.f64 (-.f64 (neg.f64 a) (sqrt.f64 (fma.f64 a a (neg.f64 (*.f64 (*.f64 4 b) c))))) (/.f64 1/2 b)) (/.f64 (*.f64 2 c) (-.f64 (sqrt.f64 (fma.f64 a a (neg.f64 (*.f64 (*.f64 4 b) c)))) a)))","(if (>=.f64 b 0) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a)))) (*.f64 2 c)) (/.f64 (*.f64 2 a) (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a))))))","(if (>=.f64 b 0) (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (neg.f64 (*.f64 (*.f64 4 c) a))))) (/.f64 1/2 c)) (/.f64 a (/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (neg.f64 (*.f64 (*.f64 4 c) a)))) b) 2)))","(if (>=.f64 c 0) (/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b)))) (*.f64 2 a)) (/.f64 (*.f64 2 b) (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b))))))","(if (>=.f64 c 0) (*.f64 (-.f64 (neg.f64 c) (sqrt.f64 (fma.f64 c c (neg.f64 (*.f64 (*.f64 4 a) b))))) (/.f64 1/2 a)) (/.f64 (*.f64 2 b) (-.f64 (sqrt.f64 (fma.f64 c c (neg.f64 (*.f64 (*.f64 4 a) b)))) c)))"]],"symmetry":[[]],"time":64.75,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(if (>=.f64 b 0) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)) (/.f64 (*.f64 2 c) (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))))"]],"method":["egg-herbie"],"outputs":[["(if (>=.f64 b 0) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)) (/.f64 (*.f64 2 c) (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))))","(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))"]],"time":24.697998046875,"type":"simplify"},{"compiler":[[75,46]],"time":0.826171875,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))","next",18.774779265417223]],"compiler":[[37,23],[37,23]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[18.774779265417223],"time":1.296875,"type":"prune"},{"compiler":[[150,78]],"locations":[["(fma.f64 b b (*.f64 (*.f64 a c) -4))",0.49999449521112044,true],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))",0.7246233761863194,true],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)",1.3703389498590963,true],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))",22.187300655737282,true]],"time":31.278076171875,"type":"localize"},{"count":[[4,84]],"series":[["(fma.f64 b b (*.f64 (*.f64 a c) -4))","c","-inf",0.22802734375],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","c","inf",0.73388671875],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","c","0",0.305908203125],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","a","-inf",0.23193359375],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","a","inf",0.283935546875],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","a","0",0.324951171875],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","b","-inf",0.2919921875],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","b","inf",0.27197265625],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","b","0",0.36083984375],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","c","-inf",0.301025390625],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","c","inf",0.281982421875],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","c","0",0.2119140625],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","a","-inf",0.276123046875],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","a","inf",0.48876953125],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","a","0",0.22216796875],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","b","-inf",0.31005859375],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","b","inf",0.236083984375],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","b","0",0.233154296875],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","c","-inf",0.3759765625],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","c","inf",0.442138671875],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","c","0",0.39599609375],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","a","-inf",0.27783203125],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","a","inf",0.326171875],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","a","0",0.401123046875],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","b","-inf",0.2158203125],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","b","inf",0.442138671875],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","b","0",0.27978515625],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","c","-inf",0.405029296875],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","c","inf",1.080078125],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","c","0",0.39599609375],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","a","-inf",0.42822265625],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","a","inf",0.605224609375],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","a","0",0.317138671875],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","b","-inf",0.48193359375],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","b","inf",0.490966796875],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","b","0",0.97607421875]],"time":14.462890625,"type":"series"},{"count":[[4,192]],"inputs":[["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","(fma.f64 b b (*.f64 (*.f64 a c) -4))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1/2) (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 1/2 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 0 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (fabs.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 0) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1 (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1/2) (*.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 0) (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (*.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 1/2 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (*.f64 0 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 (cbrt.f64 (neg.f64 b)) (neg.f64 (cbrt.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (-.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (+.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)) (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a c) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1/2) (*.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 0) (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 1/2 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 0 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2)) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 0) (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 c -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a c) -4) 2)) (cbrt.f64 (*.f64 (*.f64 a c) -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a c)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a c) 2)) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (*.f64 a c) -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 a c) -4)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a c) -4) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -64 (*.f64 a c))) (cbrt.f64 (pow.f64 (*.f64 a c) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c -4) a (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 c -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 a c) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (cbrt.f64 (*.f64 b b)) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 a c) -4))))))"]],"rules":[["egg-rr",63],["egg-rr",41],["egg-rr",48],["egg-rr",40]],"time":40.030029296875,"type":"rewrite"},{"count":[[276,246]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(*.f64 2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 -2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(+.f64 (fma.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (neg.f64 b)) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 -2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 -2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(+.f64 (fma.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 b))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 c c)) (pow.f64 b 3)) 2))) b) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 a a)) (pow.f64 b 3)) 2))) b) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(fma.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(+.f64 (fma.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (*.f64 2 b)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(*.f64 2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 2 (*.f64 c a)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 1/2 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (fma.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(fma.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(+.f64 (fma.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (*.f64 2 b)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(fma.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(+.f64 (fma.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (*.f64 2 b)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 -4 c) a (*.f64 b b))"]],"time":265.420166015625,"type":"simplify"},{"compiler":[[15311,8896]],"time":147.245849609375,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 (fma.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))","fresh",18.783255534954105],["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))","fresh",18.780970525185666],["(if (>=.f64 b 0) (/.f64 (*.f64 (*.f64 2 b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))","fresh",20.546932222761345],["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (neg.f64 b) b) 1/2)))","fresh",21.18766890156656],["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b) 1/2)))","fresh",18.78192975494534],["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))","next",18.775443034954105]],"compiler":[[47,29],[41,27],[29,20],[30,20],[40,27],[41,27],[47,29],[41,27],[29,20],[30,20],[40,27],[41,27]],"count":[[370,6]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[369,6],"picked":[1,0]}],"min-error":[5.541918230897355],"time":190.9580078125,"type":"prune"},{"compiler":[[205,112]],"locations":[["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))",0.7246233761863194,false],["(-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b)",1.3703389498590963,true],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))",22.187300655737282,true],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))",22.187300655737282,false]],"time":42.947021484375,"type":"localize"},{"count":[[2,37]],"series":[["(-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b)","b","-inf",0.269775390625],["(-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b)","b","inf",0.502197265625],["(-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b)","b","0",0.264892578125],["(-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b)","c","-inf",0.448974609375],["(-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b)","c","inf",0.636962890625],["(-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b)","c","0",0.512939453125],["(-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b)","a","-inf",0.35693359375],["(-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b)","a","inf",0.465087890625],["(-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b)","a","0",0.512939453125],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","b","-inf",0.324951171875],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","b","inf",0.429931640625],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","b","0",0.87109375],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","c","-inf",0.529052734375],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","c","inf",0.947021484375],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","c","0",0.45703125],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","a","-inf",0.534912109375],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","a","inf",0.8291015625],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","a","0",0.869140625]],"time":10.113037109375,"type":"series"},{"count":[[2,87]],"inputs":[["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","(-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (*.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 0) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 1/2) (*.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (*.f64 0 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (*.f64 1/2 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (fabs.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 0) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (pow.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 0) (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)) (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)) (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))) (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (+.f64 (pow.f64 b 2/3) (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)) (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 2/3) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (neg.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (pow.f64 b 2/3) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (pow.f64 b 2/3)) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 1 (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b))))))"]],"rules":[["egg-rr",48],["egg-rr",39]],"time":28.708984375,"type":"rewrite"},{"count":[[124,129]],"inputs":[["b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))) (pow.f64 b 2))) (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))))","b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -1 b)","(+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 4) (*.f64 (cbrt.f64 -4) (cbrt.f64 16))) (pow.f64 b 6))) (pow.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2))) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (cbrt.f64 -4) (cbrt.f64 16))) (pow.f64 b 6))) (pow.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2))) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))","(+.f64 (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) (*.f64 -1 b))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))) (pow.f64 b 2))) (+.f64 (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) (*.f64 -1 b)))","(*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -4 (*.f64 (pow.f64 c 4) (*.f64 (pow.f64 a 4) (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2))))) 2)) (pow.f64 b 7))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 -2 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -2 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 b)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) b) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 b)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) b) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))","(sqrt.f64 (*.f64 (*.f64 c a) -4))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))) (pow.f64 b 2))) (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (*.f64 c a) -4))) (*.f64 b b)) (sqrt.f64 (*.f64 (*.f64 c a) -4)))","b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 b)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) b) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (neg.f64 b))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (neg.f64 b)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (neg.f64 b))))","(*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))","(/.f64 (*.f64 (*.f64 c a) -4) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (/.f64 (*.f64 (*.f64 c a) -4) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) -1/8 (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 4) (*.f64 (cbrt.f64 -4) (cbrt.f64 16))) (pow.f64 b 6))) (pow.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2))) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) -1/8 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (fma.f64 -4 (/.f64 (*.f64 -4 (pow.f64 c 4)) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -1/8 (*.f64 (*.f64 c c) 16)) (pow.f64 b 3)) 2))) b) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))))","(*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))","(/.f64 (*.f64 (*.f64 c a) -4) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (/.f64 (*.f64 (*.f64 c a) -4) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) -1/8 (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (cbrt.f64 -4) (cbrt.f64 16))) (pow.f64 b 6))) (pow.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2))) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 -4 (/.f64 (*.f64 (pow.f64 a 4) -4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -1/8 (*.f64 (*.f64 a a) 16)) (pow.f64 b 3)) 2))) b) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))))","(sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))","(sqrt.f64 (*.f64 (*.f64 c a) -4))","(+.f64 (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) (*.f64 -1 b))","(-.f64 (sqrt.f64 (*.f64 (*.f64 c a) -4)) b)","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))) (pow.f64 b 2))) (+.f64 (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) (*.f64 -1 b)))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (*.f64 c a) -4))) (*.f64 b b)) (-.f64 (sqrt.f64 (*.f64 (*.f64 c a) -4)) b))","(*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))","(/.f64 (*.f64 (*.f64 c a) -4) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (/.f64 (*.f64 (*.f64 c a) -4) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) -1/8 (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -4 (*.f64 (pow.f64 c 4) (*.f64 (pow.f64 a 4) (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2))))) 2)) (pow.f64 b 7))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(fma.f64 -1/2 (/.f64 (fma.f64 -4 (*.f64 (pow.f64 (*.f64 c a) 4) -4) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 (*.f64 c a) 2) 16)) 2)) (pow.f64 b 7)) (fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) -1/8 (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))))","(*.f64 -2 b)","(+.f64 (*.f64 -2 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 -2 b))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -2 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 -2 b)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) 1/8 (fma.f64 -2 b (fma.f64 4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (*.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4))))))"]],"time":133.8701171875,"type":"simplify"},{"compiler":[[11037,6611]],"time":106.618896484375,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (*.f64 -1 b) b) 1/2)))","fresh",21.18766890156656],["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))","next",18.780970525185666],["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b) 1/2)))","fresh",18.78192975494534],["(if (>=.f64 b 0) (/.f64 (*.f64 (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))","fresh",18.78391930449099],["(if (>=.f64 b 0) (/.f64 (*.f64 (*.f64 2 b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))","fresh",20.54759599229823]],"compiler":[[31,21],[41,27],[40,27],[51,32],[33,24],[31,21],[41,27],[40,27],[51,32],[33,24]],"count":[[246,5]],"kept":[{"done":[0,0],"fresh":[5,2],"new":[240,3],"picked":[1,0]}],"min-error":[5.541918230897355],"time":89.986083984375,"type":"prune"},{"compiler":[[205,112]],"locations":[["(+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))",0.7246233761863194,true],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)",1.3703389498590963,false],["(sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))",22.187300655737282,true],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))",22.187300655737282,false]],"time":43.2509765625,"type":"localize"},{"count":[[2,37]],"series":[["(+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))","c","-inf",0.3818359375],["(+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))","c","inf",0.41015625],["(+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))","c","0",0.21484375],["(+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))","a","-inf",0.373046875],["(+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))","a","inf",0.390869140625],["(+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))","a","0",0.216064453125],["(+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))","b","-inf",0.364013671875],["(+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))","b","inf",0.24609375],["(+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))","b","0",0.27392578125],["(sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))","b","-inf",0.2138671875],["(sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))","b","inf",0.2578125],["(sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))","b","0",0.34912109375],["(sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))","c","-inf",0.352783203125],["(sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))","c","inf",0.386962890625],["(sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))","c","0",0.2919921875],["(sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))","a","-inf",0.390869140625],["(sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))","a","inf",0.38818359375],["(sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))","a","0",0.909912109375]],"time":6.71484375,"type":"series"},{"count":[[2,76]],"inputs":[["(sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))","(+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1/2) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1/2) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 0 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (-.f64 (pow.f64 b 2/3) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 2/3) (-.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (+.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2/3) (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 b 2/3) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 b 2/3) (cbrt.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1 b)))))"]],"rules":[["egg-rr",37],["egg-rr",39]],"time":27.9951171875,"type":"rewrite"},{"count":[[113,114]],"inputs":[["b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))) (pow.f64 b 2))) (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))))","b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -1 b)","(+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))","(+.f64 (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) b)","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))) (pow.f64 b 2))) (+.f64 (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) b))","(*.f64 2 b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (*.f64 (pow.f64 c 4) (*.f64 (pow.f64 a 4) (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2))))) 2)) (pow.f64 b 7))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(*.f64 2 b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(*.f64 2 b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 b)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) b) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 b)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) b) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))","(sqrt.f64 (*.f64 (*.f64 c a) -4))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))) (pow.f64 b 2))) (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (/.f64 (/.f64 1 c) -4) a)) (*.f64 b b)) (sqrt.f64 (*.f64 (*.f64 c a) -4)))","b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 b)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) b) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (neg.f64 b))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (neg.f64 b)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (neg.f64 b))))","(sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))","(sqrt.f64 (*.f64 (*.f64 c a) -4))","(+.f64 (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) b)","(+.f64 (sqrt.f64 (*.f64 (*.f64 c a) -4)) b)","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))) (pow.f64 b 2))) (+.f64 (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) b))","(+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (/.f64 (/.f64 1 c) -4) a)) (*.f64 b b)) (sqrt.f64 (*.f64 (*.f64 c a) -4))) b)","(*.f64 2 b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b))","(fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b)))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (*.f64 2 b))))","(*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))","(*.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (*.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (*.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4)))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (*.f64 (pow.f64 c 4) (*.f64 (pow.f64 a 4) (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2))))) 2)) (pow.f64 b 7))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) 1/8 (fma.f64 1/2 (/.f64 (fma.f64 -4 (*.f64 (pow.f64 (*.f64 c a) 4) -4) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 (*.f64 c a) 2) 16)) 2)) (pow.f64 b 7)) (fma.f64 4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (*.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4))))))","(*.f64 2 b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b))","(fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b)))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (*.f64 2 b))))","(*.f64 2 b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b))","(fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b)))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (*.f64 2 b))))"]],"time":125.404052734375,"type":"simplify"},{"compiler":[[10853,6603]],"time":106.06201171875,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (*.f64 -1 b) b) 1/2)))","fresh",21.18766890156656],["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))","done",18.780970525185666],["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b) 1/2)))","next",18.78192975494534],["(if (>=.f64 b 0) (/.f64 (*.f64 (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))","fresh",18.78391930449099],["(if (>=.f64 b 0) (/.f64 (*.f64 (*.f64 2 b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))","fresh",20.54759599229823]],"compiler":[[31,21],[41,27],[40,27],[51,32],[33,24],[31,21],[40,27],[51,32],[33,24]],"count":[[241,5]],"kept":[{"done":[0,0],"fresh":[4,4],"new":[236,0],"picked":[1,1]}],"min-error":[5.541918230897355],"time":88.116943359375,"type":"prune"},{"compiler":[[209,114]],"locations":[["(-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b)",7.220360331979479,true],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3))",22.187300655737282,true],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))",22.187300655737282,false],["(cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))",22.649064332162165,true]],"time":46.783935546875,"type":"localize"},{"count":[[3,44]],"series":[["(-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b)","b","-inf",0.22705078125],["(-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b)","b","inf",0.239990234375],["(-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b)","b","0",0.22900390625],["(-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b)","c","-inf",0.2490234375],["(-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b)","c","inf",0.27099609375],["(-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b)","c","0",0.257080078125],["(-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b)","a","-inf",0.2509765625],["(-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b)","a","inf",0.27392578125],["(-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b)","a","0",0.23486328125],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3))","b","-inf",0.2119140625],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3))","b","inf",0.22509765625],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3))","b","0",0.309814453125],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3))","c","-inf",0.27099609375],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3))","c","inf",0.29296875],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3))","c","0",0.199951171875],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3))","a","-inf",0.304931640625],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3))","a","inf",0.30517578125],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3))","a","0",0.22607421875],["(cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","b","-inf",0.285888671875],["(cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","b","inf",0.283935546875],["(cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","b","0",1.59814453125],["(cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","c","-inf",0.2978515625],["(cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","c","inf",0.3310546875],["(cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","c","0",1.738037109375],["(cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","a","-inf",0.345947265625],["(cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","a","inf",0.383056640625],["(cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","a","0",0.93798828125]],"time":11.171142578125,"type":"series"},{"count":[[3,119]],"inputs":[["(cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3))","(-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1/2) (*.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 1/2 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 0 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) -1) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2/3)) (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (+.f64 1/3 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2) (/.f64 1/3 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2) (*.f64 1/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1/2) (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 1/2 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 0 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (fabs.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 0) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (+.f64 (pow.f64 b 2/3) (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2/3) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (pow.f64 b 2/3)) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (pow.f64 b 2/3) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1 (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))))"]],"rules":[["egg-rr",48],["egg-rr",38],["egg-rr",33]],"time":33.1318359375,"type":"rewrite"},{"count":[[163,170]],"inputs":[["(pow.f64 (pow.f64 b 2) 1/3)","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3)))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 128/9 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3)))) (*.f64 -64/27 (*.f64 (pow.f64 c 3) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3))))))) (pow.f64 (pow.f64 b 2) 1/3))))","(pow.f64 (pow.f64 b 2) 1/3)","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3)))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 c 3) (+.f64 (*.f64 128/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 a 3) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3)))) (*.f64 -64/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3) (pow.f64 a 3))))) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3))))","(*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b 2) (pow.f64 (cbrt.f64 -4) 2)))) (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 5) (pow.f64 a 5))) 1/3) (/.f64 (pow.f64 b 4) (pow.f64 (cbrt.f64 -4) 5)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b 2) (pow.f64 (cbrt.f64 -4) 2)))) (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 5) (pow.f64 a 5))) 1/3) (/.f64 (pow.f64 b 4) (pow.f64 (cbrt.f64 -4) 5)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b 2) (pow.f64 (cbrt.f64 -4) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4)) (*.f64 5/81 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 8) (pow.f64 a 8))) 1/3) (/.f64 (pow.f64 b 6) (pow.f64 (cbrt.f64 -4) 8)))))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 b 2) 1/3)","(cbrt.f64 (*.f64 b b))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3))","(fma.f64 (*.f64 -4/3 (*.f64 c a)) (pow.f64 (pow.f64 b -4) 1/9) (cbrt.f64 (*.f64 b b)))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3)))","(fma.f64 -16/9 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 (pow.f64 b -14) 1/9)) (fma.f64 (*.f64 -4/3 (*.f64 c a)) (pow.f64 (pow.f64 b -4) 1/9) (cbrt.f64 (*.f64 b b))))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 128/9 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3)))) (*.f64 -64/27 (*.f64 (pow.f64 c 3) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3))))))) (pow.f64 (pow.f64 b 2) 1/3))))","(fma.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 (pow.f64 b -14) 1/9)) -16/9 (fma.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (pow.f64 b -4) 1/9)) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 a 3) (cbrt.f64 (pow.f64 b -4))) (*.f64 (*.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b -4))) (+.f64 -64/27 128/9))) (cbrt.f64 (*.f64 b b)))))","(pow.f64 (pow.f64 b 2) 1/3)","(cbrt.f64 (*.f64 b b))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3))","(fma.f64 (*.f64 -4/3 (*.f64 c a)) (pow.f64 (pow.f64 b -4) 1/9) (cbrt.f64 (*.f64 b b)))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3)))","(fma.f64 -16/9 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 (pow.f64 b -14) 1/9)) (fma.f64 (*.f64 -4/3 (*.f64 c a)) (pow.f64 (pow.f64 b -4) 1/9) (cbrt.f64 (*.f64 b b))))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 c 3) (+.f64 (*.f64 128/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 a 3) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3)))) (*.f64 -64/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3) (pow.f64 a 3))))) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3))))","(fma.f64 -16/9 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 (pow.f64 b -14) 1/9)) (fma.f64 -1/3 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 (*.f64 (pow.f64 a 3) (cbrt.f64 (pow.f64 b -4))) (+.f64 128/9 -64/27)) (cbrt.f64 (pow.f64 b -4)))) (fma.f64 (*.f64 -4/3 (*.f64 c a)) (pow.f64 (pow.f64 b -4) 1/9) (cbrt.f64 (*.f64 b b)))))","(*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4))","(cbrt.f64 (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b 2) (pow.f64 (cbrt.f64 -4) 2)))) (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4)))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 2))) (/.f64 (*.f64 b b) (cbrt.f64 16))) (cbrt.f64 (*.f64 -4 (*.f64 c a))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 5) (pow.f64 a 5))) 1/3) (/.f64 (pow.f64 b 4) (pow.f64 (cbrt.f64 -4) 5)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b 2) (pow.f64 (cbrt.f64 -4) 2)))) (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4))))","(fma.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 5))) (pow.f64 b 4)) (pow.f64 (cbrt.f64 -4) 5)) -1/9 (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 2))) (/.f64 (*.f64 b b) (cbrt.f64 16))) (cbrt.f64 (*.f64 -4 (*.f64 c a)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 5) (pow.f64 a 5))) 1/3) (/.f64 (pow.f64 b 4) (pow.f64 (cbrt.f64 -4) 5)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b 2) (pow.f64 (cbrt.f64 -4) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4)) (*.f64 5/81 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 8) (pow.f64 a 8))) 1/3) (/.f64 (pow.f64 b 6) (pow.f64 (cbrt.f64 -4) 8)))))))","(fma.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 5))) (pow.f64 b 4)) (pow.f64 (cbrt.f64 -4) 5)) -1/9 (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 2))) (/.f64 (*.f64 b b) (cbrt.f64 16))) (fma.f64 5/81 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 8))) (pow.f64 b 6)) (pow.f64 (cbrt.f64 -4) 8)) (cbrt.f64 (*.f64 -4 (*.f64 c a))))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(-.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(+.f64 (-.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 c c)) (pow.f64 b 3)) 2))) b) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 a a)) (pow.f64 b 3)) 2))) b) -1/2 (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(+.f64 (fma.f64 -2 b (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))"]],"time":173.942138671875,"type":"simplify"},{"compiler":[[10340,6331]],"time":102.411865234375,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))","done",18.780970525185666],["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 b b)) 3)) b) 1/2)))","fresh",27.46903895659224],["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b) 1/2)))","done",18.78192975494534],["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (pow.f64 (pow.f64 (pow.f64 b 2) 1/3) 3)) b) 1/2)))","fresh",28.222185670980572],["(if (>=.f64 b 0) (/.f64 (*.f64 (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))","fresh",18.78391930449099],["(if (>=.f64 b 0) (/.f64 (*.f64 (*.f64 2 b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))","fresh",20.54759599229823],["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (neg.f64 b) b) 1/2)))","fresh",21.18766890156656]],"compiler":[[41,27],[35,24],[40,27],[36,26],[51,32],[33,24],[30,20]],"count":[[230,7]],"kept":[{"done":[1,1],"fresh":[3,2],"new":[225,3],"picked":[1,1]}],"min-error":[5.541918230897355],"time":74.864990234375,"type":"prune"},{"accuracy":[6.408594782271893],"baseline":[18.774779265417223],"branch":[["a",13.964636831877195,5],["b",6.408594782271893,3],["c",13.007416557369238,7],["(if (>=.f64 b 0) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)) (/.f64 (*.f64 2 c) (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))))",6.889179074102205,5]],"compiler":[[4,3],[4,3],[4,3],[41,26],[483,285]],"count":[[14,3]],"inputs":[["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 b b)) 3)) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (pow.f64 (pow.f64 (pow.f64 b 2) 1/3) 3)) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (neg.f64 b) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (*.f64 -1 b) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (*.f64 2 b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (fma.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (*.f64 2 b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (neg.f64 b) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)) (/.f64 (*.f64 2 c) (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))))"]],"link":["."],"name":["jeff quadratic root 1"],"oracle":[36.923136299331816],"outputs":[["(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (neg.f64 b) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2)))","(if (>=.f64 b 0) (/.f64 (*.f64 (*.f64 2 b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))"]],"time":101.509033203125,"times":[["a",24.10888671875],["b",14.77099609375],["c",33.790771484375],["(if (>=.f64 b 0) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)) (/.f64 (*.f64 2 c) (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))))",20.662109375]],"type":"regimes"},{"bstep":[[8.078286595843084e+104,2.3624542896393726e+113,41.671875],[-3.984001307761773e+171,-1.1203042244642604e+157,19.072021484375]],"compiler":[[34,25],[38,24],[34,25],[38,24],[34,25],[38,24],[34,25],[38,24],[34,25],[38,24],[34,25],[38,24],[34,25],[38,24],[34,25],[38,24],[34,25],[38,24],[43,28],[4,3]],"method":["binary-search","binary-search"],"time":60.9951171875,"type":"bsearch"},{"compiler":[[102,65]],"inputs":[["(if (<=.f64 b -3984001307761772954712447907270849661143848123383439397144866163925769586732342150068440294668084513676405825188642854285150331007601436170949203160393084642611454055284736) (if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (neg.f64 b) b) 1/2))) (if (<=.f64 b 819999999999999969742166440076083265752619322960923682716105230941237129657576258726005830186571831181312) (if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2))) (if (>=.f64 b 0) (/.f64 (*.f64 (*.f64 2 b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b -3984001307761772954712447907270849661143848123383439397144866163925769586732342150068440294668084513676405825188642854285150331007601436170949203160393084642611454055284736) (if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (neg.f64 b) b) 1/2))) (if (<=.f64 b 819999999999999969742166440076083265752619322960923682716105230941237129657576258726005830186571831181312) (if (>=.f64 b 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) 1/2))) (if (>=.f64 b 0) (/.f64 (*.f64 (*.f64 2 b) -1/2) a) (/.f64 c (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) 1/2)))))","(if (<=.f64 b -3984001307761772954712447907270849661143848123383439397144866163925769586732342150068440294668084513676405825188642854285150331007601436170949203160393084642611454055284736) (if (>=.f64 b 0) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) (neg.f64 (/.f64 c b))) (if (<=.f64 b 819999999999999969742166440076083265752619322960923682716105230941237129657576258726005830186571831181312) (if (>=.f64 b 0) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c)))) (/.f64 -1/2 a)) (/.f64 (*.f64 c 2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b))) (if (>=.f64 b 0) (neg.f64 (/.f64 b a)) (/.f64 (*.f64 c 2) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 a) c))) b)))))"]],"stop":[["fuel",1]],"time":32.119873046875,"type":"simplify"},{"time":0.028076171875,"type":"soundness"},{"compiler":[[102,65]],"remove-preprocessing":[[]],"time":29.458984375,"type":"end"}]