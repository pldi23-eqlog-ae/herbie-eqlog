[{"compiler":[[18,14]],"method":["search"],"sampling":[[12,0.24184825291796289,0.0078015565457407385,0.7503501905362964],[11,0.24184825291796289,0.0078015565457407385,0.7503501905362964],[10,0.23404669637222217,0.015603113091481477,0.7503501905362964],[9,0.23404669637222217,0.015603113091481477,0.7503501905362964],[8,0.21844358328074068,0.031206226182962954,0.7503501905362964],[7,0.21844358328074068,0.031206226182962954,0.7503501905362964],[6,0.18723735709777772,0.06241245236592591,0.7503501905362964],[5,0.18723735709777772,0.06241245236592591,0.7503501905362964],[4,0.12482490473185182,0.12482490473185182,0.7503501905362964],[3,0.12482490473185182,0.12482490473185182,0.7503501905362964],[2,0.0,0.24964980946370363,0.7503501905362964],[1,0.0,0.24964980946370363,0.7503501905362964],[0,0.0,0.24964980946370363,0.7503501905362964]],"time":9.658203125,"type":"analyze"},{"outcomes":[["body",256,"valid",370.7939453125,8256]],"time":378.329833984375,"type":"sample"},{"compiler":[[11,9]],"inputs":[["0","1"],["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 s) x))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","(/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 s) x))))","(/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 s x)))))"]],"symmetry":[[]],"time":59.635009765625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","(/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))"]],"time":18.151123046875,"type":"simplify"},{"compiler":[[20,16]],"time":0.427978515625,"type":"eval"},{"alts":[["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","next",0.01171875]],"compiler":[[11,9],[11,9]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[0.01171875],"time":1.85595703125,"type":"prune"},{"compiler":[[32,12]],"locations":[["(+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s)))",0.00390625,true],["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))",0.01171875,true],["(exp.f64 (/.f64 (neg.f64 x) s))",0.053596374167287325,true]],"time":6.0869140625,"type":"localize"},{"count":[[3,72]],"series":[["(+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s)))","s","-inf",0.177001953125],["(+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s)))","s","inf",0.160888671875],["(+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s)))","s","0",0.179931640625],["(+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s)))","x","-inf",0.14892578125],["(+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s)))","x","inf",0.154052734375],["(+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s)))","x","0",0.2177734375],["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","s","-inf",0.43798828125],["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","s","inf",0.431884765625],["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","s","0",0.427978515625],["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","x","-inf",0.44189453125],["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","x","inf",0.452880859375],["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","x","0",0.594970703125],["(exp.f64 (/.f64 (neg.f64 x) s))","s","-inf",0.23193359375],["(exp.f64 (/.f64 (neg.f64 x) s))","s","inf",0.35302734375],["(exp.f64 (/.f64 (neg.f64 x) s))","s","0",0.158935546875],["(exp.f64 (/.f64 (neg.f64 x) s))","x","-inf",0.218017578125],["(exp.f64 (/.f64 (neg.f64 x) s))","x","inf",0.196044921875],["(exp.f64 (/.f64 (neg.f64 x) s))","x","0",0.51708984375]],"time":5.74609375,"type":"series"},{"count":[[3,135]],"inputs":[["(exp.f64 (/.f64 (neg.f64 x) s))","(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","(+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 (/.f64 x s))) (*.f64 (exp.f64 (neg.f64 (/.f64 x s))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (neg.f64 (/.f64 x s))) 0) (exp.f64 (neg.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 (/.f64 x s))) (*.f64 0 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (neg.f64 (/.f64 x s)))) (exp.f64 (neg.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (exp.f64 (/.f64 x s))) (neg.f64 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (neg.f64 (/.f64 x s))) (/.f64 0 (exp.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))) (cbrt.f64 (exp.f64 (*.f64 (/.f64 x s) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 x s) -2))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (neg.f64 (/.f64 x s)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 (/.f64 x s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (exp.f64 (/.f64 x s)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (exp.f64 (/.f64 x s)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (exp.f64 (/.f64 x s)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (exp.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 x)) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (neg.f64 (/.f64 x s)))) (pow.f64 (cbrt.f64 (/.f64 x s)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (neg.f64 (/.f64 x s)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (/.f64 x s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 1 s)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 x s)) 2)) (cbrt.f64 (neg.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (neg.f64 x))) (/.f64 (cbrt.f64 (*.f64 x x)) s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 -1 s))) (/.f64 x (cbrt.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 1 s))) (/.f64 (neg.f64 x) (cbrt.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 x s)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (/.f64 x s)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (neg.f64 (/.f64 x s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (/.f64 x s)) 3) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) (*.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) 0) (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) (*.f64 0 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))) (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))) (cbrt.f64 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) (*.f64 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))) (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) -1) (cbrt.f64 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))) -1) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))) (cbrt.f64 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))) (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (+.f64 1 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3))) (/.f64 1 (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 3) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (*.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 0) (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (*.f64 0 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))) (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (neg.f64 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (neg.f64 (/.f64 x s))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 -1) (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3)) (/.f64 1 (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1)) (+.f64 1 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3)) -1) (/.f64 1 (+.f64 -1 (neg.f64 (/.f64 (expm1.f64 (neg.f64 (/.f64 x s))) (exp.f64 (/.f64 x s)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 x s) -2))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))))) (+.f64 1 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 x s) -2))) (-.f64 1 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))))) (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 2)) (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3)) (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3)) -1) (+.f64 -1 (neg.f64 (/.f64 (expm1.f64 (neg.f64 (/.f64 x s))) (exp.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 2)) (cbrt.f64 (+.f64 1 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3)))) (cbrt.f64 (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (neg.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3)) -1)) (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3)) -1) 1) (+.f64 -1 (neg.f64 (/.f64 (expm1.f64 (neg.f64 (/.f64 x s))) (exp.f64 (/.f64 x s))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 2))) (cbrt.f64 (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3) 3)) (/.f64 1 (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1))) (-.f64 (+.f64 1 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 6)) (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3)) (cbrt.f64 (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1))) (pow.f64 (cbrt.f64 (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (*.f64 (exp.f64 (/.f64 x s)) 1)) (*.f64 (exp.f64 (/.f64 x s)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (exp.f64 (/.f64 x s)) 1) (exp.f64 (/.f64 x s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3) 3)) 1) (*.f64 (-.f64 (+.f64 1 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 6)) (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3)) (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3)) -1) 1) (*.f64 (+.f64 -1 (neg.f64 (/.f64 (expm1.f64 (neg.f64 (/.f64 x s))) (exp.f64 (/.f64 x s))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))) 3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (exp.f64 (neg.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 (neg.f64 (/.f64 x s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))) (cbrt.f64 (exp.f64 (*.f64 (/.f64 x s) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (exp.f64 (neg.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 x s) -2))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 (neg.f64 (/.f64 x s)))) 1)))))"]],"rules":[["egg-rr",57],["egg-rr",39],["egg-rr",39]],"time":31.47900390625,"type":"rewrite"},{"count":[[207,166]],"inputs":[["1","(+.f64 1 (*.f64 -1 (/.f64 x s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","1","(+.f64 1 (*.f64 -1 (/.f64 x s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","1","(+.f64 1 (*.f64 -1 (/.f64 x s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x s)))","(+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 -1/48 (/.f64 (pow.f64 x 3) (pow.f64 s 3)))))","(+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (+.f64 (*.f64 -1/48 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (*.f64 1/480 (/.f64 (pow.f64 x 5) (pow.f64 s 5))))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x s)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (*.f64 1/4 (/.f64 x s))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3)))) (pow.f64 s 3))))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x s)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (*.f64 1/4 (/.f64 x s))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x) (pow.f64 s 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 s 3))))))))","2","(+.f64 2 (*.f64 -1 (/.f64 x s)))","(+.f64 2 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 2 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 (exp.f64 (*.f64 -1 (/.f64 x s))) 1)","(+.f64 (exp.f64 (*.f64 -1 (/.f64 x s))) 1)","(+.f64 (exp.f64 (*.f64 -1 (/.f64 x s))) 1)","(+.f64 (exp.f64 (*.f64 -1 (/.f64 x s))) 1)","2","(+.f64 2 (*.f64 -1 (/.f64 x s)))","(+.f64 2 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 2 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","2","(+.f64 2 (*.f64 -1 (/.f64 x s)))","(+.f64 2 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 2 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1 (/.f64 x s)))","(-.f64 1 (/.f64 x s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","(+.f64 (fma.f64 (pow.f64 (/.f64 x s) 3) -1/6 1) (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","1","(+.f64 1 (*.f64 -1 (/.f64 x s)))","(-.f64 1 (/.f64 x s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","(+.f64 (fma.f64 (pow.f64 (/.f64 x s) 3) -1/6 1) (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","1","(+.f64 1 (*.f64 -1 (/.f64 x s)))","(-.f64 1 (/.f64 x s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","(+.f64 (fma.f64 (pow.f64 (/.f64 x s) 3) -1/6 1) (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x s)))","(fma.f64 (/.f64 x s) 1/4 1/2)","(+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 -1/48 (/.f64 (pow.f64 x 3) (pow.f64 s 3)))))","(+.f64 1/2 (fma.f64 (pow.f64 (/.f64 x s) 3) -1/48 (/.f64 (*.f64 1/4 x) s)))","(+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (+.f64 (*.f64 -1/48 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (*.f64 1/480 (/.f64 (pow.f64 x 5) (pow.f64 s 5))))))","(+.f64 (fma.f64 (/.f64 x s) 1/4 1/2) (fma.f64 -1/48 (pow.f64 (/.f64 x s) 3) (/.f64 (*.f64 1/480 (pow.f64 x 5)) (pow.f64 s 5))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x s)))","(fma.f64 (/.f64 x s) 1/4 1/2)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (*.f64 1/4 (/.f64 x s))))","(-.f64 (fma.f64 (/.f64 x s) 1/4 1/2) (/.f64 0 (*.f64 s s)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3)))) (pow.f64 s 3))))))","(-.f64 (-.f64 (fma.f64 (/.f64 x s) 1/4 1/2) (/.f64 (fma.f64 (pow.f64 x 3) -1/24 (fma.f64 1/2 (*.f64 0 x) (*.f64 1/16 (pow.f64 x 3)))) (pow.f64 s 3))) (/.f64 0 (*.f64 s s)))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x s)))","(fma.f64 (/.f64 x s) 1/4 1/2)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (*.f64 1/4 (/.f64 x s))))","(-.f64 (fma.f64 (/.f64 x s) 1/4 1/2) (/.f64 0 (*.f64 s s)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x) (pow.f64 s 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 s 3))))))))","(fma.f64 -1/2 (/.f64 (*.f64 0 x) (pow.f64 s 3)) (-.f64 (+.f64 1/2 (fma.f64 (pow.f64 (/.f64 x s) 3) -1/48 (/.f64 (*.f64 1/4 x) s))) (/.f64 0 (*.f64 s s))))","2","(+.f64 2 (*.f64 -1 (/.f64 x s)))","(-.f64 2 (/.f64 x s))","(+.f64 2 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 2 (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 2 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","(+.f64 (fma.f64 (pow.f64 (/.f64 x s) 3) -1/6 2) (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))","(+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))","(+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))","(+.f64 (exp.f64 (*.f64 -1 (/.f64 x s))) 1)","(+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))","(+.f64 (exp.f64 (*.f64 -1 (/.f64 x s))) 1)","(+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))","(+.f64 (exp.f64 (*.f64 -1 (/.f64 x s))) 1)","(+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))","(+.f64 (exp.f64 (*.f64 -1 (/.f64 x s))) 1)","(+.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))","2","(+.f64 2 (*.f64 -1 (/.f64 x s)))","(-.f64 2 (/.f64 x s))","(+.f64 2 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 2 (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 2 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","(+.f64 (fma.f64 (pow.f64 (/.f64 x s) 3) -1/6 2) (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","2","(+.f64 2 (*.f64 -1 (/.f64 x s)))","(-.f64 2 (/.f64 x s))","(+.f64 2 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 2 (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 2 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","(+.f64 (fma.f64 (pow.f64 (/.f64 x s) 3) -1/6 2) (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))"]],"time":223.01806640625,"type":"simplify"},{"compiler":[[2764,1541]],"time":30.947021484375,"type":"eval"},{"alts":[["(/.f64 (/.f64 1 (+.f64 1 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3))) (/.f64 1 (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1)))","fresh",26.028007519536885],["(*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))","next",0.023073791389095776],["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","done",0.01171875]],"compiler":[[28,17],[23,16],[11,9],[28,17],[23,16]],"count":[[167,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[166,2],"picked":[1,1]}],"min-error":[0],"time":53.36083984375,"type":"prune"},{"compiler":[[78,37]],"locations":[["(*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))",0.00390625,true],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3))",0.014872480164287516,true],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)",0.029628759768442016,true],["(exp.f64 (neg.f64 (/.f64 x s)))",0.053596374167287325,true]],"time":14.587158203125,"type":"localize"},{"count":[[4,88]],"series":[["(*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))","s","-inf",0.2138671875],["(*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))","s","inf",0.2431640625],["(*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))","s","0",0.266845703125],["(*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))","x","-inf",0.200927734375],["(*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))","x","inf",0.294921875],["(*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))","x","0",0.27001953125],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3))","s","-inf",0.653076171875],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3))","s","inf",0.8349609375],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3))","s","0",8.01416015625],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3))","x","-inf",13.52783203125],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3))","x","inf",16.93896484375],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3))","x","0",0.7880859375],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","s","-inf",0.48291015625],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","s","inf",0.553955078125],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","s","0",0.60693359375],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","x","-inf",0.526123046875],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","x","inf",0.664794921875],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","x","0",0.328125],["(exp.f64 (neg.f64 (/.f64 x s)))","s","-inf",0.234130859375],["(exp.f64 (neg.f64 (/.f64 x s)))","s","inf",0.260986328125],["(exp.f64 (neg.f64 (/.f64 x s)))","s","0",0.14892578125],["(exp.f64 (neg.f64 (/.f64 x s)))","x","-inf",0.185791015625],["(exp.f64 (neg.f64 (/.f64 x s)))","x","inf",0.176025390625],["(exp.f64 (neg.f64 (/.f64 x s)))","x","0",0.651123046875]],"time":47.492919921875,"type":"series"},{"count":[[4,106]],"inputs":[["(exp.f64 (neg.f64 (/.f64 x s)))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3))","(*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 (/.f64 x s))) (*.f64 (exp.f64 (neg.f64 (/.f64 x s))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (neg.f64 (/.f64 x s))) 0) (exp.f64 (neg.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 (/.f64 x s))) (*.f64 0 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (neg.f64 (/.f64 x s)))) (exp.f64 (neg.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (neg.f64 (/.f64 x s))) (/.f64 0 (exp.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (exp.f64 (/.f64 x s)))) (neg.f64 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (exp.f64 (/.f64 x s))) (neg.f64 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))) (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 2/3) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (neg.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (neg.f64 (/.f64 x s)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 x s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (exp.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 (/.f64 x s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 2/3) (cbrt.f64 (exp.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (/.f64 x s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (/.f64 x s) 2/3)) (cbrt.f64 (neg.f64 (/.f64 x s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (neg.f64 (/.f64 x s)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 x s)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (neg.f64 (/.f64 x s)))) (pow.f64 (/.f64 x s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (/.f64 x s)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 x s)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 x)) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 x s))) (neg.f64 (pow.f64 (/.f64 x s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (exp.f64 (neg.f64 (/.f64 x s)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (/.f64 x s)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (/.f64 x s)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (/.f64 x s)) 3) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 0) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (*.f64 0 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))) (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) 2/3) (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) 2/3) (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 2/3) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 0) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) (*.f64 0 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 2/3) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) 0) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) (*.f64 0 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) (*.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 2/3) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))) (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) 2/3) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 2/3) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) 2/3) (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) 2/3) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))) (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))) (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 2/3) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -1/3) 3)))))))"]],"rules":[["egg-rr",28],["egg-rr",19],["egg-rr",24],["egg-rr",35]],"time":37.995849609375,"type":"rewrite"},{"count":[[194,162]],"inputs":[["1","(+.f64 1 (*.f64 -1 (/.f64 x s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","1","(+.f64 1 (*.f64 -1 (/.f64 x s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","1","(+.f64 1 (*.f64 -1 (/.f64 x s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","1/4","(+.f64 1/4 (*.f64 1/4 (/.f64 x s)))","(+.f64 1/4 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 1/16 (/.f64 (pow.f64 x 2) (pow.f64 s 2)))))","(+.f64 1/4 (+.f64 (*.f64 1/4 (/.f64 x s)) (+.f64 (*.f64 -1/48 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (*.f64 1/16 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","1/4","(+.f64 1/4 (*.f64 1/4 (/.f64 x s)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/4 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 1/16 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x) (pow.f64 s 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3)))) (pow.f64 s 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/4 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 1/16 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))))","1/4","(+.f64 1/4 (*.f64 1/4 (/.f64 x s)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/4 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 1/16 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/4 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/16 (pow.f64 x 3)) (+.f64 (*.f64 1/24 (pow.f64 x 3)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x))) (pow.f64 s 3))) (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 1/16 (/.f64 (pow.f64 x 2) (pow.f64 s 2)))))))","(pow.f64 1/2 1/3)","(+.f64 (pow.f64 1/2 1/3) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))))","(+.f64 (pow.f64 1/2 1/3) (+.f64 (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))) (*.f64 -1/36 (*.f64 (/.f64 (pow.f64 x 2) (pow.f64 s 2)) (pow.f64 1/2 1/3)))))","(+.f64 (*.f64 -1/162 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 s 3)) (pow.f64 1/2 1/3))) (+.f64 (pow.f64 1/2 1/3) (+.f64 (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))) (*.f64 -1/36 (*.f64 (/.f64 (pow.f64 x 2) (pow.f64 s 2)) (pow.f64 1/2 1/3))))))","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))) 1/3)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))) 1/3)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))) 1/3)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))) 1/3)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(pow.f64 1/2 1/3)","(+.f64 (pow.f64 1/2 1/3) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/72 (pow.f64 x 2)) (*.f64 -1/6 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))))) (pow.f64 s 2)) (pow.f64 1/2 1/3)) (+.f64 (pow.f64 1/2 1/3) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3)))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/1296 (pow.f64 x 3)) (+.f64 (*.f64 -1/36 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) x)) (*.f64 -1/18 (+.f64 (*.f64 -1/4 (pow.f64 x 3)) (+.f64 (*.f64 3/4 (pow.f64 x 3)) (*.f64 -1/2 (pow.f64 x 3))))))) (pow.f64 s 3)) (pow.f64 1/2 1/3)) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/72 (pow.f64 x 2)) (*.f64 -1/6 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))))) (pow.f64 s 2)) (pow.f64 1/2 1/3)) (+.f64 (pow.f64 1/2 1/3) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))))))","(pow.f64 1/2 1/3)","(+.f64 (pow.f64 1/2 1/3) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/72 (pow.f64 x 2)) (*.f64 -1/6 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))))) (pow.f64 s 2)) (pow.f64 1/2 1/3)) (+.f64 (pow.f64 1/2 1/3) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3)))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/72 (pow.f64 x 2)) (*.f64 -1/6 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))))) (pow.f64 s 2)) (pow.f64 1/2 1/3)) (+.f64 (pow.f64 1/2 1/3) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -1/1296 (pow.f64 x 3)) (+.f64 (*.f64 -1/18 (+.f64 (*.f64 1/2 (pow.f64 x 3)) (+.f64 (*.f64 -3/4 (pow.f64 x 3)) (*.f64 1/4 (pow.f64 x 3))))) (*.f64 1/36 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) x)))) (pow.f64 s 3)) (pow.f64 1/2 1/3))) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x s)))","(+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 -1/48 (/.f64 (pow.f64 x 3) (pow.f64 s 3)))))","(+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (+.f64 (*.f64 -1/48 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (*.f64 1/480 (/.f64 (pow.f64 x 5) (pow.f64 s 5))))))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x s)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (*.f64 1/4 (/.f64 x s))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3)))) (pow.f64 s 3))))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x s)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (*.f64 1/4 (/.f64 x s))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x) (pow.f64 s 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 s 3))))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1 (/.f64 x s)))","(-.f64 1 (/.f64 x s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","(fma.f64 -1/6 (pow.f64 (/.f64 x s) 3) (+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s)))))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","(exp.f64 (*.f64 -1 (/.f64 x s)))","(exp.f64 (neg.f64 (/.f64 x s)))","1","(+.f64 1 (*.f64 -1 (/.f64 x s)))","(-.f64 1 (/.f64 x s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","(fma.f64 -1/6 (pow.f64 (/.f64 x s) 3) (+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s)))))","1","(+.f64 1 (*.f64 -1 (/.f64 x s)))","(-.f64 1 (/.f64 x s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s))))","(+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 x s)))))","(fma.f64 -1/6 (pow.f64 (/.f64 x s) 3) (+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 x s) 2) (neg.f64 (/.f64 x s)))))","1/4","(+.f64 1/4 (*.f64 1/4 (/.f64 x s)))","(+.f64 1/4 (/.f64 (*.f64 1/4 x) s))","(+.f64 1/4 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 1/16 (/.f64 (pow.f64 x 2) (pow.f64 s 2)))))","(+.f64 1/4 (fma.f64 1/4 (/.f64 x s) (pow.f64 (/.f64 (*.f64 1/4 x) s) 2)))","(+.f64 1/4 (+.f64 (*.f64 1/4 (/.f64 x s)) (+.f64 (*.f64 -1/48 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (*.f64 1/16 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))","(+.f64 1/4 (fma.f64 1/4 (/.f64 x s) (fma.f64 -1/48 (pow.f64 (/.f64 x s) 3) (pow.f64 (/.f64 (*.f64 1/4 x) s) 2))))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) -2)","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) -2)","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) -2)","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) -2)","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) -2)","1/4","(+.f64 1/4 (*.f64 1/4 (/.f64 x s)))","(+.f64 1/4 (/.f64 (*.f64 1/4 x) s))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/4 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 1/16 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))","(-.f64 (+.f64 1/4 (fma.f64 1/4 (/.f64 x s) (pow.f64 (/.f64 (*.f64 1/4 x) s) 2))) (/.f64 0 (*.f64 s s)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x) (pow.f64 s 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3)))) (pow.f64 s 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/4 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 1/16 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))))","(+.f64 (/.f64 (+.f64 (*.f64 (*.f64 -1/2 0) x) (neg.f64 (fma.f64 -1/24 (pow.f64 x 3) (fma.f64 1/2 (*.f64 x 0) (*.f64 1/16 (pow.f64 x 3)))))) (pow.f64 s 3)) (-.f64 (+.f64 1/4 (fma.f64 1/4 (/.f64 x s) (pow.f64 (/.f64 (*.f64 1/4 x) s) 2))) (/.f64 0 (*.f64 s s))))","1/4","(+.f64 1/4 (*.f64 1/4 (/.f64 x s)))","(+.f64 1/4 (/.f64 (*.f64 1/4 x) s))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/4 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 1/16 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))","(-.f64 (+.f64 1/4 (fma.f64 1/4 (/.f64 x s) (pow.f64 (/.f64 (*.f64 1/4 x) s) 2))) (/.f64 0 (*.f64 s s)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/4 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/16 (pow.f64 x 3)) (+.f64 (*.f64 1/24 (pow.f64 x 3)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x))) (pow.f64 s 3))) (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 1/16 (/.f64 (pow.f64 x 2) (pow.f64 s 2)))))))","(-.f64 (+.f64 (-.f64 1/4 (/.f64 (-.f64 (*.f64 (*.f64 1/2 0) x) (+.f64 (*.f64 (pow.f64 x 3) -1/48) (*.f64 (*.f64 -1/2 0) x))) (pow.f64 s 3))) (fma.f64 1/4 (/.f64 x s) (pow.f64 (/.f64 (*.f64 1/4 x) s) 2))) (/.f64 0 (*.f64 s s)))","(pow.f64 1/2 1/3)","(cbrt.f64 1/2)","(+.f64 (pow.f64 1/2 1/3) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))))","(*.f64 (cbrt.f64 1/2) (+.f64 1 (/.f64 (*.f64 1/6 x) s)))","(+.f64 (pow.f64 1/2 1/3) (+.f64 (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))) (*.f64 -1/36 (*.f64 (/.f64 (pow.f64 x 2) (pow.f64 s 2)) (pow.f64 1/2 1/3)))))","(+.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/36 (pow.f64 (/.f64 x s) 2)) (/.f64 (*.f64 1/6 x) s))))","(+.f64 (*.f64 -1/162 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 s 3)) (pow.f64 1/2 1/3))) (+.f64 (pow.f64 1/2 1/3) (+.f64 (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))) (*.f64 -1/36 (*.f64 (/.f64 (pow.f64 x 2) (pow.f64 s 2)) (pow.f64 1/2 1/3))))))","(+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/162 (pow.f64 (/.f64 x s) 3)) 1)) (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/36 (pow.f64 (/.f64 x s) 2)) (/.f64 (*.f64 1/6 x) s))))","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s))))) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1)))","(pow.f64 1/2 1/3)","(cbrt.f64 1/2)","(+.f64 (pow.f64 1/2 1/3) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))))","(*.f64 (cbrt.f64 1/2) (+.f64 1 (/.f64 (*.f64 1/6 x) s)))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/72 (pow.f64 x 2)) (*.f64 -1/6 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))))) (pow.f64 s 2)) (pow.f64 1/2 1/3)) (+.f64 (pow.f64 1/2 1/3) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3)))))","(fma.f64 (*.f64 (fma.f64 1/72 (*.f64 x x) (*.f64 -1/6 (*.f64 (*.f64 x x) 1/4))) (pow.f64 s -2)) (cbrt.f64 1/2) (*.f64 (cbrt.f64 1/2) (+.f64 1 (/.f64 (*.f64 1/6 x) s))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/1296 (pow.f64 x 3)) (+.f64 (*.f64 -1/36 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) x)) (*.f64 -1/18 (+.f64 (*.f64 -1/4 (pow.f64 x 3)) (+.f64 (*.f64 3/4 (pow.f64 x 3)) (*.f64 -1/2 (pow.f64 x 3))))))) (pow.f64 s 3)) (pow.f64 1/2 1/3)) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/72 (pow.f64 x 2)) (*.f64 -1/6 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))))) (pow.f64 s 2)) (pow.f64 1/2 1/3)) (+.f64 (pow.f64 1/2 1/3) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))))))","(+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (/.f64 (fma.f64 1/1296 (pow.f64 x 3) (fma.f64 -1/36 (*.f64 (*.f64 (*.f64 x x) 1/4) x) (*.f64 -1/18 (*.f64 (pow.f64 x 3) (+.f64 1/4 -1/4))))) (pow.f64 s 3)) (*.f64 (fma.f64 1/72 (*.f64 x x) (*.f64 -1/6 (*.f64 (*.f64 x x) 1/4))) (pow.f64 s -2)))) (*.f64 (cbrt.f64 1/2) (+.f64 1 (/.f64 (*.f64 1/6 x) s))))","(pow.f64 1/2 1/3)","(cbrt.f64 1/2)","(+.f64 (pow.f64 1/2 1/3) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))))","(*.f64 (cbrt.f64 1/2) (+.f64 1 (/.f64 (*.f64 1/6 x) s)))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/72 (pow.f64 x 2)) (*.f64 -1/6 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))))) (pow.f64 s 2)) (pow.f64 1/2 1/3)) (+.f64 (pow.f64 1/2 1/3) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3)))))","(fma.f64 (*.f64 (fma.f64 1/72 (*.f64 x x) (*.f64 -1/6 (*.f64 (*.f64 x x) 1/4))) (pow.f64 s -2)) (cbrt.f64 1/2) (*.f64 (cbrt.f64 1/2) (+.f64 1 (/.f64 (*.f64 1/6 x) s))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/72 (pow.f64 x 2)) (*.f64 -1/6 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))))) (pow.f64 s 2)) (pow.f64 1/2 1/3)) (+.f64 (pow.f64 1/2 1/3) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -1/1296 (pow.f64 x 3)) (+.f64 (*.f64 -1/18 (+.f64 (*.f64 1/2 (pow.f64 x 3)) (+.f64 (*.f64 -3/4 (pow.f64 x 3)) (*.f64 1/4 (pow.f64 x 3))))) (*.f64 1/36 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) x)))) (pow.f64 s 3)) (pow.f64 1/2 1/3))) (*.f64 1/6 (*.f64 (/.f64 x s) (pow.f64 1/2 1/3))))))","(+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 (fma.f64 1/72 (*.f64 x x) (*.f64 -1/6 (*.f64 (*.f64 x x) 1/4))) (pow.f64 s -2)) 1)) (*.f64 (cbrt.f64 1/2) (+.f64 (neg.f64 (/.f64 (fma.f64 -1/1296 (pow.f64 x 3) (fma.f64 -1/18 (*.f64 (pow.f64 x 3) (+.f64 -1/2 1/2)) (*.f64 1/36 (*.f64 (*.f64 (*.f64 x x) 1/4) x)))) (pow.f64 s 3))) (/.f64 (*.f64 1/6 x) s))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x s)))","(+.f64 1/2 (/.f64 (*.f64 1/4 x) s))","(+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 -1/48 (/.f64 (pow.f64 x 3) (pow.f64 s 3)))))","(+.f64 1/2 (fma.f64 1/4 (/.f64 x s) (*.f64 (pow.f64 (/.f64 x s) 3) -1/48)))","(+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (+.f64 (*.f64 -1/48 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (*.f64 1/480 (/.f64 (pow.f64 x 5) (pow.f64 s 5))))))","(+.f64 1/2 (fma.f64 1/4 (/.f64 x s) (fma.f64 -1/48 (pow.f64 (/.f64 x s) 3) (/.f64 (*.f64 1/480 (pow.f64 x 5)) (pow.f64 s 5)))))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","(/.f64 1 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x s)))","(+.f64 1/2 (/.f64 (*.f64 1/4 x) s))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (*.f64 1/4 (/.f64 x s))))","(-.f64 (+.f64 1/2 (/.f64 (*.f64 1/4 x) s)) (/.f64 0 (*.f64 s s)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3)))) (pow.f64 s 3))))))","(-.f64 (+.f64 1/2 (fma.f64 1/4 (/.f64 x s) (neg.f64 (/.f64 (fma.f64 -1/24 (pow.f64 x 3) (fma.f64 1/2 (*.f64 x 0) (*.f64 1/16 (pow.f64 x 3)))) (pow.f64 s 3))))) (/.f64 0 (*.f64 s s)))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x s)))","(+.f64 1/2 (/.f64 (*.f64 1/4 x) s))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (*.f64 1/4 (/.f64 x s))))","(-.f64 (+.f64 1/2 (/.f64 (*.f64 1/4 x) s)) (/.f64 0 (*.f64 s s)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x) (pow.f64 s 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 1/2 (+.f64 (*.f64 1/4 (/.f64 x s)) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 s 3))))))))","(fma.f64 -1/2 (/.f64 (*.f64 x 0) (pow.f64 s 3)) (-.f64 (+.f64 1/2 (fma.f64 1/4 (/.f64 x s) (*.f64 (pow.f64 (/.f64 x s) 3) -1/48))) (/.f64 0 (*.f64 s s))))"]],"time":336.35107421875,"type":"simplify"},{"compiler":[[5962,3604]],"time":64.99609375,"type":"eval"},{"alts":[["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","done",0.01171875],["(*.f64 (cbrt.f64 (pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3) 1/3)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))","next",0.02181625976844202]],"compiler":[[11,9],[27,20],[27,20]],"count":[[208,2]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[205,1],"picked":[1,0]}],"min-error":[0],"time":75.4150390625,"type":"prune"},{"compiler":[[111,60]],"locations":[["(pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3)",0.025722509768442016,true],["(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)",0.029628759768442016,false],["(pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3) 1/3)",0.03191376953688403,true],["(exp.f64 (neg.f64 (/.f64 x s)))",0.053596374167287325,false]],"time":20.93994140625,"type":"localize"},{"count":[[2,48]],"series":[["(pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3)","s","-inf",0.62109375],["(pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3)","s","inf",0.700927734375],["(pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3)","s","0",0.18994140625],["(pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3)","x","-inf",0.197998046875],["(pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3)","x","inf",0.169921875],["(pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3)","x","0",0.260986328125],["(pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3) 1/3)","s","-inf",2.289794921875],["(pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3) 1/3)","s","inf",2.891845703125],["(pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3) 1/3)","s","0",1.34716796875],["(pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3) 1/3)","x","-inf",1.427978515625],["(pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3) 1/3)","x","inf",1.64697265625],["(pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3) 1/3)","x","0",1.4130859375]],"time":13.488037109375,"type":"series"},{"count":[[2,48]],"inputs":[["(pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3) 1/3)","(pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 0) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (*.f64 0 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4)) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)) 0) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)) (*.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2))) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)) (*.f64 0 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4)) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -4)) (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -2 -4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (+.f64 -4 -2)) 3))))))"]],"rules":[["egg-rr",27],["egg-rr",21]],"time":26.051025390625,"type":"rewrite"},{"count":[[96,92]],"inputs":[["(cbrt.f64 1/64)","(+.f64 (cbrt.f64 1/64) (*.f64 1/64 (*.f64 (/.f64 x s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 15/256 (/.f64 1 (pow.f64 s 2))) (*.f64 3/4096 (*.f64 (/.f64 1 (pow.f64 s 2)) (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3)))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 1/64) 2))) (+.f64 (cbrt.f64 1/64) (*.f64 1/64 (*.f64 (/.f64 x s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3)))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 15/256 (/.f64 1 (pow.f64 s 2))) (*.f64 3/4096 (*.f64 (/.f64 1 (pow.f64 s 2)) (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3)))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 1/64) 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 9/256 (/.f64 1 (pow.f64 s 3))) (+.f64 (*.f64 1/262144 (/.f64 1 (*.f64 (pow.f64 s 3) (pow.f64 (cbrt.f64 1/64) 2)))) (*.f64 1/32 (*.f64 (/.f64 (-.f64 (*.f64 15/256 (/.f64 1 (pow.f64 s 2))) (*.f64 3/4096 (*.f64 (/.f64 1 (pow.f64 s 2)) (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3)))) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 5)) 1/3))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 1/64) 2))) (+.f64 (cbrt.f64 1/64) (*.f64 1/64 (*.f64 (/.f64 x s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3))))))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(cbrt.f64 1/64)","(+.f64 (cbrt.f64 1/64) (*.f64 1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 1/2 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2)))))))) (+.f64 (*.f64 1/32 (pow.f64 x 2)) (*.f64 1/16 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3) (pow.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) 2)))) (*.f64 (pow.f64 s 2) (pow.f64 (cbrt.f64 1/64) 2)))) (+.f64 (cbrt.f64 1/64) (*.f64 1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3)))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) x)) (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3))))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x)))))) (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) x)) (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 1/2 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))))) x)) (*.f64 1/16 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3))))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x))))))) (+.f64 (*.f64 1/27 (/.f64 (pow.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) 3) (pow.f64 (cbrt.f64 1/64) 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 5)) 1/3) (*.f64 (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (+.f64 (*.f64 1/16 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2)))))) (*.f64 1/32 (pow.f64 x 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3) (pow.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) 2)))) (+.f64 (*.f64 1/32 x) (*.f64 1/64 x))))))) (*.f64 (pow.f64 s 3) (pow.f64 (cbrt.f64 1/64) 2)))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 1/2 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2)))))))) (+.f64 (*.f64 1/32 (pow.f64 x 2)) (*.f64 1/16 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3) (pow.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) 2)))) (*.f64 (pow.f64 s 2) (pow.f64 (cbrt.f64 1/64) 2)))) (+.f64 (cbrt.f64 1/64) (*.f64 1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3))))))","(cbrt.f64 1/64)","(+.f64 (cbrt.f64 1/64) (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 1/2 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2)))))))) (+.f64 (*.f64 1/32 (pow.f64 x 2)) (*.f64 1/16 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3) (pow.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) 2)))) (*.f64 (pow.f64 s 2) (pow.f64 (cbrt.f64 1/64) 2)))) (+.f64 (cbrt.f64 1/64) (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3)))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 1/2 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2)))))))) (+.f64 (*.f64 1/32 (pow.f64 x 2)) (*.f64 1/16 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3) (pow.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) 2)))) (*.f64 (pow.f64 s 2) (pow.f64 (cbrt.f64 1/64) 2)))) (+.f64 (cbrt.f64 1/64) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3))) (*.f64 -1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/16 (pow.f64 x 3)) (+.f64 (*.f64 1/24 (pow.f64 x 3)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)))) (+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 1/2 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))))) x)) (+.f64 (*.f64 1/4 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) x)) (*.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x)) (*.f64 -1 (+.f64 (*.f64 -1/16 (pow.f64 x 3)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)) (*.f64 1/24 (pow.f64 x 3))))))))) (*.f64 -1/8 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) x))))) (+.f64 (*.f64 1/27 (/.f64 (pow.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) 3) (pow.f64 (cbrt.f64 1/64) 2))) (*.f64 2/3 (*.f64 (*.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (+.f64 (*.f64 1/16 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2)))))) (*.f64 1/32 (pow.f64 x 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3) (pow.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) 2))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 5)) 1/3))))) (*.f64 (pow.f64 s 3) (pow.f64 (cbrt.f64 1/64) 2)))))))","1/64","(+.f64 (*.f64 3/64 (/.f64 x s)) 1/64)","(+.f64 (*.f64 3/64 (/.f64 x s)) (+.f64 1/64 (*.f64 15/256 (/.f64 (pow.f64 x 2) (pow.f64 s 2)))))","(+.f64 (*.f64 3/64 (/.f64 x s)) (+.f64 (*.f64 9/256 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1/64 (*.f64 15/256 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 6))","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 6))","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 6))","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 6))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","1/64","(+.f64 (*.f64 1/64 (/.f64 x s)) (+.f64 1/64 (*.f64 1/32 (/.f64 x s))))","(+.f64 (*.f64 1/64 (/.f64 x s)) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) (pow.f64 s 2))) (+.f64 1/64 (+.f64 (*.f64 1/32 (/.f64 x s)) (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) (pow.f64 s 2))) (*.f64 1/32 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))))","(+.f64 1/64 (+.f64 (*.f64 1/64 (/.f64 x s)) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3))))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x))) (pow.f64 s 3))) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) (pow.f64 s 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) x) (pow.f64 s 3))) (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) x) (pow.f64 s 3))) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) x)) (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3))))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x))))) (pow.f64 s 3))) (*.f64 1/32 (/.f64 x s)))))))))))","1/64","(+.f64 1/64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) s)))","(+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) (pow.f64 s 2))) (+.f64 1/64 (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) s)) (*.f64 1/32 (/.f64 (pow.f64 x 2) (pow.f64 s 2)))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) x)) (+.f64 (*.f64 1/16 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x)) (*.f64 -1 (+.f64 (*.f64 -1/16 (pow.f64 x 3)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)) (*.f64 1/24 (pow.f64 x 3))))))) (+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) x)) (*.f64 1/4 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) x)) (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/16 (pow.f64 x 3)) (+.f64 (*.f64 1/24 (pow.f64 x 3)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x))))))))) (pow.f64 s 3))) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) (pow.f64 s 2))) (+.f64 1/64 (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) s)) (*.f64 1/32 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))))"]],"method":["egg-herbie"],"outputs":[["(cbrt.f64 1/64)","1/4","(+.f64 (cbrt.f64 1/64) (*.f64 1/64 (*.f64 (/.f64 x s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3))))","(+.f64 1/4 (*.f64 (/.f64 (*.f64 1/64 x) s) (cbrt.f64 16)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 15/256 (/.f64 1 (pow.f64 s 2))) (*.f64 3/4096 (*.f64 (/.f64 1 (pow.f64 s 2)) (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3)))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 1/64) 2))) (+.f64 (cbrt.f64 1/64) (*.f64 1/64 (*.f64 (/.f64 x s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3)))))","(fma.f64 1/3 (/.f64 (*.f64 (fma.f64 15/256 (pow.f64 s -2) (*.f64 (*.f64 (pow.f64 s -2) (cbrt.f64 4)) -3/4096)) (*.f64 x x)) 1/16) (+.f64 1/4 (*.f64 (/.f64 (*.f64 1/64 x) s) (cbrt.f64 16))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 15/256 (/.f64 1 (pow.f64 s 2))) (*.f64 3/4096 (*.f64 (/.f64 1 (pow.f64 s 2)) (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3)))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 1/64) 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 9/256 (/.f64 1 (pow.f64 s 3))) (+.f64 (*.f64 1/262144 (/.f64 1 (*.f64 (pow.f64 s 3) (pow.f64 (cbrt.f64 1/64) 2)))) (*.f64 1/32 (*.f64 (/.f64 (-.f64 (*.f64 15/256 (/.f64 1 (pow.f64 s 2))) (*.f64 3/4096 (*.f64 (/.f64 1 (pow.f64 s 2)) (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3)))) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 5)) 1/3))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 1/64) 2))) (+.f64 (cbrt.f64 1/64) (*.f64 1/64 (*.f64 (/.f64 x s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3))))))","(+.f64 (*.f64 1/3 (+.f64 (/.f64 (*.f64 (fma.f64 15/256 (pow.f64 s -2) (*.f64 (*.f64 (pow.f64 s -2) (cbrt.f64 4)) -3/4096)) (*.f64 x x)) 1/16) (*.f64 (*.f64 (-.f64 (*.f64 9/256 (pow.f64 s -3)) (fma.f64 1/262144 (*.f64 (pow.f64 s -3) 16) (/.f64 (*.f64 1/32 (*.f64 (fma.f64 15/256 (pow.f64 s -2) (*.f64 (*.f64 (pow.f64 s -2) (cbrt.f64 4)) -3/4096)) (cbrt.f64 (/.f64 -1 -1/1024)))) s))) (pow.f64 x 3)) 16))) (+.f64 1/4 (*.f64 (/.f64 (*.f64 1/64 x) s) (cbrt.f64 16))))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 2))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 2))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)","(cbrt.f64 1/64)","1/4","(+.f64 (cbrt.f64 1/64) (*.f64 1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3))))","(+.f64 1/4 (*.f64 (/.f64 (*.f64 1/3 (*.f64 x 3/64)) s) (cbrt.f64 16)))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 1/2 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2)))))))) (+.f64 (*.f64 1/32 (pow.f64 x 2)) (*.f64 1/16 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3) (pow.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) 2)))) (*.f64 (pow.f64 s 2) (pow.f64 (cbrt.f64 1/64) 2)))) (+.f64 (cbrt.f64 1/64) (*.f64 1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3)))))","(fma.f64 1/3 (*.f64 (+.f64 (fma.f64 1/4 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)))) (fma.f64 1/32 (*.f64 x x) (*.f64 1/16 (fma.f64 1/16 (*.f64 x x) (neg.f64 0))))) (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 x 3/64) 2)) -1/3)) (/.f64 16 (*.f64 s s))) (+.f64 1/4 (*.f64 (/.f64 (*.f64 1/3 (*.f64 x 3/64)) s) (cbrt.f64 16))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) x)) (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3))))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x)))))) (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) x)) (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 1/2 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))))) x)) (*.f64 1/16 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3))))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x))))))) (+.f64 (*.f64 1/27 (/.f64 (pow.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) 3) (pow.f64 (cbrt.f64 1/64) 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 5)) 1/3) (*.f64 (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (+.f64 (*.f64 1/16 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2)))))) (*.f64 1/32 (pow.f64 x 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3) (pow.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) 2)))) (+.f64 (*.f64 1/32 x) (*.f64 1/64 x))))))) (*.f64 (pow.f64 s 3) (pow.f64 (cbrt.f64 1/64) 2)))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 1/2 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2)))))))) (+.f64 (*.f64 1/32 (pow.f64 x 2)) (*.f64 1/16 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3) (pow.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) 2)))) (*.f64 (pow.f64 s 2) (pow.f64 (cbrt.f64 1/64) 2)))) (+.f64 (cbrt.f64 1/64) (*.f64 1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/32 x) (*.f64 1/64 x)) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (-.f64 (fma.f64 1/4 (*.f64 1/2 (+.f64 (*.f64 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)) x) (-.f64 (*.f64 (*.f64 -1/2 0) x) (fma.f64 -1/24 (pow.f64 x 3) (fma.f64 1/2 (*.f64 x 0) (*.f64 1/16 (pow.f64 x 3))))))) (+.f64 (*.f64 x (+.f64 (*.f64 1/8 (fma.f64 1/16 (*.f64 x x) (neg.f64 0))) (*.f64 1/4 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0))))))) (*.f64 1/16 (-.f64 (*.f64 (*.f64 -1/2 0) x) (fma.f64 -1/24 (pow.f64 x 3) (fma.f64 1/2 (*.f64 x 0) (*.f64 1/16 (pow.f64 x 3)))))))) (fma.f64 1/27 (*.f64 (pow.f64 (*.f64 x 3/64) 3) 16) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 -1 -1/1024)) (*.f64 (+.f64 (fma.f64 1/4 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)))) (fma.f64 1/32 (*.f64 x x) (*.f64 1/16 (fma.f64 1/16 (*.f64 x x) (neg.f64 0))))) (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 x 3/64) 2)) -1/3)) (*.f64 x 3/64)))))) (*.f64 (pow.f64 s -3) 16)) (*.f64 (+.f64 (fma.f64 1/4 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)))) (fma.f64 1/32 (*.f64 x x) (*.f64 1/16 (fma.f64 1/16 (*.f64 x x) (neg.f64 0))))) (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 x 3/64) 2)) -1/3)) (/.f64 16 (*.f64 s s))))) (+.f64 1/4 (*.f64 (/.f64 (*.f64 1/3 (*.f64 x 3/64)) s) (cbrt.f64 16))))","(cbrt.f64 1/64)","1/4","(+.f64 (cbrt.f64 1/64) (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3))))","(+.f64 1/4 (*.f64 (/.f64 (*.f64 -1/3 (*.f64 x -3/64)) s) (cbrt.f64 16)))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 1/2 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2)))))))) (+.f64 (*.f64 1/32 (pow.f64 x 2)) (*.f64 1/16 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3) (pow.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) 2)))) (*.f64 (pow.f64 s 2) (pow.f64 (cbrt.f64 1/64) 2)))) (+.f64 (cbrt.f64 1/64) (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3)))))","(fma.f64 1/3 (*.f64 (+.f64 (fma.f64 1/4 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)))) (fma.f64 1/32 (*.f64 x x) (*.f64 1/16 (fma.f64 1/16 (*.f64 x x) (neg.f64 0))))) (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 x -3/64) 2)) -1/3)) (/.f64 16 (*.f64 s s))) (+.f64 1/4 (*.f64 (/.f64 (*.f64 -1/3 (*.f64 x -3/64)) s) (cbrt.f64 16))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 1/2 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2)))))))) (+.f64 (*.f64 1/32 (pow.f64 x 2)) (*.f64 1/16 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3) (pow.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) 2)))) (*.f64 (pow.f64 s 2) (pow.f64 (cbrt.f64 1/64) 2)))) (+.f64 (cbrt.f64 1/64) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) s) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 2)) 1/3))) (*.f64 -1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/16 (pow.f64 x 3)) (+.f64 (*.f64 1/24 (pow.f64 x 3)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)))) (+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 1/2 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))))) x)) (+.f64 (*.f64 1/4 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) x)) (*.f64 1/2 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x)) (*.f64 -1 (+.f64 (*.f64 -1/16 (pow.f64 x 3)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)) (*.f64 1/24 (pow.f64 x 3))))))))) (*.f64 -1/8 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) x))))) (+.f64 (*.f64 1/27 (/.f64 (pow.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) 3) (pow.f64 (cbrt.f64 1/64) 2))) (*.f64 2/3 (*.f64 (*.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) (-.f64 (+.f64 (*.f64 1/4 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (+.f64 (*.f64 1/16 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2)))))) (*.f64 1/32 (pow.f64 x 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/64)) 1/3) (pow.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) 2))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/64) 5)) 1/3))))) (*.f64 (pow.f64 s 3) (pow.f64 (cbrt.f64 1/64) 2)))))))","(fma.f64 1/3 (*.f64 (+.f64 (fma.f64 1/4 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)))) (fma.f64 1/32 (*.f64 x x) (*.f64 1/16 (fma.f64 1/16 (*.f64 x x) (neg.f64 0))))) (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 x -3/64) 2)) -1/3)) (/.f64 16 (*.f64 s s))) (+.f64 1/4 (*.f64 -1/3 (+.f64 (*.f64 (/.f64 (*.f64 x -3/64) s) (cbrt.f64 16)) (*.f64 (-.f64 (fma.f64 1/16 (-.f64 (*.f64 (*.f64 1/2 0) x) (+.f64 (*.f64 (pow.f64 x 3) (+.f64 -1/16 1/24)) (*.f64 (*.f64 -1/2 0) x))) (fma.f64 -1/4 (*.f64 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)))) x) (fma.f64 1/4 (fma.f64 -1/2 (*.f64 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)) x) (*.f64 1/2 (-.f64 (*.f64 (*.f64 1/2 0) x) (+.f64 (*.f64 (pow.f64 x 3) (+.f64 -1/16 1/24)) (*.f64 (*.f64 -1/2 0) x))))) (*.f64 -1/8 (*.f64 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)) x))))) (fma.f64 1/27 (*.f64 (pow.f64 (*.f64 x -3/64) 3) 16) (*.f64 2/3 (*.f64 (*.f64 (*.f64 x -3/64) (+.f64 (fma.f64 1/4 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)))) (fma.f64 1/32 (*.f64 x x) (*.f64 1/16 (fma.f64 1/16 (*.f64 x x) (neg.f64 0))))) (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 x -3/64) 2)) -1/3))) (cbrt.f64 (/.f64 -1 -1/1024)))))) (*.f64 (pow.f64 s -3) 16))))))","1/64","(+.f64 (*.f64 3/64 (/.f64 x s)) 1/64)","(fma.f64 3/64 (/.f64 x s) 1/64)","(+.f64 (*.f64 3/64 (/.f64 x s)) (+.f64 1/64 (*.f64 15/256 (/.f64 (pow.f64 x 2) (pow.f64 s 2)))))","(+.f64 (fma.f64 3/64 (/.f64 x s) 1/64) (/.f64 (*.f64 15/256 (*.f64 x x)) (*.f64 s s)))","(+.f64 (*.f64 3/64 (/.f64 x s)) (+.f64 (*.f64 9/256 (/.f64 (pow.f64 x 3) (pow.f64 s 3))) (+.f64 1/64 (*.f64 15/256 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))","(fma.f64 3/64 (/.f64 x s) (fma.f64 9/256 (pow.f64 (/.f64 x s) 3) (+.f64 1/64 (/.f64 (*.f64 15/256 (*.f64 x x)) (*.f64 s s)))))","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -6)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -6)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -6)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -6)","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 6))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -6)","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 6))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -6)","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 6))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -6)","(/.f64 1 (pow.f64 (+.f64 1 (exp.f64 (*.f64 -1 (/.f64 x s)))) 6))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -6)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -6)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -6)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -6)","(/.f64 1 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 x s))) 1) 6))","(pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -6)","1/64","(+.f64 (*.f64 1/64 (/.f64 x s)) (+.f64 1/64 (*.f64 1/32 (/.f64 x s))))","(fma.f64 1/64 (/.f64 x s) (+.f64 1/64 (/.f64 (*.f64 1/32 x) s)))","(+.f64 (*.f64 1/64 (/.f64 x s)) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) (pow.f64 s 2))) (+.f64 1/64 (+.f64 (*.f64 1/32 (/.f64 x s)) (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) (pow.f64 s 2))) (*.f64 1/32 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))))","(fma.f64 1/64 (/.f64 x s) (fma.f64 1/16 (*.f64 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)) (pow.f64 s -2)) (+.f64 1/64 (fma.f64 1/32 (/.f64 x s) (/.f64 (+.f64 (*.f64 1/4 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0))))) (*.f64 1/32 (*.f64 x x))) (*.f64 s s))))))","(+.f64 1/64 (+.f64 (*.f64 1/64 (/.f64 x s)) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3))))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x))) (pow.f64 s 3))) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) (pow.f64 s 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) x) (pow.f64 s 3))) (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) x) (pow.f64 s 3))) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 2) (pow.f64 s 2))) (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) x)) (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/24 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x)) (*.f64 1/16 (pow.f64 x 3))))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x))))) (pow.f64 s 3))) (*.f64 1/32 (/.f64 x s)))))))))))","(+.f64 1/64 (fma.f64 1/64 (/.f64 x s) (+.f64 (*.f64 1/16 (+.f64 (*.f64 (-.f64 (*.f64 (*.f64 -1/2 0) x) (fma.f64 -1/24 (pow.f64 x 3) (fma.f64 1/2 (*.f64 x 0) (*.f64 1/16 (pow.f64 x 3))))) (pow.f64 s -3)) (*.f64 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)) (pow.f64 s -2)))) (+.f64 (*.f64 1/4 (+.f64 (*.f64 (*.f64 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)))) x) (pow.f64 s -3)) (*.f64 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)))) (pow.f64 s -2)))) (fma.f64 1/8 (*.f64 (*.f64 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)) x) (pow.f64 s -3)) (fma.f64 1/32 (/.f64 (*.f64 x x) (*.f64 s s)) (fma.f64 1/4 (/.f64 (*.f64 1/2 (+.f64 (*.f64 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)) x) (-.f64 (*.f64 (*.f64 -1/2 0) x) (fma.f64 -1/24 (pow.f64 x 3) (fma.f64 1/2 (*.f64 x 0) (*.f64 1/16 (pow.f64 x 3))))))) (pow.f64 s 3)) (/.f64 (*.f64 1/32 x) s))))))))","1/64","(+.f64 1/64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) s)))","(-.f64 1/64 (/.f64 (*.f64 x -3/64) s))","(+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) (pow.f64 s 2))) (+.f64 1/64 (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) s)) (*.f64 1/32 (/.f64 (pow.f64 x 2) (pow.f64 s 2)))))))","(fma.f64 1/16 (*.f64 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)) (pow.f64 s -2)) (+.f64 1/64 (+.f64 (/.f64 (+.f64 (*.f64 1/4 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0))))) (*.f64 1/32 (*.f64 x x))) (*.f64 s s)) (neg.f64 (/.f64 (*.f64 x -3/64) s)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) x)) (+.f64 (*.f64 1/16 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x)) (*.f64 -1 (+.f64 (*.f64 -1/16 (pow.f64 x 3)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x)) (*.f64 1/24 (pow.f64 x 3))))))) (+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) x)) (*.f64 1/4 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) x)) (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/16 (pow.f64 x 3)) (+.f64 (*.f64 1/24 (pow.f64 x 3)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))) x))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2))) x))))))))) (pow.f64 s 3))) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 2))))) (pow.f64 s 2))) (+.f64 1/64 (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/8 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2)))) (*.f64 1/16 (pow.f64 x 2))) (pow.f64 s 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 x) (*.f64 -1/32 x)) s)) (*.f64 1/32 (/.f64 (pow.f64 x 2) (pow.f64 s 2))))))))","(-.f64 (fma.f64 1/16 (*.f64 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)) (pow.f64 s -2)) (+.f64 1/64 (+.f64 (/.f64 (+.f64 (*.f64 1/4 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0))))) (*.f64 1/32 (*.f64 x x))) (*.f64 s s)) (neg.f64 (/.f64 (*.f64 x -3/64) s))))) (*.f64 (fma.f64 1/16 (-.f64 (*.f64 (*.f64 1/2 0) x) (+.f64 (*.f64 (pow.f64 x 3) (+.f64 -1/16 1/24)) (*.f64 (*.f64 -1/2 0) x))) (fma.f64 -1/4 (*.f64 (fma.f64 1/16 (*.f64 x x) (*.f64 1/2 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)))) x) (fma.f64 1/4 (fma.f64 -1/2 (*.f64 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)) x) (*.f64 1/2 (-.f64 (*.f64 (*.f64 1/2 0) x) (+.f64 (*.f64 (pow.f64 x 3) (+.f64 -1/16 1/24)) (*.f64 (*.f64 -1/2 0) x))))) (*.f64 -1/8 (*.f64 (fma.f64 1/16 (*.f64 x x) (neg.f64 0)) x))))) (pow.f64 s -3)))"]],"time":230.7529296875,"type":"simplify"},{"compiler":[[9352,6418]],"time":107.215087890625,"type":"eval"},{"alts":[["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","done",0.01171875],["(*.f64 (cbrt.f64 (pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3) 1/3)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))","done",0.02181625976844202]],"compiler":[[11,9],[27,20]],"count":[[220,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[218,0],"picked":[1,1]}],"min-error":[0],"time":79.81298828125,"type":"prune"},{"accuracy":[0.01171875],"baseline":[0.01171875],"branch":[["x",0.01171875,1],["s",0.01171875,1],["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))",0.01171875,1],["(+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s)))",0.01171875,1],["(exp.f64 (/.f64 (neg.f64 x) s))",0.01171875,1],["(/.f64 (neg.f64 x) s)",0.01171875,1],["(neg.f64 x)",0.01171875,1]],"compiler":[[3,2],[3,2],[11,9],[9,7],[7,5],[6,4],[4,3],[83,50]],"count":[[4,1]],"inputs":[["(*.f64 (cbrt.f64 (pow.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2) 3) 1/3)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))","(/.f64 (/.f64 1 (+.f64 1 (pow.f64 (exp.f64 (neg.f64 (/.f64 x s))) 3))) (/.f64 1 (fma.f64 (exp.f64 (neg.f64 (/.f64 x s))) (expm1.f64 (neg.f64 (/.f64 x s))) 1)))","(*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 (/.f64 x s)))) (neg.f64 1/3)))","(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))"]],"link":["."],"name":["Logistic function"],"oracle":[26.05210878907377],"outputs":[["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))"]],"time":19.02294921875,"times":[["x",2.94091796875],["s",3.007080078125],["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))",1.87890625],["(+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s)))",1.816162109375],["(exp.f64 (/.f64 (neg.f64 x) s))",1.787841796875],["(/.f64 (neg.f64 x) s)",2.82080078125],["(neg.f64 x)",3.0048828125]],"type":"regimes"},{"compiler":[[11,9]],"inputs":[["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (+.f64 1 (exp.f64 (/.f64 (neg.f64 x) s))))","(/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 (/.f64 x s)))))"]],"stop":[["done",1]],"time":18.640869140625,"type":"simplify"},{"time":0.004150390625,"type":"soundness"},{"compiler":[[11,9]],"remove-preprocessing":[[]],"time":8.739013671875,"type":"end"}]