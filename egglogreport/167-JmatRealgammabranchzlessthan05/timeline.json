[{"compiler":[[127,112]],"method":["search"],"sampling":[[12,0.4982922077178955,0.2509753704071045,0.250732421875],[11,0.4975605010986328,0.2517070770263672,0.250732421875],[10,0.4975605010986328,0.2517070770263672,0.250732421875],[9,0.49463367462158203,0.25463390350341797,0.250732421875],[8,0.49170684814453125,0.25756072998046875,0.250732421875],[7,0.4799995422363281,0.2692680358886719,0.250732421875],[6,0.468292236328125,0.280975341796875,0.250732421875],[5,0.4214630126953125,0.3278045654296875,0.250732421875],[4,0.3746337890625,0.3746337890625,0.250732421875],[3,0.18731689453125,0.56195068359375,0.250732421875],[2,0.0,0.749267578125,0.250732421875],[1,0.0,0.749267578125,0.250732421875],[0,0.0,0.749267578125,0.250732421875]],"time":313.2041015625,"type":"analyze"},{"outcomes":[["body",256,"invalid",45.269287109375,156],["body",8192,"exit",297123.40478515625,3887],["body",256,"valid",2114.122802734375,8256]],"time":299294.39794921875,"type":"sample"},{"compiler":[[124,110]],"inputs":[["0"],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (neg.f64 (+.f64 0 z)) 15/2) (-.f64 1 (+.f64 z 1/2)))) (exp.f64 (+.f64 (+.f64 0 z) (neg.f64 15/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 -3147848041806007/2500000000000 (-.f64 2 (+.f64 0 z)))) (/.f64 7713234287776531/10000000000000 (-.f64 1 (+.f64 z -2)))) (/.f64 -883075145810703/5000000000000 (-.f64 1 (+.f64 z -3)))) (/.f64 2501468655737381/200000000000000 (-.f64 1 (+.f64 z -4)))) (/.f64 -3464277381643003/25000000000000000 (-.f64 1 (+.f64 z -5)))) (/.f64 2496092394504893/250000000000000000000 (-.f64 1 (+.f64 z -6)))) (/.f64 3764081837873279/25000000000000000000000 (-.f64 1 (+.f64 z -7))))))"]],"symmetry":[[]],"time":52.238037109375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (neg.f64 (+.f64 0 z)) 15/2) (-.f64 1 (+.f64 z 1/2)))) (exp.f64 (+.f64 (+.f64 0 z) (neg.f64 15/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 -3147848041806007/2500000000000 (-.f64 2 (+.f64 0 z)))) (/.f64 7713234287776531/10000000000000 (-.f64 1 (+.f64 z -2)))) (/.f64 -883075145810703/5000000000000 (-.f64 1 (+.f64 z -3)))) (/.f64 2501468655737381/200000000000000 (-.f64 1 (+.f64 z -4)))) (/.f64 -3464277381643003/25000000000000000 (-.f64 1 (+.f64 z -5)))) (/.f64 2496092394504893/250000000000000000000 (-.f64 1 (+.f64 z -6)))) (/.f64 3764081837873279/25000000000000000000000 (-.f64 1 (+.f64 z -7))))))"]],"time":17.7119140625,"type":"simplify"},{"compiler":[[220,188]],"time":2.299072265625,"type":"eval"},{"alts":[["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (neg.f64 (+.f64 0 z)) 15/2) (-.f64 1 (+.f64 z 1/2)))) (exp.f64 (+.f64 (+.f64 0 z) (neg.f64 15/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 -3147848041806007/2500000000000 (-.f64 2 (+.f64 0 z)))) (/.f64 7713234287776531/10000000000000 (-.f64 1 (+.f64 z -2)))) (/.f64 -883075145810703/5000000000000 (-.f64 1 (+.f64 z -3)))) (/.f64 2501468655737381/200000000000000 (-.f64 1 (+.f64 z -4)))) (/.f64 -3464277381643003/25000000000000000 (-.f64 1 (+.f64 z -5)))) (/.f64 2496092394504893/250000000000000000000 (-.f64 1 (+.f64 z -6)))) (/.f64 3764081837873279/25000000000000000000000 (-.f64 1 (+.f64 z -7))))))","fresh",1.7057373133790337],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","next",1.7005735317583799]],"compiler":[[97,83],[124,110],[97,83],[124,110]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[1.6927610317583799],"time":5.23583984375,"type":"prune"},{"compiler":[[894,784]],"locations":[["(*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2))))",0.98046875,true],["(sqrt.f64 (*.f64 (PI.f64) 2))",1.0,true],["(+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2)))",2.751306449159911,true],["(-.f64 (-.f64 1 z) 1)",4.5277837444972215,true]],"time":197.423095703125,"type":"localize"},{"count":[[4,36]],"series":[["(*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2))))","z","-inf",0.950927734375],["(*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2))))","z","inf",1.5068359375],["(*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2))))","z","0",1.59814453125],["(+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2)))","z","-inf",0.3330078125],["(+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2)))","z","inf",0.343017578125],["(+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2)))","z","0",0.43798828125],["(-.f64 (-.f64 1 z) 1)","z","-inf",0.175048828125],["(-.f64 (-.f64 1 z) 1)","z","inf",0.465087890625],["(-.f64 (-.f64 1 z) 1)","z","0",0.299072265625]],"time":6.35009765625,"type":"series"},{"count":[[4,169]],"inputs":[["(-.f64 (-.f64 1 z) 1)","(+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2)))","(sqrt.f64 (*.f64 (PI.f64) 2))","(*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 2 z) -2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 3 z) -3)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 2 (neg.f64 (+.f64 z 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (-.f64 1/2 (+.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (-.f64 1 z) 3) (+.f64 (pow.f64 (-.f64 1 z) 2) (-.f64 2 z))) (neg.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 1 z) 2) (-.f64 2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (-.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (+.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (+.f64 1 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 z) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (-.f64 1 z) 3) (+.f64 (pow.f64 (-.f64 1 z) 2) (-.f64 2 z))) (/.f64 1 (+.f64 (pow.f64 (-.f64 1 z) 2) (-.f64 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 2 z) 2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 -1 (/.f64 1 (+.f64 (fma.f64 z z z) 1))) (/.f64 (pow.f64 z 3) (+.f64 (fma.f64 z z z) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 -1 (+.f64 z -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 2 (+.f64 z 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (+.f64 1 z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 1/2 z) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 3 z) 3)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 3 (+.f64 (+.f64 z 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 1 (*.f64 (+.f64 1 z) (+.f64 z 2)))) (/.f64 (pow.f64 (+.f64 1 z) 3) (+.f64 1 (*.f64 (+.f64 1 z) (+.f64 z 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 1 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 z) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 z)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 (fma.f64 z z z) 1)) (-.f64 (/.f64 (pow.f64 z 3) (+.f64 (fma.f64 z z z) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 (fma.f64 z z z) 1)) (+.f64 (/.f64 (pow.f64 z 3) (+.f64 (fma.f64 z z z) 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (-.f64 1 z) 3) -1) (/.f64 1 (+.f64 (pow.f64 (-.f64 1 z) 2) (-.f64 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (+.f64 -2 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (+.f64 1 z) 3)) (/.f64 1 (+.f64 1 (*.f64 (+.f64 1 z) (+.f64 z 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 z -1) 3) 1) (/.f64 1 (+.f64 (+.f64 -2 z) (neg.f64 (pow.f64 (-.f64 1 z) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) (-.f64 1 (*.f64 (cbrt.f64 (-.f64 1 z)) -1))) (+.f64 (cbrt.f64 (-.f64 1 z)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) (neg.f64 (cbrt.f64 (-.f64 1 z))))) (+.f64 -1 (cbrt.f64 (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (+.f64 (cbrt.f64 (*.f64 z z)) (*.f64 0 (cbrt.f64 z)))) (neg.f64 (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) (+.f64 1 (*.f64 (cbrt.f64 (-.f64 1 z)) 1))) (-.f64 (cbrt.f64 (-.f64 1 z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 2 z) 2)) (+.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 (-.f64 2 z)) (cbrt.f64 2)))) (-.f64 (cbrt.f64 (-.f64 2 z)) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (-.f64 1 z) 3) -1) (+.f64 (pow.f64 (-.f64 1 z) 2) (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 z -1) 3) 1) (+.f64 (+.f64 -2 z) (neg.f64 (pow.f64 (-.f64 1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (+.f64 1 z) 3)) (+.f64 1 (-.f64 (pow.f64 (+.f64 1 z) 2) (neg.f64 (+.f64 1 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (+.f64 1 z) 3)) (+.f64 1 (*.f64 (+.f64 1 z) (+.f64 z 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 2 z) 3) 8) (+.f64 (pow.f64 (-.f64 2 z) 2) (+.f64 4 (*.f64 (-.f64 2 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (+.f64 1 z) 3))) (neg.f64 (+.f64 1 (*.f64 (+.f64 1 z) (+.f64 z 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 z 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 z)))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (neg.f64 (pow.f64 z 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 1 z)) (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (+.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 1 z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (+.f64 1 z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)) (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 9999999999998099/10000000000000000 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 9999999999998099/10000000000000000 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) (/.f64 6765203681218851/10000000000000 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 -3147848041806007/2500000000000 (+.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) (/.f64 6765203681218851/10000000000000 (+.f64 z -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 2)) (cbrt.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (+.f64 -9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 z -1))) (/.f64 -3147848041806007/2500000000000 (+.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 -3147848041806007/2500000000000 (+.f64 -2 z)) (+.f64 -9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 z -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 3147848041806007/2500000000000 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000)))) (*.f64 (+.f64 -2 z) (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) 3)))) (/.f64 1 (*.f64 (+.f64 -2 z) (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 -3147848041806007/2500000000000 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000)))) (*.f64 (-.f64 2 z) (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) 3)))) (/.f64 1 (*.f64 (-.f64 2 z) (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 3)) (/.f64 1 (+.f64 (*.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000) (*.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) (-.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) 3)) (+.f64 -2 z)) (*.f64 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))) 3147848041806007/2500000000000)) (/.f64 1 (*.f64 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))) (+.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) 3)) (-.f64 2 z)) (*.f64 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))) -3147848041806007/2500000000000)) (/.f64 1 (*.f64 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))) (-.f64 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)) 2)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) 2)) (*.f64 (cbrt.f64 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) (cbrt.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))))))) (+.f64 (cbrt.f64 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) (cbrt.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)) 2)) (*.f64 (cbrt.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)))) (cbrt.f64 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))))) (+.f64 (cbrt.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)))) (cbrt.f64 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) 3)) (+.f64 -2 z)) (*.f64 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))) 3147848041806007/2500000000000)) (*.f64 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))) (+.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -3147848041806007/2500000000000 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000)))) (*.f64 (-.f64 2 z) (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) 3)))) (*.f64 (-.f64 2 z) (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 3147848041806007/2500000000000 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000)))) (*.f64 (+.f64 -2 z) (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) 3)))) (*.f64 (+.f64 -2 z) (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 3)) (+.f64 (pow.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 2) (-.f64 (*.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000) (*.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 3147848041806007/2500000000000 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000)))) (*.f64 (+.f64 -2 z) (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) 3))))) (neg.f64 (*.f64 (+.f64 -2 z) (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 -3147848041806007/2500000000000 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000)))) (*.f64 (-.f64 2 z) (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) 3))))) (neg.f64 (*.f64 (-.f64 2 z) (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 3))) (neg.f64 (+.f64 (*.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000) (*.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) (-.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) 3)) (+.f64 -2 z)) (*.f64 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))) 3147848041806007/2500000000000))) (*.f64 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))) (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) 3)) (-.f64 2 z)) (*.f64 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))) -3147848041806007/2500000000000))) (*.f64 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))) (+.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) 3)) (-.f64 2 z)) (*.f64 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))) -3147848041806007/2500000000000)) (*.f64 (fma.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000 (*.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) -9999999999998099/10000000000000000))) (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 9999999999998099/10000000000000000 3) (pow.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 3)) (+.f64 (*.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000) (*.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) (-.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)))) (cbrt.f64 (pow.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) 2)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) (cbrt.f64 (pow.f64 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)) 2)) (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 9999999999998099/10000000000000000) (cbrt.f64 (*.f64 9999999999998099/10000000000000000 9999999999998099/10000000000000000)) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 9999999999998099/10000000000000000) (sqrt.f64 9999999999998099/10000000000000000) (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -3147848041806007/2500000000000 (/.f64 -1 (+.f64 -2 z)) (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)) (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 9999999999998099/10000000000000000 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))))))))","((#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2))) (sqrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2)))) (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2))) (cbrt.f64 (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) (cbrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (*.f64 (PI.f64) 2))) (fabs.f64 (cbrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2)))) (fabs.f64 (cbrt.f64 (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (PI.f64) 2) 0) (sqrt.f64 (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) 0) (sqrt.f64 (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) -1) (*.f64 (PI.f64) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) 2) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (PI.f64) 2) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (PI.f64) 2) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (PI.f64) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) 2) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (PI.f64) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (PI.f64) 2) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (*.f64 (PI.f64) 2))))))))","((#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 2)) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (+.f64 z -15/2)) (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2)) (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2))) (sqrt.f64 (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (cbrt.f64 (exp.f64 (+.f64 z -15/2)))) (cbrt.f64 (pow.f64 (exp.f64 (-.f64 15/2 z)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (sqrt.f64 (*.f64 (PI.f64) 2))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))))) (cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2))) (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2))) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 (PI.f64) 2))) (*.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (+.f64 z -15/2))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 15/2 z)) -2)) (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (-.f64 15/2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (neg.f64 (exp.f64 (-.f64 15/2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3))))))"]],"rules":[["egg-rr",26],["egg-rr",32],["egg-rr",48],["egg-rr",63]],"time":61.23388671875,"type":"rewrite"},{"count":[[205,193]],"inputs":[["(*.f64 -1 z)","(*.f64 -1 z)","(*.f64 -1 z)","(*.f64 -1 z)","(*.f64 -1 z)","(*.f64 -1 z)","(*.f64 -1 z)","(*.f64 -1 z)","(*.f64 -1 z)","(*.f64 -1 z)","(*.f64 -1 z)","(*.f64 -1 z)","479507597606835099/10000000000000000","(+.f64 479507597606835099/10000000000000000 (*.f64 904338909853211/2500000000000 z))","(+.f64 (*.f64 2076511864126339/4000000000000 (pow.f64 z 2)) (+.f64 479507597606835099/10000000000000000 (*.f64 904338909853211/2500000000000 z)))","(+.f64 (*.f64 2076511864126339/4000000000000 (pow.f64 z 2)) (+.f64 (*.f64 23912966683069397/40000000000000 (pow.f64 z 3)) (+.f64 479507597606835099/10000000000000000 (*.f64 904338909853211/2500000000000 z))))","9999999999998099/10000000000000000","(+.f64 9999999999998099/10000000000000000 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 9999999999998099/10000000000000000 (*.f64 5826188486005177/10000000000000 (/.f64 1 z))))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 9999999999998099/10000000000000000 (+.f64 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)) (*.f64 43600364987677261/10000000000000 (/.f64 1 (pow.f64 z 3))))))","9999999999998099/10000000000000000","(+.f64 9999999999998099/10000000000000000 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 9999999999998099/10000000000000000 (*.f64 5826188486005177/10000000000000 (/.f64 1 z))))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 9999999999998099/10000000000000000 (+.f64 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)) (*.f64 43600364987677261/10000000000000 (/.f64 1 (pow.f64 z 3))))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) z)) (sqrt.f64 (PI.f64))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) z)) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 z 2))) (sqrt.f64 (PI.f64)))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (pow.f64 z 3))) (sqrt.f64 (PI.f64))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) z)) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 z 2))) (sqrt.f64 (PI.f64))))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 z)","(neg.f64 z)","(*.f64 -1 z)","(neg.f64 z)","(*.f64 -1 z)","(neg.f64 z)","(*.f64 -1 z)","(neg.f64 z)","(*.f64 -1 z)","(neg.f64 z)","(*.f64 -1 z)","(neg.f64 z)","(*.f64 -1 z)","(neg.f64 z)","(*.f64 -1 z)","(neg.f64 z)","(*.f64 -1 z)","(neg.f64 z)","(*.f64 -1 z)","(neg.f64 z)","(*.f64 -1 z)","(neg.f64 z)","(*.f64 -1 z)","(neg.f64 z)","479507597606835099/10000000000000000","(+.f64 479507597606835099/10000000000000000 (*.f64 904338909853211/2500000000000 z))","(fma.f64 z 904338909853211/2500000000000 479507597606835099/10000000000000000)","(+.f64 (*.f64 2076511864126339/4000000000000 (pow.f64 z 2)) (+.f64 479507597606835099/10000000000000000 (*.f64 904338909853211/2500000000000 z)))","(fma.f64 2076511864126339/4000000000000 (*.f64 z z) (fma.f64 z 904338909853211/2500000000000 479507597606835099/10000000000000000))","(+.f64 (*.f64 2076511864126339/4000000000000 (pow.f64 z 2)) (+.f64 (*.f64 23912966683069397/40000000000000 (pow.f64 z 3)) (+.f64 479507597606835099/10000000000000000 (*.f64 904338909853211/2500000000000 z))))","(fma.f64 2076511864126339/4000000000000 (*.f64 z z) (fma.f64 (pow.f64 z 3) 23912966683069397/40000000000000 (fma.f64 z 904338909853211/2500000000000 479507597606835099/10000000000000000)))","9999999999998099/10000000000000000","(+.f64 9999999999998099/10000000000000000 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)))","(+.f64 9999999999998099/10000000000000000 (/.f64 5826188486005177/10000000000000 z))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 9999999999998099/10000000000000000 (*.f64 5826188486005177/10000000000000 (/.f64 1 z))))","(+.f64 (fma.f64 (pow.f64 z -2) 3683516130645841/2000000000000 9999999999998099/10000000000000000) (/.f64 5826188486005177/10000000000000 z))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 9999999999998099/10000000000000000 (+.f64 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)) (*.f64 43600364987677261/10000000000000 (/.f64 1 (pow.f64 z 3))))))","(+.f64 (fma.f64 (pow.f64 z -2) 3683516130645841/2000000000000 9999999999998099/10000000000000000) (fma.f64 (pow.f64 z -3) 43600364987677261/10000000000000 (/.f64 5826188486005177/10000000000000 z)))","9999999999998099/10000000000000000","(+.f64 9999999999998099/10000000000000000 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)))","(+.f64 9999999999998099/10000000000000000 (/.f64 5826188486005177/10000000000000 z))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 9999999999998099/10000000000000000 (*.f64 5826188486005177/10000000000000 (/.f64 1 z))))","(+.f64 (fma.f64 (pow.f64 z -2) 3683516130645841/2000000000000 9999999999998099/10000000000000000) (/.f64 5826188486005177/10000000000000 z))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 9999999999998099/10000000000000000 (+.f64 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)) (*.f64 43600364987677261/10000000000000 (/.f64 1 (pow.f64 z 3))))))","(+.f64 (fma.f64 (pow.f64 z -2) 3683516130645841/2000000000000 9999999999998099/10000000000000000) (fma.f64 (pow.f64 z -3) 43600364987677261/10000000000000 (/.f64 5826188486005177/10000000000000 z)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) z)) (sqrt.f64 (PI.f64))))","(*.f64 (sqrt.f64 (PI.f64)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) z))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) z)) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 z 2))) (sqrt.f64 (PI.f64)))))","(*.f64 (sqrt.f64 (PI.f64)) (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) z) (*.f64 (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1/2)) (fma.f64 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2) 1/2 29/225))) (*.f64 z z))))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (pow.f64 z 3))) (sqrt.f64 (PI.f64))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) z)) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 z 2))) (sqrt.f64 (PI.f64))))))","(fma.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)) (*.f64 (sqrt.f64 (PI.f64)) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (fma.f64 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2) 1/2 29/225) (fma.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 29/225 (fma.f64 (neg.f64 (pow.f64 (+.f64 1/15 (log.f64 15/2)) 3)) 1/6 86/10125)))) (fma.f64 (*.f64 1/2 (exp.f64 -15/2)) (neg.f64 (*.f64 (+.f64 1/15 (log.f64 15/2)) (sqrt.f64 15/2))) (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (pow.f64 z 3)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) z) (*.f64 (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1/2)) (fma.f64 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2) 1/2 29/225))) (*.f64 z z)))))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))"]],"time":142.06298828125,"type":"simplify"},{"compiler":[[105378,89092]],"time":1182.512939453125,"type":"eval"},{"alts":[["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 z -15/2))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 15/2 z)) -2)) (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","fresh",2.028759576907902],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (+.f64 1 (-.f64 -1 z)) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","fresh",1.690476021989938],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","next",0.4027138183790941],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","fresh",0.9992079832843148]],"compiler":[[116,101],[124,110],[111,97],[116,102],[116,101],[124,110],[111,97],[116,102]],"count":[[825,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[823,4],"picked":[1,0]}],"min-error":[0.24609375],"time":547.548095703125,"type":"prune"},{"compiler":[[850,732]],"locations":[["(sqrt.f64 (*.f64 (PI.f64) 2))",1.0,false],["(pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)",1.9879875488422099,true],["(+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2)))",2.751306449159911,false],["(-.f64 (-.f64 1 z) 1)",4.5277837444972215,false]],"time":209.876953125,"type":"localize"},{"count":[[1,12]],"series":[["(pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)","z","-inf",1.890869140625],["(pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)","z","inf",2.0029296875],["(pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)","z","0",8.494873046875]],"time":13.00390625,"type":"series"},{"count":[[1,35]],"inputs":[["(pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 1/2) (*.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 0) (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) (*.f64 0 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2/3) (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 z) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (+.f64 z -15/2))) (*.f64 (pow.f64 (exp.f64 (+.f64 z -15/2)) 2/3) (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (*.f64 (*.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) 2/3)) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (+.f64 z -15/2)) (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2))) (sqrt.f64 (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (cbrt.f64 (exp.f64 (+.f64 z -15/2)))) (pow.f64 (exp.f64 (+.f64 z -15/2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))))) (*.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (sqrt.f64 (+.f64 (PI.f64) (PI.f64)))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64)))) (*.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64)))) (*.f64 (sqrt.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64)))) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 z)) (exp.f64 -15/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3))))))"]],"rules":[["egg-rr",35]],"time":28.007080078125,"type":"rewrite"},{"count":[[47,46]],"inputs":[["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))) 1/3) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) z))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))) (*.f64 2 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))))))) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) 2) (pow.f64 (/.f64 1 (PI.f64)) 1/6)))))) (pow.f64 z 2)) (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))) 1/3) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) z)))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))) (*.f64 2 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))))))) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) 2) (pow.f64 (/.f64 1 (PI.f64)) 1/6)))))) (pow.f64 z 2)) (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64)))))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 2 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (+.f64 (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2)))))) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))) (+.f64 (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (+.f64 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))) (*.f64 2 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64))))))))) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))))) (+.f64 (*.f64 1/27 (/.f64 (pow.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) 3) (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64)))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 2) 5) (*.f64 (pow.f64 (exp.f64 -15/2) 5) (pow.f64 (sqrt.f64 15/2) 5)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 2 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 2) (PI.f64))))))) (sqrt.f64 (PI.f64))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (pow.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) 2) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (PI.f64)) 1/6))))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 5)) 1/6))))))) (pow.f64 z 3)) (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))) 1/3) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) z))))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (sqrt.f64 (PI.f64))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))) 1/3) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) z))))","(fma.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 (/.f64 1/2 (*.f64 15/2 (PI.f64))) (exp.f64 -15)))) (*.f64 (*.f64 (pow.f64 (PI.f64) 3/2) (+.f64 (*.f64 2 (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1))))))) (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) z)))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))) (*.f64 2 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))))))) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) 2) (pow.f64 (/.f64 1 (PI.f64)) 1/6)))))) (pow.f64 z 2)) (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))) 1/3) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) z)))))","(fma.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)) (*.f64 1/3 (+.f64 (/.f64 (*.f64 (*.f64 (+.f64 (fma.f64 2 (*.f64 (*.f64 (pow.f64 2 3/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)))))))) (pow.f64 (PI.f64) 3/2)) (fma.f64 (*.f64 (*.f64 (sqrt.f64 2) (exp.f64 -15/2)) (*.f64 (sqrt.f64 15/2) (fma.f64 2 (*.f64 (pow.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)))) 2) (PI.f64)) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (exp.f64 -15/2) (neg.f64 (*.f64 (+.f64 1/15 (log.f64 15/2)) (sqrt.f64 15/2))) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 1/2 (exp.f64 -15/2)) (*.f64 (exp.f64 -15/2) (+.f64 29/225 (*.f64 1/2 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2))))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))))) (sqrt.f64 (PI.f64)) (*.f64 (*.f64 (pow.f64 2 3/2) (*.f64 (exp.f64 -15) (*.f64 (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1/2)) (+.f64 29/225 (*.f64 1/2 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2))))) 15/2))) (pow.f64 (PI.f64) 3/2)))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (pow.f64 (*.f64 (pow.f64 (PI.f64) 3/2) (+.f64 (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)))))) (*.f64 2 (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))))) 2) (pow.f64 (/.f64 1 (PI.f64)) 1/6))))) (*.f64 z z)) 1/2) (*.f64 (exp.f64 -15) (*.f64 15/2 (PI.f64)))) (*.f64 (cbrt.f64 (/.f64 (/.f64 1/2 (*.f64 15/2 (PI.f64))) (exp.f64 -15))) (*.f64 (*.f64 (pow.f64 (PI.f64) 3/2) (+.f64 (*.f64 2 (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1))))))) (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) z)))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))) (*.f64 2 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))))))) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) 2) (pow.f64 (/.f64 1 (PI.f64)) 1/6)))))) (pow.f64 z 2)) (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64)))))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 2 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (+.f64 (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2)))))) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))) (+.f64 (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (+.f64 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))) (*.f64 2 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64))))))))) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))))) (+.f64 (*.f64 1/27 (/.f64 (pow.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) 3) (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64)))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 2) 5) (*.f64 (pow.f64 (exp.f64 -15/2) 5) (pow.f64 (sqrt.f64 15/2) 5)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 2 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 2) (PI.f64))))))) (sqrt.f64 (PI.f64))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (pow.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) 2) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (PI.f64)) 1/6))))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 5)) 1/6))))))) (pow.f64 z 3)) (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))) 1/3) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))) (*.f64 2 (*.f64 (*.f64 (pow.f64 (sqrt.f64 2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))) z))))))","(+.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (fma.f64 2 (*.f64 (*.f64 (pow.f64 2 3/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)))))))) (pow.f64 (PI.f64) 3/2)) (fma.f64 (*.f64 (*.f64 (sqrt.f64 2) (exp.f64 -15/2)) (*.f64 (sqrt.f64 15/2) (fma.f64 2 (*.f64 (pow.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)))) 2) (PI.f64)) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (exp.f64 -15/2) (neg.f64 (*.f64 (+.f64 1/15 (log.f64 15/2)) (sqrt.f64 15/2))) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 1/2 (exp.f64 -15/2)) (*.f64 (exp.f64 -15/2) (+.f64 29/225 (*.f64 1/2 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2))))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))))) (sqrt.f64 (PI.f64)) (*.f64 (*.f64 (pow.f64 2 3/2) (*.f64 (exp.f64 -15) (*.f64 (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1/2)) (+.f64 29/225 (*.f64 1/2 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2))))) 15/2))) (pow.f64 (PI.f64) 3/2)))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (pow.f64 (*.f64 (pow.f64 (PI.f64) 3/2) (+.f64 (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)))))) (*.f64 2 (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))))) 2) (pow.f64 (/.f64 1 (PI.f64)) 1/6))))) (*.f64 z z))) (*.f64 1/3 (*.f64 (-.f64 (fma.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 4 (+.f64 (*.f64 (fma.f64 (exp.f64 -15/2) (neg.f64 (*.f64 (+.f64 1/15 (log.f64 15/2)) (sqrt.f64 15/2))) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 1/2 (exp.f64 -15/2)) (*.f64 (exp.f64 -15/2) (+.f64 29/225 (*.f64 1/2 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2))))))) (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)))) (PI.f64))) (*.f64 (exp.f64 -15/2) (*.f64 (*.f64 (sqrt.f64 15/2) (+.f64 (+.f64 (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (fma.f64 29/225 (neg.f64 (+.f64 1/15 (log.f64 15/2))) (+.f64 86/10125 (*.f64 1/6 (neg.f64 (pow.f64 (+.f64 1/15 (log.f64 15/2)) 3))))) 1/6)) (*.f64 (*.f64 1/2 (exp.f64 -15/2)) (neg.f64 (*.f64 (+.f64 1/15 (log.f64 15/2)) (sqrt.f64 15/2))))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2))) (sqrt.f64 15/2))))) (PI.f64)))))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)) (fma.f64 2 (*.f64 (*.f64 (pow.f64 2 3/2) (*.f64 (exp.f64 -15/2) (*.f64 (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1/2)) (+.f64 29/225 (*.f64 1/2 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2))))) (*.f64 (sqrt.f64 15/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)))))))) (pow.f64 (PI.f64) 3/2)) (fma.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (fma.f64 2 (*.f64 (pow.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)))) 2) (PI.f64)) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (exp.f64 -15/2) (neg.f64 (*.f64 (+.f64 1/15 (log.f64 15/2)) (sqrt.f64 15/2))) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 1/2 (exp.f64 -15/2)) (*.f64 (exp.f64 -15/2) (+.f64 29/225 (*.f64 1/2 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2))))))) (*.f64 (sqrt.f64 15/2) (PI.f64))))))) (sqrt.f64 (PI.f64)) (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (*.f64 (+.f64 (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2))) (fma.f64 29/225 (neg.f64 (+.f64 1/15 (log.f64 15/2))) (+.f64 86/10125 (*.f64 1/6 (neg.f64 (pow.f64 (+.f64 1/15 (log.f64 15/2)) 3))))))) (fma.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 1/2 (exp.f64 -15/2)) (neg.f64 (*.f64 (+.f64 1/15 (log.f64 15/2)) (sqrt.f64 15/2)))))) (exp.f64 -15)) 15/2) (pow.f64 (PI.f64) 3/2)))))) (fma.f64 1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (PI.f64) 3/2) (+.f64 (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)))))) (*.f64 2 (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))))) 3) (/.f64 (/.f64 1/2 (*.f64 15/2 (PI.f64))) (exp.f64 -15))) (*.f64 (*.f64 2/3 (cbrt.f64 (/.f64 (pow.f64 (sqrt.f64 2) -5) (*.f64 (exp.f64 -75/2) (pow.f64 15/2 5/2))))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 3/2) (+.f64 (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)))))) (*.f64 2 (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))))) (+.f64 (+.f64 (*.f64 (pow.f64 (PI.f64) 3/2) (+.f64 (*.f64 2 (*.f64 (pow.f64 2 3/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1))))))))) (*.f64 (pow.f64 2 3/2) (*.f64 (exp.f64 -15) (*.f64 (fma.f64 (exp.f64 -15/2) (neg.f64 (*.f64 (+.f64 1/15 (log.f64 15/2)) (sqrt.f64 15/2))) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 1/2 (exp.f64 -15/2)) (*.f64 (exp.f64 -15/2) (+.f64 29/225 (*.f64 1/2 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2))))))) 15/2))))) (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1/2)) (+.f64 29/225 (*.f64 1/2 (pow.f64 (neg.f64 (+.f64 1/15 (log.f64 15/2))) 2))))) (*.f64 (sqrt.f64 15/2) (PI.f64))))) (*.f64 (*.f64 2 (pow.f64 (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) 2)) (PI.f64))))) (sqrt.f64 (PI.f64))))) (*.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (*.f64 (pow.f64 (PI.f64) 3/2) (+.f64 (*.f64 2 (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1))))))) (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) 2)) (pow.f64 (/.f64 1 (PI.f64)) 1/6))))) (pow.f64 (PI.f64) (*.f64 -5 1/6)))))) (pow.f64 z 3)))) (*.f64 2 (*.f64 (exp.f64 -15) (*.f64 15/2 (PI.f64))))) (fma.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 (/.f64 1/2 (*.f64 15/2 (PI.f64))) (exp.f64 -15)))) (*.f64 (*.f64 (pow.f64 (PI.f64) 3/2) (+.f64 (*.f64 2 (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1))))))) (*.f64 (pow.f64 2 3/2) (*.f64 (*.f64 (exp.f64 -15) 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) (+.f64 -1/15 1)) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) z))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64)))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (sqrt.f64 (PI.f64))))"]],"time":96.052978515625,"type":"simplify"},{"compiler":[[77451,64508]],"time":849.012939453125,"type":"eval"},{"alts":[["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 z -15/2))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 15/2 z)) -2)) (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","fresh",2.028759576907902],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","next",0.4010225706944218],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","done",0.4027138183790941],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","fresh",0.9992079832843148]],"compiler":[[116,101],[116,101],[111,97],[116,102],[116,101],[116,101],[116,102]],"count":[[648,4]],"kept":[{"done":[0,0],"fresh":[3,2],"new":[644,1],"picked":[1,1]}],"min-error":[0.2421875],"time":789.43212890625,"type":"prune"},{"compiler":[[891,765]],"locations":[["(pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3)",0.986660009768442,true],["(pow.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)",1.9879875488422099,true],["(+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2)))",2.751306449159911,false],["(-.f64 (-.f64 1 z) 1)",4.5277837444972215,false]],"time":235.842041015625,"type":"localize"},{"count":[[2,24]],"series":[["(pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3)","z","-inf",0.3330078125],["(pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3)","z","inf",0.337890625],["(pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3)","z","0",2.114013671875],["(pow.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)","z","-inf",2.597900390625],["(pow.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)","z","inf",5.2490234375],["(pow.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)","z","0",16.1259765625]],"time":27.60498046875,"type":"series"},{"count":[[2,69]],"inputs":[["(pow.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)","(pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 0) (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) (*.f64 0 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2/3) (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 z) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (+.f64 z -15/2))) (*.f64 (pow.f64 (exp.f64 (+.f64 z -15/2)) 2/3) (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64)))) (*.f64 (pow.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) 2/3) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 2/3) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (+.f64 z -15/2)) (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2))) (sqrt.f64 (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (cbrt.f64 (exp.f64 (+.f64 z -15/2)))) (pow.f64 (exp.f64 (+.f64 z -15/2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (+.f64 (PI.f64) (PI.f64))) (*.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) -1/2) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (sqrt.f64 (+.f64 (PI.f64) (PI.f64)))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))))) (pow.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) -1/2) (*.f64 (+.f64 (PI.f64) (PI.f64)) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (PI.f64) (PI.f64)) (*.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) -1/2) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 (*.f64 2 (pow.f64 (+.f64 (PI.f64) (PI.f64)) -1/2)) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (PI.f64) (PI.f64)) (*.f64 (*.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) -1/2) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 z)) (exp.f64 -15/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 0) (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) (*.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3)) (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) (*.f64 0 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) (*.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2/3) (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 3) (exp.f64 (*.f64 (+.f64 z -15/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 (+.f64 z -15/2) 3)) (pow.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2) (exp.f64 (+.f64 z -15/2))) (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2) (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (exp.f64 (+.f64 z -15/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) (+.f64 2 1/3)) (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2) (sqrt.f64 (+.f64 (PI.f64) (PI.f64)))) (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2))) (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (+.f64 z -15/2)) (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) 3) (pow.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (exp.f64 (+.f64 z -15/2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 2) (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 3))))))"]],"rules":[["egg-rr",32],["egg-rr",37]],"time":36.201904296875,"type":"rewrite"},{"count":[[93,90]],"inputs":[["(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64))))) z) (cbrt.f64 4)))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64))))) z) (cbrt.f64 4)))) (*.f64 1/12 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 2) (PI.f64)))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))))) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64)))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64))))))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) 2) (pow.f64 (cbrt.f64 4) 2)) (pow.f64 (/.f64 1 (PI.f64)) 1/6)))))) (pow.f64 z 2)) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 1/12 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 8 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64))))))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 2) (PI.f64)))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))) (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (+.f64 (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 5) (*.f64 (pow.f64 (exp.f64 -15/2) 5) (pow.f64 (sqrt.f64 15/2) 5)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))))))))) (sqrt.f64 (PI.f64)))))) (*.f64 2/3 (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64))))) 2) (pow.f64 (cbrt.f64 4) 2)) (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (PI.f64)) 1/6))))))) (cbrt.f64 4)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 5)) 1/6))))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -15/2) 5) (*.f64 (pow.f64 (sqrt.f64 1/2) 5) (pow.f64 (sqrt.f64 15/2) 5)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))))))))) (sqrt.f64 (PI.f64)))))) (*.f64 2/3 (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64))))) 2) (pow.f64 (cbrt.f64 4) 2)) (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (PI.f64)) 1/6))))))) (cbrt.f64 4)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 5)) 1/6))))) (*.f64 1/108 (/.f64 (pow.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))))))) (pow.f64 z 3)) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64)))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64))))) z) (cbrt.f64 4)))) (*.f64 1/12 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 2) (PI.f64)))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))))) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64)))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64))))))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) 2) (pow.f64 (cbrt.f64 4) 2)) (pow.f64 (/.f64 1 (PI.f64)) 1/6)))))) (pow.f64 z 2)) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64)))))))))","(*.f64 2 (*.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (*.f64 (sqrt.f64 1/2) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (*.f64 (sqrt.f64 1/2) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (*.f64 (sqrt.f64 1/2) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (*.f64 (sqrt.f64 1/2) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 3) (pow.f64 (sqrt.f64 15/2) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) z) (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 3) (pow.f64 (sqrt.f64 15/2) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3)))))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))))))))) (sqrt.f64 (PI.f64))))))) (+.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) z) (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 3) (pow.f64 (sqrt.f64 15/2) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))))))))) (sqrt.f64 (PI.f64))))))) (+.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) z) (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 3) (pow.f64 (sqrt.f64 15/2) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (+.f64 (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2)))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (+.f64 (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2)))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 8 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 8 (*.f64 (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64)))))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64))))))) (pow.f64 z 3)))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) 3) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 (exp.f64 (-.f64 z 15/2)) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) 3) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 (exp.f64 (-.f64 z 15/2)) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) 3) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 (exp.f64 (-.f64 z 15/2)) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) 3) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 (exp.f64 (-.f64 z 15/2)) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) 3) (pow.f64 (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) 3) (pow.f64 (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) 3) (pow.f64 (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) 3) (pow.f64 (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64))))) z) (cbrt.f64 4)))))","(fma.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 2 (*.f64 (exp.f64 -15) (*.f64 15/2 (PI.f64)))))) (/.f64 (*.f64 (fma.f64 8 (*.f64 (exp.f64 -15) (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 15/2 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64)))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64))))))))) (sqrt.f64 (PI.f64))))) z) (cbrt.f64 4))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64))))) z) (cbrt.f64 4)))) (*.f64 1/12 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 2) (PI.f64)))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))))) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64)))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64))))))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) 2) (pow.f64 (cbrt.f64 4) 2)) (pow.f64 (/.f64 1 (PI.f64)) 1/6)))))) (pow.f64 z 2)) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 2 (*.f64 (exp.f64 -15) (*.f64 15/2 (PI.f64))))) (*.f64 (fma.f64 8 (*.f64 (exp.f64 -15) (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 15/2 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64)))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64))))))))) (sqrt.f64 (PI.f64))))) z)) (cbrt.f64 4)) (*.f64 1/12 (/.f64 (*.f64 (+.f64 (fma.f64 8 (*.f64 (exp.f64 -15) (*.f64 (*.f64 (*.f64 (pow.f64 1/2 3/2) (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2)))))) 15/2) (pow.f64 (PI.f64) 3/2))) (*.f64 2 (+.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1/2))) (*.f64 (sqrt.f64 15/2) (PI.f64)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) 2) (PI.f64))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1/2))) (*.f64 (sqrt.f64 15/2) (PI.f64))))))) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64)))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64)))))) (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))))) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 1) (/.f64 (*.f64 (pow.f64 (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -15) (*.f64 15/2 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/4))) (sqrt.f64 (PI.f64))))) 2) (pow.f64 (/.f64 1 (PI.f64)) 1/6)) (pow.f64 (cbrt.f64 4) 2)))))) (*.f64 z z)) (*.f64 (exp.f64 -15) (*.f64 15/4 (PI.f64)))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 1/12 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 8 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64))))))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 2) (PI.f64)))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))) (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (+.f64 (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))))))) (sqrt.f64 (pow.f64 (PI.f64) 3))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 5) (*.f64 (pow.f64 (exp.f64 -15/2) 5) (pow.f64 (sqrt.f64 15/2) 5)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))))))))) (sqrt.f64 (PI.f64)))))) (*.f64 2/3 (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64))))) 2) (pow.f64 (cbrt.f64 4) 2)) (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (PI.f64)) 1/6))))))) (cbrt.f64 4)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 5)) 1/6))))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -15/2) 5) (*.f64 (pow.f64 (sqrt.f64 1/2) 5) (pow.f64 (sqrt.f64 15/2) 5)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))))))))) (sqrt.f64 (PI.f64)))))) (*.f64 2/3 (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64))))) 2) (pow.f64 (cbrt.f64 4) 2)) (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (PI.f64)) 1/6))))))) (cbrt.f64 4)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 5)) 1/6))))) (*.f64 1/108 (/.f64 (pow.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))))))) (pow.f64 z 3)) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64)))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64))))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64))))) z) (cbrt.f64 4)))) (*.f64 1/12 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 2) (PI.f64)))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))))) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64)))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (PI.f64))))))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) 2) (pow.f64 (cbrt.f64 4) 2)) (pow.f64 (/.f64 1 (PI.f64)) 1/6)))))) (pow.f64 z 2)) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (PI.f64)))))))))","(fma.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (sqrt.f64 (PI.f64))) (fma.f64 1/12 (/.f64 (*.f64 (-.f64 (fma.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 2 (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (fma.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (fma.f64 29/225 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 3))))) (fma.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 1/2 (exp.f64 -15/2)) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))))) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (PI.f64))))) (fma.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (fma.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (fma.f64 29/225 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 3))))) (fma.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 1/2 (exp.f64 -15/2)) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))))) (*.f64 1/2 (*.f64 (sqrt.f64 15/2) (PI.f64))))) (*.f64 4 (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1/2))) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64))))))))) (sqrt.f64 (PI.f64))) (fma.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))) (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64)))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64)))))))) (sqrt.f64 (PI.f64))) (fma.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1/2))) (*.f64 (sqrt.f64 15/2) (PI.f64)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) 2) (PI.f64))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1/2))) (*.f64 (sqrt.f64 15/2) (PI.f64))))))) (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64))) (*.f64 8 (*.f64 (pow.f64 1/2 3/2) (*.f64 (*.f64 (*.f64 (exp.f64 -15) 15/2) (fma.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (fma.f64 29/225 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 3))))) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2))) (fma.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))))) (pow.f64 (PI.f64) 3/2))))))) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 1/2 5/2) (*.f64 (exp.f64 -75/2) (pow.f64 15/2 5/2))))) (*.f64 (sqrt.f64 1) (/.f64 (*.f64 (*.f64 (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -15) (*.f64 15/2 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/4))) (sqrt.f64 (PI.f64))))) (+.f64 (fma.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (sqrt.f64 (PI.f64))) (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -15) (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1/2))) 15/2))) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (*.f64 (sqrt.f64 15/4) (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64))))) (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))) (*.f64 2 (*.f64 (pow.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) 2) (PI.f64)))))) (sqrt.f64 (PI.f64))))))) (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (fma.f64 8 (*.f64 (exp.f64 -15) (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 15/2 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (*.f64 (sqrt.f64 15/4) (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64)))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64))))))) (sqrt.f64 (PI.f64)))))) 2) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (PI.f64)) 1/6)))) (pow.f64 (cbrt.f64 4) 2))))) (pow.f64 (pow.f64 (PI.f64) -5) 1/6)) (cbrt.f64 4)))) (fma.f64 1/9 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (exp.f64 -75/2)) (pow.f64 (sqrt.f64 15/4) 5))) (*.f64 (sqrt.f64 1) (/.f64 (*.f64 (*.f64 (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -15) (*.f64 15/2 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/4))) (sqrt.f64 (PI.f64))))) (+.f64 (fma.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (sqrt.f64 (PI.f64))) (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -15) (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1/2))) 15/2))) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (*.f64 (sqrt.f64 15/4) (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64))))) (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))) (*.f64 2 (*.f64 (pow.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) 2) (PI.f64)))))) (sqrt.f64 (PI.f64))))))) (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (fma.f64 8 (*.f64 (exp.f64 -15) (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 15/2 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (*.f64 (sqrt.f64 15/4) (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64)))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64))))))) (sqrt.f64 (PI.f64)))))) 2) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (PI.f64)) 1/6)))) (pow.f64 (cbrt.f64 4) 2))))) (pow.f64 (pow.f64 (PI.f64) -5) 1/6)) (cbrt.f64 4)))) (/.f64 (*.f64 1/108 (pow.f64 (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -15) (*.f64 15/2 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/4))) (sqrt.f64 (PI.f64))))) 3)) (*.f64 (exp.f64 -15) (*.f64 15/4 (PI.f64))))))) (pow.f64 z 3)) (*.f64 (exp.f64 -15) (*.f64 15/4 (PI.f64)))) (fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 2 (*.f64 (exp.f64 -15) (*.f64 15/2 (PI.f64))))) (*.f64 (fma.f64 8 (*.f64 (exp.f64 -15) (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 15/2 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64)))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64))))))))) (sqrt.f64 (PI.f64))))) z)) (cbrt.f64 4)) (*.f64 1/12 (/.f64 (*.f64 (+.f64 (fma.f64 8 (*.f64 (exp.f64 -15) (*.f64 (*.f64 (*.f64 (pow.f64 1/2 3/2) (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2)))))) 15/2) (pow.f64 (PI.f64) 3/2))) (*.f64 2 (+.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1/2))) (*.f64 (sqrt.f64 15/2) (PI.f64)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) 2) (PI.f64))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1/2))) (*.f64 (sqrt.f64 15/2) (PI.f64))))))) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64)))) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (PI.f64)))))) (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))))) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 1) (/.f64 (*.f64 (pow.f64 (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -15) (*.f64 15/2 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/4))) (sqrt.f64 (PI.f64))))) 2) (pow.f64 (/.f64 1 (PI.f64)) 1/6)) (pow.f64 (cbrt.f64 4) 2)))))) (*.f64 z z)) (*.f64 (exp.f64 -15) (*.f64 15/4 (PI.f64))))))))","(*.f64 2 (*.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (*.f64 (sqrt.f64 1/2) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (*.f64 (sqrt.f64 1/2) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (*.f64 (sqrt.f64 1/2) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) (*.f64 (sqrt.f64 1/2) (exp.f64 (-.f64 z 15/2)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))))) (sqrt.f64 (PI.f64))))","(*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)))) (sqrt.f64 (PI.f64))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 3) (pow.f64 (sqrt.f64 15/2) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -45/2) (pow.f64 15/2 3/2))) (pow.f64 (PI.f64) 3/2)))","(+.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) z) (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 3) (pow.f64 (sqrt.f64 15/2) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3)))))","(fma.f64 (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -15) (*.f64 15/2 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) z (*.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -45/2) (pow.f64 15/2 3/2))) (pow.f64 (PI.f64) 3/2))))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))))))))) (sqrt.f64 (PI.f64))))))) (+.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) z) (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 3) (pow.f64 (sqrt.f64 15/2) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))))","(fma.f64 (*.f64 z z) (fma.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (sqrt.f64 (PI.f64))) (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -15) (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1/2))) 15/2))) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (*.f64 (sqrt.f64 15/4) (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64))))) (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))) (*.f64 2 (*.f64 (pow.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) 2) (PI.f64)))))) (sqrt.f64 (PI.f64))))))) (fma.f64 (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -15) (*.f64 15/2 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) z (*.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -45/2) (pow.f64 15/2 3/2))) (pow.f64 (PI.f64) 3/2)))))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64))))))))) (sqrt.f64 (PI.f64))))))) (+.f64 (*.f64 (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (*.f64 (pow.f64 (sqrt.f64 15/2) 2) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) z) (+.f64 (*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 3) (pow.f64 (sqrt.f64 15/2) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (+.f64 (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2)))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (+.f64 (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2)))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 8 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64)))))) (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))))) (sqrt.f64 (PI.f64)))) (+.f64 (*.f64 8 (*.f64 (*.f64 (+.f64 (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (+.f64 (*.f64 29/225 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15)) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 3)))))) (+.f64 (*.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))))))) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 -15/2) 2) (pow.f64 (sqrt.f64 15/2) 2)))) (sqrt.f64 (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (+.f64 (*.f64 4 (*.f64 (exp.f64 -15/2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))))) (*.f64 4 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (sqrt.f64 15/2)))) 2) (PI.f64)))))) (+.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (-.f64 (*.f64 -1 (log.f64 15/2)) 1/15) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (sqrt.f64 (PI.f64))))))) (pow.f64 z 3)))))","(fma.f64 (*.f64 z z) (fma.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (sqrt.f64 (PI.f64))) (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -15) (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1/2))) 15/2))) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (*.f64 (sqrt.f64 15/4) (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64))))) (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))) (*.f64 2 (*.f64 (pow.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) 2) (PI.f64)))))) (sqrt.f64 (PI.f64))))))) (fma.f64 (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -15) (*.f64 15/2 (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))))) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (sqrt.f64 1/2) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)))) (sqrt.f64 (PI.f64))))) z (fma.f64 8 (*.f64 (*.f64 (pow.f64 1/2 3/2) (*.f64 (exp.f64 -45/2) (pow.f64 15/2 3/2))) (pow.f64 (PI.f64) 3/2)) (*.f64 (fma.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (*.f64 (sqrt.f64 15/4) (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (fma.f64 29/225 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 3))))) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2))) (fma.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2)))))) (*.f64 (sqrt.f64 15/2) (PI.f64))))) (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (fma.f64 29/225 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 3))))) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2))) (fma.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2)))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))) (*.f64 4 (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))))) (sqrt.f64 (PI.f64)))) (fma.f64 2 (*.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (*.f64 4 (exp.f64 -15/2)) (*.f64 (*.f64 1/2 (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) (PI.f64))))) (*.f64 (sqrt.f64 1/2) (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1/2))))) (sqrt.f64 (PI.f64))) (fma.f64 8 (*.f64 (*.f64 (fma.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (fma.f64 (exp.f64 -15/2) (*.f64 (sqrt.f64 15/2) (fma.f64 29/225 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (+.f64 86/10125 (*.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 3))))) (fma.f64 1/6 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (*.f64 1/2 (exp.f64 -15/2)) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))))) (*.f64 (*.f64 (pow.f64 1/2 3/2) (exp.f64 -15)) 15/2)) (pow.f64 (PI.f64) 3/2)) (*.f64 2 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 -15/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64))))) (fma.f64 4 (*.f64 (*.f64 (exp.f64 -15/2) 1/2) (*.f64 (fma.f64 (exp.f64 -15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)) (fma.f64 1/2 (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2)) (*.f64 (exp.f64 -15/2) (*.f64 (+.f64 29/225 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 2))) (sqrt.f64 15/2))))) (*.f64 (sqrt.f64 15/2) (PI.f64)))) (*.f64 2 (*.f64 (pow.f64 (*.f64 (exp.f64 -15/2) (+.f64 (sqrt.f64 15/2) (*.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) (sqrt.f64 15/2)))) 2) (PI.f64))))) (*.f64 (+.f64 (+.f64 (neg.f64 (log.f64 15/2)) -1/15) 1) (*.f64 (exp.f64 -15/2) (sqrt.f64 15/2))))) (sqrt.f64 (PI.f64))))))) (pow.f64 z 3)))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) 3) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 (exp.f64 (-.f64 z 15/2)) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (pow.f64 1/2 3/2) (*.f64 (pow.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 3) (pow.f64 (PI.f64) 3/2))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) 3) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 (exp.f64 (-.f64 z 15/2)) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (pow.f64 1/2 3/2) (*.f64 (pow.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 3) (pow.f64 (PI.f64) 3/2))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) 3) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 (exp.f64 (-.f64 z 15/2)) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (pow.f64 1/2 3/2) (*.f64 (pow.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 3) (pow.f64 (PI.f64) 3/2))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z)) 3) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 (exp.f64 (-.f64 z 15/2)) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (pow.f64 1/2 3/2) (*.f64 (pow.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 3) (pow.f64 (PI.f64) 3/2))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) 3) (pow.f64 (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (pow.f64 1/2 3/2) (*.f64 (pow.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 3) (pow.f64 (PI.f64) 3/2))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) 3) (pow.f64 (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (pow.f64 1/2 3/2) (*.f64 (pow.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 3) (pow.f64 (PI.f64) 3/2))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) 3) (pow.f64 (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (pow.f64 1/2 3/2) (*.f64 (pow.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 3) (pow.f64 (PI.f64) 3/2))))","(*.f64 8 (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (pow.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 -1 z) 15/2))) 3) (pow.f64 (exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 -1 z) 15/2)) (+.f64 (*.f64 -1 z) 1/2))) 3))) (sqrt.f64 (pow.f64 (PI.f64) 3))))","(*.f64 8 (*.f64 (pow.f64 1/2 3/2) (*.f64 (pow.f64 (*.f64 (exp.f64 (+.f64 z -15/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) 3) (pow.f64 (PI.f64) 3/2))))"]],"time":138.841064453125,"type":"simplify"},{"compiler":[[87490,73349]],"time":1018.14111328125,"type":"eval"},{"alts":[["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 z -15/2))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 15/2 z)) -2)) (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","fresh",2.028759576907902],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","done",0.4010225706944218],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","done",0.4027138183790941],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","next",0.9992079832843148]],"compiler":[[116,101],[116,101],[111,97],[116,102],[116,101],[116,102]],"count":[[660,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[656,0],"picked":[1,1]}],"min-error":[0.2421875],"time":772.410888671875,"type":"prune"},{"compiler":[[804,694]],"locations":[["(*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2))))",0.98046875,false],["(sqrt.f64 (*.f64 (PI.f64) 2))",1.0,false],["(+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))",1.048794925128352,true],["(-.f64 (-.f64 1 z) 1)",4.5277837444972215,false]],"time":176.054931640625,"type":"localize"},{"count":[[1,12]],"series":[["(+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))","z","-inf",0.22705078125],["(+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))","z","inf",0.3349609375],["(+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))","z","0",0.302978515625]],"time":0.924072265625,"type":"series"},{"count":[[1,95]],"inputs":[["(+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)) (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) 0) (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) (*.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))) (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) (*.f64 0 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)) (/.f64 6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 3147848041806007/2500000000000 (-.f64 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (-.f64 1 z)) (/.f64 -1 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) 2)) (cbrt.f64 (/.f64 (*.f64 -6765203681218851/10000000000000 3147848041806007/2500000000000) (*.f64 (+.f64 -1 z) (+.f64 -2 z)))))) (+.f64 (cbrt.f64 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) (cbrt.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)) 2)) (cbrt.f64 (/.f64 (*.f64 -6765203681218851/10000000000000 3147848041806007/2500000000000) (*.f64 (+.f64 -1 z) (+.f64 -2 z)))))) (+.f64 (cbrt.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z))) (cbrt.f64 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (/.f64 -1 (*.f64 (+.f64 -1 z) (+.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) 2)) (cbrt.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -6765203681218851/10000000000000 (+.f64 -2 z) (*.f64 (-.f64 1 z) -3147848041806007/2500000000000)) (/.f64 1 (*.f64 (+.f64 -1 z) (+.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (cbrt.f64 (-.f64 1 z))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) (+.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (cbrt.f64 (*.f64 (+.f64 -1 z) (-.f64 2 z)))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 -1 z) (-.f64 2 z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -3147848041806007/2500000000000 (cbrt.f64 (pow.f64 (-.f64 1 z) 2))) (*.f64 (-.f64 2 z) (/.f64 6765203681218851/10000000000000 (cbrt.f64 (-.f64 1 z))))) (*.f64 (-.f64 2 z) (cbrt.f64 (pow.f64 (-.f64 1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -3147848041806007/2500000000000 (/.f64 (-.f64 1 z) 6765203681218851/10000000000000)) (-.f64 2 z)) (*.f64 (-.f64 2 z) (/.f64 (-.f64 1 z) 6765203681218851/10000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) (*.f64 (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000) (/.f64 6765203681218851/10000000000000 (cbrt.f64 (-.f64 1 z))))) (*.f64 (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000) (cbrt.f64 (pow.f64 (-.f64 1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 1 z) (*.f64 (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000) 6765203681218851/10000000000000)) (*.f64 (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (-.f64 1 z) 6765203681218851/10000000000000) (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000)) (*.f64 (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000) (/.f64 (-.f64 1 z) 6765203681218851/10000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 -1 z) (*.f64 (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000) -6765203681218851/10000000000000)) (*.f64 (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 3147848041806007/2500000000000 (cbrt.f64 (pow.f64 (-.f64 1 z) 2))) (*.f64 (+.f64 -2 z) (/.f64 6765203681218851/10000000000000 (cbrt.f64 (-.f64 1 z))))) (*.f64 (+.f64 -2 z) (cbrt.f64 (pow.f64 (-.f64 1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -6765203681218851/10000000000000 (+.f64 -2 z) (*.f64 (-.f64 1 z) -3147848041806007/2500000000000)) (*.f64 (+.f64 -1 z) (+.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 3147848041806007/2500000000000 (/.f64 (-.f64 1 z) 6765203681218851/10000000000000)) (+.f64 -2 z)) (*.f64 (+.f64 -2 z) (/.f64 (-.f64 1 z) 6765203681218851/10000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 3147848041806007/2500000000000 (cbrt.f64 (+.f64 -2 z))) (cbrt.f64 (pow.f64 (-.f64 1 z) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -2 z) 2)) (/.f64 6765203681218851/10000000000000 (cbrt.f64 (-.f64 1 z))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -2 z) 2)) (cbrt.f64 (pow.f64 (-.f64 1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 3147848041806007/2500000000000 (cbrt.f64 (+.f64 -2 z))) (-.f64 1 z)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -2 z) 2)) 6765203681218851/10000000000000)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -2 z) 2)) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 3147848041806007/2500000000000 (cbrt.f64 (+.f64 -2 z))) (/.f64 (-.f64 1 z) 6765203681218851/10000000000000)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -2 z) 2)) 1)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -2 z) 2)) (/.f64 (-.f64 1 z) 6765203681218851/10000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 3147848041806007/2500000000000 (cbrt.f64 (+.f64 -2 z))) (+.f64 -1 z)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -2 z) 2)) -6765203681218851/10000000000000)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -2 z) 2)) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 6765203681218851/10000000000000 (cbrt.f64 (-.f64 1 z))) (-.f64 2 z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) -3147848041806007/2500000000000)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 6765203681218851/10000000000000 (cbrt.f64 (-.f64 1 z))) (+.f64 -2 z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) 3147848041806007/2500000000000)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) (+.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 6765203681218851/10000000000000 (cbrt.f64 (-.f64 1 z))) (cbrt.f64 (pow.f64 (+.f64 -2 z) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) (/.f64 3147848041806007/2500000000000 (cbrt.f64 (+.f64 -2 z))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) (cbrt.f64 (pow.f64 (+.f64 -2 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 6765203681218851/10000000000000 (cbrt.f64 (-.f64 1 z))) (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) 1)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -6765203681218851/10000000000000 (cbrt.f64 (pow.f64 (+.f64 -2 z) 2))) (*.f64 (+.f64 -1 z) (/.f64 3147848041806007/2500000000000 (cbrt.f64 (+.f64 -2 z))))) (*.f64 (+.f64 -1 z) (cbrt.f64 (pow.f64 (+.f64 -2 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -6765203681218851/10000000000000 (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000)) (+.f64 -1 z)) (*.f64 (+.f64 -1 z) (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 2 z) (*.f64 (/.f64 (-.f64 1 z) 6765203681218851/10000000000000) -3147848041806007/2500000000000)) (*.f64 (/.f64 (-.f64 1 z) 6765203681218851/10000000000000) (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 -2 z) (*.f64 (/.f64 (-.f64 1 z) 6765203681218851/10000000000000) 3147848041806007/2500000000000)) (*.f64 (/.f64 (-.f64 1 z) 6765203681218851/10000000000000) (+.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 -2 z) 2)) (*.f64 (/.f64 (-.f64 1 z) 6765203681218851/10000000000000) (/.f64 3147848041806007/2500000000000 (cbrt.f64 (+.f64 -2 z))))) (*.f64 (/.f64 (-.f64 1 z) 6765203681218851/10000000000000) (cbrt.f64 (pow.f64 (+.f64 -2 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000) (/.f64 (-.f64 1 z) 6765203681218851/10000000000000)) (*.f64 (/.f64 (-.f64 1 z) 6765203681218851/10000000000000) (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 6765203681218851/10000000000000 (cbrt.f64 (pow.f64 (+.f64 -2 z) 2))) (*.f64 (-.f64 1 z) (/.f64 3147848041806007/2500000000000 (cbrt.f64 (+.f64 -2 z))))) (*.f64 (-.f64 1 z) (cbrt.f64 (pow.f64 (+.f64 -2 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 6765203681218851/10000000000000 (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000)) (-.f64 1 z)) (*.f64 (-.f64 1 z) (/.f64 (+.f64 -2 z) 3147848041806007/2500000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (*.f64 (+.f64 -1 z) (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (-.f64 1 z)) (+.f64 -2 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (-.f64 2 z)) (+.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (+.f64 -2 z)) (-.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (*.f64 (-.f64 1 z) (cbrt.f64 (+.f64 -2 z)))) (cbrt.f64 (pow.f64 (+.f64 -2 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) 1) (*.f64 (+.f64 -1 z) (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (+.f64 -1 z)) (-.f64 2 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 -6765203681218851/10000000000000 (+.f64 -2 z) (*.f64 (-.f64 1 z) -3147848041806007/2500000000000)) (-.f64 1 z)) (-.f64 2 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (-.f64 1 z)) -1) (-.f64 2 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (-.f64 1 z)) (cbrt.f64 (pow.f64 (+.f64 -2 z) 2))) (cbrt.f64 (+.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (-.f64 1 z)) (cbrt.f64 (+.f64 -2 z))) (cbrt.f64 (pow.f64 (+.f64 -2 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (-.f64 1 z)) (+.f64 -8 (pow.f64 z 3))) (/.f64 1 (fma.f64 z (+.f64 z 2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 -6765203681218851/10000000000000 (+.f64 -2 z) (*.f64 (-.f64 1 z) -3147848041806007/2500000000000)) (-.f64 2 z)) (-.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 -6765203681218851/10000000000000 (+.f64 -2 z) (*.f64 (-.f64 1 z) -3147848041806007/2500000000000)) (+.f64 -2 z)) (+.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (-.f64 1 z))) (-.f64 2 z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 3147848041806007/2500000000000 (-.f64 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (+.f64 (/.f64 6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 3147848041806007/2500000000000 (-.f64 2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 -3147848041806007/2500000000000 (+.f64 -1 z) (fma.f64 z 6765203681218851/10000000000000 -6765203681218851/5000000000000)) (*.f64 (+.f64 -1 z) (+.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) (cbrt.f64 (pow.f64 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)) 2)) (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z))) (cbrt.f64 (pow.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) 2)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)) (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3147848041806007/2500000000000 (/.f64 -1 (-.f64 2 z)) (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 6765203681218851/10000000000000 (/.f64 1 (-.f64 1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 3147848041806007/2500000000000) (/.f64 (sqrt.f64 3147848041806007/2500000000000) (+.f64 -2 z)) (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)) 1 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 2 z)) 3147848041806007/2500000000000 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 2 z))) (/.f64 3147848041806007/2500000000000 (cbrt.f64 (pow.f64 (+.f64 -2 z) 2))) (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -3147848041806007/2500000000000 (/.f64 1 (-.f64 2 z)) (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)) 2)) (cbrt.f64 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z))) (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 3147848041806007/2500000000000 (-.f64 2 z)) (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 3147848041806007/2500000000000) (cbrt.f64 (+.f64 -2 z))) (/.f64 (sqrt.f64 3147848041806007/2500000000000) (cbrt.f64 (pow.f64 (+.f64 -2 z) 2))) (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -6765203681218851/10000000000000 (/.f64 1 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) 1 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 6765203681218851/10000000000000) (/.f64 (sqrt.f64 6765203681218851/10000000000000) (-.f64 1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 6765203681218851/10000000000000) (cbrt.f64 (-.f64 1 z))) (/.f64 (sqrt.f64 6765203681218851/10000000000000) (cbrt.f64 (pow.f64 (-.f64 1 z) 2))) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 6765203681218851/10000000000000 (+.f64 -1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 z)) 6765203681218851/10000000000000 (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)) 2)) (cbrt.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z))) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (-.f64 1 z))) (/.f64 6765203681218851/10000000000000 (cbrt.f64 (pow.f64 (-.f64 1 z) 2))) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 3147848041806007/2500000000000) (/.f64 (cbrt.f64 (*.f64 -3147848041806007/2500000000000 -3147848041806007/2500000000000)) (+.f64 -2 z)) (/.f64 -6765203681218851/10000000000000 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 6765203681218851/10000000000000) (/.f64 (cbrt.f64 (*.f64 -6765203681218851/10000000000000 -6765203681218851/10000000000000)) (-.f64 1 z)) (/.f64 -3147848041806007/2500000000000 (-.f64 2 z)))))))"]],"rules":[["egg-rr",95]],"time":29.60302734375,"type":"rewrite"},{"count":[[107,109]],"inputs":[["469507597606837/10000000000000","(+.f64 469507597606837/10000000000000 (*.f64 904338909853211/2500000000000 z))","(+.f64 (*.f64 2076511864126339/4000000000000 (pow.f64 z 2)) (+.f64 469507597606837/10000000000000 (*.f64 904338909853211/2500000000000 z)))","(+.f64 (*.f64 2076511864126339/4000000000000 (pow.f64 z 2)) (+.f64 (*.f64 23912966683069397/40000000000000 (pow.f64 z 3)) (+.f64 469507597606837/10000000000000 (*.f64 904338909853211/2500000000000 z))))","(/.f64 5826188486005177/10000000000000 z)","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (*.f64 5826188486005177/10000000000000 (/.f64 1 z)))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)) (*.f64 43600364987677261/10000000000000 (/.f64 1 (pow.f64 z 3)))))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 93965933656573373/10000000000000 (/.f64 1 (pow.f64 z 4))) (+.f64 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)) (*.f64 43600364987677261/10000000000000 (/.f64 1 (pow.f64 z 3))))))","(/.f64 5826188486005177/10000000000000 z)","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (*.f64 5826188486005177/10000000000000 (/.f64 1 z)))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)) (*.f64 43600364987677261/10000000000000 (/.f64 1 (pow.f64 z 3)))))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 93965933656573373/10000000000000 (/.f64 1 (pow.f64 z 4))) (+.f64 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)) (*.f64 43600364987677261/10000000000000 (/.f64 1 (pow.f64 z 3))))))"]],"method":["egg-herbie"],"outputs":[["469507597606837/10000000000000","(+.f64 469507597606837/10000000000000 (*.f64 904338909853211/2500000000000 z))","(fma.f64 z 904338909853211/2500000000000 469507597606837/10000000000000)","(+.f64 (*.f64 2076511864126339/4000000000000 (pow.f64 z 2)) (+.f64 469507597606837/10000000000000 (*.f64 904338909853211/2500000000000 z)))","(+.f64 (*.f64 z (+.f64 (*.f64 z 2076511864126339/4000000000000) 904338909853211/2500000000000)) 469507597606837/10000000000000)","(+.f64 (*.f64 2076511864126339/4000000000000 (pow.f64 z 2)) (+.f64 (*.f64 23912966683069397/40000000000000 (pow.f64 z 3)) (+.f64 469507597606837/10000000000000 (*.f64 904338909853211/2500000000000 z))))","(+.f64 (*.f64 (*.f64 z z) (+.f64 (*.f64 z 23912966683069397/40000000000000) 2076511864126339/4000000000000)) (fma.f64 z 904338909853211/2500000000000 469507597606837/10000000000000))","(/.f64 5826188486005177/10000000000000 z)","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (*.f64 5826188486005177/10000000000000 (/.f64 1 z)))","(/.f64 (+.f64 5826188486005177/10000000000000 (/.f64 3683516130645841/2000000000000 z)) z)","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)) (*.f64 43600364987677261/10000000000000 (/.f64 1 (pow.f64 z 3)))))","(+.f64 (*.f64 (pow.f64 z -2) (+.f64 3683516130645841/2000000000000 (/.f64 43600364987677261/10000000000000 z))) (/.f64 5826188486005177/10000000000000 z))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 93965933656573373/10000000000000 (/.f64 1 (pow.f64 z 4))) (+.f64 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)) (*.f64 43600364987677261/10000000000000 (/.f64 1 (pow.f64 z 3))))))","(+.f64 (fma.f64 (pow.f64 z -4) 93965933656573373/10000000000000 (/.f64 5826188486005177/10000000000000 z)) (*.f64 (pow.f64 z -2) (+.f64 3683516130645841/2000000000000 (/.f64 43600364987677261/10000000000000 z))))","(/.f64 5826188486005177/10000000000000 z)","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (*.f64 5826188486005177/10000000000000 (/.f64 1 z)))","(/.f64 (+.f64 5826188486005177/10000000000000 (/.f64 3683516130645841/2000000000000 z)) z)","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)) (*.f64 43600364987677261/10000000000000 (/.f64 1 (pow.f64 z 3)))))","(+.f64 (*.f64 (pow.f64 z -2) (+.f64 3683516130645841/2000000000000 (/.f64 43600364987677261/10000000000000 z))) (/.f64 5826188486005177/10000000000000 z))","(+.f64 (*.f64 3683516130645841/2000000000000 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 93965933656573373/10000000000000 (/.f64 1 (pow.f64 z 4))) (+.f64 (*.f64 5826188486005177/10000000000000 (/.f64 1 z)) (*.f64 43600364987677261/10000000000000 (/.f64 1 (pow.f64 z 3))))))","(+.f64 (fma.f64 (pow.f64 z -4) 93965933656573373/10000000000000 (/.f64 5826188486005177/10000000000000 z)) (*.f64 (pow.f64 z -2) (+.f64 3683516130645841/2000000000000 (/.f64 43600364987677261/10000000000000 z))))"]],"time":74.887939453125,"type":"simplify"},{"compiler":[[89640,74963]],"time":1021.02001953125,"type":"eval"},{"alts":[["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","done",0.4010225706944218],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","done",0.4027138183790941],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000) (/.f64 7713234287776531/10000000000000 (+.f64 (fma.f64 (cbrt.f64 (-.f64 1 z)) (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) -1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","fresh",0.9891104735158728],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) 3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","fresh",0.38185502930532605]],"compiler":[[116,101],[111,97],[123,108],[102,88]],"count":[[748,4]],"kept":[{"done":[2,2],"fresh":[1,0],"new":[744,2],"picked":[1,0]}],"min-error":[0.2421875],"time":716.7041015625,"type":"prune"},{"accuracy":[0.38185502930532605],"baseline":[0.38185502930532605],"branch":[["z",0.38185502930532605,1],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))",0.3818550293053261,1]],"compiler":[[2,1],[124,110],[1021,860]],"count":[[9,1]],"inputs":[["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000) (/.f64 7713234287776531/10000000000000 (+.f64 (fma.f64 (cbrt.f64 (-.f64 1 z)) (cbrt.f64 (pow.f64 (-.f64 1 z) 2)) -1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) 3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 2) (pow.f64 (*.f64 (PI.f64) 2) -1/2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 z -15/2))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 15/2 z)) -2)) (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (+.f64 1 (-.f64 -1 z)) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) 3) 1/3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (neg.f64 (+.f64 0 z)) 15/2) (-.f64 1 (+.f64 z 1/2)))) (exp.f64 (+.f64 (+.f64 0 z) (neg.f64 15/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (-.f64 1 z))) (/.f64 -3147848041806007/2500000000000 (-.f64 2 (+.f64 0 z)))) (/.f64 7713234287776531/10000000000000 (-.f64 1 (+.f64 z -2)))) (/.f64 -883075145810703/5000000000000 (-.f64 1 (+.f64 z -3)))) (/.f64 2501468655737381/200000000000000 (-.f64 1 (+.f64 z -4)))) (/.f64 -3464277381643003/25000000000000000 (-.f64 1 (+.f64 z -5)))) (/.f64 2496092394504893/250000000000000000000 (-.f64 1 (+.f64 z -6)))) (/.f64 3764081837873279/25000000000000000000000 (-.f64 1 (+.f64 z -7))))))","(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))"]],"link":["."],"name":["Jmat.Real.gamma, branch z less than 0.5"],"oracle":[2.0783796936220744],"outputs":[["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) 3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))"]],"time":31.60791015625,"times":[["z",3.8740234375],["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2) (+.f64 (-.f64 (-.f64 1 z) 1) 1/2))) (exp.f64 (neg.f64 (+.f64 (+.f64 (-.f64 (-.f64 1 z) 1) 7) 1/2)))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 9999999999998099/10000000000000000 (/.f64 6765203681218851/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 1))) (/.f64 -3147848041806007/2500000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 2))) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))",6.2099609375]],"type":"regimes"},{"compiler":[[102,88]],"inputs":[["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) 3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 (PI.f64) (sin.f64 (*.f64 (PI.f64) z))) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2)))) 3) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (/.f64 6765203681218851/10000000000000 (-.f64 1 z)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000) (/.f64 7713234287776531/10000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 3))) (/.f64 -883075145810703/5000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 4))) (/.f64 2501468655737381/200000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 5))) (/.f64 -3464277381643003/25000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 6))) (/.f64 2496092394504893/250000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 7))) (/.f64 3764081837873279/25000000000000000000000 (+.f64 (-.f64 (-.f64 1 z) 1) 8)))))","(/.f64 (*.f64 (PI.f64) (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (PI.f64) 2)) (pow.f64 (-.f64 15/2 z) (-.f64 1/2 z))) (exp.f64 (+.f64 z -15/2))) (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (/.f64 -6765203681218851/10000000000000 (+.f64 z -1)) (/.f64 3147848041806007/2500000000000 (+.f64 -2 z))) 9999999999998099/10000000000000000) (/.f64 7713234287776531/10000000000000 (-.f64 1 (+.f64 -2 z)))) (/.f64 -883075145810703/5000000000000 (-.f64 1 (+.f64 z -3)))) (/.f64 2501468655737381/200000000000000 (-.f64 1 (+.f64 z -4)))) (/.f64 -3464277381643003/25000000000000000 (-.f64 1 (+.f64 z -5)))) (/.f64 2496092394504893/250000000000000000000 (-.f64 1 (+.f64 z -6)))) (/.f64 3764081837873279/25000000000000000000000 (-.f64 1 (+.f64 z -7)))))) (sin.f64 (*.f64 (PI.f64) z)))"]],"stop":[["fuel",1]],"time":19.343994140625,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[102,88]],"remove-preprocessing":[[]],"time":33.295166015625,"type":"end"}]