[{"compiler":[[31,24]],"method":["search"],"sampling":[[12,0.17747414901646152,0.6884436769539661,0.13408217402957234],[11,0.13651857616650886,0.7372003112991479,0.12628111253434326],[10,0.10921486093320709,0.795708272513366,0.09507686655342695],[9,0.062408491961832624,0.8737188874656567,0.06387262057251064],[8,0.0,0.9361273794274894,0.06387262057251064],[7,0.0,0.998535871389322,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":352.91796875,"type":"analyze"},{"outcomes":[["body",256,"invalid",137.65966796875,1149],["body",512,"valid",303.805419921875,1136],["body",1024,"valid",1017.19287109375,2270],["body",2048,"valid",5.80615234375,7],["body",256,"valid",618.5859375,4843]],"time":2093.553955078125,"type":"sample"},{"compiler":[[30,23]],"inputs":[["0","1","2"],["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))","(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 F)))) (*.f64 (/.f64 B (sin.f64 F)) (pow.f64 (+.f64 (+.f64 (*.f64 B B) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))","(+.f64 (neg.f64 (*.f64 F (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 x x) 2) (*.f64 2 F)) (neg.f64 (/.f64 1 2)))))","(+.f64 (neg.f64 (*.f64 B (/.f64 1 (tan.f64 x)))) (*.f64 (/.f64 F (sin.f64 x)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 B)) (neg.f64 (/.f64 1 2)))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 F)))) (*.f64 (/.f64 B (sin.f64 F)) (pow.f64 (+.f64 (+.f64 (*.f64 B B) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))","(fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 B B 2)) -1/2) (/.f64 B (sin.f64 F)) (/.f64 (neg.f64 x) (tan.f64 F)))","(+.f64 (neg.f64 (*.f64 F (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 x x) 2) (*.f64 2 F)) (neg.f64 (/.f64 1 2)))))","(fma.f64 (/.f64 x (sin.f64 B)) (pow.f64 (fma.f64 2 F (fma.f64 x x 2)) -1/2) (/.f64 (neg.f64 F) (tan.f64 B)))","(+.f64 (neg.f64 (*.f64 B (/.f64 1 (tan.f64 x)))) (*.f64 (/.f64 F (sin.f64 x)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 B)) (neg.f64 (/.f64 1 2)))))","(fma.f64 (pow.f64 (fma.f64 B 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 x)) (/.f64 (neg.f64 B) (tan.f64 x)))"]],"symmetry":[[]],"time":62.824951171875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))"]],"time":25.607177734375,"type":"simplify"},{"compiler":[[49,32]],"time":0.66796875,"type":"eval"},{"alts":[["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","next",14.475747698456303],["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))","fresh",14.553872698456248]],"compiler":[[22,15],[30,23],[22,15],[30,23]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[14.432778948456244],"time":1.958984375,"type":"prune"},{"compiler":[[62,29]],"locations":[["(/.f64 (neg.f64 x) (tan.f64 B))",0.10546875,true],["(tan.f64 B)",0.21941376953688402,true],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))",7.009242072933158,true],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)",18.315404590794927,true]],"time":20.781005859375,"type":"localize"},{"count":[[4,96]],"series":[["(/.f64 (neg.f64 x) (tan.f64 B))","B","-inf",0.18505859375],["(/.f64 (neg.f64 x) (tan.f64 B))","B","inf",0.158203125],["(/.f64 (neg.f64 x) (tan.f64 B))","B","0",0.278076171875],["(/.f64 (neg.f64 x) (tan.f64 B))","x","-inf",0.305908203125],["(/.f64 (neg.f64 x) (tan.f64 B))","x","inf",0.5869140625],["(/.f64 (neg.f64 x) (tan.f64 B))","x","0",1.080078125],["(tan.f64 B)","B","-inf",0.177001953125],["(tan.f64 B)","B","inf",0.154052734375],["(tan.f64 B)","B","0",0.2080078125],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","x","-inf",4.955078125],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","x","inf",0.673095703125],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","x","0",0.64794921875],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","B","-inf",1.38916015625],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","B","inf",18.06005859375],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","B","0",1.4560546875],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","F","-inf",0.468994140625],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","F","inf",0.489013671875],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","F","0",1.10791015625],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","F","-inf",0.56494140625],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","F","inf",1.19677734375],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","F","0",1.3359375],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","x","-inf",0.89990234375],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","x","inf",1.031005859375],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","x","0",1.030029296875]],"time":38.916015625,"type":"series"},{"count":[[4,174]],"inputs":[["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","(tan.f64 B)","(/.f64 (neg.f64 x) (tan.f64 B))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 0) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (*.f64 0 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) (*.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 0) (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) (*.f64 0 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))) (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 x) (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 x (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) 0) (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 2)) (cbrt.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (neg.f64 F) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (tan.f64 B))) (*.f64 (neg.f64 (sin.f64 B)) x)) (*.f64 (neg.f64 (sin.f64 B)) (neg.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (neg.f64 F) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (tan.f64 B)) (*.f64 (neg.f64 (sin.f64 B)) (neg.f64 x))) (*.f64 (neg.f64 (sin.f64 B)) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (neg.f64 F) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (cbrt.f64 (pow.f64 (tan.f64 B) 2))) (*.f64 (neg.f64 (sin.f64 B)) (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))))) (*.f64 (neg.f64 (sin.f64 B)) (cbrt.f64 (pow.f64 (tan.f64 B) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 F (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (tan.f64 B))) (*.f64 (sin.f64 B) x)) (*.f64 (sin.f64 B) (neg.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 F (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (tan.f64 B)) (*.f64 (sin.f64 B) (neg.f64 x))) (*.f64 (sin.f64 B) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 F (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (cbrt.f64 (pow.f64 (tan.f64 B) 2))) (*.f64 (sin.f64 B) (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))))) (*.f64 (sin.f64 B) (cbrt.f64 (pow.f64 (tan.f64 B) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (sin.f64 B)) (*.f64 (neg.f64 (tan.f64 B)) (*.f64 F (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (*.f64 (neg.f64 (tan.f64 B)) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (neg.f64 (sin.f64 B))) (*.f64 (neg.f64 (tan.f64 B)) (*.f64 (neg.f64 F) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (*.f64 (neg.f64 (tan.f64 B)) (neg.f64 (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))) (sin.f64 B)) (*.f64 (cbrt.f64 (pow.f64 (tan.f64 B) 2)) (*.f64 F (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (*.f64 (cbrt.f64 (pow.f64 (tan.f64 B) 2)) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))) (neg.f64 (sin.f64 B))) (*.f64 (cbrt.f64 (pow.f64 (tan.f64 B) 2)) (*.f64 (neg.f64 F) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (*.f64 (cbrt.f64 (pow.f64 (tan.f64 B) 2)) (neg.f64 (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (sin.f64 B)) (*.f64 (tan.f64 B) (*.f64 F (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (*.f64 (tan.f64 B) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (neg.f64 (sin.f64 B))) (*.f64 (tan.f64 B) (*.f64 (neg.f64 F) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (*.f64 (tan.f64 B) (neg.f64 (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (neg.f64 F) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (tan.f64 B))) (*.f64 (neg.f64 (sin.f64 B)) (neg.f64 x))) (*.f64 (neg.f64 (sin.f64 B)) (neg.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (neg.f64 F) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (tan.f64 B)) (*.f64 (neg.f64 (sin.f64 B)) x)) (*.f64 (neg.f64 (sin.f64 B)) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (neg.f64 F) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (cbrt.f64 (pow.f64 (tan.f64 B) 2))) (*.f64 (neg.f64 (sin.f64 B)) (/.f64 x (cbrt.f64 (tan.f64 B))))) (*.f64 (neg.f64 (sin.f64 B)) (cbrt.f64 (pow.f64 (tan.f64 B) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 F (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (tan.f64 B))) (*.f64 (sin.f64 B) (neg.f64 x))) (*.f64 (sin.f64 B) (neg.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 F (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (tan.f64 B)) (*.f64 (sin.f64 B) x)) (*.f64 (sin.f64 B) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 F (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (cbrt.f64 (pow.f64 (tan.f64 B) 2))) (*.f64 (sin.f64 B) (/.f64 x (cbrt.f64 (tan.f64 B))))) (*.f64 (sin.f64 B) (cbrt.f64 (pow.f64 (tan.f64 B) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 x (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) 2)) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 F (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B)) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (tan.f64 B))) (/.f64 x (cbrt.f64 (pow.f64 (tan.f64 B) 2))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (cbrt.f64 (*.f64 x x)) (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (tan.f64 B) (neg.f64 1/3)) (/.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (tan.f64 B) 2))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (neg.f64 x) (tan.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) 2) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (tan.f64 B)) (neg.f64 x) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) 2) (cbrt.f64 (/.f64 (neg.f64 x) (tan.f64 B))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) 1 (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (neg.f64 x) (tan.f64 B)) 1 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (neg.f64 x) (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 B) (*.f64 (tan.f64 B) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (tan.f64 B) 0) (tan.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 B) (*.f64 0 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (tan.f64 B)) (tan.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (cos.f64 B))) (neg.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 B) (/.f64 1 (cos.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (tan.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 B) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (tan.f64 B)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 B)) (sin.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (tan.f64 B))) (neg.f64 (cbrt.f64 (pow.f64 (tan.f64 B) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 B)) (/.f64 1 (neg.f64 (cos.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 B)) (cbrt.f64 (pow.f64 (tan.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (tan.f64 B) 2)) (cbrt.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 B) (cos.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 B)) (neg.f64 (cos.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (tan.f64 B) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (tan.f64 B) 2)) (cbrt.f64 (sin.f64 B))) (cbrt.f64 (cos.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 B)) (cbrt.f64 (pow.f64 (tan.f64 B) 2))) (cbrt.f64 (cos.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 B) (cbrt.f64 (cos.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (tan.f64 B)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 B)) (*.f64 (neg.f64 (cos.f64 B)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 B)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (tan.f64 B) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (tan.f64 B) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 B)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 B)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (tan.f64 B) 3))))) (#(struct:change #<rule egg-rr> (2) ((x tan.f64 B)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (tan.f64 B)) 0) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 x) (tan.f64 B)) (*.f64 (/.f64 (neg.f64 x) (tan.f64 B)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (neg.f64 x) (tan.f64 B)) 0) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 x) (tan.f64 B)) (*.f64 0 (/.f64 (neg.f64 x) (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (neg.f64 x) (tan.f64 B))) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (neg.f64 x) (tan.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) 2) (cbrt.f64 (/.f64 (neg.f64 x) (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (cbrt.f64 (*.f64 x x)) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (tan.f64 B))) (/.f64 x (cbrt.f64 (pow.f64 (tan.f64 B) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (tan.f64 B)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 -1 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (tan.f64 B) (neg.f64 1/3)) (/.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (tan.f64 B) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (tan.f64 B)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (tan.f64 B) 2))) (cbrt.f64 (/.f64 -1 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (tan.f64 B)) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (tan.f64 B) 2))) (pow.f64 (tan.f64 B) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (tan.f64 B)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (pow.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (neg.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))) (pow.f64 (cbrt.f64 (tan.f64 B)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (tan.f64 B)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (neg.f64 (tan.f64 B))) (*.f64 (tan.f64 B) (neg.f64 x))) (*.f64 (tan.f64 B) (neg.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 (pow.f64 (tan.f64 B) 2))) (*.f64 (tan.f64 B) (/.f64 x (cbrt.f64 (tan.f64 B))))) (*.f64 (tan.f64 B) (cbrt.f64 (pow.f64 (tan.f64 B) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (neg.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))) (cbrt.f64 (pow.f64 (tan.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (tan.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (tan.f64 B))) x) (cbrt.f64 (pow.f64 (tan.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (tan.f64 B) (neg.f64 1/3)) (neg.f64 x)) (cbrt.f64 (pow.f64 (tan.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (neg.f64 x) (tan.f64 B))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (pow.f64 (tan.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) 2) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) 2) (cbrt.f64 x)) (cbrt.f64 (neg.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (tan.f64 B)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 x (cbrt.f64 (tan.f64 B)))) (cbrt.f64 (pow.f64 (tan.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) 2)) (cbrt.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) 2)) (cbrt.f64 (neg.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 x (cbrt.f64 (pow.f64 (tan.f64 B) 2)))) (cbrt.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))) 1) (cbrt.f64 (pow.f64 (tan.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (tan.f64 B) 2))) (cbrt.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (neg.f64 (cbrt.f64 (pow.f64 (tan.f64 B) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (sin.f64 B)) (/.f64 1 (cos.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))) (pow.f64 (cbrt.f64 (cbrt.f64 (tan.f64 B))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (tan.f64 B))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))) 1) (cbrt.f64 (pow.f64 (tan.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (tan.f64 B)) (*.f64 (tan.f64 B) x)) (pow.f64 (tan.f64 B) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (neg.f64 x) (tan.f64 B)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (neg.f64 x) (tan.f64 B))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (neg.f64 x) (tan.f64 B))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (neg.f64 x) (tan.f64 B))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (neg.f64 x) (tan.f64 B)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 x (tan.f64 B)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (neg.f64 x) (tan.f64 B)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 (neg.f64 x) (tan.f64 B)))))))"]],"rules":[["egg-rr",62],["egg-rr",32],["egg-rr",61],["egg-rr",19]],"time":41.2158203125,"type":"rewrite"},{"count":[[270,286]],"inputs":[["(sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 3/2 (*.f64 (pow.f64 x 2) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -5/2 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7))))) (+.f64 (*.f64 3/2 (*.f64 (pow.f64 x 2) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x))))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (pow.f64 F 2) 2)) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (pow.f64 F 2) 2)) x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (pow.f64 F 2) 2)) x)) (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 -1/384 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (*.f64 -1/64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (pow.f64 x 3)))))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2)) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2)) x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2)) x)) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 1/64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (*.f64 1/384 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (pow.f64 x 3))))))","(sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (pow.f64 F 2))) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (pow.f64 F 2))) (+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (*.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (pow.f64 F 4)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (pow.f64 F 2))) (+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (+.f64 (*.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (pow.f64 F 4))) (*.f64 -5/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 7))) (pow.f64 F 6))))))","(/.f64 1 F)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (/.f64 1 F))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7))) (+.f64 (*.f64 -1/48 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (/.f64 1 F)))))))","(/.f64 -1 F)","(-.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (pow.f64 F 5)))) (/.f64 1 F))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)) (+.f64 (*.f64 -1/6 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)) (*.f64 -1/48 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)))) (pow.f64 F 7))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (pow.f64 F 5))))) (/.f64 1 F))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B)))) (+.f64 (*.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (/.f64 (pow.f64 F 5) (sin.f64 B)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(/.f64 1 (sin.f64 B))","(+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (/.f64 1 (sin.f64 B)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (*.f64 (sin.f64 B) (pow.f64 F 4))))))))","(/.f64 -1 (sin.f64 B))","(-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))) (/.f64 1 (sin.f64 B)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))) (/.f64 1 (sin.f64 B)))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)) B)","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B)))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)))) (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))) (pow.f64 B 3)))))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F))) (+.f64 (*.f64 1/720 F) (*.f64 -1/5040 F))))) (+.f64 (*.f64 17/315 x) (+.f64 (*.f64 -2/45 x) (*.f64 -1/3 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)))))) (pow.f64 B 5)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)))) (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))) (pow.f64 B 3))))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x) (*.f64 3/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 2)) (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5)))))))","(+.f64 (*.f64 -5/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 3)) (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7))))) (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x) (*.f64 3/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 2)) (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) F) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) F) (sin.f64 B)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 F (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) F) (sin.f64 B)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 F (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 F (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) F) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 F (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2))))) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (*.f64 F (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 F (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2))))) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","B","(+.f64 (*.f64 1/3 (pow.f64 B 3)) B)","(+.f64 (*.f64 1/3 (pow.f64 B 3)) (+.f64 (*.f64 2/15 (pow.f64 B 5)) B))","(+.f64 (*.f64 1/3 (pow.f64 B 3)) (+.f64 (*.f64 2/15 (pow.f64 B 5)) (+.f64 (*.f64 17/315 (pow.f64 B 7)) B)))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 x B))","(+.f64 (*.f64 -1 (/.f64 x B)) (*.f64 1/3 (*.f64 B x)))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 1/3 (*.f64 B x)) (*.f64 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)) (pow.f64 B 3))))","(+.f64 (*.f64 (+.f64 (*.f64 17/315 x) (+.f64 (*.f64 -2/45 x) (*.f64 -1/3 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))))) (pow.f64 B 5)) (+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 1/3 (*.f64 B x)) (*.f64 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)) (pow.f64 B 3)))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))","(sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 (neg.f64 x) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 3/2 (*.f64 (pow.f64 x 2) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))","(+.f64 (*.f64 (neg.f64 x) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) (fma.f64 3/2 (*.f64 (*.f64 x x) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -5))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -5/2 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7))))) (+.f64 (*.f64 3/2 (*.f64 (pow.f64 x 2) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))))","(+.f64 (*.f64 (neg.f64 x) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) (fma.f64 -5/2 (*.f64 (pow.f64 x 3) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -7))) (fma.f64 3/2 (*.f64 (*.f64 x x) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -5))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x))))))","(pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x)))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (pow.f64 F 2) 2)) x)))","(+.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (+.f64 (*.f64 F F) 2))) x))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (pow.f64 F 2) 2)) x))))","(+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2) 3/32)) (*.f64 x x)) (+.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (+.f64 (*.f64 F F) 2))) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (pow.f64 F 2) 2)) x)) (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 -1/384 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (*.f64 -1/64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (pow.f64 x 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2) 3/32)) (*.f64 x x)) (+.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (+.f64 (*.f64 F F) 2)) x) (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (fma.f64 -1/48 (pow.f64 (+.f64 (*.f64 F F) 2) 3) (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 3) -7/384))) (pow.f64 x 3)))))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2))))","(pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2)))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2)) x)))","(+.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) (+.f64 (*.f64 F F) 2))) x))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2)) x))))","(+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2) 3/32)) (*.f64 x x)) (+.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) (+.f64 (*.f64 F F) 2))) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2)) x)) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 1/64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (*.f64 1/384 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (pow.f64 x 3))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2) 3/32)) (*.f64 x x)) (+.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) (+.f64 (*.f64 F F) 2)) x) (neg.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) (fma.f64 1/48 (pow.f64 (+.f64 (*.f64 F F) 2) 3) (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 3) 7/384))) (pow.f64 x 3))))))","(sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (pow.f64 F 2))) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) -3)) (*.f64 F F)) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (pow.f64 F 2))) (+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (*.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (pow.f64 F 4)))))","(+.f64 (fma.f64 -1/2 (*.f64 (sqrt.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) -3)) (*.f64 F F)) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))))) (*.f64 3/8 (*.f64 (sqrt.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) -5)) (pow.f64 F 4))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (pow.f64 F 2))) (+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (+.f64 (*.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (pow.f64 F 4))) (*.f64 -5/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 7))) (pow.f64 F 6))))))","(+.f64 (fma.f64 -1/2 (*.f64 (sqrt.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) -3)) (*.f64 F F)) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))))) (fma.f64 3/8 (*.f64 (sqrt.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) -5)) (pow.f64 F 4)) (*.f64 -5/16 (*.f64 (sqrt.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) -7)) (pow.f64 F 6)))))","(/.f64 1 F)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(fma.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)) (/.f64 1 F))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (/.f64 1 F))))","(fma.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)) (fma.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5)) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5)) (/.f64 1 F))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7))) (+.f64 (*.f64 -1/48 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (/.f64 1 F)))))))","(fma.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)) (fma.f64 -1/6 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7)) (fma.f64 -1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7)) (fma.f64 -1/48 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7)) (fma.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5)) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5)) (/.f64 1 F)))))))","(/.f64 -1 F)","(-.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)) (/.f64 -1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (pow.f64 F 5)))) (/.f64 1 F))","(+.f64 (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)) (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) 3/8) (pow.f64 F 5)))) (/.f64 -1 F))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)) (+.f64 (*.f64 -1/6 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)) (*.f64 -1/48 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)))) (pow.f64 F 7))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (pow.f64 F 5))))) (/.f64 1 F))","(+.f64 (neg.f64 (/.f64 (fma.f64 -1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) -3/16)) (pow.f64 F 7))) (+.f64 (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)) (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) 3/8) (pow.f64 F 5)))) (/.f64 -1 F)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) -3)) (/.f64 (pow.f64 F 3) (sin.f64 B))) (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B)))) (+.f64 (*.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (/.f64 (pow.f64 F 5) (sin.f64 B)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) -3)) (/.f64 (pow.f64 F 3) (sin.f64 B))) (fma.f64 3/8 (*.f64 (sqrt.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) -5)) (/.f64 (pow.f64 F 5) (sin.f64 B))) (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(/.f64 1 (sin.f64 B))","(+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 1 (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(fma.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (*.f64 F F))) (+.f64 (/.f64 1 (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (/.f64 1 (sin.f64 B)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (*.f64 (sin.f64 B) (pow.f64 F 4))))))))","(fma.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (*.f64 F F))) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (*.f64 (sin.f64 B) (pow.f64 F 4))) (+.f64 (/.f64 1 (sin.f64 B)) (+.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 4)))))))","(/.f64 -1 (sin.f64 B))","(-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B)))","(+.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 -1 (sin.f64 B)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))) (/.f64 1 (sin.f64 B)))","(+.f64 (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (*.f64 F F))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))) (/.f64 -1 (sin.f64 B)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))) (/.f64 1 (sin.f64 B)))","(+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) 3/8) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (*.f64 F F))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))) (/.f64 -1 (sin.f64 B))))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)) B)","(/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (neg.f64 x)) B)","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B)))","(+.f64 (neg.f64 (/.f64 x B)) (fma.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (*.f64 (fma.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x)))))) (*.f64 1/3 x)) B)))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)))) (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))) (pow.f64 B 3)))))","(+.f64 (neg.f64 (/.f64 x B)) (fma.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (fma.f64 (fma.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x)))))) (*.f64 1/3 x)) B (*.f64 (+.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (*.f64 F -7/360))) (*.f64 x 1/45)) (pow.f64 B 3)))))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F))) (+.f64 (*.f64 1/720 F) (*.f64 -1/5040 F))))) (+.f64 (*.f64 17/315 x) (+.f64 (*.f64 -2/45 x) (*.f64 -1/3 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)))))) (pow.f64 B 5)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)))) (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))) (pow.f64 B 3))))))","(+.f64 (neg.f64 (/.f64 x B)) (fma.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (fma.f64 (+.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (fma.f64 1/6 (*.f64 F -7/360) (*.f64 F 1/840)))) (fma.f64 17/315 x (fma.f64 -2/45 x (*.f64 -1/3 (*.f64 x 1/45))))) (pow.f64 B 5) (fma.f64 (fma.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x)))))) (*.f64 1/3 x)) B (*.f64 (+.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (*.f64 F -7/360))) (*.f64 x 1/45)) (pow.f64 B 3))))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (+.f64 2 (*.f64 2 x))))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))) (*.f64 (+.f64 (neg.f64 (/.f64 (cos.f64 B) (sin.f64 B))) (neg.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))) x))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x) (*.f64 3/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 2)) (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5)))))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))) (fma.f64 (+.f64 (neg.f64 (/.f64 (cos.f64 B) (sin.f64 B))) (neg.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))) x (*.f64 3/2 (*.f64 (/.f64 (*.f64 F (*.f64 x x)) (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -5))))))","(+.f64 (*.f64 -5/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 3)) (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7))))) (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x) (*.f64 3/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 2)) (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))))))","(fma.f64 -5/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 3)) (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -7))) (fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))) (fma.f64 (+.f64 (neg.f64 (/.f64 (cos.f64 B) (sin.f64 B))) (neg.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))) x (*.f64 3/2 (*.f64 (/.f64 (*.f64 F (*.f64 x x)) (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -5)))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) F) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) F) (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) F) (sin.f64 B)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 F (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) F) (sin.f64 B)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (+.f64 (pow.f64 F 3) (*.f64 F 2))) (*.f64 (sin.f64 B) x)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) F) (sin.f64 B)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 F (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 F (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) F) (sin.f64 B)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (+.f64 (pow.f64 F 3) (*.f64 F 2))) (*.f64 (sin.f64 B) x)) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (*.f64 F (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2) 3/32))) (*.f64 (sin.f64 B) (*.f64 x x))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) F) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) F) (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 F (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2))))) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(fma.f64 -1/4 (/.f64 (*.f64 F (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) (+.f64 (*.f64 F F) 2))) (*.f64 (sin.f64 B) x)) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) F) (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (*.f64 F (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 F (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2))))) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(fma.f64 -1/4 (/.f64 (*.f64 F (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) (+.f64 (*.f64 F F) 2))) (*.f64 (sin.f64 B) x)) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) (*.f64 F (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2) 3/32))) (*.f64 (sin.f64 B) (*.f64 x x))) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -2))) F) (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","B","(+.f64 (*.f64 1/3 (pow.f64 B 3)) B)","(fma.f64 1/3 (pow.f64 B 3) B)","(+.f64 (*.f64 1/3 (pow.f64 B 3)) (+.f64 (*.f64 2/15 (pow.f64 B 5)) B))","(fma.f64 1/3 (pow.f64 B 3) (fma.f64 2/15 (pow.f64 B 5) B))","(+.f64 (*.f64 1/3 (pow.f64 B 3)) (+.f64 (*.f64 2/15 (pow.f64 B 5)) (+.f64 (*.f64 17/315 (pow.f64 B 7)) B)))","(fma.f64 1/3 (pow.f64 B 3) (fma.f64 2/15 (pow.f64 B 5) (fma.f64 17/315 (pow.f64 B 7) B)))","(/.f64 (sin.f64 B) (cos.f64 B))","(tan.f64 B)","(/.f64 (sin.f64 B) (cos.f64 B))","(tan.f64 B)","(/.f64 (sin.f64 B) (cos.f64 B))","(tan.f64 B)","(/.f64 (sin.f64 B) (cos.f64 B))","(tan.f64 B)","(/.f64 (sin.f64 B) (cos.f64 B))","(tan.f64 B)","(/.f64 (sin.f64 B) (cos.f64 B))","(tan.f64 B)","(/.f64 (sin.f64 B) (cos.f64 B))","(tan.f64 B)","(/.f64 (sin.f64 B) (cos.f64 B))","(tan.f64 B)","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 x B))","(neg.f64 (/.f64 x B))","(+.f64 (*.f64 -1 (/.f64 x B)) (*.f64 1/3 (*.f64 B x)))","(+.f64 (neg.f64 (/.f64 x B)) (*.f64 1/3 (*.f64 B x)))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 1/3 (*.f64 B x)) (*.f64 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)) (pow.f64 B 3))))","(+.f64 (neg.f64 (/.f64 x B)) (fma.f64 1/3 (*.f64 B x) (*.f64 (*.f64 x 1/45) (pow.f64 B 3))))","(+.f64 (*.f64 (+.f64 (*.f64 17/315 x) (+.f64 (*.f64 -2/45 x) (*.f64 -1/3 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))))) (pow.f64 B 5)) (+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 1/3 (*.f64 B x)) (*.f64 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)) (pow.f64 B 3)))))","(fma.f64 (fma.f64 17/315 x (fma.f64 -2/45 x (*.f64 -1/3 (*.f64 x 1/45)))) (pow.f64 B 5) (+.f64 (neg.f64 (/.f64 x B)) (fma.f64 1/3 (*.f64 B x) (*.f64 (*.f64 x 1/45) (pow.f64 B 3)))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))"]],"time":288.80908203125,"type":"simplify"},{"compiler":[[9475,5198]],"time":97.615966796875,"type":"eval"},{"alts":[["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (*.f64 (/.f64 -1 (tan.f64 B)) x))","fresh",14.546060198456248],["(/.f64 (-.f64 (*.f64 (*.f64 F (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (tan.f64 B)) (*.f64 (sin.f64 B) x)) (*.f64 (sin.f64 B) (tan.f64 B)))","fresh",24.416376816516433],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) 3) (/.f64 (neg.f64 x) (tan.f64 B)))","fresh",14.602739007066956],["(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","next",14.503755217993186],["(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))) (*.f64 (+.f64 (neg.f64 (/.f64 (cos.f64 B) (sin.f64 B))) (neg.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))) x))","fresh",14.55158768868781],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (-.f64 (*.f64 0 (tan.f64 B)) (*.f64 (tan.f64 B) x)) (pow.f64 (tan.f64 B) 2)))","fresh",24.24759497695356],["(+.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 -1 (sin.f64 B)))","fresh",32.48400036600159],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (/.f64 (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))) (pow.f64 (cbrt.f64 (cbrt.f64 (tan.f64 B))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (tan.f64 B))) 2) 2)))","fresh",15.05054945218929],["(+.f64 (/.f64 1 (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","fresh",30.782087794442738],["(fma.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 (neg.f64 x) (tan.f64 B)))","fresh",29.187688525144143],["(fma.f64 -1/2 (*.f64 (sqrt.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) -3)) (/.f64 (pow.f64 F 3) (sin.f64 B))) (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","fresh",34.55850737357617],["(fma.f64 (/.f64 F (sin.f64 B)) (/.f64 1 F) (/.f64 (neg.f64 x) (tan.f64 B)))","fresh",35.89082639943648]],"compiler":[[23,16],[28,17],[25,18],[36,26],[39,24],[31,20],[16,11],[39,25],[16,11],[31,20],[41,30],[16,11],[23,16],[28,17],[25,18],[36,26],[39,24],[31,20],[16,11],[39,25],[16,11],[31,20],[41,30],[16,11]],"count":[[288,12]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[286,12],"picked":[1,0]}],"min-error":[0.01171875],"time":90.968017578125,"type":"prune"},{"compiler":[[127,75]],"locations":[["(*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))",2.9960877334060045,true],["(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))",4.179782407377764,true],["(cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2)))",18.269235715975686,true],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)",18.315404590794927,false]],"time":41.135986328125,"type":"localize"},{"count":[[3,68]],"series":[["(*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))","x","-inf",0.72900390625],["(*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))","x","inf",0.717041015625],["(*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))","x","0",0.409912109375],["(*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))","B","-inf",0.196044921875],["(*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))","B","inf",0.199951171875],["(*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))","B","0",0.455810546875],["(*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))","F","-inf",0.904052734375],["(*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))","F","inf",1.570068359375],["(*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))","F","0",1.237060546875],["(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","x","-inf",2.0859375],["(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","x","inf",2.330810546875],["(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","x","0",3.0810546875],["(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","B","-inf",0.6220703125],["(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","B","inf",11.15380859375],["(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","B","0",1.217041015625],["(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","F","-inf",0.922119140625],["(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","F","inf",1.001953125],["(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","F","0",2.051025390625],["(cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2)))","F","-inf",0.405029296875],["(cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2)))","F","inf",0.662841796875],["(cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2)))","F","0",1.9501953125],["(cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2)))","x","-inf",0.638916015625],["(cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2)))","x","inf",0.93115234375],["(cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2)))","x","0",1.319091796875]],"time":37.4560546875,"type":"series"},{"count":[[3,143]],"inputs":[["(cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2)))","(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","(*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3) (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3) 0) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3) (*.f64 0 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3) (/.f64 0 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))) (neg.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3))) (cbrt.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3))) (cbrt.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2 (/.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (/.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1/4 (/.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1/2 (/.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1/2 (/.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 4 (/.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (cbrt.f64 (neg.f64 (fma.f64 x 2 (fma.f64 F F 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 x 2 (fma.f64 F F 2))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 1 (fma.f64 x 2 (fma.f64 F F 2))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) (*.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 0) (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) (*.f64 0 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))) (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 x) (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 x (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) 0) (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))) (pow.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 2/3) (cbrt.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))) (neg.f64 (tan.f64 B))) (*.f64 (sin.f64 B) x)) (*.f64 (sin.f64 B) (neg.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))) (tan.f64 B)) (*.f64 (sin.f64 B) (neg.f64 x))) (*.f64 (sin.f64 B) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))) (pow.f64 (tan.f64 B) 2/3)) (*.f64 (sin.f64 B) (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))))) (*.f64 (sin.f64 B) (pow.f64 (tan.f64 B) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (sin.f64 B)) (*.f64 (neg.f64 (tan.f64 B)) (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))))) (*.f64 (neg.f64 (tan.f64 B)) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))) (sin.f64 B)) (*.f64 (pow.f64 (tan.f64 B) 2/3) (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))))) (*.f64 (pow.f64 (tan.f64 B) 2/3) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (sin.f64 B)) (*.f64 (tan.f64 B) (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))))) (*.f64 (tan.f64 B) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))) (neg.f64 (tan.f64 B))) (*.f64 (sin.f64 B) (neg.f64 x))) (*.f64 (sin.f64 B) (neg.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))) (pow.f64 (tan.f64 B) 2/3)) (*.f64 (sin.f64 B) (/.f64 x (cbrt.f64 (tan.f64 B))))) (*.f64 (sin.f64 B) (pow.f64 (tan.f64 B) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))) (tan.f64 B)) (*.f64 (sin.f64 B) x)) (*.f64 (sin.f64 B) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 x (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) 1 (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) 2) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (/.f64 (*.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2/3) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3))) (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3) (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 x 2/3) (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (neg.f64 x) (tan.f64 B)) 2/3) (cbrt.f64 (/.f64 (neg.f64 x) (tan.f64 B))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (tan.f64 B) -1/3)) (/.f64 x (pow.f64 (tan.f64 B) 2/3)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (tan.f64 B)) (neg.f64 x) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (neg.f64 x) (tan.f64 B))) (pow.f64 (/.f64 (neg.f64 x) (tan.f64 B)) 2/3) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (neg.f64 x) (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (tan.f64 B) -1/3) (/.f64 (neg.f64 x) (pow.f64 (tan.f64 B) 2/3)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (neg.f64 x) (tan.f64 B)) 1 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x (tan.f64 B)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -2))) (/.f64 (neg.f64 x) (tan.f64 B)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (*.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) 0) (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (*.f64 0 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (*.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2/3) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (sin.f64 B))) (pow.f64 (cbrt.f64 (sin.f64 B)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2/3) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 F (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2/3) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3))) (cbrt.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (cbrt.f64 (/.f64 F (sin.f64 B)))) (pow.f64 (/.f64 F (sin.f64 B)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)) (/.f64 F (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 F)) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 F (cbrt.f64 (sin.f64 B))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (pow.f64 (sin.f64 B) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 F (/.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (/.f64 1 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 F)) (/.f64 -1 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (sin.f64 B))) 1) (*.f64 (pow.f64 (sin.f64 B) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (sin.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 F)) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (sin.f64 B))) (pow.f64 (sin.f64 B) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2/3) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3))) (cbrt.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))) (cbrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 F (cbrt.f64 (sin.f64 B)))) (pow.f64 (sin.f64 B) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 F (cbrt.f64 (sin.f64 B))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (pow.f64 (sin.f64 B) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) -1) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 F (/.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (pow.f64 (sin.f64 B) 2/3))) (cbrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 F)) 1) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (sin.f64 B))) 1) (pow.f64 (sin.f64 B) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (*.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2/3) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/3)))) (cbrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 F) (*.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2/3) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (cbrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 F)) (*.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2/3) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (cbrt.f64 (neg.f64 (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (sin.f64 B)))) (neg.f64 (pow.f64 (sin.f64 B) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 F (sin.f64 B)) 3) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 F)) (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 F)) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (neg.f64 F) (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 (neg.f64 F) (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 F (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (neg.f64 (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 F (sin.f64 B)) 3) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))))"]],"rules":[["egg-rr",48],["egg-rr",54],["egg-rr",41]],"time":40.905029296875,"type":"rewrite"},{"count":[[211,244]],"inputs":[["(pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/3)","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 16)) 1/9) x)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/3))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 16)) 1/9) x)) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))) (pow.f64 x 2)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/3))) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/3)))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 16)) 1/9) x)) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))) (pow.f64 x 2)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/3))) (+.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/3) (*.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 13)) 1/9) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))))) (*.f64 -8/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 16)) 1/3)))) (pow.f64 x 3)))))))","(pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3)","(+.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/3) (/.f64 (pow.f64 F 2) (+.f64 (*.f64 2 x) 2)))))","(+.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/3) (/.f64 (pow.f64 F 2) (+.f64 (*.f64 2 x) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) 1) 1/3) (*.f64 (pow.f64 F 4) (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 1/3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 7) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) 1/3))))))))","(+.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/3) (/.f64 (pow.f64 F 2) (+.f64 (*.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) 1) 1/3) (*.f64 (pow.f64 F 6) (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (+.f64 (*.f64 2 x) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (+.f64 (*.f64 2 x) 2)) (pow.f64 (+.f64 2 (*.f64 2 x)) 4)) 1/3) (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (*.f64 1/3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 7))) 1/3))))) (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))))))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) 1) 1/3) (*.f64 (pow.f64 F 4) (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 1/3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 7) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) 1/3)))))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (*.f64 (/.f64 F (sin.f64 B)) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (*.f64 (/.f64 F (sin.f64 B)) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3)))) (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 4)) 1/3))))) (*.f64 -1/3 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2)))))) (pow.f64 F 3)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (*.f64 (/.f64 (+.f64 (*.f64 1/144 (-.f64 (*.f64 24 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (*.f64 12 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2))))) (*.f64 1/72 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (sin.f64 B)) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3)))) (+.f64 (*.f64 1/18 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (*.f64 (sin.f64 B) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))))) (*.f64 1/3 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (/.f64 (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 1/3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 7) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) 1/3))) (sin.f64 B)))))) (pow.f64 F 5)) (+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (*.f64 (/.f64 F (sin.f64 B)) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3)))) (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 4)) 1/3))))) (*.f64 -1/3 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2)))))) (pow.f64 F 3)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)) B)","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B)))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)))) (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))) (pow.f64 B 3)))))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F))) (+.f64 (*.f64 1/720 F) (*.f64 -1/5040 F))))) (+.f64 (*.f64 17/315 x) (+.f64 (*.f64 -2/45 x) (*.f64 -1/3 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)))))) (pow.f64 B 5)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)))) (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))) (pow.f64 B 3))))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (+.f64 (*.f64 -2/3 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/18))) (*.f64 -1/3 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))) x))","(+.f64 (*.f64 (+.f64 (*.f64 7/18 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 53)) 1/18) (/.f64 F (sin.f64 B)))) (*.f64 1/3 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))) F) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))))) (pow.f64 x 2)) (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (+.f64 (*.f64 -2/3 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/18))) (*.f64 -1/3 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))) x)))","(+.f64 (*.f64 (+.f64 (*.f64 7/18 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 53)) 1/18) (/.f64 F (sin.f64 B)))) (*.f64 1/3 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))) F) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))))) (pow.f64 x 2)) (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (+.f64 (*.f64 -2/3 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/18))) (*.f64 -1/3 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))) x) (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 13)) 1/9) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))))) (*.f64 -8/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 16)) 1/3)))) F) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 -1/9 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))) F) (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))) (+.f64 (*.f64 -91/162 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7))))) (*.f64 -7/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 71)) 1/18) (/.f64 F (sin.f64 B))))))) (pow.f64 x 3)))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 F (sin.f64 B)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 F (sin.f64 B))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 (*.f64 (+.f64 (*.f64 1/144 (-.f64 (*.f64 24 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (*.f64 12 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2))))) (*.f64 1/72 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (pow.f64 F 5)) (sin.f64 B))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 F (sin.f64 B)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 (*.f64 (+.f64 (*.f64 1/144 (-.f64 (*.f64 24 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (*.f64 12 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2))))) (*.f64 1/72 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (pow.f64 F 5)) (sin.f64 B))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 (*.f64 (pow.f64 F 7) (-.f64 (*.f64 -1/864 (/.f64 (-.f64 (*.f64 24 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (*.f64 12 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (+.f64 (*.f64 2 x) 2))) (*.f64 73/1296 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 3))))) (sin.f64 B))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 F (sin.f64 B))))))","(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (*.f64 1 (pow.f64 F 2)) 1/3))","(+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (*.f64 1 (pow.f64 F 2)) 1/3)) (*.f64 -1/6 (*.f64 (/.f64 (+.f64 (*.f64 2 x) 2) (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 F 4)) 1/3))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/144 (+.f64 (*.f64 -12 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 24 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)))) (*.f64 1/72 (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 F 10)) 1/3)) (+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (*.f64 1 (pow.f64 F 2)) 1/3)) (*.f64 -1/6 (*.f64 (/.f64 (+.f64 (*.f64 2 x) 2) (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 F 4)) 1/3)))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/144 (+.f64 (*.f64 -12 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 24 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)))) (*.f64 1/72 (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 F 10)) 1/3)) (+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (*.f64 1 (pow.f64 F 2)) 1/3)) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 -1/864 (*.f64 (+.f64 (*.f64 -12 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 24 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (+.f64 (*.f64 2 x) 2))) (+.f64 (*.f64 -1/1296 (pow.f64 (+.f64 (*.f64 2 x) 2) 3)) (*.f64 1/4320 (+.f64 (*.f64 -240 (pow.f64 (+.f64 (*.f64 2 x) 2) 3)) (+.f64 (*.f64 720 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (*.f64 -720 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))))))) (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 F 16)) 1/3)) (*.f64 -1/6 (*.f64 (/.f64 (+.f64 (*.f64 2 x) 2) (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 F 4)) 1/3))))))","(*.f64 (pow.f64 (*.f64 -1 (pow.f64 F 2)) 1/3) (/.f64 1 (sin.f64 B)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 F 4)) 1/3) (/.f64 (+.f64 2 (*.f64 2 x)) (sin.f64 B)))) (*.f64 (pow.f64 (*.f64 -1 (pow.f64 F 2)) 1/3) (/.f64 1 (sin.f64 B))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 F 4)) 1/3) (/.f64 (+.f64 2 (*.f64 2 x)) (sin.f64 B)))) (+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 F 10)) 1/3) (/.f64 (+.f64 (*.f64 1/144 (+.f64 (*.f64 24 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 -12 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)))) (*.f64 1/72 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (sin.f64 B))) (*.f64 (pow.f64 (*.f64 -1 (pow.f64 F 2)) 1/3) (/.f64 1 (sin.f64 B)))))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 F 16)) 1/3) (/.f64 (+.f64 (*.f64 -1/864 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 24 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 -12 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))))) (+.f64 (*.f64 -1/1296 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)) (*.f64 1/4320 (+.f64 (*.f64 -720 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (+.f64 (*.f64 720 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 -240 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))))))) (sin.f64 B))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 F 4)) 1/3) (/.f64 (+.f64 2 (*.f64 2 x)) (sin.f64 B)))) (+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 F 10)) 1/3) (/.f64 (+.f64 (*.f64 1/144 (+.f64 (*.f64 24 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 -12 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)))) (*.f64 1/72 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (sin.f64 B))) (*.f64 (pow.f64 (*.f64 -1 (pow.f64 F 2)) 1/3) (/.f64 1 (sin.f64 B))))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F B))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F B)) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (*.f64 F B))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F B)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (*.f64 (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)) (pow.f64 B 3)))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (*.f64 F B)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F B)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (*.f64 (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)) (pow.f64 B 3)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (*.f64 F B))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F))) (+.f64 (*.f64 1/720 F) (*.f64 -1/5040 F))) (pow.f64 B 5)))))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6))","(*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6))","(*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6))","(*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6))","(*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/6))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7)) 1/6) (/.f64 (*.f64 F x) (sin.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/6)))","(+.f64 (*.f64 7/18 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 13)) 1/6) (/.f64 (*.f64 F (pow.f64 x 2)) (sin.f64 B)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7)) 1/6) (/.f64 (*.f64 F x) (sin.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/6))))","(+.f64 (*.f64 7/18 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 13)) 1/6) (/.f64 (*.f64 F (pow.f64 x 2)) (sin.f64 B)))) (+.f64 (*.f64 -91/162 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 19)) 1/6) (/.f64 (*.f64 F (pow.f64 x 3)) (sin.f64 B)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7)) 1/6) (/.f64 (*.f64 F x) (sin.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/6)))))","(/.f64 (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2))))) (sin.f64 B))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) F) (sin.f64 B)))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/288 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/12 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) F) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/288 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/12 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) F)) (*.f64 (sin.f64 B) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/10368 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 1/36 (+.f64 (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 3/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (*.f64 -3/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (*.f64 -1/144 (*.f64 (+.f64 (pow.f64 F 2) 2) (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))))) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) F)) (*.f64 (sin.f64 B) (pow.f64 x 3))) (+.f64 (*.f64 -1/12 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) F) (sin.f64 B)))))","(/.f64 (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x)))))) (sin.f64 B))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x))))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (/.f64 (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x)))))) (sin.f64 B)))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x))))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/288 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/12 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x))))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (/.f64 (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x)))))) (sin.f64 B))))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x))))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/288 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/12 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x))))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x)))))) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 F (*.f64 (+.f64 (*.f64 1/36 (+.f64 (*.f64 3/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 -3/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (*.f64 1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 1/144 (*.f64 (+.f64 (pow.f64 F 2) 2) (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 1/10368 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x))))))) (*.f64 (sin.f64 B) (pow.f64 x 3)))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/3)","(pow.f64 (+.f64 (*.f64 F F) 2) -1/3)","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 16)) 1/9) x)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/3))","(fma.f64 -2/3 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -16 1/9)) x) (pow.f64 (+.f64 (*.f64 F F) 2) -1/3))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 16)) 1/9) x)) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))) (pow.f64 x 2)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/3))) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/3)))","(fma.f64 -2/3 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -16 1/9)) x) (fma.f64 1/3 (*.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (*.f64 -4/3 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -35 1/9)))) (*.f64 (*.f64 x x) (cbrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2)))) (pow.f64 (+.f64 (*.f64 F F) 2) -1/3)))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 16)) 1/9) x)) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))) (pow.f64 x 2)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/3))) (+.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/3) (*.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 13)) 1/9) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))))) (*.f64 -8/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 16)) 1/3)))) (pow.f64 x 3)))))))","(+.f64 (fma.f64 -2/3 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -16 1/9)) x) (fma.f64 1/3 (*.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (*.f64 -4/3 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -35 1/9)))) (*.f64 (*.f64 x x) (cbrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2)))) (pow.f64 (+.f64 (*.f64 F F) 2) -1/3))) (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2))) (*.f64 (fma.f64 8 (pow.f64 (+.f64 (*.f64 F F) 2) -4) (fma.f64 -4/3 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -13 1/9)) (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (*.f64 -4/3 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -35 1/9))))) (*.f64 -8/27 (cbrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -16))))) (pow.f64 x 3))))","(pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3)","(pow.f64 (fma.f64 2 x 2) -1/3)","(+.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/3) (/.f64 (pow.f64 F 2) (+.f64 (*.f64 2 x) 2)))))","(+.f64 (pow.f64 (fma.f64 2 x 2) -1/3) (*.f64 -1/3 (*.f64 (pow.f64 (fma.f64 2 x 2) -1/3) (/.f64 (*.f64 F F) (fma.f64 2 x 2)))))","(+.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/3) (/.f64 (pow.f64 F 2) (+.f64 (*.f64 2 x) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) 1) 1/3) (*.f64 (pow.f64 F 4) (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 1/3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 7) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) 1/3))))))))","(+.f64 (pow.f64 (fma.f64 2 x 2) -1/3) (fma.f64 -1/3 (*.f64 (pow.f64 (fma.f64 2 x 2) -1/3) (/.f64 (*.f64 F F) (fma.f64 2 x 2))) (*.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 F 4)) (+.f64 (pow.f64 (fma.f64 2 x 2) -3) (*.f64 -1/3 (cbrt.f64 (pow.f64 (fma.f64 2 x 2) (-.f64 -2 7)))))))))","(+.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/3) (/.f64 (pow.f64 F 2) (+.f64 (*.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) 1) 1/3) (*.f64 (pow.f64 F 6) (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (+.f64 (*.f64 2 x) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (+.f64 (*.f64 2 x) 2)) (pow.f64 (+.f64 2 (*.f64 2 x)) 4)) 1/3) (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (*.f64 1/3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 7))) 1/3))))) (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))))))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) 1) 1/3) (*.f64 (pow.f64 F 4) (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 1/3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 7) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) 1/3)))))))))","(+.f64 (pow.f64 (fma.f64 2 x 2) -1/3) (fma.f64 -1/3 (*.f64 (pow.f64 (fma.f64 2 x 2) -1/3) (/.f64 (*.f64 F F) (fma.f64 2 x 2))) (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (fma.f64 2 x 2) 2))) (+.f64 (*.f64 (pow.f64 F 6) (-.f64 (*.f64 1/27 (pow.f64 (fma.f64 2 x 2) -4)) (fma.f64 -2/3 (*.f64 (cbrt.f64 (*.f64 (fma.f64 2 x 2) (pow.f64 (fma.f64 2 x 2) -4))) (+.f64 (pow.f64 (fma.f64 2 x 2) -3) (*.f64 -1/3 (cbrt.f64 (pow.f64 (fma.f64 2 x 2) (-.f64 -2 7)))))) (pow.f64 (fma.f64 2 x 2) -4)))) (*.f64 (pow.f64 F 4) (+.f64 (pow.f64 (fma.f64 2 x 2) -3) (*.f64 -1/3 (cbrt.f64 (pow.f64 (fma.f64 2 x 2) (-.f64 -2 7))))))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (*.f64 (/.f64 F (sin.f64 B)) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 2 x 2) -1/3)) (/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (*.f64 (/.f64 F (sin.f64 B)) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3)))) (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 4)) 1/3))))) (*.f64 -1/3 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2)))))) (pow.f64 F 3)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(fma.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 2 x 2) -1/3)) (fma.f64 (fma.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (*.f64 (/.f64 1 (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 2 x 2) -4)))) (/.f64 (*.f64 -1/3 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2)))) (*.f64 (sin.f64 B) (fma.f64 2 x 2)))) (pow.f64 F 3) (/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))))","(+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (*.f64 (/.f64 (+.f64 (*.f64 1/144 (-.f64 (*.f64 24 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (*.f64 12 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2))))) (*.f64 1/72 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (sin.f64 B)) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3)))) (+.f64 (*.f64 1/18 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (*.f64 (sin.f64 B) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))))) (*.f64 1/3 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (/.f64 (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 1/3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 7) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) 1/3))) (sin.f64 B)))))) (pow.f64 F 5)) (+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (*.f64 (/.f64 F (sin.f64 B)) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)) 1/3)))) (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (sqrt.f64 1) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 4)) 1/3))))) (*.f64 -1/3 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2)))))) (pow.f64 F 3)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(fma.f64 (fma.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (*.f64 (/.f64 (fma.f64 1/144 (*.f64 (pow.f64 (fma.f64 2 x 2) -2) (-.f64 24 12)) (*.f64 1/72 (pow.f64 (fma.f64 2 x 2) -2))) (sin.f64 B)) (pow.f64 (fma.f64 2 x 2) -1/3)) (fma.f64 1/18 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (*.f64 (sin.f64 B) (pow.f64 (fma.f64 2 x 2) 2))) (/.f64 (*.f64 (*.f64 1/3 (sqrt.f64 (fma.f64 2 x 2))) (+.f64 (pow.f64 (fma.f64 2 x 2) -3) (*.f64 -1/3 (cbrt.f64 (pow.f64 (fma.f64 2 x 2) (-.f64 -2 7)))))) (sin.f64 B)))) (pow.f64 F 5) (fma.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 2 x 2) -1/3)) (fma.f64 (fma.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (*.f64 (/.f64 1 (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 2 x 2) -4)))) (/.f64 (*.f64 -1/3 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2)))) (*.f64 (sin.f64 B) (fma.f64 2 x 2)))) (pow.f64 F 3) (/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B)))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)) B)","(/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x)) B)","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B)))","(+.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x)) B) (*.f64 (fma.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 1/3 x)) B))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)))) (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))) (pow.f64 B 3)))))","(+.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x)) B) (fma.f64 (fma.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 1/3 x)) B (*.f64 (-.f64 (*.f64 x 1/45) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (*.f64 F -7/360))) (pow.f64 B 3))))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F))) (+.f64 (*.f64 1/720 F) (*.f64 -1/5040 F))))) (+.f64 (*.f64 17/315 x) (+.f64 (*.f64 -2/45 x) (*.f64 -1/3 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)))))) (pow.f64 B 5)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)))) (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))) (pow.f64 B 3))))))","(+.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x)) B) (fma.f64 (-.f64 (+.f64 (*.f64 x (+.f64 17/315 -2/45)) (*.f64 -1/3 (*.f64 x 1/45))) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (fma.f64 1/6 (*.f64 F -7/360) (*.f64 F 1/840)))) (pow.f64 B 5) (fma.f64 (fma.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 1/3 x)) B (*.f64 (-.f64 (*.f64 x 1/45) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (*.f64 F -7/360))) (pow.f64 B 3)))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","(*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (+.f64 (*.f64 -2/3 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/18))) (*.f64 -1/3 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))) x))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))) (*.f64 (-.f64 (fma.f64 -2/3 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -35 1/18))) (*.f64 (/.f64 (*.f64 -1/3 F) (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3)))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(+.f64 (*.f64 (+.f64 (*.f64 7/18 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 53)) 1/18) (/.f64 F (sin.f64 B)))) (*.f64 1/3 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))) F) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))))) (pow.f64 x 2)) (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (+.f64 (*.f64 -2/3 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/18))) (*.f64 -1/3 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))) x)))","(fma.f64 (fma.f64 7/18 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -5))) (fma.f64 2/9 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -53 1/18)) (/.f64 F (sin.f64 B))) (/.f64 (*.f64 1/3 (*.f64 (*.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (*.f64 -4/3 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -35 1/9)))) F) (hypot.f64 (sqrt.f64 2) F))) (sin.f64 B)))) (*.f64 x x) (fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))) (*.f64 (-.f64 (fma.f64 -2/3 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -35 1/18))) (*.f64 (/.f64 (*.f64 -1/3 F) (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3)))) (/.f64 (cos.f64 B) (sin.f64 B))) x)))","(+.f64 (*.f64 (+.f64 (*.f64 7/18 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 53)) 1/18) (/.f64 F (sin.f64 B)))) (*.f64 1/3 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))) F) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))))) (pow.f64 x 2)) (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (+.f64 (*.f64 -2/3 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/18))) (*.f64 -1/3 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))) x) (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 13)) 1/9) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))))) (*.f64 -8/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 16)) 1/3)))) F) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 -1/9 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 35)) 1/9))) F) (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))) (+.f64 (*.f64 -91/162 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7))))) (*.f64 -7/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 71)) 1/18) (/.f64 F (sin.f64 B))))))) (pow.f64 x 3)))))","(fma.f64 (fma.f64 7/18 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -5))) (fma.f64 2/9 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -53 1/18)) (/.f64 F (sin.f64 B))) (/.f64 (*.f64 1/3 (*.f64 (*.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (*.f64 -4/3 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -35 1/9)))) F) (hypot.f64 (sqrt.f64 2) F))) (sin.f64 B)))) (*.f64 x x) (fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))) (fma.f64 (-.f64 (fma.f64 -2/3 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -35 1/18))) (*.f64 (/.f64 (*.f64 -1/3 F) (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3)))) (/.f64 (cos.f64 B) (sin.f64 B))) x (*.f64 (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 (fma.f64 8 (pow.f64 (+.f64 (*.f64 F F) 2) -4) (fma.f64 -4/3 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -13 1/9)) (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (*.f64 -4/3 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -35 1/9))))) (*.f64 -8/27 (cbrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -16))))) F) (hypot.f64 (sqrt.f64 2) F)) (sin.f64 B)) (fma.f64 -1/9 (/.f64 (*.f64 (*.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (*.f64 -4/3 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -35 1/9)))) F) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)))) (sin.f64 B)) (fma.f64 -91/162 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -7))) (*.f64 (*.f64 -7/27 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -71 1/18))) (/.f64 F (sin.f64 B)))))) (pow.f64 x 3)))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (/.f64 F (sin.f64 B)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 F (sin.f64 B))))","(fma.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (fma.f64 2 x 2)))) (*.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (/.f64 F (sin.f64 B))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 (*.f64 (+.f64 (*.f64 1/144 (-.f64 (*.f64 24 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (*.f64 12 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2))))) (*.f64 1/72 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (pow.f64 F 5)) (sin.f64 B))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 F (sin.f64 B)))))","(fma.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (/.f64 (*.f64 (fma.f64 1/144 (*.f64 (pow.f64 (fma.f64 2 x 2) -2) (-.f64 24 12)) (*.f64 1/72 (pow.f64 (fma.f64 2 x 2) -2))) (pow.f64 F 5)) (sin.f64 B)) (fma.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (fma.f64 2 x 2)))) (*.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (/.f64 F (sin.f64 B)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 (*.f64 (+.f64 (*.f64 1/144 (-.f64 (*.f64 24 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (*.f64 12 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2))))) (*.f64 1/72 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (pow.f64 F 5)) (sin.f64 B))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 (*.f64 (pow.f64 F 7) (-.f64 (*.f64 -1/864 (/.f64 (-.f64 (*.f64 24 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (*.f64 12 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (+.f64 (*.f64 2 x) 2))) (*.f64 73/1296 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 3))))) (sin.f64 B))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) 1/6) (/.f64 F (sin.f64 B))))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (+.f64 (/.f64 (*.f64 (fma.f64 1/144 (*.f64 (pow.f64 (fma.f64 2 x 2) -2) (-.f64 24 12)) (*.f64 1/72 (pow.f64 (fma.f64 2 x 2) -2))) (pow.f64 F 5)) (sin.f64 B)) (/.f64 (*.f64 (pow.f64 F 7) (fma.f64 -1/864 (/.f64 (*.f64 (pow.f64 (fma.f64 2 x 2) -2) (-.f64 24 12)) (fma.f64 2 x 2)) (*.f64 -73/1296 (pow.f64 (fma.f64 2 x 2) -3)))) (sin.f64 B)))) (fma.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (fma.f64 2 x 2)))) (*.f64 (pow.f64 (/.f64 1 (fma.f64 2 x 2)) 1/6) (/.f64 F (sin.f64 B)))))","(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (*.f64 1 (pow.f64 F 2)) 1/3))","(/.f64 (cbrt.f64 (*.f64 F F)) (sin.f64 B))","(+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (*.f64 1 (pow.f64 F 2)) 1/3)) (*.f64 -1/6 (*.f64 (/.f64 (+.f64 (*.f64 2 x) 2) (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 F 4)) 1/3))))","(+.f64 (/.f64 (cbrt.f64 (*.f64 F F)) (sin.f64 B)) (/.f64 (*.f64 -1/6 (*.f64 (fma.f64 2 x 2) (cbrt.f64 (pow.f64 F -4)))) (sin.f64 B)))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/144 (+.f64 (*.f64 -12 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 24 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)))) (*.f64 1/72 (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 F 10)) 1/3)) (+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (*.f64 1 (pow.f64 F 2)) 1/3)) (*.f64 -1/6 (*.f64 (/.f64 (+.f64 (*.f64 2 x) 2) (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 F 4)) 1/3)))))","(+.f64 (/.f64 (+.f64 (*.f64 (fma.f64 1/144 (*.f64 (pow.f64 (fma.f64 2 x 2) 2) (+.f64 24 -12)) (*.f64 1/72 (pow.f64 (fma.f64 2 x 2) 2))) (cbrt.f64 (pow.f64 F -10))) (cbrt.f64 (*.f64 F F))) (sin.f64 B)) (/.f64 (*.f64 -1/6 (*.f64 (fma.f64 2 x 2) (cbrt.f64 (pow.f64 F -4)))) (sin.f64 B)))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 1/144 (+.f64 (*.f64 -12 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 24 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)))) (*.f64 1/72 (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 F 10)) 1/3)) (+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (*.f64 1 (pow.f64 F 2)) 1/3)) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 -1/864 (*.f64 (+.f64 (*.f64 -12 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 24 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (+.f64 (*.f64 2 x) 2))) (+.f64 (*.f64 -1/1296 (pow.f64 (+.f64 (*.f64 2 x) 2) 3)) (*.f64 1/4320 (+.f64 (*.f64 -240 (pow.f64 (+.f64 (*.f64 2 x) 2) 3)) (+.f64 (*.f64 720 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (*.f64 -720 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))))))) (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 F 16)) 1/3)) (*.f64 -1/6 (*.f64 (/.f64 (+.f64 (*.f64 2 x) 2) (sin.f64 B)) (pow.f64 (/.f64 1 (pow.f64 F 4)) 1/3))))))","(+.f64 (/.f64 (+.f64 (*.f64 (fma.f64 1/144 (*.f64 (pow.f64 (fma.f64 2 x 2) 2) (+.f64 24 -12)) (*.f64 1/72 (pow.f64 (fma.f64 2 x 2) 2))) (cbrt.f64 (pow.f64 F -10))) (cbrt.f64 (*.f64 F F))) (sin.f64 B)) (fma.f64 (/.f64 (fma.f64 -1/864 (*.f64 (*.f64 (pow.f64 (fma.f64 2 x 2) 2) (+.f64 24 -12)) (fma.f64 2 x 2)) (fma.f64 -1/1296 (pow.f64 (fma.f64 2 x 2) 3) (*.f64 1/4320 (fma.f64 -720 (pow.f64 (fma.f64 2 x 2) 3) (*.f64 (pow.f64 (fma.f64 2 x 2) 3) (+.f64 720 -240)))))) (sin.f64 B)) (cbrt.f64 (pow.f64 F -16)) (/.f64 (*.f64 -1/6 (*.f64 (fma.f64 2 x 2) (cbrt.f64 (pow.f64 F -4)))) (sin.f64 B))))","(*.f64 (pow.f64 (*.f64 -1 (pow.f64 F 2)) 1/3) (/.f64 1 (sin.f64 B)))","(/.f64 (cbrt.f64 (neg.f64 (*.f64 F F))) (sin.f64 B))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 F 4)) 1/3) (/.f64 (+.f64 2 (*.f64 2 x)) (sin.f64 B)))) (*.f64 (pow.f64 (*.f64 -1 (pow.f64 F 2)) 1/3) (/.f64 1 (sin.f64 B))))","(fma.f64 -1/6 (/.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 F -4))) (fma.f64 2 x 2)) (sin.f64 B)) (/.f64 (cbrt.f64 (neg.f64 (*.f64 F F))) (sin.f64 B)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 F 4)) 1/3) (/.f64 (+.f64 2 (*.f64 2 x)) (sin.f64 B)))) (+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 F 10)) 1/3) (/.f64 (+.f64 (*.f64 1/144 (+.f64 (*.f64 24 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 -12 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)))) (*.f64 1/72 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (sin.f64 B))) (*.f64 (pow.f64 (*.f64 -1 (pow.f64 F 2)) 1/3) (/.f64 1 (sin.f64 B)))))","(fma.f64 -1/6 (/.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 F -4))) (fma.f64 2 x 2)) (sin.f64 B)) (/.f64 (+.f64 (cbrt.f64 (neg.f64 (*.f64 F F))) (*.f64 (cbrt.f64 (neg.f64 (pow.f64 F -10))) (fma.f64 1/144 (*.f64 (pow.f64 (fma.f64 2 x 2) 2) (+.f64 24 -12)) (*.f64 1/72 (pow.f64 (fma.f64 2 x 2) 2))))) (sin.f64 B)))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 F 16)) 1/3) (/.f64 (+.f64 (*.f64 -1/864 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 24 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 -12 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))))) (+.f64 (*.f64 -1/1296 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)) (*.f64 1/4320 (+.f64 (*.f64 -720 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (+.f64 (*.f64 720 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 -240 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))))))) (sin.f64 B))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 F 4)) 1/3) (/.f64 (+.f64 2 (*.f64 2 x)) (sin.f64 B)))) (+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 F 10)) 1/3) (/.f64 (+.f64 (*.f64 1/144 (+.f64 (*.f64 24 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 -12 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)))) (*.f64 1/72 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (sin.f64 B))) (*.f64 (pow.f64 (*.f64 -1 (pow.f64 F 2)) 1/3) (/.f64 1 (sin.f64 B))))))","(fma.f64 (cbrt.f64 (neg.f64 (pow.f64 F -16))) (/.f64 (fma.f64 -1/864 (*.f64 (*.f64 (pow.f64 (fma.f64 2 x 2) 2) (+.f64 24 -12)) (fma.f64 2 x 2)) (fma.f64 -1/1296 (pow.f64 (fma.f64 2 x 2) 3) (*.f64 1/4320 (fma.f64 -720 (pow.f64 (fma.f64 2 x 2) 3) (*.f64 (pow.f64 (fma.f64 2 x 2) 3) (+.f64 720 -240)))))) (sin.f64 B)) (fma.f64 -1/6 (/.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 F -4))) (fma.f64 2 x 2)) (sin.f64 B)) (/.f64 (+.f64 (cbrt.f64 (neg.f64 (*.f64 F F))) (*.f64 (cbrt.f64 (neg.f64 (pow.f64 F -10))) (fma.f64 1/144 (*.f64 (pow.f64 (fma.f64 2 x 2) 2) (+.f64 24 -12)) (*.f64 1/72 (pow.f64 (fma.f64 2 x 2) 2))))) (sin.f64 B))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F B))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (/.f64 F B))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F B)) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (*.f64 F B))))","(fma.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (/.f64 F B) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (*.f64 F B))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F B)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (*.f64 (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)) (pow.f64 B 3)))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (*.f64 F B)))))","(fma.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (/.f64 F B) (-.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (*.f64 F B))) (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (*.f64 (*.f64 F -7/360) (pow.f64 B 3)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F B)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (*.f64 (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)) (pow.f64 B 3)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (*.f64 F B))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F))) (+.f64 (*.f64 1/720 F) (*.f64 -1/5040 F))) (pow.f64 B 5)))))))","(fma.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (/.f64 F B) (-.f64 (fma.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (*.f64 F B)) (*.f64 (neg.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6)) (*.f64 (fma.f64 1/6 (*.f64 F -7/360) (*.f64 F 1/840)) (pow.f64 B 5)))) (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (*.f64 (*.f64 F -7/360) (pow.f64 B 3)))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))) 1/6))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))) 1/6) (/.f64 F (sin.f64 B)))","(*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/6))","(*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)) 1/6))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7)) 1/6) (/.f64 (*.f64 F x) (sin.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/6)))","(fma.f64 -1/3 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -7 1/6)) (/.f64 (*.f64 F x) (sin.f64 B))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)) 1/6)))","(+.f64 (*.f64 7/18 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 13)) 1/6) (/.f64 (*.f64 F (pow.f64 x 2)) (sin.f64 B)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7)) 1/6) (/.f64 (*.f64 F x) (sin.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/6))))","(fma.f64 7/18 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -13 1/6)) (/.f64 (*.f64 F (*.f64 x x)) (sin.f64 B))) (fma.f64 -1/3 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -7 1/6)) (/.f64 (*.f64 F x) (sin.f64 B))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)) 1/6))))","(+.f64 (*.f64 7/18 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 13)) 1/6) (/.f64 (*.f64 F (pow.f64 x 2)) (sin.f64 B)))) (+.f64 (*.f64 -91/162 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 19)) 1/6) (/.f64 (*.f64 F (pow.f64 x 3)) (sin.f64 B)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7)) 1/6) (/.f64 (*.f64 F x) (sin.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) 1/6)))))","(fma.f64 7/18 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -13 1/6)) (/.f64 (*.f64 F (*.f64 x x)) (sin.f64 B))) (fma.f64 -91/162 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -19 1/6)) (/.f64 (*.f64 F (pow.f64 x 3)) (sin.f64 B))) (fma.f64 -1/3 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -7 1/6)) (/.f64 (*.f64 F x) (sin.f64 B))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)) 1/6)))))","(/.f64 (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2))))) (sin.f64 B))","(/.f64 (*.f64 (pow.f64 (/.f64 1/2 x) 1/6) F) (sin.f64 B))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) F) (sin.f64 B)))","(fma.f64 -1/12 (/.f64 (*.f64 F (*.f64 (pow.f64 (/.f64 1/2 x) 1/6) (+.f64 (*.f64 F F) 2))) (*.f64 (sin.f64 B) x)) (/.f64 (*.f64 (pow.f64 (/.f64 1/2 x) 1/6) F) (sin.f64 B)))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/288 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/12 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) F) (sin.f64 B))))","(+.f64 (fma.f64 -1/12 (/.f64 (*.f64 F (*.f64 (pow.f64 (/.f64 1/2 x) 1/6) (+.f64 (*.f64 F F) 2))) (*.f64 (sin.f64 B) x)) (/.f64 (*.f64 (pow.f64 (/.f64 1/2 x) 1/6) F) (sin.f64 B))) (/.f64 (*.f64 (fma.f64 1/288 (pow.f64 (+.f64 (*.f64 F F) 2) 2) (*.f64 1/12 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2) 1/4))) (*.f64 (pow.f64 (/.f64 1/2 x) 1/6) F)) (*.f64 (sin.f64 B) (*.f64 x x))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/288 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/12 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) F)) (*.f64 (sin.f64 B) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/10368 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 1/36 (+.f64 (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 3/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (*.f64 -3/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (*.f64 -1/144 (*.f64 (+.f64 (pow.f64 F 2) 2) (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))))) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) F)) (*.f64 (sin.f64 B) (pow.f64 x 3))) (+.f64 (*.f64 -1/12 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (/.f64 1 x)) (log.f64 1/2)))) F) (sin.f64 B)))))","(+.f64 (/.f64 (*.f64 (fma.f64 1/288 (pow.f64 (+.f64 (*.f64 F F) 2) 2) (*.f64 1/12 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2) 1/4))) (*.f64 (pow.f64 (/.f64 1/2 x) 1/6) F)) (*.f64 (sin.f64 B) (*.f64 x x))) (+.f64 (/.f64 (*.f64 (fma.f64 -1/10368 (pow.f64 (+.f64 (*.f64 F F) 2) 3) (fma.f64 1/36 (fma.f64 -1/4 (pow.f64 (+.f64 (*.f64 F F) 2) 3) 0) (*.f64 -1/144 (*.f64 (+.f64 (*.f64 F F) 2) (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2) 1/4))))) (*.f64 (pow.f64 (/.f64 1/2 x) 1/6) F)) (*.f64 (sin.f64 B) (pow.f64 x 3))) (fma.f64 -1/12 (/.f64 (*.f64 F (*.f64 (pow.f64 (/.f64 1/2 x) 1/6) (+.f64 (*.f64 F F) 2))) (*.f64 (sin.f64 B) x)) (/.f64 (*.f64 (pow.f64 (/.f64 1/2 x) 1/6) F) (sin.f64 B)))))","(/.f64 (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x)))))) (sin.f64 B))","(/.f64 (*.f64 F (pow.f64 (/.f64 -1/2 (neg.f64 x)) 1/6)) (sin.f64 B))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x))))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (/.f64 (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x)))))) (sin.f64 B)))","(fma.f64 -1/12 (/.f64 (*.f64 F (*.f64 (pow.f64 (/.f64 -1/2 (neg.f64 x)) 1/6) (+.f64 (*.f64 F F) 2))) (*.f64 (sin.f64 B) x)) (/.f64 (*.f64 F (pow.f64 (/.f64 -1/2 (neg.f64 x)) 1/6)) (sin.f64 B)))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x))))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/288 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/12 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x))))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (/.f64 (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x)))))) (sin.f64 B))))","(+.f64 (fma.f64 -1/12 (/.f64 (*.f64 F (*.f64 (pow.f64 (/.f64 -1/2 (neg.f64 x)) 1/6) (+.f64 (*.f64 F F) 2))) (*.f64 (sin.f64 B) x)) (/.f64 (*.f64 F (pow.f64 (/.f64 -1/2 (neg.f64 x)) 1/6)) (sin.f64 B))) (/.f64 (*.f64 (fma.f64 1/288 (pow.f64 (+.f64 (*.f64 F F) 2) 2) (*.f64 1/12 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2) 1/4))) (*.f64 F (pow.f64 (/.f64 -1/2 (neg.f64 x)) 1/6))) (*.f64 (sin.f64 B) (*.f64 x x))))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x))))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/288 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/12 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x))))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 F (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x)))))) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 F (*.f64 (+.f64 (*.f64 1/36 (+.f64 (*.f64 3/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 -3/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (*.f64 1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 1/144 (*.f64 (+.f64 (pow.f64 F 2) 2) (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 -1/4 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 1/10368 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1/2) (log.f64 (/.f64 -1 x))))))) (*.f64 (sin.f64 B) (pow.f64 x 3)))))))","(fma.f64 -1/12 (/.f64 (*.f64 F (*.f64 (pow.f64 (/.f64 -1/2 (neg.f64 x)) 1/6) (+.f64 (*.f64 F F) 2))) (*.f64 (sin.f64 B) x)) (-.f64 (+.f64 (/.f64 (*.f64 (fma.f64 1/288 (pow.f64 (+.f64 (*.f64 F F) 2) 2) (*.f64 1/12 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2) 1/4))) (*.f64 F (pow.f64 (/.f64 -1/2 (neg.f64 x)) 1/6))) (*.f64 (sin.f64 B) (*.f64 x x))) (/.f64 (*.f64 F (pow.f64 (/.f64 -1/2 (neg.f64 x)) 1/6)) (sin.f64 B))) (/.f64 (*.f64 F (*.f64 (fma.f64 1/36 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 3) (+.f64 3/4 -1/2)) (fma.f64 1/144 (*.f64 (+.f64 (*.f64 F F) 2) (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 2) 1/4)) (*.f64 1/10368 (pow.f64 (+.f64 (*.f64 F F) 2) 3)))) (pow.f64 (/.f64 -1/2 (neg.f64 x)) 1/6))) (*.f64 (sin.f64 B) (pow.f64 x 3)))))"]],"time":307.718994140625,"type":"simplify"},{"compiler":[[16570,10731]],"time":181.43798828125,"type":"eval"},{"alts":[["(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","next",10.806638738311381],["(+.f64 (/.f64 1 (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","fresh",30.782087794442738],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (*.f64 (/.f64 -1 (tan.f64 B)) x))","fresh",14.546060198456248],["(/.f64 (-.f64 (*.f64 (*.f64 F (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (tan.f64 B)) (*.f64 (sin.f64 B) x)) (*.f64 (sin.f64 B) (tan.f64 B)))","fresh",24.416376816516433],["(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))) (*.f64 (+.f64 (neg.f64 (/.f64 (cos.f64 B) (sin.f64 B))) (neg.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))) x))","fresh",14.55158768868781],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (-.f64 (*.f64 0 (tan.f64 B)) (*.f64 (tan.f64 B) x)) (pow.f64 (tan.f64 B) 2)))","fresh",24.24759497695356],["(+.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 -1 (sin.f64 B)))","fresh",32.48400036600159],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (/.f64 (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))) (pow.f64 (cbrt.f64 (cbrt.f64 (tan.f64 B))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (tan.f64 B))) 2) 2)))","fresh",15.05054945218929],["(fma.f64 (*.f64 F (/.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (sin.f64 B))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","fresh",11.595612488012549],["(fma.f64 (/.f64 F (sin.f64 B)) (/.f64 1 F) (/.f64 (neg.f64 x) (tan.f64 B)))","fresh",35.89082639943648],["(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (/.f64 1 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))) (/.f64 (neg.f64 x) (tan.f64 B)))","fresh",14.557485247298514]],"compiler":[[25,18],[16,11],[23,16],[28,17],[39,24],[31,20],[16,11],[39,25],[36,26],[16,11],[34,24],[25,18],[16,11],[23,16],[28,17],[39,24],[31,20],[16,11],[39,25],[36,26],[16,11],[34,24]],"count":[[320,11]],"kept":[{"done":[0,0],"fresh":[11,8],"new":[308,3],"picked":[1,0]}],"min-error":[0.01171875],"time":109.06005859375,"type":"prune"},{"compiler":[[109,57]],"locations":[["(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))",0.20703125,true],["(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))",0.21875,true],["(/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))",0.43696643444956096,true],["(sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))",17.783616519583067,true]],"time":24.699951171875,"type":"localize"},{"count":[[4,86]],"series":[["(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","B","-inf",0.7890625],["(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","B","inf",1.919921875],["(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","B","0",1.2080078125],["(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","x","-inf",0.462890625],["(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","x","inf",0.530029296875],["(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","x","0",0.808837890625],["(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","F","-inf",0.623046875],["(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","F","inf",0.694091796875],["(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","F","0",0.697998046875],["(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))","x","-inf",0.58203125],["(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))","x","inf",0.598876953125],["(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))","x","0",0.656982421875],["(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))","F","-inf",0.47216796875],["(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))","F","inf",0.434814453125],["(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))","F","0",0.89501953125],["(/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))","x","-inf",0.2138671875],["(/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))","x","inf",0.302978515625],["(/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))","x","0",0.307861328125],["(/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))","F","-inf",0.23095703125],["(/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))","F","inf",0.3359375],["(/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))","F","0",0.321044921875],["(sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))","x","-inf",0.636962890625],["(sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))","x","inf",0.68896484375],["(sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))","x","0",0.656982421875],["(sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))","F","-inf",0.385009765625],["(sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))","F","inf",0.720947265625],["(sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))","F","0",1.237060546875]],"time":18.029052734375,"type":"series"},{"count":[[4,196]],"inputs":[["(sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))","(/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))","(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 0) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1/2) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3))) (fabs.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (fabs.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 0) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3)) (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) -1) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 0) (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1/2) (*.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 1/2 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 0 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 1) (*.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) -1) (*.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) -1) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (*.f64 1 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 0) (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2)) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3)) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3))) (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))) (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))) (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3)) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2)) 1) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2)) -1) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2)))) -1) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2)))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2)) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2))) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (/.f64 (fma.f64 F F (fma.f64 2 x 2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3)) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3)) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 3) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 0) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 1/2) (*.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (*.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (*.f64 1/2 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (*.f64 0 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 F) (*.f64 (cbrt.f64 (*.f64 F F)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) F)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (/.f64 (*.f64 F F) (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 F F) (fma.f64 F F (fma.f64 2 x 2)))) (cbrt.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 F (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 F (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (cbrt.f64 F)) (cbrt.f64 (*.f64 F F)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (/.f64 F (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) F))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (neg.f64 F)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 F (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) 1) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 F (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) -1) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 F (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 F 3) (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (neg.f64 F)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 F 3) (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 0) (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 1/2) (*.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) (*.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (neg.f64 x) (cos.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (neg.f64 x) (cos.f64 B))) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))) (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))) (*.f64 1/2 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) (*.f64 0 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (/.f64 1 (sin.f64 B))) (*.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (/.f64 1 (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (/.f64 1 (sin.f64 B))) (*.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (/.f64 1 (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 (*.f64 x (cos.f64 B)) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (sin.f64 B)) (/.f64 (*.f64 x (cos.f64 B)) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (sin.f64 B))) (/.f64 (-.f64 (*.f64 x (cos.f64 B)) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 (*.f64 x (cos.f64 B)) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 2)) (cbrt.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B)))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) 2)) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x (cos.f64 B)) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (/.f64 -1 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (/.f64 1 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sin.f64 B)) (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 B) (neg.f64 1/3)) (*.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (pow.f64 (cbrt.f64 (sin.f64 B)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (cbrt.f64 (sin.f64 B))) (pow.f64 (cbrt.f64 (sin.f64 B)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (cbrt.f64 (sin.f64 B))) (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 B))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 B))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (cbrt.f64 (sin.f64 B))) 1) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 B) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (cos.f64 B)) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (cbrt.f64 (sin.f64 B))) (cbrt.f64 (pow.f64 (sin.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 2)) (cbrt.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))))) (cbrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 2)) (cbrt.f64 (-.f64 (*.f64 x (cos.f64 B)) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (cbrt.f64 (neg.f64 (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 B) (neg.f64 1/3)) (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B)))) (cbrt.f64 (pow.f64 (sin.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))) (cbrt.f64 (pow.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) 2))) (cbrt.f64 (pow.f64 (sin.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (pow.f64 (cbrt.f64 (sin.f64 B)) -2)) (cbrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (cbrt.f64 (sin.f64 B))) 1) (cbrt.f64 (pow.f64 (sin.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B)))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 2))) (cbrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (*.f64 x (cos.f64 B)) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 2))) (cbrt.f64 (neg.f64 (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 x (cos.f64 B)) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (sin.f64 B))) (neg.f64 (cbrt.f64 (pow.f64 (sin.f64 B) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) -1) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (cbrt.f64 (sin.f64 B))) 1) (cbrt.f64 (pow.f64 (sin.f64 B) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (cbrt.f64 (sin.f64 B)))) (neg.f64 (cbrt.f64 (pow.f64 (sin.f64 B) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 (*.f64 x (cos.f64 B)) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 (*.f64 x (cos.f64 B)) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (sin.f64 B)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B)) 3))))))"]],"rules":[["egg-rr",51],["egg-rr",30],["egg-rr",67],["egg-rr",48]],"time":47.364990234375,"type":"rewrite"},{"count":[[282,329]],"inputs":[["(sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (pow.f64 F 4)) (sqrt.f64 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))))))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (+.f64 (*.f64 2 x) 2)) (*.f64 (pow.f64 F 6) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2)) (+.f64 (*.f64 2 x) 2))) (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (pow.f64 F 4)) (sqrt.f64 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))))))","(/.f64 1 F)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (/.f64 1 F)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (pow.f64 F 7))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (/.f64 1 F))))","(/.f64 -1 F)","(-.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)))) (/.f64 1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (pow.f64 F 7))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))))) (/.f64 1 F))","(sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (*.f64 -1 (/.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (+.f64 (pow.f64 F 2) 2)))) (pow.f64 x 3)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))))","(/.f64 1 (+.f64 (*.f64 2 x) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 F 2) (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 F 2) (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (+.f64 (/.f64 (pow.f64 F 4) (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (/.f64 1 (+.f64 (*.f64 2 x) 2))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 F 2) (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (+.f64 (/.f64 (pow.f64 F 4) (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 F 6) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))))","(/.f64 1 (pow.f64 F 2))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2)))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2))))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (+.f64 (/.f64 1 (pow.f64 F 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2)) (pow.f64 F 8))))))","(/.f64 1 (pow.f64 F 2))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2)))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2))))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (+.f64 (/.f64 1 (pow.f64 F 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2)) (pow.f64 F 8))))))","(/.f64 1 (+.f64 (pow.f64 F 2) 2))","(+.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) (*.f64 -2 (/.f64 x (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))","(+.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))) (*.f64 4 (/.f64 (pow.f64 x 2) (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))","(+.f64 (*.f64 -8 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (+.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))) (*.f64 4 (/.f64 (pow.f64 x 2) (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))","(/.f64 1/2 x)","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x)))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3) (pow.f64 x 4))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3))))))","(/.f64 1/2 x)","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x)))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3) (pow.f64 x 4))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3))))))","(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 3) (+.f64 (*.f64 2 x) 2)))) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 3) (+.f64 (*.f64 2 x) 2)))) (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (*.f64 (pow.f64 F 5) (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2)))))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 3) (+.f64 (*.f64 2 x) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (+.f64 2 (*.f64 2 x))))) (pow.f64 F 7)))) (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (*.f64 (pow.f64 F 5) (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2))))))))","1","(+.f64 1 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 2))))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (pow.f64 F 4))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 2)))))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)))) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 F 6))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (pow.f64 F 4))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 2))))))","-1","(-.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 2))) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 2))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 4)))) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 2))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 4))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (pow.f64 F 6))))) 1)","(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 F x) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 F x) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 F (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2))) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 F x) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 F (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2))) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 F (*.f64 (pow.f64 x 3) (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (*.f64 -1 (/.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (+.f64 (pow.f64 F 2) 2)))))) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))) (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2)) (pow.f64 F 5)) (sin.f64 B)))) (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(/.f64 (+.f64 1 (*.f64 -1 (*.f64 (cos.f64 B) x))) (sin.f64 B))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)))) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (*.f64 (sin.f64 B) (pow.f64 F 6)))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) 1) (sin.f64 B))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))) (/.f64 1 (sin.f64 B)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))) (/.f64 1 (sin.f64 B)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (*.f64 (sin.f64 B) (pow.f64 F 6)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))) (/.f64 1 (sin.f64 B)))","(*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x) (*.f64 1/2 (*.f64 (/.f64 (*.f64 F (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2))) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2))))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 F (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2))) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 F (*.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (*.f64 -1 (/.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (+.f64 (pow.f64 F 2) 2)))) (pow.f64 x 3))) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(/.f64 (+.f64 (*.f64 -1 x) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) B)","(+.f64 (*.f64 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)))) B) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 x B))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)))) B) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 -1 (/.f64 x B)) (*.f64 (-.f64 (*.f64 -1/24 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 -1 x) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))))))) (*.f64 1/120 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x))))) (pow.f64 B 3)))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)))) B) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (-.f64 (*.f64 1/720 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 -1/24 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x))))) (*.f64 1/120 (+.f64 (*.f64 -1 x) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))))))) (+.f64 (*.f64 1/120 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 -1 x) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))))))) (*.f64 -1/5040 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)))))) (pow.f64 B 5)) (*.f64 (-.f64 (*.f64 -1/24 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 -1 x) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))))))) (*.f64 1/120 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x))))) (pow.f64 B 3))))))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))))","(sqrt.f64 (/.f64 1 (fma.f64 2 x 2)))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))))","(+.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 F F) (fma.f64 2 x 2)) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))))))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (pow.f64 F 4)) (sqrt.f64 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))))))","(+.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (fma.f64 1/2 (*.f64 (-.f64 (/.f64 (/.f64 1 (fma.f64 2 x 2)) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (fma.f64 2 x 2))) 2)) (*.f64 (pow.f64 F 4) (sqrt.f64 (fma.f64 2 x 2)))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 F F) (fma.f64 2 x 2)) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2)))))))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (+.f64 (*.f64 2 x) 2)) (*.f64 (pow.f64 F 6) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2)) (+.f64 (*.f64 2 x) 2))) (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (pow.f64 F 4)) (sqrt.f64 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))))))","(+.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (fma.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 (fma.f64 2 x 2)) (pow.f64 F 6)) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 (/.f64 1 (fma.f64 2 x 2)) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (fma.f64 2 x 2))) 2)) (fma.f64 2 x 2)) (/.f64 1 (pow.f64 (pow.f64 (fma.f64 2 x 2) 2) 2)))) (fma.f64 1/2 (*.f64 (-.f64 (/.f64 (/.f64 1 (fma.f64 2 x 2)) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (fma.f64 2 x 2))) 2)) (*.f64 (pow.f64 F 4) (sqrt.f64 (fma.f64 2 x 2)))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 F F) (fma.f64 2 x 2)) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))))))))","(/.f64 1 F)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) (/.f64 1 F))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (/.f64 1 F)))","(fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) (fma.f64 -1/2 (/.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (pow.f64 F 5)) (/.f64 1 F)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (pow.f64 F 7))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (/.f64 1 F))))","(fma.f64 -1/2 (/.f64 (fma.f64 (fma.f64 2 x 2) (pow.f64 (fma.f64 2 x 2) 2) (*.f64 (*.f64 1/2 (fma.f64 2 x 2)) (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)))) (pow.f64 F 7)) (fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) (fma.f64 -1/2 (/.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (pow.f64 F 5)) (/.f64 1 F))))","(/.f64 -1 F)","(-.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(fma.f64 1/2 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) (/.f64 -1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)))) (/.f64 1 F))","(+.f64 (*.f64 1/2 (+.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (pow.f64 F 5)) (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)))) (/.f64 -1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (pow.f64 F 7))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))))) (/.f64 1 F))","(+.f64 (fma.f64 1/2 (/.f64 (fma.f64 (fma.f64 2 x 2) (pow.f64 (fma.f64 2 x 2) 2) (*.f64 (*.f64 1/2 (fma.f64 2 x 2)) (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)))) (pow.f64 F 7)) (*.f64 1/2 (+.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (pow.f64 F 5)) (/.f64 (fma.f64 2 x 2) (pow.f64 F 3))))) (/.f64 -1 F))","(sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))","(sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 (neg.f64 x) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))","(+.f64 (*.f64 (neg.f64 x) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) (fma.f64 1/2 (*.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (neg.f64 (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) 2))) (*.f64 (*.f64 x x) (sqrt.f64 (+.f64 (*.f64 F F) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (*.f64 -1 (/.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (+.f64 (pow.f64 F 2) 2)))) (pow.f64 x 3)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))))","(+.f64 (*.f64 (neg.f64 x) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) (fma.f64 -1/2 (*.f64 (*.f64 (fma.f64 8 (pow.f64 (+.f64 (*.f64 F F) 2) -4) (neg.f64 (/.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (neg.f64 (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) 2))) (+.f64 (*.f64 F F) 2)))) (pow.f64 x 3)) (sqrt.f64 (+.f64 (*.f64 F F) 2))) (fma.f64 1/2 (*.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (neg.f64 (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) 2))) (*.f64 (*.f64 x x) (sqrt.f64 (+.f64 (*.f64 F F) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))))))","(/.f64 1 (+.f64 (*.f64 2 x) 2))","(/.f64 1 (fma.f64 2 x 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 F 2) (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))","(+.f64 (neg.f64 (/.f64 (*.f64 F F) (pow.f64 (fma.f64 2 x 2) 2))) (/.f64 1 (fma.f64 2 x 2)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 F 2) (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (+.f64 (/.f64 (pow.f64 F 4) (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (/.f64 1 (+.f64 (*.f64 2 x) 2))))","(+.f64 (neg.f64 (/.f64 (*.f64 F F) (pow.f64 (fma.f64 2 x 2) 2))) (+.f64 (/.f64 (/.f64 (pow.f64 F 4) (fma.f64 2 x 2)) (pow.f64 (fma.f64 2 x 2) 2)) (/.f64 1 (fma.f64 2 x 2))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 F 2) (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (+.f64 (/.f64 (pow.f64 F 4) (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 F 6) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))))","(+.f64 (neg.f64 (/.f64 (*.f64 F F) (pow.f64 (fma.f64 2 x 2) 2))) (+.f64 (/.f64 (/.f64 (pow.f64 F 4) (fma.f64 2 x 2)) (pow.f64 (fma.f64 2 x 2) 2)) (+.f64 (neg.f64 (/.f64 (pow.f64 F 6) (pow.f64 (pow.f64 (fma.f64 2 x 2) 2) 2))) (/.f64 1 (fma.f64 2 x 2)))))","(/.f64 1 (pow.f64 F 2))","(pow.f64 F -2)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2)))","(+.f64 (neg.f64 (/.f64 (fma.f64 2 x 2) (pow.f64 F 4))) (pow.f64 F -2))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2))))","(+.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 F 6)) (+.f64 (neg.f64 (/.f64 (fma.f64 2 x 2) (pow.f64 F 4))) (pow.f64 F -2)))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (+.f64 (/.f64 1 (pow.f64 F 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2)) (pow.f64 F 8))))))","(+.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 F 6)) (+.f64 (neg.f64 (/.f64 (fma.f64 2 x 2) (pow.f64 F 4))) (+.f64 (pow.f64 F -2) (neg.f64 (/.f64 (*.f64 (fma.f64 2 x 2) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 F 8))))))","(/.f64 1 (pow.f64 F 2))","(pow.f64 F -2)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2)))","(+.f64 (neg.f64 (/.f64 (fma.f64 2 x 2) (pow.f64 F 4))) (pow.f64 F -2))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2))))","(+.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 F 6)) (+.f64 (neg.f64 (/.f64 (fma.f64 2 x 2) (pow.f64 F 4))) (pow.f64 F -2)))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (+.f64 (/.f64 1 (pow.f64 F 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2)) (pow.f64 F 8))))))","(+.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 F 6)) (+.f64 (neg.f64 (/.f64 (fma.f64 2 x 2) (pow.f64 F 4))) (+.f64 (pow.f64 F -2) (neg.f64 (/.f64 (*.f64 (fma.f64 2 x 2) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 F 8))))))","(/.f64 1 (+.f64 (pow.f64 F 2) 2))","(/.f64 1 (+.f64 (*.f64 F F) 2))","(+.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) (*.f64 -2 (/.f64 x (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))","(+.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)) (/.f64 (*.f64 -2 x) (pow.f64 (+.f64 (*.f64 F F) 2) 2)))","(+.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))) (*.f64 4 (/.f64 (pow.f64 x 2) (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))","(+.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)) (fma.f64 -2 (/.f64 x (pow.f64 (+.f64 (*.f64 F F) 2) 2)) (*.f64 4 (*.f64 (*.f64 x x) (pow.f64 (+.f64 (*.f64 F F) 2) -3)))))","(+.f64 (*.f64 -8 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (+.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))) (*.f64 4 (/.f64 (pow.f64 x 2) (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))","(fma.f64 -8 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (*.f64 F F) 2) -4)) (+.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)) (fma.f64 -2 (/.f64 x (pow.f64 (+.f64 (*.f64 F F) 2) 2)) (*.f64 4 (*.f64 (*.f64 x x) (pow.f64 (+.f64 (*.f64 F F) 2) -3))))))","(/.f64 1/2 x)","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x)))","(fma.f64 -1/4 (/.f64 (+.f64 (*.f64 F F) 2) (*.f64 x x)) (/.f64 1/2 x))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3)))))","(+.f64 (fma.f64 -1/4 (/.f64 (+.f64 (*.f64 F F) 2) (*.f64 x x)) (/.f64 1/2 x)) (/.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 F F) 2) 2)) (pow.f64 x 3)))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3) (pow.f64 x 4))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3))))))","(+.f64 (fma.f64 -1/4 (/.f64 (+.f64 (*.f64 F F) 2) (*.f64 x x)) (/.f64 1/2 x)) (fma.f64 -1/16 (/.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 3) (pow.f64 x 4)) (/.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 F F) 2) 2)) (pow.f64 x 3))))","(/.f64 1/2 x)","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x)))","(fma.f64 -1/4 (/.f64 (+.f64 (*.f64 F F) 2) (*.f64 x x)) (/.f64 1/2 x))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3)))))","(+.f64 (fma.f64 -1/4 (/.f64 (+.f64 (*.f64 F F) 2) (*.f64 x x)) (/.f64 1/2 x)) (/.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 F F) 2) 2)) (pow.f64 x 3)))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3) (pow.f64 x 4))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3))))))","(+.f64 (fma.f64 -1/4 (/.f64 (+.f64 (*.f64 F F) 2) (*.f64 x x)) (/.f64 1/2 x)) (fma.f64 -1/16 (/.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 3) (pow.f64 x 4)) (/.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 F F) 2) 2)) (pow.f64 x 3))))","(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))","(*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 3) (+.f64 (*.f64 2 x) 2)))) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 (pow.f64 F 3) (fma.f64 2 x 2))) (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 2 x 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 3) (+.f64 (*.f64 2 x) 2)))) (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (*.f64 (pow.f64 F 5) (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2)))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 (pow.f64 F 3) (fma.f64 2 x 2))) (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (*.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 2 x 2))) (*.f64 (pow.f64 F 5) (-.f64 (/.f64 (/.f64 1 (fma.f64 2 x 2)) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (fma.f64 2 x 2))) 2))))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 3) (+.f64 (*.f64 2 x) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (+.f64 2 (*.f64 2 x))))) (pow.f64 F 7)))) (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (*.f64 (pow.f64 F 5) (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2))))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 (pow.f64 F 3) (fma.f64 2 x 2))) (fma.f64 -1/2 (*.f64 (sqrt.f64 (fma.f64 2 x 2)) (*.f64 (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 (/.f64 1 (fma.f64 2 x 2)) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (fma.f64 2 x 2))) 2)) (fma.f64 2 x 2)) (/.f64 1 (pow.f64 (pow.f64 (fma.f64 2 x 2) 2) 2))) (pow.f64 F 7))) (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (*.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 2 x 2))) (*.f64 (pow.f64 F 5) (-.f64 (/.f64 (/.f64 1 (fma.f64 2 x 2)) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (fma.f64 2 x 2))) 2)))))))","1","(+.f64 1 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 2))))","(+.f64 1 (*.f64 -1/2 (*.f64 (fma.f64 2 x 2) (pow.f64 F -2))))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (pow.f64 F 4))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 2)))))","(+.f64 1 (*.f64 -1/2 (+.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (pow.f64 F 4)) (*.f64 (fma.f64 2 x 2) (pow.f64 F -2)))))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)))) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 F 6))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (pow.f64 F 4))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 2))))))","(+.f64 1 (fma.f64 -1/2 (/.f64 (fma.f64 (fma.f64 2 x 2) (pow.f64 (fma.f64 2 x 2) 2) (*.f64 (*.f64 1/2 (fma.f64 2 x 2)) (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)))) (pow.f64 F 6)) (*.f64 -1/2 (+.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (pow.f64 F 4)) (*.f64 (fma.f64 2 x 2) (pow.f64 F -2))))))","-1","(-.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 2))) 1)","(fma.f64 1/2 (*.f64 (fma.f64 2 x 2) (pow.f64 F -2)) -1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 2))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 4)))) 1)","(+.f64 (*.f64 1/2 (+.f64 (*.f64 (fma.f64 2 x 2) (pow.f64 F -2)) (/.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (pow.f64 F 4)))) -1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 2))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 4))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (pow.f64 F 6))))) 1)","(+.f64 (fma.f64 1/2 (*.f64 (fma.f64 2 x 2) (pow.f64 F -2)) (*.f64 1/2 (+.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (pow.f64 F 4)) (/.f64 (fma.f64 (fma.f64 2 x 2) (pow.f64 (fma.f64 2 x 2) 2) (*.f64 (*.f64 1/2 (fma.f64 2 x 2)) (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)))) (pow.f64 F 6))))) -1)","(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 F x) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))","(+.f64 (neg.f64 (*.f64 (*.f64 F x) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3)))) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 F x) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 F (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2))) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))))","(+.f64 (neg.f64 (*.f64 (*.f64 F x) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3)))) (fma.f64 1/2 (*.f64 (*.f64 (*.f64 F (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (neg.f64 (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) 2)))) (*.f64 x x)) (sqrt.f64 (+.f64 (*.f64 F F) 2))) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 F x) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 F (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2))) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 F (*.f64 (pow.f64 x 3) (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (*.f64 -1 (/.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (+.f64 (pow.f64 F 2) 2)))))) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))))","(+.f64 (neg.f64 (*.f64 (*.f64 F x) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3)))) (fma.f64 1/2 (*.f64 (*.f64 (*.f64 F (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (neg.f64 (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) 2)))) (*.f64 x x)) (sqrt.f64 (+.f64 (*.f64 F F) 2))) (fma.f64 -1/2 (*.f64 F (*.f64 (*.f64 (fma.f64 8 (pow.f64 (+.f64 (*.f64 F F) 2) -4) (neg.f64 (/.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (neg.f64 (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) 2))) (+.f64 (*.f64 F F) 2)))) (pow.f64 x 3)) (sqrt.f64 (+.f64 (*.f64 F F) 2)))) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))) (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (fma.f64 2 x 2)))) (fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2)) (pow.f64 F 5)) (sin.f64 B)))) (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 (pow.f64 F 3) (*.f64 (sin.f64 B) (fma.f64 2 x 2)))) (fma.f64 1/2 (/.f64 (*.f64 (sqrt.f64 (fma.f64 2 x 2)) (*.f64 (pow.f64 F 5) (-.f64 (/.f64 (/.f64 1 (fma.f64 2 x 2)) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (fma.f64 2 x 2))) 2)))) (sin.f64 B)) (fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(/.f64 (+.f64 1 (*.f64 -1 (*.f64 (cos.f64 B) x))) (sin.f64 B))","(/.f64 (+.f64 1 (neg.f64 (*.f64 (cos.f64 B) x))) (sin.f64 B))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (sin.f64 B) (*.f64 F F))) (+.f64 (/.f64 1 (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(fma.f64 -1/2 (/.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (sin.f64 B)) (pow.f64 F 4)) (fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (sin.f64 B) (*.f64 F F))) (+.f64 (/.f64 1 (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)))) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (*.f64 (sin.f64 B) (pow.f64 F 6)))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))))","(fma.f64 -1/2 (/.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (sin.f64 B)) (pow.f64 F 4)) (fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (sin.f64 B) (*.f64 F F))) (fma.f64 -1/2 (/.f64 (fma.f64 (fma.f64 2 x 2) (pow.f64 (fma.f64 2 x 2) 2) (*.f64 (*.f64 1/2 (fma.f64 2 x 2)) (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)))) (*.f64 (sin.f64 B) (pow.f64 F 6))) (+.f64 (/.f64 1 (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) 1) (sin.f64 B))","(/.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 B) x)) -1) (sin.f64 B))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))) (/.f64 1 (sin.f64 B)))","(+.f64 (/.f64 (*.f64 1/2 (fma.f64 2 x 2)) (*.f64 (sin.f64 B) (*.f64 F F))) (/.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 B) x)) -1) (sin.f64 B)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))) (/.f64 1 (sin.f64 B)))","(+.f64 (/.f64 (*.f64 1/2 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2))) (*.f64 (sin.f64 B) (pow.f64 F 4))) (+.f64 (/.f64 (*.f64 1/2 (fma.f64 2 x 2)) (*.f64 (sin.f64 B) (*.f64 F F))) (/.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 B) x)) -1) (sin.f64 B))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (*.f64 (sin.f64 B) (pow.f64 F 6)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))) (/.f64 1 (sin.f64 B)))","(-.f64 (fma.f64 1/2 (/.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (sin.f64 B)) (pow.f64 F 4)) (fma.f64 1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (sin.f64 B) (*.f64 F F))) (fma.f64 1/2 (/.f64 (fma.f64 (fma.f64 2 x 2) (pow.f64 (fma.f64 2 x 2) 2) (*.f64 (*.f64 1/2 (fma.f64 2 x 2)) (+.f64 (neg.f64 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)))) (*.f64 (sin.f64 B) (pow.f64 F 6))) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))) (/.f64 1 (sin.f64 B)))","(*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))) (*.f64 (+.f64 (neg.f64 (/.f64 (cos.f64 B) (sin.f64 B))) (neg.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))) x))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x) (*.f64 1/2 (*.f64 (/.f64 (*.f64 F (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2))) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2))))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))) (fma.f64 (+.f64 (neg.f64 (/.f64 (cos.f64 B) (sin.f64 B))) (neg.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))) x (*.f64 1/2 (*.f64 (/.f64 (*.f64 (*.f64 F (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (neg.f64 (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) 2)))) (*.f64 x x)) (sin.f64 B)) (sqrt.f64 (+.f64 (*.f64 F F) 2))))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 F (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2))) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 F (*.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (*.f64 -1 (/.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (+.f64 (pow.f64 F 2) 2)))) (pow.f64 x 3))) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))) (fma.f64 (+.f64 (neg.f64 (/.f64 (cos.f64 B) (sin.f64 B))) (neg.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))) x (fma.f64 1/2 (*.f64 (/.f64 (*.f64 (*.f64 F (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (neg.f64 (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) 2)))) (*.f64 x x)) (sin.f64 B)) (sqrt.f64 (+.f64 (*.f64 F F) 2))) (*.f64 -1/2 (/.f64 (*.f64 F (*.f64 (*.f64 (fma.f64 8 (pow.f64 (+.f64 (*.f64 F F) 2) -4) (neg.f64 (/.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (neg.f64 (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) 2))) (+.f64 (*.f64 F F) 2)))) (pow.f64 x 3)) (sqrt.f64 (+.f64 (*.f64 F F) 2)))) (sin.f64 B))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(/.f64 (+.f64 (*.f64 -1 x) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) B)","(/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x)) B)","(+.f64 (*.f64 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)))) B) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 x B))))","(fma.f64 (fma.f64 1/2 x (neg.f64 (*.f64 -1/6 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x))))) B (fma.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 (/.f64 x B))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)))) B) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 -1 (/.f64 x B)) (*.f64 (-.f64 (*.f64 -1/24 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 -1 x) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))))))) (*.f64 1/120 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x))))) (pow.f64 B 3)))))","(fma.f64 (fma.f64 1/2 x (neg.f64 (*.f64 -1/6 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x))))) B (+.f64 (fma.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 (/.f64 x B))) (*.f64 (-.f64 (*.f64 -1/24 x) (fma.f64 -1/6 (fma.f64 1/2 x (neg.f64 (*.f64 -1/6 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x))))) (*.f64 1/120 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x))))) (pow.f64 B 3))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)))) B) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (-.f64 (*.f64 1/720 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 -1/24 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x))))) (*.f64 1/120 (+.f64 (*.f64 -1 x) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))))))) (+.f64 (*.f64 1/120 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 -1 x) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))))))) (*.f64 -1/5040 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)))))) (pow.f64 B 5)) (*.f64 (-.f64 (*.f64 -1/24 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/2 x) (*.f64 -1/6 (+.f64 (*.f64 -1 x) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))))))) (*.f64 1/120 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x))))) (pow.f64 B 3))))))","(fma.f64 (fma.f64 1/2 x (neg.f64 (*.f64 -1/6 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x))))) B (+.f64 (fma.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 (/.f64 x B))) (fma.f64 (-.f64 (*.f64 1/720 x) (fma.f64 -1/6 (-.f64 (*.f64 -1/24 x) (fma.f64 -1/6 (fma.f64 1/2 x (neg.f64 (*.f64 -1/6 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x))))) (*.f64 1/120 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x))))) (fma.f64 1/120 (fma.f64 1/2 x (neg.f64 (*.f64 -1/6 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x))))) (*.f64 -1/5040 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x)))))) (pow.f64 B 5) (*.f64 (-.f64 (*.f64 -1/24 x) (fma.f64 -1/6 (fma.f64 1/2 x (neg.f64 (*.f64 -1/6 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x))))) (*.f64 1/120 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (neg.f64 x))))) (pow.f64 B 3)))))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))) (sin.f64 B))","(/.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (sin.f64 B))","(/.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 B) x)) (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))) (sin.f64 B))"]],"time":275.468994140625,"type":"simplify"},{"compiler":[[13012,8183]],"time":142.6298828125,"type":"eval"},{"alts":[["(/.f64 (+.f64 (*.f64 F (/.f64 1 F)) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","fresh",30.793806544442738],["(fma.f64 (*.f64 F (/.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (sin.f64 B))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","fresh",11.595612488012549],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (*.f64 (/.f64 -1 (tan.f64 B)) x))","fresh",14.546060198456248],["(/.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (cbrt.f64 (sin.f64 B))) (cbrt.f64 (pow.f64 (sin.f64 B) 2)))","fresh",23.39353093426],["(+.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 -1 (sin.f64 B)))","fresh",32.48400036600159],["(/.f64 (+.f64 (*.f64 F (/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","next",10.822927507848265],["(/.f64 (+.f64 1 (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","fresh",30.782087794442738],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (-.f64 (*.f64 0 (tan.f64 B)) (*.f64 (tan.f64 B) x)) (pow.f64 (tan.f64 B) 2)))","fresh",24.24759497695356],["(*.f64 (/.f64 1 (sin.f64 B)) (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))))","fresh",10.922204998079769]],"compiler":[[17,12],[36,26],[23,16],[30,21],[16,11],[34,24],[13,10],[31,20],[25,18],[17,12],[36,26],[23,16],[30,21],[16,11],[34,24],[13,10],[31,20],[25,18]],"count":[[340,9]],"kept":[{"done":[0,0],"fresh":[10,4],"new":[329,5],"picked":[1,0]}],"min-error":[0.01171875],"time":135.205078125,"type":"prune"},{"compiler":[[169,104]],"locations":[["(/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))",0.43696643444956096,true],["(/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))",0.56640625,true],["(sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))",17.783616519583067,true],["(cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))",18.839405704866035,true]],"time":43.596923828125,"type":"localize"},{"count":[[4,64]],"series":[["(/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))","x","-inf",0.18798828125],["(/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))","x","inf",0.2041015625],["(/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))","x","0",0.19482421875],["(/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))","F","-inf",0.2080078125],["(/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))","F","inf",0.195068359375],["(/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))","F","0",0.239990234375],["(/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))","x","-inf",0.35302734375],["(/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))","x","inf",0.40380859375],["(/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))","x","0",9.9140625],["(/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))","F","-inf",0.447998046875],["(/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))","F","inf",0.43896484375],["(/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))","F","0",27.547119140625],["(sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))","x","-inf",0.360107421875],["(sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))","x","inf",0.31298828125],["(sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))","x","0",0.30517578125],["(sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))","F","-inf",0.26220703125],["(sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))","F","inf",0.2890625],["(sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))","F","0",0.385986328125],["(cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))","x","-inf",0.271240234375],["(cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))","x","inf",0.294189453125],["(cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))","x","0",0.754150390625],["(cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))","F","-inf",0.287841796875],["(cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))","F","inf",0.3330078125],["(cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))","F","0",1.199951171875]],"time":45.85302734375,"type":"series"},{"count":[[4,282]],"inputs":[["(cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))","(sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))","(/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))","(/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) 1/2) (*.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) 0) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 0 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 1/2 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) 1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1/2) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 0) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))) (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (-.f64 -1/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (-.f64 -1/3 1))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (fabs.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (-.f64 -1/3 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3))) (fabs.f64 (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (fabs.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (fabs.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (fabs.f64 (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (/.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (/.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 0) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) 1) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) -1) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) 1) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fabs.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (fabs.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fabs.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2)))) (fabs.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (fabs.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) -1) (*.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) -1) (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) 1) (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (*.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (*.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))) (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (*.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))) (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/6 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 1/6 3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1/2) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 0) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))) (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (-.f64 -1/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (-.f64 -1/3 1))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (fabs.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (-.f64 -1/3 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3))) (fabs.f64 (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (fabs.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (fabs.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (fabs.f64 (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (/.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (/.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 0) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) 1) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) -1) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) 1) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fabs.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (fabs.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fabs.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2)))) (fabs.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (fabs.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) -1) (*.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) -1) (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) 1) (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (*.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (*.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))) (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (*.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))) (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/6 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 1/6 3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1/2) (*.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 0) (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (*.f64 0 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 1/2 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3)) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3))) (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3))) (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3))) (*.f64 (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))) (cbrt.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (-.f64 -1/3 1))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (-.f64 -1/3 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3))) 3) (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (pow.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 0) (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3)) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3)) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3)) -1) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2)))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) (cbrt.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3))) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (neg.f64 2/3)))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (-.f64 -1/3 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) 4)) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1/3 (/.f64 (fma.f64 F F (fma.f64 2 x 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (/.f64 (fma.f64 F F (fma.f64 2 x 2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))) (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))) (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2)))) (*.f64 (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2)))) (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2))) (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)) (cbrt.f64 (neg.f64 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) (+.f64 1/3 1/2)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2)))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (neg.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))) (neg.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -1/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 2/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 F F (fma.f64 2 x 2)) (-.f64 -1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))) (-.f64 -1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (fma.f64 F F (fma.f64 2 x 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (neg.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 F F (fma.f64 2 x 2)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))))))"]],"rules":[["egg-rr",84],["egg-rr",86],["egg-rr",86],["egg-rr",26]],"time":50.922119140625,"type":"rewrite"},{"count":[[346,283]],"inputs":[["(pow.f64 (+.f64 (*.f64 2 x) 2) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) 1/3) (pow.f64 F 2))) (pow.f64 (+.f64 (*.f64 2 x) 2) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) 1/3) (pow.f64 F 2))) (+.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 1/3) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 4))) 1/3) (pow.f64 F 4)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) 1/3) (pow.f64 F 2))) (+.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) 1/3) (*.f64 (-.f64 (*.f64 2/9 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (*.f64 1/27 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (pow.f64 F 6)))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 4))) 1/3) (pow.f64 F 4))))))","(pow.f64 (+.f64 (pow.f64 F 2) 2) 1/3)","(+.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/9) x)))","(+.f64 (*.f64 -4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7)) 1/9) (pow.f64 x 2))) (+.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/9) x))))","(+.f64 (*.f64 -4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7)) 1/9) (pow.f64 x 2))) (+.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/9) x)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/3) (*.f64 (+.f64 (*.f64 -16/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/3))) (*.f64 8/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/3))) (pow.f64 x 3)))))))","(sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (pow.f64 F 4)) (sqrt.f64 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))))))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (+.f64 (*.f64 2 x) 2)) (*.f64 (pow.f64 F 6) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2)) (+.f64 (*.f64 2 x) 2))) (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (pow.f64 F 4)) (sqrt.f64 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))))))","(/.f64 1 F)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (/.f64 1 F)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (pow.f64 F 7))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (/.f64 1 F))))","(/.f64 -1 F)","(-.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)))) (/.f64 1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (pow.f64 F 7))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))))) (/.f64 1 F))","(sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (*.f64 -1 (/.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (+.f64 (pow.f64 F 2) 2)))) (pow.f64 x 3)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))))","(sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 2) (+.f64 (*.f64 2 x) 2)))))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (*.f64 (pow.f64 F 4) (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 2) (+.f64 (*.f64 2 x) 2))))))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (*.f64 (pow.f64 F 4) (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2))))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 2) (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (+.f64 2 (*.f64 2 x))))) (pow.f64 F 6)))))))","(/.f64 1 F)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 3))) (/.f64 1 F))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (pow.f64 F 5))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 3))) (/.f64 1 F)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)))) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 F 7))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (pow.f64 F 5))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 3))) (/.f64 1 F))))","(/.f64 -1 F)","(-.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 3))) (/.f64 1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (pow.f64 F 5))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 3)))) (/.f64 1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)))) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 F 7))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (pow.f64 F 5))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 3))))) (/.f64 1 F))","(sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (*.f64 -1 (/.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (+.f64 (pow.f64 F 2) 2)))) (pow.f64 x 3)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))))","(/.f64 1 (+.f64 (*.f64 2 x) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 F 2) (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 F 2) (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (+.f64 (/.f64 (pow.f64 F 4) (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (/.f64 1 (+.f64 (*.f64 2 x) 2))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 F 2) (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (+.f64 (/.f64 (pow.f64 F 4) (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 F 6) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))))","(/.f64 1 (pow.f64 F 2))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2)))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2))))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (+.f64 (/.f64 1 (pow.f64 F 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2)) (pow.f64 F 8))))))","(/.f64 1 (pow.f64 F 2))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2)))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2))))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (+.f64 (/.f64 1 (pow.f64 F 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2)) (pow.f64 F 8))))))","(/.f64 1 (+.f64 (pow.f64 F 2) 2))","(+.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) (*.f64 -2 (/.f64 x (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))","(+.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))) (*.f64 4 (/.f64 (pow.f64 x 2) (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))","(+.f64 (*.f64 -8 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (+.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))) (*.f64 4 (/.f64 (pow.f64 x 2) (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))","(/.f64 1/2 x)","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x)))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3) (pow.f64 x 4))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3))))))","(/.f64 1/2 x)","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x)))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3) (pow.f64 x 4))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (+.f64 (*.f64 2 x) 2) 1/3)","(cbrt.f64 (fma.f64 2 x 2))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) 1/3) (pow.f64 F 2))) (pow.f64 (+.f64 (*.f64 2 x) 2) 1/3))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 x 2) -2)) (*.f64 F F)) (cbrt.f64 (fma.f64 2 x 2)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) 1/3) (pow.f64 F 2))) (+.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 1/3) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 4))) 1/3) (pow.f64 F 4)))))","(+.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 x 2) -2)) (*.f64 F F)) (cbrt.f64 (fma.f64 2 x 2))) (*.f64 -1/9 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 x 2) (-.f64 -1 4))) (pow.f64 F 4))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) 1/3) (pow.f64 F 2))) (+.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) 1/3) (*.f64 (-.f64 (*.f64 2/9 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (*.f64 1/27 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (pow.f64 F 6)))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 4))) 1/3) (pow.f64 F 4))))))","(+.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 x 2) -2)) (*.f64 F F)) (cbrt.f64 (fma.f64 2 x 2))) (fma.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 x 2) -2)) (*.f64 (pow.f64 (fma.f64 2 x 2) -2) (-.f64 2/9 1/27))) (pow.f64 F 6)) (*.f64 -1/9 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 x 2) (-.f64 -1 4))) (pow.f64 F 4)))))","(pow.f64 (+.f64 (pow.f64 F 2) 2) 1/3)","(cbrt.f64 (+.f64 (*.f64 F F) 2))","(+.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/9) x)))","(+.f64 (cbrt.f64 (+.f64 (*.f64 F F) 2)) (*.f64 (*.f64 2/3 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -2 1/9))) x))","(+.f64 (*.f64 -4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7)) 1/9) (pow.f64 x 2))) (+.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/9) x))))","(fma.f64 -4/9 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -7 1/9)) (*.f64 x x)) (+.f64 (cbrt.f64 (+.f64 (*.f64 F F) 2)) (*.f64 (*.f64 2/3 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -2 1/9))) x)))","(+.f64 (*.f64 -4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7)) 1/9) (pow.f64 x 2))) (+.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/9) x)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/3) (*.f64 (+.f64 (*.f64 -16/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/3))) (*.f64 8/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) 1/3))) (pow.f64 x 3)))))))","(fma.f64 -4/9 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -7 1/9)) (*.f64 x x)) (+.f64 (cbrt.f64 (+.f64 (*.f64 F F) 2)) (fma.f64 2/3 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) (*.f64 -2 1/9)) x) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -2)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -2)) (+.f64 -16/9 8/27)) (pow.f64 x 3)))))))","(sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))))","(pow.f64 (fma.f64 2 x 2) -1/2)","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))))","(*.f64 (pow.f64 (fma.f64 2 x 2) -1/2) (+.f64 (/.f64 (*.f64 -1/2 (*.f64 F F)) (fma.f64 2 x 2)) 1))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (pow.f64 F 4)) (sqrt.f64 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))))))","(+.f64 (*.f64 (pow.f64 (fma.f64 2 x 2) -1/2) (+.f64 (/.f64 (*.f64 -1/2 (*.f64 F F)) (fma.f64 2 x 2)) 1)) (*.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 2 x 2))) (*.f64 (pow.f64 F 4) (-.f64 (pow.f64 (fma.f64 2 x 2) -3) (*.f64 (*.f64 -1/2 -1/2) (pow.f64 (fma.f64 2 x 2) -3))))))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (+.f64 (*.f64 2 x) 2)) (*.f64 (pow.f64 F 6) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2)) (+.f64 (*.f64 2 x) 2))) (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (pow.f64 F 4)) (sqrt.f64 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))))))","(+.f64 (+.f64 (*.f64 (pow.f64 (fma.f64 2 x 2) -1/2) (+.f64 (/.f64 (*.f64 -1/2 (*.f64 F F)) (fma.f64 2 x 2)) 1)) (*.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 2 x 2))) (*.f64 (pow.f64 F 4) (-.f64 (pow.f64 (fma.f64 2 x 2) -3) (*.f64 (*.f64 -1/2 -1/2) (pow.f64 (fma.f64 2 x 2) -3)))))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 (fma.f64 2 x 2)) (pow.f64 F 6)) (fma.f64 -1/2 (-.f64 (pow.f64 (fma.f64 2 x 2) -4) (/.f64 (*.f64 (*.f64 -1/2 -1/2) (pow.f64 (fma.f64 2 x 2) -3)) (fma.f64 2 x 2))) (pow.f64 (fma.f64 2 x 2) -4)))))","(/.f64 1 F)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(fma.f64 -1/2 (*.f64 (fma.f64 2 x 2) (pow.f64 F -3)) (/.f64 1 F))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (/.f64 1 F)))","(+.f64 (/.f64 1 F) (*.f64 -1/2 (+.f64 (/.f64 (-.f64 (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 F 5)) (*.f64 (fma.f64 2 x 2) (pow.f64 F -3)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (pow.f64 F 7))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (/.f64 1 F))))","(fma.f64 -1/2 (*.f64 (fma.f64 1/2 (*.f64 (fma.f64 2 x 2) (-.f64 (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2) (pow.f64 (fma.f64 2 x 2) 2))) (pow.f64 (fma.f64 2 x 2) 3)) (pow.f64 F -7)) (+.f64 (/.f64 1 F) (*.f64 -1/2 (+.f64 (/.f64 (-.f64 (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 F 5)) (*.f64 (fma.f64 2 x 2) (pow.f64 F -3))))))","(/.f64 -1 F)","(-.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(fma.f64 1/2 (*.f64 (fma.f64 2 x 2) (pow.f64 F -3)) (/.f64 -1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)))) (/.f64 1 F))","(fma.f64 1/2 (+.f64 (/.f64 (-.f64 (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 F 5)) (*.f64 (fma.f64 2 x 2) (pow.f64 F -3))) (/.f64 -1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (pow.f64 F 7))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (pow.f64 F 5))) (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))))) (/.f64 1 F))","(+.f64 (*.f64 1/2 (+.f64 (+.f64 (/.f64 (-.f64 (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 F 5)) (*.f64 (fma.f64 2 x 2) (pow.f64 F -3))) (*.f64 (fma.f64 1/2 (*.f64 (fma.f64 2 x 2) (-.f64 (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2) (pow.f64 (fma.f64 2 x 2) 2))) (pow.f64 (fma.f64 2 x 2) 3)) (pow.f64 F -7)))) (/.f64 -1 F))","(sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))","(pow.f64 (+.f64 (*.f64 F F) 2) -1/2)","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(-.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -1/2) (*.f64 x (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))","(-.f64 (fma.f64 1/2 (*.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) (*.f64 (*.f64 x x) (hypot.f64 F (sqrt.f64 2)))) (pow.f64 (+.f64 (*.f64 F F) 2) -1/2)) (*.f64 x (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (*.f64 -1 (/.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (+.f64 (pow.f64 F 2) 2)))) (pow.f64 x 3)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))))","(+.f64 (*.f64 (hypot.f64 F (sqrt.f64 2)) (+.f64 (*.f64 -1/2 (*.f64 (fma.f64 8 (pow.f64 (+.f64 (*.f64 F F) 2) -4) (/.f64 (+.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (*.f64 -4 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) (+.f64 (*.f64 F F) 2))) (pow.f64 x 3))) (/.f64 (*.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) (*.f64 x x)) 2))) (-.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -1/2) (*.f64 x (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3)))))","(sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))","(pow.f64 (fma.f64 2 x 2) -1/2)","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 2) (+.f64 (*.f64 2 x) 2)))))","(*.f64 (pow.f64 (fma.f64 2 x 2) -1/2) (+.f64 (/.f64 (*.f64 -1/2 (*.f64 F F)) (fma.f64 2 x 2)) 1))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (*.f64 (pow.f64 F 4) (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 2) (+.f64 (*.f64 2 x) 2))))))","(+.f64 (*.f64 (pow.f64 (fma.f64 2 x 2) -1/2) (+.f64 (/.f64 (*.f64 -1/2 (*.f64 F F)) (fma.f64 2 x 2)) 1)) (*.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 2 x 2))) (*.f64 (pow.f64 F 4) (-.f64 (pow.f64 (fma.f64 2 x 2) -3) (*.f64 (*.f64 -1/2 -1/2) (pow.f64 (fma.f64 2 x 2) -3))))))","(+.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (*.f64 (pow.f64 F 4) (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2))))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 2) (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (+.f64 2 (*.f64 2 x))))) (pow.f64 F 6)))))))","(+.f64 (+.f64 (*.f64 (pow.f64 (fma.f64 2 x 2) -1/2) (+.f64 (/.f64 (*.f64 -1/2 (*.f64 F F)) (fma.f64 2 x 2)) 1)) (*.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 2 x 2))) (*.f64 (pow.f64 F 4) (-.f64 (pow.f64 (fma.f64 2 x 2) -3) (*.f64 (*.f64 -1/2 -1/2) (pow.f64 (fma.f64 2 x 2) -3)))))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 (fma.f64 2 x 2)) (pow.f64 F 6)) (fma.f64 -1/2 (-.f64 (pow.f64 (fma.f64 2 x 2) -4) (/.f64 (*.f64 (*.f64 -1/2 -1/2) (pow.f64 (fma.f64 2 x 2) -3)) (fma.f64 2 x 2))) (pow.f64 (fma.f64 2 x 2) -4)))))","(/.f64 1 F)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 3))) (/.f64 1 F))","(fma.f64 -1/2 (*.f64 (fma.f64 2 x 2) (pow.f64 F -3)) (/.f64 1 F))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (pow.f64 F 5))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 3))) (/.f64 1 F)))","(+.f64 (/.f64 1 F) (*.f64 -1/2 (+.f64 (/.f64 (-.f64 (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 F 5)) (*.f64 (fma.f64 2 x 2) (pow.f64 F -3)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)))) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 F 7))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (pow.f64 F 5))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 3))) (/.f64 1 F))))","(fma.f64 -1/2 (*.f64 (fma.f64 1/2 (*.f64 (fma.f64 2 x 2) (-.f64 (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2) (pow.f64 (fma.f64 2 x 2) 2))) (pow.f64 (fma.f64 2 x 2) 3)) (pow.f64 F -7)) (+.f64 (/.f64 1 F) (*.f64 -1/2 (+.f64 (/.f64 (-.f64 (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 F 5)) (*.f64 (fma.f64 2 x 2) (pow.f64 F -3))))))","(/.f64 -1 F)","(-.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 3))) (/.f64 1 F))","(fma.f64 1/2 (*.f64 (fma.f64 2 x 2) (pow.f64 F -3)) (/.f64 -1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (pow.f64 F 5))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 3)))) (/.f64 1 F))","(fma.f64 1/2 (+.f64 (/.f64 (-.f64 (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 F 5)) (*.f64 (fma.f64 2 x 2) (pow.f64 F -3))) (/.f64 -1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)))) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 F 7))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (pow.f64 F 5))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 3))))) (/.f64 1 F))","(+.f64 (*.f64 1/2 (+.f64 (+.f64 (/.f64 (-.f64 (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 F 5)) (*.f64 (fma.f64 2 x 2) (pow.f64 F -3))) (*.f64 (fma.f64 1/2 (*.f64 (fma.f64 2 x 2) (-.f64 (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2) (pow.f64 (fma.f64 2 x 2) 2))) (pow.f64 (fma.f64 2 x 2) 3)) (pow.f64 F -7)))) (/.f64 -1 F))","(sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))","(pow.f64 (+.f64 (*.f64 F F) 2) -1/2)","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(-.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -1/2) (*.f64 x (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))","(-.f64 (fma.f64 1/2 (*.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) (*.f64 (*.f64 x x) (hypot.f64 F (sqrt.f64 2)))) (pow.f64 (+.f64 (*.f64 F F) 2) -1/2)) (*.f64 x (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (*.f64 -1 (/.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (+.f64 (pow.f64 F 2) 2)))) (pow.f64 x 3)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))))","(+.f64 (*.f64 (hypot.f64 F (sqrt.f64 2)) (+.f64 (*.f64 -1/2 (*.f64 (fma.f64 8 (pow.f64 (+.f64 (*.f64 F F) 2) -4) (/.f64 (+.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (*.f64 -4 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) (+.f64 (*.f64 F F) 2))) (pow.f64 x 3))) (/.f64 (*.f64 (fma.f64 4 (pow.f64 (+.f64 (*.f64 F F) 2) -3) (neg.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))) (*.f64 x x)) 2))) (-.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -1/2) (*.f64 x (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3)))))","(/.f64 1 (+.f64 (*.f64 2 x) 2))","(/.f64 1 (fma.f64 2 x 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 F 2) (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))","(-.f64 (/.f64 1 (fma.f64 2 x 2)) (*.f64 (*.f64 F F) (pow.f64 (fma.f64 2 x 2) -2)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 F 2) (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (+.f64 (/.f64 (pow.f64 F 4) (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (/.f64 1 (+.f64 (*.f64 2 x) 2))))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 F F)) (/.f64 (pow.f64 F 4) (fma.f64 2 x 2))) (pow.f64 (fma.f64 2 x 2) 2)) (/.f64 1 (fma.f64 2 x 2)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 F 2) (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 x) 2)))) (+.f64 (/.f64 (pow.f64 F 4) (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 F 6) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 F F)) (/.f64 (pow.f64 F 4) (fma.f64 2 x 2))) (pow.f64 (fma.f64 2 x 2) 2)) (-.f64 (/.f64 1 (fma.f64 2 x 2)) (*.f64 (pow.f64 (fma.f64 2 x 2) -4) (pow.f64 F 6))))","(/.f64 1 (pow.f64 F 2))","(pow.f64 F -2)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2)))","(-.f64 (pow.f64 F -2) (*.f64 (fma.f64 2 x 2) (pow.f64 F -4)))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2))))","(+.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 F 6)) (-.f64 (pow.f64 F -2) (*.f64 (fma.f64 2 x 2) (pow.f64 F -4))))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (+.f64 (/.f64 1 (pow.f64 F 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2)) (pow.f64 F 8))))))","(+.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 F 6)) (-.f64 (-.f64 (pow.f64 F -2) (*.f64 (fma.f64 2 x 2) (pow.f64 F -4))) (*.f64 (pow.f64 (fma.f64 2 x 2) 3) (pow.f64 F -8))))","(/.f64 1 (pow.f64 F 2))","(pow.f64 F -2)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2)))","(-.f64 (pow.f64 F -2) (*.f64 (fma.f64 2 x 2) (pow.f64 F -4)))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (/.f64 1 (pow.f64 F 2))))","(+.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 F 6)) (-.f64 (pow.f64 F -2) (*.f64 (fma.f64 2 x 2) (pow.f64 F -4))))","(+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 2 x) 2) 2) (pow.f64 F 6)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 x) 2) (pow.f64 F 4))) (+.f64 (/.f64 1 (pow.f64 F 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2)) (pow.f64 F 8))))))","(+.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 F 6)) (-.f64 (-.f64 (pow.f64 F -2) (*.f64 (fma.f64 2 x 2) (pow.f64 F -4))) (*.f64 (pow.f64 (fma.f64 2 x 2) 3) (pow.f64 F -8))))","(/.f64 1 (+.f64 (pow.f64 F 2) 2))","(/.f64 1 (+.f64 (*.f64 F F) 2))","(+.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) (*.f64 -2 (/.f64 x (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))","(+.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)) (*.f64 (*.f64 -2 x) (pow.f64 (+.f64 (*.f64 F F) 2) -2)))","(+.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))) (*.f64 4 (/.f64 (pow.f64 x 2) (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))","(+.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)) (fma.f64 -2 (*.f64 x (pow.f64 (+.f64 (*.f64 F F) 2) -2)) (*.f64 4 (*.f64 (*.f64 x x) (pow.f64 (+.f64 (*.f64 F F) 2) -3)))))","(+.f64 (*.f64 -8 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (+.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))) (*.f64 4 (/.f64 (pow.f64 x 2) (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))","(fma.f64 -8 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 (*.f64 F F) 2) -4)) (+.f64 (/.f64 1 (+.f64 (*.f64 F F) 2)) (fma.f64 -2 (*.f64 x (pow.f64 (+.f64 (*.f64 F F) 2) -2)) (*.f64 4 (*.f64 (*.f64 x x) (pow.f64 (+.f64 (*.f64 F F) 2) -3))))))","(/.f64 1/2 x)","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x)))","(fma.f64 -1/4 (*.f64 (+.f64 (*.f64 F F) 2) (pow.f64 x -2)) (/.f64 1/2 x))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3)))))","(+.f64 (fma.f64 -1/4 (*.f64 (+.f64 (*.f64 F F) 2) (pow.f64 x -2)) (/.f64 1/2 x)) (/.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 F F) 2) 2)) (pow.f64 x 3)))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3) (pow.f64 x 4))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3))))))","(+.f64 (fma.f64 -1/4 (*.f64 (+.f64 (*.f64 F F) 2) (pow.f64 x -2)) (/.f64 1/2 x)) (fma.f64 -1/16 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 3) (pow.f64 x -4)) (/.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 F F) 2) 2)) (pow.f64 x 3))))","(/.f64 1/2 x)","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x)))","(fma.f64 -1/4 (*.f64 (+.f64 (*.f64 F F) 2) (pow.f64 x -2)) (/.f64 1/2 x))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3)))))","(+.f64 (fma.f64 -1/4 (*.f64 (+.f64 (*.f64 F F) 2) (pow.f64 x -2)) (/.f64 1/2 x)) (/.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 F F) 2) 2)) (pow.f64 x 3)))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 F 2) 2) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3) (pow.f64 x 4))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2) (pow.f64 x 3))))))","(+.f64 (fma.f64 -1/4 (*.f64 (+.f64 (*.f64 F F) 2) (pow.f64 x -2)) (/.f64 1/2 x)) (fma.f64 -1/16 (*.f64 (pow.f64 (+.f64 (*.f64 F F) 2) 3) (pow.f64 x -4)) (/.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 F F) 2) 2)) (pow.f64 x 3))))"]],"time":287.081787109375,"type":"simplify"},{"compiler":[[13391,8665]],"time":147.205078125,"type":"eval"},{"alts":[["(/.f64 (+.f64 (*.f64 F (/.f64 1 F)) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","fresh",30.793806544442738],["(fma.f64 (*.f64 F (/.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (sin.f64 B))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","fresh",11.595612488012549],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (*.f64 (/.f64 -1 (tan.f64 B)) x))","fresh",14.546060198456248],["(/.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (cbrt.f64 (sin.f64 B))) (cbrt.f64 (pow.f64 (sin.f64 B) 2)))","fresh",23.39353093426],["(+.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 -1 (sin.f64 B)))","fresh",32.48400036600159],["(/.f64 (+.f64 (*.f64 F (/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","done",10.822927507848265],["(/.f64 (+.f64 1 (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","fresh",30.782087794442738],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (-.f64 (*.f64 0 (tan.f64 B)) (*.f64 (tan.f64 B) x)) (pow.f64 (tan.f64 B) 2)))","fresh",24.24759497695356],["(*.f64 (/.f64 1 (sin.f64 B)) (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))))","fresh",10.922204998079769]],"compiler":[[17,12],[36,26],[23,16],[30,21],[16,11],[34,24],[13,10],[31,20],[25,18]],"count":[[292,9]],"kept":[{"done":[0,0],"fresh":[8,8],"new":[283,0],"picked":[1,1]}],"min-error":[0.01171875],"time":98.596923828125,"type":"prune"},{"accuracy":[0.162441259768442],"baseline":[10.806638738311381],"branch":[["F",0.162441259768442,3],["B",10.80663873831138,1],["x",10.806638738311383,1],["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))",7.202733253808394,4]],"compiler":[[4,3],[4,3],[4,3],[30,23],[544,273]],"count":[[22,3]],"inputs":[["(/.f64 (+.f64 (*.f64 F (/.f64 1 F)) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","(/.f64 (/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))) (cbrt.f64 (sin.f64 B))) (cbrt.f64 (pow.f64 (sin.f64 B) 2)))","(/.f64 (+.f64 (*.f64 F (/.f64 (cbrt.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) (cbrt.f64 (fma.f64 F F (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","(/.f64 (+.f64 1 (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","(*.f64 (/.f64 1 (sin.f64 B)) (fma.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (neg.f64 x) (cos.f64 B))))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))","(fma.f64 (*.f64 F (/.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (sin.f64 B))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (/.f64 1 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2)))) (/.f64 (neg.f64 x) (tan.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (*.f64 (/.f64 -1 (tan.f64 B)) x))","(/.f64 (-.f64 (*.f64 (*.f64 F (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (tan.f64 B)) (*.f64 (sin.f64 B) x)) (*.f64 (sin.f64 B) (tan.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) 3) (/.f64 (neg.f64 x) (tan.f64 B)))","(fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) (*.f64 2 -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) 2))) (*.f64 (+.f64 (neg.f64 (/.f64 (cos.f64 B) (sin.f64 B))) (neg.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (pow.f64 (+.f64 (*.f64 F F) 2) -3))))) x))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (-.f64 (*.f64 0 (tan.f64 B)) (*.f64 (tan.f64 B) x)) (pow.f64 (tan.f64 B) 2)))","(+.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 -1 (sin.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (/.f64 (/.f64 (neg.f64 x) (cbrt.f64 (tan.f64 B))) (pow.f64 (cbrt.f64 (cbrt.f64 (tan.f64 B))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (tan.f64 B))) 2) 2)))","(+.f64 (/.f64 1 (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 (neg.f64 x) (tan.f64 B)))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) -3)) (/.f64 (pow.f64 F 3) (sin.f64 B))) (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(fma.f64 (/.f64 F (sin.f64 B)) (/.f64 1 F) (/.f64 (neg.f64 x) (tan.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))"]],"link":["."],"name":["VandenBroeck and Keller, Equation (23)"],"oracle":[56.90682275221691],"outputs":[["(+.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 -1 (sin.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","(/.f64 (+.f64 1 (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))"]],"time":68.882080078125,"times":[["F",19.56201171875],["B",7.053955078125],["x",7.10986328125],["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))",26.0400390625]],"type":"regimes"},{"bstep":[[4039657310128.013,434181327160327.8,291.474853515625],[-1.230377030264496e+33,-2035648614836337700.0,403.430908203125]],"compiler":[[14,11],[23,16],[14,11],[23,16],[14,11],[23,16],[14,11],[23,16],[14,11],[23,16],[14,11],[23,16],[14,11],[23,16],[23,16],[17,12],[23,16],[17,12],[23,16],[17,12],[23,16],[17,12],[23,16],[17,12],[23,16],[17,12],[23,16],[17,12],[23,16],[17,12],[23,16],[17,12],[23,16],[17,12],[32,25],[4,3]],"method":["binary-search","binary-search"],"time":695.193115234375,"type":"bsearch"},{"compiler":[[53,32]],"inputs":[["(if (<=.f64 F -2050000000000000000) (+.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 -1 (sin.f64 B))) (if (<=.f64 F 4100000000000) (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) (/.f64 (+.f64 1 (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 F -2050000000000000000) (+.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 -1 (sin.f64 B))) (if (<=.f64 F 4100000000000) (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) (/.f64 (+.f64 1 (*.f64 (neg.f64 x) (cos.f64 B))) (sin.f64 B))))","(if (<=.f64 F -2050000000000000000) (/.f64 (fma.f64 (neg.f64 x) (cos.f64 B) -1) (sin.f64 B)) (if (<=.f64 F 4100000000000) (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) (/.f64 (fma.f64 (neg.f64 x) (cos.f64 B) 1) (sin.f64 B))))"]],"stop":[["fuel",1]],"time":27.85986328125,"type":"simplify"},{"time":0.0400390625,"type":"soundness"},{"compiler":[[53,32]],"remove-preprocessing":[[]],"time":18.990966796875,"type":"end"}]