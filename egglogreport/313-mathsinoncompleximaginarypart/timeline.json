[{"compiler":[[15,12]],"method":["search"],"sampling":[[12,0.49951183795928955,0.2809754088521004,0.21951275318861008],[11,0.49951183795928955,0.2809754088521004,0.21951275318861008],[10,0.49951183795928955,0.31219489872455597,0.18829326331615448],[9,0.49951183795928955,0.31219489872455597,0.18829326331615448],[8,0.49951183795928955,0.37463387846946716,0.1258542835712433],[7,0.49951183795928955,0.37463387846946716,0.1258542835712433],[6,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[5,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":69.18603515625,"type":"analyze"},{"outcomes":[["body",512,"invalid",125.128173828125,1062],["body",256,"invalid",96.043701171875,1528],["body",1024,"invalid",381.230712890625,1991],["body",512,"valid",259.3427734375,1782],["body",1024,"valid",1392.90625,5001],["body",256,"valid",75.638671875,1061],["body",2048,"valid",176.271728515625,412]],"time":2520.85693359375,"type":"sample"},{"compiler":[[14,11]],"inputs":[["0","1"],["(*.f64 (*.f64 1/2 (cos.f64 re)) (-.f64 (exp.f64 (-.f64 0 im)) (exp.f64 im)))","(*.f64 (*.f64 1/2 (cos.f64 im)) (-.f64 (exp.f64 (-.f64 0 re)) (exp.f64 re)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (*.f64 1/2 (cos.f64 re)) (-.f64 (exp.f64 (-.f64 0 im)) (exp.f64 im)))","(*.f64 1/2 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 1/2 (cos.f64 im)) (-.f64 (exp.f64 (-.f64 0 re)) (exp.f64 re)))","(*.f64 1/2 (*.f64 (cos.f64 im) (-.f64 (exp.f64 (neg.f64 re)) (exp.f64 re))))"]],"symmetry":[[]],"time":61.242919921875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (*.f64 1/2 (cos.f64 re)) (-.f64 (exp.f64 (-.f64 0 im)) (exp.f64 im)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 1/2 (cos.f64 re)) (-.f64 (exp.f64 (-.f64 0 im)) (exp.f64 im)))","(*.f64 1/2 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))"]],"time":19.3310546875,"type":"simplify"},{"compiler":[[25,17]],"time":0.43603515625,"type":"eval"},{"alts":[["(*.f64 1/2 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","next",58.34261844355968]],"compiler":[[13,10],[13,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[58.34261844355968],"time":0.93701171875,"type":"prune"},{"compiler":[[40,11]],"locations":[["(*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))",0.01171875,true],["(cos.f64 re)",0.0234375,true],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))",4.97977469276862,true]],"time":8.81298828125,"type":"localize"},{"count":[[3,24]],"series":[["(*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","im","-inf",0.51611328125],["(*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","im","inf",0.527099609375],["(*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","im","0",0.402099609375],["(*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","re","-inf",0.31201171875],["(*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","re","inf",0.40185546875],["(*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","re","0",0.401123046875],["(cos.f64 re)","re","-inf",0.156982421875],["(cos.f64 re)","re","inf",0.1708984375],["(cos.f64 re)","re","0",0.239990234375],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","im","-inf",0.239013671875],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","im","inf",0.217041015625],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","im","0",0.444091796875]],"time":4.197998046875,"type":"series"},{"count":[[3,107]],"inputs":[["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(cos.f64 re)","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 0) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 0 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 im)) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (exp.f64 im)) (exp.f64 (neg.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (exp.f64 im)) (neg.f64 (exp.f64 (neg.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 (neg.f64 im)) 0) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)) (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (exp.f64 (neg.f64 im))) (neg.f64 (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))))) (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (exp.f64 (*.f64 im -2))) (+.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) im)) 1)) (-.f64 (cbrt.f64 (exp.f64 (neg.f64 im))) (cbrt.f64 (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (exp.f64 im)) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 im) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 (neg.f64 im))) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 im)))) (neg.f64 (cbrt.f64 (exp.f64 (*.f64 im -2)))) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (neg.f64 im))) (cbrt.f64 (exp.f64 (*.f64 im -2))) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 (neg.f64 im)) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (*.f64 im -2))) (cbrt.f64 (exp.f64 (neg.f64 im))) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (neg.f64 im)) 1 (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (exp.f64 im) (exp.f64 (neg.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (exp.f64 im))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) im)) (exp.f64 (neg.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (exp.f64 im)) (exp.f64 (neg.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 im)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) im))) (exp.f64 (neg.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 re) (*.f64 (cos.f64 re) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) 0) (cos.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 re) (*.f64 0 (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 re)) (cos.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 re)) (cbrt.f64 (pow.f64 (cos.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (cbrt.f64 (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 re)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 re) (exp.f64 im)) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 im) (cos.f64 re)) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 re) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 re)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 re)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 re)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 re) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 re)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (cos.f64 re) (exp.f64 im)) (neg.f64 (*.f64 (exp.f64 im) (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (exp.f64 im) (cos.f64 re))) (/.f64 (cos.f64 re) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (*.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 0) (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (cos.f64 re) (exp.f64 im)) 1) (*.f64 (neg.f64 (*.f64 (exp.f64 im) (cos.f64 re))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (*.f64 0 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 2)) (cbrt.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (cos.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 re) (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)) (cos.f64 re)) (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (cbrt.f64 (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)) (*.f64 (cos.f64 re) (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) (cos.f64 re)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 re)) (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) (neg.f64 (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (exp.f64 im)) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 im) (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) (cos.f64 re)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 re) (exp.f64 (neg.f64 im)) (neg.f64 (*.f64 (exp.f64 im) (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (neg.f64 im)) (cos.f64 re) (neg.f64 (*.f64 (exp.f64 im) (cos.f64 re))))))))"]],"rules":[["egg-rr",39],["egg-rr",21],["egg-rr",47]],"time":28.422119140625,"type":"rewrite"},{"count":[[131,136]],"inputs":[["(*.f64 -2 im)","(+.f64 (*.f64 -2 im) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 re 2)))","(+.f64 (*.f64 1/24 (pow.f64 re 4)) (+.f64 1 (*.f64 -1/2 (pow.f64 re 2))))","(+.f64 (*.f64 1/24 (pow.f64 re 4)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 re 2)) (*.f64 -1/720 (pow.f64 re 6)))))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 2))) (exp.f64 (neg.f64 im))) (exp.f64 im))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 2))) (+.f64 (*.f64 1/24 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 4))) (exp.f64 (neg.f64 im)))) (exp.f64 im))","(-.f64 (+.f64 (*.f64 -1/720 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 6))) (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 2))) (+.f64 (*.f64 1/24 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 4))) (exp.f64 (neg.f64 im))))) (exp.f64 im))","(*.f64 -2 (*.f64 (cos.f64 re) im))","(+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))","(+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im)))","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im)))","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im)))","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 im)","(+.f64 (*.f64 -2 im) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -2 im))","(+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))","(fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 re 2)))","(fma.f64 (*.f64 re re) -1/2 1)","(+.f64 (*.f64 1/24 (pow.f64 re 4)) (+.f64 1 (*.f64 -1/2 (pow.f64 re 2))))","(fma.f64 (pow.f64 re 4) 1/24 (fma.f64 (*.f64 re re) -1/2 1))","(+.f64 (*.f64 1/24 (pow.f64 re 4)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 re 2)) (*.f64 -1/720 (pow.f64 re 6)))))","(+.f64 (fma.f64 1/24 (pow.f64 re 4) 1) (fma.f64 -1/720 (pow.f64 re 6) (*.f64 -1/2 (*.f64 re re))))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 2))) (exp.f64 (neg.f64 im))) (exp.f64 im))","(fma.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 re re)) -1/2 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 2))) (+.f64 (*.f64 1/24 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 4))) (exp.f64 (neg.f64 im)))) (exp.f64 im))","(-.f64 (fma.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 re re)) -1/2 (fma.f64 1/24 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 4)) (exp.f64 (neg.f64 im)))) (exp.f64 im))","(-.f64 (+.f64 (*.f64 -1/720 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 6))) (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 2))) (+.f64 (*.f64 1/24 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 4))) (exp.f64 (neg.f64 im))))) (exp.f64 im))","(-.f64 (fma.f64 (*.f64 -1/720 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (pow.f64 re 6) (fma.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 re re)) -1/2 (fma.f64 1/24 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 4)) (exp.f64 (neg.f64 im))))) (exp.f64 im))","(*.f64 -2 (*.f64 (cos.f64 re) im))","(+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))","(fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im)))","(+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im))))","(fma.f64 (*.f64 -1/60 (cos.f64 re)) (pow.f64 im 5) (fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(fma.f64 (*.f64 -1/2520 (cos.f64 re)) (pow.f64 im 7) (fma.f64 (*.f64 -1/60 (cos.f64 re)) (pow.f64 im 5) (fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im)))","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im)))","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im)))","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im)))","(*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))"]],"time":78.990966796875,"type":"simplify"},{"compiler":[[2344,954]],"time":21.56103515625,"type":"eval"},{"alts":[["(*.f64 1/2 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","done",58.34261844355968],["(*.f64 1/2 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","next",0.5904064167880401]],"compiler":[[13,10],[25,20],[25,20]],"count":[[137,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[136,1],"picked":[1,1]}],"min-error":[0.1328125],"time":18.10791015625,"type":"prune"},{"compiler":[[113,85]],"locations":[["(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))",0.01171875,true],["(cos.f64 re)",0.0234375,false],["(*.f64 -1/3 (pow.f64 im 3))",0.11328125,true],["(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))",0.12109375,true]],"time":27.862060546875,"type":"localize"},{"count":[[3,36]],"series":[["(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","im","-inf",0.43115234375],["(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","im","inf",0.449951171875],["(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","im","0",0.280029296875],["(*.f64 -1/3 (pow.f64 im 3))","im","-inf",0.27783203125],["(*.f64 -1/3 (pow.f64 im 3))","im","inf",0.299072265625],["(*.f64 -1/3 (pow.f64 im 3))","im","0",0.386962890625],["(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","im","-inf",0.5009765625],["(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","im","inf",0.48681640625],["(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","im","0",1.130126953125],["(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","re","-inf",0.35107421875],["(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","re","inf",1.612060546875],["(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","re","0",0.906005859375]],"time":7.31396484375,"type":"series"},{"count":[[3,105]],"inputs":[["(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 -1/3 (pow.f64 im 3))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (*.f64 -1/2520 (pow.f64 im 7))) (*.f64 (cos.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/2520 (pow.f64 im 7)) (cos.f64 re)) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cos.f64 re)) (*.f64 (*.f64 -1/2520 (pow.f64 im 7)) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (cos.f64 re) (*.f64 -1/2520 (pow.f64 im 7))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 0) (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 -1/2520 (pow.f64 im 7)) (cos.f64 re))) (*.f64 1 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (cos.f64 re) (*.f64 -1/2520 (pow.f64 im 7)))) (*.f64 1 (*.f64 (cos.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 im -2))) (*.f64 (cos.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 0 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -1/2520 (pow.f64 im 7)) (cos.f64 re)) 1) (*.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cos.f64 re)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 re) (*.f64 -1/2520 (pow.f64 im 7))) 1) (*.f64 (*.f64 (cos.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 im -2)) (cos.f64 re)) (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2)) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2)) (cbrt.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 re) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 re) (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 (cos.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2520 (pow.f64 im 7)) (cos.f64 re) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cos.f64 re)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 (*.f64 -1/3 (pow.f64 im 3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/3 (pow.f64 im 3)) 0) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 0 (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 -1/3 (pow.f64 im 3))) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -1/3) (*.f64 (cbrt.f64 1/9) (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (pow.f64 im 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 im 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 -1/3) im) (*.f64 (*.f64 im im) (cbrt.f64 1/9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 im im) (cbrt.f64 1/9)) (*.f64 (cbrt.f64 -1/3) im))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/3 (*.f64 im im)) im)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 im (*.f64 (*.f64 im im) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/3 (pow.f64 im 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/3 im) (*.f64 im im))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 im im) (*.f64 im -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 im 3) (cbrt.f64 -1/3)) (cbrt.f64 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/3 (pow.f64 im 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -1/3 (pow.f64 im 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -1/27 (pow.f64 (pow.f64 im 3) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 -1/3) im) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 -1/3) im) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 -1/3) im) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -1/3 (pow.f64 im 3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 -1/27 (pow.f64 (pow.f64 im 3) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 0) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (*.f64 0 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cbrt.f64 (pow.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 2)) (cbrt.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/60 (pow.f64 im 5)) 1 (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -1/60 (pow.f64 im 5))) (cbrt.f64 (*.f64 (pow.f64 im (*.f64 2 5)) 1/3600)) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 im 5) -1/60 (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -1/60) (*.f64 (cbrt.f64 1/3600) (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/60 (cbrt.f64 (pow.f64 im 5))) (cbrt.f64 (pow.f64 im (*.f64 2 5))) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 im 3) -1/3 (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 im im) (cbrt.f64 1/9)) (*.f64 (cbrt.f64 -1/3) im) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 im im) (*.f64 im -1/3) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 -1/3) im) (*.f64 (*.f64 im im) (cbrt.f64 1/9)) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 -1/3 (pow.f64 im 3))) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 im (*.f64 (*.f64 im im) -1/3) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/3 (*.f64 im im)) im (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/3 (pow.f64 im 3)) 1 (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/3 im) (*.f64 im im) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -1/3) (*.f64 (cbrt.f64 1/9) (pow.f64 im 3)) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 im 3) (cbrt.f64 -1/3)) (cbrt.f64 1/9) (*.f64 -1/60 (pow.f64 im 5)))))))"]],"rules":[["egg-rr",41],["egg-rr",27],["egg-rr",37]],"time":30.98486328125,"type":"rewrite"},{"count":[[141,128]],"inputs":[["(+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3))))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3))))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 -2 (*.f64 (cos.f64 re) im))","(+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))","(+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 -1/3 (pow.f64 im 3))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(*.f64 -1/60 (pow.f64 im 5))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(*.f64 -1/60 (pow.f64 im 5))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 (pow.f64 im 5) -1/60 (fma.f64 (*.f64 -1/2 (*.f64 re re)) (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1/3 (pow.f64 im 3))))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3)))))))","(fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (+.f64 (*.f64 (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (+.f64 (*.f64 1/24 (pow.f64 re 4)) (*.f64 -1/2 (*.f64 re re)))) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3))))))))","(fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/720 (*.f64 (pow.f64 re 6) (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (+.f64 (*.f64 (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (+.f64 (*.f64 1/24 (pow.f64 re 4)) (*.f64 -1/2 (*.f64 re re)))) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 -2 (*.f64 (cos.f64 re) im))","(+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))","(fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im)))","(+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im))))","(fma.f64 (*.f64 -1/60 (cos.f64 re)) (pow.f64 im 5) (fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (fma.f64 (*.f64 -1/60 (cos.f64 re)) (pow.f64 im 5) (fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(fma.f64 (*.f64 -1/2520 (cos.f64 re)) (pow.f64 im 7) (fma.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5)) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (fma.f64 (*.f64 -1/60 (cos.f64 re)) (pow.f64 im 5) (fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(fma.f64 (*.f64 -1/2520 (cos.f64 re)) (pow.f64 im 7) (fma.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5)) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (fma.f64 (*.f64 -1/60 (cos.f64 re)) (pow.f64 im 5) (fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 -1/3 (pow.f64 im 3))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(*.f64 -1/60 (pow.f64 im 5))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(*.f64 -1/60 (pow.f64 im 5))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))"]],"time":117.47509765625,"type":"simplify"},{"compiler":[[4563,3409]],"time":61.803955078125,"type":"eval"},{"alts":[["(*.f64 1/2 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","done",58.34261844355968],["(*.f64 1/2 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","fresh",0.6893902058618082],["(*.f64 1/2 (*.f64 (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2)) (cos.f64 re))))","fresh",34.12819834983687],["(*.f64 1/2 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) 3))","fresh",1.2319242879888361],["(*.f64 1/2 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","done",0.5904064167880401],["(*.f64 1/2 (*.f64 (pow.f64 (cbrt.f64 (cos.f64 re)) 3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","fresh",0.8535290730831123],["(*.f64 1/2 (*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2))))","next",0.6753864460933662]],"compiler":[[13,10],[32,25],[48,39],[28,23],[25,20],[28,23],[32,25],[32,25],[48,39],[28,23],[28,23],[32,25]],"count":[[158,7]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[156,5],"picked":[1,1]}],"min-error":[0.03515625],"time":49.465087890625,"type":"prune"},{"compiler":[[162,115]],"locations":[["(*.f64 -1/3 (pow.f64 im 3))",0.11328125,false],["(*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))",0.1328125,true],["(*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2)))",0.16244125976844204,true],["(pow.f64 (cos.f64 re) 2)",0.29916000976844204,true]],"time":38.553955078125,"type":"localize"},{"count":[[3,52]],"series":[["(*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))","re","-inf",3.06201171875],["(*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))","re","inf",1.322998046875],["(*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))","re","0",0.614013671875],["(*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))","im","-inf",0.310791015625],["(*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))","im","inf",0.2919921875],["(*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))","im","0",0.538818359375],["(*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2)))","re","-inf",0.464111328125],["(*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2)))","re","inf",1.43896484375],["(*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2)))","re","0",0.633056640625],["(*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2)))","im","-inf",0.325927734375],["(*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2)))","im","inf",0.305908203125],["(*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2)))","im","0",0.462158203125],["(pow.f64 (cos.f64 re) 2)","re","-inf",0.2841796875],["(pow.f64 (cos.f64 re) 2)","re","inf",0.31982421875],["(pow.f64 (cos.f64 re) 2)","re","0",0.31103515625]],"time":11.006103515625,"type":"series"},{"count":[[3,141]],"inputs":[["(pow.f64 (cos.f64 re) 2)","(*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2)))","(*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 re re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cos.f64 (+.f64 re re))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 0 (pow.f64 (sin.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 0) (pow.f64 (cos.f64 re) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 re) 2) (*.f64 (pow.f64 (cos.f64 re) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 1 (*.f64 1/2 (cos.f64 (+.f64 re re)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cos.f64 re) 2)) (pow.f64 (cos.f64 re) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 re) 2) (*.f64 0 (pow.f64 (cos.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 re re))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (sin.f64 re)) (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (pow.f64 (sin.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cos.f64 re) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (pow.f64 (sin.f64 re) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (pow.f64 (sin.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 -1 (pow.f64 (sin.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 re) (cos.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) 4) (cbrt.f64 (pow.f64 (cos.f64 re) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 (cos.f64 re) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 re)) (neg.f64 (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cos.f64 re) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 re) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cos.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) (+.f64 3 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) (+.f64 3 2))) (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (cos.f64 re))) (*.f64 1 (neg.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 re) -1) (*.f64 (cos.f64 re) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (cos.f64 re)) -1) (*.f64 (neg.f64 (cos.f64 re)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (cos.f64 re)) 1) (*.f64 (neg.f64 (cos.f64 re)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (sin.f64 re)) (-.f64 -1 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (sin.f64 re)) (-.f64 1 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) (+.f64 2 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (cos.f64 re) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 4)) (pow.f64 (cos.f64 re) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 re) 2/3) (cbrt.f64 (pow.f64 (cos.f64 re) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cos.f64 re) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 1/2 3) (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 re re))) 3)) (+.f64 (*.f64 1/2 1/2) (-.f64 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 re re))) (*.f64 1/2 (cos.f64 (+.f64 re re)))) (*.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 re re)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (pow.f64 (sin.f64 re) 2) 3)) (+.f64 1 (+.f64 (*.f64 (pow.f64 (sin.f64 re) 2) (pow.f64 (sin.f64 re) 2)) (*.f64 1 (pow.f64 (sin.f64 re) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 re) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 re)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 re) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 re) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 re) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 re) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 re) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 re) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 re) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 re) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (cos.f64 re)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (cos.f64 re) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cos.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cos.f64 re) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 (sin.f64 re) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 re) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (pow.f64 (sin.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (pow.f64 (sin.f64 re) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)) 0) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)) (*.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (cbrt.f64 (cos.f64 re)))) (*.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cbrt.f64 (cos.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (pow.f64 im 7) -1/2520))) (*.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (cos.f64 re) (*.f64 (pow.f64 im 7) -1/2520)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 im -2))) (*.f64 (cos.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (*.f64 (pow.f64 im 7) -1/2520)) (*.f64 (cos.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)) (*.f64 0 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (cbrt.f64 (cos.f64 re))) (pow.f64 (cos.f64 re) 2/3)) (*.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cbrt.f64 (cos.f64 re))) (pow.f64 (cos.f64 re) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (pow.f64 im 7) -1/2520)) (pow.f64 (cos.f64 re) 2/3)) (*.f64 (*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (pow.f64 (cos.f64 re) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cos.f64 re)) (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 im -2)) (cos.f64 re)) (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (cos.f64 re)) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (pow.f64 (cos.f64 re) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))) (pow.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)) 2/3) (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))))) (pow.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (cbrt.f64 (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) 4) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (pow.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2/3) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (pow.f64 (cos.f64 re) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))) (*.f64 (pow.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) 2/3) (pow.f64 (cos.f64 re) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (pow.f64 im 7) -1/2520)) (*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (cbrt.f64 (cos.f64 re))) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cbrt.f64 (cos.f64 re))) (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (pow.f64 im 7) -1/2520)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) 0) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (*.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (cbrt.f64 (cos.f64 re)))) (*.f64 1 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cbrt.f64 (cos.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (pow.f64 im 7) -1/2520))) (*.f64 1 (*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 im -2))) (*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (*.f64 0 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (cbrt.f64 (cos.f64 re))) 1) (*.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cbrt.f64 (cos.f64 re))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (pow.f64 im 7) -1/2520)) 1) (*.f64 (*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 im -2)) (cbrt.f64 (cos.f64 re))) (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cbrt.f64 (cos.f64 re)))) (cbrt.f64 (pow.f64 (cos.f64 re) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2/3)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (pow.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2/3) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))) (pow.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) 2/3) (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))) (pow.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 re) (pow.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (cos.f64 re) (pow.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (pow.f64 im 7) -1/2520) (*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 im 7) -1/2520) (cbrt.f64 (cos.f64 re)) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cbrt.f64 (cos.f64 re))))))))"]],"rules":[["egg-rr",37],["egg-rr",40],["egg-rr",64]],"time":37.138916015625,"type":"rewrite"},{"count":[[193,193]],"inputs":[["1","(+.f64 1 (*.f64 -1 (pow.f64 re 2)))","(+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 re 4)) (*.f64 -1 (pow.f64 re 2))))","(+.f64 1 (+.f64 (*.f64 -2/45 (pow.f64 re 6)) (+.f64 (*.f64 1/3 (pow.f64 re 4)) (*.f64 -1 (pow.f64 re 2)))))","(*.f64 -2 (*.f64 (cos.f64 re) im))","(+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))","(+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) im))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) im)))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) im))))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) im)))))","(*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7)))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7))))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7)))))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) im)))))","(*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7)))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7))))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7)))))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) im)))))","(+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3))))))","(+.f64 (*.f64 -1/72 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/72 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -23/6480 (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1 (pow.f64 re 2)))","(-.f64 1 (*.f64 re re))","(+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 re 4)) (*.f64 -1 (pow.f64 re 2))))","(+.f64 1 (fma.f64 1/3 (pow.f64 re 4) (neg.f64 (*.f64 re re))))","(+.f64 1 (+.f64 (*.f64 -2/45 (pow.f64 re 6)) (+.f64 (*.f64 1/3 (pow.f64 re 4)) (*.f64 -1 (pow.f64 re 2)))))","(+.f64 1 (fma.f64 (pow.f64 re 6) -2/45 (fma.f64 1/3 (pow.f64 re 4) (neg.f64 (*.f64 re re)))))","(*.f64 -2 (*.f64 (cos.f64 re) im))","(+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))","(fma.f64 -2 (*.f64 (cos.f64 re) im) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))))","(+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im))))","(fma.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5)) (fma.f64 -2 (*.f64 (cos.f64 re) im) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (fma.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5)) (fma.f64 -2 (*.f64 (cos.f64 re) im) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))))))","(*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (fma.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5)) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (fma.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5)) (fma.f64 -2 (*.f64 (cos.f64 re) im) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))))))","(*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (fma.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5)) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (fma.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5)) (fma.f64 -2 (*.f64 (cos.f64 re) im) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 (*.f64 -1/2 (*.f64 re re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(fma.f64 -1/2 (*.f64 (*.f64 re re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 im -2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 (*.f64 1/24 (pow.f64 re 4)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))","(+.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (+.f64 (*.f64 -1/2 (*.f64 re re)) (*.f64 -1/720 (pow.f64 re 6)))) (fma.f64 im -2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 (*.f64 1/24 (pow.f64 re 4)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) im))","(*.f64 (cbrt.f64 (*.f64 -8 (cos.f64 re))) im)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) im)))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 3)) (*.f64 (cbrt.f64 (*.f64 -8 (cos.f64 re))) im))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) im))))","(fma.f64 -1/60 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 5)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 3)) (*.f64 (cbrt.f64 (*.f64 -8 (cos.f64 re))) im)))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) im)))))","(fma.f64 -1/60 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 5)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 3)) (fma.f64 -1/2520 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 7)) (*.f64 (cbrt.f64 (*.f64 -8 (cos.f64 re))) im))))","(*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7)))","(*.f64 (cbrt.f64 (*.f64 -1/16003008000 (cos.f64 re))) (pow.f64 im 7))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7))))","(fma.f64 -1/60 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 5)) (*.f64 (cbrt.f64 (*.f64 -1/16003008000 (cos.f64 re))) (pow.f64 im 7)))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7)))))","(fma.f64 -1/60 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 5)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 3)) (*.f64 (cbrt.f64 (*.f64 -1/16003008000 (cos.f64 re))) (pow.f64 im 7))))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) im)))))","(fma.f64 -1/60 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 5)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 3)) (fma.f64 -1/2520 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 7)) (*.f64 (cbrt.f64 (*.f64 -8 (cos.f64 re))) im))))","(*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7)))","(*.f64 (cbrt.f64 (*.f64 -1/16003008000 (cos.f64 re))) (pow.f64 im 7))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7))))","(fma.f64 -1/60 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 5)) (*.f64 (cbrt.f64 (*.f64 -1/16003008000 (cos.f64 re))) (pow.f64 im 7)))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7)))))","(fma.f64 -1/60 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 5)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 3)) (*.f64 (cbrt.f64 (*.f64 -1/16003008000 (cos.f64 re))) (pow.f64 im 7))))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 3))) (+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (pow.f64 im 7))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) im)))))","(fma.f64 -1/60 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 5)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 3)) (fma.f64 -1/2520 (*.f64 (cbrt.f64 (cos.f64 re)) (pow.f64 im 7)) (*.f64 (cbrt.f64 (*.f64 -8 (cos.f64 re))) im))))","(+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 (*.f64 -1/6 (*.f64 re re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1/3 (pow.f64 im 3))))))","(+.f64 (*.f64 -1/72 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3)))))))","(fma.f64 (*.f64 (pow.f64 re 4) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) -1/72 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 (*.f64 -1/6 (*.f64 re re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1/3 (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/72 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -23/6480 (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))))))))","(fma.f64 (*.f64 (pow.f64 re 4) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) -1/72 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 (pow.f64 im 5) -1/60 (fma.f64 -1/6 (*.f64 (*.f64 re re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 (*.f64 -23/6480 (pow.f64 re 6)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1/3 (pow.f64 im 3))))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (cos.f64 re) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))"]],"time":184.948974609375,"type":"simplify"},{"compiler":[[7969,5716]],"time":102.863037109375,"type":"eval"},{"alts":[["(*.f64 1/2 (*.f64 (*.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) 4)))","fresh",17.23705112682095],["(*.f64 1/2 (*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) (cbrt.f64 2)) (cbrt.f64 4)))))","fresh",0.7403194640068961],["(*.f64 1/2 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","next",0.6893902058618082],["(*.f64 1/2 (*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) (sqrt.f64 2)) (sqrt.f64 2)))))","fresh",0.7652894539396257],["(*.f64 1/2 (*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (*.f64 (+.f64 1 (sin.f64 re)) (-.f64 1 (sin.f64 re))))))","fresh",0.9220834606612786],["(*.f64 1/2 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))) 3) (cbrt.f64 (pow.f64 (cos.f64 re) 2))))","fresh",1.2494705891463738],["(*.f64 1/2 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","done",0.5904064167880401],["(*.f64 1/2 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","done",58.34261844355968],["(*.f64 1/2 (*.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (cbrt.f64 (cos.f64 re))))","fresh",17.10283472052587]],"compiler":[[39,29],[41,34],[32,25],[41,34],[37,29],[35,28],[25,20],[13,10],[31,24],[39,29],[41,34],[32,25],[41,34],[37,29],[35,28],[31,24]],"count":[[226,9]],"kept":[{"done":[2,2],"fresh":[4,1],"new":[219,6],"picked":[1,0]}],"min-error":[0.01171875],"time":82.759033203125,"type":"prune"},{"compiler":[[164,118]],"locations":[["(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))",0.10775375976844201,true],["(*.f64 -1/3 (pow.f64 im 3))",0.11328125,false],["(*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))",0.189785009768442,true],["(pow.f64 (cos.f64 re) 2)",0.29916000976844204,false]],"time":41.68701171875,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","im","-inf",0.379150390625],["(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","im","inf",0.363037109375],["(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","im","0",0.745849609375],["(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","re","-inf",1.552978515625],["(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","re","inf",1.678955078125],["(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","re","0",0.807861328125],["(*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","im","-inf",0.245849609375],["(*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","im","inf",0.218994140625],["(*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","im","0",0.22705078125],["(*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","re","-inf",0.219970703125],["(*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","re","inf",0.251953125],["(*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","re","0",0.39208984375]],"time":7.493896484375,"type":"series"},{"count":[[2,83]],"inputs":[["(*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (*.f64 (pow.f64 im 7) -1/2520)) (*.f64 (cos.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (cos.f64 re)) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cos.f64 re)) (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (cos.f64 re) (*.f64 (pow.f64 im 7) -1/2520)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (cos.f64 re))) (*.f64 1 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (cos.f64 re) (*.f64 (pow.f64 im 7) -1/2520))) (*.f64 1 (*.f64 (cos.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 0) (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 im -2))) (*.f64 (cos.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (pow.f64 (cos.f64 re) 2/3))) (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 (cos.f64 re) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (pow.f64 im 7) -1/2520))) (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (cos.f64 re)) 1) (*.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cos.f64 re)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 re) (*.f64 (pow.f64 im 7) -1/2520)) 1) (*.f64 (*.f64 (cos.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 0 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 im -2)) (cos.f64 re)) (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (pow.f64 (cos.f64 re) 2/3)) (cbrt.f64 (cos.f64 re))) (*.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 (cos.f64 re) 2/3)) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (pow.f64 im 7) -1/2520)) (cbrt.f64 (cos.f64 re))) (*.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (cbrt.f64 (cos.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (cbrt.f64 (cbrt.f64 (cos.f64 re)))) (cbrt.f64 (pow.f64 (cos.f64 re) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cos.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (pow.f64 (cos.f64 re) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2/3)) (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2/3) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cos.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (pow.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2/3) (cbrt.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cos.f64 re)) (cbrt.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 re) (cbrt.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (pow.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 re) (*.f64 (pow.f64 im 7) -1/2520) (*.f64 (cos.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 im 7) -1/2520) (cos.f64 re) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cos.f64 re)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (pow.f64 im 7) -1/2520)) (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (pow.f64 (cos.f64 re) 2/3)) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 (cos.f64 re) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 (cos.f64 re) 2/3)) (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (pow.f64 (cos.f64 re) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (pow.f64 im 7) -1/2520)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 0) (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 im -2))) (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (pow.f64 (cos.f64 re) 2/3))) (*.f64 1 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 (cos.f64 re) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (pow.f64 im 7) -1/2520))) (*.f64 1 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 0 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 im -2)) (pow.f64 (cos.f64 re) 2/3)) (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 (cos.f64 re) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (pow.f64 (cos.f64 re) 2/3)) 1) (*.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 (cos.f64 re) 2/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (pow.f64 im 7) -1/2520)) 1) (*.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (pow.f64 (cos.f64 re) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) 4) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (pow.f64 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (cbrt.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (pow.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (pow.f64 (cos.f64 re) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (pow.f64 im 7) -1/2520) (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 im 7) -1/2520) (pow.f64 (cos.f64 re) 2/3) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 (cos.f64 re) 2/3)))))))"]],"rules":[["egg-rr",37],["egg-rr",46]],"time":36.429931640625,"type":"rewrite"},{"count":[[131,128]],"inputs":[["(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 -2 (*.f64 (cos.f64 re) im))","(+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))","(+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3))))))","(+.f64 (*.f64 -1/405 (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/405 (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -1/1701 (*.f64 (pow.f64 re 8) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) im))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) im)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3))))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) im)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) im)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3))))))","(*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) im)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3))))))","(*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) im)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 -1/2 (*.f64 (*.f64 re re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(fma.f64 (*.f64 -1/2 (*.f64 re re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 1/24 (*.f64 (pow.f64 re 4) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 re 4) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))","(+.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (+.f64 (*.f64 -1/2 (*.f64 re re)) (*.f64 -1/720 (pow.f64 re 6)))) (fma.f64 -2 im (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 1/24 (*.f64 (pow.f64 re 4) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 -2 (*.f64 (cos.f64 re) im))","(+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))","(fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im)))","(+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im))))","(fma.f64 (*.f64 (cos.f64 re) (pow.f64 im 5)) -1/60 (fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(fma.f64 (*.f64 (cos.f64 re) (pow.f64 im 7)) -1/2520 (fma.f64 (*.f64 (cos.f64 re) (pow.f64 im 5)) -1/60 (fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (fma.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5)) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(fma.f64 (*.f64 (cos.f64 re) (pow.f64 im 7)) -1/2520 (fma.f64 (*.f64 (cos.f64 re) (pow.f64 im 5)) -1/60 (fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7)) (fma.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5)) (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (cos.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (cos.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3))) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(fma.f64 (*.f64 (cos.f64 re) (pow.f64 im 7)) -1/2520 (fma.f64 (*.f64 (cos.f64 re) (pow.f64 im 5)) -1/60 (fma.f64 -1/3 (*.f64 (cos.f64 re) (pow.f64 im 3)) (*.f64 -2 (*.f64 (cos.f64 re) im)))))","(+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (fma.f64 (*.f64 re re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (pow.f64 im 3))))))","(+.f64 (*.f64 -1/405 (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 -1/3 (pow.f64 im 3)))))))","(fma.f64 -1/405 (*.f64 (pow.f64 re 6) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (fma.f64 (*.f64 re re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/405 (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -1/1701 (*.f64 (pow.f64 re 8) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))))))))","(fma.f64 -1/405 (*.f64 (pow.f64 re 6) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (fma.f64 (*.f64 re re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (pow.f64 im 3)) (*.f64 -1/1701 (*.f64 (pow.f64 re 8) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) im))","(*.f64 -2 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) im))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) im)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3))))","(fma.f64 -2 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) im) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 3))))","(+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) im)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3)))))","(fma.f64 -1/60 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 5)) (fma.f64 -2 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) im) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) im)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3))))))","(fma.f64 -1/2520 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 7)) (fma.f64 -1/60 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 5)) (fma.f64 -2 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) im) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 3))))))","(*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7)))","(*.f64 -1/2520 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))))","(fma.f64 -1/2520 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 7)) (*.f64 -1/60 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3)))))","(fma.f64 -1/2520 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 7)) (fma.f64 -1/60 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 5)) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) im)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3))))))","(fma.f64 -1/2520 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 7)) (fma.f64 -1/60 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 5)) (fma.f64 -2 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) im) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 3))))))","(*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7)))","(*.f64 -1/2520 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 7)))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))))","(fma.f64 -1/2520 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 7)) (*.f64 -1/60 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 5))))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3)))))","(fma.f64 -1/2520 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 7)) (fma.f64 -1/60 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 5)) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/2520 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 7))) (+.f64 (*.f64 -1/60 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 5))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) im)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (pow.f64 im 3))))))","(fma.f64 -1/2520 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 7)) (fma.f64 -1/60 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 5)) (fma.f64 -2 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) im) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (pow.f64 im 3))))))"]],"time":188.3251953125,"type":"simplify"},{"compiler":[[8145,5848]],"time":104.327880859375,"type":"eval"},{"alts":[["(*.f64 1/2 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","done",58.34261844355968],["(*.f64 1/2 (*.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))))","fresh",17.09111597052587],["(*.f64 1/2 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) (cbrt.f64 2)) (cbrt.f64 4))) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","fresh",0.7610802414362781],["(*.f64 1/2 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","done",0.6893902058618082],["(*.f64 1/2 (*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) (sqrt.f64 2)) (sqrt.f64 2)))))","fresh",0.7652894539396257],["(*.f64 1/2 (*.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2/3)) (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))","fresh",17.132099771683407],["(*.f64 1/2 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (*.f64 (+.f64 1 (sin.f64 re)) (-.f64 1 (sin.f64 re)))) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","fresh",0.9211021271911455],["(*.f64 1/2 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))","fresh",0.7173977253986922],["(*.f64 1/2 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","done",0.5904064167880401]],"compiler":[[13,10],[31,24],[41,34],[32,25],[41,34],[38,29],[37,29],[38,31],[25,20]],"count":[[234,9]],"kept":[{"done":[2,2],"fresh":[6,1],"new":[225,5],"picked":[1,1]}],"min-error":[0.0078125],"time":72.383056640625,"type":"prune"},{"accuracy":[0.5904064167880401],"baseline":[0.5904064167880401],"branch":[["re",0.5904064167880401,1],["im",0.5904064167880401,1],["(*.f64 (*.f64 1/2 (cos.f64 re)) (-.f64 (exp.f64 (-.f64 0 im)) (exp.f64 im)))",0.5904064167880401,1],["(*.f64 1/2 (cos.f64 re))",0.5904064167880401,1],["(cos.f64 re)",0.5904064167880401,1],["(-.f64 (exp.f64 (-.f64 0 im)) (exp.f64 im))",0.5904064167880401,1]],"compiler":[[3,2],[3,2],[14,11],[6,5],[4,3],[9,7],[593,427]],"count":[[19,1]],"inputs":[["(*.f64 1/2 (*.f64 (pow.f64 (cos.f64 re) 2/3) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))))","(*.f64 1/2 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) (cbrt.f64 2)) (cbrt.f64 4))) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","(*.f64 1/2 (*.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2/3)) (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))","(*.f64 1/2 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (*.f64 (+.f64 1 (sin.f64 re)) (-.f64 1 (sin.f64 re)))) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","(*.f64 1/2 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 re) 2) 1) 1/3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))","(*.f64 1/2 (*.f64 (*.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 re))) 4)))","(*.f64 1/2 (*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) (cbrt.f64 2)) (cbrt.f64 4)))))","(*.f64 1/2 (*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (+.f64 re re)) (cos.f64 0)) (sqrt.f64 2)) (sqrt.f64 2)))))","(*.f64 1/2 (*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (*.f64 (+.f64 1 (sin.f64 re)) (-.f64 1 (sin.f64 re))))))","(*.f64 1/2 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re)))) 3) (cbrt.f64 (pow.f64 (cos.f64 re) 2))))","(*.f64 1/2 (*.f64 (*.f64 (pow.f64 (cos.f64 re) 2/3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (cbrt.f64 (cos.f64 re))))","(*.f64 1/2 (*.f64 (cbrt.f64 (cos.f64 re)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 re) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","(*.f64 1/2 (*.f64 (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2)) (cos.f64 re))))","(*.f64 1/2 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) 3))","(*.f64 1/2 (*.f64 (pow.f64 (cbrt.f64 (cos.f64 re)) 3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (cos.f64 re))) (cbrt.f64 (pow.f64 (cos.f64 re) 2))))","(*.f64 1/2 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (cos.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 1/2 (cos.f64 re)) (-.f64 (exp.f64 (-.f64 0 im)) (exp.f64 im)))"]],"link":["."],"name":["math.sin on complex, imaginary part"],"oracle":[60.29235061381038],"outputs":[["(*.f64 1/2 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))"]],"time":40.137939453125,"times":[["re",6.262939453125],["im",6.427001953125],["(*.f64 (*.f64 1/2 (cos.f64 re)) (-.f64 (exp.f64 (-.f64 0 im)) (exp.f64 im)))",2.358154296875],["(*.f64 1/2 (cos.f64 re))",5.3662109375],["(cos.f64 re)",5.547119140625],["(-.f64 (exp.f64 (-.f64 0 im)) (exp.f64 im))",2.305908203125]],"type":"regimes"},{"compiler":[[25,20]],"inputs":[["(*.f64 1/2 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (*.f64 (cos.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (cos.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))"]],"stop":[["fuel",1]],"time":20.583984375,"type":"simplify"},{"time":0.02099609375,"type":"soundness"},{"compiler":[[25,20]],"remove-preprocessing":[[]],"time":14.412109375,"type":"end"}]