[{"compiler":[[29,22]],"method":["search"],"sampling":[[12,0.0,0.8839577806781449,0.1160422193218551],[11,0.0,0.8893210104561149,0.11067898954388511],[10,0.0,0.8893210104561149,0.11067898954388511],[9,0.0,0.8893210104561149,0.11067898954388511],[8,0.0,0.904923133446573,0.09507686655342695],[7,0.0,0.904923133446573,0.09507686655342695],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":424.989013671875,"type":"analyze"},{"outcomes":[["body",512,"invalid",100.555419921875,445],["body",1024,"invalid",214.049072265625,564],["body",512,"valid",353.261474609375,1452],["body",2048,"invalid",1322.47265625,896],["body",256,"invalid",176.971923828125,1493],["body",4096,"valid",767.41259765625,449],["body",1024,"valid",1660.931640625,4123],["body",4096,"invalid",2551.47021484375,967],["body",2048,"valid",687.65478515625,989],["body",256,"valid",156.51708984375,1243]],"time":8004.57177734375,"type":"sample"},{"compiler":[[28,21]],"inputs":[["0","1","2"],["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 l 3) (*.f64 t t)) (sin.f64 k)) (tan.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k l) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 k 3) (*.f64 l l)) (sin.f64 t)) (tan.f64 t)) (-.f64 (+.f64 1 (pow.f64 (/.f64 t k) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 k k)) (sin.f64 l)) (tan.f64 l)) (-.f64 (+.f64 1 (pow.f64 (/.f64 l t) 2)) 1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))) (+.f64 -1 (+.f64 1 (pow.f64 (/.f64 k t) 2))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 l 3) (*.f64 t t)) (sin.f64 k)) (tan.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k l) 2)) 1)))","(/.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (*.f64 (pow.f64 l 3) (pow.f64 t -2)))) (+.f64 -1 (+.f64 1 (pow.f64 (/.f64 k l) 2))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 k 3) (*.f64 l l)) (sin.f64 t)) (tan.f64 t)) (-.f64 (+.f64 1 (pow.f64 (/.f64 t k) 2)) 1)))","(/.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 t) (tan.f64 t)) (*.f64 (pow.f64 k 3) (pow.f64 l -2)))) (+.f64 -1 (+.f64 1 (pow.f64 (/.f64 t k) 2))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 k k)) (sin.f64 l)) (tan.f64 l)) (-.f64 (+.f64 1 (pow.f64 (/.f64 l t) 2)) 1)))","(/.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 l) (tan.f64 l)) (*.f64 (pow.f64 t 3) (pow.f64 k -2)))) (+.f64 -1 (+.f64 1 (pow.f64 (/.f64 l t) 2))))"]],"symmetry":[[]],"time":62.677001953125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))"]],"time":24.737060546875,"type":"simplify"},{"compiler":[[49,33]],"time":0.653076171875,"type":"eval"},{"alts":[["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",51.26727956166699],["(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","next",44.09259757127511]],"compiler":[[28,21],[24,18],[28,21],[24,18]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[44.08478507127511],"time":3.046875,"type":"prune"},{"compiler":[[90,44]],"locations":[["(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))",0.36490554565254085,true],["(*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))",0.4000674324315151,true],["(*.f64 (pow.f64 t 3) (pow.f64 l -2))",16.419785287045467,true],["(*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))",31.00962889778618,true]],"time":23.51318359375,"type":"localize"},{"count":[[4,120]],"series":[["(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","k","-inf",0.72216796875],["(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","k","inf",0.72802734375],["(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","k","0",1.281005859375],["(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","l","-inf",0.197998046875],["(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","l","inf",0.77880859375],["(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","l","0",0.64599609375],["(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","t","-inf",0.3408203125],["(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","t","inf",2.248046875],["(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","t","0",0.69384765625],["(*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))","t","-inf",0.19287109375],["(*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))","t","inf",0.427978515625],["(*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))","t","0",0.47314453125],["(*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))","k","-inf",0.574951171875],["(*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))","k","inf",0.718994140625],["(*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))","k","0",0.44384765625],["(*.f64 (pow.f64 t 3) (pow.f64 l -2))","l","-inf",0.180908203125],["(*.f64 (pow.f64 t 3) (pow.f64 l -2))","l","inf",0.283935546875],["(*.f64 (pow.f64 t 3) (pow.f64 l -2))","l","0",0.638916015625],["(*.f64 (pow.f64 t 3) (pow.f64 l -2))","t","-inf",0.424072265625],["(*.f64 (pow.f64 t 3) (pow.f64 l -2))","t","inf",0.4619140625],["(*.f64 (pow.f64 t 3) (pow.f64 l -2))","t","0",0.529052734375],["(*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))","k","-inf",1.14306640625],["(*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))","k","inf",1.986083984375],["(*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))","k","0",1.010009765625],["(*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))","l","-inf",0.60595703125],["(*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))","l","inf",0.531005859375],["(*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))","l","0",1.443115234375],["(*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))","t","-inf",0.444091796875],["(*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))","t","inf",1.23095703125],["(*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))","t","0",2.407958984375]],"time":24.31982421875,"type":"series"},{"count":[[4,269]],"inputs":[["(*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))","(*.f64 (pow.f64 t 3) (pow.f64 l -2))","(*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))","(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 0) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (*.f64 0 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 2)) (*.f64 (pow.f64 t 3) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t t) (*.f64 t (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (*.f64 (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (pow.f64 (/.f64 k t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 3) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))) (pow.f64 t 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 k t) 2) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (cbrt.f64 (pow.f64 (/.f64 k t) 2))) (cbrt.f64 (pow.f64 (/.f64 k t) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (/.f64 k t)) (/.f64 k t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (pow.f64 (/.f64 k t) 2)) (*.f64 (sin.f64 k) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) (pow.f64 t 3)) (pow.f64 l -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (*.f64 (pow.f64 (/.f64 k t) 2) (*.f64 (pow.f64 t 3) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 k) (*.f64 (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)) (*.f64 (pow.f64 t 3) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 (*.f64 t t) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 l -2) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))) (pow.f64 (cbrt.f64 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (/.f64 k t) 2)) (*.f64 (sin.f64 k) (tan.f64 k))) (*.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 t 3)) (*.f64 (pow.f64 l -2) (*.f64 (neg.f64 (pow.f64 (/.f64 k t) 2)) (*.f64 (sin.f64 k) (tan.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 t) (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) (neg.f64 (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (*.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 l -2))) (neg.f64 (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 l -2)) (*.f64 (neg.f64 (pow.f64 (/.f64 k t) 2)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (pow.f64 (/.f64 k t) 2)) (pow.f64 (sin.f64 k) 2)) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (/.f64 (*.f64 k k) t)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (neg.f64 (/.f64 (*.f64 k k) t))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (*.f64 k k)) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (neg.f64 (*.f64 k k))) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (/.f64 k t)) k) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (/.f64 k t)) (/.f64 k (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (/.f64 k t)) (neg.f64 k)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (sin.f64 k)) (*.f64 (sin.f64 k) (pow.f64 (/.f64 k t) 2))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 (/.f64 k t) 2) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 k k) t) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k)))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 k k) t)) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k)))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 k k) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k)))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k)))) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 0) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 0 (*.f64 (pow.f64 t 3) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2) (*.f64 t (cbrt.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 3) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (pow.f64 l (*.f64 2 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (cbrt.f64 (pow.f64 l (*.f64 2 -2))) (pow.f64 t 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t t) (*.f64 t (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 l -2) t) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 3) (pow.f64 l -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 l -2) (pow.f64 t 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 l -2) (*.f64 t t)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 (*.f64 t t) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 0) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) (*.f64 0 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 k)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 2)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 2)) (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 k t) 2) (sin.f64 k)) (tan.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 k t) 2) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 k) (tan.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 k t) 2)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 k t) 4)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 k) (*.f64 (sin.f64 k) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 k) (tan.f64 k)) 2)) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 k t) 2) (*.f64 (sin.f64 k) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 k) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)) (sin.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (/.f64 k t)) (/.f64 k t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 k t) (*.f64 (/.f64 k t) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (cbrt.f64 (pow.f64 (/.f64 k t) 2))) (cbrt.f64 (pow.f64 (/.f64 k t) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (pow.f64 (/.f64 k t) 2)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (/.f64 k t) 2) (sin.f64 k)) (neg.f64 (sin.f64 k))) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (*.f64 k k)) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 k)) (*.f64 (sin.f64 k) (pow.f64 (/.f64 k t) 2))) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 k k) (*.f64 (sin.f64 k) (tan.f64 k))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 k t) 2) (pow.f64 (sin.f64 k) 2)) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (/.f64 k t) 2) (sin.f64 k)) (sin.f64 k)) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (/.f64 (*.f64 k k) t)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (neg.f64 (/.f64 (*.f64 k k) t))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (neg.f64 (*.f64 k k))) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (/.f64 k t)) k) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (/.f64 k t)) (/.f64 k (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (/.f64 k t)) (neg.f64 k)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 k) (*.f64 (sin.f64 k) (pow.f64 (/.f64 k t) 2))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 (/.f64 k t) 2)) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 k (*.f64 (/.f64 k t) (*.f64 (sin.f64 k) (tan.f64 k)))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 k (cbrt.f64 t)) (*.f64 (/.f64 k t) (*.f64 (sin.f64 k) (tan.f64 k)))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 k) (*.f64 (/.f64 k t) (*.f64 (sin.f64 k) (tan.f64 k)))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 k) (pow.f64 (/.f64 k t) 2)) (sin.f64 k)) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 k k) t) (*.f64 (sin.f64 k) (tan.f64 k))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 k k) t)) (*.f64 (sin.f64 k) (tan.f64 k))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (sin.f64 k) (tan.f64 k))) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (/.f64 k t) 2)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))) 0) (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 t -3) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))) (/.f64 (pow.f64 t -3) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k)))) (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (*.f64 0 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))) (/.f64 -2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (/.f64 0 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 1/2)) (/.f64 -2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (pow.f64 t -3)) (/.f64 1 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (/.f64 1 (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (sin.f64 k)) (/.f64 1 (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (*.f64 (sin.f64 k) (tan.f64 k))) (pow.f64 (/.f64 k t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2) (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (pow.f64 t -3) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 t -3) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (/.f64 (cbrt.f64 4) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 2) (pow.f64 t -3)) (/.f64 (cbrt.f64 4) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 2) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k)))) (*.f64 (cbrt.f64 4) (pow.f64 (/.f64 k t) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 2) (/.f64 (cbrt.f64 4) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 2) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (/.f64 (cbrt.f64 4) (*.f64 (pow.f64 t 3) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2) (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))) (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (/.f64 (sqrt.f64 2) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 2) (pow.f64 t -3)) (/.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k)))) (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 k t) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 2) (/.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 3) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 t -3) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) (*.f64 2 (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) -3) (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t -3) (/.f64 2 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k)))) (*.f64 2 (pow.f64 (/.f64 k t) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (neg.f64 (/.f64 (pow.f64 t -3) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (pow.f64 t -3) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (/.f64 -1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (pow.f64 t -3)) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t -3)) (sqrt.f64 2)) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 2) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (cbrt.f64 4)) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (cbrt.f64 4)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (sqrt.f64 2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 t -3) 2) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 2) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (sqrt.f64 2)) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2) (/.f64 (cbrt.f64 (*.f64 2 (*.f64 l l))) t)) (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 2) (pow.f64 t -3)) (cbrt.f64 4)) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 2) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (/.f64 2 (*.f64 t (cbrt.f64 (pow.f64 l -2))))) (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 1) (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (*.f64 2 (pow.f64 t -3))) (pow.f64 l -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (pow.f64 (/.f64 k t) -2)) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 2) (/.f64 (sqrt.f64 2) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 2) (/.f64 (cbrt.f64 4) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 k t) -2))) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 2 (*.f64 l l))) t) (pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2)) (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 2 (*.f64 l l))) t) (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2))) (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 (/.f64 k t) -2))) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (pow.f64 t -3)) (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (pow.f64 l -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) 1) (*.f64 (sin.f64 k) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 1) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -2 (*.f64 (pow.f64 t 3) (pow.f64 l -2))) 1) (*.f64 (neg.f64 (pow.f64 (/.f64 k t) 2)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (sin.f64 k)) 1) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (pow.f64 t -3)) 1) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) 1) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 1/2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 2 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))) (neg.f64 (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 2 (pow.f64 t -3))) (*.f64 (pow.f64 l -2) (*.f64 (neg.f64 (pow.f64 (/.f64 k t) 2)) (*.f64 (sin.f64 k) (tan.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (cbrt.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2))) (neg.f64 (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (sin.f64 k))) (neg.f64 (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -2 (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (*.f64 (neg.f64 (pow.f64 (/.f64 k t) 2)) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (*.f64 (sin.f64 k) (tan.f64 k)))) (neg.f64 (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (*.f64 (sin.f64 k) (tan.f64 k))) (pow.f64 (/.f64 k t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 2) (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))) (sqrt.f64 2)) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (cbrt.f64 4)) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 t -3) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) 2) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k)))) 2) (pow.f64 (/.f64 k t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 2) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k)))) (cbrt.f64 4)) (pow.f64 (/.f64 k t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k)))) (sqrt.f64 2)) (pow.f64 (/.f64 k t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2) (cbrt.f64 -2)) (cbrt.f64 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2) (cbrt.f64 2)) (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) -2) (*.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) (*.f64 2 (*.f64 l l))) (pow.f64 t 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 2) (/.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) (pow.f64 t 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 2) (/.f64 (cbrt.f64 4) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) (pow.f64 t 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2)) (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))) (pow.f64 t 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -2) (pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2)) (cbrt.f64 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -2) (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2))) (cbrt.f64 (*.f64 (neg.f64 (pow.f64 l -2)) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 2) (pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2)) (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2))) (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2))) (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (*.f64 l l)) (/.f64 1 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (pow.f64 t 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (*.f64 (sin.f64 k) (tan.f64 k))) 1) (pow.f64 (/.f64 k t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))))) 1) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))) 1/2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -2 (/.f64 (pow.f64 t -3) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 t -3) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (*.f64 (neg.f64 (pow.f64 (/.f64 k t) 2)) (*.f64 (sin.f64 k) (tan.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (pow.f64 (/.f64 k t) -2)) (*.f64 (sin.f64 k) (tan.f64 k))) 3))))))"]],"rules":[["egg-rr",133],["egg-rr",51],["egg-rr",25],["egg-rr",60]],"time":55.951171875,"type":"rewrite"},{"count":[[389,301]],"inputs":[["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))","(+.f64 (*.f64 (+.f64 (*.f64 -1/6 (/.f64 t (pow.f64 l 2))) (*.f64 1/3 (/.f64 t (pow.f64 l 2)))) (pow.f64 k 6)) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/6 (/.f64 t (pow.f64 l 2))) (*.f64 1/3 (/.f64 t (pow.f64 l 2)))) (pow.f64 k 6)) (+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)) (*.f64 (pow.f64 k 8) (+.f64 (*.f64 1/120 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 -1/18 (/.f64 t (pow.f64 l 2))) (*.f64 2/15 (/.f64 t (pow.f64 l 2))))))))","(+.f64 (*.f64 (pow.f64 k 10) (+.f64 (*.f64 1/360 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 17/315 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 -1/45 (/.f64 t (pow.f64 l 2))) (*.f64 -1/5040 (/.f64 t (pow.f64 l 2))))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (/.f64 t (pow.f64 l 2))) (*.f64 1/3 (/.f64 t (pow.f64 l 2)))) (pow.f64 k 6)) (+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)) (*.f64 (pow.f64 k 8) (+.f64 (*.f64 1/120 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 -1/18 (/.f64 t (pow.f64 l 2))) (*.f64 2/15 (/.f64 t (pow.f64 l 2)))))))))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 k 4) (pow.f64 t 2))","(+.f64 (/.f64 (pow.f64 k 4) (pow.f64 t 2)) (*.f64 1/6 (/.f64 (pow.f64 k 6) (pow.f64 t 2))))","(+.f64 (*.f64 31/360 (/.f64 (pow.f64 k 8) (pow.f64 t 2))) (+.f64 (/.f64 (pow.f64 k 4) (pow.f64 t 2)) (*.f64 1/6 (/.f64 (pow.f64 k 6) (pow.f64 t 2)))))","(+.f64 (*.f64 31/360 (/.f64 (pow.f64 k 8) (pow.f64 t 2))) (+.f64 (/.f64 (pow.f64 k 4) (pow.f64 t 2)) (+.f64 (*.f64 173/5040 (/.f64 (pow.f64 k 10) (pow.f64 t 2))) (*.f64 1/6 (/.f64 (pow.f64 k 6) (pow.f64 t 2))))))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (pow.f64 l 2) (*.f64 (pow.f64 k 4) t)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 2) (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t))) (*.f64 (pow.f64 k 2) (pow.f64 t 2)))) (*.f64 2 (/.f64 (pow.f64 l 2) (*.f64 (pow.f64 k 4) t))))","(+.f64 (*.f64 -2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t)) 2)) (pow.f64 t 3))) (/.f64 (*.f64 (+.f64 (*.f64 2/15 t) (+.f64 (*.f64 -1/18 t) (*.f64 1/120 t))) (pow.f64 l 2)) (pow.f64 t 2)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 2) (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t))) (*.f64 (pow.f64 k 2) (pow.f64 t 2)))) (*.f64 2 (/.f64 (pow.f64 l 2) (*.f64 (pow.f64 k 4) t)))))","(+.f64 (*.f64 -2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t)) 2)) (pow.f64 t 3))) (/.f64 (*.f64 (+.f64 (*.f64 2/15 t) (+.f64 (*.f64 -1/18 t) (*.f64 1/120 t))) (pow.f64 l 2)) (pow.f64 t 2)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 2) (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t))) (*.f64 (pow.f64 k 2) (pow.f64 t 2)))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 k 2) (+.f64 (/.f64 (*.f64 (pow.f64 l 2) (+.f64 (*.f64 1/360 t) (+.f64 (*.f64 -1/45 t) (+.f64 (*.f64 17/315 t) (*.f64 -1/5040 t))))) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2/15 t) (+.f64 (*.f64 -1/18 t) (*.f64 1/120 t))) (*.f64 (pow.f64 l 2) (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t)))) (pow.f64 t 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t)) 2)) (pow.f64 t 3))) (/.f64 (*.f64 (+.f64 (*.f64 2/15 t) (+.f64 (*.f64 -1/18 t) (*.f64 1/120 t))) (pow.f64 l 2)) (pow.f64 t 2)))) t)))))) (*.f64 2 (/.f64 (pow.f64 l 2) (*.f64 (pow.f64 k 4) t))))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l)","(+.f64 (*.f64 (+.f64 (*.f64 -1/6 (/.f64 t (pow.f64 l 2))) (*.f64 1/3 (/.f64 t (pow.f64 l 2)))) (pow.f64 k 6)) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))","(fma.f64 (/.f64 (*.f64 t 1/6) (*.f64 l l)) (pow.f64 k 6) (/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l))","(+.f64 (*.f64 (+.f64 (*.f64 -1/6 (/.f64 t (pow.f64 l 2))) (*.f64 1/3 (/.f64 t (pow.f64 l 2)))) (pow.f64 k 6)) (+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)) (*.f64 (pow.f64 k 8) (+.f64 (*.f64 1/120 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 -1/18 (/.f64 t (pow.f64 l 2))) (*.f64 2/15 (/.f64 t (pow.f64 l 2))))))))","(fma.f64 (/.f64 (*.f64 t 1/6) (*.f64 l l)) (pow.f64 k 6) (fma.f64 (pow.f64 k 8) (*.f64 (/.f64 (/.f64 t l) l) (+.f64 1/120 7/90)) (/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l)))","(+.f64 (*.f64 (pow.f64 k 10) (+.f64 (*.f64 1/360 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 17/315 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 -1/45 (/.f64 t (pow.f64 l 2))) (*.f64 -1/5040 (/.f64 t (pow.f64 l 2))))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (/.f64 t (pow.f64 l 2))) (*.f64 1/3 (/.f64 t (pow.f64 l 2)))) (pow.f64 k 6)) (+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)) (*.f64 (pow.f64 k 8) (+.f64 (*.f64 1/120 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 -1/18 (/.f64 t (pow.f64 l 2))) (*.f64 2/15 (/.f64 t (pow.f64 l 2)))))))))","(fma.f64 (pow.f64 k 10) (fma.f64 1/360 (/.f64 (/.f64 t l) l) (*.f64 (/.f64 (/.f64 t l) l) (+.f64 17/315 -113/5040))) (fma.f64 (/.f64 (*.f64 t 1/6) (*.f64 l l)) (pow.f64 k 6) (fma.f64 (pow.f64 k 8) (*.f64 (/.f64 (/.f64 t l) l) (+.f64 1/120 7/90)) (/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l))))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 k 4) (pow.f64 t 2))","(/.f64 (/.f64 (pow.f64 k 4) t) t)","(+.f64 (/.f64 (pow.f64 k 4) (pow.f64 t 2)) (*.f64 1/6 (/.f64 (pow.f64 k 6) (pow.f64 t 2))))","(/.f64 (+.f64 (pow.f64 k 4) (*.f64 1/6 (pow.f64 k 6))) (*.f64 t t))","(+.f64 (*.f64 31/360 (/.f64 (pow.f64 k 8) (pow.f64 t 2))) (+.f64 (/.f64 (pow.f64 k 4) (pow.f64 t 2)) (*.f64 1/6 (/.f64 (pow.f64 k 6) (pow.f64 t 2)))))","(fma.f64 31/360 (/.f64 (/.f64 (pow.f64 k 8) t) t) (/.f64 (+.f64 (pow.f64 k 4) (*.f64 1/6 (pow.f64 k 6))) (*.f64 t t)))","(+.f64 (*.f64 31/360 (/.f64 (pow.f64 k 8) (pow.f64 t 2))) (+.f64 (/.f64 (pow.f64 k 4) (pow.f64 t 2)) (+.f64 (*.f64 173/5040 (/.f64 (pow.f64 k 10) (pow.f64 t 2))) (*.f64 1/6 (/.f64 (pow.f64 k 6) (pow.f64 t 2))))))","(+.f64 (/.f64 (+.f64 (*.f64 31/360 (pow.f64 k 8)) (pow.f64 k 4)) (*.f64 t t)) (/.f64 (+.f64 (*.f64 1/6 (pow.f64 k 6)) (*.f64 173/5040 (pow.f64 k 10))) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 t 2)))","(/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (*.f64 (cos.f64 k) (*.f64 t t)))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (pow.f64 l 2) (*.f64 (pow.f64 k 4) t)))","(/.f64 (*.f64 2 (*.f64 l l)) (*.f64 (pow.f64 k 4) t))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 2) (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t))) (*.f64 (pow.f64 k 2) (pow.f64 t 2)))) (*.f64 2 (/.f64 (pow.f64 l 2) (*.f64 (pow.f64 k 4) t))))","(fma.f64 -2 (/.f64 (*.f64 (*.f64 l l) (*.f64 t 1/6)) (pow.f64 (*.f64 k t) 2)) (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 (pow.f64 k 4) t)))","(+.f64 (*.f64 -2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t)) 2)) (pow.f64 t 3))) (/.f64 (*.f64 (+.f64 (*.f64 2/15 t) (+.f64 (*.f64 -1/18 t) (*.f64 1/120 t))) (pow.f64 l 2)) (pow.f64 t 2)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 2) (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t))) (*.f64 (pow.f64 k 2) (pow.f64 t 2)))) (*.f64 2 (/.f64 (pow.f64 l 2) (*.f64 (pow.f64 k 4) t)))))","(+.f64 (*.f64 -2 (+.f64 (-.f64 (/.f64 (/.f64 (*.f64 (*.f64 t (+.f64 -17/360 2/15)) (*.f64 l l)) t) t) (/.f64 (pow.f64 (*.f64 l (*.f64 t 1/6)) 2) (pow.f64 t 3))) (/.f64 (*.f64 (*.f64 l l) (*.f64 t 1/6)) (pow.f64 (*.f64 k t) 2)))) (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 (pow.f64 k 4) t)))","(+.f64 (*.f64 -2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t)) 2)) (pow.f64 t 3))) (/.f64 (*.f64 (+.f64 (*.f64 2/15 t) (+.f64 (*.f64 -1/18 t) (*.f64 1/120 t))) (pow.f64 l 2)) (pow.f64 t 2)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 2) (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t))) (*.f64 (pow.f64 k 2) (pow.f64 t 2)))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 k 2) (+.f64 (/.f64 (*.f64 (pow.f64 l 2) (+.f64 (*.f64 1/360 t) (+.f64 (*.f64 -1/45 t) (+.f64 (*.f64 17/315 t) (*.f64 -1/5040 t))))) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2/15 t) (+.f64 (*.f64 -1/18 t) (*.f64 1/120 t))) (*.f64 (pow.f64 l 2) (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t)))) (pow.f64 t 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (+.f64 (*.f64 -1/6 t) (*.f64 1/3 t)) 2)) (pow.f64 t 3))) (/.f64 (*.f64 (+.f64 (*.f64 2/15 t) (+.f64 (*.f64 -1/18 t) (*.f64 1/120 t))) (pow.f64 l 2)) (pow.f64 t 2)))) t)))))) (*.f64 2 (/.f64 (pow.f64 l 2) (*.f64 (pow.f64 k 4) t))))))","(+.f64 (*.f64 -2 (+.f64 (-.f64 (/.f64 (/.f64 (*.f64 (*.f64 t (+.f64 -17/360 2/15)) (*.f64 l l)) t) t) (/.f64 (pow.f64 (*.f64 l (*.f64 t 1/6)) 2) (pow.f64 t 3))) (/.f64 (*.f64 (*.f64 l l) (*.f64 t 1/6)) (pow.f64 (*.f64 k t) 2)))) (fma.f64 -2 (*.f64 (*.f64 k k) (-.f64 (-.f64 (/.f64 (/.f64 (*.f64 (*.f64 l l) (fma.f64 1/360 t (*.f64 t (+.f64 271/5040 -1/45)))) t) t) (/.f64 (*.f64 (*.f64 t (+.f64 -17/360 2/15)) (*.f64 (*.f64 l l) (*.f64 t 1/6))) (pow.f64 t 3))) (/.f64 (*.f64 (*.f64 t 1/6) (-.f64 (/.f64 (/.f64 (*.f64 (*.f64 t (+.f64 -17/360 2/15)) (*.f64 l l)) t) t) (/.f64 (pow.f64 (*.f64 l (*.f64 t 1/6)) 2) (pow.f64 t 3)))) t))) (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 (pow.f64 k 4) t))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))"]],"time":413.712890625,"type":"simplify"},{"compiler":[[8634,4873]],"time":81.569091796875,"type":"eval"},{"alts":[["(/.f64 2 (*.f64 (/.f64 (/.f64 (pow.f64 t 3) l) l) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","fresh",43.29360232382088],["(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (/.f64 k t)) k) t))","fresh",41.41828695479565],["(fma.f64 -2 (/.f64 (*.f64 (*.f64 l l) (*.f64 t 1/6)) (pow.f64 (*.f64 k t) 2)) (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 (pow.f64 k 4) t)))","fresh",34.8848049278559],["(/.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (*.f64 (sin.f64 k) (tan.f64 k))) (pow.f64 (/.f64 k t) 2))","fresh",43.48747946925334],["(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","fresh",23.80069642516195],["(/.f64 2 (/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l))","fresh",31.01778460449829],["(/.f64 2 (*.f64 (*.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2)))","fresh",34.064097288062705],["(*.f64 (pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2) (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))))","fresh",32.86925066197542],["(/.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2))) (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))","fresh",34.52821508400681],["(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","fresh",22.743665534146185],["(/.f64 2 (fma.f64 (/.f64 (*.f64 t 1/6) (*.f64 l l)) (pow.f64 k 6) (/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l)))","fresh",33.55835431056852],["(/.f64 2 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l))))","fresh",23.80033271655104],["(/.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))))","next",22.737704327850604]],"compiler":[[24,17],[26,18],[29,19],[24,17],[20,14],[14,10],[32,24],[48,32],[48,33],[22,17],[25,17],[20,14],[22,17],[24,17],[26,18],[29,19],[24,17],[20,14],[14,10],[32,24],[48,32],[48,33],[22,17],[25,17],[20,14],[22,17]],"count":[[303,13]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[301,13],"picked":[1,0]}],"min-error":[18.28368879150849],"time":95.47998046875,"type":"prune"},{"compiler":[[79,46]],"locations":[["(pow.f64 (sin.f64 k) 2)",0.36947250976844204,true],["(*.f64 (pow.f64 (sin.f64 k) 2) t)",1.3745216925319412,true],["(*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))",7.323054771135604,true],["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))",20.140422703301386,true]],"time":23.495849609375,"type":"localize"},{"count":[[4,16]],"series":[["(pow.f64 (sin.f64 k) 2)","k","-inf",0.141845703125],["(pow.f64 (sin.f64 k) 2)","k","inf",0.7080078125],["(pow.f64 (sin.f64 k) 2)","k","0",0.19287109375],["(*.f64 (pow.f64 (sin.f64 k) 2) t)","t","-inf",0.27001953125],["(*.f64 (pow.f64 (sin.f64 k) 2) t)","t","inf",0.319091796875],["(*.f64 (pow.f64 (sin.f64 k) 2) t)","t","0",0.14501953125],["(*.f64 (pow.f64 (sin.f64 k) 2) t)","k","-inf",0.14697265625],["(*.f64 (pow.f64 (sin.f64 k) 2) t)","k","inf",0.18115234375],["(*.f64 (pow.f64 (sin.f64 k) 2) t)","k","0",0.22607421875],["(*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))","t","-inf",0.326171875],["(*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))","t","inf",0.33984375],["(*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))","t","0",0.162841796875],["(*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))","k","-inf",0.35205078125],["(*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))","k","inf",0.35791015625],["(*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))","k","0",0.23291015625],["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","l","-inf",0.21484375],["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","l","inf",0.56005859375],["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","l","0",0.823974609375],["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","t","-inf",0.295166015625],["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","t","inf",0.634033203125],["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","t","0",1.028076171875],["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","k","-inf",1.011962890625],["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","k","inf",1.011962890625],["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","k","0",1.126953125]],"time":11.089111328125,"type":"series"},{"count":[[4,250]],"inputs":[["(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (pow.f64 (sin.f64 k) 2) t)","(pow.f64 (sin.f64 k) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 0) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l)))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) (*.f64 0 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (neg.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 (*.f64 l l)) (cos.f64 k))) (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (neg.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (neg.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) l) (/.f64 1 l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) (cbrt.f64 (pow.f64 l -2))) (/.f64 1 (cbrt.f64 (pow.f64 l 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 k) (*.f64 l l))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l)))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 k k) (cos.f64 k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t (*.f64 l l))) (/.f64 (*.f64 k k) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 2)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (neg.f64 t)) (neg.f64 (/.f64 (pow.f64 l -2) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) (/.f64 (*.f64 k k) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cos.f64 k)) (/.f64 (*.f64 k k) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (/.f64 (*.f64 k k) (*.f64 l l)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) (/.f64 t (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (cos.f64 k)) (/.f64 t (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (pow.f64 l -2)) (/.f64 t (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 k 6) (*.f64 (cos.f64 k) (*.f64 l l)))) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 k k) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (pow.f64 l -2) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 k k) (*.f64 l l)) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) (cos.f64 k)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 2)) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 2)) (/.f64 (pow.f64 l -2) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (pow.f64 l 6))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 2)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (/.f64 (pow.f64 l -2) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) (pow.f64 l -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k))) (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 k)) (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 l -2) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2)) (/.f64 t (cos.f64 k))) (neg.f64 (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (pow.f64 l -2)) (/.f64 1 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (pow.f64 l -2)) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) l) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 k)) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) (*.f64 l l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cos.f64 k)) (*.f64 k k)) (*.f64 l l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 k k) (*.f64 l l)) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 2)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (pow.f64 l 6))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 2))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 k k) (cos.f64 k)) (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 k k) (cos.f64 k)) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (pow.f64 l -2)) t) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 l -2) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 l -2) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (neg.f64 t))) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) (cos.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 2))) (*.f64 l l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t (*.f64 l l))) (*.f64 k k)) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t (*.f64 l l))) (neg.f64 (*.f64 k k))) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (cos.f64 k)) t) (*.f64 l l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k)))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 2))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 2)) (pow.f64 l -2))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (*.f64 l l))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (/.f64 (*.f64 k k) (cos.f64 k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (neg.f64 t)) (pow.f64 l -2)) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t (*.f64 l l)))) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (*.f64 k k) (*.f64 l l))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2)) (/.f64 t (cos.f64 k))) 1) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (pow.f64 l -2)) 1) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) l) 1) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k)))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 2))) (*.f64 (cbrt.f64 (*.f64 l l)) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (cos.f64 k))) (*.f64 (*.f64 l l) (cbrt.f64 (pow.f64 (cos.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 k k) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (pow.f64 l -2)))) (*.f64 (cos.f64 k) (cbrt.f64 (pow.f64 l 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 k k) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)) (*.f64 (cos.f64 k) l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 k 6) (cos.f64 k))) (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 k) 2)) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 k 6) (cos.f64 k))) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 k) 2)) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 k 6) (cos.f64 k))) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 k) 2)) l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (pow.f64 l -2)))) (*.f64 (neg.f64 (cos.f64 k)) (cbrt.f64 (pow.f64 l 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 k k)) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)) (*.f64 (neg.f64 (cos.f64 k)) l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t) (cbrt.f64 (/.f64 (pow.f64 k 6) (cos.f64 k)))) (*.f64 (neg.f64 (*.f64 l l)) (cbrt.f64 (pow.f64 (cos.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (neg.f64 (*.f64 k k))) (*.f64 l (neg.f64 (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (cbrt.f64 (/.f64 (pow.f64 k 6) (cos.f64 k)))) (*.f64 l (cbrt.f64 (pow.f64 (cos.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (pow.f64 l -2))) (*.f64 k k)) (*.f64 (cbrt.f64 (pow.f64 l 4)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (pow.f64 l -2))) (neg.f64 (*.f64 k k))) (*.f64 (cbrt.f64 (pow.f64 l 4)) (neg.f64 (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (/.f64 (pow.f64 k 6) (cos.f64 k)))) (*.f64 (*.f64 l l) (cbrt.f64 (pow.f64 (cos.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) (cbrt.f64 (pow.f64 l -2))) 1) (*.f64 (cbrt.f64 (pow.f64 l 4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) 1) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (cos.f64 k))) 1) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 k) 2)) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) l)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (neg.f64 t)) (*.f64 (neg.f64 (*.f64 l l)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2)) (/.f64 t (cos.f64 k))) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (pow.f64 l -2))) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (pow.f64 l 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) (*.f64 l l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l)))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 2))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) t) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 k 6) (*.f64 (cos.f64 k) (*.f64 l l)))) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 2)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))) (cbrt.f64 (*.f64 (cos.f64 k) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 2)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (neg.f64 t)))) (cbrt.f64 (*.f64 (neg.f64 (*.f64 l l)) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) (*.f64 k k)) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 k k) (cos.f64 k)) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (pow.f64 l -2)))) (cbrt.f64 (pow.f64 l 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 l -2) (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (cos.f64 k)))) (cbrt.f64 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t (*.f64 l l))) (cbrt.f64 (/.f64 (pow.f64 k 6) (cos.f64 k)))) (cbrt.f64 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 2))) (cbrt.f64 (*.f64 (cos.f64 k) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (neg.f64 t))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 2))) (cbrt.f64 (*.f64 (neg.f64 (*.f64 l l)) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 k k) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)))) (cbrt.f64 (*.f64 (cos.f64 k) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (pow.f64 l -2))) (/.f64 (*.f64 k k) (cos.f64 k))) (cbrt.f64 (pow.f64 l 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (cos.f64 k))) (pow.f64 l -2)) (cbrt.f64 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (*.f64 k k) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)))) (cbrt.f64 (*.f64 (cos.f64 k) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 k 6) (cos.f64 k))) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t (*.f64 l l)))) (cbrt.f64 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2))) (cbrt.f64 (*.f64 (cos.f64 k) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) (cbrt.f64 (pow.f64 l -2))) 1) (cbrt.f64 (pow.f64 l 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) 1) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)))) (cbrt.f64 (*.f64 (cos.f64 k) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 k 6) (cos.f64 k))) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (pow.f64 l -2)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (/.f64 (pow.f64 k 6) (cos.f64 k)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) (cbrt.f64 (pow.f64 l -2)))) (neg.f64 (cbrt.f64 (pow.f64 l 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (neg.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (neg.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 0) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 0 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 k k) (*.f64 (pow.f64 (sin.f64 k) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 2)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (pow.f64 (*.f64 k (sin.f64 k)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) k) k)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 (*.f64 k k))) (cbrt.f64 (pow.f64 k 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 k 6) (*.f64 (pow.f64 (sin.f64 k) 2) t))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 4) (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 k k) t) (pow.f64 (sin.f64 k) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 k) 2) (*.f64 t (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t)) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 4) (*.f64 t t)) (pow.f64 k 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 k (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 k k)) (*.f64 (cbrt.f64 (pow.f64 k 4)) (*.f64 (pow.f64 (sin.f64 k) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (neg.f64 t))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 k k)) (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t) (neg.f64 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 k k) t) (-.f64 (cos.f64 0) (cos.f64 (+.f64 k k)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 k k))) (*.f64 t (*.f64 k k))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (neg.f64 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) 0) (*.f64 (pow.f64 (sin.f64 k) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (pow.f64 (sin.f64 k) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 0 (*.f64 (pow.f64 (sin.f64 k) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 k) 2) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (pow.f64 (sin.f64 k) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t)) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 4) (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 4) (*.f64 t t))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (sin.f64 k)) (sin.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (pow.f64 (sin.f64 k) 2))) (cbrt.f64 (pow.f64 (sin.f64 k) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 k) (*.f64 (sin.f64 k) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 2)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 4)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (sin.f64 k) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 (cos.f64 0) (cos.f64 (+.f64 k k)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 k k))) t) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 k) 6) (pow.f64 t 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 6) (pow.f64 t 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 0 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 k) 2) 0) (pow.f64 (sin.f64 k) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 (sin.f64 k) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (sin.f64 k) 2)) (pow.f64 (sin.f64 k) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 k) 2) (*.f64 0 (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (neg.f64 1/2) (cos.f64 (+.f64 k k))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (cos.f64 k)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 k k)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (sin.f64 k) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (pow.f64 (cos.f64 k) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1/2 1) (/.f64 (*.f64 1/2 (cos.f64 (+.f64 k k))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (/.f64 (pow.f64 (cos.f64 k) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (cos.f64 0) 2) (*.f64 1/2 (cos.f64 (+.f64 k k))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 k k))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 -1 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 k) (sin.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 k)) (neg.f64 (sin.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 k)) (pow.f64 (cbrt.f64 (sin.f64 k)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (sin.f64 k) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 k) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 k) -1) (*.f64 (sin.f64 k) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sin.f64 k)) -1) (*.f64 (neg.f64 (sin.f64 k)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sin.f64 k)) 1) (*.f64 (neg.f64 (sin.f64 k)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sin.f64 k))) (*.f64 1 (neg.f64 (sin.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (cos.f64 k)) (-.f64 -1 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (cos.f64 k)) (-.f64 1 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 k k))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 2)) (cbrt.f64 (pow.f64 (sin.f64 k) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 4)) (cbrt.f64 (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (sin.f64 k) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (pow.f64 (cos.f64 k) 2) 3)) (+.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (pow.f64 (cos.f64 k) 2)) (pow.f64 (cos.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 1/2 3) (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 k k))) 3)) (+.f64 (*.f64 1/2 1/2) (+.f64 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 k k))) (*.f64 1/2 (cos.f64 (+.f64 k k)))) (*.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 k k)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 k k)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 k k))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 k k))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 k) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 k)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 k) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 k) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 k) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 k) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sin.f64 k)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (sin.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (sin.f64 k) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 1/2 (cos.f64 (+.f64 k k))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 (cos.f64 k) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 k) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (pow.f64 (cos.f64 k) 2)))))))"]],"rules":[["egg-rr",57],["egg-rr",28],["egg-rr",38],["egg-rr",127]],"time":44.554931640625,"type":"rewrite"},{"count":[[266,281]],"inputs":[["(/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))","(+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))","(+.f64 (*.f64 (pow.f64 k 8) (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))))","(+.f64 (*.f64 (pow.f64 k 10) (-.f64 (*.f64 -1/315 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (+.f64 (*.f64 -1/2 (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (*.f64 -1/720 (/.f64 t (pow.f64 l 2))))))) (+.f64 (*.f64 (pow.f64 k 8) (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))))","(*.f64 (pow.f64 k 4) t)","(+.f64 (*.f64 (pow.f64 k 4) t) (*.f64 -1/3 (*.f64 (pow.f64 k 6) t)))","(+.f64 (*.f64 2/45 (*.f64 (pow.f64 k 8) t)) (+.f64 (*.f64 (pow.f64 k 4) t) (*.f64 -1/3 (*.f64 (pow.f64 k 6) t))))","(+.f64 (*.f64 2/45 (*.f64 (pow.f64 k 8) t)) (+.f64 (*.f64 (pow.f64 k 4) t) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 k 6) t)) (*.f64 -1/315 (*.f64 (pow.f64 k 10) t)))))","(*.f64 (pow.f64 k 2) t)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 k 4) t)) (*.f64 (pow.f64 k 2) t))","(+.f64 (*.f64 2/45 (*.f64 (pow.f64 k 6) t)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 k 4) t)) (*.f64 (pow.f64 k 2) t)))","(+.f64 (*.f64 2/45 (*.f64 (pow.f64 k 6) t)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 k 4) t)) (+.f64 (*.f64 -1/315 (*.f64 (pow.f64 k 8) t)) (*.f64 (pow.f64 k 2) t))))","(pow.f64 k 2)","(+.f64 (*.f64 -1/3 (pow.f64 k 4)) (pow.f64 k 2))","(+.f64 (*.f64 -1/3 (pow.f64 k 4)) (+.f64 (pow.f64 k 2) (*.f64 2/45 (pow.f64 k 6))))","(+.f64 (*.f64 -1/3 (pow.f64 k 4)) (+.f64 (*.f64 -1/315 (pow.f64 k 8)) (+.f64 (pow.f64 k 2) (*.f64 2/45 (pow.f64 k 6)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l)","(+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))","(fma.f64 (pow.f64 k 6) (/.f64 (*.f64 t 1/6) (*.f64 l l)) (/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l))","(+.f64 (*.f64 (pow.f64 k 8) (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))))","(fma.f64 (pow.f64 k 8) (+.f64 (*.f64 (/.f64 (/.f64 t l) l) (-.f64 2/45 1/24)) (*.f64 1/2 (/.f64 (*.f64 t 1/6) (*.f64 l l)))) (fma.f64 (pow.f64 k 6) (/.f64 (*.f64 t 1/6) (*.f64 l l)) (/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l)))","(+.f64 (*.f64 (pow.f64 k 10) (-.f64 (*.f64 -1/315 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (+.f64 (*.f64 -1/2 (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (*.f64 -1/720 (/.f64 t (pow.f64 l 2))))))) (+.f64 (*.f64 (pow.f64 k 8) (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))))","(fma.f64 (pow.f64 k 10) (-.f64 (/.f64 (/.f64 (*.f64 -1/315 t) l) l) (fma.f64 (/.f64 (*.f64 t 1/6) (*.f64 l l)) 1/24 (fma.f64 -1/2 (+.f64 (*.f64 (/.f64 (/.f64 t l) l) (-.f64 2/45 1/24)) (*.f64 1/2 (/.f64 (*.f64 t 1/6) (*.f64 l l)))) (/.f64 (/.f64 (*.f64 -1/720 t) l) l)))) (fma.f64 (pow.f64 k 8) (+.f64 (*.f64 (/.f64 (/.f64 t l) l) (-.f64 2/45 1/24)) (*.f64 1/2 (/.f64 (*.f64 t 1/6) (*.f64 l l)))) (fma.f64 (pow.f64 k 6) (/.f64 (*.f64 t 1/6) (*.f64 l l)) (/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l))))","(*.f64 (pow.f64 k 4) t)","(+.f64 (*.f64 (pow.f64 k 4) t) (*.f64 -1/3 (*.f64 (pow.f64 k 6) t)))","(*.f64 t (+.f64 (*.f64 -1/3 (pow.f64 k 6)) (pow.f64 k 4)))","(+.f64 (*.f64 2/45 (*.f64 (pow.f64 k 8) t)) (+.f64 (*.f64 (pow.f64 k 4) t) (*.f64 -1/3 (*.f64 (pow.f64 k 6) t))))","(fma.f64 2/45 (*.f64 (pow.f64 k 8) t) (*.f64 t (+.f64 (*.f64 -1/3 (pow.f64 k 6)) (pow.f64 k 4))))","(+.f64 (*.f64 2/45 (*.f64 (pow.f64 k 8) t)) (+.f64 (*.f64 (pow.f64 k 4) t) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 k 6) t)) (*.f64 -1/315 (*.f64 (pow.f64 k 10) t)))))","(+.f64 (*.f64 t (+.f64 (*.f64 2/45 (pow.f64 k 8)) (pow.f64 k 4))) (*.f64 t (+.f64 (*.f64 -1/315 (pow.f64 k 10)) (*.f64 -1/3 (pow.f64 k 6)))))","(*.f64 (pow.f64 k 2) t)","(*.f64 (*.f64 k k) t)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 k 4) t)) (*.f64 (pow.f64 k 2) t))","(*.f64 t (fma.f64 -1/3 (pow.f64 k 4) (*.f64 k k)))","(+.f64 (*.f64 2/45 (*.f64 (pow.f64 k 6) t)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 k 4) t)) (*.f64 (pow.f64 k 2) t)))","(fma.f64 2/45 (*.f64 (pow.f64 k 6) t) (*.f64 t (fma.f64 -1/3 (pow.f64 k 4) (*.f64 k k))))","(+.f64 (*.f64 2/45 (*.f64 (pow.f64 k 6) t)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 k 4) t)) (+.f64 (*.f64 -1/315 (*.f64 (pow.f64 k 8) t)) (*.f64 (pow.f64 k 2) t))))","(+.f64 (*.f64 t (+.f64 (*.f64 2/45 (pow.f64 k 6)) (*.f64 -1/3 (pow.f64 k 4)))) (*.f64 t (fma.f64 -1/315 (pow.f64 k 8) (*.f64 k k))))","(pow.f64 k 2)","(*.f64 k k)","(+.f64 (*.f64 -1/3 (pow.f64 k 4)) (pow.f64 k 2))","(fma.f64 -1/3 (pow.f64 k 4) (*.f64 k k))","(+.f64 (*.f64 -1/3 (pow.f64 k 4)) (+.f64 (pow.f64 k 2) (*.f64 2/45 (pow.f64 k 6))))","(fma.f64 (pow.f64 k 4) -1/3 (fma.f64 2/45 (pow.f64 k 6) (*.f64 k k)))","(+.f64 (*.f64 -1/3 (pow.f64 k 4)) (+.f64 (*.f64 -1/315 (pow.f64 k 8)) (+.f64 (pow.f64 k 2) (*.f64 2/45 (pow.f64 k 6)))))","(fma.f64 (pow.f64 k 4) -1/3 (fma.f64 -1/315 (pow.f64 k 8) (fma.f64 2/45 (pow.f64 k 6) (*.f64 k k))))"]],"time":64.050048828125,"type":"simplify"},{"compiler":[[7037,3973]],"time":68.823974609375,"type":"eval"},{"alts":[["(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (/.f64 k t)) k) t))","fresh",41.41828695479565],["(fma.f64 -2 (/.f64 (*.f64 (*.f64 l l) (*.f64 t 1/6)) (pow.f64 (*.f64 k t) 2)) (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 (pow.f64 k 4) t)))","fresh",34.8848049278559],["(*.f64 (pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2) (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))))","fresh",32.86925066197542],["(/.f64 2 (/.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) t) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2))))","fresh",30.214253274844424],["(/.f64 2 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (*.f64 l l))) (cos.f64 k)))","fresh",23.856074967971225],["(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","fresh",22.743665534146185],["(/.f64 2 (*.f64 (*.f64 k k) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (pow.f64 l -2) (cos.f64 k)))))","fresh",21.617097316997057],["(/.f64 2 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 k) (*.f64 l l))) -2)))","fresh",23.82119150562481],["(/.f64 2 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l)))) 3))","fresh",23.899078675052255],["(/.f64 2 (/.f64 (*.f64 k (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t))) (*.f64 (cos.f64 k) (pow.f64 l 2))))","fresh",21.079867862769582],["(/.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (sin.f64 k) (*.f64 (sin.f64 k) t))) (*.f64 (cos.f64 k) (pow.f64 l 2))))","fresh",22.722079327850604],["(/.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2))) (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))","fresh",34.52821508400681],["(/.f64 2 (/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k))))","next",14.711086888160121],["(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","fresh",23.80069642516195],["(/.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) l) (/.f64 1 l)))","fresh",19.259477329016228],["(/.f64 2 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (/.f64 (*.f64 k k) (*.f64 l l)) (cos.f64 k))))","fresh",20.506963997041872],["(/.f64 2 (/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l))","fresh",31.01778460449829]],"compiler":[[26,18],[29,19],[48,32],[31,22],[20,14],[22,17],[22,16],[31,22],[23,17],[22,16],[23,16],[48,33],[22,15],[20,14],[22,16],[22,15],[14,10],[26,18],[29,19],[48,32],[31,22],[20,14],[22,17],[22,16],[31,22],[23,17],[22,16],[23,16],[48,33],[22,15],[20,14],[22,16],[22,15],[14,10]],"count":[[294,17]],"kept":[{"done":[0,0],"fresh":[12,6],"new":[281,11],"picked":[1,0]}],"min-error":[9.807967945699371],"time":112.197998046875,"type":"prune"},{"compiler":[[84,36]],"locations":[["(*.f64 (pow.f64 (sin.f64 k) 2) t)",1.3745216925319412,false],["(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)",2.8241015662389604,true],["(/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k)))",6.154188141716924,true],["(*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k))",7.801880679174855,true]],"time":18.7490234375,"type":"localize"},{"count":[[3,76]],"series":[["(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)","l","-inf",0.26806640625],["(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)","l","inf",0.343994140625],["(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)","l","0",0.3369140625],["(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)","t","-inf",4.251953125],["(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)","t","inf",0.367919921875],["(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)","t","0",0.3330078125],["(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)","k","-inf",0.27587890625],["(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)","k","inf",0.251953125],["(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)","k","0",0.2900390625],["(/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k)))","l","-inf",0.221923828125],["(/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k)))","l","inf",0.18896484375],["(/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k)))","l","0",0.177001953125],["(/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k)))","t","-inf",0.213134765625],["(/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k)))","t","inf",0.18798828125],["(/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k)))","t","0",0.203857421875],["(/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k)))","k","-inf",0.194091796875],["(/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k)))","k","inf",0.220947265625],["(/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k)))","k","0",0.31494140625],["(*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k))","l","-inf",0.368896484375],["(*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k))","l","inf",0.681884765625],["(*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k))","l","0",0.338134765625],["(*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k))","t","-inf",0.36279296875],["(*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k))","t","inf",0.4111328125],["(*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k))","t","0",0.363037109375],["(*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k))","k","-inf",0.401123046875],["(*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k))","k","inf",0.674072265625],["(*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k))","k","0",0.47802734375]],"time":13.123046875,"type":"series"},{"count":[[3,227]],"inputs":[["(*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k))","(/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 0) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (*.f64 0 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 l)) (/.f64 (*.f64 k k) (cbrt.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (*.f64 k k) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 k k) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) k)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2)) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 k (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)) (/.f64 1 l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 k 6) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cbrt.f64 (*.f64 k k))) (cbrt.f64 (pow.f64 k 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (cbrt.f64 k)) (cbrt.f64 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 2)) (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 k k)) (*.f64 (cbrt.f64 (pow.f64 k 4)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 k k)) (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l)) (neg.f64 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (/.f64 -1 l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)) (cbrt.f64 l)) (pow.f64 (cbrt.f64 l) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)) (cbrt.f64 l)) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) t))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 k k) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 l))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 l)) (*.f64 k k)) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2)) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)))) (cbrt.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 k (neg.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) k))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 k (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) k)) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)) -1) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2))) (cbrt.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) t)) 1) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)) (cbrt.f64 l)) 1) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 2)) (*.f64 k k))) (cbrt.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 2)) (*.f64 k k))) (cbrt.f64 (neg.f64 l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (*.f64 k k) (cbrt.f64 (*.f64 l l)))) (cbrt.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)) (cbrt.f64 l))) (neg.f64 (cbrt.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 0) (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) (*.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k))) (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) (*.f64 0 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (*.f64 (neg.f64 l) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 l) (cos.f64 k))) (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (*.f64 (neg.f64 l) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (*.f64 (neg.f64 l) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (cbrt.f64 (*.f64 l (cos.f64 k)))) (pow.f64 (cbrt.f64 (*.f64 l (cos.f64 k))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) l)) (cbrt.f64 (cos.f64 k))) (/.f64 1 (cbrt.f64 (pow.f64 (cos.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) l) (/.f64 (*.f64 k k) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 k k) (cos.f64 k)) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 2)) (cbrt.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (/.f64 -1 (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (cbrt.f64 (*.f64 l (cos.f64 k)))) (/.f64 k (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) l) (/.f64 k (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (cos.f64 k)) (/.f64 k l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (/.f64 (/.f64 k l) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cbrt.f64 (*.f64 l (cos.f64 k)))) (/.f64 (*.f64 k k) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cos.f64 k)) (/.f64 (*.f64 k k) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (/.f64 (*.f64 k k) l) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2) (pow.f64 (*.f64 l (cos.f64 k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) l) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) (cos.f64 k)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2)) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2)) (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 k 6) (*.f64 l (cos.f64 k)))) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 k k) l) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 k k) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (/.f64 (/.f64 1 l) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 l) (cos.f64 k)) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) l)) (/.f64 1 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 l (cos.f64 k)) (neg.f64 1/3)) (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 l) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 k)) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l)) (/.f64 (*.f64 k k) l)) (/.f64 -1 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)) (/.f64 1 (*.f64 l (*.f64 l (cos.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) (cos.f64 k))) (/.f64 1 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) l) (neg.f64 (*.f64 k k))) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) l) k) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 2)) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) l)))) (cbrt.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) l) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 l) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) l))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 2))) (cbrt.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) l))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2) (pow.f64 (*.f64 l (cos.f64 k)) 2)))) (cbrt.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l)) (/.f64 (*.f64 k k) l)) 1) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) l)) (cbrt.f64 (cos.f64 k)))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l)) (/.f64 (*.f64 k k) l)) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (neg.f64 (*.f64 l (*.f64 l (cos.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (*.f64 l (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) l)) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (*.f64 (neg.f64 l) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) (cos.f64 k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (cbrt.f64 (*.f64 l (cos.f64 k)))) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) l)) (cbrt.f64 (cos.f64 k))) (cbrt.f64 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)) (*.f64 l (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (cbrt.f64 (*.f64 l (cos.f64 k)))) k) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (cos.f64 k)) k) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) l) (cbrt.f64 (/.f64 (pow.f64 k 6) (cos.f64 k)))) (cbrt.f64 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1 l) (cos.f64 k)) (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) t))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1 l) (cos.f64 k)) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1 l) (cos.f64 k)) (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)) (cbrt.f64 l))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) (cos.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 k 6) (*.f64 l (cos.f64 k)))) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 k k) (cos.f64 k)) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cbrt.f64 l))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 k k) (cos.f64 k)) (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 k k) (cos.f64 k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 k)) (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (cbrt.f64 l))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 k)) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 k)) (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cos.f64 k)) (*.f64 k k)) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2))) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 2)) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)))) (cbrt.f64 (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 2)) (cbrt.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))))) (cbrt.f64 (*.f64 (neg.f64 l) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cbrt.f64 (*.f64 l (cos.f64 k)))) (*.f64 k k)) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 l (cos.f64 k)) (neg.f64 1/3)) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 k k) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cos.f64 k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 2))) (cbrt.f64 (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2) (pow.f64 (*.f64 l (cos.f64 k)) 2)))) (cbrt.f64 (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 2))) (cbrt.f64 (*.f64 (neg.f64 l) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2) (pow.f64 (*.f64 l (cos.f64 k)) 2)))) (cbrt.f64 (*.f64 (neg.f64 l) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2)) (cos.f64 k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 (/.f64 (*.f64 k k) l) (cos.f64 k))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (/.f64 (*.f64 k k) l) (cos.f64 k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 l)) (/.f64 (/.f64 (*.f64 k k) l) (cos.f64 k))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (/.f64 k (cos.f64 k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) 2)) (*.f64 l (cos.f64 k)))) (cbrt.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (/.f64 k (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))) (cbrt.f64 (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 k 6) (cos.f64 k))) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) l)) (cbrt.f64 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (/.f64 (/.f64 1 l) (cos.f64 k))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)) (cbrt.f64 l)) (/.f64 (/.f64 1 l) (cos.f64 k))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) k)) (/.f64 (/.f64 k l) (cos.f64 k))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) k) (/.f64 (/.f64 k l) (cos.f64 k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (/.f64 -1 (*.f64 l (cos.f64 k)))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2))) (cbrt.f64 (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) (cos.f64 k))) 1) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (cbrt.f64 (*.f64 l (cos.f64 k)))) 1) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) l)) (cbrt.f64 (cos.f64 k))) 1) (cbrt.f64 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) (cos.f64 k)))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 l)) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) (cos.f64 k)))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cbrt.f64 l)) (/.f64 (*.f64 k k) (cos.f64 k))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l)) (/.f64 (*.f64 k k) (cos.f64 k))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (cbrt.f64 l)) (/.f64 1 (cos.f64 k))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (*.f64 k k)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (/.f64 1 (cos.f64 k))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 k k) (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))) (cbrt.f64 (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))) (cbrt.f64 (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (*.f64 k k)) (/.f64 (*.f64 l (*.f64 l (cos.f64 k))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (cbrt.f64 (*.f64 l (cos.f64 k))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) (cos.f64 k)))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (*.f64 (neg.f64 l) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l)) (/.f64 (/.f64 (*.f64 k k) l) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k)) (*.f64 (neg.f64 l) (cos.f64 k))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (/.f64 (*.f64 k k) l)) (neg.f64 (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 (*.f64 k k) l) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cos.f64 k)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 0) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 0 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 l)) (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t)) (/.f64 (cbrt.f64 (*.f64 (*.f64 t t) (pow.f64 (sin.f64 k) 4))) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 -1 l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cbrt.f64 l)) (/.f64 t (cbrt.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cbrt.f64 (/.f64 (*.f64 (*.f64 t t) (pow.f64 (sin.f64 k) 4)) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 l)) (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 (cbrt.f64 l) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 (pow.f64 (sin.f64 k) 2) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 1 l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 l) (*.f64 (pow.f64 (sin.f64 k) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 2)) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 l)) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (pow.f64 (cbrt.f64 l) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 l)) (pow.f64 (cbrt.f64 l) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 l)) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (cbrt.f64 (*.f64 (*.f64 t t) (pow.f64 (sin.f64 k) 4)))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 t (cbrt.f64 l)) (pow.f64 (sin.f64 k) 2)) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cbrt.f64 l)) t) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 l)) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 2)) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t))) (cbrt.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 2)) (cbrt.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))) (cbrt.f64 (neg.f64 l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (pow.f64 (cbrt.f64 l) -2)) (cbrt.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 k k))) (/.f64 t l)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 l)) 1) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t)) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 2))) (cbrt.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t)) (cbrt.f64 (/.f64 (*.f64 (*.f64 t t) (pow.f64 (sin.f64 k) 4)) (*.f64 l l)))) (cbrt.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 2))) (cbrt.f64 (neg.f64 l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))) (cbrt.f64 (/.f64 (*.f64 (*.f64 t t) (pow.f64 (sin.f64 k) 4)) (*.f64 l l)))) (cbrt.f64 (neg.f64 l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t (cbrt.f64 (*.f64 l l)))) (cbrt.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 (cbrt.f64 l) -2))) (cbrt.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 l))) (neg.f64 (cbrt.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 k) 6) (pow.f64 (/.f64 t l) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) (/.f64 t l)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 6) (pow.f64 (/.f64 t l) 3)))))))"]],"rules":[["egg-rr",50],["egg-rr",123],["egg-rr",54]],"time":44.509033203125,"type":"rewrite"},{"count":[[303,254]],"inputs":[["(/.f64 (*.f64 (pow.f64 k 4) t) l)","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 6) t) l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (+.f64 (*.f64 2/45 (/.f64 (*.f64 (pow.f64 k 8) t) l)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 6) t) l))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (+.f64 (*.f64 2/45 (/.f64 (*.f64 (pow.f64 k 8) t) l)) (+.f64 (*.f64 -1/315 (/.f64 (*.f64 (pow.f64 k 10) t) l)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 6) t) l)))))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))","(+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))","(+.f64 (*.f64 (pow.f64 k 8) (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))))","(+.f64 (*.f64 (pow.f64 k 10) (-.f64 (*.f64 -1/315 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (+.f64 (*.f64 -1/2 (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (*.f64 -1/720 (/.f64 t (pow.f64 l 2))))))) (+.f64 (*.f64 (pow.f64 k 8) (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) t) l)","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 4) t) l)) (/.f64 (*.f64 (pow.f64 k 2) t) l))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 4) t) l)) (+.f64 (*.f64 2/45 (/.f64 (*.f64 (pow.f64 k 6) t) l)) (/.f64 (*.f64 (pow.f64 k 2) t) l)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 4) t) l)) (+.f64 (*.f64 2/45 (/.f64 (*.f64 (pow.f64 k 6) t) l)) (+.f64 (/.f64 (*.f64 (pow.f64 k 2) t) l) (*.f64 -1/315 (/.f64 (*.f64 (pow.f64 k 8) t) l)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (pow.f64 k 4) t) l)","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 6) t) l)))","(/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 k 6) t)) (*.f64 (pow.f64 k 4) t)) l)","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (+.f64 (*.f64 2/45 (/.f64 (*.f64 (pow.f64 k 8) t) l)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 6) t) l))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (/.f64 (+.f64 (*.f64 2/45 (*.f64 (pow.f64 k 8) t)) (*.f64 -1/3 (*.f64 (pow.f64 k 6) t))) l))","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (+.f64 (*.f64 2/45 (/.f64 (*.f64 (pow.f64 k 8) t) l)) (+.f64 (*.f64 -1/315 (/.f64 (*.f64 (pow.f64 k 10) t) l)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 6) t) l)))))","(+.f64 (/.f64 (+.f64 (*.f64 (pow.f64 k 4) t) (*.f64 2/45 (*.f64 (pow.f64 k 8) t))) l) (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 k 6) t)) (*.f64 -1/315 (*.f64 (pow.f64 k 10) t))) l))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))","(/.f64 (*.f64 (pow.f64 k 4) t) (*.f64 l l))","(+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))","(fma.f64 (pow.f64 k 6) (/.f64 (*.f64 t 1/6) (*.f64 l l)) (/.f64 (*.f64 (pow.f64 k 4) t) (*.f64 l l)))","(+.f64 (*.f64 (pow.f64 k 8) (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))))","(fma.f64 (pow.f64 k 8) (+.f64 (*.f64 (/.f64 t (*.f64 l l)) (-.f64 2/45 1/24)) (*.f64 1/2 (/.f64 (*.f64 t 1/6) (*.f64 l l)))) (fma.f64 (pow.f64 k 6) (/.f64 (*.f64 t 1/6) (*.f64 l l)) (/.f64 (*.f64 (pow.f64 k 4) t) (*.f64 l l))))","(+.f64 (*.f64 (pow.f64 k 10) (-.f64 (*.f64 -1/315 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (+.f64 (*.f64 -1/2 (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (*.f64 -1/720 (/.f64 t (pow.f64 l 2))))))) (+.f64 (*.f64 (pow.f64 k 8) (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))))","(fma.f64 (pow.f64 k 10) (-.f64 (/.f64 (*.f64 -1/315 t) (*.f64 l l)) (fma.f64 (/.f64 (*.f64 t 1/6) (*.f64 l l)) 1/24 (fma.f64 -1/2 (+.f64 (*.f64 (/.f64 t (*.f64 l l)) (-.f64 2/45 1/24)) (*.f64 1/2 (/.f64 (*.f64 t 1/6) (*.f64 l l)))) (/.f64 (*.f64 -1/720 t) (*.f64 l l))))) (fma.f64 (pow.f64 k 8) (+.f64 (*.f64 (/.f64 t (*.f64 l l)) (-.f64 2/45 1/24)) (*.f64 1/2 (/.f64 (*.f64 t 1/6) (*.f64 l l)))) (fma.f64 (pow.f64 k 6) (/.f64 (*.f64 t 1/6) (*.f64 l l)) (/.f64 (*.f64 (pow.f64 k 4) t) (*.f64 l l)))))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) t) l)","(/.f64 (*.f64 (*.f64 k k) t) l)","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 4) t) l)) (/.f64 (*.f64 (pow.f64 k 2) t) l))","(/.f64 (+.f64 (*.f64 (*.f64 k k) t) (*.f64 -1/3 (*.f64 (pow.f64 k 4) t))) l)","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 4) t) l)) (+.f64 (*.f64 2/45 (/.f64 (*.f64 (pow.f64 k 6) t) l)) (/.f64 (*.f64 (pow.f64 k 2) t) l)))","(fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 4) t) l) (/.f64 (+.f64 (*.f64 2/45 (*.f64 (pow.f64 k 6) t)) (*.f64 (*.f64 k k) t)) l))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 4) t) l)) (+.f64 (*.f64 2/45 (/.f64 (*.f64 (pow.f64 k 6) t) l)) (+.f64 (/.f64 (*.f64 (pow.f64 k 2) t) l) (*.f64 -1/315 (/.f64 (*.f64 (pow.f64 k 8) t) l)))))","(+.f64 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 k 4) t)) (*.f64 2/45 (*.f64 (pow.f64 k 6) t))) l) (/.f64 (+.f64 (*.f64 -1/315 (*.f64 (pow.f64 k 8) t)) (*.f64 (*.f64 k k) t)) l))"]],"time":241.373046875,"type":"simplify"},{"compiler":[[7761,3562]],"time":64.198974609375,"type":"eval"},{"alts":[["(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (/.f64 k (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))) (cbrt.f64 (*.f64 l (cos.f64 k)))))","fresh",19.451946351648978],["(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (cbrt.f64 k)) (cbrt.f64 (*.f64 k k))) (*.f64 l (cos.f64 k))))","fresh",16.05576273764781],["(fma.f64 -2 (/.f64 (*.f64 (*.f64 l l) (*.f64 t 1/6)) (pow.f64 (*.f64 k t) 2)) (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 (pow.f64 k 4) t)))","fresh",34.8848049278559],["(/.f64 2 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (/.f64 (*.f64 k k) l) (cos.f64 k))) l))","fresh",14.29187589915147],["(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","fresh",23.80069642516195],["(/.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cos.f64 k)) (/.f64 (*.f64 k k) l)))","fresh",14.159632964521062],["(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","fresh",22.743665534146185],["(/.f64 2 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (cos.f64 k)) (/.f64 k l)))","fresh",8.506824241585642],["(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k))))","next",7.363077483832889],["(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) k) (/.f64 (/.f64 k l) (cos.f64 k))) l))","fresh",9.342709263579737],["(/.f64 2 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (/.f64 (*.f64 k k) (*.f64 l l)) (cos.f64 k))))","fresh",20.506963997041872],["(/.f64 2 (/.f64 (/.f64 (*.f64 k (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) k)) l) (*.f64 l (cos.f64 k))))","fresh",14.640745507843503],["(/.f64 2 (/.f64 (*.f64 k (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t))) (*.f64 (cos.f64 k) (pow.f64 l 2))))","fresh",21.079867862769582],["(/.f64 2 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) 3) (*.f64 l (cos.f64 k))))","fresh",16.168322783727454],["(/.f64 2 (/.f64 (*.f64 (*.f64 t (/.f64 (pow.f64 (sin.f64 k) 2) l)) (*.f64 k k)) (*.f64 l (cos.f64 k))))","fresh",14.115821398476658],["(/.f64 2 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (/.f64 (/.f64 k l) (cos.f64 k))))","fresh",8.503581907593073],["(/.f64 2 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) l) (/.f64 k (cos.f64 k))))","fresh",9.840270399188626],["(/.f64 2 (/.f64 (*.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 l)) (pow.f64 (cbrt.f64 l) -2)) (*.f64 k k)) (*.f64 l (cos.f64 k))))","fresh",14.793517568492415]],"compiler":[[31,20],[28,19],[29,19],[22,15],[20,14],[22,15],[22,17],[22,15],[24,17],[22,15],[22,15],[22,15],[22,16],[25,18],[22,15],[22,15],[22,15],[28,19],[31,20],[28,19],[29,19],[22,15],[20,14],[22,15],[22,17],[22,15],[24,17],[22,15],[22,15],[22,15],[22,16],[25,18],[22,15],[22,15],[22,15],[28,19]],"count":[[307,18]],"kept":[{"done":[0,0],"fresh":[16,5],"new":[290,13],"picked":[1,0]}],"min-error":[2.512533517428545],"time":121.867919921875,"type":"prune"},{"compiler":[[98,38]],"locations":[["(*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))",0.37645970490498704,true],["(*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))",1.3745216925319412,true],["(/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k)))",6.154188141716924,true],["(*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))",8.438319662372296,true]],"time":20.47900390625,"type":"localize"},{"count":[[4,132]],"series":[["(*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))","l","-inf",0.1650390625],["(*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))","l","inf",0.189208984375],["(*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))","l","0",0.1611328125],["(*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))","k","-inf",0.192138671875],["(*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))","k","inf",0.161865234375],["(*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))","k","0",0.19287109375],["(*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))","t","-inf",0.190185546875],["(*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))","t","inf",0.1630859375],["(*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))","t","0",0.19189453125],["(*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))","k","-inf",0.287841796875],["(*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))","k","inf",0.3349609375],["(*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))","k","0",0.2919921875],["(*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))","t","-inf",0.15283203125],["(*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))","t","inf",0.15087890625],["(*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))","t","0",0.30810546875],["(/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k)))","l","-inf",0.197021484375],["(/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k)))","l","inf",0.18798828125],["(/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k)))","l","0",0.17919921875],["(/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k)))","k","-inf",0.220947265625],["(/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k)))","k","inf",0.196044921875],["(/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k)))","k","0",0.3271484375],["(/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k)))","t","-inf",0.19287109375],["(/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k)))","t","inf",0.213134765625],["(/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k)))","t","0",0.19091796875],["(*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))","l","-inf",0.208984375],["(*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))","l","inf",0.4580078125],["(*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))","l","0",0.60302734375],["(*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))","k","-inf",0.3330078125],["(*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))","k","inf",0.592041015625],["(*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))","k","0",0.51806640625],["(*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))","t","-inf",0.18798828125],["(*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))","t","inf",0.496826171875],["(*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))","t","0",0.867919921875]],"time":9.798095703125,"type":"series"},{"count":[[4,259]],"inputs":[["(*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))","(/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k)))","(*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))","(*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) 0) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 0) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l))) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (*.f64 0 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 t (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (cbrt.f64 l)) (/.f64 k (cbrt.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 k l) (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 2)) (cbrt.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (cbrt.f64 (/.f64 k l))) (cbrt.f64 (pow.f64 (/.f64 k l) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k) (/.f64 1 l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 k l) (neg.f64 t)) (pow.f64 (sin.f64 k) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 k l) (cbrt.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 4) (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 k l)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 k l) 2)) (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 k (*.f64 (/.f64 1 l) (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (neg.f64 t) (/.f64 k l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 4) (*.f64 t t))) (/.f64 k l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 t (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 k l)) (*.f64 t (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (/.f64 k l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (neg.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) k) (/.f64 -1 l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k) (cbrt.f64 l)) (pow.f64 (cbrt.f64 l) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) k) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k) (cbrt.f64 l)) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k (cbrt.f64 l))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 2)) (cbrt.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k))) (cbrt.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k) -1) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 k l) (neg.f64 t)) (-.f64 (cos.f64 0) (cos.f64 (+.f64 k k)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (cbrt.f64 l)) k) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k) (cbrt.f64 l))) (neg.f64 (cbrt.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 t (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) (*.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 0) (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) (*.f64 0 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k)))) (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 l (cos.f64 k))) (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 l) (cos.f64 k))) (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) l) (/.f64 (neg.f64 k) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 k) (cos.f64 k)) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k) (/.f64 -1 (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) l) (/.f64 (cbrt.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 2)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 2)) (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) (cos.f64 k)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 2)) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k)))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 2) (pow.f64 (*.f64 l (cos.f64 k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (/.f64 (neg.f64 k) (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cos.f64 k)) (neg.f64 (/.f64 k l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cbrt.f64 (*.f64 l (cos.f64 k)))) (/.f64 (neg.f64 k) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 k l)) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 k) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 k) (cbrt.f64 (*.f64 l (cos.f64 k)))) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) l) (/.f64 (neg.f64 (/.f64 (*.f64 k k) l)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 (neg.f64 (pow.f64 (/.f64 k l) 2)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) (neg.f64 (pow.f64 (/.f64 k l) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (cbrt.f64 (*.f64 l (cos.f64 k)))) (/.f64 (neg.f64 (/.f64 (*.f64 k k) l)) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (/.f64 (/.f64 1 l) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 l) (cos.f64 k)) (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2)))) (/.f64 1 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 l) (/.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 k)) (neg.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 l (cos.f64 k)) (neg.f64 1/3)) (/.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (cbrt.f64 (cos.f64 k)))) (/.f64 1 (cbrt.f64 (pow.f64 (cos.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (cbrt.f64 (*.f64 l (cos.f64 k)))) (pow.f64 (cbrt.f64 (*.f64 l (cos.f64 k))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (/.f64 -1 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (cos.f64 k)) (/.f64 1 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (cbrt.f64 (cos.f64 k))))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (cbrt.f64 (*.f64 l (cos.f64 k))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2)))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k) (*.f64 (neg.f64 l) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (cos.f64 k)) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (cbrt.f64 (cos.f64 k)))) (cbrt.f64 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (*.f64 l (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (cbrt.f64 (*.f64 l (cos.f64 k)))) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k)))) (cbrt.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 2))) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) l) k) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) l) (/.f64 (neg.f64 k) (cbrt.f64 (cos.f64 k)))) (cbrt.f64 (pow.f64 (cos.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (cbrt.f64 (*.f64 l (cos.f64 k)))) (neg.f64 (/.f64 (*.f64 k k) l))) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) (cos.f64 k)) (cbrt.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 2))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cos.f64 k)) (neg.f64 k)) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 2)) (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))) (cbrt.f64 (*.f64 l (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 2)) (cbrt.f64 (neg.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2)))))) (cbrt.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 2)) (cbrt.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k))) (cbrt.f64 (*.f64 (neg.f64 l) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 k l)) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 k) (cos.f64 k)) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 k) (cos.f64 k)) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cbrt.f64 l))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 k) (cos.f64 k)) (*.f64 t (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) l) (cbrt.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 2))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cbrt.f64 (*.f64 l (cos.f64 k)))) (neg.f64 k)) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) (neg.f64 (/.f64 (*.f64 k k) l))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 k)) (/.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (cbrt.f64 l))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 k)) (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 k)) (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 l) (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 k) (cbrt.f64 (*.f64 l (cos.f64 k)))) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1 l) (cos.f64 k)) (*.f64 (neg.f64 k) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) l) (neg.f64 (/.f64 (*.f64 k k) l))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 l (cos.f64 k)) (neg.f64 1/3)) (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (cos.f64 k))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 k (cos.f64 k)) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) l)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (/.f64 (neg.f64 (pow.f64 (/.f64 k l) 2)) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (/.f64 1 (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (cos.f64 k)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 t (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l))) (/.f64 (neg.f64 k) (*.f64 l (cos.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 k (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (*.f64 l (cos.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) l) (/.f64 k (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 1 l) (cos.f64 k)) (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (cos.f64 k)) (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 k) 2) 0) (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) 0) (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (sin.f64 k) 2)) (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (*.f64 0 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))) (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 t (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 2)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 4)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 k) 2) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 4) (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 4) (*.f64 t t))) (cbrt.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (cbrt.f64 (neg.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 t) (cbrt.f64 (pow.f64 (sin.f64 k) 2))) (cbrt.f64 (pow.f64 (sin.f64 k) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 t) (sin.f64 k)) (sin.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 k) (*.f64 (sin.f64 k) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (neg.f64 (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 t (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)))) (pow.f64 (cbrt.f64 (*.f64 t (pow.f64 (sin.f64 k) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (pow.f64 (sin.f64 k) 2))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 t (pow.f64 (sin.f64 k) 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (pow.f64 (sin.f64 k) 2))) (neg.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (sin.f64 k)) (neg.f64 (sin.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (neg.f64 (*.f64 (cbrt.f64 (*.f64 t t)) (pow.f64 (sin.f64 k) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 t) (-.f64 (cos.f64 0) (cos.f64 (+.f64 k k)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 k) 6) (neg.f64 (pow.f64 t 3))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 6) (neg.f64 (pow.f64 t 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 6) (neg.f64 (pow.f64 t 3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 0) (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (*.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 0) (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))) (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) (*.f64 0 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 k) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (neg.f64 (/.f64 (*.f64 k k) l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) (cbrt.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 2)) (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 k k) l)) (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) k) (/.f64 k l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 k) (neg.f64 t)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 k) (cbrt.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cbrt.f64 (neg.f64 k))) (cbrt.f64 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l))) k)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (neg.f64 t) (neg.f64 (/.f64 (*.f64 k k) l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (*.f64 (pow.f64 (sin.f64 k) 2) (neg.f64 (/.f64 (*.f64 k k) l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2))) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 k) 4) (*.f64 t t))) (neg.f64 (/.f64 (*.f64 k k) l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 k l) (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) (neg.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 2)) (neg.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 k)) (*.f64 (cbrt.f64 (*.f64 k k)) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) 2)) k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 k l)) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cbrt.f64 k))) (cbrt.f64 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (/.f64 (*.f64 k k) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 k (*.f64 t (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k)) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cbrt.f64 k)) (neg.f64 (cbrt.f64 (*.f64 k k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 k) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k)) (/.f64 1 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 k) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k)) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k) k)) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (*.f64 k k)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (neg.f64 (*.f64 k k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) k) k) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) k) (neg.f64 k)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) k) (/.f64 k (cbrt.f64 l))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 k) (neg.f64 t)) (*.f64 (pow.f64 (sin.f64 k) 2) k)) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 k) (neg.f64 t)) (*.f64 (pow.f64 (sin.f64 k) 2) (neg.f64 k))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (neg.f64 k) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 k) (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) k)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 k) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k) (cbrt.f64 l))) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (neg.f64 k) (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) k))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) k))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k)))))))"]],"rules":[["egg-rr",71],["egg-rr",47],["egg-rr",91],["egg-rr",50]],"time":48.52197265625,"type":"rewrite"},{"count":[[391,297]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 (pow.f64 k 3) t) l))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 k 5) t) l)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 k 3) t) l)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 k 5) t) l)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 k 3) t) l)) (*.f64 -2/45 (/.f64 (*.f64 (pow.f64 k 7) t) l))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 k 5) t) l)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 k 3) t) l)) (+.f64 (*.f64 1/315 (/.f64 (*.f64 (pow.f64 k 9) t) l)) (*.f64 -2/45 (/.f64 (*.f64 (pow.f64 k 7) t) l)))))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))","(+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))","(+.f64 (*.f64 (pow.f64 k 8) (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))))","(+.f64 (*.f64 (pow.f64 k 10) (-.f64 (*.f64 -1/315 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (+.f64 (*.f64 -1/2 (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (*.f64 -1/720 (/.f64 t (pow.f64 l 2))))))) (+.f64 (*.f64 (pow.f64 k 8) (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 k 2) t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) t)) (*.f64 1/3 (*.f64 (pow.f64 k 4) t)))","(+.f64 (*.f64 -2/45 (*.f64 (pow.f64 k 6) t)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) t)) (*.f64 1/3 (*.f64 (pow.f64 k 4) t))))","(+.f64 (*.f64 1/315 (*.f64 (pow.f64 k 8) t)) (+.f64 (*.f64 -2/45 (*.f64 (pow.f64 k 6) t)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) t)) (*.f64 1/3 (*.f64 (pow.f64 k 4) t)))))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 4) t) l)","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 6) t) l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (+.f64 (*.f64 2/45 (/.f64 (*.f64 (pow.f64 k 8) t) l)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 6) t) l))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (+.f64 (*.f64 2/45 (/.f64 (*.f64 (pow.f64 k 8) t) l)) (+.f64 (*.f64 -1/315 (/.f64 (*.f64 (pow.f64 k 10) t) l)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 6) t) l)))))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 (pow.f64 k 3) t) l))","(/.f64 (*.f64 (neg.f64 (pow.f64 k 3)) t) l)","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 k 5) t) l)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 k 3) t) l)))","(/.f64 (+.f64 (*.f64 (neg.f64 (pow.f64 k 3)) t) (*.f64 1/3 (*.f64 (pow.f64 k 5) t))) l)","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 k 5) t) l)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 k 3) t) l)) (*.f64 -2/45 (/.f64 (*.f64 (pow.f64 k 7) t) l))))","(fma.f64 1/3 (/.f64 (*.f64 (pow.f64 k 5) t) l) (/.f64 (+.f64 (*.f64 -2/45 (*.f64 (pow.f64 k 7) t)) (*.f64 (neg.f64 (pow.f64 k 3)) t)) l))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 k 5) t) l)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 k 3) t) l)) (+.f64 (*.f64 1/315 (/.f64 (*.f64 (pow.f64 k 9) t) l)) (*.f64 -2/45 (/.f64 (*.f64 (pow.f64 k 7) t) l)))))","(+.f64 (/.f64 (+.f64 (*.f64 (neg.f64 (pow.f64 k 3)) t) (*.f64 1/3 (*.f64 (pow.f64 k 5) t))) l) (/.f64 (+.f64 (*.f64 -2/45 (*.f64 (pow.f64 k 7) t)) (*.f64 1/315 (*.f64 (pow.f64 k 9) t))) l))","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(*.f64 -1 (/.f64 (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t)) l))","(/.f64 (*.f64 (neg.f64 k) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))","(/.f64 (*.f64 (pow.f64 k 4) t) (*.f64 l l))","(+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))","(fma.f64 (pow.f64 k 6) (/.f64 (*.f64 t 1/6) (*.f64 l l)) (/.f64 (*.f64 (pow.f64 k 4) t) (*.f64 l l)))","(+.f64 (*.f64 (pow.f64 k 8) (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2))))","(fma.f64 (pow.f64 k 8) (+.f64 (*.f64 (/.f64 t (*.f64 l l)) (-.f64 2/45 1/24)) (*.f64 1/2 (/.f64 (*.f64 t 1/6) (*.f64 l l)))) (fma.f64 (pow.f64 k 6) (/.f64 (*.f64 t 1/6) (*.f64 l l)) (/.f64 (*.f64 (pow.f64 k 4) t) (*.f64 l l))))","(+.f64 (*.f64 (pow.f64 k 10) (-.f64 (*.f64 -1/315 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (+.f64 (*.f64 -1/2 (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (*.f64 -1/720 (/.f64 t (pow.f64 l 2))))))) (+.f64 (*.f64 (pow.f64 k 8) (-.f64 (*.f64 2/45 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 1/24 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2)))))))) (+.f64 (*.f64 (pow.f64 k 6) (-.f64 (*.f64 -1/3 (/.f64 t (pow.f64 l 2))) (*.f64 -1/2 (/.f64 t (pow.f64 l 2))))) (/.f64 (*.f64 (pow.f64 k 4) t) (pow.f64 l 2)))))","(fma.f64 (pow.f64 k 10) (-.f64 (/.f64 (*.f64 -1/315 t) (*.f64 l l)) (fma.f64 1/24 (/.f64 (*.f64 t 1/6) (*.f64 l l)) (fma.f64 -1/2 (+.f64 (*.f64 (/.f64 t (*.f64 l l)) (-.f64 2/45 1/24)) (*.f64 1/2 (/.f64 (*.f64 t 1/6) (*.f64 l l)))) (/.f64 (*.f64 -1/720 t) (*.f64 l l))))) (fma.f64 (pow.f64 k 8) (+.f64 (*.f64 (/.f64 t (*.f64 l l)) (-.f64 2/45 1/24)) (*.f64 1/2 (/.f64 (*.f64 t 1/6) (*.f64 l l)))) (fma.f64 (pow.f64 k 6) (/.f64 (*.f64 t 1/6) (*.f64 l l)) (/.f64 (*.f64 (pow.f64 k 4) t) (*.f64 l l)))))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 k 2) t))","(neg.f64 (*.f64 (*.f64 k k) t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) t)) (*.f64 1/3 (*.f64 (pow.f64 k 4) t)))","(*.f64 t (+.f64 (*.f64 1/3 (pow.f64 k 4)) (neg.f64 (*.f64 k k))))","(+.f64 (*.f64 -2/45 (*.f64 (pow.f64 k 6) t)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) t)) (*.f64 1/3 (*.f64 (pow.f64 k 4) t))))","(fma.f64 -2/45 (*.f64 (pow.f64 k 6) t) (*.f64 t (+.f64 (*.f64 1/3 (pow.f64 k 4)) (neg.f64 (*.f64 k k)))))","(+.f64 (*.f64 1/315 (*.f64 (pow.f64 k 8) t)) (+.f64 (*.f64 -2/45 (*.f64 (pow.f64 k 6) t)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) t)) (*.f64 1/3 (*.f64 (pow.f64 k 4) t)))))","(+.f64 (*.f64 t (+.f64 (*.f64 1/315 (pow.f64 k 8)) (*.f64 -2/45 (pow.f64 k 6)))) (*.f64 t (+.f64 (*.f64 1/3 (pow.f64 k 4)) (neg.f64 (*.f64 k k)))))","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(*.f64 -1 (*.f64 (pow.f64 (sin.f64 k) 2) t))","(*.f64 (neg.f64 (pow.f64 (sin.f64 k) 2)) t)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 4) t) l)","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 6) t) l)))","(/.f64 (+.f64 (*.f64 (pow.f64 k 4) t) (*.f64 -1/3 (*.f64 (pow.f64 k 6) t))) l)","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (+.f64 (*.f64 2/45 (/.f64 (*.f64 (pow.f64 k 8) t) l)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 6) t) l))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (/.f64 (+.f64 (*.f64 2/45 (*.f64 (pow.f64 k 8) t)) (*.f64 -1/3 (*.f64 (pow.f64 k 6) t))) l))","(+.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) (+.f64 (*.f64 2/45 (/.f64 (*.f64 (pow.f64 k 8) t) l)) (+.f64 (*.f64 -1/315 (/.f64 (*.f64 (pow.f64 k 10) t) l)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 k 6) t) l)))))","(+.f64 (/.f64 (+.f64 (*.f64 (pow.f64 k 4) t) (*.f64 2/45 (*.f64 (pow.f64 k 8) t))) l) (/.f64 (+.f64 (*.f64 -1/315 (*.f64 (pow.f64 k 10) t)) (*.f64 -1/3 (*.f64 (pow.f64 k 6) t))) l))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) l)","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) l)"]],"time":422.00390625,"type":"simplify"},{"compiler":[[7901,3860]],"time":67.7109375,"type":"eval"},{"alts":[["(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (/.f64 k (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))) (cbrt.f64 (*.f64 l (cos.f64 k)))))","fresh",19.451946351648978],["(/.f64 2 (/.f64 (*.f64 (/.f64 (neg.f64 k) (cos.f64 k)) (*.f64 t (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)))) (neg.f64 l)))","fresh",7.2642642997002],["(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (cbrt.f64 k)) (cbrt.f64 (*.f64 k k))) (*.f64 l (cos.f64 k))))","fresh",16.05576273764781],["(fma.f64 -2 (/.f64 (*.f64 (*.f64 l l) (*.f64 t 1/6)) (pow.f64 (*.f64 k t) 2)) (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 (pow.f64 k 4) t)))","fresh",34.8848049278559],["(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) k) (/.f64 k l)) (*.f64 l (cos.f64 k))))","fresh",9.31794422450597],["(/.f64 2 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (/.f64 (*.f64 k k) l) (cos.f64 k))) l))","fresh",14.29187589915147],["(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","fresh",23.80069642516195],["(/.f64 2 (neg.f64 (*.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) l) (/.f64 k (cos.f64 k)))))","fresh",9.03229739652571],["(/.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cos.f64 k)) (/.f64 (*.f64 k k) l)))","fresh",14.159632964521062],["(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","fresh",22.743665534146185],["(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (*.f64 t (sin.f64 k)) (neg.f64 (sin.f64 k))) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k))))","fresh",7.354601214296005],["(/.f64 2 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (/.f64 (/.f64 k l) (cos.f64 k))))","fresh",8.503581907593073],["(/.f64 2 (*.f64 (neg.f64 (/.f64 k l)) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cos.f64 k))))","fresh",4.558354900835664],["(/.f64 2 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (/.f64 (neg.f64 k) (*.f64 l (cos.f64 k)))))","fresh",4.532926092225012],["(/.f64 2 (/.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) 3) (*.f64 l (cos.f64 k))))","fresh",10.721140025334869],["(/.f64 2 (/.f64 (*.f64 (/.f64 (neg.f64 k) (cos.f64 k)) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cbrt.f64 l))) (cbrt.f64 (*.f64 l l))))","fresh",17.50589773940132],["(/.f64 2 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 3)))","fresh",25.38080231420863],["(/.f64 2 (/.f64 (*.f64 (*.f64 t (/.f64 (pow.f64 (sin.f64 k) 2) l)) (*.f64 k k)) (*.f64 l (cos.f64 k))))","fresh",14.115821398476658],["(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 2)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 4)) (neg.f64 t))) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k))))","fresh",10.718627723023824]],"compiler":[[31,20],[24,17],[28,19],[29,19],[22,15],[22,15],[20,14],[24,17],[22,15],[22,17],[25,16],[22,15],[24,16],[24,17],[25,18],[30,21],[25,20],[22,15],[31,22]],"count":[[315,19]],"kept":[{"done":[0,0],"fresh":[17,9],"new":[297,10],"picked":[1,0]}],"min-error":[2.4615021484838886],"time":125.923095703125,"type":"prune"},{"accuracy":[3.4782695577644116],"baseline":[4.532926092225012],"branch":[["t",4.532926092225012,1],["l",3.4782695577644116,3],["k",4.532926092225011,1],["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))",4.532926092225012,1],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))",4.532926092225012,1],["(*.f64 l l)",4.53292609222501,1],["(*.f64 l l)",4.53292609222501,1]],"compiler":[[4,3],[4,3],[4,3],[28,21],[26,19],[6,4],[6,4],[1080,541]],"count":[[49,3]],"inputs":[["(/.f64 2 (/.f64 (*.f64 (/.f64 (neg.f64 k) (cos.f64 k)) (*.f64 t (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)))) (neg.f64 l)))","(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) k) (/.f64 k l)) (*.f64 l (cos.f64 k))))","(/.f64 2 (neg.f64 (*.f64 (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) l) (/.f64 k (cos.f64 k)))))","(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (*.f64 t (sin.f64 k)) (neg.f64 (sin.f64 k))) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k))))","(/.f64 2 (*.f64 (neg.f64 (/.f64 k l)) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cos.f64 k))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (/.f64 (neg.f64 k) (*.f64 l (cos.f64 k)))))","(/.f64 2 (/.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 k l)) k))) 3) (*.f64 l (cos.f64 k))))","(/.f64 2 (/.f64 (*.f64 (/.f64 (neg.f64 k) (cos.f64 k)) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cbrt.f64 l))) (cbrt.f64 (*.f64 l l))))","(/.f64 2 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 (sin.f64 k) 2)) (neg.f64 (pow.f64 (/.f64 k l) 2))) (neg.f64 (cos.f64 k))) 3)))","(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 2)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 4)) (neg.f64 t))) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k))))","(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (/.f64 k (cbrt.f64 (pow.f64 (*.f64 l (cos.f64 k)) 2)))) (cbrt.f64 (*.f64 l (cos.f64 k)))))","(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (cbrt.f64 k)) (cbrt.f64 (*.f64 k k))) (*.f64 l (cos.f64 k))))","(/.f64 2 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (/.f64 (*.f64 k k) l) (cos.f64 k))) l))","(/.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cos.f64 k)) (/.f64 (*.f64 k k) l)))","(/.f64 2 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (cos.f64 k)) (/.f64 k l)))","(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (neg.f64 k)) (*.f64 l (cos.f64 k))))","(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) k) (/.f64 (/.f64 k l) (cos.f64 k))) l))","(/.f64 2 (/.f64 (/.f64 (*.f64 k (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) k)) l) (*.f64 l (cos.f64 k))))","(/.f64 2 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (*.f64 k k))) 3) (*.f64 l (cos.f64 k))))","(/.f64 2 (/.f64 (*.f64 (*.f64 t (/.f64 (pow.f64 (sin.f64 k) 2) l)) (*.f64 k k)) (*.f64 l (cos.f64 k))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) (/.f64 (/.f64 k l) (cos.f64 k))))","(/.f64 2 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) k) l) (/.f64 k (cos.f64 k))))","(/.f64 2 (/.f64 (*.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (cbrt.f64 l)) (pow.f64 (cbrt.f64 l) -2)) (*.f64 k k)) (*.f64 l (cos.f64 k))))","(/.f64 2 (/.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) t) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 k) (*.f64 l l)) 2))))","(/.f64 2 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (*.f64 l l))) (cos.f64 k)))","(/.f64 2 (*.f64 (*.f64 k k) (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (pow.f64 l -2) (cos.f64 k)))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (cbrt.f64 (/.f64 (pow.f64 l -2) (cos.f64 k)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 k) (*.f64 l l))) -2)))","(/.f64 2 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 (/.f64 t (cos.f64 k)) (*.f64 l l)))) 3))","(/.f64 2 (/.f64 (*.f64 k (*.f64 k (*.f64 (pow.f64 (sin.f64 k) 2) t))) (*.f64 (cos.f64 k) (pow.f64 l 2))))","(/.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (sin.f64 k) (*.f64 (sin.f64 k) t))) (*.f64 (cos.f64 k) (pow.f64 l 2))))","(/.f64 2 (/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) l) (*.f64 k k)) (*.f64 l (cos.f64 k))))","(/.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) (/.f64 t (cos.f64 k))) l) (/.f64 1 l)))","(/.f64 2 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (/.f64 (*.f64 k k) (*.f64 l l)) (cos.f64 k))))","(/.f64 2 (/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l))","(/.f64 2 (*.f64 (/.f64 (/.f64 (pow.f64 t 3) l) l) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","(/.f64 2 (/.f64 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k))) (/.f64 k t)) k) t))","(fma.f64 -2 (/.f64 (*.f64 (*.f64 l l) (*.f64 t 1/6)) (pow.f64 (*.f64 k t) 2)) (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 (pow.f64 k 4) t)))","(/.f64 (/.f64 (*.f64 (pow.f64 t -3) (*.f64 2 (*.f64 l l))) (*.f64 (sin.f64 k) (tan.f64 k))) (pow.f64 (/.f64 k t) 2))","(/.f64 (*.f64 2 (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t))","(/.f64 2 (/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l))","(/.f64 2 (*.f64 (*.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2)))","(*.f64 (pow.f64 (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2) (/.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))))","(/.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))) -2))) (*.f64 t (cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (*.f64 (tan.f64 k) (pow.f64 (/.f64 k t) 2))))))","(*.f64 2 (/.f64 (*.f64 (cos.f64 k) (pow.f64 l 2)) (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t))))","(/.f64 2 (fma.f64 (/.f64 (*.f64 t 1/6) (*.f64 l l)) (pow.f64 k 6) (/.f64 (/.f64 (*.f64 (pow.f64 k 4) t) l) l)))","(/.f64 2 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l))))","(/.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))))","(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (pow.f64 (/.f64 k t) 2))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))"]],"link":["."],"name":["Toniolo and Linder, Equation (10-)"],"oracle":[53.00171637753718],"outputs":[["(/.f64 2 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (/.f64 (neg.f64 k) (*.f64 l (cos.f64 k)))))","(/.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cos.f64 k)) (/.f64 (*.f64 k k) l)))","(/.f64 2 (*.f64 (neg.f64 (/.f64 k l)) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cos.f64 k))))"]],"time":102.430908203125,"times":[["t",12.85107421875],["l",36.02587890625],["k",13.3759765625],["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))",3.81298828125],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))",4.052001953125],["(*.f64 l l)",7.218994140625],["(*.f64 l l)",7.52099609375]],"type":"regimes"},{"bstep":[[1.0330464929796363e-219,4.865876182030465e-219,103.057861328125],[-3.9387580694777374e-193,-2.2075912905709897e-201,103.98291015625]],"compiler":[[30,23],[4,3]],"method":["binary-search","binary-search"],"time":207.4970703125,"type":"bsearch"},{"compiler":[[72,42]],"inputs":[["(if (<=.f64 l -8093126065927035/20547405865423334012660116730000502599806014854778022888665159777612234977722971961381509907334329887605402222094446162941482157227280483840343026447858909570137592465345486711686186554235635614340989264592896) (/.f64 2 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (/.f64 (neg.f64 k) (*.f64 l (cos.f64 k))))) (if (<=.f64 l 1642315131431611/1589778526515925949592554996185602616583051281527497329806389286938676175550849931602819490640533993421299436233862218963119697965173569936838950169642169486545361895445350303283471652486756807501069311174365664000914275178307643244544) (/.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cos.f64 k)) (/.f64 (*.f64 k k) l))) (/.f64 2 (*.f64 (neg.f64 (/.f64 k l)) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cos.f64 k))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 l -8093126065927035/20547405865423334012660116730000502599806014854778022888665159777612234977722971961381509907334329887605402222094446162941482157227280483840343026447858909570137592465345486711686186554235635614340989264592896) (/.f64 2 (*.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (/.f64 (neg.f64 k) (*.f64 l (cos.f64 k))))) (if (<=.f64 l 1642315131431611/1589778526515925949592554996185602616583051281527497329806389286938676175550849931602819490640533993421299436233862218963119697965173569936838950169642169486545361895445350303283471652486756807501069311174365664000914275178307643244544) (/.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 t l)) (cos.f64 k)) (/.f64 (*.f64 k k) l))) (/.f64 2 (*.f64 (neg.f64 (/.f64 k l)) (/.f64 (*.f64 (*.f64 (neg.f64 t) (pow.f64 (sin.f64 k) 2)) (/.f64 k l)) (cos.f64 k))))))","(if (<=.f64 l -8093126065927035/20547405865423334012660116730000502599806014854778022888665159777612234977722971961381509907334329887605402222094446162941482157227280483840343026447858909570137592465345486711686186554235635614340989264592896) (/.f64 -2 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (neg.f64 (pow.f64 (/.f64 k l) 2)) (cos.f64 k)))) (if (<=.f64 l 1642315131431611/1589778526515925949592554996185602616583051281527497329806389286938676175550849931602819490640533993421299436233862218963119697965173569936838950169642169486545361895445350303283471652486756807501069311174365664000914275178307643244544) (/.f64 (/.f64 2 (/.f64 (*.f64 k k) l)) (*.f64 (pow.f64 (sin.f64 k) 2) (/.f64 (/.f64 t l) (cos.f64 k)))) (/.f64 -2 (*.f64 (*.f64 (pow.f64 (sin.f64 k) 2) t) (/.f64 (neg.f64 (pow.f64 (/.f64 k l) 2)) (cos.f64 k))))))"]],"stop":[["fuel",1]],"time":29.782958984375,"type":"simplify"},{"time":0.026123046875,"type":"soundness"},{"compiler":[[72,42]],"remove-preprocessing":[[]],"time":20.47998046875,"type":"end"}]