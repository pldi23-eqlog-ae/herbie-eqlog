[{"compiler":[[44,32]],"method":["search"],"sampling":[[1,6.938893903907262e-18,0.0,1.0],[0,0.0,6.938893903907262e-18,1.0]],"time":0.241943359375,"type":"analyze"},{"outcomes":[["body",256,"valid",492.589111328125,8256]],"time":500.261962890625,"type":"sample"},{"compiler":[[13,9]],"inputs":[["0","1","2","3"],["(*.f64 (+.f64 a (+.f64 b (+.f64 c d))) 2)","(*.f64 (+.f64 b (+.f64 a (+.f64 c d))) 2)","(*.f64 (+.f64 c (+.f64 b (+.f64 a d))) 2)","(*.f64 (+.f64 d (+.f64 b (+.f64 c a))) 2)","(*.f64 (+.f64 a (+.f64 c (+.f64 b d))) 2)","(*.f64 (+.f64 a (+.f64 d (+.f64 c b))) 2)","(*.f64 (+.f64 a (+.f64 b (+.f64 d c))) 2)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(*.f64 (+.f64 a (+.f64 b (+.f64 c d))) 2)","(*.f64 (+.f64 b (+.f64 (+.f64 c a) d)) 2)","(*.f64 (+.f64 b (+.f64 a (+.f64 c d))) 2)","(*.f64 (+.f64 b (+.f64 (+.f64 c a) d)) 2)","(*.f64 (+.f64 c (+.f64 b (+.f64 a d))) 2)","(*.f64 (+.f64 b (+.f64 (+.f64 c a) d)) 2)","(*.f64 (+.f64 d (+.f64 b (+.f64 c a))) 2)","(*.f64 (+.f64 b (+.f64 (+.f64 c a) d)) 2)","(*.f64 (+.f64 a (+.f64 c (+.f64 b d))) 2)","(*.f64 (+.f64 b (+.f64 (+.f64 c a) d)) 2)","(*.f64 (+.f64 a (+.f64 d (+.f64 c b))) 2)","(*.f64 (+.f64 b (+.f64 (+.f64 c a) d)) 2)","(*.f64 (+.f64 a (+.f64 b (+.f64 d c))) 2)","(*.f64 (+.f64 b (+.f64 (+.f64 c a) d)) 2)"]],"symmetry":[[]],"time":84.802978515625,"type":"preprocess"},{"count":[[1,1]],"inputs":[["(*.f64 (+.f64 a (+.f64 b (+.f64 c d))) 2)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 a (+.f64 b (+.f64 c d))) 2)"]],"time":19.261962890625,"type":"simplify"},{"compiler":[[13,9]],"time":0.26220703125,"type":"eval"},{"alts":[["(*.f64 (+.f64 a (+.f64 b (+.f64 c d))) 2)","next",3.616794287259021]],"compiler":[[13,9],[13,9]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[3.616794287259021],"time":0.766845703125,"type":"prune"},{"compiler":[[33,10]],"locations":[["(+.f64 b (+.f64 c d))",0.42873002930532605,true],["(+.f64 a (+.f64 b (+.f64 c d)))",2.786589594756903,true]],"time":6.89111328125,"type":"localize"},{"count":[[2,84]],"series":[["(+.f64 b (+.f64 c d))","d","-inf",0.15283203125],["(+.f64 b (+.f64 c d))","d","inf",0.14697265625],["(+.f64 b (+.f64 c d))","d","0",0.180908203125],["(+.f64 b (+.f64 c d))","c","-inf",0.14990234375],["(+.f64 b (+.f64 c d))","c","inf",0.15185546875],["(+.f64 b (+.f64 c d))","c","0",0.199951171875],["(+.f64 b (+.f64 c d))","b","-inf",0.156005859375],["(+.f64 b (+.f64 c d))","b","inf",0.175048828125],["(+.f64 b (+.f64 c d))","b","0",0.157958984375],["(+.f64 a (+.f64 b (+.f64 c d)))","d","-inf",0.216064453125],["(+.f64 a (+.f64 b (+.f64 c d)))","d","inf",0.23388671875],["(+.f64 a (+.f64 b (+.f64 c d)))","d","0",0.20703125],["(+.f64 a (+.f64 b (+.f64 c d)))","c","-inf",0.18017578125],["(+.f64 a (+.f64 b (+.f64 c d)))","c","inf",0.220947265625],["(+.f64 a (+.f64 b (+.f64 c d)))","c","0",0.198974609375],["(+.f64 a (+.f64 b (+.f64 c d)))","b","-inf",0.193115234375],["(+.f64 a (+.f64 b (+.f64 c d)))","b","inf",0.25390625],["(+.f64 a (+.f64 b (+.f64 c d)))","b","0",0.202880859375],["(+.f64 a (+.f64 b (+.f64 c d)))","a","-inf",0.219970703125],["(+.f64 a (+.f64 b (+.f64 c d)))","a","inf",0.300048828125],["(+.f64 a (+.f64 b (+.f64 c d)))","a","0",0.241943359375]],"time":4.40283203125,"type":"series"},{"count":[[2,116]],"inputs":[["(+.f64 a (+.f64 b (+.f64 c d)))","(+.f64 b (+.f64 c d))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 a (+.f64 b (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 c d)) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a (+.f64 c d)) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a c) (+.f64 b d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 a c) b) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 d a)) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b d) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 (+.f64 b d) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a (+.f64 b (+.f64 c d))) 0) (+.f64 a (+.f64 b (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a (+.f64 b (+.f64 c d))) (*.f64 (+.f64 a (+.f64 b (+.f64 c d))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (+.f64 d a)) 1) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 a c) b) 1) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a b) (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (*.f64 (+.f64 a (+.f64 c d)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 a (+.f64 b (+.f64 c d)))) (+.f64 a (+.f64 b (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a (+.f64 b (+.f64 c d))) (*.f64 0 (+.f64 a (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c d) (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b c) (+.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 b (+.f64 d a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d a) (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d (+.f64 (+.f64 a c) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b c) (*.f64 (+.f64 d a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a (+.f64 c d)) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 a (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 a (+.f64 b (+.f64 c d)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 a (+.f64 b (+.f64 c d)))) (cbrt.f64 (pow.f64 (+.f64 a (+.f64 b (+.f64 c d))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c d)) 2)) (-.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (*.f64 a (+.f64 b (+.f64 c d)))))) (+.f64 (cbrt.f64 (+.f64 b (+.f64 c d))) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 a a)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c d)) 2)) (cbrt.f64 (*.f64 a (+.f64 b (+.f64 c d)))))) (+.f64 (cbrt.f64 a) (cbrt.f64 (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 a (+.f64 b (+.f64 c d))) 2)) (cbrt.f64 (+.f64 a (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 a (+.f64 b (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 a (+.f64 b (+.f64 c d))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 a (+.f64 b (+.f64 c d))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 a (+.f64 b (+.f64 c d))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 a (+.f64 b (+.f64 c d)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 a (+.f64 b (+.f64 c d)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 a (+.f64 b (+.f64 c d)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 a (+.f64 b (+.f64 c d))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 a (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 a (+.f64 b (+.f64 c d))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 b (+.f64 c d))) (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c d)) 2)) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 a a)) (+.f64 b (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c d)) 2)) (cbrt.f64 (+.f64 b (+.f64 c d))) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 b (+.f64 c d))) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 c d) 2)) (cbrt.f64 (+.f64 c d)) (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 c d)) (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 c d)) (cbrt.f64 (pow.f64 (+.f64 c d) 2)) (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 a) (+.f64 b (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 a) (+.f64 b (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 a b)) (cbrt.f64 (pow.f64 (+.f64 a b) 2)) (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (+.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 b) (+.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (+.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 b c)) (cbrt.f64 (pow.f64 (+.f64 b c) 2)) (+.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 a (+.f64 b (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 b (+.f64 c d)) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (+.f64 c d)) 1 a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 c d) 1 (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 c d) (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a 1 (+.f64 b (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 a b) (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 a b) 1 (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (+.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (+.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 b c) (+.f64 d a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c d) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b d) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 b d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (+.f64 c d)) 0) (+.f64 b (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 c d)) (*.f64 (+.f64 b (+.f64 c d)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b c) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (*.f64 (+.f64 b d) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 b (+.f64 c d))) (+.f64 b (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 c d)) (*.f64 0 (+.f64 b (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b d) 1) c)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (+.f64 c d))) (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c d)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c d)) 2)) (cbrt.f64 (+.f64 b (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 c d) 2)) (cbrt.f64 (*.f64 b (+.f64 c d))))) (+.f64 (cbrt.f64 b) (cbrt.f64 (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 c d) 2)) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 b (+.f64 c d))))) (+.f64 (cbrt.f64 (+.f64 c d)) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 b (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 b (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (+.f64 c d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 b (+.f64 c d))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (+.f64 c d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b (+.f64 c d)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (+.f64 c d))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (+.f64 c d))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (+.f64 c d))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b (+.f64 c d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 b (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b (+.f64 c d)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 c d)) (cbrt.f64 (pow.f64 (+.f64 c d) 2)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 d) (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d d)) (cbrt.f64 d) (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d) (cbrt.f64 (*.f64 d d)) (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 c d) 2)) (cbrt.f64 (+.f64 c d)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 c d)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 c) (+.f64 b d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (cbrt.f64 (*.f64 c c)) (+.f64 b d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 c c)) (cbrt.f64 c) (+.f64 b d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 b) (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 b c)) (cbrt.f64 (pow.f64 (+.f64 b c) 2)) d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 c d) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 d (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d 1 (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 c d) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 c (+.f64 b d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c 1 (+.f64 b d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b c) 1 d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 b c) d)))))"]],"rules":[["egg-rr",51],["egg-rr",65]],"time":25.653076171875,"type":"rewrite"},{"count":[[200,128]],"inputs":[["(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","a","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","a","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a d))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","b","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","b","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 a (+.f64 d b))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","c","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","c","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","d","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","d","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c d)","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","b","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","b","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 d b)","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","c","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","c","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c b)","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","d","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","d","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))"]],"method":["egg-herbie"],"outputs":[["(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","a","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","a","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a d))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","b","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","b","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 a (+.f64 d b))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","c","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","c","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","d","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","d","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c d)","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","b","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","b","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 d b)","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","c","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","c","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c b)","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","d","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","d","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d b))"]],"time":266.68701171875,"type":"simplify"},{"compiler":[[1566,632]],"time":17.865966796875,"type":"eval"},{"alts":[["(*.f64 (+.f64 (+.f64 d a) (+.f64 b c)) 2)","next",0]],"compiler":[[13,9],[13,9]],"count":[[129,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[128,1],"picked":[1,0]}],"min-error":[0],"time":19.4951171875,"type":"prune"},{"compiler":[[31,10]],"time":5.69580078125,"type":"localize"},{"compiler":[[4,4]],"time":0.09716796875,"type":"eval"},{"alts":[["(*.f64 (+.f64 (+.f64 d a) (+.f64 b c)) 2)","done",0]],"compiler":[[13,9]],"count":[[1,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[0],"time":0.52001953125,"type":"prune"},{"accuracy":[0],"baseline":[0.0],"branch":[["a",0,1],["b",0,1],["c",0,1],["d",0,1],["(*.f64 (+.f64 a (+.f64 b (+.f64 c d))) 2)",0,1],["(+.f64 a (+.f64 b (+.f64 c d)))",0,1],["(+.f64 b (+.f64 c d))",0,1],["(+.f64 c d)",0,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,9],[11,7],[9,6],[7,5],[22,14]],"count":[[2,1]],"inputs":[["(*.f64 (+.f64 (+.f64 d a) (+.f64 b c)) 2)","(*.f64 (+.f64 a (+.f64 b (+.f64 c d))) 2)"]],"link":["."],"name":["Expression, p6"],"oracle":[3.616794287259021],"outputs":[["(*.f64 (+.f64 (+.f64 d a) (+.f64 b c)) 2)"]],"time":20.614013671875,"times":[["a",2.383056640625],["b",2.3798828125],["c",2.43408203125],["d",2.44287109375],["(*.f64 (+.f64 a (+.f64 b (+.f64 c d))) 2)",2.498046875],["(+.f64 a (+.f64 b (+.f64 c d)))",2.516845703125],["(+.f64 b (+.f64 c d))",2.578125],["(+.f64 c d)",2.570068359375]],"type":"regimes"},{"compiler":[[13,9]],"inputs":[["(*.f64 (+.f64 (+.f64 d a) (+.f64 b c)) 2)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 (+.f64 d a) (+.f64 b c)) 2)"]],"stop":[["done",1]],"time":19.716796875,"type":"simplify"},{"time":0.005126953125,"type":"soundness"},{"compiler":[[13,9]],"remove-preprocessing":[[]],"time":9.10791015625,"type":"end"}]