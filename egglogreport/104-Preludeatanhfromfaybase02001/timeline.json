[{"compiler":[[9,7]],"method":["search"],"sampling":[[12,0.9980475902557373,0.0014641284942626953,0.00048828125],[11,0.9965834617614746,0.0029282569885253906,0.00048828125],[10,0.9936552047729492,0.005856513977050781,0.00048828125],[9,0.9877986907958984,0.011713027954101563,0.00048828125],[8,0.9760856628417969,0.023426055908203125,0.00048828125],[7,0.9526596069335938,0.04685211181640625,0.00048828125],[6,0.9058074951171875,0.0937042236328125,0.00048828125],[5,0.812103271484375,0.187408447265625,0.00048828125],[4,0.62469482421875,0.37481689453125,0.00048828125],[3,0.2498779296875,0.7496337890625,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":1.965087890625,"type":"analyze"},{"outcomes":[["body",256,"valid",241.376953125,8256]],"time":248.77880859375,"type":"sample"},{"compiler":[[8,6]],"inputs":[["0"],["(/.f64 (+.f64 x 1) (-.f64 1 x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(/.f64 (+.f64 x 1) (-.f64 1 x))","(/.f64 (-.f64 -1 x) (+.f64 -1 x))"]],"symmetry":[[]],"time":52.0361328125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (+.f64 x 1) (-.f64 1 x))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 x 1) (-.f64 1 x))","(/.f64 (-.f64 -1 x) (+.f64 -1 x))"]],"time":17.541015625,"type":"simplify"},{"compiler":[[15,11]],"time":0.364990234375,"type":"eval"},{"alts":[["(/.f64 (-.f64 -1 x) (+.f64 -1 x))","next",0.01171875]],"compiler":[[8,6],[8,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.01171875],"time":0.7939453125,"type":"prune"},{"compiler":[[16,11]],"locations":[["(/.f64 (-.f64 -1 x) (+.f64 -1 x))",0.01171875,true]],"time":3.98193359375,"type":"localize"},{"count":[[1,12]],"series":[["(/.f64 (-.f64 -1 x) (+.f64 -1 x))","x","-inf",0.23583984375],["(/.f64 (-.f64 -1 x) (+.f64 -1 x))","x","inf",0.3349609375],["(/.f64 (-.f64 -1 x) (+.f64 -1 x))","x","0",0.34814453125]],"time":0.968017578125,"type":"series"},{"count":[[1,103]],"inputs":[["(/.f64 (-.f64 -1 x) (+.f64 -1 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (/.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 1 x)) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (*.f64 (/.f64 1 (+.f64 -1 x)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 -1 x)) (neg.f64 x)) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 0) (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) (*.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (*.f64 (/.f64 x (-.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 1 x) (-.f64 1 x))) (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) (*.f64 0 (/.f64 (+.f64 1 x) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (+.f64 -1 x)) (/.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (/.f64 1 (+.f64 -1 x)) (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 -1 (fma.f64 x (+.f64 -1 x) 1)) (+.f64 -1 x)) (/.f64 (/.f64 (pow.f64 x 3) (fma.f64 x (+.f64 -1 x) 1)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 1 x)) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 2)) (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 x)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 x) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 -1 x)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))) (cbrt.f64 (/.f64 1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (+.f64 -1 x)) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x)) (pow.f64 (/.f64 -1 (+.f64 -1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)) (/.f64 1 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (pow.f64 (cbrt.f64 (+.f64 -1 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 1 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (+.f64 -1 x) (/.f64 x (cbrt.f64 (+.f64 -1 x))))) (*.f64 (+.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 -1 x) (*.f64 (+.f64 -1 x) (neg.f64 x))) (*.f64 (+.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (*.f64 (-.f64 1 x) (/.f64 x (cbrt.f64 (+.f64 -1 x))))) (*.f64 (-.f64 1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 -1 x) (*.f64 (-.f64 1 x) x)) (*.f64 (-.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) (neg.f64 x))) (*.f64 (-.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (+.f64 -1 x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (/.f64 x (cbrt.f64 (+.f64 -1 x))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (-.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) -1) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) 1) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (cbrt.f64 (/.f64 -1 (+.f64 -1 x)))) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (-.f64 -1 (pow.f64 x 3))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (+.f64 1 (pow.f64 x 3))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (neg.f64 (fma.f64 x (+.f64 -1 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 (pow.f64 x 3)) -1) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 (pow.f64 x 3)) (cbrt.f64 (/.f64 1 (+.f64 -1 x)))) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) 1) (*.f64 (neg.f64 (fma.f64 x (+.f64 -1 x) 1)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) -1) (*.f64 (neg.f64 (fma.f64 x (+.f64 -1 x) 1)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (cbrt.f64 (/.f64 1 (+.f64 -1 x)))) (*.f64 (neg.f64 (fma.f64 x (+.f64 -1 x) 1)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x))) (neg.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 x 3)) (neg.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 x) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 x) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x)) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 x 3)) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 -1 x)) (+.f64 1 (pow.f64 x 3))) (neg.f64 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 2)) (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 2)) (cbrt.f64 (-.f64 -1 x))) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (-.f64 -1 x)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 x) (cbrt.f64 (/.f64 -1 (+.f64 -1 x)))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 -1 (+.f64 -1 x))) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 1 (+.f64 -1 x))) (neg.f64 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 x)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 2))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -1 x)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 2))) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)) 1) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) 1) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x)) 1) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -1 (pow.f64 x 3))) (/.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (+.f64 -1 x))) (cbrt.f64 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x)) (+.f64 -1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) -1) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) 1) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 x))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 x))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (+.f64 -1 x))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)) 1) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)) (cbrt.f64 (fma.f64 x (+.f64 -1 x) 1))) (pow.f64 (cbrt.f64 (fma.f64 x (+.f64 -1 x) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 x 3)) (*.f64 (+.f64 -1 x) (neg.f64 (fma.f64 x (+.f64 -1 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 x 3)) (*.f64 (-.f64 1 x) (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 x 3)) (*.f64 (-.f64 1 x) (neg.f64 (fma.f64 x (+.f64 -1 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 x 3)) (*.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x))) (neg.f64 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 1 (+.f64 -1 x)) (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (pow.f64 (cbrt.f64 (+.f64 -1 x)) -2) (/.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (+.f64 -1 x)) (/.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (neg.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) -2)) (/.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (+.f64 -1 x)) (/.f64 x (-.f64 1 x)))))))"]],"rules":[["egg-rr",103]],"time":24.326171875,"type":"rewrite"},{"count":[[115,117]],"inputs":[["1","(+.f64 (*.f64 2 x) 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 2 x) 1)","(fma.f64 2 x 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 (*.f64 2 x) (+.f64 x 1)) 1)","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","(+.f64 (*.f64 2 (+.f64 (*.f64 (*.f64 x x) (+.f64 x 1)) x)) 1)","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 -1 (/.f64 (+.f64 (/.f64 2 x) 2) x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 -1 (fma.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 2 x)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 -1 (/.f64 (+.f64 (/.f64 2 x) 2) x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 -1 (fma.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 2 x)))"]],"time":66.0068359375,"type":"simplify"},{"compiler":[[1866,1463]],"time":26.045166015625,"type":"eval"},{"alts":[["(/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))","next",19.241147437298224],["(/.f64 (-.f64 -1 x) (+.f64 -1 x))","done",0.01171875],["(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","fresh",30.085353328350056]],"compiler":[[19,14],[8,6],[12,10],[19,14],[12,10]],"count":[[118,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[117,2],"picked":[1,1]}],"min-error":[0],"time":26.67578125,"type":"prune"},{"compiler":[[60,42]],"locations":[["(/.f64 1 (fma.f64 x x (+.f64 1 x)))",0.4960739993363749,true],["(/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))",3.908084245512195,true],["(/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))",14.435437187460572,true]],"time":15.30322265625,"type":"localize"},{"count":[[3,36]],"series":[["(/.f64 1 (fma.f64 x x (+.f64 1 x)))","x","-inf",0.18701171875],["(/.f64 1 (fma.f64 x x (+.f64 1 x)))","x","inf",0.22607421875],["(/.f64 1 (fma.f64 x x (+.f64 1 x)))","x","0",0.195068359375],["(/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))","x","-inf",0.2509765625],["(/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))","x","inf",0.35498046875],["(/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))","x","0",0.26416015625],["(/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))","x","-inf",0.2568359375],["(/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))","x","inf",0.26416015625],["(/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))","x","0",0.325927734375]],"time":2.4609375,"type":"series"},{"count":[[3,249]],"inputs":[["(/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))","(/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))","(/.f64 1 (fma.f64 x x (+.f64 1 x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x x (+.f64 1 x)) (/.f64 -1 (+.f64 -1 (pow.f64 x 3)))) (*.f64 (fma.f64 x x (+.f64 1 x)) (/.f64 x (-.f64 1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x x)) (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (*.f64 x x)) (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x 1)) (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (+.f64 1 x)) (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 0) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (*.f64 (/.f64 x (-.f64 1 (pow.f64 x 3))) (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x x x) (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x x) (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (*.f64 (+.f64 1 x) (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x x 1) (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (*.f64 x (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 x) (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (*.f64 (*.f64 x x) (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) (*.f64 0 (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (neg.f64 (*.f64 (/.f64 x (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (*.f64 (/.f64 x (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 1 x)) (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 -1 (fma.f64 x x (+.f64 1 x)))) (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 -1 (fma.f64 x x (-.f64 1 x))) (+.f64 -1 x)) (/.f64 (/.f64 (pow.f64 x 3) (fma.f64 x x (-.f64 1 x))) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (+.f64 -1 x)) (/.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2)) (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 -1 x) (cbrt.f64 (fma.f64 x x (+.f64 1 x)))) (/.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2) (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x x (+.f64 1 x))) (/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))) (-.f64 (-.f64 -1 x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))) (*.f64 (-.f64 -1 x) (cbrt.f64 (fma.f64 x x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2)) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2) (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))) (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))) (cbrt.f64 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (-.f64 -1 x) (*.f64 x x)) (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 x) (fma.f64 x x (+.f64 1 x))) (/.f64 -1 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 x) (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x x (+.f64 1 x)))) (/.f64 1 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 -1 x) (fma.f64 x x (+.f64 1 x))) (/.f64 1 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 x) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 x) (fma.f64 x x (+.f64 1 x))) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x x (+.f64 1 x)))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 x) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))) (/.f64 -1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 -1 x) (cbrt.f64 (fma.f64 x x (+.f64 1 x)))) (/.f64 1 (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 x x (+.f64 1 x))) (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x x (+.f64 1 x)) (-.f64 -1 (pow.f64 x 3))) (*.f64 (fma.f64 x x (-.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x x (+.f64 1 x)) (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3)))) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 (-.f64 1 (pow.f64 x 3)) (*.f64 (-.f64 1 (pow.f64 x 3)) x))) (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))))) (cbrt.f64 (/.f64 -1 (fma.f64 x x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))))) (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 x) (/.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)))) (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (*.f64 (fma.f64 x x (-.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x (+.f64 1 x))) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (-.f64 1 (pow.f64 x 3)) (*.f64 (-.f64 1 (pow.f64 x 3)) x)) (fma.f64 x x (+.f64 1 x))) (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2))) (cbrt.f64 (/.f64 -1 (fma.f64 x x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3)))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2) (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)))) (cbrt.f64 (/.f64 -1 (fma.f64 x x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2))) (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2) (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)))) (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))) (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 x) (-.f64 (-.f64 -1 x) (*.f64 x x))) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 x) (-.f64 (-.f64 -1 x) (*.f64 x x))) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 -1 x) (fma.f64 x x (+.f64 1 x))) 1) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x x (+.f64 1 x)))) 1) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 1 x) (fma.f64 x x (+.f64 1 x))) 1) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2)) (fma.f64 x x (+.f64 1 x)))) (cbrt.f64 (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -1 x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2)) (fma.f64 x x (+.f64 1 x)))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (+.f64 (*.f64 x (-.f64 1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 x) (fma.f64 x x (+.f64 1 x))) 1) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 x) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 x) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (-.f64 1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 x) (fma.f64 x x (+.f64 1 x))) -1) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) -1) (/.f64 -1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (/.f64 -1 (fma.f64 x x (+.f64 1 x))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x x (+.f64 1 x)))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x x (+.f64 1 x)))) 1) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 -1 x) (fma.f64 x x (+.f64 1 x))) -1) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 -1 x) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 (pow.f64 x 3) 3))) (/.f64 1 (+.f64 (+.f64 1 (pow.f64 x 3)) (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 -1 x) (fma.f64 x x (+.f64 1 x))) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 -1 x) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 -1 x) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 -1 x) (fma.f64 x x (+.f64 1 x))) 1) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))) (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 x) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 -1 (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x)))) (*.f64 (/.f64 1 (fma.f64 x x (+.f64 1 x))) (/.f64 x (+.f64 -1 (pow.f64 x 3))))) (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x x (+.f64 1 x))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))) (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 1 x) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 x x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (/.f64 x (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x (+.f64 1 x))) (neg.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 (pow.f64 x 3))) (/.f64 x (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 1 (pow.f64 x 3))) (/.f64 -1 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 (pow.f64 x 3))) (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (neg.f64 x)) (/.f64 -1 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 0) (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 (pow.f64 x 3))) (*.f64 (/.f64 x (-.f64 1 (pow.f64 x 3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (*.f64 0 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (+.f64 -1 (pow.f64 x 3))) (/.f64 x (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 -1 (fma.f64 x x (-.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (/.f64 (/.f64 (pow.f64 x 3) (fma.f64 x x (-.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (-.f64 1 (pow.f64 x 3)) (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)) (/.f64 (*.f64 (+.f64 -1 (pow.f64 x 3)) x) (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 1 (pow.f64 x 3))) (/.f64 1 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2)) (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 x)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 x) (/.f64 -1 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) (neg.f64 1/3)) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))) (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 -1 (pow.f64 x 3))) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))) (pow.f64 (+.f64 -1 (pow.f64 x 3)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3)))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (-.f64 1 (pow.f64 x 3)) (*.f64 (-.f64 1 (pow.f64 x 3)) x)) (/.f64 1 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 1 (*.f64 (fma.f64 x x (-.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (pow.f64 (cbrt.f64 (+.f64 -1 (pow.f64 x 3))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (/.f64 1 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 x) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 1 (pow.f64 x 3)) (*.f64 (-.f64 1 (pow.f64 x 3)) x)) (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 x 3)) (*.f64 (fma.f64 x x (-.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) (neg.f64 1/3)) (-.f64 -1 x)) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 x) (cbrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 x 3))))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2)) (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2)) (cbrt.f64 (-.f64 -1 x))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (+.f64 1 (pow.f64 x 3))) (+.f64 (*.f64 x (-.f64 1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 -1 (+.f64 -1 (pow.f64 x 3)))) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 -1 (+.f64 -1 (pow.f64 x 3)))) (+.f64 (*.f64 x (-.f64 1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3))) 1) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) 1) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (-.f64 1 (pow.f64 x 3)) (*.f64 (-.f64 1 (pow.f64 x 3)) x)) 1) (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -1 (pow.f64 x 3))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2))) (cbrt.f64 (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 x)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))) (cbrt.f64 (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -1 x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 2))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -1 x)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 1 (+.f64 -1 (pow.f64 x 3)))) (+.f64 (*.f64 x (-.f64 1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (-.f64 1 (pow.f64 x 3)) (*.f64 (-.f64 1 (pow.f64 x 3)) x)) (+.f64 -1 (pow.f64 x 3))) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) -1) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 (pow.f64 x 3) 3))) (/.f64 1 (+.f64 (+.f64 1 (pow.f64 x 3)) (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x x (-.f64 1 x)))) (pow.f64 (cbrt.f64 (fma.f64 x x (-.f64 1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3))) 1) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) 1) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 (*.f64 (fma.f64 x x (-.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))) (*.f64 (+.f64 -1 (pow.f64 x 3)) (/.f64 x (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))))) (*.f64 (+.f64 -1 (pow.f64 x 3)) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 -1 (pow.f64 x 3)) (*.f64 (+.f64 -1 (pow.f64 x 3)) (neg.f64 x))) (*.f64 (+.f64 -1 (pow.f64 x 3)) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 -1 (pow.f64 x 3)) (*.f64 (-.f64 1 (pow.f64 x 3)) x)) (*.f64 (-.f64 1 (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)) (*.f64 (-.f64 1 (pow.f64 x 3)) (/.f64 x (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))))) (*.f64 (-.f64 1 (pow.f64 x 3)) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (-.f64 1 (pow.f64 x 3)) (*.f64 (-.f64 1 (pow.f64 x 3)) (neg.f64 x))) (*.f64 (-.f64 1 (pow.f64 x 3)) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 x 3)))) (+.f64 -1 (pow.f64 x 3))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)) x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)) (/.f64 x (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 x 3)))) (-.f64 1 (pow.f64 x 3))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (-.f64 1 (pow.f64 x 3)) (*.f64 (-.f64 1 (pow.f64 x 3)) x))) (neg.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 x 3)) (neg.f64 (*.f64 (fma.f64 x x (-.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3)))) (+.f64 (*.f64 x (-.f64 1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 x 3)))) (pow.f64 (cbrt.f64 (+.f64 -1 (pow.f64 x 3))) -2) (/.f64 x (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) (neg.f64 1/3)) (neg.f64 (pow.f64 (cbrt.f64 (+.f64 -1 (pow.f64 x 3))) -2)) (/.f64 x (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 x 3)))) (pow.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) (neg.f64 1/3)) 2) (/.f64 x (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (/.f64 x (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (+.f64 -1 (pow.f64 x 3))) (/.f64 x (-.f64 1 (pow.f64 x 3))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 x x (+.f64 1 x))) 0) (/.f64 1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (fma.f64 x x (+.f64 1 x))) (*.f64 (/.f64 1 (fma.f64 x x (+.f64 1 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 1 (fma.f64 x x (+.f64 1 x)))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (fma.f64 x x (+.f64 1 x))) (*.f64 0 (/.f64 1 (fma.f64 x x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (fma.f64 x x (+.f64 1 x))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)) (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x x (+.f64 1 x)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 x x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 x x (+.f64 1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))) (cbrt.f64 (/.f64 -1 (fma.f64 x x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 (-.f64 -1 x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (fma.f64 x x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 x x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)) -1) (cbrt.f64 (-.f64 (-.f64 -1 x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)) (cbrt.f64 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x x (+.f64 1 x)))) -1) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2)))) (cbrt.f64 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))) (cbrt.f64 (-.f64 (-.f64 -1 x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (fma.f64 x x (+.f64 1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x x (+.f64 1 x)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x x (+.f64 1 x)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x x (+.f64 1 x)))) (/.f64 -1 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)) (/.f64 1 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x x (+.f64 1 x)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 (-.f64 -1 x) (*.f64 x x))) (-.f64 (-.f64 -1 x) (*.f64 x x))) (*.f64 (-.f64 (-.f64 -1 x) (*.f64 x x)) (-.f64 (-.f64 -1 x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (fma.f64 x x (+.f64 1 x))) (fma.f64 x x (+.f64 1 x))) (*.f64 (-.f64 (-.f64 -1 x) (*.f64 x x)) (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x x (+.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 x x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) (neg.f64 1/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x x (+.f64 1 x))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) 3) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) -3))))))"]],"rules":[["egg-rr",41],["egg-rr",96],["egg-rr",112]],"time":45.35693359375,"type":"rewrite"},{"count":[[285,290]],"inputs":[["1","(+.f64 (*.f64 2 x) 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","1","(+.f64 1 x)","(+.f64 1 (+.f64 (pow.f64 x 3) x))","(+.f64 1 (+.f64 (pow.f64 x 4) (+.f64 (pow.f64 x 3) x)))","(/.f64 -1 (pow.f64 x 2))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 6))))))","(/.f64 -1 (pow.f64 x 2))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 6))))))","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 3)))","(+.f64 1 (+.f64 (*.f64 -1 x) (+.f64 (*.f64 -1 (pow.f64 x 4)) (pow.f64 x 3))))","(/.f64 1 (pow.f64 x 2))","(-.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 2))) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 6))))","(/.f64 1 (pow.f64 x 2))","(-.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 2))) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 6))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 2 x) 1)","(fma.f64 2 x 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (+.f64 (*.f64 x x) x)) 1)","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","(+.f64 (*.f64 2 (*.f64 (*.f64 x x) (+.f64 1 x))) (fma.f64 2 x 1))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 -1 (fma.f64 2 (pow.f64 x -2) (/.f64 2 x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 -1 (fma.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 2 x)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 -1 (fma.f64 2 (pow.f64 x -2) (/.f64 2 x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 -1 (fma.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 2 x)))","1","(+.f64 1 x)","(+.f64 1 (+.f64 (pow.f64 x 3) x))","(+.f64 x (+.f64 1 (pow.f64 x 3)))","(+.f64 1 (+.f64 (pow.f64 x 4) (+.f64 (pow.f64 x 3) x)))","(+.f64 (+.f64 (pow.f64 x 3) x) (+.f64 1 (pow.f64 x 4)))","(/.f64 -1 (pow.f64 x 2))","(neg.f64 (pow.f64 x -2))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3))))","(-.f64 (neg.f64 (pow.f64 x -3)) (pow.f64 x -2))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))))","(-.f64 (neg.f64 (pow.f64 x -5)) (+.f64 (pow.f64 x -2) (pow.f64 x -3)))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 6))))))","(-.f64 (neg.f64 (pow.f64 x -5)) (+.f64 (pow.f64 x -6) (+.f64 (pow.f64 x -2) (pow.f64 x -3))))","(/.f64 -1 (pow.f64 x 2))","(neg.f64 (pow.f64 x -2))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3))))","(-.f64 (neg.f64 (pow.f64 x -3)) (pow.f64 x -2))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))))","(-.f64 (neg.f64 (pow.f64 x -5)) (+.f64 (pow.f64 x -2) (pow.f64 x -3)))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 6))))))","(-.f64 (neg.f64 (pow.f64 x -5)) (+.f64 (pow.f64 x -6) (+.f64 (pow.f64 x -2) (pow.f64 x -3))))","1","(+.f64 1 (*.f64 -1 x))","(-.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 3)))","(+.f64 (-.f64 1 x) (pow.f64 x 3))","(+.f64 1 (+.f64 (*.f64 -1 x) (+.f64 (*.f64 -1 (pow.f64 x 4)) (pow.f64 x 3))))","(-.f64 (-.f64 (-.f64 (pow.f64 x 3) (pow.f64 x 4)) x) -1)","(/.f64 1 (pow.f64 x 2))","(pow.f64 x -2)","(-.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))","(-.f64 (pow.f64 x -2) (pow.f64 x -3))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 2))) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (pow.f64 x -5) (pow.f64 x -2)) (pow.f64 x -3))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 6))))","(-.f64 (+.f64 (pow.f64 x -5) (pow.f64 x -2)) (+.f64 (pow.f64 x -3) (pow.f64 x -6)))","(/.f64 1 (pow.f64 x 2))","(pow.f64 x -2)","(-.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))","(-.f64 (pow.f64 x -2) (pow.f64 x -3))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 2))) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (pow.f64 x -5) (pow.f64 x -2)) (pow.f64 x -3))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 6))))","(-.f64 (+.f64 (pow.f64 x -5) (pow.f64 x -2)) (+.f64 (pow.f64 x -3) (pow.f64 x -6)))"]],"time":119.576904296875,"type":"simplify"},{"compiler":[[7010,5253]],"time":88.701171875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (+.f64 (*.f64 x (-.f64 1 x)) -1))","next",19.295253759768443],["(/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))","done",19.241147437298224],["(/.f64 (-.f64 -1 x) (+.f64 -1 x))","done",0.01171875]],"compiler":[[27,20],[19,14],[8,6],[27,20]],"count":[[293,3]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[290,1],"picked":[1,1]}],"min-error":[0],"time":109.5,"type":"prune"},{"compiler":[[98,69]],"locations":[["(*.f64 x (-.f64 1 x))",0.0078125,true],["(*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))",3.55214459025276,true],["(/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (+.f64 (*.f64 x (-.f64 1 x)) -1))",15.411031207188138,true],["(/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))",18.900282119937454,true]],"time":24.89892578125,"type":"localize"},{"count":[[4,48]],"series":[["(*.f64 x (-.f64 1 x))","x","-inf",0.29296875],["(*.f64 x (-.f64 1 x))","x","inf",0.43896484375],["(*.f64 x (-.f64 1 x))","x","0",0.230224609375],["(*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))","x","-inf",0.210205078125],["(*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))","x","inf",0.206787109375],["(*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))","x","0",0.197998046875],["(/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (+.f64 (*.f64 x (-.f64 1 x)) -1))","x","-inf",0.241943359375],["(/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (+.f64 (*.f64 x (-.f64 1 x)) -1))","x","inf",0.26611328125],["(/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (+.f64 (*.f64 x (-.f64 1 x)) -1))","x","0",0.245849609375],["(/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))","x","-inf",0.22607421875],["(/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))","x","inf",0.286865234375],["(/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))","x","0",0.277099609375]],"time":3.29296875,"type":"series"},{"count":[[4,307]],"inputs":[["(/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))","(/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (+.f64 (*.f64 x (-.f64 1 x)) -1))","(*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))","(*.f64 x (-.f64 1 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 0) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (+.f64 1 x)) (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x x)) (/.f64 1 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (*.f64 x x)) (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x 1)) (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (*.f64 0 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 (pow.f64 x 3)))) (*.f64 (*.f64 x x) (/.f64 1 (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x x x) (/.f64 1 (+.f64 -1 (pow.f64 x 3)))) (/.f64 1 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x x) (/.f64 1 (+.f64 -1 (pow.f64 x 3)))) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x x 1) (/.f64 1 (+.f64 -1 (pow.f64 x 3)))) (*.f64 x (/.f64 1 (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (*.f64 (fma.f64 x x x) (/.f64 1 (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 x x (+.f64 1 x)) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 1 (pow.f64 x 3))) (/.f64 (fma.f64 x x (+.f64 1 x)) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x x (+.f64 1 x))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) 2)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) 2) (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x x (+.f64 1 x)) (/.f64 1 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (fma.f64 x x x)) (/.f64 1 (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) (neg.f64 1/3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 x x (+.f64 1 x)) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (pow.f64 (cbrt.f64 (+.f64 -1 (pow.f64 x 3))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (fma.f64 x x x)) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) (neg.f64 1/3)) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 2)) (cbrt.f64 (fma.f64 x x (+.f64 1 x)))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 2)) (cbrt.f64 (-.f64 -1 (fma.f64 x x x)))) (cbrt.f64 (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (+.f64 1 (pow.f64 (fma.f64 x x x) 3))) (+.f64 1 (*.f64 (fma.f64 x x x) (-.f64 (fma.f64 x x x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) 2))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 (fma.f64 x x x)) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 (fma.f64 x x x)) (fma.f64 x x (+.f64 1 x))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 (fma.f64 x x x)) 1) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) 1) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 (pow.f64 x 3) 3))) (/.f64 1 (+.f64 (+.f64 1 (pow.f64 x 3)) (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) -1) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (-.f64 1 (pow.f64 x 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (-.f64 1 (pow.f64 x 3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (*.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))) (*.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) 0) (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) (*.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (fma.f64 x (-.f64 1 x) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x (-.f64 1 x) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x (-.f64 1 x) -1))) (/.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (fma.f64 x (-.f64 1 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))) (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) (*.f64 0 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (fma.f64 x (+.f64 -1 x) 1)) (neg.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) 2)) (cbrt.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x (-.f64 1 x) -1))) (/.f64 (+.f64 1 (pow.f64 x 3)) (cbrt.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 2) (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (cbrt.f64 (fma.f64 x (-.f64 1 x) -1))) (/.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) (neg.f64 1/3)) (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 2)) (fma.f64 x (-.f64 1 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (fma.f64 x (-.f64 1 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x (-.f64 1 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (fma.f64 x (-.f64 1 x) -1)) (/.f64 1 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x (-.f64 1 x) -1))) (pow.f64 (cbrt.f64 (fma.f64 x (-.f64 1 x) -1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (/.f64 1 (*.f64 (+.f64 -1 (pow.f64 x 3)) (fma.f64 x (-.f64 1 x) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (-.f64 -1 (fma.f64 x x x)))) (*.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (*.f64 (-.f64 -1 (fma.f64 x x x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3)))) (*.f64 (-.f64 1 (pow.f64 x 3)) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (*.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3)))) (*.f64 (+.f64 -1 (pow.f64 x 3)) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (fma.f64 x x (+.f64 1 x)))) (*.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (fma.f64 x (-.f64 1 x) -1)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x (-.f64 1 x) -1))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (-.f64 1 x) -1))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x (-.f64 1 x) -1))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (neg.f64 (*.f64 (+.f64 -1 (pow.f64 x 3)) (fma.f64 x (-.f64 1 x) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (fma.f64 x (-.f64 1 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (fma.f64 x (-.f64 1 x) -1)) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x (-.f64 1 x) -1))) (cbrt.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (*.f64 (+.f64 -1 (pow.f64 x 3)) (fma.f64 x (-.f64 1 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (+.f64 -1 (pow.f64 x 3))) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (cbrt.f64 (fma.f64 x (-.f64 1 x) -1))) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) (neg.f64 1/3)) (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) 2)) (cbrt.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (+.f64 -1 (pow.f64 x 3))))) (cbrt.f64 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) 2)) (cbrt.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))) (cbrt.f64 (fma.f64 x (-.f64 1 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x)))) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x)))) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 2))) (cbrt.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (fma.f64 x (-.f64 1 x) -1))) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x (-.f64 1 x) -1))) (+.f64 1 (pow.f64 x 3))) (cbrt.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2))) (cbrt.f64 (fma.f64 x (-.f64 1 x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) -1) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (+.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 3) -1)) (/.f64 1 (+.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 2) (fma.f64 x (-.f64 1 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (fma.f64 x (-.f64 1 x) -1)) 1) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (fma.f64 x (-.f64 1 x) -1)) (+.f64 -1 (pow.f64 (pow.f64 x 3) 3))) (/.f64 1 (+.f64 (+.f64 1 (pow.f64 x 3)) (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (fma.f64 x (-.f64 1 x) -1)) -1) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (fma.f64 x (-.f64 1 x) -1)) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (fma.f64 x (-.f64 1 x) -1)) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x (-.f64 1 x) -1))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x (-.f64 1 x) -1))) 1) (cbrt.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (/.f64 (*.f64 (+.f64 -1 (pow.f64 x 3)) (fma.f64 x (-.f64 1 x) -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (fma.f64 x (-.f64 1 x) -1))) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x (-.f64 1 x) -1)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x (-.f64 1 x) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 x (-.f64 1 x) -1)) (/.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (-.f64 1 (pow.f64 x 3))) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 x)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (*.f64 1 (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 0) (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (*.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (*.f64 (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 1) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))) (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (*.f64 0 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (/.f64 (fma.f64 x x (+.f64 1 x)) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 2)) (+.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (pow.f64 x 3))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (pow.f64 x 3)) 2)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (/.f64 (fma.f64 x x (+.f64 1 x)) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (+.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 2)) (cbrt.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (/.f64 1 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (cbrt.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x x (+.f64 1 x)) (*.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (+.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (+.f64 -1 (pow.f64 x 3)))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (-.f64 1 (pow.f64 x 3))) (-.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (-.f64 -1 (fma.f64 x x x))) (/.f64 1 (*.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)) (-.f64 1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (/.f64 1 (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 -1 (fma.f64 x x x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3))) (/.f64 1 (*.f64 (-.f64 1 (pow.f64 x 3)) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (fma.f64 x x (+.f64 1 x))) (/.f64 1 (*.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3))) (/.f64 1 (*.f64 (+.f64 -1 (pow.f64 x 3)) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (pow.f64 (cbrt.f64 (+.f64 -1 (pow.f64 x 3))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (+.f64 1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (+.f64 1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 (fma.f64 x x x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3))) (*.f64 (-.f64 1 (pow.f64 x 3)) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3))) (*.f64 (+.f64 -1 (pow.f64 x 3)) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (-.f64 -1 (fma.f64 x x x))) (*.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (fma.f64 x x (+.f64 1 x))) (*.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 2)) (cbrt.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x)))) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 (pow.f64 (pow.f64 x 3) 3))) (+.f64 -1 (-.f64 (pow.f64 x 3) (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (-.f64 -1 (fma.f64 x x x)))) (*.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)) (-.f64 1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (-.f64 -1 (fma.f64 x x x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3)))) (*.f64 (-.f64 1 (pow.f64 x 3)) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3)))) (*.f64 (+.f64 -1 (pow.f64 x 3)) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (fma.f64 x x (+.f64 1 x)))) (*.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) -1) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (cbrt.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)))) (pow.f64 (cbrt.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (fma.f64 x x (+.f64 1 x))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) 1) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3)))) 1) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 (pow.f64 x 3) 3))) (/.f64 1 (+.f64 (+.f64 1 (pow.f64 x 3)) (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) -1) (-.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (+.f64 -1 (pow.f64 x 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (-.f64 -1 (fma.f64 x x x))) (*.f64 1 (*.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)) (-.f64 1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 (fma.f64 x x x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3))) (*.f64 1 (*.f64 (-.f64 1 (pow.f64 x 3)) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (fma.f64 x x (+.f64 1 x))) (*.f64 1 (*.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)) (+.f64 -1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3))) (*.f64 1 (*.f64 (+.f64 -1 (pow.f64 x 3)) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (-.f64 -1 (fma.f64 x x x)))) (neg.f64 (*.f64 (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)) (-.f64 1 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 -1 (fma.f64 x x x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3)))) (neg.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))) (+.f64 -1 (-.f64 (pow.f64 x 3) (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (cbrt.f64 (+.f64 -1 (pow.f64 x 3))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 x 3) 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 1) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 -1 (fma.f64 x x x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3))) (-.f64 1 (pow.f64 x 3))) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 1 (pow.f64 (pow.f64 x 3) 3))) (+.f64 -1 (pow.f64 x 3))) (-.f64 (+.f64 1 (pow.f64 x 6)) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 (fma.f64 x x x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (pow.f64 x 3) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 3) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 1 (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (fma.f64 x x (+.f64 1 x)) (-.f64 1 (pow.f64 x 3))) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 x x (+.f64 1 x))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) 2)) (+.f64 -1 (pow.f64 x 3))) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) 2)) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) 2) (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) (neg.f64 1/3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2))) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3))) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 -1 (fma.f64 x x x)) (/.f64 1 (-.f64 1 (pow.f64 x 3))) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 x x (+.f64 1 x)) (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (fma.f64 x x (+.f64 1 x)) (/.f64 (*.f64 (pow.f64 x 3) (fma.f64 x x (+.f64 1 x))) (+.f64 -1 (pow.f64 x 3))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 1 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (+.f64 -1 x)) 0) (*.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (-.f64 1 x)) 0) (*.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 1 x)) (*.f64 (*.f64 x (-.f64 1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (+.f64 -1 x))) (*.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (-.f64 1 x))) (*.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 1 x)) (*.f64 0 (*.f64 x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 x x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (+.f64 (neg.f64 (*.f64 x x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (-.f64 (neg.f64 (*.f64 x x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (neg.f64 (*.f64 x x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (-.f64 1 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 x) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (-.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (+.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (*.f64 x (+.f64 -1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 x (+.f64 -1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (pow.f64 x (+.f64 2 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 x) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 x (-.f64 1 x)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (+.f64 -1 x))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (-.f64 1 x))) (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (-.f64 1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 2)) (-.f64 0 (*.f64 (cbrt.f64 (*.f64 x (-.f64 1 x))) 0))) (+.f64 (cbrt.f64 (*.f64 x (-.f64 1 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 2)) (+.f64 0 (*.f64 (cbrt.f64 (*.f64 x (-.f64 1 x))) 0))) (-.f64 (cbrt.f64 (*.f64 x (-.f64 1 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (-.f64 1 x))) (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 x) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 2)) (cbrt.f64 (*.f64 x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 1 (pow.f64 x 3))) (fma.f64 x x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 x (-.f64 1 (pow.f64 x 3)))) (fma.f64 x x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (+.f64 -1 (pow.f64 x 3))) (-.f64 -1 (fma.f64 x x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (-.f64 1 (pow.f64 x 3))) -1) (-.f64 -1 (fma.f64 x x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (-.f64 1 (pow.f64 x 3))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) 2))) (cbrt.f64 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (-.f64 1 (pow.f64 x 3))) 1) (fma.f64 x x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (-.f64 1 (pow.f64 x 3))) (cbrt.f64 (fma.f64 x x (+.f64 1 x)))) (cbrt.f64 (pow.f64 (fma.f64 x x (+.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x (-.f64 1 (pow.f64 x 3)))) (-.f64 -1 (fma.f64 x x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 x (+.f64 -1 x)) 3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (-.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (-.f64 1 x)) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (-.f64 1 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (-.f64 1 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 1 x) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 2)) (cbrt.f64 (*.f64 x (-.f64 1 x))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (-.f64 1 x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 x (+.f64 -1 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (-.f64 1 x))) (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 x)) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 x) x 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (neg.f64 (*.f64 x x)))))))"]],"rules":[["egg-rr",73],["egg-rr",101],["egg-rr",75],["egg-rr",58]],"time":57.35302734375,"type":"rewrite"},{"count":[[355,348]],"inputs":[["-1","(-.f64 (*.f64 -1 x) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))) 1)","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","1","(+.f64 (*.f64 2 x) 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","-1","(-.f64 (*.f64 -1 x) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -2 (pow.f64 x 3)))) 1)","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) x)","(+.f64 1 (+.f64 (pow.f64 x 2) x))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (pow.f64 x 2) x)))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) x)","(+.f64 1 (+.f64 (pow.f64 x 2) x))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (pow.f64 x 2) x)))","x","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(*.f64 -1 (pow.f64 x 2))","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(*.f64 -1 (pow.f64 x 2))","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 -1 x) 1)","(neg.f64 (+.f64 1 x))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(neg.f64 (+.f64 1 (fma.f64 x x x)))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))) 1)","(-.f64 (neg.f64 (pow.f64 x 3)) (+.f64 1 (fma.f64 x x x)))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (pow.f64 x -2) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (pow.f64 x -2) (+.f64 (pow.f64 x -3) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (pow.f64 x -4) (+.f64 (pow.f64 x -2) (+.f64 (pow.f64 x -3) (/.f64 1 x))))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (pow.f64 x -2) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (pow.f64 x -2) (+.f64 (pow.f64 x -3) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (pow.f64 x -4) (+.f64 (pow.f64 x -2) (+.f64 (pow.f64 x -3) (/.f64 1 x))))","1","(+.f64 (*.f64 2 x) 1)","(fma.f64 2 x 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (fma.f64 x x x)) 1)","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","(fma.f64 2 (pow.f64 x 3) (+.f64 (*.f64 2 (fma.f64 x x x)) 1))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 -1 (fma.f64 (pow.f64 x -2) 2 (/.f64 2 x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 -1 (fma.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 2 x)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 -1 (fma.f64 (pow.f64 x -2) 2 (/.f64 2 x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 -1 (fma.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 2 x)))","-1","(-.f64 (*.f64 -1 x) 1)","(neg.f64 (+.f64 1 x))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(neg.f64 (+.f64 1 (fma.f64 x x x)))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -2 (pow.f64 x 3)))) 1)","(+.f64 (-.f64 (fma.f64 (pow.f64 x 3) -2 (neg.f64 x)) (*.f64 x x)) -1)","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) x)","(fma.f64 x x x)","(+.f64 1 (+.f64 (pow.f64 x 2) x))","(+.f64 1 (fma.f64 x x x))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (pow.f64 x 2) x)))","(+.f64 1 (+.f64 (/.f64 2 x) (fma.f64 x x x)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) x)","(fma.f64 x x x)","(+.f64 1 (+.f64 (pow.f64 x 2) x))","(+.f64 1 (fma.f64 x x x))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (pow.f64 x 2) x)))","(+.f64 1 (+.f64 (/.f64 2 x) (fma.f64 x x x)))","x","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(-.f64 x (*.f64 x x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(-.f64 x (*.f64 x x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(-.f64 x (*.f64 x x))","(*.f64 -1 (pow.f64 x 2))","(neg.f64 (*.f64 x x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(-.f64 x (*.f64 x x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(-.f64 x (*.f64 x x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(-.f64 x (*.f64 x x))","(*.f64 -1 (pow.f64 x 2))","(neg.f64 (*.f64 x x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(-.f64 x (*.f64 x x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(-.f64 x (*.f64 x x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(-.f64 x (*.f64 x x))"]],"time":148.72607421875,"type":"simplify"},{"compiler":[[11211,8299]],"time":128.7490234375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (+.f64 (*.f64 x (-.f64 1 x)) -1))","done",19.295253759768443],["(/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))","done",19.241147437298224],["(/.f64 (-.f64 -1 x) (+.f64 -1 x))","done",0.01171875]],"compiler":[[27,20],[19,14],[8,6]],"count":[[351,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[348,0],"picked":[1,1]}],"min-error":[0],"time":142.68798828125,"type":"prune"},{"accuracy":[0.01171875],"baseline":[0.01171875],"branch":[["x",0.01171875,1],["(/.f64 (+.f64 x 1) (-.f64 1 x))",0.01171875,1]],"compiler":[[2,1],[8,6],[70,52]],"count":[[5,1]],"inputs":[["(/.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 -1 (pow.f64 x 3)))) (+.f64 (*.f64 x (-.f64 1 x)) -1))","(/.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(/.f64 (-.f64 -1 x) (+.f64 -1 x))","(/.f64 (+.f64 x 1) (-.f64 1 x))"]],"link":["."],"name":["Prelude:atanh from fay-base-0.20.0.1"],"oracle":[30.130438447307146],"outputs":[["(/.f64 (-.f64 -1 x) (+.f64 -1 x))"]],"time":6.68701171875,"times":[["x",3.34814453125],["(/.f64 (+.f64 x 1) (-.f64 1 x))",1.885986328125]],"type":"regimes"},{"compiler":[[8,6]],"inputs":[["(/.f64 (-.f64 -1 x) (+.f64 -1 x))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 -1 x) (+.f64 -1 x))","(/.f64 (+.f64 1 x) (-.f64 1 x))"]],"stop":[["done",1]],"time":18.474853515625,"type":"simplify"},{"time":0.01708984375,"type":"soundness"},{"compiler":[[8,6]],"remove-preprocessing":[[]],"time":7.99609375,"type":"end"}]