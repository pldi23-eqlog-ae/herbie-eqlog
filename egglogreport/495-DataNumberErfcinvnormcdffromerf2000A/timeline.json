[{"compiler":[[22,17]],"method":["search"],"sampling":[[12,0.10526290717280662,0.5185172834808622,0.37621980934633115],[11,0.07017527144853775,0.6783609573358649,0.2514637712155974],[10,0.046783514299025164,0.7017527144853775,0.2514637712155974],[9,0.031189009532683443,0.7173472192517192,0.2514637712155974],[8,0.0,0.7485362287844026,0.2514637712155974],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":173.590087890625,"type":"analyze"},{"outcomes":[["body",256,"invalid",975.8330078125,14929],["body",256,"valid",554.64990234375,8256]],"time":1554.6337890625,"type":"sample"},{"compiler":[[21,16]],"inputs":[["0","1","2","3"],["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 y 1/2) x) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 z 1/2) y) (sqrt.f64 (*.f64 x 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 t 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 x x) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) z) (sqrt.f64 (*.f64 y 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) t) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 y y) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 t 2))) (exp.f64 (/.f64 (*.f64 z z) 2)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (*.f64 z 2) (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (-.f64 (*.f64 y 1/2) x) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (fma.f64 y 1/2 (neg.f64 x)) (sqrt.f64 (*.f64 (*.f64 z 2) (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (-.f64 (*.f64 z 1/2) y) (sqrt.f64 (*.f64 x 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (fma.f64 z 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (*.f64 x 2) (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (-.f64 (*.f64 t 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 x x) 2)))","(*.f64 (fma.f64 t 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (*.f64 z 2) (exp.f64 (*.f64 x x)))))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) z) (sqrt.f64 (*.f64 y 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (fma.f64 x 1/2 (neg.f64 z)) (sqrt.f64 (*.f64 (*.f64 y 2) (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) t) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 y y) 2)))","(*.f64 (fma.f64 x 1/2 (neg.f64 t)) (sqrt.f64 (*.f64 (*.f64 z 2) (exp.f64 (*.f64 y y)))))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 t 2))) (exp.f64 (/.f64 (*.f64 z z) 2)))","(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (*.f64 t 2) (exp.f64 (*.f64 z z)))))"]],"symmetry":[[]],"time":101.8671875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))"]],"time":21.95703125,"type":"simplify"},{"compiler":[[36,24]],"time":0.591796875,"type":"eval"},{"alts":[["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","next",0.25]],"compiler":[[19,13],[19,13]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.25],"time":1.300048828125,"type":"prune"},{"compiler":[[58,16]],"locations":[["(*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))",0.01171875,true],["(exp.f64 (*.f64 t t))",0.016288769536884032,true],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))",0.234375,true]],"time":11.5830078125,"type":"localize"},{"count":[[3,72]],"series":[["(*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))","t","-inf",0.155029296875],["(*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))","t","inf",0.31591796875],["(*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))","t","0",0.259033203125],["(*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))","z","-inf",0.2841796875],["(*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))","z","inf",0.410888671875],["(*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))","z","0",0.669921875],["(exp.f64 (*.f64 t t))","t","-inf",0.166015625],["(exp.f64 (*.f64 t t))","t","inf",0.18115234375],["(exp.f64 (*.f64 t t))","t","0",0.211181640625],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","t","-inf",0.4169921875],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","t","inf",2.531982421875],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","t","0",0.989990234375],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","z","-inf",0.988037109375],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","z","inf",0.577880859375],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","z","0",1.197998046875],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","y","-inf",0.399169921875],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","y","inf",0.48486328125],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","y","0",0.968017578125],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","x","-inf",0.5439453125],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","x","inf",0.672119140625],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","x","0",1.074951171875]],"time":14.0,"type":"series"},{"count":[[3,128]],"inputs":[["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","(exp.f64 (*.f64 t t))","(*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 0) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1/2) (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2)) 1) (*.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 0 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 1/2 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x 1/2 (neg.f64 y))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (fma.f64 x 1/2 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (fma.f64 x 1/2 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (fma.f64 x 1/2 (neg.f64 y))) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (fma.f64 x 1/2 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (cbrt.f64 (fma.f64 x 1/2 (neg.f64 y)))) (cbrt.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2)) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (cbrt.f64 (fma.f64 x 1/2 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (*.f64 t t)) 0) (exp.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (*.f64 t t)) (*.f64 (exp.f64 (*.f64 t t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (*.f64 t t)) 1/2) (*.f64 (exp.f64 (*.f64 t t)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (*.f64 t t))) (exp.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (*.f64 t t)) (*.f64 0 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (exp.f64 (*.f64 t t))) (*.f64 1/2 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (*.f64 t t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (cbrt.f64 (pow.f64 (exp.f64 t) (*.f64 2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (*.f64 2 t))) (cbrt.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 t t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (*.f64 t t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 t) t)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 (*.f64 t t) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 t t))) (cbrt.f64 (pow.f64 t 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 t t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (pow.f64 t 4))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (exp.f64 (*.f64 (*.f64 t t) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 t t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 0 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 t t) 3) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (exp.f64 (*.f64 t t))) (*.f64 z (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 0) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 1/2) (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1) (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (*.f64 0 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 1/2 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 t t)) (+.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 z z)) (*.f64 (cbrt.f64 (*.f64 (*.f64 z z) 4)) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (*.f64 2 t))) (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (*.f64 2 t))) (+.f64 z z)) (cbrt.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 z z) 4)) (exp.f64 (*.f64 t t))) (cbrt.f64 (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1) (*.f64 (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 0) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2)) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (*.f64 t t)) 2) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (*.f64 t t)) (cbrt.f64 (+.f64 z z))) (cbrt.f64 (*.f64 (*.f64 z z) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 3/2)) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 z z) (cbrt.f64 (exp.f64 (*.f64 t t)))) (cbrt.f64 (pow.f64 (exp.f64 t) (*.f64 2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (sqrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 (exp.f64 (*.f64 t t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (*.f64 2 t))) (*.f64 (+.f64 z z) (cbrt.f64 (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 z z) 4)) (*.f64 (exp.f64 (*.f64 t t)) (cbrt.f64 (+.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (*.f64 t t)) z (*.f64 z (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (exp.f64 (*.f64 t t)) (*.f64 z (exp.f64 (*.f64 t t))))))))"]],"rules":[["egg-rr",60],["egg-rr",31],["egg-rr",37]],"time":36.1669921875,"type":"rewrite"},{"count":[[200,161]],"inputs":[["(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (*.f64 (-.f64 (*.f64 1/2 x) y) (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2))))))) (sqrt.f64 (/.f64 1 z)))))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","1","(+.f64 1 (pow.f64 t 2))","(+.f64 1 (+.f64 (pow.f64 t 2) (*.f64 1/2 (pow.f64 t 4))))","(+.f64 (*.f64 1/6 (pow.f64 t 6)) (+.f64 1 (+.f64 (pow.f64 t 2) (*.f64 1/2 (pow.f64 t 4)))))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 z)","(+.f64 (*.f64 2 z) (*.f64 2 (*.f64 (pow.f64 t 2) z)))","(+.f64 (*.f64 2 z) (+.f64 (*.f64 2 (*.f64 (pow.f64 t 2) z)) (*.f64 (pow.f64 t 4) z)))","(+.f64 (*.f64 2 z) (+.f64 (*.f64 2 (*.f64 (pow.f64 t 2) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 t 6) z)) (*.f64 (pow.f64 t 4) z))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 z))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (fma.f64 1/2 x (neg.f64 y)))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 z (neg.f64 (*.f64 1/4 z))) (*.f64 (pow.f64 t 4) (fma.f64 1/2 x (neg.f64 y))))) (pow.f64 z -1/2)) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (fma.f64 1/2 x (neg.f64 y))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (*.f64 (-.f64 (*.f64 1/2 x) y) (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2))))))) (sqrt.f64 (/.f64 1 z)))))))","(+.f64 (fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 z (neg.f64 (*.f64 1/4 z))) (*.f64 (pow.f64 t 4) (fma.f64 1/2 x (neg.f64 y))))) (pow.f64 z -1/2)) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (fma.f64 1/2 x (neg.f64 y)))))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (fma.f64 1/6 z (*.f64 -1/2 (fma.f64 1/2 z (neg.f64 (*.f64 1/4 z)))))))) (pow.f64 z -1/2))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","1","(+.f64 1 (pow.f64 t 2))","(fma.f64 t t 1)","(+.f64 1 (+.f64 (pow.f64 t 2) (*.f64 1/2 (pow.f64 t 4))))","(+.f64 1 (fma.f64 (pow.f64 t 4) 1/2 (*.f64 t t)))","(+.f64 (*.f64 1/6 (pow.f64 t 6)) (+.f64 1 (+.f64 (pow.f64 t 2) (*.f64 1/2 (pow.f64 t 4)))))","(+.f64 (fma.f64 (pow.f64 t 6) 1/6 1) (fma.f64 (pow.f64 t 4) 1/2 (*.f64 t t)))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 z)","(+.f64 (*.f64 2 z) (*.f64 2 (*.f64 (pow.f64 t 2) z)))","(*.f64 2 (*.f64 z (fma.f64 t t 1)))","(+.f64 (*.f64 2 z) (+.f64 (*.f64 2 (*.f64 (pow.f64 t 2) z)) (*.f64 (pow.f64 t 4) z)))","(fma.f64 2 (*.f64 z (fma.f64 t t 1)) (*.f64 (pow.f64 t 4) z))","(+.f64 (*.f64 2 z) (+.f64 (*.f64 2 (*.f64 (pow.f64 t 2) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 t 6) z)) (*.f64 (pow.f64 t 4) z))))","(fma.f64 2 (*.f64 z (fma.f64 t t 1)) (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 t 6)) (pow.f64 t 4))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))"]],"time":241.721923828125,"type":"simplify"},{"compiler":[[3703,1495]],"time":36.8740234375,"type":"eval"},{"alts":[["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 6)))","fresh",0.7680691039792407],["(*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (fma.f64 x 1/2 (neg.f64 y))))","fresh",0.46971383046286386],["(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","fresh",0.49550634768442026],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","next",0.2421875],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","fresh",0.44303384999974793],["(pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 3)","fresh",0.7727091309692392],["(*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))","fresh",31.149385517173034],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","fresh",0.6035414255331281]],"compiler":[[23,17],[30,16],[20,16],[21,14],[30,16],[22,16],[38,21],[31,15],[23,17],[30,16],[20,16],[21,14],[30,16],[22,16],[38,21],[31,15]],"count":[[162,8]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[161,8],"picked":[1,0]}],"min-error":[0.03125],"time":57.333984375,"type":"prune"},{"compiler":[[68,17]],"locations":[["(pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t))",0.00390625,true],["(*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))",0.01171875,true],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))",0.234375,true]],"time":13.26513671875,"type":"localize"},{"count":[[3,72]],"series":[["(pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t))","t","-inf",0.139892578125],["(pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t))","t","inf",0.14990234375],["(pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t))","t","0",0.152099609375],["(*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))","t","-inf",0.218017578125],["(*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))","t","inf",0.245849609375],["(*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))","t","0",0.179931640625],["(*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))","z","-inf",0.2509765625],["(*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))","z","inf",0.3779296875],["(*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))","z","0",22.56201171875],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","t","-inf",0.489990234375],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","t","inf",0.60693359375],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","t","0",0.77099609375],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","z","-inf",1.373779296875],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","z","inf",0.420166015625],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","z","0",0.504150390625],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","y","-inf",0.302001953125],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","y","inf",0.342041015625],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","y","0",1.361083984375],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","x","-inf",0.30712890625],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","x","inf",0.2978515625],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","x","0",4.464111328125]],"time":36.091064453125,"type":"series"},{"count":[[3,133]],"inputs":[["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","(*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))","(pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 1 (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2))) (*.f64 1 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 0) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1/2) (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1) (*.f64 (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2)) 1) (*.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 1/2 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 0 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (fma.f64 x 1/2 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x 1/2 (neg.f64 y))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (fma.f64 x 1/2 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (cbrt.f64 (fma.f64 x 1/2 (neg.f64 y)))) (cbrt.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (fma.f64 x 1/2 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (*.f64 t t)) z) (*.f64 (exp.f64 (*.f64 t t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (exp.f64 (*.f64 t t))) (*.f64 z (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 t t)) z)) (*.f64 1 (*.f64 (exp.f64 (*.f64 t t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 1 (*.f64 z (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 0) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 1/2) (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (exp.f64 (*.f64 t t)) z) 1) (*.f64 (*.f64 (exp.f64 (*.f64 t t)) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1) (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 1/2 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (*.f64 0 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 t t)) (+.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 z z)) (*.f64 (cbrt.f64 (*.f64 4 (*.f64 z z))) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (*.f64 t t)) 2)) (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 1 (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1) (*.f64 (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) -1) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) -1) (*.f64 (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 0) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (*.f64 t t)) (cbrt.f64 (+.f64 z z))) (cbrt.f64 (*.f64 4 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (*.f64 t t)) 2) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 z z) (cbrt.f64 (exp.f64 (*.f64 t t)))) (cbrt.f64 (pow.f64 (exp.f64 (*.f64 t t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 3/2)) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (sqrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (exp.f64 (*.f64 t t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 (exp.f64 (*.f64 t t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2)) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (*.f64 t t)) z (*.f64 (exp.f64 (*.f64 t t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (exp.f64 (*.f64 t t)) (*.f64 z (exp.f64 (*.f64 t t))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (*.f64 t t)) 0) (exp.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (*.f64 t t)) 1/2) (*.f64 (exp.f64 (*.f64 t t)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (*.f64 t t)) (*.f64 (exp.f64 (*.f64 t t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (*.f64 t t))) (exp.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (exp.f64 (*.f64 t t))) (*.f64 1/2 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (*.f64 t t)) (*.f64 0 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (cbrt.f64 (pow.f64 (exp.f64 (*.f64 t t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 (*.f64 t t)) 2)) (cbrt.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 t t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (*.f64 t t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 (neg.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 (*.f64 t t) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 t) t)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 t t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 t t))) (pow.f64 (cbrt.f64 t) 4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (neg.f64 t))) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 t) 4)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (exp.f64 (*.f64 t t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (exp.f64 (*.f64 (*.f64 t t) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 t t) 3) 1/3))))))"]],"rules":[["egg-rr",31],["egg-rr",63],["egg-rr",39]],"time":39.02294921875,"type":"rewrite"},{"count":[[205,166]],"inputs":[["(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (*.f64 (-.f64 (*.f64 1/2 x) y) (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2))))))) (sqrt.f64 (/.f64 1 z)))))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 z)","(+.f64 (*.f64 2 z) (*.f64 2 (*.f64 (pow.f64 t 2) z)))","(+.f64 (*.f64 2 z) (+.f64 (*.f64 2 (*.f64 (pow.f64 t 2) z)) (*.f64 (pow.f64 t 4) z)))","(+.f64 (*.f64 2 z) (+.f64 (*.f64 2 (*.f64 (pow.f64 t 2) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 t 6) z)) (*.f64 (pow.f64 t 4) z))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","1","(+.f64 1 (pow.f64 t 2))","(+.f64 1 (+.f64 (pow.f64 t 2) (*.f64 1/2 (pow.f64 t 4))))","(+.f64 (*.f64 1/6 (pow.f64 t 6)) (+.f64 1 (+.f64 (pow.f64 t 2) (*.f64 1/2 (pow.f64 t 4)))))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (neg.f64 (*.f64 (sqrt.f64 2) y))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 z))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (fma.f64 1/2 x (neg.f64 y)))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 z (neg.f64 (*.f64 1/4 z))) (*.f64 (pow.f64 t 4) (fma.f64 1/2 x (neg.f64 y))))) (pow.f64 z -1/2)) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (fma.f64 1/2 x (neg.f64 y))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (*.f64 (-.f64 (*.f64 1/2 x) y) (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2))))))) (sqrt.f64 (/.f64 1 z)))))))","(+.f64 (fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 z (neg.f64 (*.f64 1/4 z))) (*.f64 (pow.f64 t 4) (fma.f64 1/2 x (neg.f64 y))))) (pow.f64 z -1/2)) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (fma.f64 1/2 x (neg.f64 y)))))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (fma.f64 1/6 z (*.f64 -1/2 (fma.f64 1/2 z (neg.f64 (*.f64 1/4 z)))))))) (pow.f64 z -1/2))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 z)","(+.f64 (*.f64 2 z) (*.f64 2 (*.f64 (pow.f64 t 2) z)))","(*.f64 2 (*.f64 z (fma.f64 t t 1)))","(+.f64 (*.f64 2 z) (+.f64 (*.f64 2 (*.f64 (pow.f64 t 2) z)) (*.f64 (pow.f64 t 4) z)))","(fma.f64 2 (*.f64 z (fma.f64 t t 1)) (*.f64 (pow.f64 t 4) z))","(+.f64 (*.f64 2 z) (+.f64 (*.f64 2 (*.f64 (pow.f64 t 2) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 t 6) z)) (*.f64 (pow.f64 t 4) z))))","(fma.f64 2 (*.f64 z (fma.f64 t t 1)) (*.f64 z (+.f64 (pow.f64 t 4) (*.f64 1/3 (pow.f64 t 6)))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","1","(+.f64 1 (pow.f64 t 2))","(fma.f64 t t 1)","(+.f64 1 (+.f64 (pow.f64 t 2) (*.f64 1/2 (pow.f64 t 4))))","(+.f64 1 (fma.f64 (pow.f64 t 4) 1/2 (*.f64 t t)))","(+.f64 (*.f64 1/6 (pow.f64 t 6)) (+.f64 1 (+.f64 (pow.f64 t 2) (*.f64 1/2 (pow.f64 t 4)))))","(+.f64 (fma.f64 (pow.f64 t 6) 1/6 1) (fma.f64 (pow.f64 t 4) 1/2 (*.f64 t t)))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))"]],"time":239.766845703125,"type":"simplify"},{"compiler":[[3848,1526]],"time":38.7412109375,"type":"eval"},{"alts":[["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 6)))","fresh",0.7680691039792407],["(*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (fma.f64 x 1/2 (neg.f64 y))))","fresh",0.46971383046286386],["(*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))","fresh",31.149385517173034],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","done",0.2421875],["(pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 3)","fresh",0.7727091309692392],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","fresh",0.49550634768442026],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","next",0.44303384999974793],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","fresh",0.6035414255331281]],"compiler":[[23,17],[30,16],[38,21],[21,14],[22,16],[20,15],[30,16],[31,15],[23,17],[30,16],[38,21],[22,16],[20,15],[30,16],[31,15]],"count":[[174,8]],"kept":[{"done":[0,0],"fresh":[7,2],"new":[166,5],"picked":[1,1]}],"min-error":[0.03125],"time":63.7138671875,"type":"prune"},{"compiler":[[104,22]],"locations":[["(cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))",0.08984375,true],["(cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))",0.10546875,true],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))",0.2421875,true],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))",0.36947250976844204,true]],"time":16.6220703125,"type":"localize"},{"count":[[4,112]],"series":[["(cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))","t","-inf",0.17919921875],["(cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))","t","inf",1.24609375],["(cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))","t","0",1.091064453125],["(cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))","z","-inf",0.3779296875],["(cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))","z","inf",0.411865234375],["(cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))","z","0",0.526123046875],["(cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","t","-inf",0.215087890625],["(cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","t","inf",0.421875],["(cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","t","0",0.630859375],["(cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","z","-inf",0.452880859375],["(cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","z","inf",0.48193359375],["(cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","z","0",0.51318359375],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","t","-inf",0.259033203125],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","t","inf",10.501220703125],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","t","0",6.510009765625],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","z","-inf",2.0],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","z","inf",5.4541015625],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","z","0",10.97900390625],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","y","-inf",0.56396484375],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","y","inf",0.579833984375],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","y","0",2.281982421875],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","x","-inf",0.544921875],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","x","inf",0.52587890625],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","x","0",3.012939453125],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","t","-inf",0.2509765625],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","t","inf",2.426025390625],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","t","0",9.674072265625],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","z","-inf",1.581787109375],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","z","inf",0.66796875],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","z","0",8.924072265625],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","y","-inf",0.733154296875],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","y","inf",0.694091796875],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","y","0",10.251953125],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","x","-inf",0.654052734375],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","x","inf",0.7119140625],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","x","0",27.259033203125]],"time":114.779052734375,"type":"series"},{"count":[[4,161]],"inputs":[["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","(cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","(cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1/2) (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 0) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 x 1/2))) (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 (*.f64 x 1/2) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 (neg.f64 y) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 0 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 1/2 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 x 1/2)) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 y)) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (*.f64 (neg.f64 y) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2)) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2/3) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2/3) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (fma.f64 x 1/2 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (+.f64 z z))) (cbrt.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2/3) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (fma.f64 x 1/2 (neg.f64 y))) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2/3)) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 z z)) (*.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x 1/2 (neg.f64 y))) (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2/3) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 1/2) (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 0) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 x 1/2)) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 x 1/2))) (*.f64 1 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 x 1/2) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (*.f64 1 (*.f64 (neg.f64 y) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 0 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (*.f64 1/2 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 y) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 x 1/2)) 1) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 1) (*.f64 (*.f64 (neg.f64 y) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 y)) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 y) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 x 1/2) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (fma.f64 x 1/2 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x 1/2 (neg.f64 y))) (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2/3) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2/3) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (fma.f64 x 1/2 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2/3) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 x 1/2) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 1/2) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1/2) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 0) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 0 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 1/2 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (cbrt.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (+.f64 z z)))) (cbrt.f64 (cbrt.f64 (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) -1) (*.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 1) (*.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (*.f64 -1 (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (+.f64 3 2))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 2 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2) (/.f64 1/6 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2) (*.f64 1/2 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 1/2) (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 0) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 0 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 1/2 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (+.f64 1/3 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 z z)) (cbrt.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (cbrt.f64 (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) -1) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 z z) (cbrt.f64 (exp.f64 (*.f64 t t))))) (cbrt.f64 (pow.f64 (exp.f64 (*.f64 t t)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (*.f64 t t)))) (cbrt.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 t t)) 2/3) (+.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2/3)) (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 z z))) (cbrt.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 z z))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 z z) 2/3) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (exp.f64 (*.f64 t t)) 2)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 2) (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (exp.f64 (*.f64 t t)) (cbrt.f64 (+.f64 z z)))) (cbrt.f64 (pow.f64 (+.f64 z z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (*.f64 2 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (/.f64 2/3 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) 2) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 2 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 2/3 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (*.f64 1/2 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (*.f64 1/6 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (cbrt.f64 (neg.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))"]],"rules":[["egg-rr",47],["egg-rr",35],["egg-rr",37],["egg-rr",42]],"time":48.497802734375,"type":"rewrite"},{"count":[[273,221]],"inputs":[["(*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))) (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z)))) (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 6) (*.f64 (-.f64 (*.f64 1/2 x) y) (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2))))))) (sqrt.f64 (/.f64 1 z))))) (+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z)))) (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z))))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(*.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 z 1/6))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y)) (pow.f64 z 1/6))))) (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 z 1/6)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y)) (pow.f64 z 1/6))))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)) (pow.f64 z 1/6))))) (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 z 1/6))))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y)) (pow.f64 z 1/6))))) (+.f64 (*.f64 1/1296 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y)) (pow.f64 z 1/6))))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)) (pow.f64 z 1/6))))) (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 z 1/6)))))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 z 1/6)))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 t 2) (pow.f64 z 1/6))))) (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 z 1/6))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 t 2) (pow.f64 z 1/6))))) (+.f64 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 z 1/6))) (*.f64 1/72 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 t 4) (pow.f64 z 1/6)))))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 t 2) (pow.f64 z 1/6))))) (+.f64 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 z 1/6))) (+.f64 (*.f64 1/1296 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 t 6) (pow.f64 z 1/6))))) (*.f64 1/72 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 t 4) (pow.f64 z 1/6))))))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (pow.f64 (*.f64 1 z) 1/3) (cbrt.f64 2))","(+.f64 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (cbrt.f64 2)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (*.f64 (cbrt.f64 2) (pow.f64 t 2)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 z) (*.f64 1/3 z)) (*.f64 (cbrt.f64 2) (pow.f64 t 4))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (cbrt.f64 2)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (*.f64 (cbrt.f64 2) (pow.f64 t 2))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 z) (*.f64 1/3 z)) (*.f64 (cbrt.f64 2) (pow.f64 t 4))))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 1/6 z) (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/2 z) (*.f64 1/3 z))) (*.f64 1/27 z))) (*.f64 (cbrt.f64 2) (pow.f64 t 6))) (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (cbrt.f64 2)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (*.f64 (cbrt.f64 2) (pow.f64 t 2)))))))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (*.f64 1/2 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (*.f64 1/2 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (*.f64 1/2 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 y (cbrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (cbrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 z))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))) (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z)))))","(fma.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (cbrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 z))) (*.f64 (*.f64 1/2 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (cbrt.f64 2) (*.f64 (*.f64 t t) (fma.f64 1/2 x (neg.f64 y)))) (sqrt.f64 z))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z)))) (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))))))","(fma.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (cbrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 z))) (*.f64 (*.f64 1/2 (cbrt.f64 (sqrt.f64 2))) (+.f64 (*.f64 (*.f64 (fma.f64 1/2 z (neg.f64 (*.f64 1/4 z))) (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 4) (fma.f64 1/2 x (neg.f64 y))))) (pow.f64 z -1/2)) (*.f64 (*.f64 (cbrt.f64 2) (*.f64 (*.f64 t t) (fma.f64 1/2 x (neg.f64 y)))) (sqrt.f64 z)))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 6) (*.f64 (-.f64 (*.f64 1/2 x) y) (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2))))))) (sqrt.f64 (/.f64 1 z))))) (+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z)))) (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z))))))))","(fma.f64 1/2 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) (pow.f64 t 6)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (fma.f64 1/6 z (*.f64 -1/2 (fma.f64 1/2 z (neg.f64 (*.f64 1/4 z)))))))) (pow.f64 z -1/2)) (fma.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (cbrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 z))) (*.f64 (*.f64 1/2 (cbrt.f64 (sqrt.f64 2))) (+.f64 (*.f64 (*.f64 (fma.f64 1/2 z (neg.f64 (*.f64 1/4 z))) (*.f64 (cbrt.f64 2) (*.f64 (pow.f64 t 4) (fma.f64 1/2 x (neg.f64 y))))) (pow.f64 z -1/2)) (*.f64 (*.f64 (cbrt.f64 2) (*.f64 (*.f64 t t) (fma.f64 1/2 x (neg.f64 y)))) (sqrt.f64 z))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (*.f64 (cbrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))))","(*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x))))","(*.f64 (*.f64 1/2 (cbrt.f64 (sqrt.f64 2))) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x))))","(*.f64 (*.f64 1/2 (cbrt.f64 (sqrt.f64 2))) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x))))","(*.f64 (*.f64 1/2 (cbrt.f64 (sqrt.f64 2))) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))))","(*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))))","(*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6) x)))) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6) x)) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 2))) (*.f64 y (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))))","(*.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))) (fma.f64 1/2 x (neg.f64 y))) (cbrt.f64 (sqrt.f64 2)))","(*.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))) (fma.f64 1/2 x (neg.f64 y))) (cbrt.f64 (sqrt.f64 2)))","(*.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))) (fma.f64 1/2 x (neg.f64 y))) (cbrt.f64 (sqrt.f64 2)))","(*.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))) (fma.f64 1/2 x (neg.f64 y))) (cbrt.f64 (sqrt.f64 2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)))","(*.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))) (fma.f64 1/2 x (neg.f64 y))) (cbrt.f64 (sqrt.f64 2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)))","(*.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))) (fma.f64 1/2 x (neg.f64 y))) (cbrt.f64 (sqrt.f64 2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)))","(*.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))) (fma.f64 1/2 x (neg.f64 y))) (cbrt.f64 (sqrt.f64 2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))) (-.f64 (*.f64 1/2 x) y)))","(*.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))) (fma.f64 1/2 x (neg.f64 y))) (cbrt.f64 (sqrt.f64 2)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 z 1/6))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 z 1/6)))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y)) (pow.f64 z 1/6))))) (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 z 1/6)))))","(fma.f64 (*.f64 1/6 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 t t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 z 1/6))) (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 z 1/6))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y)) (pow.f64 z 1/6))))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)) (pow.f64 z 1/6))))) (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 z 1/6))))))","(fma.f64 (*.f64 1/6 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 t t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 z 1/6))) (fma.f64 1/72 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (pow.f64 t 4) (fma.f64 1/2 x (neg.f64 y))) (pow.f64 z 1/6))) (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 z 1/6)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y)) (pow.f64 z 1/6))))) (+.f64 (*.f64 1/1296 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y)) (pow.f64 z 1/6))))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)) (pow.f64 z 1/6))))) (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 z 1/6)))))))","(fma.f64 1/6 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 t t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 z 1/6)))) (fma.f64 (*.f64 1/1296 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 (pow.f64 t 6) (fma.f64 1/2 x (neg.f64 y))) (pow.f64 z 1/6)) (fma.f64 1/72 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (pow.f64 t 4) (fma.f64 1/2 x (neg.f64 y))) (pow.f64 z 1/6))) (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 z 1/6))))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6)))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6)))","(*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))))","(*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))))","(*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))))","(*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 z) (pow.f64 t 2)))) (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 2) 1) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (pow.f64 t 2)))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (exp.f64 1/6) (fma.f64 t t (log.f64 z))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 z 1/6)))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 z 1/6))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 t 2) (pow.f64 z 1/6))))) (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 z 1/6))))","(fma.f64 (*.f64 1/6 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 t t) (pow.f64 z 1/6)) (*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 z 1/6)))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 t 2) (pow.f64 z 1/6))))) (+.f64 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 z 1/6))) (*.f64 1/72 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 t 4) (pow.f64 z 1/6)))))))","(fma.f64 (*.f64 1/6 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 t t) (pow.f64 z 1/6)) (fma.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 z 1/6) (*.f64 (*.f64 1/72 (cbrt.f64 (sqrt.f64 2))) (*.f64 (pow.f64 t 4) (pow.f64 z 1/6)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 t 2) (pow.f64 z 1/6))))) (+.f64 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 z 1/6))) (+.f64 (*.f64 1/1296 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 t 6) (pow.f64 z 1/6))))) (*.f64 1/72 (*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (*.f64 (pow.f64 t 4) (pow.f64 z 1/6))))))))","(fma.f64 (*.f64 1/6 (cbrt.f64 (sqrt.f64 2))) (*.f64 (*.f64 t t) (pow.f64 z 1/6)) (fma.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 z 1/6) (fma.f64 1/1296 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (pow.f64 t 6) (pow.f64 z 1/6))) (*.f64 (*.f64 1/72 (cbrt.f64 (sqrt.f64 2))) (*.f64 (pow.f64 t 4) (pow.f64 z 1/6))))))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))","(*.f64 (pow.f64 (sqrt.f64 2) 1/3) (*.f64 (sqrt.f64 1) (pow.f64 (*.f64 z (exp.f64 (pow.f64 t 2))) 1/6)))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/6))","(*.f64 (pow.f64 (*.f64 1 z) 1/3) (cbrt.f64 2))","(*.f64 (cbrt.f64 z) (cbrt.f64 2))","(+.f64 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (cbrt.f64 2)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (*.f64 (cbrt.f64 2) (pow.f64 t 2)))))","(fma.f64 (*.f64 1/3 (cbrt.f64 z)) (*.f64 (cbrt.f64 2) (*.f64 t t)) (*.f64 (cbrt.f64 z) (cbrt.f64 2)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 z) (*.f64 1/3 z)) (*.f64 (cbrt.f64 2) (pow.f64 t 4))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (cbrt.f64 2)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (*.f64 (cbrt.f64 2) (pow.f64 t 2))))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 z -2)) (*.f64 (*.f64 z 1/6) (*.f64 (cbrt.f64 2) (pow.f64 t 4)))) (fma.f64 (*.f64 1/3 (cbrt.f64 z)) (*.f64 (cbrt.f64 2) (*.f64 t t)) (*.f64 (cbrt.f64 z) (cbrt.f64 2))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 z) (*.f64 1/3 z)) (*.f64 (cbrt.f64 2) (pow.f64 t 4))))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 1/6 z) (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/2 z) (*.f64 1/3 z))) (*.f64 1/27 z))) (*.f64 (cbrt.f64 2) (pow.f64 t 6))) (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (cbrt.f64 2)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (*.f64 (cbrt.f64 2) (pow.f64 t 2)))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (cbrt.f64 (pow.f64 z -2)) (*.f64 (*.f64 z 1/6) (*.f64 (cbrt.f64 2) (pow.f64 t 4)))) (*.f64 (*.f64 (-.f64 (*.f64 (*.f64 z 1/6) (-.f64 1 2/3)) (*.f64 1/27 z)) (*.f64 (cbrt.f64 2) (pow.f64 t 6))) (cbrt.f64 (pow.f64 z -2))))) (fma.f64 (*.f64 1/3 (cbrt.f64 z)) (*.f64 (cbrt.f64 2) (*.f64 t t)) (*.f64 (cbrt.f64 z) (cbrt.f64 2))))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (cbrt.f64 2))","(*.f64 (pow.f64 (*.f64 1 (*.f64 z (exp.f64 (pow.f64 t 2)))) 1/3) (cbrt.f64 2))","(*.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (cbrt.f64 2))"]],"time":374.133056640625,"type":"simplify"},{"compiler":[[7826,2825]],"time":58.634033203125,"type":"eval"},{"alts":[["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","next",0.49550634768442026],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) 3) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","fresh",0.8963179442105468],["(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","fresh",0.5111313476844203],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","done",0.44303384999974793],["(*.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","fresh",0.5847626953688405],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (cbrt.f64 2)))","fresh",0.5319201293050739],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","done",0.2421875]],"compiler":[[20,15],[33,19],[24,19],[30,16],[42,19],[31,20],[21,14],[20,15],[33,19],[24,19],[42,19],[31,20]],"count":[[229,7]],"kept":[{"done":[1,1],"fresh":[6,1],"new":[221,4],"picked":[1,1]}],"min-error":[0.00390625],"time":73.47900390625,"type":"prune"},{"compiler":[[63,26]],"locations":[["(*.f64 z (exp.f64 (*.f64 t t)))",0.01171875,true],["(exp.f64 (*.f64 t t))",0.016288769536884032,false],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))",0.3717575195368841,true],["(*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))",0.4140625,true]],"time":13.074951171875,"type":"localize"},{"count":[[3,84]],"series":[["(*.f64 z (exp.f64 (*.f64 t t)))","t","-inf",0.14697265625],["(*.f64 z (exp.f64 (*.f64 t t)))","t","inf",0.14990234375],["(*.f64 z (exp.f64 (*.f64 t t)))","t","0",0.23681640625],["(*.f64 z (exp.f64 (*.f64 t t)))","z","-inf",0.259033203125],["(*.f64 z (exp.f64 (*.f64 t t)))","z","inf",0.1669921875],["(*.f64 z (exp.f64 (*.f64 t t)))","z","0",0.14697265625],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","t","-inf",0.2109375],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","t","inf",0.446044921875],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","t","0",0.30712890625],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","z","-inf",0.73388671875],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","z","inf",0.31298828125],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","z","0",0.35009765625],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","y","-inf",0.31494140625],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","y","inf",0.2509765625],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","y","0",0.27001953125],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","x","-inf",0.258056640625],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","x","inf",0.281982421875],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","x","0",0.26416015625],["(*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))","y","-inf",0.300048828125],["(*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))","y","inf",0.2509765625],["(*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))","y","0",0.2880859375],["(*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))","x","-inf",0.326904296875],["(*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))","x","inf",0.333984375],["(*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))","x","0",0.379150390625]],"time":7.385986328125,"type":"series"},{"count":[[3,133]],"inputs":[["(*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 z (exp.f64 (*.f64 t t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 x)) (*.f64 (sqrt.f64 2) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) 1/2) (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) 0) (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 1/2 x) (sqrt.f64 2))) (*.f64 1 (*.f64 (neg.f64 y) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (sqrt.f64 2) (*.f64 1/2 x))) (*.f64 1 (*.f64 (sqrt.f64 2) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 x) (sqrt.f64 2)) (*.f64 (neg.f64 y) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (*.f64 0 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))) (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 1/2 x) (sqrt.f64 2)) 1) (*.f64 (*.f64 (neg.f64 y) (sqrt.f64 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 x)) 1) (*.f64 (*.f64 (sqrt.f64 2) (neg.f64 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 y) (sqrt.f64 2)) (*.f64 (*.f64 1/2 x) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 2) (neg.f64 y)) (*.f64 (sqrt.f64 2) (*.f64 1/2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (cbrt.f64 2) (fma.f64 1/2 x (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/2 x (neg.f64 y))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 1/2 x (neg.f64 y)) 2)) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))) (cbrt.f64 (*.f64 2 (pow.f64 (fma.f64 1/2 x (neg.f64 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 2 (pow.f64 (fma.f64 1/2 x (neg.f64 y)) 2))) (cbrt.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 8) (fma.f64 1/2 x (neg.f64 y)))) (cbrt.f64 (pow.f64 (fma.f64 1/2 x (neg.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 (sqrt.f64 (sqrt.f64 2)) (fma.f64 1/2 x (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 2) (*.f64 1/2 x) (*.f64 (sqrt.f64 2) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 x) (sqrt.f64 2) (*.f64 (neg.f64 y) (sqrt.f64 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (*.f64 1/2 x)) (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))) (*.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))) 1/2) (*.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))) 0) (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (*.f64 1/2 x) (sqrt.f64 2))) (*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (neg.f64 y) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (*.f64 1/2 x))) (*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 x) (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))) (*.f64 0 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y)))) (*.f64 1/2 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y)))) (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 1/2 x) (sqrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) (*.f64 (*.f64 (neg.f64 y) (sqrt.f64 2)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) (*.f64 (*.f64 (sqrt.f64 2) (neg.f64 y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (neg.f64 y)) (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (*.f64 1/2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2))) (*.f64 (*.f64 1/2 x) (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (cbrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))) (*.f64 (cbrt.f64 (*.f64 2 (pow.f64 (fma.f64 1/2 x (neg.f64 y)) 2))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) (*.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 (*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y)))) (cbrt.f64 (*.f64 (*.f64 2 (pow.f64 (fma.f64 1/2 x (neg.f64 y)) 2)) (*.f64 z (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 2 (pow.f64 (fma.f64 1/2 x (neg.f64 y)) 2)) (*.f64 z (exp.f64 (*.f64 t t))))) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (cbrt.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))))) (cbrt.f64 (*.f64 2 (pow.f64 (fma.f64 1/2 x (neg.f64 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (cbrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (fma.f64 1/2 x (neg.f64 y))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (exp.f64 (*.f64 t t))) (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/2) (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) 0) (*.f64 z (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (exp.f64 (*.f64 t t))) (*.f64 0 (*.f64 z (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 1/2 (*.f64 z (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 z (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (exp.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 t t)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (exp.f64 (*.f64 t t)))) (cbrt.f64 (pow.f64 (exp.f64 t) (*.f64 2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (*.f64 2 t))) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) (neg.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 z (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 1 (neg.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) 1) (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) -1) (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) -1) (*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))) (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (exp.f64 (*.f64 t t))) (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 0) (*.f64 z (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (*.f64 t t)) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)) (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (cbrt.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 3/2)) (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) (sqrt.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 z (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 z (exp.f64 (*.f64 t t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (exp.f64 (*.f64 t t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (*.f64 z (exp.f64 (*.f64 t t))))))))"]],"rules":[["egg-rr",51],["egg-rr",43],["egg-rr",39]],"time":33.925048828125,"type":"rewrite"},{"count":[[217,161]],"inputs":[["(*.f64 -1 (*.f64 (sqrt.f64 2) y))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) x))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) x))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) x))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 -1 (*.f64 (sqrt.f64 2) y))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 -1 (*.f64 (sqrt.f64 2) y))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (*.f64 (-.f64 (*.f64 1/2 x) y) (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2))))))) (sqrt.f64 (/.f64 1 z)))))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","z","(+.f64 z (*.f64 (pow.f64 t 2) z))","(+.f64 z (+.f64 (*.f64 (pow.f64 t 2) z) (*.f64 1/2 (*.f64 (pow.f64 t 4) z))))","(+.f64 z (+.f64 (*.f64 (pow.f64 t 2) z) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 t 6) z)) (*.f64 1/2 (*.f64 (pow.f64 t 4) z)))))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (pow.f64 t 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (sqrt.f64 2) y))","(*.f64 (sqrt.f64 2) (neg.f64 y))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) x))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) x))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) x))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 -1 (*.f64 (sqrt.f64 2) y))","(*.f64 (sqrt.f64 2) (neg.f64 y))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 -1 (*.f64 (sqrt.f64 2) y))","(*.f64 (sqrt.f64 2) (neg.f64 y))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 (sqrt.f64 2) (neg.f64 y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 (sqrt.f64 2) (neg.f64 y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 (sqrt.f64 2) (neg.f64 y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (fma.f64 (neg.f64 (sqrt.f64 2)) y (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 z))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (fma.f64 1/2 x (neg.f64 y))))) (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (fma.f64 1/2 z (neg.f64 (*.f64 1/4 z))) (*.f64 (pow.f64 t 4) (fma.f64 1/2 x (neg.f64 y)))) (pow.f64 z -1/2))) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (fma.f64 1/2 x (neg.f64 y))))) (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (*.f64 (-.f64 (*.f64 1/2 x) y) (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2))))))) (sqrt.f64 (/.f64 1 z)))))))","(+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (fma.f64 1/2 z (neg.f64 (*.f64 1/4 z))) (*.f64 (pow.f64 t 4) (fma.f64 1/2 x (neg.f64 y)))) (pow.f64 z -1/2))) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (fma.f64 1/2 x (neg.f64 y))))) (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))))) (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 t 6) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (fma.f64 1/6 z (*.f64 -1/2 (fma.f64 1/2 z (neg.f64 (*.f64 1/4 z))))))) (pow.f64 z -1/2))) 2))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","z","(+.f64 z (*.f64 (pow.f64 t 2) z))","(fma.f64 (*.f64 t t) z z)","(+.f64 z (+.f64 (*.f64 (pow.f64 t 2) z) (*.f64 1/2 (*.f64 (pow.f64 t 4) z))))","(*.f64 z (+.f64 (fma.f64 t t 1) (*.f64 1/2 (pow.f64 t 4))))","(+.f64 z (+.f64 (*.f64 (pow.f64 t 2) z) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 t 6) z)) (*.f64 1/2 (*.f64 (pow.f64 t 4) z)))))","(fma.f64 (fma.f64 t t 1) z (*.f64 z (+.f64 (*.f64 1/2 (pow.f64 t 4)) (*.f64 1/6 (pow.f64 t 6)))))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))","(*.f64 z (exp.f64 (pow.f64 t 2)))","(*.f64 z (exp.f64 (*.f64 t t)))"]],"time":247.93310546875,"type":"simplify"},{"compiler":[[4602,2359]],"time":47.98681640625,"type":"eval"},{"alts":[["(*.f64 (*.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 (sqrt.f64 (sqrt.f64 2)) (fma.f64 1/2 x (neg.f64 y)))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","fresh",0.5664826172213042],["(*.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","fresh",0.5680151071540338],["(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","done",0.49550634768442026],["(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","fresh",0.5111313476844203],["(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","done",0.44303384999974793],["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","done",0.2421875]],"compiler":[[25,20],[25,20],[20,15],[24,19],[30,16],[21,14]],"count":[[207,6]],"kept":[{"done":[2,2],"fresh":[4,1],"new":[200,2],"picked":[1,1]}],"min-error":[0.00390625],"time":66.0361328125,"type":"prune"},{"accuracy":[0.2421875],"baseline":[0.2421875],"branch":[["x",0.2421875,1],["y",0.2421875,1],["z",0.2421875,1],["t",0.2421875,1],["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))",0.2421875,1],["(*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2)))",0.2421875,1],["(-.f64 (*.f64 x 1/2) y)",0.2421875,1],["(*.f64 x 1/2)",0.2421875,1],["(sqrt.f64 (*.f64 z 2))",0.2421875,1],["(*.f64 z 2)",0.2421875,1],["(exp.f64 (/.f64 (*.f64 t t) 2))",0.2421875,1],["(/.f64 (*.f64 t t) 2)",0.2421875,1],["(*.f64 t t)",0.2421875,1],["(*.f64 t t)",0.2421875,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[21,16],[14,11],[9,7],[7,6],[8,7],[7,6],[10,8],[9,7],[7,5],[7,5],[496,169]],"count":[[21,1]],"inputs":[["(*.f64 (*.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 (sqrt.f64 (sqrt.f64 2)) (fma.f64 1/2 x (neg.f64 y)))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) 3) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","(*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (*.f64 (cbrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (cbrt.f64 2)))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))","(pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 3)","(*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 6)))","(*.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (fma.f64 x 1/2 (neg.f64 y))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))","(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","(pow.f64 (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 3)","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 1/2 (neg.f64 y)) 2) (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (cbrt.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))","(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))"]],"link":["."],"name":["Data.Number.Erf:$cinvnormcdf from erf-2.0.0.0, A"],"oracle":[31.608279828604903],"outputs":[["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))"]],"time":104.245849609375,"times":[["x",7.65283203125],["y",7.927978515625],["z",7.5478515625],["t",7.890869140625],["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))",7.93017578125],["(*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2)))",7.91796875],["(-.f64 (*.f64 x 1/2) y)",7.3759765625],["(*.f64 x 1/2)",7.75],["(sqrt.f64 (*.f64 z 2))",7.701904296875],["(*.f64 z 2)",7.89697265625],["(exp.f64 (/.f64 (*.f64 t t) 2))",2.697021484375],["(/.f64 (*.f64 t t) 2)",4.06298828125],["(*.f64 t t)",3.69482421875],["(*.f64 t t)",5.072998046875]],"type":"regimes"},{"compiler":[[21,14]],"inputs":[["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (pow.f64 (exp.f64 (neg.f64 t)) (neg.f64 t)))))","(*.f64 (fma.f64 x 1/2 (neg.f64 y)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))"]],"stop":[["fuel",1]],"time":22.3671875,"type":"simplify"},{"time":0.02197265625,"type":"soundness"},{"compiler":[[21,14]],"remove-preprocessing":[[]],"time":12.494873046875,"type":"end"}]