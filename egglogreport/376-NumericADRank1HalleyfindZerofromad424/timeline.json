[{"compiler":[[22,15]],"method":["search"],"sampling":[[12,0.2046778750582351,0.7933704299876351,0.0019516949541298345],[11,0.058479392873781455,0.9395689121720887,0.0019516949541298345],[10,0.0,0.9980483050458702,0.0019516949541298345],[9,0.0,0.9980483050458702,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":191.02197265625,"type":"analyze"},{"outcomes":[["body",256,"valid",462.424072265625,8256]],"time":470.036865234375,"type":"sample"},{"compiler":[[21,14]],"inputs":[["0","1","2","3"],["(-.f64 x (/.f64 (*.f64 (*.f64 y 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 y t))))","(-.f64 y (/.f64 (*.f64 (*.f64 x 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 x t))))","(-.f64 z (/.f64 (*.f64 (*.f64 y 2) x) (-.f64 (*.f64 (*.f64 x 2) x) (*.f64 y t))))","(-.f64 t (/.f64 (*.f64 (*.f64 y 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 y x))))","(-.f64 x (/.f64 (*.f64 (*.f64 z 2) y) (-.f64 (*.f64 (*.f64 y 2) y) (*.f64 z t))))","(-.f64 x (/.f64 (*.f64 (*.f64 t 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 t y))))","(-.f64 x (/.f64 (*.f64 (*.f64 y 2) t) (-.f64 (*.f64 (*.f64 t 2) t) (*.f64 y z))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(-.f64 x (/.f64 (*.f64 (*.f64 y 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 y t))))","(-.f64 x (/.f64 (*.f64 (*.f64 y 2) z) (fma.f64 (*.f64 z 2) z (neg.f64 (*.f64 y t)))))","(-.f64 y (/.f64 (*.f64 (*.f64 x 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 x t))))","(-.f64 y (/.f64 (*.f64 (*.f64 x 2) z) (fma.f64 (*.f64 z 2) z (neg.f64 (*.f64 x t)))))","(-.f64 z (/.f64 (*.f64 (*.f64 y 2) x) (-.f64 (*.f64 (*.f64 x 2) x) (*.f64 y t))))","(-.f64 z (/.f64 (*.f64 (*.f64 y 2) x) (fma.f64 (*.f64 x 2) x (neg.f64 (*.f64 y t)))))","(-.f64 t (/.f64 (*.f64 (*.f64 y 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 y x))))","(-.f64 t (/.f64 (*.f64 (*.f64 y 2) z) (fma.f64 (*.f64 z 2) z (neg.f64 (*.f64 y x)))))","(-.f64 x (/.f64 (*.f64 (*.f64 z 2) y) (-.f64 (*.f64 (*.f64 y 2) y) (*.f64 z t))))","(-.f64 x (/.f64 (*.f64 (*.f64 y 2) z) (fma.f64 (*.f64 y 2) y (neg.f64 (*.f64 z t)))))","(-.f64 x (/.f64 (*.f64 (*.f64 t 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 t y))))","(-.f64 x (/.f64 (*.f64 (*.f64 t 2) z) (fma.f64 (*.f64 z 2) z (neg.f64 (*.f64 y t)))))","(-.f64 x (/.f64 (*.f64 (*.f64 y 2) t) (-.f64 (*.f64 (*.f64 t 2) t) (*.f64 y z))))","(-.f64 x (/.f64 (*.f64 (*.f64 y 2) t) (fma.f64 (*.f64 t 2) t (neg.f64 (*.f64 y z)))))"]],"symmetry":[[]],"time":73.0,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(-.f64 x (/.f64 (*.f64 (*.f64 y 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 y t))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 x (/.f64 (*.f64 (*.f64 y 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 y t))))","(+.f64 x (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))"]],"time":20.5771484375,"type":"simplify"},{"compiler":[[37,22]],"time":0.44482421875,"type":"eval"},{"alts":[["(+.f64 x (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))","next",15.935433491700545]],"compiler":[[20,12],[20,12]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[15.935433491700545],"time":0.9501953125,"type":"prune"},{"compiler":[[63,27]],"locations":[["(*.f64 (+.f64 y y) z)",0.23284457071281367,true],["(fma.f64 t y (*.f64 z (*.f64 -2 z)))",0.49999449521112044,true],["(/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))",22.36029545627462,true]],"time":12.891845703125,"type":"localize"},{"count":[[3,96]],"series":[["(*.f64 (+.f64 y y) z)","z","-inf",0.255126953125],["(*.f64 (+.f64 y y) z)","z","inf",0.406005859375],["(*.f64 (+.f64 y y) z)","z","0",0.385009765625],["(*.f64 (+.f64 y y) z)","y","-inf",1.719970703125],["(*.f64 (+.f64 y y) z)","y","inf",0.384033203125],["(*.f64 (+.f64 y y) z)","y","0",0.418212890625],["(fma.f64 t y (*.f64 z (*.f64 -2 z)))","z","-inf",0.19189453125],["(fma.f64 t y (*.f64 z (*.f64 -2 z)))","z","inf",0.251953125],["(fma.f64 t y (*.f64 z (*.f64 -2 z)))","z","0",0.26904296875],["(fma.f64 t y (*.f64 z (*.f64 -2 z)))","y","-inf",0.253173828125],["(fma.f64 t y (*.f64 z (*.f64 -2 z)))","y","inf",0.261962890625],["(fma.f64 t y (*.f64 z (*.f64 -2 z)))","y","0",0.279052734375],["(fma.f64 t y (*.f64 z (*.f64 -2 z)))","t","-inf",0.267822265625],["(fma.f64 t y (*.f64 z (*.f64 -2 z)))","t","inf",0.275146484375],["(fma.f64 t y (*.f64 z (*.f64 -2 z)))","t","0",0.34619140625],["(/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","t","-inf",0.39013671875],["(/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","t","inf",0.40087890625],["(/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","t","0",0.4150390625],["(/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","z","-inf",0.48388671875],["(/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","z","inf",0.593994140625],["(/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","z","0",0.501953125],["(/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","y","-inf",0.4990234375],["(/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","y","inf",0.594970703125],["(/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","y","0",0.76123046875]],"time":10.93212890625,"type":"series"},{"count":[[3,147]],"inputs":[["(/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","(fma.f64 t y (*.f64 z (*.f64 -2 z)))","(*.f64 (+.f64 y y) z)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 0) (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) (*.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 t y (*.f64 z (*.f64 -2 z)))) (*.f64 y z)) (*.f64 (/.f64 1 (fma.f64 t y (*.f64 z (*.f64 -2 z)))) (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) (*.f64 0 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y z) (/.f64 1 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (*.f64 (*.f64 y z) (/.f64 1 (fma.f64 t y (*.f64 z (*.f64 -2 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))) (/.f64 (*.f64 -2 (*.f64 y z)) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 -2 (*.f64 y z)) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 y y) (/.f64 z (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -2 (*.f64 y z)) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 2)) (cbrt.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (*.f64 y z)) (/.f64 -1 (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 y y) z)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 y y) z) 2)) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (/.f64 (+.f64 y y) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (/.f64 z (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 y y) z) (/.f64 1 (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 t y (*.f64 z (*.f64 -2 z)))) (*.f64 (+.f64 y y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) (neg.f64 1/3)) (/.f64 (*.f64 (+.f64 y y) z) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (fma.f64 t y (*.f64 z (*.f64 -2 z)))) (+.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 y y) z) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2))) (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 (*.f64 y z)) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2))) (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 y y) z) 2)) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) (cbrt.f64 (*.f64 (+.f64 y y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2))) (/.f64 z (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 t y (*.f64 z (*.f64 -2 z)))) (*.f64 -2 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 y y) z) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (pow.f64 (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 y y) z) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (*.f64 y z)) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 y y) z) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 y y) z) 2))) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) z) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) (neg.f64 1/3)) (*.f64 (+.f64 y y) z)) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (+.f64 y y)) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 2)) (cbrt.f64 (*.f64 (+.f64 y y) z))) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 2)) (cbrt.f64 (*.f64 -2 (*.f64 y z)))) (cbrt.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 y y) z) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2))) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (+.f64 y y) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2)))) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (+.f64 y y) z) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) 1) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 y y) (/.f64 z (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2)))) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 y y) z)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 2))) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -2 (*.f64 y z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 2))) (cbrt.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 y y) z) -1) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 y y) z) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) 1) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 (*.f64 y z)) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (+.f64 y y) z) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z)))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -2 (*.f64 y z)) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 -2 (*.f64 y z)) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t y) (*.f64 z (*.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (*.f64 -2 z)) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 0) (fma.f64 t y (*.f64 z (*.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) (*.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (neg.f64 (*.f64 t y))) (*.f64 z (*.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 t y (*.f64 z (*.f64 -2 z)))) (fma.f64 t y (*.f64 z (*.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) (*.f64 0 (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 t y)) -1) (*.f64 z (*.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 t y (*.f64 z (*.f64 -2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z)))) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 2)) (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 z (*.f64 -2 z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t y (*.f64 z (*.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z (*.f64 -2 z))) (cbrt.f64 (pow.f64 (*.f64 z (*.f64 -2 z)) 2)) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -2 z)) (*.f64 (cbrt.f64 (*.f64 4 (*.f64 z z))) z) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2 z) z (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 -2 z)) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (*.f64 z z) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 -2 z) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 z (*.f64 -2 z)) 2)) (cbrt.f64 (*.f64 z (*.f64 -2 z))) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z z) -2 (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 2 (*.f64 z z)) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (*.f64 -2 z))) (cbrt.f64 (*.f64 4 (*.f64 z z))) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) y) (*.f64 z (*.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y t (*.f64 z (*.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) (*.f64 z (*.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 t y)) (cbrt.f64 (pow.f64 (*.f64 t y) 2)) (*.f64 z (*.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t y) 1 (*.f64 z (*.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (*.f64 -2 z)) 1 (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (*.f64 -2 z)) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 t y) (*.f64 z (*.f64 -2 z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y z) (*.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 y y) z) 0) (*.f64 (+.f64 y y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 y y) z) (*.f64 (*.f64 (+.f64 y y) z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 y y) z)) (*.f64 (+.f64 y y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 y y) z) (*.f64 0 (*.f64 (+.f64 y y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y z) 1) (*.f64 (*.f64 y z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 -2 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 y y) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (+.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 y y) z)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 y y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 y y) z) 2)) (cbrt.f64 (*.f64 (+.f64 y y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 y y) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (+.f64 y y))) (cbrt.f64 (*.f64 (*.f64 y y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 z z) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (+.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 y y)) (*.f64 (cbrt.f64 (*.f64 (*.f64 y y) 4)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 y y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 y y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -2 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y z) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (+.f64 y y) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 y y) 4)) z) (cbrt.f64 (+.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 y y) 4)) (*.f64 z (cbrt.f64 (+.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (+.f64 y y)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (+.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (*.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 y) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (*.f64 -2 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -2 (*.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 y y) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 y y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 y y) z) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (*.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 y y) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 y y) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 y y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 y y) z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 y y) z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -2 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 y y) z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z y (*.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y z (*.f64 y z))))))"]],"rules":[["egg-rr",42],["egg-rr",45],["egg-rr",60]],"time":32.009033203125,"type":"rewrite"},{"count":[[243,168]],"inputs":[["(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(*.f64 -2 (pow.f64 z 2))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(*.f64 -2 (pow.f64 z 2))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(*.f64 -2 (pow.f64 z 2))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(*.f64 -2 (pow.f64 z 2))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (neg.f64 (/.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 t t))) (pow.f64 z 5))) (/.f64 y z))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 t t))) (pow.f64 z 5))) (/.f64 y z)))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (fma.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (*.f64 y y) (pow.f64 t 3))) (/.f64 (*.f64 16 (pow.f64 z 7)) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (fma.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (*.f64 y y) (pow.f64 t 3))) (/.f64 (*.f64 16 (pow.f64 z 7)) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (fma.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (*.f64 y y) (pow.f64 t 3))) (/.f64 (*.f64 16 (pow.f64 z 7)) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (neg.f64 (/.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 t t))) (pow.f64 z 5))) (/.f64 y z))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 t t))) (pow.f64 z 5))) (/.f64 y z)))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (neg.f64 (/.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 t t))) (pow.f64 z 5))) (/.f64 y z))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 t t))) (pow.f64 z 5))) (/.f64 y z)))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (neg.f64 (/.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 t t))) (pow.f64 z 5))) (/.f64 y z))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 t t))) (pow.f64 z 5))) (/.f64 y z)))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (fma.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (*.f64 y y) (pow.f64 t 3))) (/.f64 (*.f64 16 (pow.f64 z 7)) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (fma.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (*.f64 y y) (pow.f64 t 3))) (/.f64 (*.f64 16 (pow.f64 z 7)) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))))","(*.f64 -2 (pow.f64 z 2))","(*.f64 -2 (*.f64 z z))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(*.f64 -2 (pow.f64 z 2))","(*.f64 -2 (*.f64 z z))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(*.f64 -2 (pow.f64 z 2))","(*.f64 -2 (*.f64 z z))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(*.f64 -2 (pow.f64 z 2))","(*.f64 -2 (*.f64 z z))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 y t))","(fma.f64 -2 (*.f64 z z) (*.f64 y t))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))","(*.f64 2 (*.f64 y z))"]],"time":277.31689453125,"type":"simplify"},{"compiler":[[3819,1834]],"time":34.39990234375,"type":"eval"},{"alts":[["(+.f64 x (*.f64 2 (/.f64 z t)))","fresh",25.94335513370819],["(+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))))","next",7.333538077767381],["(+.f64 x (neg.f64 (/.f64 y z)))","fresh",22.672114644133195],["(+.f64 x (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))","fresh",16.181527241700543]],"compiler":[[11,8],[20,12],[10,7],[26,16],[11,8],[20,12],[10,7],[26,16]],"count":[[169,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[168,4],"picked":[1,0]}],"min-error":[0.01897648826221708],"time":47.3740234375,"type":"prune"},{"compiler":[[70,33]],"locations":[["(fma.f64 t y (*.f64 z (*.f64 -2 z)))",0.49999449521112044,false],["(/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))",10.960883316197794,true],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))",11.572643140278876,true]],"time":14.98095703125,"type":"localize"},{"count":[[2,72]],"series":[["(/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","z","-inf",0.260986328125],["(/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","z","inf",0.31298828125],["(/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","z","0",0.234130859375],["(/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","t","-inf",0.301025390625],["(/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","t","inf",0.345947265625],["(/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","t","0",0.376953125],["(/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","y","-inf",0.276123046875],["(/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","y","inf",0.375],["(/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))","y","0",0.6181640625],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))","t","-inf",0.22412109375],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))","t","inf",0.211181640625],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))","t","0",0.216064453125],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))","y","-inf",0.212890625],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))","y","inf",0.282958984375],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))","y","0",0.196044921875],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))","z","-inf",0.22900390625],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))","z","inf",0.223876953125],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))","z","0",0.282958984375]],"time":5.5,"type":"series"},{"count":[[2,115]],"inputs":[["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))","(/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 0) (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) (*.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) (*.f64 0 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (/.f64 (+.f64 y y) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 z (*.f64 -2 y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))) (/.f64 z (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)) z) (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (*.f64 -2 y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)) (cbrt.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (+.f64 y y)) (/.f64 1 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 y y) (cbrt.f64 z)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 y y) (/.f64 z (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (/.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (fma.f64 t y (*.f64 (*.f64 z z) -2))) (+.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z z)) (/.f64 (*.f64 (+.f64 y y) (cbrt.f64 z)) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 t y (*.f64 (*.f64 z z) -2))) (*.f64 z (+.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)) (*.f64 z (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (*.f64 -2 y)) (/.f64 -1 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (pow.f64 (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 -2 y)) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (+.f64 y y)) -1) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (+.f64 y y)) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)) (cbrt.f64 (*.f64 z (+.f64 y y)))) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z (+.f64 y y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2))) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (*.f64 -2 y)) 1) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) 1) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (+.f64 y y) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)) z)) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -2 y)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)) z)) (cbrt.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) z) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 -2 y)) 1) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 -2 y)) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (+.f64 y y)) -1) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) 1) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 z (*.f64 -2 y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 -2 y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) z))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 z (/.f64 (*.f64 -2 y) (fma.f64 t y (*.f64 (*.f64 z z) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 z (+.f64 y y)) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (fma.f64 t y (*.f64 (*.f64 z z) -2))) (/.f64 y (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 0) (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) (*.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) (*.f64 0 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))) (/.f64 (*.f64 -2 y) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 -2 y) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -2 y) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (pow.f64 (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)) (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 y) (/.f64 -1 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 y y)) (/.f64 (cbrt.f64 (*.f64 4 (*.f64 y y))) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 8 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (/.f64 y (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 y (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 y y) (/.f64 1 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 t y (*.f64 (*.f64 z z) -2))) (+.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) (neg.f64 1/3)) (/.f64 (+.f64 y y) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))) (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 4 (*.f64 y y))) (fma.f64 t y (*.f64 (*.f64 z z) -2))) (cbrt.f64 (+.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 t y (*.f64 (*.f64 z z) -2))) (*.f64 -2 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))) (cbrt.f64 (/.f64 8 (fma.f64 t y (*.f64 (*.f64 z z) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 y) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 8 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) y) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) (neg.f64 1/3)) (+.f64 y y)) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)) (cbrt.f64 (+.f64 y y))) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2)) (cbrt.f64 (*.f64 -2 y))) (cbrt.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (cbrt.f64 (*.f64 4 (*.f64 y y)))) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 y (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 y y)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2))) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -2 y)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 2))) (cbrt.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 y y) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) 1) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 y) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 y y) -1) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)))) 1) (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (/.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 t y (*.f64 (*.f64 z z) -2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -2 y) (fma.f64 t y (*.f64 (*.f64 z z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 -2 y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) 3))))))"]],"rules":[["egg-rr",54],["egg-rr",61]],"time":30.293212890625,"type":"rewrite"},{"count":[[187,146]],"inputs":[["(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(*.f64 -1 (/.f64 y (pow.f64 z 2)))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 8))))))","(/.f64 2 t)","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(/.f64 2 t)","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(*.f64 -1 (/.f64 y (pow.f64 z 2)))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 8))))))","(/.f64 2 t)","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(/.f64 2 t)","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(/.f64 2 t)","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(*.f64 -1 (/.f64 y (pow.f64 z 2)))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 8))))))","(*.f64 -1 (/.f64 y (pow.f64 z 2)))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 8))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(fma.f64 2 (/.f64 z t) (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(fma.f64 2 (/.f64 z t) (fma.f64 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) 4 (fma.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (*.f64 y y) (pow.f64 t 3))) (/.f64 (*.f64 16 (pow.f64 z 7)) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(fma.f64 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) -1/2 (neg.f64 (/.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) -1/4) (pow.f64 z 5))) (/.f64 y z))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) -1/4) (pow.f64 z 5))) (/.f64 y z)))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(fma.f64 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) -1/2 (neg.f64 (/.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) -1/4) (pow.f64 z 5))) (/.f64 y z))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) -1/4) (pow.f64 z 5))) (/.f64 y z)))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(fma.f64 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) -1/2 (neg.f64 (/.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) -1/4) (pow.f64 z 5))) (/.f64 y z))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) -1/4) (pow.f64 z 5))) (/.f64 y z)))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(fma.f64 2 (/.f64 z t) (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(fma.f64 2 (/.f64 z t) (fma.f64 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) 4 (fma.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (*.f64 y y) (pow.f64 t 3))) (/.f64 (*.f64 16 (pow.f64 z 7)) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(fma.f64 2 (/.f64 z t) (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(fma.f64 2 (/.f64 z t) (fma.f64 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) 4 (fma.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (*.f64 y y) (pow.f64 t 3))) (/.f64 (*.f64 16 (pow.f64 z 7)) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))))","(fma.f64 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) -1/2 (neg.f64 (/.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) -1/4) (pow.f64 z 5))) (/.f64 y z))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) -1/4) (pow.f64 z 5))) (/.f64 y z)))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(fma.f64 2 (/.f64 z t) (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(fma.f64 2 (/.f64 z t) (fma.f64 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) 4 (fma.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (*.f64 y y) (pow.f64 t 3))) (/.f64 (*.f64 16 (pow.f64 z 7)) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(fma.f64 2 (/.f64 z t) (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))) (*.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))))))","(fma.f64 2 (/.f64 z t) (fma.f64 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) 4 (fma.f64 8 (/.f64 (pow.f64 z 5) (*.f64 (*.f64 y y) (pow.f64 t 3))) (/.f64 (*.f64 16 (pow.f64 z 7)) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))))","(*.f64 -1 (/.f64 y (pow.f64 z 2)))","(neg.f64 (/.f64 y (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))))","(fma.f64 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) -1/2 (neg.f64 (/.f64 y (*.f64 z z))))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) -1/4) (pow.f64 z 6))) (/.f64 y (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 8))))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) (pow.f64 z 6)) (/.f64 (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 t 3))) (pow.f64 z 8)))) (/.f64 y (*.f64 z z)))","(/.f64 2 t)","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (/.f64 2 t))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (fma.f64 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) 8 (/.f64 2 t)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (fma.f64 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) 16 (fma.f64 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) 8 (/.f64 2 t))))","(/.f64 2 t)","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (/.f64 2 t))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (fma.f64 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) 8 (/.f64 2 t)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (fma.f64 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) 16 (fma.f64 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) 8 (/.f64 2 t))))","(*.f64 -1 (/.f64 y (pow.f64 z 2)))","(neg.f64 (/.f64 y (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))))","(fma.f64 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) -1/2 (neg.f64 (/.f64 y (*.f64 z z))))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) -1/4) (pow.f64 z 6))) (/.f64 y (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 8))))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) (pow.f64 z 6)) (/.f64 (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 t 3))) (pow.f64 z 8)))) (/.f64 y (*.f64 z z)))","(/.f64 2 t)","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (/.f64 2 t))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (fma.f64 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) 8 (/.f64 2 t)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (fma.f64 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) 16 (fma.f64 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) 8 (/.f64 2 t))))","(/.f64 2 t)","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (/.f64 2 t))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (fma.f64 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) 8 (/.f64 2 t)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (fma.f64 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) 16 (fma.f64 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) 8 (/.f64 2 t))))","(/.f64 2 t)","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (/.f64 2 t))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (fma.f64 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) 8 (/.f64 2 t)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2)))) (+.f64 (*.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4)))) (+.f64 (*.f64 2 (/.f64 1 t)) (*.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(+.f64 (/.f64 (pow.f64 (/.f64 (*.f64 2 z) t) 2) y) (fma.f64 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) 16 (fma.f64 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) 8 (/.f64 2 t))))","(*.f64 -1 (/.f64 y (pow.f64 z 2)))","(neg.f64 (/.f64 y (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))))","(fma.f64 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) -1/2 (neg.f64 (/.f64 y (*.f64 z z))))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) -1/4) (pow.f64 z 6))) (/.f64 y (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 8))))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) (pow.f64 z 6)) (/.f64 (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 t 3))) (pow.f64 z 8)))) (/.f64 y (*.f64 z z)))","(*.f64 -1 (/.f64 y (pow.f64 z 2)))","(neg.f64 (/.f64 y (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))))","(fma.f64 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) -1/2 (neg.f64 (/.f64 y (*.f64 z z))))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) -1/4) (pow.f64 z 6))) (/.f64 y (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 8))))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) (pow.f64 z 6)) (/.f64 (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 t 3))) (pow.f64 z 8)))) (/.f64 y (*.f64 z z)))"]],"time":224.244873046875,"type":"simplify"},{"compiler":[[4749,2350]],"time":42.818115234375,"type":"eval"},{"alts":[["(+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))))","next",8.113726353214519],["(+.f64 x (*.f64 2 (/.f64 z t)))","fresh",25.94335513370819],["(+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))))","done",7.333538077767381],["(+.f64 x (neg.f64 (/.f64 y z)))","fresh",22.672114644133195]],"compiler":[[26,16],[11,8],[20,12],[10,7],[26,16],[11,8],[10,7]],"count":[[200,4]],"kept":[{"done":[0,0],"fresh":[3,0],"new":[196,3],"picked":[1,1]}],"min-error":[0.01897648826221708],"time":61.301025390625,"type":"prune"},{"compiler":[[107,37]],"locations":[["(fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))",0.578120183435766,true],["(/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))",10.960883316197794,true],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))",11.572643140278876,true],["(cbrt.f64 (*.f64 z z))",32.152673196827784,true]],"time":19.393798828125,"type":"localize"},{"count":[[4,81]],"series":[["(fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))","y","-inf",0.200927734375],["(fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))","y","inf",0.243896484375],["(fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))","y","0",0.903076171875],["(fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))","t","-inf",0.2099609375],["(fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))","t","inf",0.21484375],["(fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))","t","0",1.2421875],["(fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))","z","-inf",0.300048828125],["(fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))","z","inf",0.256103515625],["(fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))","z","0",0.257080078125],["(/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))","t","-inf",0.3349609375],["(/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))","t","inf",0.384033203125],["(/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))","t","0",0.46484375],["(/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))","z","-inf",0.655029296875],["(/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))","z","inf",0.485107421875],["(/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))","z","0",0.349853515625],["(/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))","y","-inf",0.325927734375],["(/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))","y","inf",0.421142578125],["(/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))","y","0",0.56494140625],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))","t","-inf",0.3759765625],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))","t","inf",0.44189453125],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))","t","0",0.51806640625],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))","y","-inf",0.43115234375],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))","y","inf",0.553955078125],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))","y","0",1.805908203125],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))","z","-inf",1.72998046875],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))","z","inf",0.953125],["(*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))","z","0",0.989990234375],["(cbrt.f64 (*.f64 z z))","z","-inf",0.2568359375],["(cbrt.f64 (*.f64 z z))","z","inf",0.282958984375],["(cbrt.f64 (*.f64 z z))","z","0",0.43310546875]],"time":17.0791015625,"type":"series"},{"count":[[4,185]],"inputs":[["(cbrt.f64 (*.f64 z z))","(*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))","(/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))","(fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 z 2/3) (*.f64 (pow.f64 z 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 z 2/3) 0) (pow.f64 z 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 z 2/3) (*.f64 0 (pow.f64 z 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 z 2/3)) (pow.f64 z 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 z)) (cbrt.f64 (pow.f64 z (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 z)) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 z 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (cbrt.f64 (neg.f64 z))) (*.f64 1 (cbrt.f64 (neg.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 z) -1) (*.f64 (cbrt.f64 z) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 z)) -1) (*.f64 (cbrt.f64 (neg.f64 z)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 z)) 1) (*.f64 (cbrt.f64 (neg.f64 z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 z)) (cbrt.f64 (pow.f64 z (+.f64 1/3 4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 z 2/3))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 z 4/3)) (pow.f64 z 4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 z 4/3)) (cbrt.f64 (pow.f64 z 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 z 2/3)) (cbrt.f64 (pow.f64 z 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 z 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 z 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 z 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z z) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 z 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 z)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 z) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 z 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 z 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 z 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 z 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 z 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 z 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 z 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 z z))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) (*.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 0) (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) (*.f64 0 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 y y) (cbrt.f64 z)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) (pow.f64 z 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (*.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 z (*.f64 -2 y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (/.f64 (+.f64 y y) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3) (cbrt.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))) (pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (/.f64 (*.f64 (pow.f64 z 2/3) (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (+.f64 y y)) (/.f64 1 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 y y) (/.f64 z (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (*.f64 -2 y)) (/.f64 -1 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) 1) (*.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 -2 y)) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (+.f64 y y)) -1) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (+.f64 y y)) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3) (cbrt.f64 (*.f64 z (+.f64 y y)))) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (*.f64 -2 y)) 1) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) 1) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (+.f64 y y) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) z) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3) z)) (cbrt.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 y y)) (*.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3) z)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z (+.f64 y y))) (pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 -2 y)) 1) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 -2 y)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (neg.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) 1) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (+.f64 y y)) -1) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (+.f64 y y)) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 z (+.f64 y y)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))) (neg.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 -2 y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) z))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 z (*.f64 -2 y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (*.f64 z (*.f64 -2 y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 z (/.f64 (*.f64 -2 y) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 z (+.f64 y y)) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 z (+.f64 y y)) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) (*.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 0) (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 (*.f64 -2 z) z (*.f64 t y))) y) (*.f64 (/.f64 1 (fma.f64 (*.f64 -2 z) z (*.f64 t y))) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) (*.f64 0 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (fma.f64 (*.f64 -2 z) z (*.f64 t y))) (/.f64 y (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))) (/.f64 (*.f64 -2 y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 -2 y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -2 y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3) (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 y y)) (/.f64 (pow.f64 (+.f64 y y) 2/3) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 y) (/.f64 -1 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 y (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 8 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (/.f64 y (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 y y) (/.f64 1 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (*.f64 -2 z) z (*.f64 t y))) (+.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) -1/3) (/.f64 (+.f64 y y) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) 1) (*.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 y) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (pow.f64 (+.f64 y y) 2/3)) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) -1/3) (+.f64 y y)) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3) (cbrt.f64 (*.f64 -2 y))) (cbrt.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3) (cbrt.f64 (+.f64 y y))) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 8 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) y) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 y y) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) 1) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 y (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -2 y)) (pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3)) (cbrt.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 y y)) (pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 2/3)) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 y) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (neg.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) 1) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 y y) -1) (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (/.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 y y) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))) (neg.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -2 y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 -2 y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 y y) (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -2 z) z) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t y) (*.f64 (*.f64 -2 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (*.f64 2 (*.f64 z z))) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) (*.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 0) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 2 (*.f64 z z)) -1) (*.f64 (neg.f64 (*.f64 t y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) (*.f64 0 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 -2 z) z (*.f64 t y))) (fma.f64 (*.f64 -2 z) z (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 -2 z) z (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y))) (neg.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))) (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 2/3) (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 2 (*.f64 z z)) (*.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 -2 z) z (*.f64 t y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2 (pow.f64 z 4/3)) (pow.f64 z 2/3) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 -2 z) z)) (*.f64 (cbrt.f64 4) (pow.f64 z 4/3)) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 z 2/3) (*.f64 -2 (pow.f64 z 4/3)) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (*.f64 -2 z) (pow.f64 z 2/3)) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -2 (pow.f64 z 4/3))) (*.f64 (pow.f64 (*.f64 -2 (pow.f64 z 4/3)) 2/3) (pow.f64 z 2/3)) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2 z) z (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -2 (pow.f64 z 4/3)) (cbrt.f64 z)) (cbrt.f64 z) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (*.f64 z z) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -2 (pow.f64 z 4/3)) (cbrt.f64 (pow.f64 z 2/3))) (cbrt.f64 (pow.f64 z 4/3)) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 t y)) (*.f64 (*.f64 -2 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 t y)) (pow.f64 (*.f64 t y) 2/3) (*.f64 (*.f64 -2 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t y (*.f64 (*.f64 -2 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 t)) (pow.f64 t 2/3) (*.f64 (*.f64 -2 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (cbrt.f64 y)) (pow.f64 y 2/3) (*.f64 (*.f64 -2 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) y) (*.f64 (*.f64 -2 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y t (*.f64 (*.f64 -2 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 t y) 2/3) (cbrt.f64 (*.f64 t y)) (*.f64 (*.f64 -2 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (*.f64 (pow.f64 y 2/3) t) (*.f64 (*.f64 -2 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 -2 z) z) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 t y) (*.f64 (*.f64 -2 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t y) 1 (*.f64 (*.f64 -2 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -2 z) z) 1 (*.f64 t y))))))"]],"rules":[["egg-rr",46],["egg-rr",51],["egg-rr",56],["egg-rr",32]],"time":42.625,"type":"rewrite"},{"count":[[266,221]],"inputs":[["(*.f64 2 (/.f64 z t))","(*.f64 2 (/.f64 z t))","(*.f64 2 (/.f64 z t))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z))) (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3)))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z))) (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z))) (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3)))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z))) (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))))","(*.f64 2 (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4)))) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4)))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 8)))) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2)))))))","(/.f64 2 t)","(+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))))","(/.f64 2 t)","(+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))))","(/.f64 2 t)","(/.f64 2 t)","(/.f64 2 t)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4)))) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4)))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 8)))) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2)))))))","(/.f64 2 t)","(+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))))","(/.f64 2 t)","(+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))))","(*.f64 y t)","(*.f64 y t)","(*.f64 y t)","(*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(*.f64 y t)","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(*.f64 y t)","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(*.f64 y t)","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(*.f64 y t)","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z)))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (neg.f64 (/.f64 y z)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z))) (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (fma.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) (pow.f64 z 5)) -1/4 (neg.f64 (/.f64 y z))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3)))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z))) (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)) (fma.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) (pow.f64 z 5)) -1/4 (neg.f64 (/.f64 y z)))))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))))","(fma.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) (fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3))))))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))))","(fma.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) (fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3))))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z)))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (neg.f64 (/.f64 y z)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z))) (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (fma.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) (pow.f64 z 5)) -1/4 (neg.f64 (/.f64 y z))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 3)))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y z))) (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 5)))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 3)) (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 7)) (fma.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) (pow.f64 z 5)) -1/4 (neg.f64 (/.f64 y z)))))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))))","(fma.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) (fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3))))))","(*.f64 2 (/.f64 z t))","(/.f64 (*.f64 2 z) t)","(+.f64 (*.f64 2 (/.f64 z t)) (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))))","(fma.f64 2 (/.f64 z t) (/.f64 (*.f64 4 (pow.f64 z 3)) (*.f64 y (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3)))))))","(fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3)))))","(+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 3) (*.f64 y (pow.f64 t 2))))) (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 5) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))))))","(fma.f64 16 (/.f64 (pow.f64 z 7) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) (fma.f64 (/.f64 z t) 2 (fma.f64 4 (/.f64 (pow.f64 z 3) (*.f64 y (*.f64 t t))) (/.f64 (*.f64 8 (pow.f64 z 5)) (*.f64 (*.f64 y y) (pow.f64 t 3))))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2))))","(neg.f64 (/.f64 y (*.f64 z z)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2)))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) (neg.f64 (/.f64 y (*.f64 z z))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4)))) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) (pow.f64 z 6)) (neg.f64 (/.f64 y (*.f64 z z)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4)))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 8)))) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2)))))))","(fma.f64 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) -1/2 (fma.f64 -1/8 (*.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z -8)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) (pow.f64 z 6)) (neg.f64 (/.f64 y (*.f64 z z))))))","(/.f64 2 t)","(+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))","(fma.f64 4 (/.f64 (*.f64 z z) (*.f64 y (*.f64 t t))) (/.f64 2 t))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t))))","(fma.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) (fma.f64 4 (/.f64 (*.f64 z z) (*.f64 y (*.f64 t t))) (/.f64 2 t)))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))))","(fma.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) (fma.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) (fma.f64 4 (/.f64 (*.f64 z z) (*.f64 y (*.f64 t t))) (/.f64 2 t))))","(/.f64 2 t)","(+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))","(fma.f64 4 (/.f64 (*.f64 z z) (*.f64 y (*.f64 t t))) (/.f64 2 t))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t))))","(fma.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) (fma.f64 4 (/.f64 (*.f64 z z) (*.f64 y (*.f64 t t))) (/.f64 2 t)))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))))","(fma.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) (fma.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) (fma.f64 4 (/.f64 (*.f64 z z) (*.f64 y (*.f64 t t))) (/.f64 2 t))))","(/.f64 2 t)","(/.f64 2 t)","(/.f64 2 t)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2))))","(neg.f64 (/.f64 y (*.f64 z z)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2)))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) (neg.f64 (/.f64 y (*.f64 z z))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4)))) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) (pow.f64 z 6)) (neg.f64 (/.f64 y (*.f64 z z)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 4)))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z 8)))) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 t 2)) (pow.f64 z 6)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (pow.f64 z 2)))))))","(fma.f64 (/.f64 (*.f64 (*.f64 y y) t) (pow.f64 z 4)) -1/2 (fma.f64 -1/8 (*.f64 (*.f64 (pow.f64 y 4) (pow.f64 t 3)) (pow.f64 z -8)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t t)) (pow.f64 z 6)) (neg.f64 (/.f64 y (*.f64 z z))))))","(/.f64 2 t)","(+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))","(fma.f64 4 (/.f64 (*.f64 z z) (*.f64 y (*.f64 t t))) (/.f64 2 t))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t))))","(fma.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) (fma.f64 4 (/.f64 (*.f64 z z) (*.f64 y (*.f64 t t))) (/.f64 2 t)))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))))","(fma.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) (fma.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) (fma.f64 4 (/.f64 (*.f64 z z) (*.f64 y (*.f64 t t))) (/.f64 2 t))))","(/.f64 2 t)","(+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))","(fma.f64 4 (/.f64 (*.f64 z z) (*.f64 y (*.f64 t t))) (/.f64 2 t))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t))))","(fma.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) (fma.f64 4 (/.f64 (*.f64 z z) (*.f64 y (*.f64 t t))) (/.f64 2 t)))","(+.f64 (*.f64 8 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 4) (*.f64 (pow.f64 y 2) (pow.f64 t 3))))) (+.f64 (*.f64 16 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))))) (+.f64 (*.f64 4 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 z 2) (*.f64 y (pow.f64 t 2))))) (*.f64 2 (/.f64 1 t)))))","(fma.f64 8 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) (pow.f64 t 3))) (fma.f64 16 (/.f64 (pow.f64 z 6) (*.f64 (pow.f64 y 3) (pow.f64 t 4))) (fma.f64 4 (/.f64 (*.f64 z z) (*.f64 y (*.f64 t t))) (/.f64 2 t))))","(*.f64 y t)","(*.f64 y t)","(*.f64 y t)","(*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2)))","(*.f64 -2 (*.f64 z z))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(*.f64 y t)","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(*.f64 y t)","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2)))","(*.f64 -2 (*.f64 z z))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(*.f64 y t)","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(*.f64 y t)","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))","(+.f64 (*.f64 y t) (*.f64 -2 (*.f64 (pow.f64 1 1/3) (pow.f64 z 2))))","(fma.f64 y t (*.f64 -2 (*.f64 z z)))"]],"time":250.926025390625,"type":"simplify"},{"compiler":[[5503,2742]],"time":50.739013671875,"type":"eval"},{"alts":[["(+.f64 x (neg.f64 (/.f64 y z)))","next",22.672114644133195],["(+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))))","done",8.113726353214519],["(+.f64 x (/.f64 (*.f64 2 z) t))","fresh",25.950928357325704],["(+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))))","done",7.333538077767381]],"compiler":[[10,7],[26,16],[11,8],[20,12],[10,7],[11,8]],"count":[[225,4]],"kept":[{"done":[1,1],"fresh":[2,0],"new":[221,2],"picked":[1,1]}],"min-error":[0.01897648826221708],"time":73.742919921875,"type":"prune"},{"compiler":[[20,7]],"time":4.1640625,"type":"localize"},{"compiler":[[4,4]],"time":0.091064453125,"type":"eval"},{"alts":[["(+.f64 x (neg.f64 (/.f64 y z)))","done",22.672114644133195],["(+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))))","done",8.113726353214519],["(+.f64 x (/.f64 (*.f64 2 z) t))","fresh",25.950928357325704],["(+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))))","done",7.333538077767381]],"compiler":[[10,7],[26,16],[11,8],[20,12]],"count":[[4,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[0,0],"picked":[1,1]}],"min-error":[0.01897648826221708],"time":1.29296875,"type":"prune"},{"accuracy":[1.8743205123235904],"baseline":[7.333538077767381],"branch":[["x",7.333538077767383,1],["y",7.333538077767383,1],["z",1.8743205123235904,5],["t",7.333538077767382,1],["(-.f64 x (/.f64 (*.f64 (*.f64 y 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 y t))))",5.080561680895258,2],["(/.f64 (*.f64 (*.f64 y 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 y t)))",5.080561680895258,2]],"compiler":[[5,4],[5,4],[5,4],[5,4],[21,14],[19,13],[136,60]],"count":[[11,5]],"inputs":[["(+.f64 x (neg.f64 (/.f64 y z)))","(+.f64 x (/.f64 (*.f64 2 z) t))","(+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y)))))","(+.f64 x (*.f64 2 (/.f64 z t)))","(+.f64 x (neg.f64 (/.f64 y z)))","(+.f64 x (*.f64 2 (/.f64 z t)))","(+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))))","(+.f64 x (neg.f64 (/.f64 y z)))","(+.f64 x (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 (*.f64 (*.f64 -2 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 t y))))","(+.f64 x (/.f64 (*.f64 (+.f64 y y) z) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))","(-.f64 x (/.f64 (*.f64 (*.f64 y 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 y t))))"]],"link":["."],"name":["Numeric.AD.Rank1.Halley:findZero from ad-4.2.4"],"oracle":[50.93406090488725],"outputs":[["(+.f64 x (neg.f64 (/.f64 y z)))","(+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))))","(+.f64 x (/.f64 (*.f64 2 z) t))","(+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z))))))","(+.f64 x (neg.f64 (/.f64 y z)))"]],"time":50.68994140625,"times":[["x",4.54296875],["y",4.43310546875],["z",20.298095703125],["t",4.39892578125],["(-.f64 x (/.f64 (*.f64 (*.f64 y 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 y t))))",8.234130859375],["(/.f64 (*.f64 (*.f64 y 2) z) (-.f64 (*.f64 (*.f64 z 2) z) (*.f64 y t)))",6.22802734375]],"type":"regimes"},{"bstep":[[1.4629709916416835e+99,3.732539274234533e+100,12.77880859375],[4.036421214909982e-177,5.926444885094815e-173,11.85888671875],[-8.483333175209617e-156,-1.8195902634250844e-157,12.196044921875],[-3.5609361294793226e+95,-3.2178595802322036e+90,12.1669921875]],"compiler":[[23,16],[5,4]],"method":["binary-search","binary-search","binary-search","binary-search"],"time":49.159912109375,"type":"bsearch"},{"compiler":[[71,38]],"inputs":[["(if (<=.f64 z -356093612947932261394203411579136828032821383967305658996277626358412132057408012509937334747136) (+.f64 x (neg.f64 (/.f64 y z))) (if (<=.f64 z -8196039843963677/966134380754314586173837972732996836074731832426608749664308812862879785572390106134048441645480644490615904007875544294341269665260746913935727168366770187174245203705856) (+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))) (if (<=.f64 z 4603983025184307/1140610154405548804660292901425072831223307126812139982644798129474818791802169346626478202829342849944660577393398601827672176180343859499563165329930553547062998668590066237520718548061650944) (+.f64 x (/.f64 (*.f64 2 z) t)) (if (<=.f64 z 1462970991641683509781763574982270050452727334183074349628292161358442989142561183138281576208531456) (+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))) (+.f64 x (neg.f64 (/.f64 y z)))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 z -356093612947932261394203411579136828032821383967305658996277626358412132057408012509937334747136) (+.f64 x (neg.f64 (/.f64 y z))) (if (<=.f64 z -8196039843963677/966134380754314586173837972732996836074731832426608749664308812862879785572390106134048441645480644490615904007875544294341269665260746913935727168366770187174245203705856) (+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))) (if (<=.f64 z 4603983025184307/1140610154405548804660292901425072831223307126812139982644798129474818791802169346626478202829342849944660577393398601827672176180343859499563165329930553547062998668590066237520718548061650944) (+.f64 x (/.f64 (*.f64 2 z) t)) (if (<=.f64 z 1462970991641683509781763574982270050452727334183074349628292161358442989142561183138281576208531456) (+.f64 x (*.f64 z (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 z (*.f64 -2 z)))))) (+.f64 x (neg.f64 (/.f64 y z)))))))","(if (<=.f64 z -356093612947932261394203411579136828032821383967305658996277626358412132057408012509937334747136) (-.f64 x (/.f64 y z)) (if (<=.f64 z -8196039843963677/966134380754314586173837972732996836074731832426608749664308812862879785572390106134048441645480644490615904007875544294341269665260746913935727168366770187174245203705856) (fma.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) z x) (if (<=.f64 z 4603983025184307/1140610154405548804660292901425072831223307126812139982644798129474818791802169346626478202829342849944660577393398601827672176180343859499563165329930553547062998668590066237520718548061650944) (fma.f64 z (/.f64 2 t) x) (if (<=.f64 z 1462970991641683509781763574982270050452727334183074349628292161358442989142561183138281576208531456) (fma.f64 (/.f64 (+.f64 y y) (fma.f64 t y (*.f64 (*.f64 z z) -2))) z x) (-.f64 x (/.f64 y z))))))"]],"stop":[["fuel",1]],"time":25.47607421875,"type":"simplify"},{"time":0.028076171875,"type":"soundness"},{"compiler":[[71,38]],"remove-preprocessing":[[]],"time":18.0888671875,"type":"end"}]