[{"compiler":[[39,24]],"method":["search"],"sampling":[[12,0.046760670786183844,0.9508003059857382,0.0024390232280779856],[11,0.031173780524122563,0.9663871962477995,0.0024390232280779856],[10,0.0,0.997560976771922,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":677.594970703125,"type":"analyze"},{"outcomes":[["body",512,"valid",601.619140625,1354],["body",1024,"valid",3354.167724609375,4017],["body",2048,"valid",11.951171875,6],["body",256,"valid",568.243896484375,2879]],"time":4545.488037109375,"type":"sample"},{"compiler":[[38,23]],"inputs":[["0","1","2","3","4"],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 phi1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 lambda1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 lambda1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 lambda1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 phi2 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 delta (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 lambda1)) (cos.f64 phi1)) (-.f64 (cos.f64 lambda1) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda1)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 lambda1)) (cos.f64 theta)))))))))","(+.f64 theta (atan2.f64 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 lambda1)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi2)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi2) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi2) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 phi1)) (cos.f64 delta)) (-.f64 (cos.f64 phi1) (*.f64 (sin.f64 delta) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (cos.f64 theta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 phi1) (sin.f64 delta)) (cos.f64 theta)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 theta) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 theta) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 theta) (sin.f64 delta)) (cos.f64 phi1)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 phi2)) (cos.f64 phi1)) (-.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (cos.f64 theta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 phi2) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 phi2)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 delta) (sin.f64 theta)) (cos.f64 phi1)) (-.f64 (cos.f64 theta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 theta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 theta)) (cos.f64 delta)))))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (sin.f64 phi1) (cos.f64 delta) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 phi1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 lambda1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 lambda1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 lambda1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 phi1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 lambda1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 lambda1) (sin.f64 (asin.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 delta) (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 phi2 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 phi2 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (sin.f64 phi1) (cos.f64 delta) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 delta (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 lambda1)) (cos.f64 phi1)) (-.f64 (cos.f64 lambda1) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda1)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 lambda1)) (cos.f64 theta)))))))))","(+.f64 delta (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 lambda1)) (cos.f64 phi1)) (-.f64 (cos.f64 lambda1) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (sin.f64 phi1) (cos.f64 lambda1) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 lambda1)) (cos.f64 theta)))))))))","(+.f64 theta (atan2.f64 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 lambda1)))))))))","(+.f64 theta (atan2.f64 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (sin.f64 phi1) (cos.f64 delta) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 lambda1)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi2)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi2) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi2) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi2)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi2) (sin.f64 (asin.f64 (fma.f64 (sin.f64 phi2) (cos.f64 delta) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 phi1)) (cos.f64 delta)) (-.f64 (cos.f64 phi1) (*.f64 (sin.f64 delta) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (cos.f64 theta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 phi1)) (cos.f64 delta)) (-.f64 (cos.f64 phi1) (*.f64 (sin.f64 delta) (sin.f64 (asin.f64 (fma.f64 (sin.f64 delta) (cos.f64 phi1) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (cos.f64 theta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 phi1) (sin.f64 delta)) (cos.f64 theta)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 theta) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 theta) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 theta) (sin.f64 delta)) (cos.f64 phi1)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 phi1) (sin.f64 delta)) (cos.f64 theta)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 theta) (sin.f64 (asin.f64 (fma.f64 (sin.f64 theta) (cos.f64 delta) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 phi2)) (cos.f64 phi1)) (-.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (cos.f64 theta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 phi2)) (cos.f64 phi1)) (-.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (sin.f64 phi1) (cos.f64 phi2) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (cos.f64 theta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 phi2) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 phi2)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 phi2) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (sin.f64 phi1) (cos.f64 delta) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 phi2)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 delta) (sin.f64 theta)) (cos.f64 phi1)) (-.f64 (cos.f64 theta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 theta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 theta)) (cos.f64 delta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 theta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (sin.f64 phi1) (cos.f64 theta) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 theta)) (cos.f64 delta)))))))))"]],"symmetry":[[]],"time":96.612060546875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta)))))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))"]],"time":24.7529296875,"type":"simplify"},{"compiler":[[70,30]],"time":0.6669921875,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","next",0.16831394711805486]],"compiler":[[37,22],[37,22]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.16831394711805486],"time":1.31103515625,"type":"prune"},{"compiler":[[187,22]],"locations":[["(*.f64 (sin.f64 theta) (sin.f64 delta))",0.1640625,true],["(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))",0.25702844383407,true],["(*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))",0.30306625976844204,true],["(-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))",0.49098352262107886,true]],"time":26.803955078125,"type":"localize"},{"count":[[4,132]],"series":[["(*.f64 (sin.f64 theta) (sin.f64 delta))","delta","-inf",0.27197265625],["(*.f64 (sin.f64 theta) (sin.f64 delta))","delta","inf",0.52392578125],["(*.f64 (sin.f64 theta) (sin.f64 delta))","delta","0",0.37890625],["(*.f64 (sin.f64 theta) (sin.f64 delta))","theta","-inf",0.300048828125],["(*.f64 (sin.f64 theta) (sin.f64 delta))","theta","inf",0.31884765625],["(*.f64 (sin.f64 theta) (sin.f64 delta))","theta","0",0.343994140625],["(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))","delta","-inf",0.18212890625],["(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))","delta","inf",0.18310546875],["(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))","delta","0",0.197021484375],["(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))","phi1","-inf",0.18310546875],["(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))","phi1","inf",0.2099609375],["(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))","phi1","0",0.176025390625],["(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))","theta","-inf",0.209228515625],["(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))","theta","inf",0.18212890625],["(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))","theta","0",0.19091796875],["(*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))","delta","-inf",0.18701171875],["(*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))","delta","inf",0.18798828125],["(*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))","delta","0",0.2861328125],["(*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))","phi1","-inf",0.198974609375],["(*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))","phi1","inf",0.19091796875],["(*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))","phi1","0",0.35400390625],["(*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))","theta","-inf",0.18798828125],["(*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))","theta","inf",0.22412109375],["(*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))","theta","0",0.327880859375],["(-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))","phi1","-inf",0.89013671875],["(-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))","phi1","inf",1.968017578125],["(-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))","phi1","0",1.194091796875],["(-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))","theta","-inf",0.60498046875],["(-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))","theta","inf",1.446044921875],["(-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))","theta","0",0.823974609375],["(-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))","delta","-inf",1.182861328125],["(-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))","delta","inf",1.699951171875],["(-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))","delta","0",0.802978515625]],"time":17.279052734375,"type":"series"},{"count":[[4,211]],"inputs":[["(-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))","(*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))","(*.f64 (sin.f64 theta) (sin.f64 delta))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (cos.f64 delta) (*.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2)) (*.f64 (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) 0) (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) (*.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta))) (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) (*.f64 0 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 delta) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 (neg.f64 (cos.f64 delta)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1) (neg.f64 (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (neg.f64 (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (cos.f64 delta) 0) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1) (neg.f64 (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1) (neg.f64 (cos.f64 delta))))) (pow.f64 (cbrt.f64 (fma.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1) (neg.f64 (cos.f64 delta)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1) (neg.f64 (cos.f64 delta)))) (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1) (neg.f64 (cos.f64 delta)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta))) (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 2)) (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))) (-.f64 (cbrt.f64 (cos.f64 delta)) (cbrt.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) 2)) (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1) (neg.f64 (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1) (neg.f64 (cos.f64 delta))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 delta)) (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 delta) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 2)) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 2))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cbrt.f64 (sin.f64 phi1)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (neg.f64 (sin.f64 phi1)) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 delta) 1 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) (cos.f64 delta))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 0) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) (*.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) (*.f64 0 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2) (neg.f64 (*.f64 (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2) (*.f64 (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (sqrt.f64 2)) (/.f64 1 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (/.f64 1 -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (cbrt.f64 2)) (/.f64 1 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 -1) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) (-.f64 phi1 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1) (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 2) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) (-.f64 phi1 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1) (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (sqrt.f64 2)) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) (-.f64 phi1 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1) (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (cbrt.f64 4)) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) (-.f64 phi1 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1) (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (neg.f64 (sqrt.f64 2))) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) (-.f64 phi1 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1) (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) (-.f64 phi1 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1) (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (cbrt.f64 2)) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) (-.f64 phi1 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1) (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 2)) (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 4)) (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (sqrt.f64 2))) (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 2)) (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) -1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) 2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) 2) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) (sqrt.f64 2)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) 2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) (cbrt.f64 4)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) 2) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) (neg.f64 (sqrt.f64 2))) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) 2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) 1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 2)) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 2)) (cbrt.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cbrt.f64 (sin.f64 phi1))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cbrt.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (cbrt.f64 (pow.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 2)) (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (cbrt.f64 2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (sqrt.f64 2)) (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (cbrt.f64 2)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (cbrt.f64 2)) (cbrt.f64 2)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (cbrt.f64 2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 2) (*.f64 2 (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) (cbrt.f64 2))) (neg.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2) (*.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) 0) (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) (*.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) (*.f64 0 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cbrt.f64 (pow.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) 2)) (cbrt.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 0) (*.f64 (sin.f64 theta) (sin.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 theta) (sin.f64 delta))) (*.f64 (sin.f64 theta) (sin.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (*.f64 0 (*.f64 (sin.f64 theta) (sin.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (-.f64 theta delta)) 1/2) (neg.f64 (*.f64 (cos.f64 (+.f64 theta delta)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 theta delta)) 1/2) (*.f64 (cos.f64 (+.f64 theta delta)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 delta)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 delta) 2)) (sin.f64 theta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 theta)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 theta) 2)) (sin.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 theta) (sin.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 delta) (sin.f64 theta))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 theta) (cbrt.f64 (sin.f64 delta))) (cbrt.f64 (pow.f64 (sin.f64 delta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 theta) (sin.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 -1) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 theta (-.f64 delta (+.f64 theta delta))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 theta delta) (+.f64 theta delta)) 1/2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 2) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 theta (-.f64 delta (+.f64 theta delta))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 theta delta) (+.f64 theta delta)) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (sqrt.f64 2)) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 theta (-.f64 delta (+.f64 theta delta))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 theta delta) (+.f64 theta delta)) 1/2))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (cbrt.f64 4)) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 theta (-.f64 delta (+.f64 theta delta))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 theta delta) (+.f64 theta delta)) 1/2))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (neg.f64 (sqrt.f64 2))) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 theta (-.f64 delta (+.f64 theta delta))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 theta delta) (+.f64 theta delta)) 1/2))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 theta (-.f64 delta (+.f64 theta delta))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 theta delta) (+.f64 theta delta)) 1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (cbrt.f64 2)) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 theta (-.f64 delta (+.f64 theta delta))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 theta delta) (+.f64 theta delta)) 1/2))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) -1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) 2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) 2) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) (sqrt.f64 2)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) 2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) (cbrt.f64 4)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) 2) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) (neg.f64 (sqrt.f64 2))) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) 2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) 1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 theta) (sin.f64 delta))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 2)) (cbrt.f64 (*.f64 (sin.f64 theta) (sin.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 delta) (cbrt.f64 (sin.f64 theta))) (cbrt.f64 (pow.f64 (sin.f64 theta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 theta) (sin.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (sqrt.f64 2)) (/.f64 1 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 (+.f64 theta delta)) (cos.f64 (-.f64 theta delta))) (/.f64 1 -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (cbrt.f64 2)) (/.f64 1 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 2)) (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 4)) (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (sqrt.f64 2))) (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 2)) (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 2)) (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (cbrt.f64 2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 (+.f64 theta delta)) (cos.f64 (-.f64 theta delta))) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (sqrt.f64 2)) (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (cbrt.f64 2)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (cbrt.f64 2)) (cbrt.f64 2)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (cbrt.f64 2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (cbrt.f64 2))) (neg.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (+.f64 theta delta)) (cos.f64 (-.f64 theta delta))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 theta delta)) (cos.f64 (+.f64 theta delta))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cos.f64 (-.f64 theta delta)) 2) (*.f64 2 (cos.f64 (+.f64 theta delta)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 theta) (sin.f64 delta))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 theta) (sin.f64 delta))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 theta) (sin.f64 delta))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (cos.f64 (+.f64 theta delta)) (cos.f64 (-.f64 theta delta))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 theta) (sin.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (cos.f64 (+.f64 theta delta)) 1/2) (*.f64 (cos.f64 (-.f64 theta delta)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 3))))))"]],"rules":[["egg-rr",72],["egg-rr",20],["egg-rr",69],["egg-rr",50]],"time":57.196044921875,"type":"rewrite"},{"count":[[343,275]],"inputs":[["(-.f64 1 (pow.f64 (sin.f64 phi1) 2))","(-.f64 (+.f64 1 (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))) (pow.f64 (sin.f64 phi1) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (pow.f64 delta 2) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))) (pow.f64 (sin.f64 phi1) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 delta 2) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))) (pow.f64 (sin.f64 phi1) 2))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(-.f64 (+.f64 (cos.f64 delta) (*.f64 1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1)))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(-.f64 (+.f64 (*.f64 -1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (+.f64 (cos.f64 delta) (*.f64 1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(-.f64 (+.f64 (*.f64 -1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (+.f64 (cos.f64 delta) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 1/720 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 6) (cos.f64 phi1)))))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(cos.f64 delta)","(+.f64 (cos.f64 delta) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))","(+.f64 (cos.f64 delta) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))))","(+.f64 (cos.f64 delta) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (+.f64 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (+.f64 (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta)))","(+.f64 (*.f64 (cos.f64 delta) (pow.f64 phi1 2)) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta))))","(+.f64 (*.f64 (cos.f64 delta) (pow.f64 phi1 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3)) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta)))))","(+.f64 (*.f64 (cos.f64 delta) (pow.f64 phi1 2)) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 delta) (pow.f64 phi1 4))) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3)) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(pow.f64 (sin.f64 phi1) 2)","(+.f64 (pow.f64 (sin.f64 phi1) 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (sin.f64 phi1) 2) (pow.f64 delta 2))) (+.f64 (pow.f64 (sin.f64 phi1) 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (sin.f64 phi1) 2) (pow.f64 delta 2))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (pow.f64 (sin.f64 phi1) 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(*.f64 (sin.f64 delta) theta)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 delta) (pow.f64 theta 3))) (*.f64 (sin.f64 delta) theta))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 delta) (pow.f64 theta 3))) (+.f64 (*.f64 (sin.f64 delta) theta) (*.f64 1/120 (*.f64 (sin.f64 delta) (pow.f64 theta 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 delta) (pow.f64 theta 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 delta) (pow.f64 theta 3))) (+.f64 (*.f64 (sin.f64 delta) theta) (*.f64 1/120 (*.f64 (sin.f64 delta) (pow.f64 theta 5))))))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 theta) delta)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 delta 3) (sin.f64 theta))) (*.f64 (sin.f64 theta) delta))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 delta 3) (sin.f64 theta))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 delta 5) (sin.f64 theta))) (*.f64 (sin.f64 theta) delta)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 delta 3) (sin.f64 theta))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 delta 7) (sin.f64 theta))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 delta 5) (sin.f64 theta))) (*.f64 (sin.f64 theta) delta))))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))"]],"method":["egg-herbie"],"outputs":[["(-.f64 1 (pow.f64 (sin.f64 phi1) 2))","(*.f64 (cos.f64 phi1) (cos.f64 phi1))","(-.f64 (+.f64 1 (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))) (pow.f64 (sin.f64 phi1) 2))","(+.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (cos.f64 phi1) (cos.f64 phi1)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (pow.f64 delta 2) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))) (pow.f64 (sin.f64 phi1) 2))","(+.f64 (-.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (*.f64 delta delta) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 (cos.f64 phi1) (cos.f64 phi1)))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 delta 2) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))) (pow.f64 (sin.f64 phi1) 2))","(+.f64 (-.f64 (-.f64 (*.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (*.f64 (*.f64 delta delta) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (cos.f64 phi1) (cos.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1))))","(-.f64 (+.f64 (cos.f64 delta) (*.f64 1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1)))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(+.f64 (cos.f64 delta) (fma.f64 (*.f64 1/2 (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (*.f64 theta theta) (cos.f64 phi1))) (neg.f64 (*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1))))))","(-.f64 (+.f64 (*.f64 -1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (+.f64 (cos.f64 delta) (*.f64 1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(-.f64 (fma.f64 -1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))) (+.f64 (cos.f64 delta) (*.f64 1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (*.f64 theta theta) (cos.f64 phi1))))))) (*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1))))","(-.f64 (+.f64 (*.f64 -1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (+.f64 (cos.f64 delta) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 1/720 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 6) (cos.f64 phi1)))))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(-.f64 (fma.f64 -1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))) (+.f64 (cos.f64 delta) (fma.f64 1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) (*.f64 1/720 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 6) (cos.f64 phi1)))))))) (*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1))))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(cos.f64 delta)","(+.f64 (cos.f64 delta) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))","(-.f64 (cos.f64 delta) (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))","(+.f64 (cos.f64 delta) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))))","(-.f64 (-.f64 (cos.f64 delta) (*.f64 (cos.f64 delta) (*.f64 phi1 phi1))) (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))","(+.f64 (cos.f64 delta) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))))","(+.f64 (cos.f64 delta) (-.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 phi1 3)) (*.f64 (*.f64 (sin.f64 delta) (cos.f64 theta)) -2/3)) (*.f64 (cos.f64 delta) (*.f64 phi1 phi1))) (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1)))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) (*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (+.f64 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))))))","(fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) (fma.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1)) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (+.f64 (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))))))","(fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) (fma.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 6) (cos.f64 phi1)))) (fma.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1)) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta)))","(+.f64 (*.f64 (cos.f64 delta) (pow.f64 phi1 2)) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta))))","(fma.f64 (cos.f64 delta) (*.f64 phi1 phi1) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta))))","(+.f64 (*.f64 (cos.f64 delta) (pow.f64 phi1 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3)) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta)))))","(fma.f64 (cos.f64 delta) (*.f64 phi1 phi1) (fma.f64 (*.f64 (*.f64 (sin.f64 delta) (cos.f64 theta)) -2/3) (pow.f64 phi1 3) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta)))))","(+.f64 (*.f64 (cos.f64 delta) (pow.f64 phi1 2)) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 delta) (pow.f64 phi1 4))) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3)) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta))))))","(fma.f64 (cos.f64 delta) (*.f64 phi1 phi1) (fma.f64 -1/3 (*.f64 (cos.f64 delta) (pow.f64 phi1 4)) (fma.f64 (*.f64 (*.f64 (sin.f64 delta) (cos.f64 theta)) -2/3) (pow.f64 phi1 3) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(pow.f64 (sin.f64 phi1) 2)","(+.f64 (pow.f64 (sin.f64 phi1) 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))","(*.f64 (sin.f64 phi1) (+.f64 (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))) (sin.f64 phi1)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (sin.f64 phi1) 2) (pow.f64 delta 2))) (+.f64 (pow.f64 (sin.f64 phi1) 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))","(fma.f64 -1/2 (pow.f64 (*.f64 (sin.f64 phi1) delta) 2) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))) (sin.f64 phi1))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (sin.f64 phi1) 2) (pow.f64 delta 2))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (pow.f64 (sin.f64 phi1) 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(fma.f64 -1/2 (pow.f64 (*.f64 (sin.f64 phi1) delta) 2) (fma.f64 -1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta)))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))) (sin.f64 phi1)))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(*.f64 (sin.f64 delta) theta)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 delta) (pow.f64 theta 3))) (*.f64 (sin.f64 delta) theta))","(fma.f64 -1/6 (*.f64 (sin.f64 delta) (pow.f64 theta 3)) (*.f64 (sin.f64 delta) theta))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 delta) (pow.f64 theta 3))) (+.f64 (*.f64 (sin.f64 delta) theta) (*.f64 1/120 (*.f64 (sin.f64 delta) (pow.f64 theta 5)))))","(fma.f64 -1/6 (*.f64 (sin.f64 delta) (pow.f64 theta 3)) (fma.f64 (sin.f64 delta) theta (*.f64 1/120 (*.f64 (sin.f64 delta) (pow.f64 theta 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 delta) (pow.f64 theta 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 delta) (pow.f64 theta 3))) (+.f64 (*.f64 (sin.f64 delta) theta) (*.f64 1/120 (*.f64 (sin.f64 delta) (pow.f64 theta 5))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 delta) (pow.f64 theta 7)) (fma.f64 -1/6 (*.f64 (sin.f64 delta) (pow.f64 theta 3)) (fma.f64 (sin.f64 delta) theta (*.f64 1/120 (*.f64 (sin.f64 delta) (pow.f64 theta 5))))))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 theta) delta)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 delta 3) (sin.f64 theta))) (*.f64 (sin.f64 theta) delta))","(*.f64 (sin.f64 theta) (+.f64 delta (*.f64 -1/6 (pow.f64 delta 3))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 delta 3) (sin.f64 theta))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 delta 5) (sin.f64 theta))) (*.f64 (sin.f64 theta) delta)))","(fma.f64 -1/6 (*.f64 (pow.f64 delta 3) (sin.f64 theta)) (*.f64 (sin.f64 theta) (+.f64 delta (*.f64 1/120 (pow.f64 delta 5)))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 delta 3) (sin.f64 theta))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 delta 7) (sin.f64 theta))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 delta 5) (sin.f64 theta))) (*.f64 (sin.f64 theta) delta))))","(+.f64 (*.f64 (sin.f64 theta) (+.f64 (*.f64 -1/6 (pow.f64 delta 3)) (*.f64 -1/5040 (pow.f64 delta 7)))) (*.f64 (sin.f64 theta) (+.f64 delta (*.f64 1/120 (pow.f64 delta 5)))))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))","(*.f64 (sin.f64 delta) (sin.f64 theta))"]],"time":443.592041015625,"type":"simplify"},{"compiler":[[12509,2488]],"time":55.119873046875,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (+.f64 (-.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (*.f64 delta delta) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 (cos.f64 phi1) (cos.f64 phi1)))))","fresh",10.81541145851284],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 theta) (sin.f64 delta))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 2))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","fresh",2.1484946250431163],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (*.f64 (+.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 2)) (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))) (-.f64 (cbrt.f64 (cos.f64 delta)) (cbrt.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))))","fresh",0.22467523554521157],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 theta)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 theta) 2)) (sin.f64 delta))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","fresh",0.6838042543562036],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))","next",0.1689077092018246],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))","fresh",0.1926201675139004],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (pow.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) 3) 1/3)))","fresh",14.66485109071156],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (*.f64 (sin.f64 delta) (cbrt.f64 (sin.f64 theta))) (cbrt.f64 (pow.f64 (sin.f64 theta) 2))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","fresh",0.6652420827326404]],"compiler":[[46,29],[47,27],[90,35],[44,27],[44,27],[44,27],[41,26],[44,27],[46,29],[47,27],[90,35],[44,27],[44,27],[44,27],[41,26],[44,27]],"count":[[276,8]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[275,8],"picked":[1,0]}],"min-error":[0.03125],"time":138.630126953125,"type":"prune"},{"compiler":[[249,55]],"locations":[["(*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))",0.324882519536884,true],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))",0.33041000976844204,true],["(-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))",0.49098352262107886,true],["(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))",15.687091566397038,true]],"time":38.96484375,"type":"localize"},{"count":[[4,112]],"series":[["(*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","delta","-inf",0.205078125],["(*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","delta","inf",0.18798828125],["(*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","delta","0",0.217041015625],["(*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","theta","-inf",0.18994140625],["(*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","theta","inf",0.23193359375],["(*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","theta","0",0.321044921875],["(*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","phi1","-inf",0.2080078125],["(*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","phi1","inf",0.195068359375],["(*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","phi1","0",0.2451171875],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","delta","-inf",0.35595703125],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","delta","inf",1.090087890625],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","delta","0",0.449951171875],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","theta","-inf",0.35009765625],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","theta","inf",1.264892578125],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","theta","0",0.648193359375],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","phi1","-inf",1.155029296875],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","phi1","inf",1.114990234375],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","phi1","0",0.672119140625],["(-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))","theta","-inf",0.4189453125],["(-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))","theta","inf",1.482177734375],["(-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))","theta","0",0.5400390625],["(-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))","phi1","-inf",0.412109375],["(-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))","phi1","inf",1.125],["(-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))","phi1","0",0.243896484375],["(-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))","delta","-inf",0.43603515625],["(-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))","delta","inf",2.593994140625],["(-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))","delta","0",0.34619140625],["(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))","phi1","-inf",1.10693359375],["(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))","phi1","inf",1.3359375],["(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))","phi1","0",0.68212890625]],"time":20.443115234375,"type":"series"},{"count":[[4,136]],"inputs":[["(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))","(-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","(*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 phi1) 2/3) (*.f64 (pow.f64 (sin.f64 phi1) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) 0) (pow.f64 (sin.f64 phi1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 phi1) 2/3) (*.f64 0 (pow.f64 (sin.f64 phi1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (sin.f64 phi1) 2/3)) (pow.f64 (sin.f64 phi1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sin.f64 phi1))) (cbrt.f64 (neg.f64 (sin.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 phi1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2/3)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2/3))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 phi1)) (cbrt.f64 (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sin.f64 phi1))) (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 phi1))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 phi1))) 4) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (sin.f64 phi1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 phi1) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (sin.f64 phi1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (sin.f64 phi1) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 phi1 phi1)))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 phi1) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 phi1))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 phi1) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 phi1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (sin.f64 phi1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (sin.f64 phi1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 phi1) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) (*.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 0) (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) (*.f64 0 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))) (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 delta) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 (neg.f64 (cos.f64 delta)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (neg.f64 (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (neg.f64 (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (cos.f64 delta) 0) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))) (pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 2/3) (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (neg.f64 (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (neg.f64 (cos.f64 delta))))) (pow.f64 (cbrt.f64 (fma.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (neg.f64 (cos.f64 delta)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (neg.f64 (cos.f64 delta)))) (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (neg.f64 (cos.f64 delta)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (cos.f64 delta) 2/3) (+.f64 (pow.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (*.f64 (cbrt.f64 (cos.f64 delta)) (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (-.f64 (cbrt.f64 (cos.f64 delta)) (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (neg.f64 (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (neg.f64 (cos.f64 delta))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 delta)) (pow.f64 (cos.f64 delta) 2/3) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 delta) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cos.f64 delta) 2/3) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 delta) 1 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))) (pow.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (neg.f64 (pow.f64 (sin.f64 phi1) 2/3)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (neg.f64 (sin.f64 phi1))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (neg.f64 (pow.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3)) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (sin.f64 phi1))) (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 phi1) 2/3)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (sin.f64 phi1)) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) 2) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (sin.f64 phi1))) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (pow.f64 (sin.f64 phi1) 2/3) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (sin.f64 phi1))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))) (pow.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 0) (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 0 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (pow.f64 (sin.f64 phi1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (cbrt.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 (pow.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 2/3) (pow.f64 (sin.f64 phi1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 phi1))) 4) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 phi1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (pow.f64 (sin.f64 phi1) 2/3)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 phi1) 2/3)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 0) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 0 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (*.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (cbrt.f64 (sin.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sin.f64 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2/3)) (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cbrt.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sin.f64 phi1)) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))) (pow.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (pow.f64 (sin.f64 phi1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (cbrt.f64 (sin.f64 phi1)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 phi1) 2/3) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cbrt.f64 (sin.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (-.f64 phi1 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 (+.f64 phi1 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (-.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1)) (cos.f64 (+.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))) phi1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 3))))))"]],"rules":[["egg-rr",31],["egg-rr",24],["egg-rr",54],["egg-rr",27]],"time":45.032958984375,"type":"rewrite"},{"count":[[248,203]],"inputs":[["(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(-.f64 1 (pow.f64 (sin.f64 phi1) 2))","(-.f64 (+.f64 1 (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))) (pow.f64 (sin.f64 phi1) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (pow.f64 delta 2) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))) (pow.f64 (sin.f64 phi1) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 delta 2) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))) (pow.f64 (sin.f64 phi1) 2))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(cos.f64 delta)","(+.f64 (cos.f64 delta) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))","(+.f64 (cos.f64 delta) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))))","(+.f64 (cos.f64 delta) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(-.f64 (+.f64 (cos.f64 delta) (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1)))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(-.f64 (+.f64 (cos.f64 delta) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(-.f64 (+.f64 (cos.f64 delta) (+.f64 (*.f64 1/720 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(pow.f64 (pow.f64 (sin.f64 phi1) 5) 1/3)","(+.f64 (pow.f64 (pow.f64 (sin.f64 phi1) 5) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 5)) 1/3) (pow.f64 delta 2))) (+.f64 (pow.f64 (pow.f64 (sin.f64 phi1) 5) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 5)) 1/3) (pow.f64 delta 2))) (+.f64 (pow.f64 (pow.f64 (sin.f64 phi1) 5) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta)))","(+.f64 (*.f64 (cos.f64 delta) (pow.f64 phi1 2)) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta))))","(+.f64 (*.f64 (cos.f64 delta) (pow.f64 phi1 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3)) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta)))))","(+.f64 (*.f64 (cos.f64 delta) (pow.f64 phi1 2)) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 delta) (pow.f64 phi1 4))) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3)) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(+.f64 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (*.f64 -1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (+.f64 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (*.f64 -1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1)))))))","(+.f64 (*.f64 -1/720 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (+.f64 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (*.f64 -1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(pow.f64 (sin.f64 phi1) 2)","(+.f64 (pow.f64 (sin.f64 phi1) 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (sin.f64 phi1) 2) (pow.f64 delta 2))) (+.f64 (pow.f64 (sin.f64 phi1) 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (sin.f64 phi1) 2) (pow.f64 delta 2))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (pow.f64 (sin.f64 phi1) 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))","(pow.f64 (pow.f64 (sin.f64 phi1) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 phi1) 2))","(-.f64 1 (pow.f64 (sin.f64 phi1) 2))","(*.f64 (cos.f64 phi1) (cos.f64 phi1))","(-.f64 (+.f64 1 (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))) (pow.f64 (sin.f64 phi1) 2))","(+.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (cos.f64 phi1) (cos.f64 phi1)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (pow.f64 delta 2) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))) (pow.f64 (sin.f64 phi1) 2))","(+.f64 (-.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (*.f64 delta delta) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 (cos.f64 phi1) (cos.f64 phi1)))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 delta 2) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))) (pow.f64 (sin.f64 phi1) 2))","(+.f64 (-.f64 (-.f64 (*.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (*.f64 (*.f64 delta delta) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (cos.f64 phi1) (cos.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(cos.f64 delta)","(+.f64 (cos.f64 delta) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))","(-.f64 (cos.f64 delta) (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))","(+.f64 (cos.f64 delta) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))))","(-.f64 (-.f64 (cos.f64 delta) (*.f64 (cos.f64 delta) (*.f64 phi1 phi1))) (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))","(+.f64 (cos.f64 delta) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))))","(+.f64 (cos.f64 delta) (-.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 phi1 3)) (*.f64 (*.f64 (sin.f64 delta) (cos.f64 theta)) -2/3)) (*.f64 (cos.f64 delta) (*.f64 phi1 phi1))) (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1))))","(-.f64 (+.f64 (cos.f64 delta) (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1)))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(+.f64 (cos.f64 delta) (fma.f64 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) 1/2 (neg.f64 (*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1))))))","(-.f64 (+.f64 (cos.f64 delta) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(+.f64 (fma.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))))) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1)))))","(-.f64 (+.f64 (cos.f64 delta) (+.f64 (*.f64 1/720 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))))))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(+.f64 (fma.f64 1/720 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1)))) (fma.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))))) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1)))))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(-.f64 (cos.f64 delta) (*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (+.f64 delta phi1)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))))","(fma.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (+.f64 delta phi1)) (*.f64 -1/2 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (sin.f64 delta) (*.f64 (*.f64 theta theta) (cos.f64 phi1))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))))))","(fma.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (+.f64 delta phi1)) (fma.f64 -1/2 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (sin.f64 delta) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) (*.f64 1/24 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))))))","(fma.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (+.f64 delta phi1)) (fma.f64 -1/720 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 6) (cos.f64 phi1)))) (fma.f64 -1/2 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (sin.f64 delta) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) (*.f64 1/24 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (sin.f64 delta) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(pow.f64 (pow.f64 (sin.f64 phi1) 5) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 phi1) 5))","(+.f64 (pow.f64 (pow.f64 (sin.f64 phi1) 5) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))","(+.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 5)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 5)) 1/3) (pow.f64 delta 2))) (+.f64 (pow.f64 (pow.f64 (sin.f64 phi1) 5) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))","(fma.f64 -1/2 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 5)) (*.f64 delta delta)) (+.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 5)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 5)) 1/3) (pow.f64 delta 2))) (+.f64 (pow.f64 (pow.f64 (sin.f64 phi1) 5) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(fma.f64 -1/6 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta)))) (fma.f64 -1/2 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 5)) (*.f64 delta delta)) (+.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 5)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (pow.f64 (*.f64 1 (pow.f64 (sin.f64 phi1) 2)) 1/3))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))","(*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta)))","(+.f64 (*.f64 (cos.f64 delta) (pow.f64 phi1 2)) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta))))","(fma.f64 (cos.f64 delta) (*.f64 phi1 phi1) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta))))","(+.f64 (*.f64 (cos.f64 delta) (pow.f64 phi1 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3)) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta)))))","(fma.f64 (cos.f64 delta) (*.f64 phi1 phi1) (fma.f64 (*.f64 (*.f64 (sin.f64 delta) (cos.f64 theta)) -2/3) (pow.f64 phi1 3) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta)))))","(+.f64 (*.f64 (cos.f64 delta) (pow.f64 phi1 2)) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 delta) (pow.f64 phi1 4))) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3)) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta))))))","(fma.f64 (cos.f64 delta) (*.f64 phi1 phi1) (fma.f64 -1/3 (*.f64 (cos.f64 delta) (pow.f64 phi1 4)) (fma.f64 (*.f64 (*.f64 (sin.f64 delta) (cos.f64 theta)) -2/3) (pow.f64 phi1 3) (*.f64 (sin.f64 delta) (*.f64 phi1 (cos.f64 theta))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))","(*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1)))","(+.f64 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (*.f64 -1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))))","(fma.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1)) (*.f64 -1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1))))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (+.f64 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (*.f64 -1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1)))))))","(fma.f64 1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))) (fma.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1)) (*.f64 -1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))))))","(+.f64 (*.f64 -1/720 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (+.f64 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))) (*.f64 -1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))))))","(fma.f64 -1/720 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1)))) (fma.f64 1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))) (fma.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1)) (*.f64 -1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1))))))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(pow.f64 (sin.f64 phi1) 2)","(+.f64 (pow.f64 (sin.f64 phi1) 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))","(*.f64 (sin.f64 phi1) (+.f64 (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))) (sin.f64 phi1)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (sin.f64 phi1) 2) (pow.f64 delta 2))) (+.f64 (pow.f64 (sin.f64 phi1) 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))","(fma.f64 -1/2 (pow.f64 (*.f64 (sin.f64 phi1) delta) 2) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))) (sin.f64 phi1))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (sin.f64 phi1) 2) (pow.f64 delta 2))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (pow.f64 (sin.f64 phi1) 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(fma.f64 -1/2 (pow.f64 (*.f64 (sin.f64 phi1) delta) 2) (fma.f64 -1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta)))) (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))) (sin.f64 phi1)))))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))","(*.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))"]],"time":401.9990234375,"type":"simplify"},{"compiler":[[8717,1982]],"time":41.594970703125,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (+.f64 (-.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (*.f64 delta delta) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 (cos.f64 phi1) (cos.f64 phi1)))))","fresh",10.81541145851284],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (neg.f64 (pow.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3)) (cos.f64 delta))))","fresh",18.88544699137746],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 theta) (sin.f64 delta))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 2))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","fresh",2.1484946250431163],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (*.f64 (+.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 2)) (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))) (-.f64 (cbrt.f64 (cos.f64 delta)) (cbrt.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))))","fresh",0.22467523554521157],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 theta)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 theta) 2)) (sin.f64 delta))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","fresh",0.6838042543562036],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))","done",0.1689077092018246],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))","next",0.1926201675139004],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (pow.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) 3) 1/3)))","fresh",14.66485109071156],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (*.f64 (sin.f64 delta) (cbrt.f64 (sin.f64 theta))) (cbrt.f64 (pow.f64 (sin.f64 theta) 2))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","fresh",0.6652420827326404]],"compiler":[[46,29],[59,26],[47,27],[90,35],[44,27],[44,27],[44,27],[41,26],[44,27],[46,29],[59,26],[47,27],[90,35],[44,27],[44,27],[41,26],[44,27]],"count":[[211,9]],"kept":[{"done":[0,0],"fresh":[7,6],"new":[203,2],"picked":[1,1]}],"min-error":[0.02734375],"time":82.18994140625,"type":"prune"},{"compiler":[[225,42]],"locations":[["(pow.f64 (cos.f64 delta) 2)",0.248378759768442,true],["(asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))",0.25702844383407,false],["(*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))",0.30306625976844204,true],["(fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))",0.6337525539182945,true]],"time":36.23095703125,"type":"localize"},{"count":[[3,76]],"series":[["(pow.f64 (cos.f64 delta) 2)","delta","-inf",0.14111328125],["(pow.f64 (cos.f64 delta) 2)","delta","inf",0.14697265625],["(pow.f64 (cos.f64 delta) 2)","delta","0",0.26806640625],["(*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","delta","-inf",0.192138671875],["(*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","delta","inf",0.208984375],["(*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","delta","0",0.255126953125],["(*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","theta","-inf",0.2060546875],["(*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","theta","inf",0.192138671875],["(*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","theta","0",0.296875],["(*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","phi1","-inf",0.195068359375],["(*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","phi1","inf",0.218017578125],["(*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","phi1","0",0.264892578125],["(fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","theta","-inf",0.385009765625],["(fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","theta","inf",1.742919921875],["(fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","theta","0",0.5439453125],["(fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","phi1","-inf",0.47216796875],["(fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","phi1","inf",2.592041015625],["(fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","phi1","0",0.490966796875],["(fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","delta","-inf",2.291015625],["(fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","delta","inf",2.359130859375],["(fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","delta","0",0.551025390625]],"time":14.467041015625,"type":"series"},{"count":[[3,156]],"inputs":[["(fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","(*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))","(pow.f64 (cos.f64 delta) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 delta) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 0) (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) (*.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))) (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) (*.f64 0 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (cos.f64 delta) 0) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (cos.f64 delta)) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))) (pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (cos.f64 delta) 2/3) (-.f64 (pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (*.f64 (cbrt.f64 (cos.f64 delta)) (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (+.f64 (cbrt.f64 (cos.f64 delta)) (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (-.f64 (pow.f64 (cos.f64 delta) 2/3) (*.f64 (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (cbrt.f64 (cos.f64 delta))))) (+.f64 (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (cbrt.f64 (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 2/3) (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (+.f64 (neg.f64 (cos.f64 delta)) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (neg.f64 (cos.f64 delta)) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cos.f64 delta) 2/3) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 (pow.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 2/3) (neg.f64 (sin.f64 phi1))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (cbrt.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 2/3) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (sin.f64 phi1))) (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 1 (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cbrt.f64 (neg.f64 (sin.f64 phi1)))) (pow.f64 (sin.f64 phi1) 2/3) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (neg.f64 (sin.f64 phi1)) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 delta)) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) 4) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 delta) 1 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 delta) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 delta)) (pow.f64 (cos.f64 delta) 2/3) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 0) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 0) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 0 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 (pow.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 2/3) (neg.f64 (sin.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (cbrt.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sin.f64 phi1))) (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))) (pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (neg.f64 (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cbrt.f64 (neg.f64 (sin.f64 phi1)))) (pow.f64 (sin.f64 phi1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 phi1)) (neg.f64 (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cbrt.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (neg.f64 (pow.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (neg.f64 (pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (-.f64 (cos.f64 (-.f64 phi1 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 (+.f64 phi1 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (cos.f64 (-.f64 phi1 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 (+.f64 phi1 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 delta delta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cos.f64 (+.f64 delta delta))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 0 (pow.f64 (sin.f64 delta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 delta) 2) 0) (pow.f64 (cos.f64 delta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 delta) 2) (*.f64 (pow.f64 (cos.f64 delta) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 1 (*.f64 1/2 (cos.f64 (+.f64 delta delta)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cos.f64 delta) 2)) (pow.f64 (cos.f64 delta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 delta) 2) (*.f64 0 (pow.f64 (cos.f64 delta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 delta delta))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (sin.f64 delta)) (sin.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (pow.f64 (sin.f64 delta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cos.f64 delta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (pow.f64 (sin.f64 delta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (pow.f64 (sin.f64 delta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 -1 (pow.f64 (sin.f64 delta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 delta) (cos.f64 delta))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 delta)) (pow.f64 (cos.f64 delta) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 delta)) (neg.f64 (cos.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cos.f64 delta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 delta) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cos.f64 delta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (cos.f64 delta))) (*.f64 1 (neg.f64 (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (cos.f64 delta)) 1) (*.f64 (neg.f64 (cos.f64 delta)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 delta) -1) (*.f64 (cos.f64 delta) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (cos.f64 delta)) -1) (*.f64 (neg.f64 (cos.f64 delta)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (sin.f64 delta)) (-.f64 1 (sin.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (sin.f64 delta)) (-.f64 -1 (sin.f64 delta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 (+.f64 delta delta)) (cos.f64 0)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (pow.f64 (cos.f64 delta) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (cos.f64 delta) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 delta)) (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 2/3 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (pow.f64 (cos.f64 delta) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 delta) 2/3) (cbrt.f64 (pow.f64 (cos.f64 delta) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cos.f64 delta)) (+.f64 2 1/3)) (pow.f64 (cbrt.f64 (cos.f64 delta)) (+.f64 2 1/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cos.f64 delta) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 delta delta)) (cos.f64 0)) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 delta delta)) (cos.f64 0)) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 delta delta)) (cos.f64 0)) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 delta delta)) (cos.f64 0)) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 1/2 3) (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 delta delta))) 3)) (+.f64 (*.f64 1/2 1/2) (-.f64 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 delta delta))) (*.f64 1/2 (cos.f64 (+.f64 delta delta)))) (*.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 delta delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (pow.f64 (sin.f64 delta) 2) 3)) (+.f64 1 (+.f64 (*.f64 (pow.f64 (sin.f64 delta) 2) (pow.f64 (sin.f64 delta) 2)) (pow.f64 (sin.f64 delta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 delta delta)) (cos.f64 0))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cos.f64 (+.f64 delta delta)) (cos.f64 0)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (+.f64 delta delta)) (cos.f64 0)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 delta delta)) (cos.f64 0)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 delta delta)) (cos.f64 0)) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 delta)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 delta) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (cos.f64 delta)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (cos.f64 delta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cos.f64 delta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cos.f64 delta) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 (sin.f64 delta) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 delta) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (pow.f64 (sin.f64 delta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (pow.f64 (sin.f64 delta) 2)))))))"]],"rules":[["egg-rr",65],["egg-rr",43],["egg-rr",48]],"time":40.010986328125,"type":"rewrite"},{"count":[[232,215]],"inputs":[["(+.f64 1 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (pow.f64 delta 2) (-.f64 (*.f64 1/2 (pow.f64 (sin.f64 phi1) 2)) 1/2)))))","(+.f64 1 (+.f64 (*.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (pow.f64 delta 2) (-.f64 (*.f64 1/2 (pow.f64 (sin.f64 phi1) 2)) 1/2))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(*.f64 (cos.f64 delta) (pow.f64 1 1/3))","(+.f64 (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (+.f64 (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (+.f64 (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (+.f64 (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/720 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (+.f64 (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))","(+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 delta) (pow.f64 phi1 4))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/720 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (pow.f64 (sin.f64 phi1) 2))","(+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sin.f64 phi1) 2) (pow.f64 delta 2))) (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sin.f64 phi1) 2) (pow.f64 delta 2))) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","1","(+.f64 (*.f64 -1 (pow.f64 delta 2)) 1)","(+.f64 (*.f64 -1 (pow.f64 delta 2)) (+.f64 1 (*.f64 1/3 (pow.f64 delta 4))))","(+.f64 (*.f64 -1 (pow.f64 delta 2)) (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 delta 4)) (*.f64 -2/45 (pow.f64 delta 6)))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 1 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)))","(-.f64 1 (pow.f64 (sin.f64 phi1) 2))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(+.f64 1 (neg.f64 (*.f64 (sin.f64 phi1) (+.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (pow.f64 delta 2) (-.f64 (*.f64 1/2 (pow.f64 (sin.f64 phi1) 2)) 1/2)))))","(+.f64 (neg.f64 (*.f64 (sin.f64 phi1) (+.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))) (+.f64 (*.f64 (*.f64 delta delta) (fma.f64 1/2 (pow.f64 (sin.f64 phi1) 2) -1/2)) 1))","(+.f64 1 (+.f64 (*.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (pow.f64 delta 2) (-.f64 (*.f64 1/2 (pow.f64 (sin.f64 phi1) 2)) 1/2))))))","(+.f64 1 (+.f64 (fma.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta)))) (neg.f64 (*.f64 (sin.f64 phi1) (+.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))) (*.f64 (*.f64 delta delta) (fma.f64 1/2 (pow.f64 (sin.f64 phi1) 2) -1/2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(*.f64 (cos.f64 delta) (pow.f64 1 1/3))","(cos.f64 delta)","(+.f64 (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 phi1) (*.f64 (sin.f64 delta) (cos.f64 theta)) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (+.f64 (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3))))","(-.f64 (fma.f64 (neg.f64 phi1) (*.f64 (sin.f64 delta) (cos.f64 theta)) (cos.f64 delta)) (*.f64 (cos.f64 delta) (*.f64 phi1 phi1)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (+.f64 (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))))","(fma.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 delta) (cos.f64 theta)) -2/3)) (pow.f64 phi1 3) (-.f64 (fma.f64 (neg.f64 phi1) (*.f64 (sin.f64 delta) (cos.f64 theta)) (cos.f64 delta)) (*.f64 (cos.f64 delta) (*.f64 phi1 phi1))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (+.f64 delta phi1)) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3))))","(fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (+.f64 delta phi1)) (fma.f64 (*.f64 1/2 (sin.f64 delta)) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1))) (cos.f64 delta)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (+.f64 (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))))","(fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (+.f64 delta phi1)) (fma.f64 (*.f64 1/2 (sin.f64 delta)) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1))) (fma.f64 (*.f64 -1/24 (sin.f64 delta)) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))) (cos.f64 delta))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/720 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (+.f64 (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3))))))","(fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (+.f64 delta phi1)) (fma.f64 (*.f64 1/720 (sin.f64 delta)) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))) (fma.f64 (*.f64 1/2 (sin.f64 delta)) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1))) (fma.f64 (*.f64 -1/24 (sin.f64 delta)) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))) (cos.f64 delta)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))","(*.f64 (neg.f64 phi1) (*.f64 (sin.f64 delta) (cos.f64 theta)))","(+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))","(neg.f64 (fma.f64 (cos.f64 delta) (*.f64 phi1 phi1) (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))))","(fma.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 delta) (cos.f64 theta)) -2/3)) (pow.f64 phi1 3) (neg.f64 (fma.f64 (cos.f64 delta) (*.f64 phi1 phi1) (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 delta) (pow.f64 phi1 4))) (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))))))","(fma.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 delta) (cos.f64 theta)) -2/3)) (pow.f64 phi1 3) (fma.f64 (neg.f64 (cos.f64 delta)) (*.f64 phi1 phi1) (fma.f64 1/3 (*.f64 (cos.f64 delta) (pow.f64 phi1 4)) (*.f64 (neg.f64 phi1) (*.f64 (sin.f64 delta) (cos.f64 theta))))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1)))))","(neg.f64 (*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))))","(fma.f64 (*.f64 1/2 (sin.f64 delta)) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1))) (neg.f64 (*.f64 (sin.f64 phi1) (sin.f64 (+.f64 delta phi1)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))))))","(fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (+.f64 delta phi1)) (fma.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1)))))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/720 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))))))","(fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (+.f64 delta phi1)) (fma.f64 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1)))) 1/720 (fma.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (pow.f64 (sin.f64 phi1) 2))","(neg.f64 (pow.f64 (sin.f64 phi1) 2))","(+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))","(neg.f64 (*.f64 (sin.f64 phi1) (+.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sin.f64 phi1) 2) (pow.f64 delta 2))) (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(fma.f64 1/2 (pow.f64 (*.f64 (sin.f64 phi1) delta) 2) (neg.f64 (*.f64 (sin.f64 phi1) (+.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sin.f64 phi1) 2) (pow.f64 delta 2))) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))))","(fma.f64 (pow.f64 (*.f64 (sin.f64 phi1) delta) 2) 1/2 (fma.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta)))) (neg.f64 (*.f64 (sin.f64 phi1) (+.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1)))","(*.f64 (neg.f64 (sin.f64 phi1)) (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))))","1","(+.f64 (*.f64 -1 (pow.f64 delta 2)) 1)","(-.f64 1 (*.f64 delta delta))","(+.f64 (*.f64 -1 (pow.f64 delta 2)) (+.f64 1 (*.f64 1/3 (pow.f64 delta 4))))","(-.f64 (fma.f64 (pow.f64 delta 4) 1/3 1) (*.f64 delta delta))","(+.f64 (*.f64 -1 (pow.f64 delta 2)) (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 delta 4)) (*.f64 -2/45 (pow.f64 delta 6)))))","(+.f64 (-.f64 1 (*.f64 delta delta)) (fma.f64 1/3 (pow.f64 delta 4) (*.f64 -2/45 (pow.f64 delta 6))))"]],"time":257.93310546875,"type":"simplify"},{"compiler":[[10453,2360]],"time":52.54296875,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (neg.f64 (pow.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3)) (cos.f64 delta))))","fresh",18.88544699137746],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (pow.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 3) 1/3)))","fresh",14.66485109071156],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (+.f64 (-.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (*.f64 delta delta) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 (cos.f64 phi1) (cos.f64 phi1)))))","fresh",10.81541145851284],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (*.f64 (+.f64 1 (sin.f64 delta)) (-.f64 1 (sin.f64 delta)))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))","fresh",0.2365161858888976],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))","done",0.1689077092018246],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))","next",0.19652641751390038],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (*.f64 (sin.f64 delta) (cbrt.f64 (sin.f64 theta))) (cbrt.f64 (pow.f64 (sin.f64 theta) 2))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","fresh",0.6652420827326404],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 theta) (sin.f64 delta))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 2))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","fresh",2.1484946250431163]],"compiler":[[59,26],[41,26],[46,29],[49,30],[44,27],[66,40],[44,27],[47,27],[59,26],[41,26],[46,29],[49,30],[66,40],[44,27],[47,27]],"count":[[245,8]],"kept":[{"done":[1,1],"fresh":[7,4],"new":[236,3],"picked":[1,0]}],"min-error":[0.0234375],"time":110.949951171875,"type":"prune"},{"compiler":[[390,130]],"locations":[["(*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))",0.30306625976844204,false],["(pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4)",0.3777314453688404,true],["(pow.f64 (cos.f64 delta) 4)",0.3972626953688405,true],["(fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))",0.6337525539182945,true]],"time":68.63916015625,"type":"localize"},{"count":[[3,52]],"series":[["(pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4)","delta","-inf",7.662841796875],["(pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4)","delta","inf",16.64404296875],["(pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4)","delta","0",0.488037109375],["(pow.f64 (cos.f64 delta) 4)","delta","-inf",0.386962890625],["(pow.f64 (cos.f64 delta) 4)","delta","inf",0.39990234375],["(pow.f64 (cos.f64 delta) 4)","delta","0",0.2490234375],["(fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","theta","-inf",0.261962890625],["(fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","theta","inf",0.403076171875],["(fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","theta","0",8.12109375],["(fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","phi1","-inf",0.252197265625],["(fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","phi1","inf",0.49609375],["(fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","phi1","0",7.48388671875],["(fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","delta","-inf",0.573974609375],["(fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","delta","inf",2.513916015625],["(fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","delta","0",28.406005859375]],"time":74.767822265625,"type":"series"},{"count":[[3,107]],"inputs":[["(fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))","(pow.f64 (cos.f64 delta) 4)","(pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) (*.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) 0) (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) (*.f64 0 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))) (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))) 0) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))) (pow.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) 2/3) (cbrt.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))) 1 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (*.f64 (pow.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 2/3) (neg.f64 (sin.f64 phi1))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 1 (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cbrt.f64 (neg.f64 (sin.f64 phi1)))) (pow.f64 (sin.f64 phi1) 2/3) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (neg.f64 (sin.f64 phi1)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (sin.f64 phi1))) (*.f64 (pow.f64 (sin.f64 phi1) 2/3) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (cbrt.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (pow.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3) (cbrt.f64 (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta)))) 2) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)))) (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2))) 2/3) (cbrt.f64 (cos.f64 delta))) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2)) (cbrt.f64 (cbrt.f64 (cos.f64 delta)))) (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2))) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 8) (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2))) 4)))) (cbrt.f64 (cos.f64 delta))) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 delta)) (cbrt.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) (+.f64 1/3 2)))) 2) (cos.f64 delta))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 delta) 4) (*.f64 (pow.f64 (cos.f64 delta) 4) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 delta) 4) 0) (pow.f64 (cos.f64 delta) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 delta) 4) (*.f64 0 (pow.f64 (cos.f64 delta) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cos.f64 delta) 4)) (pow.f64 (cos.f64 delta) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cos.f64 delta) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 delta) 2)) (neg.f64 (pow.f64 (cos.f64 delta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 delta) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cos.f64 delta) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 delta) 2) (pow.f64 (cos.f64 delta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 8) (cbrt.f64 (pow.f64 (cos.f64 delta) 8))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cos.f64 delta) 2) -1) (*.f64 (pow.f64 (cos.f64 delta) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (cos.f64 delta) 2)) -1) (*.f64 (neg.f64 (pow.f64 (cos.f64 delta) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (cos.f64 delta) 2)) 1) (*.f64 (neg.f64 (pow.f64 (cos.f64 delta) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (pow.f64 (cos.f64 delta) 2))) (*.f64 -1 (neg.f64 (pow.f64 (cos.f64 delta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (pow.f64 (cos.f64 delta) 2))) (*.f64 1 (neg.f64 (pow.f64 (cos.f64 delta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cbrt.f64 (pow.f64 (cos.f64 delta) 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 8)) (cbrt.f64 (pow.f64 (cos.f64 delta) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cos.f64 delta) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 delta) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 4) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 4) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (cos.f64 delta) 2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cos.f64 delta) 4) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cos.f64 delta) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (cos.f64 delta) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cos.f64 delta) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cos.f64 delta) 4) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))) 0) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))) (*.f64 0 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)))) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3))) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta)))) (+.f64 2 3)) (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta)))) (+.f64 2 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3))) -1) (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) -1) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3))) 1) (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)))) (*.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)))) (*.f64 1 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 delta)) (cbrt.f64 (cbrt.f64 (cos.f64 delta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 8)) (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 delta)) (*.f64 2 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 delta)) (+.f64 1 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 delta)) (+.f64 2/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 delta) 2/3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2/3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)))))))"]],"rules":[["egg-rr",33],["egg-rr",30],["egg-rr",44]],"time":45.6630859375,"type":"rewrite"},{"count":[[159,147]],"inputs":[["(+.f64 1 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (pow.f64 delta 2) (-.f64 (*.f64 1/2 (pow.f64 (sin.f64 phi1) 2)) 1/2)))))","(+.f64 1 (+.f64 (*.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (pow.f64 delta 2) (-.f64 (*.f64 1/2 (pow.f64 (sin.f64 phi1) 2)) 1/2))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(*.f64 (cos.f64 delta) (pow.f64 1 1/3))","(+.f64 (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (+.f64 (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (+.f64 (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (+.f64 (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/720 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (+.f64 (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","1","(+.f64 1 (*.f64 -2 (pow.f64 delta 2)))","(+.f64 (*.f64 5/3 (pow.f64 delta 4)) (+.f64 1 (*.f64 -2 (pow.f64 delta 2))))","(+.f64 (*.f64 5/3 (pow.f64 delta 4)) (+.f64 1 (+.f64 (*.f64 -2 (pow.f64 delta 2)) (*.f64 -34/45 (pow.f64 delta 6)))))","1","(+.f64 (*.f64 -2/9 (pow.f64 delta 2)) 1)","(+.f64 (*.f64 -2/9 (pow.f64 delta 2)) (+.f64 1 (*.f64 -1/81 (pow.f64 delta 4))))","(+.f64 (*.f64 -2/9 (pow.f64 delta 2)) (+.f64 1 (+.f64 (*.f64 -38/10935 (pow.f64 delta 6)) (*.f64 -1/81 (pow.f64 delta 4)))))","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)"]],"method":["egg-herbie"],"outputs":[["(+.f64 1 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)))","(-.f64 1 (pow.f64 (sin.f64 phi1) 2))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(+.f64 1 (neg.f64 (*.f64 (sin.f64 phi1) (+.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (pow.f64 delta 2) (-.f64 (*.f64 1/2 (pow.f64 (sin.f64 phi1) 2)) 1/2)))))","(+.f64 (neg.f64 (*.f64 (sin.f64 phi1) (+.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))) (+.f64 (*.f64 (*.f64 delta delta) (fma.f64 1/2 (pow.f64 (sin.f64 phi1) 2) -1/2)) 1))","(+.f64 1 (+.f64 (*.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta))))) (+.f64 (*.f64 -1 (pow.f64 (sin.f64 phi1) 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (pow.f64 delta 2) (-.f64 (*.f64 1/2 (pow.f64 (sin.f64 phi1) 2)) 1/2))))))","(+.f64 1 (fma.f64 1/6 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 (pow.f64 delta 3) (cos.f64 theta)))) (+.f64 (neg.f64 (*.f64 (sin.f64 phi1) (+.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta)))))) (*.f64 (*.f64 delta delta) (fma.f64 1/2 (pow.f64 (sin.f64 phi1) 2) -1/2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(*.f64 (cos.f64 delta) (pow.f64 1 1/3))","(cos.f64 delta)","(+.f64 (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 phi1) (*.f64 (sin.f64 delta) (cos.f64 theta)) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (+.f64 (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3))))","(-.f64 (fma.f64 (neg.f64 phi1) (*.f64 (sin.f64 delta) (cos.f64 theta)) (cos.f64 delta)) (*.f64 (cos.f64 delta) (*.f64 phi1 phi1)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 delta) (cos.f64 theta))) (*.f64 -1/6 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (pow.f64 phi1 3))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 delta) (pow.f64 phi1 2))) (+.f64 (*.f64 -1 (*.f64 phi1 (*.f64 (sin.f64 delta) (cos.f64 theta)))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))))","(fma.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 delta) (cos.f64 theta)) -2/3)) (pow.f64 phi1 3) (-.f64 (fma.f64 (neg.f64 phi1) (*.f64 (sin.f64 delta) (cos.f64 theta)) (cos.f64 delta)) (*.f64 (cos.f64 delta) (*.f64 phi1 phi1))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (+.f64 delta phi1)) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3))))","(fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (+.f64 delta phi1)) (fma.f64 (*.f64 1/2 (sin.f64 delta)) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1))) (cos.f64 delta)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (+.f64 (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))))","(fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (+.f64 delta phi1)) (fma.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) (fma.f64 (*.f64 -1/24 (sin.f64 delta)) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))) (cos.f64 delta))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 phi1) (+.f64 (*.f64 (sin.f64 delta) (cos.f64 phi1)) (*.f64 (cos.f64 delta) (sin.f64 phi1))))) (+.f64 (*.f64 1/720 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1))))) (+.f64 (*.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 2) (cos.f64 phi1))))) (+.f64 (*.f64 -1/24 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3))))))","(fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (+.f64 delta phi1)) (fma.f64 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 6) (cos.f64 phi1)))) 1/720 (fma.f64 1/2 (*.f64 (sin.f64 delta) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 theta theta) (cos.f64 phi1)))) (fma.f64 (*.f64 -1/24 (sin.f64 delta)) (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 theta 4) (cos.f64 phi1))) (cos.f64 delta)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 (cos.f64 delta) (sin.f64 phi1)) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta)))) (sin.f64 phi1))) (*.f64 (cos.f64 delta) (pow.f64 1 1/3)))","(fma.f64 (neg.f64 (fma.f64 (cos.f64 delta) (sin.f64 phi1) (*.f64 (sin.f64 delta) (*.f64 (cos.f64 phi1) (cos.f64 theta))))) (sin.f64 phi1) (cos.f64 delta))","1","(+.f64 1 (*.f64 -2 (pow.f64 delta 2)))","(fma.f64 -2 (*.f64 delta delta) 1)","(+.f64 (*.f64 5/3 (pow.f64 delta 4)) (+.f64 1 (*.f64 -2 (pow.f64 delta 2))))","(fma.f64 5/3 (pow.f64 delta 4) (fma.f64 -2 (*.f64 delta delta) 1))","(+.f64 (*.f64 5/3 (pow.f64 delta 4)) (+.f64 1 (+.f64 (*.f64 -2 (pow.f64 delta 2)) (*.f64 -34/45 (pow.f64 delta 6)))))","(+.f64 (fma.f64 5/3 (pow.f64 delta 4) 1) (fma.f64 -34/45 (pow.f64 delta 6) (*.f64 -2 (*.f64 delta delta))))","1","(+.f64 (*.f64 -2/9 (pow.f64 delta 2)) 1)","(fma.f64 -2/9 (*.f64 delta delta) 1)","(+.f64 (*.f64 -2/9 (pow.f64 delta 2)) (+.f64 1 (*.f64 -1/81 (pow.f64 delta 4))))","(fma.f64 -2/9 (*.f64 delta delta) (fma.f64 (pow.f64 delta 4) -1/81 1))","(+.f64 (*.f64 -2/9 (pow.f64 delta 2)) (+.f64 1 (+.f64 (*.f64 -38/10935 (pow.f64 delta 6)) (*.f64 -1/81 (pow.f64 delta 4)))))","(+.f64 (fma.f64 -2/9 (*.f64 delta delta) 1) (fma.f64 -38/10935 (pow.f64 delta 6) (*.f64 -1/81 (pow.f64 delta 4))))","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)","(pow.f64 (pow.f64 (cos.f64 delta) 4) 1/9)"]],"time":181.22705078125,"type":"simplify"},{"compiler":[[15966,5507]],"time":98.201904296875,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (neg.f64 (pow.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3)) (cos.f64 delta))))","fresh",18.88544699137746],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (pow.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 3) 1/3)))","fresh",14.66485109071156],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (+.f64 (-.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (*.f64 delta delta) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 (cos.f64 phi1) (cos.f64 phi1)))))","fresh",10.81541145851284],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (*.f64 (+.f64 1 (sin.f64 delta)) (-.f64 1 (sin.f64 delta)))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))","fresh",0.2365161858888976],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))","done",0.1689077092018246],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))","done",0.19652641751390038],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (*.f64 (sin.f64 delta) (cbrt.f64 (sin.f64 theta))) (cbrt.f64 (pow.f64 (sin.f64 theta) 2))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","fresh",0.6652420827326404],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 theta) (sin.f64 delta))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 2))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","fresh",2.1484946250431163]],"compiler":[[59,26],[41,26],[46,29],[49,30],[44,27],[66,40],[44,27],[47,27]],"count":[[261,8]],"kept":[{"done":[1,1],"fresh":[6,6],"new":[253,0],"picked":[1,1]}],"min-error":[0.0234375],"time":119.361083984375,"type":"prune"},{"accuracy":[0.16831394711805486],"baseline":[0.16831394711805486],"branch":[["lambda1",0.16831394711805486,1],["phi1",0.16831394711805486,1],["phi2",0.16831394711805486,1],["delta",0.16831394711805486,1],["theta",0.16831394711805492,1],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta)))))))))",0.16831394711805486,1],["(atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta))))))))",0.16831394711805486,1]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[38,23],[36,22],[666,167]],"count":[[15,1]],"inputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (pow.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (cos.f64 delta)) 3) 1/3)))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (*.f64 (+.f64 1 (sin.f64 delta)) (-.f64 1 (sin.f64 delta)))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 delta))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 4)) (cos.f64 delta)))))) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (+.f64 (-.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (*.f64 delta delta) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 (cos.f64 phi1) (cos.f64 phi1)))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))) (neg.f64 (pow.f64 (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) 2/3)) (cos.f64 delta))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (+.f64 (-.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi1) (*.f64 delta (cos.f64 theta))))) (*.f64 (*.f64 delta delta) (+.f64 1/2 (*.f64 -1/2 (pow.f64 (sin.f64 phi1) 2))))) (*.f64 (cos.f64 phi1) (cos.f64 phi1)))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 theta) (sin.f64 delta))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) 2))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (*.f64 (+.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)) 2)) (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))) (-.f64 (cbrt.f64 (cos.f64 delta)) (cbrt.f64 (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 theta)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 theta) 2)) (sin.f64 delta))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (cbrt.f64 (pow.f64 (cos.f64 delta) 2)) (cbrt.f64 (cos.f64 delta)) (*.f64 (neg.f64 (sin.f64 phi1)) (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (pow.f64 (pow.f64 (fma.f64 (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (sin.f64 phi1) (cos.f64 delta)) 3) 1/3)))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (*.f64 (sin.f64 delta) (cbrt.f64 (sin.f64 theta))) (cbrt.f64 (pow.f64 (sin.f64 theta) 2))) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta)))))))))"]],"link":["."],"name":["Destination given bearing on a great circle"],"oracle":[30.672334173446316],"outputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))"]],"time":52.660888671875,"times":[["lambda1",5.4638671875],["phi1",5.366943359375],["phi2",5.517822265625],["delta",9.1201171875],["theta",5.48193359375],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta)))))))))",5.804931640625],["(atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 phi1) (sin.f64 (asin.f64 (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 delta)) (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 delta)) (cos.f64 theta))))))))",5.2158203125]],"type":"regimes"},{"compiler":[[37,22]],"inputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (-.f64 (cos.f64 delta) (*.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta))))) (sin.f64 phi1)))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (sin.f64 theta) (sin.f64 delta)) (cos.f64 phi1)) (fma.f64 (sin.f64 phi1) (neg.f64 (sin.f64 (asin.f64 (fma.f64 (cos.f64 theta) (*.f64 (cos.f64 phi1) (sin.f64 delta)) (*.f64 (sin.f64 phi1) (cos.f64 delta)))))) (cos.f64 delta))))"]],"stop":[["fuel",1]],"time":23.900146484375,"type":"simplify"},{"time":0.014892578125,"type":"soundness"},{"compiler":[[37,22]],"remove-preprocessing":[[]],"time":14.192138671875,"type":"end"}]